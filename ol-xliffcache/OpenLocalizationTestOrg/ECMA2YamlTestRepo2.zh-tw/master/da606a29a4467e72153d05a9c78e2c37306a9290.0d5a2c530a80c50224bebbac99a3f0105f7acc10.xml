{"nodes":[{"pos":[1940,2046],"content":"Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.","pos":[0,106]}]},{"pos":[2059,6095],"content":"The ResXResourceReader class provides a default implementation of the <xref:System.Resources.IResourceReader> interface that reads resource information in an XML format. To read resource information from a binary resource format, use the <xref:System.Resources.ResourceReader> class.       You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (<xref:System.Collections.IDictionaryEnumerator>) that is returned by the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method. You call the methods provided by <xref:System.Collections.IDictionaryEnumerator> to advance to the next resource and to read the name and value of each resource in the .resx file.      > [!NOTE] >  The ResXResourceReader class provides two enumerators. The <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method returns an <xref:System.Collections.IDictionaryEnumerator> object; we recommend that you use this method to enumerate resources. The <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName> method is an explicit interface implementation that returns an <xref:System.Collections.IEnumerator> object; we do not recommend its use.       The following example uses the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.       [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)]  [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)]       If the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is `true`, the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> property is a <xref:System.Resources.ResXDataNode> object rather than the resource value. This makes a resource item's comment available from the <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> property. The following example sets the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property to `true` and enumerates the resources in a .resx file,       [!code-cs[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)]  [!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)]       If <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> is `true`, the <xref:System.Resources.ResXDataNode> items in the enumeration can be either:      -   Named resources along with their data. In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property is `null`.      -   Named resources along with the name of the file that contains the resource data. In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property returns a <xref:System.Resources.ResXFileRef> object that provides information about the resource, including its filename. If relative file names are used, you should always set the <xref:System.Resources.ResXResourceReader.BasePath%2A> property to provide a reference point for the relative file path.       If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <xref:System.Resources.ResXResourceSet> object and call its `GetString` and `GetObject` methods.      > [!NOTE] >  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ResXResourceReader class provides a default implementation of the &lt;xref:System.Resources.IResourceReader&gt; interface that reads resource information in an XML format.","pos":[0,169],"source":"The ResXResourceReader class provides a default implementation of the <xref:System.Resources.IResourceReader> interface that reads resource information in an XML format."},{"content":"To read resource information from a binary resource format, use the &lt;xref:System.Resources.ResourceReader&gt; class.","pos":[170,283],"source":" To read resource information from a binary resource format, use the <xref:System.Resources.ResourceReader> class."},{"content":"You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) that is returned by the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method.","pos":[290,546],"source":"       You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (<xref:System.Collections.IDictionaryEnumerator>) that is returned by the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method."},{"content":"You call the methods provided by &lt;xref:System.Collections.IDictionaryEnumerator&gt; to advance to the next resource and to read the name and value of each resource in the .resx file.","pos":[547,726],"source":" You call the methods provided by <xref:System.Collections.IDictionaryEnumerator> to advance to the next resource and to read the name and value of each resource in the .resx file."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The ResXResourceReader class provides two enumerators.","pos":[732,799],"source":"      > [!NOTE] >  The ResXResourceReader class provides two enumerators."},{"content":"The &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object; we recommend that you use this method to enumerate resources.","pos":[800,1024],"source":" The <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method returns an <xref:System.Collections.IDictionaryEnumerator> object; we recommend that you use this method to enumerate resources."},{"content":"The &lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt; method is an explicit interface implementation that returns an &lt;xref:System.Collections.IEnumerator&gt; object; we do not recommend its use.","pos":[1025,1288],"source":" The <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName> method is an explicit interface implementation that returns an <xref:System.Collections.IEnumerator> object; we do not recommend its use."},{"content":"The following example uses the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method to obtain an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that is used to enumerate the resources in a .resx file.","pos":[1295,1517],"source":"       The following example uses the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file."},{"content":"The example includes a <ph id=\"ph1\">`CreateResourceFile`</ph> routine that creates the necessary resource file.","pos":[1518,1611],"source":" The example includes a `CreateResourceFile` routine that creates the necessary resource file."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id=\"p2\">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id=\"p4\">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept><ept id=\"p3\">]</ept>       If the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the value of the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property is a &lt;xref:System.Resources.ResXDataNode&gt; object rather than the resource value.","pos":[1618,2136],"source":"[!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)]  [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)]       If the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is `true`, the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> property is a <xref:System.Resources.ResXDataNode> object rather than the resource value."},{"content":"This makes a resource item's comment available from the &lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt; property.","pos":[2137,2275],"source":" This makes a resource item's comment available from the <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> property."},{"content":"The following example sets the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property to <ph id=\"ph1\">`true`</ph> and enumerates the resources in a .resx file,       <bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id=\"p2\">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id=\"p4\">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept><ept id=\"p3\">]</ept>       If &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; is <ph id=\"ph2\">`true`</ph>, the &lt;xref:System.Resources.ResXDataNode&gt; items in the enumeration can be either:      -   Named resources along with their data.","pos":[2276,2886],"source":" The following example sets the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property to `true` and enumerates the resources in a .resx file,       [!code-cs[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)]  [!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)]       If <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> is `true`, the <xref:System.Resources.ResXDataNode> items in the enumeration can be either:      -   Named resources along with their data."},{"content":"In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[2887,2997],"source":" In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property is `null`."},{"content":"-   Named resources along with the name of the file that contains the resource data.","pos":[3003,3087]},{"content":"In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property returns a &lt;xref:System.Resources.ResXFileRef&gt; object that provides information about the resource, including its filename.","pos":[3088,3310],"source":" In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property returns a <xref:System.Resources.ResXFileRef> object that provides information about the resource, including its filename."},{"content":"If relative file names are used, you should always set the &lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt; property to provide a reference point for the relative file path.","pos":[3311,3490],"source":" If relative file names are used, you should always set the <xref:System.Resources.ResXResourceReader.BasePath%2A> property to provide a reference point for the relative file path."},{"content":"If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a &lt;xref:System.Resources.ResXResourceSet&gt; object and call its <ph id=\"ph1\">`GetString`</ph> and <ph id=\"ph2\">`GetObject`</ph> methods.","pos":[3497,3712],"source":"       If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <xref:System.Resources.ResXResourceSet> object and call its `GetString` and `GetObject` methods."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members.","pos":[3718,3856],"source":"      > [!NOTE] >  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members."},{"content":"A &lt;xref:System.Security.SecurityException&gt; exception is thrown when either the immediate caller or the derived class does not have full-trust permission.","pos":[3857,4010],"source":" A <xref:System.Security.SecurityException> exception is thrown when either the immediate caller or the derived class does not have full-trust permission."}]},{"pos":[7548,7670],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified stream.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified stream."},{"pos":[8043,8083],"content":"An input stream that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"An input stream that contains resources.","pos":[0,40]}]},{"pos":[8636,8779],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.IO.TextReader&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified <xref:System.IO.TextReader>."},{"pos":[8945,8989],"content":"A text input stream that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"A text input stream that contains resources.","pos":[0,44]}]},{"pos":[9516,9645],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified resource file.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified resource file."},{"pos":[10400,10438],"content":"The path of the resource file to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of the resource file to read.","pos":[0,38]}]},{"pos":[11144,11293],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an input stream and a type resolution service.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using an input stream and a type resolution service."},{"pos":[11517,11557],"content":"An input stream that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"An input stream that contains resources.","pos":[0,40]}]},{"pos":[11664,11723],"content":"An object that resolves type names specified in a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that resolves type names specified in a resource.","pos":[0,59]}]},{"pos":[12367,12510],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a stream and an array of assembly names.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a stream and an array of assembly names."},{"pos":[12716,12756],"content":"An input stream that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"An input stream that contains resources.","pos":[0,40]}]},{"pos":[12845,13023],"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","pos":[0,178],"nodes":[{"content":"An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.","pos":[0,96],"source":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies."},{"content":"The assemblies are used to resolve a type name in the resource to an actual type.","pos":[97,178]}]}]},{"pos":[13749,13903],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a text stream reader and a type resolution service.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a text stream reader and a type resolution service."},{"pos":[14135,14180],"content":"A text stream reader that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"A text stream reader that contains resources.","pos":[0,45]}]},{"pos":[14287,14346],"content":"An object that resolves type names specified in a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that resolves type names specified in a resource.","pos":[0,59]}]},{"pos":[15010,15181],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a &lt;xref:System.IO.TextReader&gt; object and an array of assembly names.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a <xref:System.IO.TextReader> object and an array of assembly names."},{"pos":[15395,15450],"content":"An object used to read resources from a stream of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object used to read resources from a stream of text.","pos":[0,55]}]},{"pos":[15539,15717],"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","pos":[0,178],"nodes":[{"content":"An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.","pos":[0,96],"source":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies."},{"content":"The assemblies are used to resolve a type name in the resource to an actual type.","pos":[97,178]}]}]},{"pos":[16417,16562],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a file name and a type resolution service.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a file name and a type resolution service."},{"pos":[16777,16834],"content":"The name of an XML resource file that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of an XML resource file that contains resources.","pos":[0,57]}]},{"pos":[16941,17000],"content":"An object that resolves type names specified in a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that resolves type names specified in a resource.","pos":[0,59]}]},{"pos":[17638,17798],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an XML resource file name and an array of assembly names.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using an XML resource file name and an array of assembly names."},{"pos":[17995,18052],"content":"The name of an XML resource file that contains resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of an XML resource file that contains resources.","pos":[0,57]}]},{"pos":[18141,18319],"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","pos":[0,178],"nodes":[{"content":"An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.","pos":[0,96],"source":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies."},{"content":"The assemblies are used to resolve a type name in the resource to an actual type.","pos":[97,178]}]}]},{"pos":[18763,18889],"content":"Gets or sets the base path for the relative file path specified in a <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXFileRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the base path for the relative file path specified in a <xref href=\"System.Resources.ResXFileRef\"></xref> object."},{"pos":[18901,19434],"content":"The BasePath property is used to resolve relative file path references that are assigned to the <xref:System.Resources.ResXFileRef.FileName%2A> property of <xref:System.Resources.ResXFileRef> objects.  By default, its value is <xref:System.String.Empty?displayProperty=fullName>, and relative file path references are resolved in relationship to the current directory returned by the <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> property. You should set this property before you begin enumerating resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The BasePath property is used to resolve relative file path references that are assigned to the <xref:System.Resources.ResXFileRef.FileName%2A> property of <xref:System.Resources.ResXFileRef> objects.  By default, its value is <xref:System.String.Empty?displayProperty=fullName>, and relative file path references are resolved in relationship to the current directory returned by the <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> property. You should set this property before you begin enumerating resources.","pos":[0,533],"nodes":[{"content":"The BasePath property is used to resolve relative file path references that are assigned to the &lt;xref:System.Resources.ResXFileRef.FileName%2A&gt; property of &lt;xref:System.Resources.ResXFileRef&gt; objects.","pos":[0,200],"source":"The BasePath property is used to resolve relative file path references that are assigned to the <xref:System.Resources.ResXFileRef.FileName%2A> property of <xref:System.Resources.ResXFileRef> objects."},{"content":"By default, its value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;, and relative file path references are resolved in relationship to the current directory returned by the &lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; property.","pos":[202,464],"source":"  By default, its value is <xref:System.String.Empty?displayProperty=fullName>, and relative file path references are resolved in relationship to the current directory returned by the <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> property."},{"content":"You should set this property before you begin enumerating resources.","pos":[465,533]}]}]},{"pos":[20523,20691],"content":"A path that, if prepended to the relative file path specified in a <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXFileRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, yields an absolute path to a resource file.","needQuote":true,"needEscape":true,"source":"A path that, if prepended to the relative file path specified in a <xref href=\"System.Resources.ResXFileRef\"></xref> object, yields an absolute path to a resource file."},{"pos":[20874,20992],"content":"In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.","pos":[0,118]}]},{"pos":[21353,21445],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref>."},{"pos":[21457,21697],"content":"Calling Close enables the resources used by the <xref:System.Resources.ResXResourceReader> to be reallocated for other purposes. For more information about Close, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling Close enables the resources used by the &lt;xref:System.Resources.ResXResourceReader&gt; to be reallocated for other purposes.","pos":[0,128],"source":"Calling Close enables the resources used by the <xref:System.Resources.ResXResourceReader> to be reallocated for other purposes."},{"content":"For more information about Close, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[129,240],"source":" For more information about Close, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[22821,22969],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref> and optionally releases the managed resources."},{"pos":[22982,23653],"content":"This method can be called by either the <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> method or the <xref:System.Object.Finalize%2A?displayProperty=fullName> method. <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> invokes this method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Resources.ResXResourceReader> references. This method invokes the `Dispose` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be called by either the &lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; method or the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.","pos":[0,196],"source":"This method can be called by either the <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> method or the <xref:System.Object.Finalize%2A?displayProperty=fullName> method."},{"content":"&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; invokes this method with the <ph id=\"ph1\">`disposing`</ph> parameter set to <ph id=\"ph2\">`true`</ph>.","pos":[197,339],"source":" <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> invokes this method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes this method with <ph id=\"ph1\">`disposing`</ph> set to <ph id=\"ph2\">`false`</ph>.","pos":[340,425],"source":" <xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceReader&gt; references.","pos":[432,601],"source":"       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Resources.ResXResourceReader> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[602,669],"source":" This method invokes the `Dispose` method of each referenced object."}]},{"pos":[23809,24018],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[24468,24532],"content":"This member overrides the <xref:System.Object.Finalize*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member overrides the &lt;xref:System.Object.Finalize*&gt; method.","pos":[0,64],"source":"This member overrides the <xref:System.Object.Finalize*> method."}]},{"pos":[25137,25306],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file."},{"pos":[25504,25559],"content":"A string containing XML resource-formatted information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing XML resource-formatted information.","pos":[0,55]}]},{"pos":[25639,25712],"content":"An object that reads resources from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileContents</ph><ept id=\"p1\">&lt;/code&gt;</ept> string.","needQuote":true,"needEscape":true,"source":"An object that reads resources from the <code>fileContents</code> string."},{"pos":[26432,26742],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.ITypeResolutionService\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to resolve type names specified in a resource.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <xref href=\"System.ComponentModel.Design.ITypeResolutionService\"></xref> object to resolve type names specified in a resource."},{"pos":[27006,27061],"content":"A string containing XML resource-formatted information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing XML resource-formatted information.","pos":[0,55]}]},{"pos":[27168,27227],"content":"An object that resolves type names specified in a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that resolves type names specified in a resource.","pos":[0,59]}]},{"pos":[27307,27380],"content":"An object that reads resources from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileContents</ph><ept id=\"p1\">&lt;/code&gt;</ept> string.","needQuote":true,"needEscape":true,"source":"An object that reads resources from the <code>fileContents</code> string."},{"pos":[28038,28323],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of &lt;xref:System.Reflection.AssemblyName&gt; objects to resolve type names specified in a resource.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <xref:System.Reflection.AssemblyName> objects to resolve type names specified in a resource."},{"pos":[28569,28633],"content":"A string whose contents are in the form of an XML resource file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string whose contents are in the form of an XML resource file.","pos":[0,64]}]},{"pos":[28722,28900],"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.","pos":[0,178],"nodes":[{"content":"An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.","pos":[0,96],"source":"An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies."},{"content":"The assemblies are used to resolve a type name in the resource to an actual type.","pos":[97,178]}]}]},{"pos":[28980,29053],"content":"An object that reads resources from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileContents</ph><ept id=\"p1\">&lt;/code&gt;</ept> string.","needQuote":true,"needEscape":true,"source":"An object that reads resources from the <code>fileContents</code> string."},{"pos":[29537,29639],"content":"Returns an enumerator for the current <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an enumerator for the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object."},{"pos":[29651,30114],"content":"The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref:System.Resources.ResXResourceReader> object. However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetEnumerator, the resource items are retrieved as <xref:System.Resources.ResXDataNode> objects. In this case, all resource nodes are returned regardless of type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.","pos":[0,179],"source":"The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref:System.Resources.ResXResourceReader> object."},{"content":"However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> before you call GetEnumerator, the resource items are retrieved as &lt;xref:System.Resources.ResXDataNode&gt; objects.","pos":[180,397],"source":" However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetEnumerator, the resource items are retrieved as <xref:System.Resources.ResXDataNode> objects."},{"content":"In this case, all resource nodes are returned regardless of type.","pos":[398,463]}]},{"pos":[30838,30928],"content":"An enumerator for the current <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An enumerator for the current <xref href=\"System.Resources.ResourceReader\"></xref> object."},{"pos":[31449,31572],"content":"Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.","pos":[0,123]}]},{"pos":[31584,32202],"content":"Resources are stored as name/value pairs in a resource file or stream. Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources. The GetMetadataEnumerator method provides an <xref:System.Collections.IDictionaryEnumerator> object that can retrieve the metadata from the resource file or stream associated with the current <xref:System.Resources.ResXResourceReader> object. However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetMetadataEnumerator, no resource nodes are retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resources are stored as name/value pairs in a resource file or stream.","pos":[0,70]},{"content":"Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.","pos":[71,198]},{"content":"The GetMetadataEnumerator method provides an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that can retrieve the metadata from the resource file or stream associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.","pos":[199,441],"source":" The GetMetadataEnumerator method provides an <xref:System.Collections.IDictionaryEnumerator> object that can retrieve the metadata from the resource file or stream associated with the current <xref:System.Resources.ResXResourceReader> object."},{"content":"However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> before you call GetMetadataEnumerator, no resource nodes are retrieved.","pos":[442,618],"source":" However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetMetadataEnumerator, no resource nodes are retrieved."}]},{"pos":[33047,33092],"content":"An enumerator for the metadata in a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator for the metadata in a resource.","pos":[0,45]}]},{"pos":[33750,33988],"content":"Returns an enumerator for the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object. For a description of this member, see the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator for the current <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,102],"source":"Returns an enumerator for the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object."},{"content":"For a description of this member, see the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[103,238],"source":" For a description of this member, see the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; method."}]},{"pos":[34000,34479],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface. To enumerate the resources in a .resx file, we recommend that you call the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method, and then call the `MoveNext` method on the returned <xref:System.Collections.IDictionaryEnumerator> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.","pos":[60,203],"source":" It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface."},{"content":"To enumerate the resources in a .resx file, we recommend that you call the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method, and then call the <ph id=\"ph1\">`MoveNext`</ph> method on the returned &lt;xref:System.Collections.IDictionaryEnumerator&gt; object.","pos":[204,479],"source":" To enumerate the resources in a .resx file, we recommend that you call the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method, and then call the `MoveNext` method on the returned <xref:System.Collections.IDictionaryEnumerator> object."}]},{"pos":[34657,34854],"content":"An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object."},{"pos":[35445,35711],"content":"Releases the unmanaged resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref> and optionally releases the managed resources. For a description of this member, see the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXResourceReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","pos":[0,148],"source":"Releases the unmanaged resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref> and optionally releases the managed resources."},{"content":"For a description of this member, see the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[149,266],"source":" For a description of this member, see the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method."}]},{"pos":[35723,35914],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.IDisposable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,191],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.IDisposable&gt; interface.","pos":[60,191],"source":" It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.IDisposable> interface."}]}]},{"pos":[36490,36659],"content":"Gets or sets a value that indicates whether <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResXDataNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are returned when reading the current XML resource file or stream.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether <xref href=\"System.Resources.ResXDataNode\"></xref> objects are returned when reading the current XML resource file or stream."},{"pos":[36671,36786],"content":"You can set the UseResXDataNodes property before you begin enumerating resources. By default, its value is `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can set the UseResXDataNodes property before you begin enumerating resources.","pos":[0,81]},{"content":"By default, its value is <ph id=\"ph1\">`false`</ph>.","pos":[82,115],"source":" By default, its value is `false`."}]},{"pos":[38763,38960],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if resource data nodes are retrieved; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if resource data nodes are ignored.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resource data nodes are retrieved; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if resource data nodes are ignored."},{"pos":[39151,39234],"content":"In a set operation, the enumerator for the resource file or stream is already open.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a set operation, the enumerator for the resource file or stream is already open.","pos":[0,83]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Resources.ResXResourceReader\n  id: ResXResourceReader\n  children:\n  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream)\n  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)\n  - System.Resources.ResXResourceReader.#ctor(System.String)\n  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)\n  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])\n  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)\n  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])\n  - System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  - System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])\n  - System.Resources.ResXResourceReader.BasePath\n  - System.Resources.ResXResourceReader.Close\n  - System.Resources.ResXResourceReader.Dispose(System.Boolean)\n  - System.Resources.ResXResourceReader.Finalize\n  - System.Resources.ResXResourceReader.FromFileContents(System.String)\n  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])\n  - System.Resources.ResXResourceReader.GetEnumerator\n  - System.Resources.ResXResourceReader.GetMetadataEnumerator\n  - System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator\n  - System.Resources.ResXResourceReader.System#IDisposable#Dispose\n  - System.Resources.ResXResourceReader.UseResXDataNodes\n  langs:\n  - csharp\n  name: ResXResourceReader\n  nameWithType: ResXResourceReader\n  fullName: System.Resources.ResXResourceReader\n  type: Class\n  summary: Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.\n  remarks: \"The ResXResourceReader class provides a default implementation of the <xref:System.Resources.IResourceReader> interface that reads resource information in an XML format. To read resource information from a binary resource format, use the <xref:System.Resources.ResourceReader> class.  \\n  \\n You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (<xref:System.Collections.IDictionaryEnumerator>) that is returned by the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method. You call the methods provided by <xref:System.Collections.IDictionaryEnumerator> to advance to the next resource and to read the name and value of each resource in the .resx file.  \\n  \\n> [!NOTE]\\n>  The ResXResourceReader class provides two enumerators. The <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method returns an <xref:System.Collections.IDictionaryEnumerator> object; we recommend that you use this method to enumerate resources. The <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName> method is an explicit interface implementation that returns an <xref:System.Collections.IEnumerator> object; we do not recommend its use.  \\n  \\n The following example uses the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \\n  \\n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)]\\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)]  \\n  \\n If the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is `true`, the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> property is a <xref:System.Resources.ResXDataNode> object rather than the resource value. This makes a resource item's comment available from the <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> property. The following example sets the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property to `true` and enumerates the resources in a .resx file,  \\n  \\n [!code-cs[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)]\\n [!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)]  \\n  \\n If <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> is `true`, the <xref:System.Resources.ResXDataNode> items in the enumeration can be either:  \\n  \\n-   Named resources along with their data. In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property is `null`.  \\n  \\n-   Named resources along with the name of the file that contains the resource data. In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> property returns a <xref:System.Resources.ResXFileRef> object that provides information about the resource, including its filename. If relative file names are used, you should always set the <xref:System.Resources.ResXResourceReader.BasePath%2A> property to provide a reference point for the relative file path.  \\n  \\n If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <xref:System.Resources.ResXResourceSet> object and call its `GetString` and `GetObject` methods.  \\n  \\n> [!NOTE]\\n>  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.\"\n  example:\n  - \"The following example demonstrates how to use a ResXResourceReader to iterate through the resources in a .resx file. First, the ResXResourceReader`rsxr` is created for the file `items.resx`. Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.  \\n  \\n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/t-system.resources.resxr_1_3.cpp)]\\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_3.cs)]\\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_3.vb)]\"\n  syntax:\n    content: 'public class ResXResourceReader : System.Resources.IResourceReader'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Resources.IResourceReader\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(Stream)\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified stream.\n  remarks: >-\n    > [!NOTE]\n\n    >  The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.\n  syntax:\n    content: public ResXResourceReader (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: An input stream that contains resources.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)\n  id: '#ctor(System.IO.TextReader)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(TextReader)\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified <xref:System.IO.TextReader>.\n  syntax:\n    content: public ResXResourceReader (System.IO.TextReader reader);\n    parameters:\n    - id: reader\n      type: System.IO.TextReader\n      description: A text input stream that contains resources.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(String)\n  nameWithType: ResXResourceReader.ResXResourceReader(String)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class for the specified resource file.\n  remarks: ''\n  example:\n  - \"The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  \\n  \\n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_1_1.cpp)]\\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_1_1.cs)]\\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_1_1.vb)]\"\n  syntax:\n    content: public ResXResourceReader (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The path of the resource file to read.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)\n  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(Stream,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using an input stream and a type resolution service.\n  syntax:\n    content: public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: An input stream that contains resources.\n    - id: typeResolver\n      type: System.ComponentModel.Design.ITypeResolutionService\n      description: An object that resolves type names specified in a resource.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])\n  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(Stream,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a stream and an array of assembly names.\n  syntax:\n    content: public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: An input stream that contains resources.\n    - id: assemblyNames\n      type: System.Reflection.AssemblyName[]\n      description: An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)\n  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(TextReader,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a text stream reader and a type resolution service.\n  syntax:\n    content: public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);\n    parameters:\n    - id: reader\n      type: System.IO.TextReader\n      description: A text stream reader that contains resources.\n    - id: typeResolver\n      type: System.ComponentModel.Design.ITypeResolutionService\n      description: An object that resolves type names specified in a resource.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])\n  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(TextReader,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a <xref:System.IO.TextReader> object and an array of assembly names.\n  syntax:\n    content: public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);\n    parameters:\n    - id: reader\n      type: System.IO.TextReader\n      description: An object used to read resources from a stream of text.\n    - id: assemblyNames\n      type: System.Reflection.AssemblyName[]\n      description: An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(String,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using a file name and a type resolution service.\n  syntax:\n    content: public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of an XML resource file that contains resources.\n    - id: typeResolver\n      type: System.ComponentModel.Design.ITypeResolutionService\n      description: An object that resolves type names specified in a resource.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])\n  id: '#ctor(System.String,System.Reflection.AssemblyName[])'\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: ResXResourceReader(String,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResXResourceReader\"></xref> class using an XML resource file name and an array of assembly names.\n  syntax:\n    content: public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of an XML resource file that contains resources.\n    - id: assemblyNames\n      type: System.Reflection.AssemblyName[]\n      description: An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.\n  overload: System.Resources.ResXResourceReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.BasePath\n  id: BasePath\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: BasePath\n  nameWithType: ResXResourceReader.BasePath\n  fullName: System.Resources.ResXResourceReader.BasePath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Gets or sets the base path for the relative file path specified in a <xref href=\"System.Resources.ResXFileRef\"></xref> object.\n  remarks: The BasePath property is used to resolve relative file path references that are assigned to the <xref:System.Resources.ResXFileRef.FileName%2A> property of <xref:System.Resources.ResXFileRef> objects.  By default, its value is <xref:System.String.Empty?displayProperty=fullName>, and relative file path references are resolved in relationship to the current directory returned by the <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> property. You should set this property before you begin enumerating resources.\n  example:\n  - \"The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\\\\data\\\\\\\\.  \\n  \\n [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/visualbasic/p-system.resources.resxr_1_1.vb)]\\n [!code-cs[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/csharp/p-system.resources.resxr_1_1.cs)]  \\n  \\n Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\\\data\\\\images\\\\\\\\.\"\n  syntax:\n    content: public string BasePath { get; set; }\n    return:\n      type: System.String\n      description: A path that, if prepended to the relative file path specified in a <xref href=\"System.Resources.ResXFileRef\"></xref> object, yields an absolute path to a resource file.\n  overload: System.Resources.ResXResourceReader.BasePath*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.Close\n  id: Close\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: ResXResourceReader.Close()\n  fullName: System.Resources.ResXResourceReader.Close()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Releases all resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref>.\n  remarks: Calling Close enables the resources used by the <xref:System.Resources.ResXResourceReader> to be reallocated for other purposes. For more information about Close, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  \\n  \\n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_2_1.cpp)]\\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_2_1.cs)]\\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_2_1.vb)]\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Resources.ResXResourceReader.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ResXResourceReader.Dispose(Boolean)\n  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref> and optionally releases the managed resources.\n  remarks: \"This method can be called by either the <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> method or the <xref:System.Object.Finalize%2A?displayProperty=fullName> method. <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> invokes this method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Resources.ResXResourceReader> references. This method invokes the `Dispose` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Resources.ResXResourceReader.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.Finalize\n  id: Finalize\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: ResXResourceReader.Finalize()\n  fullName: System.Resources.ResXResourceReader.Finalize()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: This member overrides the <xref:System.Object.Finalize*> method.\n  syntax:\n    content: ~ResXResourceReader ();\n    parameters: []\n  overload: System.Resources.ResXResourceReader.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)\n  id: FromFileContents(System.String)\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: FromFileContents(String)\n  nameWithType: ResXResourceReader.FromFileContents(String)\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file.\n  syntax:\n    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents);\n    parameters:\n    - id: fileContents\n      type: System.String\n      description: A string containing XML resource-formatted information.\n    return:\n      type: System.Resources.ResXResourceReader\n      description: An object that reads resources from the <code>fileContents</code> string.\n  overload: System.Resources.ResXResourceReader.FromFileContents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: FromFileContents(String,ITypeResolutionService)\n  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <xref href=\"System.ComponentModel.Design.ITypeResolutionService\"></xref> object to resolve type names specified in a resource.\n  syntax:\n    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);\n    parameters:\n    - id: fileContents\n      type: System.String\n      description: A string containing XML resource-formatted information.\n    - id: typeResolver\n      type: System.ComponentModel.Design.ITypeResolutionService\n      description: An object that resolves type names specified in a resource.\n    return:\n      type: System.Resources.ResXResourceReader\n      description: An object that reads resources from the <code>fileContents</code> string.\n  overload: System.Resources.ResXResourceReader.FromFileContents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])\n  id: FromFileContents(System.String,System.Reflection.AssemblyName[])\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: FromFileContents(String,AssemblyName[])\n  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Creates a new <xref href=\"System.Resources.ResXResourceReader\"></xref> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <xref:System.Reflection.AssemblyName> objects to resolve type names specified in a resource.\n  syntax:\n    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);\n    parameters:\n    - id: fileContents\n      type: System.String\n      description: A string whose contents are in the form of an XML resource file.\n    - id: assemblyNames\n      type: System.Reflection.AssemblyName[]\n      description: An array of <xref:System.Reflection.AssemblyName> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.\n    return:\n      type: System.Resources.ResXResourceReader\n      description: An object that reads resources from the <code>fileContents</code> string.\n  overload: System.Resources.ResXResourceReader.FromFileContents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ResXResourceReader.GetEnumerator()\n  fullName: System.Resources.ResXResourceReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Returns an enumerator for the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object.\n  remarks: The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref:System.Resources.ResXResourceReader> object. However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetEnumerator, the resource items are retrieved as <xref:System.Resources.ResXDataNode> objects. In this case, all resource nodes are returned regardless of type.\n  example:\n  - \"The following example uses the GetEnumerator method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \\n  \\n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/m-system.resources.resxr_0_1.cs)]\\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_0_1.vb)]\"\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: An enumerator for the current <xref href=\"System.Resources.ResourceReader\"></xref> object.\n  overload: System.Resources.ResXResourceReader.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator\n  id: GetMetadataEnumerator\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: GetMetadataEnumerator()\n  nameWithType: ResXResourceReader.GetMetadataEnumerator()\n  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.\n  remarks: Resources are stored as name/value pairs in a resource file or stream. Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources. The GetMetadataEnumerator method provides an <xref:System.Collections.IDictionaryEnumerator> object that can retrieve the metadata from the resource file or stream associated with the current <xref:System.Resources.ResXResourceReader> object. However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call GetMetadataEnumerator, no resource nodes are retrieved.\n  example:\n  - \"The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.  \\n  \\n [!code-vb[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/visualbasic/m-system.resources.resxr_4_1.vb)]\\n [!code-cpp[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/cpp/m-system.resources.resxr_4_1.cpp)]\\n [!code-cs[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/csharp/m-system.resources.resxr_4_1.cs)]\"\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: An enumerator for the metadata in a resource.\n  overload: System.Resources.ResXResourceReader.GetMetadataEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Returns an enumerator for the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object. For a description of this member, see the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface. To enumerate the resources in a .resx file, we recommend that you call the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> method, and then call the `MoveNext` method on the returned <xref:System.Collections.IDictionaryEnumerator> object.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref href=\"System.Resources.ResXResourceReader\"></xref> object.\n  overload: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: ResXResourceReader.System.IDisposable.Dispose()\n  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Resources.ResXResourceReader\"></xref> and optionally releases the managed resources. For a description of this member, see the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.IDisposable> interface.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Resources.ResXResourceReader.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.ResXResourceReader.UseResXDataNodes\n  id: UseResXDataNodes\n  parent: System.Resources.ResXResourceReader\n  langs:\n  - csharp\n  name: UseResXDataNodes\n  nameWithType: ResXResourceReader.UseResXDataNodes\n  fullName: System.Resources.ResXResourceReader.UseResXDataNodes\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Resources\n  summary: Gets or sets a value that indicates whether <xref href=\"System.Resources.ResXDataNode\"></xref> objects are returned when reading the current XML resource file or stream.\n  remarks: You can set the UseResXDataNodes property before you begin enumerating resources. By default, its value is `false`.\n  example:\n  - \"The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to `false` to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode>objects.  \\n  \\n [!code-vb[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/visualbasic/p-system.resources.resxr_0_1.vb)]\\n [!code-cpp[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/cpp/p-system.resources.resxr_0_1.cpp)]\\n [!code-cs[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/csharp/p-system.resources.resxr_0_1.cs)]  \\n  \\n The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<root>  \\n  <resheader name=\\\"resmimetype\\\">  \\n    <value>text/microsoft-resx</value>  \\n  </resheader>  \\n  <resheader name=\\\"version\\\">  \\n    <value>2.0</value>  \\n  </resheader>  \\n  <resheader name=\\\"reader\\\">  \\n    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \\n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \\n    </value>  \\n  </resheader>  \\n  <resheader name=\\\"writer\\\">  \\n    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \\n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \\n    </value>  \\n  </resheader>  \\n  <data name=\\\"DataSample\\\" xml:space=\\\"preserve\\\">  \\n    <value>Sample DATA value</value>  \\n  </data>  \\n  <metadata name=\\\"MetadataSample\\\">  \\n    <value>Sample METADATA value</value>  \\n  </metadata>  \\n</root>  \\n```\"\n  syntax:\n    content: public bool UseResXDataNodes { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resource data nodes are retrieved; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if resource data nodes are ignored.\n  overload: System.Resources.ResXResourceReader.UseResXDataNodes*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In a set operation, the enumerator for the resource file or stream is already open.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(Stream)\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(TextReader)\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: true\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: System.Resources.ResXResourceReader.#ctor(System.String)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(String)\n  nameWithType: ResXResourceReader.ResXResourceReader(String)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(Stream,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)\n- uid: System.ComponentModel.Design.ITypeResolutionService\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ITypeResolutionService\n  nameWithType: ITypeResolutionService\n  fullName: System.ComponentModel.Design.ITypeResolutionService\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(Stream,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])\n- uid: System.Reflection.AssemblyName[]\n  parent: System.Reflection\n  isExternal: true\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName[]\n  spec.csharp:\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    nameWithType: AssemblyName\n    fullName: AssemblyName[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(TextReader,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)\n- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(TextReader,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])\n- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(String,ITypeResolutionService)\n  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)\n- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader(String,AssemblyName[])\n  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])\n- uid: System.Resources.ResXResourceReader.BasePath\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: BasePath\n  nameWithType: ResXResourceReader.BasePath\n  fullName: System.Resources.ResXResourceReader.BasePath\n- uid: System.Resources.ResXResourceReader.Close\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Close()\n  nameWithType: ResXResourceReader.Close()\n  fullName: System.Resources.ResXResourceReader.Close()\n- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ResXResourceReader.Dispose(Boolean)\n  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Resources.ResXResourceReader.Finalize\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Finalize()\n  nameWithType: ResXResourceReader.Finalize()\n  fullName: System.Resources.ResXResourceReader.Finalize()\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: FromFileContents(String)\n  nameWithType: ResXResourceReader.FromFileContents(String)\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String)\n- uid: System.Resources.ResXResourceReader\n  parent: System.Resources\n  isExternal: false\n  name: ResXResourceReader\n  nameWithType: ResXResourceReader\n  fullName: System.Resources.ResXResourceReader\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: FromFileContents(String,ITypeResolutionService)\n  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)\n- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: FromFileContents(String,AssemblyName[])\n  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])\n  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])\n- uid: System.Resources.ResXResourceReader.GetEnumerator\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ResXResourceReader.GetEnumerator()\n  fullName: System.Resources.ResXResourceReader.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: GetMetadataEnumerator()\n  nameWithType: ResXResourceReader.GetMetadataEnumerator()\n  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()\n- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: ResXResourceReader.System.IDisposable.Dispose()\n  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()\n- uid: System.Resources.ResXResourceReader.UseResXDataNodes\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: UseResXDataNodes\n  nameWithType: ResXResourceReader.UseResXDataNodes\n  fullName: System.Resources.ResXResourceReader.UseResXDataNodes\n- uid: System.Resources.ResXResourceReader.#ctor*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: ResXResourceReader\n  nameWithType: ResXResourceReader.ResXResourceReader\n- uid: System.Resources.ResXResourceReader.BasePath*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: BasePath\n  nameWithType: ResXResourceReader.BasePath\n- uid: System.Resources.ResXResourceReader.Close*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Close\n  nameWithType: ResXResourceReader.Close\n- uid: System.Resources.ResXResourceReader.Dispose*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Dispose\n  nameWithType: ResXResourceReader.Dispose\n- uid: System.Resources.ResXResourceReader.Finalize*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: Finalize\n  nameWithType: ResXResourceReader.Finalize\n- uid: System.Resources.ResXResourceReader.FromFileContents*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: FromFileContents\n  nameWithType: ResXResourceReader.FromFileContents\n- uid: System.Resources.ResXResourceReader.GetEnumerator*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ResXResourceReader.GetEnumerator\n- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: GetMetadataEnumerator\n  nameWithType: ResXResourceReader.GetMetadataEnumerator\n- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: ResXResourceReader.System.IDisposable.Dispose\n- uid: System.Resources.ResXResourceReader.UseResXDataNodes*\n  parent: System.Resources.ResXResourceReader\n  isExternal: false\n  name: UseResXDataNodes\n  nameWithType: ResXResourceReader.UseResXDataNodes\n"}