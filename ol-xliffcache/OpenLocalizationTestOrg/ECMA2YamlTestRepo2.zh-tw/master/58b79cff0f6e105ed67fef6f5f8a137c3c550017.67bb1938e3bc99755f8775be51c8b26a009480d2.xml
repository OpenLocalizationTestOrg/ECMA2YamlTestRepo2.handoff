{"nodes":[{"pos":[2639,2722],"content":"Represents a collection of key/value pairs that are accessible by the key or index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of key/value pairs that are accessible by the key or index.","pos":[0,83]}]},{"pos":[2735,4036],"content":"Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object. A key cannot be `null`, but a value can be.       The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a <xref:System.Collections.Generic.SortedDictionary%602> class. You can access elements either by the key or by the index.       The `foreach` statement of the C# language (`For Each` in Visual Basic) returns objects that are of the type of each element in the collection. Since each element of the OrderedDictionary collection is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.DictionaryEntry>. The following code shows C#, Visual Basic and C++ syntax.       [!code-cpp[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)]  [!code-cs[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)]  [!code-vb[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)]       The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each element is a key/value pair stored in a &lt;xref:System.Collections.DictionaryEntry&gt; object.","pos":[0,94],"source":"Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object."},{"content":"A key cannot be <ph id=\"ph1\">`null`</ph>, but a value can be.","pos":[95,138],"source":" A key cannot be `null`, but a value can be."},{"content":"The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a &lt;xref:System.Collections.Generic.SortedDictionary%602&gt; class.","pos":[145,295],"source":"       The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a <xref:System.Collections.Generic.SortedDictionary%602> class."},{"content":"You can access elements either by the key or by the index.","pos":[296,354]},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`For Each`</ph> in Visual Basic) returns objects that are of the type of each element in the collection.","pos":[361,504],"source":"       The `foreach` statement of the C# language (`For Each` in Visual Basic) returns objects that are of the type of each element in the collection."},{"content":"Since each element of the OrderedDictionary collection is a key/value pair, the element type is not the type of the key or the type of the value.","pos":[505,650]},{"content":"Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.","pos":[651,722],"source":" Instead, the element type is <xref:System.Collections.DictionaryEntry>."},{"content":"The following code shows C#, Visual Basic and C++ syntax.","pos":[723,780]},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id=\"p2\">](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id=\"p6\">](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)</ept><ept id=\"p5\">]</ept>       The <ph id=\"ph1\">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.","pos":[787,1291],"source":"[!code-cpp[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)]  [!code-cs[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)]  [!code-vb[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)]       The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection."}]},{"pos":[5867,5977],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class."},{"pos":[5989,6247],"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","pos":[0,258],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.","pos":[52,149],"source":" Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique."},{"content":"The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[150,258],"source":" The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>."}]}]},{"pos":[7641,7780],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified comparer."},{"pos":[7793,8150],"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.       The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","needQuote":false,"needEscape":true,"nodes":[{"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.       The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","pos":[0,355],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.","pos":[52,149],"source":" Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique."},{"content":"The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[150,258],"source":" The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>."},{"content":"The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","pos":[265,355]}]}]},{"pos":[8353,8658],"content":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.","pos":[0,87],"source":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal."},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[94,295],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."}]},{"pos":[9229,9376],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified initial capacity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified initial capacity."},{"pos":[9388,9646],"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","pos":[0,258],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.","pos":[52,149],"source":" Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique."},{"content":"The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[150,258],"source":" The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>."}]}]},{"pos":[9790,9923],"content":"The initial number of elements that the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection can contain.","needQuote":true,"needEscape":true,"source":"The initial number of elements that the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection can contain."},{"pos":[10621,10781],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified initial capacity and comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified initial capacity and comparer."},{"pos":[10794,11151],"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.       The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","needQuote":false,"needEscape":true,"nodes":[{"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.       The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","pos":[0,355],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.","pos":[52,149],"source":" Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique."},{"content":"The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[150,258],"source":" The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>."},{"content":"The custom comparer enables such scenarios as doing lookups with case-insensitive strings.","pos":[265,355]}]}]},{"pos":[11343,11476],"content":"The initial number of elements that the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection can contain.","needQuote":true,"needEscape":true,"source":"The initial number of elements that the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection can contain."},{"pos":[11565,11870],"content":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.","pos":[0,87],"source":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal."},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[94,295],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."}]},{"pos":[12688,12972],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is serializable using the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class that is serializable using the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref:System.Runtime.Serialization.StreamingContext> objects."},{"pos":[12984,13242],"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.","pos":[0,258],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.","pos":[52,149],"source":" Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique."},{"content":"The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[150,258],"source":" The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>."}]}]},{"pos":[13513,13724],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[13820,14035],"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Runtime.Serialization.StreamingContext> object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref>."},{"pos":[14606,14775],"content":"Adds an entry with the specified key and value into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection with the lowest available index.","needQuote":true,"needEscape":true,"source":"Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection with the lowest available index."},{"pos":[14788,15361],"content":"A key cannot be `null`, but a value can be.       You can also use the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection; however, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property overwrites the old value. In contrast, the Add method does not modify existing elements.","needQuote":false,"needEscape":true,"nodes":[{"content":"A key cannot be <ph id=\"ph1\">`null`</ph>, but a value can be.","pos":[0,43],"source":"A key cannot be `null`, but a value can be."},{"content":"You can also use the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection; however, if the specified key already exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;, setting the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property overwrites the old value.","pos":[50,508],"source":"       You can also use the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection; however, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property overwrites the old value."},{"content":"In contrast, the Add method does not modify existing elements.","pos":[509,571]}]},{"pos":[16165,16193],"content":"The key of the entry to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to add.","pos":[0,28]}]},{"pos":[16255,16365],"content":"The value of the entry to add. This value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the entry to add.","pos":[0,30]},{"content":"This value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[31,110],"source":" This value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[16548,16646],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[17070,17191],"content":"Returns a read-only copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns a read-only copy of the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[17203,17463],"content":"The AsReadOnly method creates a read-only wrapper around the current <xref:System.Collections.Specialized.OrderedDictionary> collection. Changes made to the <xref:System.Collections.Specialized.OrderedDictionary> collection are reflected in the read-only copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AsReadOnly method creates a read-only wrapper around the current <xref:System.Collections.Specialized.OrderedDictionary> collection. Changes made to the <xref:System.Collections.Specialized.OrderedDictionary> collection are reflected in the read-only copy.","pos":[0,260],"nodes":[{"content":"The AsReadOnly method creates a read-only wrapper around the current &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.","pos":[0,136],"source":"The AsReadOnly method creates a read-only wrapper around the current <xref:System.Collections.Specialized.OrderedDictionary> collection."},{"content":"Changes made to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection are reflected in the read-only copy.","pos":[137,260],"source":" Changes made to the <xref:System.Collections.Specialized.OrderedDictionary> collection are reflected in the read-only copy."}]}]},{"pos":[17669,17782],"content":"A read-only copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"A read-only copy of the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[18271,18382],"content":"Removes all elements from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all elements from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[18394,18665],"content":"After calling the Clear method, the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property is set to zero and references to other objects from elements of the collection are also released. The capacity is not changed as a result of calling this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"After calling the Clear method, the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property is set to zero and references to other objects from elements of the collection are also released. The capacity is not changed as a result of calling this method.","pos":[0,271],"nodes":[{"content":"After calling the Clear method, the &lt;xref:System.Collections.Specialized.OrderedDictionary.Count%2A&gt; property is set to zero and references to other objects from elements of the collection are also released.","pos":[0,207],"source":"After calling the Clear method, the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property is set to zero and references to other objects from elements of the collection are also released."},{"content":"The capacity is not changed as a result of calling this method.","pos":[208,271]}]}]},{"pos":[19766,19864],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[20326,20454],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection contains a specific key.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection contains a specific key."},{"pos":[20467,21206],"content":"Using the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property can return a null value if the key does not exist or if the key is `null`. Use the Contains method to determine if a specific key exists in the <xref:System.Collections.Specialized.OrderedDictionary> collection.       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Using the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property can return a null value if the key does not exist or if the key is <ph id=\"ph1\">`null`</ph>.","pos":[0,157],"source":"Using the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property can return a null value if the key does not exist or if the key is `null`."},{"content":"Use the Contains method to determine if a specific key exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.","pos":[158,294],"source":" Use the Contains method to determine if a specific key exists in the <xref:System.Collections.Specialized.OrderedDictionary> collection."},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id=\"ph1\">`item`</ph> to determine whether <ph id=\"ph2\">`item`</ph> exists.","pos":[301,509],"source":"       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id=\"ph1\">`item`</ph> parameter on the objects in the collection.","pos":[510,737],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]},{"pos":[22108,22214],"content":"The key to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"The key to locate in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[22273,22540],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection contains an element with the specified key; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection contains an element with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23119,23280],"content":"Copies the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; object at the specified index.","needQuote":true,"needEscape":true,"source":"Copies the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> elements to a one-dimensional <xref:System.Array> object at the specified index."},{"pos":[23292,23440],"content":"The CopyTo method is not guaranteed to preserve the order of the elements in the <xref:System.Collections.Specialized.OrderedDictionary> collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CopyTo method is not guaranteed to preserve the order of the elements in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.","pos":[0,148],"source":"The CopyTo method is not guaranteed to preserve the order of the elements in the <xref:System.Collections.Specialized.OrderedDictionary> collection."}]},{"pos":[23585,23861],"content":"The one-dimensional <xref:System.Array> object that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; object that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","pos":[0,221],"source":"The one-dimensional <xref:System.Array> object that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[222,276],"source":" The <xref:System.Array> must have zero-based indexing."}]},{"pos":[23922,23978],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[24459,24593],"content":"Gets the number of key/values pairs contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets the number of key/values pairs contained in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[25503,25631],"content":"The number of key/value pairs contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"The number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[26155,26328],"content":"Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref:System.Collections.IDictionaryEnumerator> object that iterates through the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[26341,27479],"content":"[Visual Basic, C#]       The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Visual Basic, C#]       The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,137],"source":"[Visual Basic, C#]       The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended instead of directly manipulating the enumerator.","pos":[139,229],"source":"  Therefore, using `foreach` is recommended instead of directly manipulating the enumerator."},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[236,356]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[363,446]},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[453,525]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[526,688]},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[695,849]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[851,956]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[958,1086]},{"content":"This method is an O(1) operation.","pos":[1093,1126]}]},{"pos":[28959,29106],"content":"An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionaryEnumerator> object for the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[29928,30143],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[30420,30631],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[30727,30942],"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Runtime.Serialization.StreamingContext> object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref>."},{"pos":[31135,31217],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>info</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31762,31928],"content":"Inserts a new entry into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection with the specified key and value at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts a new entry into the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection with the specified key and value at the specified index."},{"pos":[31941,32292],"content":"If the `index` parameter is equal to the number of entries in the <xref:System.Collections.Specialized.OrderedDictionary> collection, the `key` and `value` parameters are appended to the end of the collection.       Entries that follow the insertion point move down to accommodate the new entry and the indexes of the moved entries are also updated.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the <ph id=\"ph1\">`index`</ph> parameter is equal to the number of entries in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection, the <ph id=\"ph2\">`key`</ph> and <ph id=\"ph3\">`value`</ph> parameters are appended to the end of the collection.","pos":[0,209],"source":"If the `index` parameter is equal to the number of entries in the <xref:System.Collections.Specialized.OrderedDictionary> collection, the `key` and `value` parameters are appended to the end of the collection."},{"content":"Entries that follow the insertion point move down to accommodate the new entry and the indexes of the moved entries are also updated.","pos":[216,349]}]},{"pos":[33280,33341],"content":"The zero-based index at which the element should be inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which the element should be inserted.","pos":[0,61]}]},{"pos":[33401,33429],"content":"The key of the entry to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to add.","pos":[0,28]}]},{"pos":[33491,33600],"content":"The value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the entry to add.","pos":[0,30]},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[31,109],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[33798,33833],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is out of range.","needQuote":true,"needEscape":true,"source":"<code>index</code> is out of range."},{"pos":[33936,33965],"content":"This collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"This collection is read-only.","pos":[0,29]}]},{"pos":[34385,34515],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[34528,34890],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,360],"nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]},{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[136,360]}]}]},{"pos":[35807,36123],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection is read-only; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,237],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[238,316],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[36652,36698],"content":"Gets or sets the value at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value at the specified index.","pos":[0,46]}]},{"pos":[36711,37103],"content":"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[index]`.       The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property allows you to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","pos":[0,125],"source":"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"content":"The C# language uses the  keyword to define the indexers instead of implementing the Item property.","pos":[132,231]},{"content":"Visual Basic implements &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; as a default property, which provides the same indexing functionality.","pos":[232,390],"source":" Visual Basic implements <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality."}]},{"pos":[37248,37296],"content":"The zero-based index of the value to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the value to get or set.","pos":[0,48]}]},{"pos":[37354,37399],"content":"The value of the item at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the item at the specified index.","pos":[0,45]}]},{"pos":[37583,37711],"content":"The property is being set and the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The property is being set and the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[37827,37996],"content":"<code>index</code> is less than zero.       -or-       <code>index</code> is equal to or greater than <xref:System.Collections.Specialized.OrderedDictionary.Count*>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","pos":[0,37],"source":"<code>index</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Count*&gt;</ph>.","pos":[44,165],"source":"       -or-       <code>index</code> is equal to or greater than <xref:System.Collections.Specialized.OrderedDictionary.Count*>."}]},{"pos":[38441,38487],"content":"Gets or sets the value with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value with the specified key.","pos":[0,46]}]},{"pos":[38500,39530],"content":"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[key]`.       You can also use the Item property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection (for example, `myCollection[\"myNonexistentKey\"] = myValue`). However, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the Item property overwrites the old value. In contrast, the <xref:System.Collections.Specialized.OrderedDictionary.Add%2A> method does not modify existing elements.       A key cannot be `null`, but a value can be. To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method to determine if the key exists in the <xref:System.Collections.Specialized.OrderedDictionary>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property allows you to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[key]`</ph>.","pos":[0,123],"source":"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[key]`."},{"content":"You can also use the Item property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection (for example, <ph id=\"ph1\">`myCollection[\"myNonexistentKey\"] = myValue`</ph>).","pos":[130,369],"source":"       You can also use the Item property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection (for example, `myCollection[\"myNonexistentKey\"] = myValue`)."},{"content":"However, if the specified key already exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;, setting the Item property overwrites the old value.","pos":[370,530],"source":" However, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the Item property overwrites the old value."},{"content":"In contrast, the &lt;xref:System.Collections.Specialized.OrderedDictionary.Add%2A&gt; method does not modify existing elements.","pos":[531,652],"source":" In contrast, the <xref:System.Collections.Specialized.OrderedDictionary.Add%2A> method does not modify existing elements."},{"content":"A key cannot be <ph id=\"ph1\">`null`</ph>, but a value can be.","pos":[659,702],"source":"       A key cannot be `null`, but a value can be."},{"content":"To distinguish between <ph id=\"ph1\">`null`</ph> that is returned because the specified key is not found and <ph id=\"ph2\">`null`</ph> that is returned because the value of the specified key is <ph id=\"ph3\">`null`</ph>, use the &lt;xref:System.Collections.Hashtable.Contains%2A&gt; method to determine if the key exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;.","pos":[703,1024],"source":" To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method to determine if the key exists in the <xref:System.Collections.Specialized.OrderedDictionary>."}]},{"pos":[40436,40471],"content":"The key of the value to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the value to get or set.","pos":[0,35]}]},{"pos":[40529,40771],"content":"The value associated with the specified key. If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value associated with the specified key.","pos":[0,44]},{"content":"If the specified key is not found, attempting to get it returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.","pos":[45,242],"source":" If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key."}]},{"pos":[40955,41083],"content":"The property is being set and the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The property is being set and the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[41473,41634],"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets an <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[41646,42037],"content":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.","pos":[0,391],"nodes":[{"content":"The returned &lt;xref:System.Collections.ICollection&gt; object is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.","pos":[0,238],"source":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.OrderedDictionary> collection."},{"content":"Therefore, changes to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.","pos":[239,391],"source":" Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>."}]}]},{"pos":[43447,43603],"content":"An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[44194,44364],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete."},{"pos":[44376,44406],"content":"This method can be overridden.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method can be overridden.","pos":[0,30]}]},{"pos":[44566,44606],"content":"The source of the deserialization event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]},{"pos":[44849,45048],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection is invalid.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is invalid."},{"pos":[45500,45631],"content":"Removes the entry with the specified key from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes the entry with the specified key from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[45644,46017],"content":"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.       If the <xref:System.Collections.Specialized.OrderedDictionary> collection does not contain an entry with the specified key, the <xref:System.Collections.Specialized.OrderedDictionary> remains unchanged and no exception is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.       If the <xref:System.Collections.Specialized.OrderedDictionary> collection does not contain an entry with the specified key, the <xref:System.Collections.Specialized.OrderedDictionary> remains unchanged and no exception is thrown.","pos":[0,371],"nodes":[{"content":"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.","pos":[0,135]},{"content":"If the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection does not contain an entry with the specified key, the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; remains unchanged and no exception is thrown.","pos":[142,371],"source":"       If the <xref:System.Collections.Specialized.OrderedDictionary> collection does not contain an entry with the specified key, the <xref:System.Collections.Specialized.OrderedDictionary> remains unchanged and no exception is thrown."}]}]},{"pos":[46968,46999],"content":"The key of the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to remove.","pos":[0,31]}]},{"pos":[47185,47283],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[47386,47467],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[47924,48055],"content":"Removes the entry at the specified index from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes the entry at the specified index from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[48067,48202],"content":"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.","pos":[0,135]}]},{"pos":[49213,49257],"content":"The zero-based index of the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the entry to remove.","pos":[0,44]}]},{"pos":[49445,49543],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only."},{"pos":[50442,50595],"content":"Gets a value indicating whether access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is synchronized (thread-safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object is synchronized (thread-safe)."},{"pos":[50737,50827],"content":"This method always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51531,51669],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object."},{"pos":[51806,51939],"content":"An object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object."},{"pos":[52652,52775],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has a fixed size.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> has a fixed size."},{"pos":[52914,53223],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,230],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[231,309],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[53953,54126],"content":"Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref:System.Collections.IDictionaryEnumerator> object that iterates through the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[54304,54451],"content":"An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionaryEnumerator> object for the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[55366,55536],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete."},{"pos":[55703,55743],"content":"The source of the deserialization event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]},{"pos":[56294,56457],"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets an <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."},{"pos":[56469,56862],"content":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.","pos":[0,393],"nodes":[{"content":"The returned &lt;xref:System.Collections.ICollection&gt; object is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.","pos":[0,240],"source":"The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.OrderedDictionary> collection."},{"content":"Therefore, changes to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.","pos":[241,393],"source":" Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>."}]}]},{"pos":[58274,58432],"content":"An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.OrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.OrderedDictionary\n  id: OrderedDictionary\n  children:\n  - System.Collections.Specialized.OrderedDictionary.#ctor\n  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)\n  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)\n  - System.Collections.Specialized.OrderedDictionary.AsReadOnly\n  - System.Collections.Specialized.OrderedDictionary.Clear\n  - System.Collections.Specialized.OrderedDictionary.Contains(System.Object)\n  - System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.OrderedDictionary.Count\n  - System.Collections.Specialized.OrderedDictionary.GetEnumerator\n  - System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)\n  - System.Collections.Specialized.OrderedDictionary.IsReadOnly\n  - System.Collections.Specialized.OrderedDictionary.Item(System.Int32)\n  - System.Collections.Specialized.OrderedDictionary.Item(System.Object)\n  - System.Collections.Specialized.OrderedDictionary.Keys\n  - System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)\n  - System.Collections.Specialized.OrderedDictionary.Remove(System.Object)\n  - System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)\n  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot\n  - System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Collections.Specialized.OrderedDictionary.Values\n  langs:\n  - csharp\n  name: OrderedDictionary\n  nameWithType: OrderedDictionary\n  fullName: System.Collections.Specialized.OrderedDictionary\n  type: Class\n  summary: Represents a collection of key/value pairs that are accessible by the key or index.\n  remarks: \"Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object. A key cannot be `null`, but a value can be.  \\n  \\n The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a <xref:System.Collections.Generic.SortedDictionary%602> class. You can access elements either by the key or by the index.  \\n  \\n The `foreach` statement of the C# language (`For Each` in Visual Basic) returns objects that are of the type of each element in the collection. Since each element of the OrderedDictionary collection is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.DictionaryEntry>. The following code shows C#, Visual Basic and C++ syntax.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)]  \\n  \\n The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.\"\n  example:\n  - \"The following code example demonstrates the creation, population and modification of an OrderedDictionary collection, as well as two techniques to display the contents of the OrderedDictionary: one using the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> and <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> properties and the other creating an enumerator through the <xref:System.Collections.Specialized.OrderedDictionary.GetEnumerator%2A> method.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/cpp/t-system.collections.spe_5_2.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/csharp/t-system.collections.spe_5_2.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/visualbasic/t-system.collections.spe_5_2.vb)]\"\n  syntax:\n    content: 'public class OrderedDictionary : System.Collections.IDictionary, System.Collections.Specialized.IOrderedDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IDictionary\n  - System.Collections.Specialized.IOrderedDictionary\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor\n  id: '#ctor'\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OrderedDictionary()\n  nameWithType: OrderedDictionary.OrderedDictionary()\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class.\n  remarks: The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.\n  example:\n  - \"The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/m-system.collections.spe_42_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/m-system.collections.spe_42_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/m-system.collections.spe_42_1.vb)]\"\n  syntax:\n    content: public OrderedDictionary ();\n    parameters: []\n  overload: System.Collections.Specialized.OrderedDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)\n  id: '#ctor(System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OrderedDictionary(IEqualityComparer)\n  nameWithType: OrderedDictionary.OrderedDictionary(IEqualityComparer)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified comparer.\n  remarks: \"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.  \\n  \\n The custom comparer enables such scenarios as doing lookups with case-insensitive strings.\"\n  syntax:\n    content: public OrderedDictionary (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.\"\n  overload: System.Collections.Specialized.OrderedDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OrderedDictionary(Int32)\n  nameWithType: OrderedDictionary.OrderedDictionary(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified initial capacity.\n  remarks: The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.\n  syntax:\n    content: public OrderedDictionary (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of elements that the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection can contain.\n  overload: System.Collections.Specialized.OrderedDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OrderedDictionary(Int32,IEqualityComparer)\n  nameWithType: OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class using the specified initial capacity and comparer.\n  remarks: \"The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.  \\n  \\n The custom comparer enables such scenarios as doing lookups with case-insensitive strings.\"\n  syntax:\n    content: public OrderedDictionary (int capacity, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of elements that the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection can contain.\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to use the default comparer, which is each key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.\"\n  overload: System.Collections.Specialized.OrderedDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OrderedDictionary(SerializationInfo,StreamingContext)\n  nameWithType: OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> class that is serializable using the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref:System.Runtime.Serialization.StreamingContext> objects.\n  remarks: The comparer determines whether two keys are equal. Every key in a <xref:System.Collections.Specialized.OrderedDictionary> collection must be unique. The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=fullName>.\n  syntax:\n    content: protected OrderedDictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)\n  id: Add(System.Object,System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Add(Object,Object)\n  nameWithType: OrderedDictionary.Add(Object,Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection with the lowest available index.\n  remarks: \"A key cannot be `null`, but a value can be.  \\n  \\n You can also use the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection; however, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property overwrites the old value. In contrast, the Add method does not modify existing elements.\"\n  example:\n  - \"The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/039b9599-9399-4061-ac28-_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/039b9599-9399-4061-ac28-_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/039b9599-9399-4061-ac28-_1.vb)]\"\n  syntax:\n    content: public void Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the entry to add.\n    - id: value\n      type: System.Object\n      description: The value of the entry to add. This value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly\n  id: AsReadOnly\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: AsReadOnly()\n  nameWithType: OrderedDictionary.AsReadOnly()\n  fullName: System.Collections.Specialized.OrderedDictionary.AsReadOnly()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns a read-only copy of the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: The AsReadOnly method creates a read-only wrapper around the current <xref:System.Collections.Specialized.OrderedDictionary> collection. Changes made to the <xref:System.Collections.Specialized.OrderedDictionary> collection are reflected in the read-only copy.\n  syntax:\n    content: public System.Collections.Specialized.OrderedDictionary AsReadOnly ();\n    parameters: []\n    return:\n      type: System.Collections.Specialized.OrderedDictionary\n      description: A read-only copy of the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.AsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Clear\n  id: Clear\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: OrderedDictionary.Clear()\n  fullName: System.Collections.Specialized.OrderedDictionary.Clear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes all elements from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: After calling the Clear method, the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property is set to zero and references to other objects from elements of the collection are also released. The capacity is not changed as a result of calling this method.\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Clear method is used to empty the <xref:System.Collections.Specialized.OrderedDictionary>, and then the <xref:System.Collections.Specialized.OrderedDictionary> is repopulated. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/cpp/m-system.collections.spe_1_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/csharp/m-system.collections.spe_1_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/visualbasic/m-system.collections.spe_1_1.vb)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Collections.Specialized.OrderedDictionary.Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: OrderedDictionary.Contains(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Determines whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection contains a specific key.\n  remarks: \"Using the <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> property can return a null value if the key does not exist or if the key is `null`. Use the Contains method to determine if a specific key exists in the <xref:System.Collections.Specialized.OrderedDictionary> collection.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Contains method is used to determine if an entry exists before attempting to remove it. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_29_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_29_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_29_1.vb)]\"\n  syntax:\n    content: public bool Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to locate in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection contains an element with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: OrderedDictionary.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Copies the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> elements to a one-dimensional <xref:System.Array> object at the specified index.\n  remarks: The CopyTo method is not guaranteed to preserve the order of the elements in the <xref:System.Collections.Specialized.OrderedDictionary> collection.\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> object that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Collections.Specialized.OrderedDictionary.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Count\n  id: Count\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Count\n  nameWithType: OrderedDictionary.Count\n  fullName: System.Collections.Specialized.OrderedDictionary.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the number of key/values pairs contained in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Count property is used to remove the last item in the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_10_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_10_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_10_1.vb)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: OrderedDictionary.GetEnumerator()\n  fullName: System.Collections.Specialized.OrderedDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an <xref:System.Collections.IDictionaryEnumerator> object that iterates through the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: \"[Visual Basic, C#]  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example demonstrates the use of the GetEnumerator method to display the contents of the <xref:System.Collections.Specialized.OrderedDictionary> collection to the console. In this example, the GetEnumerator method is used to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/cpp/m-system.collections.spe_30_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/csharp/m-system.collections.spe_30_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/visualbasic/m-system.collections.spe_30_1.vb)]  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/cpp/m-system.collections.spe_30_2.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/csharp/m-system.collections.spe_30_2.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/visualbasic/m-system.collections.spe_30_2.vb)]\"\n  syntax:\n    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: An <xref:System.Collections.IDictionaryEnumerator> object for the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object containing the information required to serialize the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)\n  id: Insert(System.Int32,System.Object,System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Insert(Int32,Object,Object)\n  nameWithType: OrderedDictionary.Insert(Int32,Object,Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Insert(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Inserts a new entry into the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection with the specified key and value at the specified index.\n  remarks: \"If the `index` parameter is equal to the number of entries in the <xref:System.Collections.Specialized.OrderedDictionary> collection, the `key` and `value` parameters are appended to the end of the collection.  \\n  \\n Entries that follow the insertion point move down to accommodate the new entry and the indexes of the moved entries are also updated.\"\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Insert method is used to add a new entry to the beginning of the <xref:System.Collections.Specialized.OrderedDictionary>, moving the rest of the entries down. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/56e5bd9c-eb97-4216-b76d-_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/56e5bd9c-eb97-4216-b76d-_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/56e5bd9c-eb97-4216-b76d-_1.vb)]\"\n  syntax:\n    content: public void Insert (int index, object key, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which the element should be inserted.\n    - id: key\n      type: System.Object\n      description: The key of the entry to add.\n    - id: value\n      type: System.Object\n      description: The value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is out of range.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: OrderedDictionary.IsReadOnly\n  fullName: System.Collections.Specialized.OrderedDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.\"\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the IsReadOnly property is used to determine whether the <xref:System.Collections.Specialized.OrderedDictionary> can be modified. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_7_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_7_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_7_1.vb)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: OrderedDictionary.Item(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the value at the specified index.\n  remarks: \"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements <xref:System.Collections.Specialized.OrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality.\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the value to get or set.\n    return:\n      type: System.Object\n      description: The value of the item at the specified index.\n  overload: System.Collections.Specialized.OrderedDictionary.Item*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The property is being set and the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref:System.Collections.Specialized.OrderedDictionary.Count*>.\"\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: OrderedDictionary.Item(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the value with the specified key.\n  remarks: \"This property allows you to access a specific element in the collection by using the following syntax: `myCollection[key]`.  \\n  \\n You can also use the Item property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.OrderedDictionary> collection (for example, `myCollection[\\\"myNonexistentKey\\\"] = myValue`). However, if the specified key already exists in the <xref:System.Collections.Specialized.OrderedDictionary>, setting the Item property overwrites the old value. In contrast, the <xref:System.Collections.Specialized.OrderedDictionary.Add%2A> method does not modify existing elements.  \\n  \\n A key cannot be `null`, but a value can be. To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method to determine if the key exists in the <xref:System.Collections.Specialized.OrderedDictionary>.\"\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Item property is used to modify the dictionary entry with the key `\\\"testKey2\\\"`. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_24_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_24_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_24_1.vb)]\"\n  syntax:\n    content: public object this[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the value to get or set.\n    return:\n      type: System.Object\n      description: The value associated with the specified key. If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key.\n  overload: System.Collections.Specialized.OrderedDictionary.Item*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The property is being set and the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Keys\n  id: Keys\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: OrderedDictionary.Keys\n  fullName: System.Collections.Specialized.OrderedDictionary.Keys\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets an <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.\n  example:\n  - \"The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection, and then prints the contents to the console. In this example, the Keys and <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/p-system.collections.spe_19_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/p-system.collections.spe_19_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/p-system.collections.spe_19_1.vb)]  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/cpp/p-system.collections.spe_19_2.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/csharp/p-system.collections.spe_19_2.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/visualbasic/p-system.collections.spe_19_2.vb)]\"\n  syntax:\n    content: public System.Collections.ICollection Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: OrderedDictionary.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.\n  remarks: This method can be overridden.\n  syntax:\n    content: protected virtual void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Collections.Specialized.OrderedDictionary.OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is invalid.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: OrderedDictionary.Remove(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes the entry with the specified key from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: \"The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.  \\n  \\n If the <xref:System.Collections.Specialized.OrderedDictionary> collection does not contain an entry with the specified key, the <xref:System.Collections.Specialized.OrderedDictionary> remains unchanged and no exception is thrown.\"\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Remove method is used to remove the entry with the key `\\\"keyToDelete\\\"` from the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_36_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_36_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_36_1.vb)]\"\n  syntax:\n    content: public void Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the entry to remove.\n  overload: System.Collections.Specialized.OrderedDictionary.Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: OrderedDictionary.RemoveAt(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes the entry at the specified index from the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.\n  example:\n  - \"The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the RemoveAt method is used with the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property to remove the last entry from the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_33_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_33_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_33_1.vb)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to remove.\n  overload: System.Collections.Specialized.OrderedDictionary.RemoveAt*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection is read-only.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is equal to or greater than <xref:System.Collections.Specialized.OrderedDictionary.Count*>.\"\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object is synchronized (thread-safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: This method always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> object.\n  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> has a fixed size.\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an <xref:System.Collections.IDictionaryEnumerator> object that iterates through the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IDictionaryEnumerator> object for the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.OrderedDictionary.Values\n  id: Values\n  parent: System.Collections.Specialized.OrderedDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: OrderedDictionary.Values\n  fullName: System.Collections.Specialized.OrderedDictionary.Values\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets an <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  remarks: The returned <xref:System.Collections.ICollection> object is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.OrderedDictionary> collection. Therefore, changes to the <xref:System.Collections.Specialized.OrderedDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.\n  example:\n  - \"The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection, and then prints the contents to the console. In this example, the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> and Values properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/p-system.collections.spe_21_1.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/p-system.collections.spe_21_1.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/p-system.collections.spe_21_1.vb)]  \\n  \\n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/cpp/p-system.collections.spe_21_2.cpp)]\\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/csharp/p-system.collections.spe_21_2.cs)]\\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/visualbasic/p-system.collections.spe_21_2.vb)]\"\n  syntax:\n    content: public System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.Specialized.OrderedDictionary\"></xref> collection.\n  overload: System.Collections.Specialized.OrderedDictionary.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: true\n  name: System.Runtime.Serialization.SerializationException\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary()\n  nameWithType: OrderedDictionary.OrderedDictionary()\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary()\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary(IEqualityComparer)\n  nameWithType: OrderedDictionary.OrderedDictionary(IEqualityComparer)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: true\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary(Int32)\n  nameWithType: OrderedDictionary.OrderedDictionary(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary(Int32,IEqualityComparer)\n  nameWithType: OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary(SerializationInfo,StreamingContext)\n  nameWithType: OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Add(Object,Object)\n  nameWithType: OrderedDictionary.Add(Object,Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Add(Object,Object)\n- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: AsReadOnly()\n  nameWithType: OrderedDictionary.AsReadOnly()\n  fullName: System.Collections.Specialized.OrderedDictionary.AsReadOnly()\n- uid: System.Collections.Specialized.OrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: OrderedDictionary\n  nameWithType: OrderedDictionary\n  fullName: System.Collections.Specialized.OrderedDictionary\n- uid: System.Collections.Specialized.OrderedDictionary.Clear\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: OrderedDictionary.Clear()\n  fullName: System.Collections.Specialized.OrderedDictionary.Clear()\n- uid: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: OrderedDictionary.Contains(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: OrderedDictionary.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Specialized.OrderedDictionary.Count\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Count\n  nameWithType: OrderedDictionary.Count\n  fullName: System.Collections.Specialized.OrderedDictionary.Count\n- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: OrderedDictionary.GetEnumerator()\n  fullName: System.Collections.Specialized.OrderedDictionary.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Insert(Int32,Object,Object)\n  nameWithType: OrderedDictionary.Insert(Int32,Object,Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Insert(Int32,Object,Object)\n- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: OrderedDictionary.IsReadOnly\n  fullName: System.Collections.Specialized.OrderedDictionary.IsReadOnly\n- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: OrderedDictionary.Item(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.Item(Int32)\n- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Item(Object)\n  nameWithType: OrderedDictionary.Item(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Item(Object)\n- uid: System.Collections.Specialized.OrderedDictionary.Keys\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: OrderedDictionary.Keys\n  fullName: System.Collections.Specialized.OrderedDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: OrderedDictionary.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.OnDeserialization(Object)\n- uid: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: OrderedDictionary.Remove(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.Remove(Object)\n- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: OrderedDictionary.RemoveAt(Int32)\n  fullName: System.Collections.Specialized.OrderedDictionary.RemoveAt(Int32)\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Collections.Specialized.OrderedDictionary.Values\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Values\n  nameWithType: OrderedDictionary.Values\n  fullName: System.Collections.Specialized.OrderedDictionary.Values\n- uid: System.Collections.Specialized.OrderedDictionary.#ctor*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OrderedDictionary\n  nameWithType: OrderedDictionary.OrderedDictionary\n- uid: System.Collections.Specialized.OrderedDictionary.Add*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Add\n  nameWithType: OrderedDictionary.Add\n- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: AsReadOnly\n  nameWithType: OrderedDictionary.AsReadOnly\n- uid: System.Collections.Specialized.OrderedDictionary.Clear*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Clear\n  nameWithType: OrderedDictionary.Clear\n- uid: System.Collections.Specialized.OrderedDictionary.Contains*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Contains\n  nameWithType: OrderedDictionary.Contains\n- uid: System.Collections.Specialized.OrderedDictionary.CopyTo*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: CopyTo\n  nameWithType: OrderedDictionary.CopyTo\n- uid: System.Collections.Specialized.OrderedDictionary.Count*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Count\n  nameWithType: OrderedDictionary.Count\n- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: OrderedDictionary.GetEnumerator\n- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: GetObjectData\n  nameWithType: OrderedDictionary.GetObjectData\n- uid: System.Collections.Specialized.OrderedDictionary.Insert*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Insert\n  nameWithType: OrderedDictionary.Insert\n- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: OrderedDictionary.IsReadOnly\n- uid: System.Collections.Specialized.OrderedDictionary.Item*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Item\n  nameWithType: OrderedDictionary.Item\n- uid: System.Collections.Specialized.OrderedDictionary.Keys*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: OrderedDictionary.Keys\n- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: OnDeserialization\n  nameWithType: OrderedDictionary.OnDeserialization\n- uid: System.Collections.Specialized.OrderedDictionary.Remove*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Remove\n  nameWithType: OrderedDictionary.Remove\n- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: RemoveAt\n  nameWithType: OrderedDictionary.RemoveAt\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n- uid: System.Collections.Specialized.OrderedDictionary.Values*\n  parent: System.Collections.Specialized.OrderedDictionary\n  isExternal: false\n  name: Values\n  nameWithType: OrderedDictionary.Values\n"}