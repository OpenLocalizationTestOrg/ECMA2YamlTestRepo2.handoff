{"nodes":[{"pos":[313,432],"content":"Provides custom channel information that is carried along with the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides custom channel information that is carried along with the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>."},{"pos":[445,1573],"content":"This interface is implemented by the <xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=fullName> property. It provides access to transport specific information contributed by the channels that are able to receive calls in the process or application domain where the object lives. This interface might also be used when building custom <xref:System.Runtime.Remoting.ObjRef> classes.       When an existing object instance is marshaled to produce a <xref:System.Runtime.Remoting.ObjRef>, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> is copied from the channel (see <xref:System.Runtime.Remoting.Channels.IChannelReceiver>) for each registered channel and stored in the <xref:System.Runtime.Remoting.ObjRef>. When the <xref:System.Runtime.Remoting.ObjRef> is unmarshaled at its destination, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> provided through the IChannelInfo interface can be examined and used by corresponding channels in that process or application domain to create a transport message sink that manages the communication between the proxy and the server object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This interface is implemented by the <xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=fullName> property. It provides access to transport specific information contributed by the channels that are able to receive calls in the process or application domain where the object lives. This interface might also be used when building custom <xref:System.Runtime.Remoting.ObjRef> classes.       When an existing object instance is marshaled to produce a <xref:System.Runtime.Remoting.ObjRef>, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> is copied from the channel (see <xref:System.Runtime.Remoting.Channels.IChannelReceiver>) for each registered channel and stored in the <xref:System.Runtime.Remoting.ObjRef>. When the <xref:System.Runtime.Remoting.ObjRef> is unmarshaled at its destination, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> provided through the IChannelInfo interface can be examined and used by corresponding channels in that process or application domain to create a transport message sink that manages the communication between the proxy and the server object.","pos":[0,1126],"nodes":[{"content":"This interface is implemented by the &lt;xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=fullName&gt; property.","pos":[0,124],"source":"This interface is implemented by the <xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=fullName> property."},{"content":"It provides access to transport specific information contributed by the channels that are able to receive calls in the process or application domain where the object lives.","pos":[125,297]},{"content":"This interface might also be used when building custom &lt;xref:System.Runtime.Remoting.ObjRef&gt; classes.","pos":[298,399],"source":" This interface might also be used when building custom <xref:System.Runtime.Remoting.ObjRef> classes."},{"content":"When an existing object instance is marshaled to produce a &lt;xref:System.Runtime.Remoting.ObjRef&gt;, the &lt;xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A&gt; is copied from the channel (see &lt;xref:System.Runtime.Remoting.Channels.IChannelReceiver&gt;) for each registered channel and stored in the &lt;xref:System.Runtime.Remoting.ObjRef&gt;.","pos":[406,741],"source":"       When an existing object instance is marshaled to produce a <xref:System.Runtime.Remoting.ObjRef>, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> is copied from the channel (see <xref:System.Runtime.Remoting.Channels.IChannelReceiver>) for each registered channel and stored in the <xref:System.Runtime.Remoting.ObjRef>."},{"content":"When the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is unmarshaled at its destination, the &lt;xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A&gt; provided through the IChannelInfo interface can be examined and used by corresponding channels in that process or application domain to create a transport message sink that manages the communication between the proxy and the server object.","pos":[742,1126],"source":" When the <xref:System.Runtime.Remoting.ObjRef> is unmarshaled at its destination, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> provided through the IChannelInfo interface can be examined and used by corresponding channels in that process or application domain to create a transport message sink that manages the communication between the proxy and the server object."}]}]},{"pos":[2089,2137],"content":"Gets and sets the channel data for each channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets the channel data for each channel.","pos":[0,48]}]},{"pos":[2262,2296],"content":"The channel data for each channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel data for each channel.","pos":[0,34]}]},{"pos":[2485,2602],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.IChannelInfo\n  id: IChannelInfo\n  children:\n  - System.Runtime.Remoting.IChannelInfo.ChannelData\n  langs:\n  - csharp\n  name: IChannelInfo\n  nameWithType: IChannelInfo\n  fullName: System.Runtime.Remoting.IChannelInfo\n  type: Interface\n  summary: Provides custom channel information that is carried along with the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>.\n  remarks: \"This interface is implemented by the <xref:System.Runtime.Remoting.ObjRef.ChannelInfo%2A?displayProperty=fullName> property. It provides access to transport specific information contributed by the channels that are able to receive calls in the process or application domain where the object lives. This interface might also be used when building custom <xref:System.Runtime.Remoting.ObjRef> classes.  \\n  \\n When an existing object instance is marshaled to produce a <xref:System.Runtime.Remoting.ObjRef>, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> is copied from the channel (see <xref:System.Runtime.Remoting.Channels.IChannelReceiver>) for each registered channel and stored in the <xref:System.Runtime.Remoting.ObjRef>. When the <xref:System.Runtime.Remoting.ObjRef> is unmarshaled at its destination, the <xref:System.Runtime.Remoting.IChannelInfo.ChannelData%2A> provided through the IChannelInfo interface can be examined and used by corresponding channels in that process or application domain to create a transport message sink that manages the communication between the proxy and the server object.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IChannelInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.IChannelInfo.ChannelData\n  id: ChannelData\n  parent: System.Runtime.Remoting.IChannelInfo\n  langs:\n  - csharp\n  name: ChannelData\n  nameWithType: IChannelInfo.ChannelData\n  fullName: System.Runtime.Remoting.IChannelInfo.ChannelData\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets and sets the channel data for each channel.\n  syntax:\n    content: public object[] ChannelData { get; set; }\n    return:\n      type: System.Object[]\n      description: The channel data for each channel.\n  overload: System.Runtime.Remoting.IChannelInfo.ChannelData*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Remoting.IChannelInfo.ChannelData\n  parent: System.Runtime.Remoting.IChannelInfo\n  isExternal: false\n  name: ChannelData\n  nameWithType: IChannelInfo.ChannelData\n  fullName: System.Runtime.Remoting.IChannelInfo.ChannelData\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.IChannelInfo.ChannelData*\n  parent: System.Runtime.Remoting.IChannelInfo\n  isExternal: false\n  name: ChannelData\n  nameWithType: IChannelInfo.ChannelData\n"}