{"nodes":[{"pos":[1460,1620],"content":"Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.","pos":[0,160]}]},{"pos":[1633,4961],"content":"In [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] there are two concepts concerning focus: keyboard focus and logical focus.       Keyboard focus pertains to the element which is currently receiving keyboard input.  There can be only one element with keyboard focus.  This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName> returns the element with keyboard focus.       Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within a specific focus scope.       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.       There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.  An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.  It is possible to define a focus scope within a focus scope.  In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.       The following scenario illustrates how keyboard focus and logical focus change in a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.  When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.  The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.  When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.  The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.  The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.       The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.       For more information on focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md) and the [Focus Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> there are two concepts concerning focus: keyboard focus and logical focus.","pos":[0,139],"source":"In [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] there are two concepts concerning focus: keyboard focus and logical focus."},{"content":"Keyboard focus pertains to the element which is currently receiving keyboard input.","pos":[146,229]},{"content":"There can be only one element with keyboard focus.","pos":[231,281]},{"content":"This element with keyboard focus has &lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[283,391],"source":"  This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`."},{"content":"&lt;xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName&gt; returns the element with keyboard focus.","pos":[393,513],"source":"  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName> returns the element with keyboard focus."},{"content":"Logical focus pertains to the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within a specific focus scope.","pos":[520,664],"source":"       Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within a specific focus scope."},{"content":"A focus scope is a container element that keeps track of the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within its scope.","pos":[671,833],"source":"       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope."},{"content":"By default, the &lt;xref:System.Windows.Window&gt; class is a focus scope as are the &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt;, and &lt;xref:System.Windows.Controls.ToolBar&gt; classes.","pos":[835,1046],"source":"  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes."},{"content":"An element which is a focus scope has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[1048,1157],"source":"  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`."},{"content":"There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.","pos":[1164,1296]},{"content":"An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.","pos":[1298,1429]},{"content":"It is possible to define a focus scope within a focus scope.","pos":[1431,1491]},{"content":"In this case, both the parent focus scope and the child focus scope can have a &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt;.","pos":[1493,1656],"source":"  In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>."},{"content":"The following scenario illustrates how keyboard focus and logical focus change in a <ph id=\"ph1\">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has a &lt;xref:System.Windows.Window&gt; with a &lt;xref:System.Windows.Controls.TextBox&gt; and a &lt;xref:System.Windows.Controls.Menu&gt; which has a &lt;xref:System.Windows.Controls.MenuItem&gt;.","pos":[1663,2001],"source":"       The following scenario illustrates how keyboard focus and logical focus change in a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>."},{"content":"When keyboard focus changes from the &lt;xref:System.Windows.Controls.TextBox&gt; to the &lt;xref:System.Windows.Controls.MenuItem&gt;, the &lt;xref:System.Windows.Controls.TextBox&gt; losses keyboard focus but retains logical focus for the &lt;xref:System.Windows.Window&gt; focus scope.","pos":[2003,2267],"source":"  When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope."},{"content":"The &lt;xref:System.Windows.Controls.MenuItem&gt; obtains keyboard focus and obtains logical focus for the &lt;xref:System.Windows.Controls.Menu&gt; focus scope.","pos":[2269,2418],"source":"  The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope."},{"content":"When keyboard focus returns to the root &lt;xref:System.Windows.Window&gt;, the element in &lt;xref:System.Windows.Window&gt; focus scope with logical focus will obtain keyboard focus, which in this case is the &lt;xref:System.Windows.Controls.TextBox&gt;.","pos":[2420,2658],"source":"  When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>."},{"content":"The &lt;xref:System.Windows.Controls.TextBox&gt; now has keyboard focus and logical focus.","pos":[2660,2744],"source":"  The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus."},{"content":"The &lt;xref:System.Windows.Controls.MenuItem&gt; loses keyboard focus, but retains logical focus for the &lt;xref:System.Windows.Controls.Menu&gt; focus scope.","pos":[2746,2894],"source":"  The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope."},{"content":"The default value of &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; on a &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ToolBar&gt;, and &lt;xref:System.Windows.Controls.ContextMenu&gt; is <ph id=\"ph1\">`true`</ph>.","pos":[2901,3148],"source":"       The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`."},{"content":"For more information on focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and the <bpt id=\"p2\">[</bpt>Focus Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3155,3314],"source":"       For more information on focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md) and the [Focus Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5744,5832],"content":"Adds a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a handler for the &lt;xref:System.Windows.Input.FocusManager.GotFocus&gt; attached event.","pos":[0,88],"source":"Adds a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event."}]},{"pos":[6077,6208],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[6292,6322],"content":"The event handler to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be added.","pos":[0,30]}]},{"pos":[7063,7152],"content":"Adds a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a handler for the &lt;xref:System.Windows.Input.FocusManager.LostFocus&gt; attached event.","pos":[0,89],"source":"Adds a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event."}]},{"pos":[7398,7529],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[7613,7643],"content":"The event handler to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be added.","pos":[0,30]}]},{"pos":[8154,8244],"content":"Identifies the <xref:System.Windows.Input.FocusManager.FocusedElement*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Input.FocusManager.FocusedElement*&gt; attached property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Input.FocusManager.FocusedElement*> attached property."}]},{"pos":[8426,8438],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8978,9047],"content":"Gets the element with logical focus within the specified focus scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the element with logical focus within the specified focus scope.","pos":[0,69]}]},{"pos":[9060,9662],"content":"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.  This object may or may not have keyboard focus.  Keyboard focus refers to the element that receives keyboard input.  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).       If `element` is not a focus scope, this method will return `null`.       Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A&gt; is the element which has logical focus for a specific focus scope.","pos":[0,129],"source":"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope."},{"content":"This object may or may not have keyboard focus.","pos":[131,178]},{"content":"Keyboard focus refers to the element that receives keyboard input.","pos":[180,246]},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[248,378],"source":"  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"If <ph id=\"ph1\">`element`</ph> is not a focus scope, this method will return <ph id=\"ph2\">`null`</ph>.","pos":[385,451],"source":"       If `element` is not a focus scope, this method will return `null`."},{"content":"Use &lt;xref:System.Windows.Input.FocusManager.SetFocusedElement%2A&gt;, to specify the element with logical focus within a specified focus scope.","pos":[458,598],"source":"       Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope."}]},{"pos":[10396,10456],"content":"The element with logical focus in the specified focus scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element with logical focus in the specified focus scope.","pos":[0,60]}]},{"pos":[10529,10589],"content":"The element in the specified focus scope with logical focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element in the specified focus scope with logical focus.","pos":[0,60]}]},{"pos":[10771,10856],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11359,11548],"content":"Determines the closest ancestor of the specified element that has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope*&gt; set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines the closest ancestor of the specified element that has <xref:System.Windows.Input.FocusManager.IsFocusScope*> set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[11561,12438],"content":"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value of &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; on a &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ToolBar&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt; is <ph id=\"ph1\">`true`</ph>.","pos":[0,243],"source":"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`."},{"content":"A focus scope is a container element that keeps track of the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within its scope.","pos":[250,412],"source":"       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope."},{"content":"By default, the &lt;xref:System.Windows.Window&gt; class is a focus scope as are the &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt;, and &lt;xref:System.Windows.Controls.ToolBar&gt; classes.","pos":[414,625],"source":"  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes."},{"content":"An element which is a focus scope has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[627,736],"source":"  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`."},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[743,873],"source":"       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[12663,12710],"content":"The element to get the closest focus scope for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to get the closest focus scope for.","pos":[0,47]}]},{"pos":[12786,12828],"content":"The focus scope for the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The focus scope for the specified element.","pos":[0,42]}]},{"pos":[13006,13091],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13604,13707],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a focus scope.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.DependencyObject\"></xref> is a focus scope."},{"pos":[13720,14345],"content":"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A focus scope is a container element that keeps track of the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within its scope.","pos":[0,162],"source":"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope."},{"content":"By default, the &lt;xref:System.Windows.Window&gt; class is a focus scope as are the &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt;, and &lt;xref:System.Windows.Controls.ToolBar&gt; classes.","pos":[164,375],"source":"  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes."},{"content":"An element which is a focus scope has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[377,486],"source":"  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`."},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[493,623],"source":"       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[14545,14598],"content":"The element from which to read the attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element from which to read the attached property.","pos":[0,53]}]},{"pos":[14657,14947],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Windows.Input.FocusManager.IsFocusScope*&gt; is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> on the specified element; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Input.FocusManager.IsFocusScope*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> on the specified element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15409,15489],"content":"Identifies the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Input.FocusManager.GotFocus&gt; attached event.","pos":[0,80],"source":"Identifies the <xref:System.Windows.Input.FocusManager.GotFocus> attached event."}]},{"pos":[15648,15660],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16094,16182],"content":"Identifies the <xref:System.Windows.Input.FocusManager.IsFocusScope*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Input.FocusManager.IsFocusScope*&gt; attached property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Input.FocusManager.IsFocusScope*> attached property."}]},{"pos":[16195,17072],"content":"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value of &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; on a &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ToolBar&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt; is <ph id=\"ph1\">`true`</ph>.","pos":[0,243],"source":"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`."},{"content":"A focus scope is a container element that keeps track of the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within its scope.","pos":[250,412],"source":"       A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope."},{"content":"By default, the &lt;xref:System.Windows.Window&gt; class is a focus scope as are the &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt;, and &lt;xref:System.Windows.Controls.ToolBar&gt; classes.","pos":[414,625],"source":"  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes."},{"content":"An element which is a focus scope has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[627,736],"source":"  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`."},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[743,873],"source":"       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[17253,17265],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17669,17750],"content":"Identifies the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Input.FocusManager.LostFocus&gt; attached event.","pos":[0,81],"source":"Identifies the <xref:System.Windows.Input.FocusManager.LostFocus> attached event."}]},{"pos":[17910,17922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18607,18698],"content":"Removes a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a handler for the &lt;xref:System.Windows.Input.FocusManager.GotFocus&gt; attached event.","pos":[0,91],"source":"Removes a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event."}]},{"pos":[18946,19077],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[19161,19193],"content":"The event handler to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be removed.","pos":[0,32]}]},{"pos":[19952,20044],"content":"Removes a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a handler for the &lt;xref:System.Windows.Input.FocusManager.LostFocus&gt; attached event.","pos":[0,92],"source":"Removes a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event."}]},{"pos":[20293,20424],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[20508,20540],"content":"The event handler to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be removed.","pos":[0,32]}]},{"pos":[21250,21294],"content":"Sets logical focus on the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets logical focus on the specified element.","pos":[0,44]}]},{"pos":[21307,22509],"content":"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.  This object may or may not have keyboard focus.  Keyboard focus refers to the element that receives keyboard input.  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).       It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.  For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling SetFocusedElement.  The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.       SetFocusedElement will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A&gt; is the element which has logical focus for the specific focus scope.","pos":[0,131],"source":"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope."},{"content":"This object may or may not have keyboard focus.","pos":[133,180]},{"content":"Keyboard focus refers to the element that receives keyboard input.","pos":[182,248]},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[250,380],"source":"  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.","pos":[387,484]},{"content":"For example, if a &lt;xref:System.Windows.Controls.StackPanel&gt; is a focus scope and its parent &lt;xref:System.Windows.Window&gt; is a focus scope, a &lt;xref:System.Windows.Controls.TextBox&gt; child of the &lt;xref:System.Windows.Controls.StackPanel&gt; could specify the &lt;xref:System.Windows.Window&gt; as the focus scope when calling SetFocusedElement.","pos":[486,818],"source":"  For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling SetFocusedElement."},{"content":"The &lt;xref:System.Windows.Controls.TextBox&gt; is then &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A&gt; for both the &lt;xref:System.Windows.Window&gt; focus scope and the &lt;xref:System.Windows.Controls.StackPanel&gt; focus scope.","pos":[820,1046],"source":"  The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope."},{"content":"SetFocusedElement will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.","pos":[1053,1198]}]},{"pos":[23255,23371],"content":"The focus scope in which to make the specified element the <xref:System.Windows.Input.FocusManager.FocusedElement*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The focus scope in which to make the specified element the &lt;xref:System.Windows.Input.FocusManager.FocusedElement*&gt;.","pos":[0,116],"source":"The focus scope in which to make the specified element the <xref:System.Windows.Input.FocusManager.FocusedElement*>."}]},{"pos":[23448,23485],"content":"The element to give logical focus to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to give logical focus to.","pos":[0,37]}]},{"pos":[24134,24223],"content":"Sets the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as a focus scope.","needQuote":true,"needEscape":true,"source":"Sets the specified <xref href=\"System.Windows.DependencyObject\"></xref> as a focus scope."},{"pos":[24236,24861],"content":"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A focus scope is a container element that keeps track of the &lt;xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName&gt; within its scope.","pos":[0,162],"source":"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope."},{"content":"By default, the &lt;xref:System.Windows.Window&gt; class is a focus scope as are the &lt;xref:System.Windows.Controls.Menu&gt;, &lt;xref:System.Windows.Controls.ContextMenu&gt;, and &lt;xref:System.Windows.Controls.ToolBar&gt; classes.","pos":[164,375],"source":"  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes."},{"content":"An element which is a focus scope has &lt;xref:System.Windows.Input.FocusManager.IsFocusScope%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[377,486],"source":"  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`."},{"content":"For more information on focus, keyboard focus, and logical focus, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[493,623],"source":"       For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[25429,25463],"content":"The element to make a focus scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to make a focus scope.","pos":[0,34]}]},{"pos":[25526,25692],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <ph id=\"ph1\">`element`</ph> is a focus scope; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `element` is a focus scope; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.FocusManager\n  id: FocusManager\n  children:\n  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  - System.Windows.Input.FocusManager.FocusedElementProperty\n  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)\n  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)\n  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)\n  - System.Windows.Input.FocusManager.GotFocusEvent\n  - System.Windows.Input.FocusManager.IsFocusScopeProperty\n  - System.Windows.Input.FocusManager.LostFocusEvent\n  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)\n  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)\n  langs:\n  - csharp\n  name: FocusManager\n  nameWithType: FocusManager\n  fullName: System.Windows.Input.FocusManager\n  type: Class\n  summary: Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.\n  remarks: \"In [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] there are two concepts concerning focus: keyboard focus and logical focus.  \\n  \\n Keyboard focus pertains to the element which is currently receiving keyboard input.  There can be only one element with keyboard focus.  This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName> returns the element with keyboard focus.  \\n  \\n Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within a specific focus scope.  \\n  \\n A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.  \\n  \\n There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.  An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.  It is possible to define a focus scope within a focus scope.  In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.  \\n  \\n The following scenario illustrates how keyboard focus and logical focus change in a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.  When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.  The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.  When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.  The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.  The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.  \\n  \\n The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.  \\n  \\n For more information on focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md) and the [Focus Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static class FocusManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.\n  syntax:\n    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.RoutedEventHandler\n      description: The event handler to be added.\n  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.\n  syntax:\n    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.RoutedEventHandler\n      description: The event handler to be added.\n  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.FocusedElementProperty\n  id: FocusedElementProperty\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: FocusedElementProperty\n  nameWithType: FocusManager.FocusedElementProperty\n  fullName: System.Windows.Input.FocusManager.FocusedElementProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref:System.Windows.Input.FocusManager.FocusedElement*> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)\n  id: GetFocusedElement(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: GetFocusedElement(DependencyObject)\n  nameWithType: FocusManager.GetFocusedElement(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the element with logical focus within the specified focus scope.\n  remarks: \"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.  This object may or may not have keyboard focus.  Keyboard focus refers to the element that receives keyboard input.  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If `element` is not a focus scope, this method will return `null`.  \\n  \\n Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.\"\n  example:\n  - \"The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \\n  \\n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]\"\n  syntax:\n    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The element with logical focus in the specified focus scope.\n    return:\n      type: System.Windows.IInputElement\n      description: The element in the specified focus scope with logical focus.\n  overload: System.Windows.Input.FocusManager.GetFocusedElement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)\n  id: GetFocusScope(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: GetFocusScope(DependencyObject)\n  nameWithType: FocusManager.GetFocusScope(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines the closest ancestor of the specified element that has <xref:System.Windows.Input.FocusManager.IsFocusScope*> set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: \"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.  \\n  \\n A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.  \\n  \\n For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The element to get the closest focus scope for.\n    return:\n      type: System.Windows.DependencyObject\n      description: The focus scope for the specified element.\n  overload: System.Windows.Input.FocusManager.GetFocusScope*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)\n  id: GetIsFocusScope(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: GetIsFocusScope(DependencyObject)\n  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.DependencyObject\"></xref> is a focus scope.\n  remarks: \"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.  \\n  \\n For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The element from which to read the attached property.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Input.FocusManager.IsFocusScope*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> on the specified element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.FocusManager.GetIsFocusScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.GotFocusEvent\n  id: GotFocusEvent\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: GotFocusEvent\n  nameWithType: FocusManager.GotFocusEvent\n  fullName: System.Windows.Input.FocusManager.GotFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty\n  id: IsFocusScopeProperty\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: IsFocusScopeProperty\n  nameWithType: FocusManager.IsFocusScopeProperty\n  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref:System.Windows.Input.FocusManager.IsFocusScope*> attached property.\n  remarks: \"The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.  \\n  \\n A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.  \\n  \\n For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.LostFocusEvent\n  id: LostFocusEvent\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: LostFocusEvent\n  nameWithType: FocusManager.LostFocusEvent\n  fullName: System.Windows.Input.FocusManager.LostFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref:System.Windows.Input.FocusManager.GotFocus> attached event.\n  syntax:\n    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.RoutedEventHandler\n      description: The event handler to be removed.\n  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref:System.Windows.Input.FocusManager.LostFocus> attached event.\n  syntax:\n    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.RoutedEventHandler\n      description: The event handler to be removed.\n  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)\n  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: SetFocusedElement(DependencyObject,IInputElement)\n  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)\n  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets logical focus on the specified element.\n  remarks: \"The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.  This object may or may not have keyboard focus.  Keyboard focus refers to the element that receives keyboard input.  For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.  For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling SetFocusedElement.  The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.  \\n  \\n SetFocusedElement will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.\"\n  example:\n  - \"The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \\n  \\n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]\"\n  syntax:\n    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The focus scope in which to make the specified element the <xref:System.Windows.Input.FocusManager.FocusedElement*>.\n    - id: value\n      type: System.Windows.IInputElement\n      description: The element to give logical focus to.\n  overload: System.Windows.Input.FocusManager.SetFocusedElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)\n  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)\n  parent: System.Windows.Input.FocusManager\n  langs:\n  - csharp\n  name: SetIsFocusScope(DependencyObject,Boolean)\n  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)\n  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets the specified <xref href=\"System.Windows.DependencyObject\"></xref> as a focus scope.\n  remarks: \"A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> within its scope.  By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.  An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.  \\n  \\n For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The follow example makes an element a focus scope by using SetIsFocusScope.  \\n  \\n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]\"\n  syntax:\n    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The element to make a focus scope.\n    - id: value\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if `element` is a focus scope; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.FocusManager.SetIsFocusScope*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)\n- uid: System.Windows.Input.FocusManager.FocusedElementProperty\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: FocusedElementProperty\n  nameWithType: FocusManager.FocusedElementProperty\n  fullName: System.Windows.Input.FocusManager.FocusedElementProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetFocusedElement(DependencyObject)\n  nameWithType: FocusManager.GetFocusedElement(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetFocusScope(DependencyObject)\n  nameWithType: FocusManager.GetFocusScope(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)\n- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetIsFocusScope(DependencyObject)\n  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)\n  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.FocusManager.GotFocusEvent\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GotFocusEvent\n  nameWithType: FocusManager.GotFocusEvent\n  fullName: System.Windows.Input.FocusManager.GotFocusEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: IsFocusScopeProperty\n  nameWithType: FocusManager.IsFocusScopeProperty\n  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty\n- uid: System.Windows.Input.FocusManager.LostFocusEvent\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: LostFocusEvent\n  nameWithType: FocusManager.LostFocusEvent\n  fullName: System.Windows.Input.FocusManager.LostFocusEvent\n- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)\n- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)\n- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: SetFocusedElement(DependencyObject,IInputElement)\n  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)\n  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)\n- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: SetIsFocusScope(DependencyObject,Boolean)\n  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)\n  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)\n- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: AddGotFocusHandler\n  nameWithType: FocusManager.AddGotFocusHandler\n- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: AddLostFocusHandler\n  nameWithType: FocusManager.AddLostFocusHandler\n- uid: System.Windows.Input.FocusManager.GetFocusedElement*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetFocusedElement\n  nameWithType: FocusManager.GetFocusedElement\n- uid: System.Windows.Input.FocusManager.GetFocusScope*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetFocusScope\n  nameWithType: FocusManager.GetFocusScope\n- uid: System.Windows.Input.FocusManager.GetIsFocusScope*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: GetIsFocusScope\n  nameWithType: FocusManager.GetIsFocusScope\n- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: RemoveGotFocusHandler\n  nameWithType: FocusManager.RemoveGotFocusHandler\n- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: RemoveLostFocusHandler\n  nameWithType: FocusManager.RemoveLostFocusHandler\n- uid: System.Windows.Input.FocusManager.SetFocusedElement*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: SetFocusedElement\n  nameWithType: FocusManager.SetFocusedElement\n- uid: System.Windows.Input.FocusManager.SetIsFocusScope*\n  parent: System.Windows.Input.FocusManager\n  isExternal: false\n  name: SetIsFocusScope\n  nameWithType: FocusManager.SetIsFocusScope\n"}