{"nodes":[{"pos":[591,679],"content":"The exception that is thrown when there is an attempt to read or write protected memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown when there is an attempt to read or write protected memory.","pos":[0,88]}]},{"pos":[6135,6284],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.AccessViolationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a system-supplied message that describes the error.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a system-supplied message that describes the error."},{"pos":[6297,6939],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to read or write protected memory. This is often an indication that other memory has been corrupted.\" This message takes into account the current system culture.       The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The localized error message string.|","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Exception.Message%2A&gt; property of the new instance to a system-supplied message that describes the error, such as \"Attempted to read or write protected memory.","pos":[0,205],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to read or write protected memory."},{"content":"This is often an indication that other memory has been corrupted.\"","pos":[206,272]},{"content":"This message takes into account the current system culture.","pos":[273,332]},{"content":"The following table shows the initial property values for an instance of &lt;xref:System.AccessViolationException&gt;.","pos":[339,451],"source":"       The following table shows the initial property values for an instance of <xref:System.AccessViolationException>."},{"content":"|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|<ph id=\"ph1\">`null`</ph>.|   |&lt;xref:System.Exception.Message%2A&gt;|The localized error message string.|","pos":[457,633],"source":"      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The localized error message string.|"}]},{"pos":[7531,7674],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.AccessViolationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified message that describes the error.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a specified message that describes the error."},{"pos":[7687,7999],"content":"The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table shows the initial property values for an instance of &lt;xref:System.AccessViolationException&gt;.","pos":[0,112],"source":"The following table shows the initial property values for an instance of <xref:System.AccessViolationException>."},{"content":"|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|<ph id=\"ph1\">`null`</ph>.|   |&lt;xref:System.Exception.Message%2A&gt;|The error message string specified in <ph id=\"ph2\">`message`</ph>.|","pos":[118,307],"source":"      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The error message string specified in `message`.|"}]},{"pos":[8153,8315],"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[0,162],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[42,162]}]}]},{"pos":[9070,9184],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.AccessViolationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with serialized data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with serialized data."},{"pos":[9196,9404],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[114,208],"source":" For more information, see [XML and SOAP Serialization](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[9682,9792],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the serialized object data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data."},{"pos":[9888,10014],"content":"The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains contextual information about the source or destination.","pos":[0,126],"source":"The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination."}]},{"pos":[10591,10790],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.AccessViolationException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of this exception.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."},{"pos":[10803,11551],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.       The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","needQuote":false,"needEscape":true,"nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the &lt;xref:System.Exception.InnerException%2A&gt; property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The &lt;xref:System.Exception.InnerException%2A&gt; property returns the same value that is passed into the constructor, or <ph id=\"ph1\">`null`</ph> if the &lt;xref:System.Exception.InnerException%2A&gt; property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."},{"content":"The following table shows the initial property values for an instance of &lt;xref:System.AccessViolationException&gt;.","pos":[434,546],"source":"       The following table shows the initial property values for an instance of <xref:System.AccessViolationException>."},{"content":"|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|<ph id=\"ph1\">`null`</ph>.|   |&lt;xref:System.Exception.Message%2A&gt;|The error message string specified in <ph id=\"ph2\">`message`</ph>.|","pos":[552,741],"source":"      |Property|Value|   |--------------|-----------|   |<xref:System.Exception.InnerException%2A>|`null`.|   |<xref:System.Exception.Message%2A>|The error message string specified in `message`.|"}]},{"pos":[11731,11893],"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[0,162],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[42,162]}]}]},{"pos":[11967,12267],"content":"The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <ph id=\"ph1\">`innerException`</ph> parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> block that handles the inner exception.","pos":[58,300],"source":" If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AccessViolationException\n  id: AccessViolationException\n  children:\n  - System.AccessViolationException.#ctor\n  - System.AccessViolationException.#ctor(System.String)\n  - System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.AccessViolationException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: AccessViolationException\n  nameWithType: AccessViolationException\n  fullName: System.AccessViolationException\n  type: Class\n  summary: The exception that is thrown when there is an attempt to read or write protected memory.\n  remarks: \"An access violation occurs in unmanaged or unsafe code when the code attempts to read or write to memory that has not been allocated, or to which it does not have access. This usually occurs because a pointer has a bad value. Not all reads or writes through bad pointers lead to access violations, so an access violation usually indicates that several reads or writes have occurred through bad pointers, and that memory might be corrupted. Thus, access violations almost always indicate serious programming errors. An AccessViolationException clearly identifies these serious errors.  \\n  \\n In programs consisting entirely of verifiable managed code, all references are either valid or null, and access violations are impossible. Any operation that attempts to reference a null reference in verifiable code throws a <xref:System.NullReferenceException> exception. An AccessViolationException occurs only when verifiable managed code interacts with unmanaged code or with unsafe managed code.  \\n  \\n## Troubleshooting AccessViolationException exceptions  \\n An AccessViolationException exception can occur only in unsafe managed code or when verifiable managed code interacts with unmanaged code:  \\n  \\n-   An access violation that occurs in unsafe managed code can be expressed as either a <xref:System.NullReferenceException> exception or an AccessViolationException exception, depending on the platform.  \\n  \\n-   An access violation in unmanaged code that bubbles up to managed code is always wrapped in an AccessViolationException exception.  \\n  \\n In either case, you can identify and correct the cause of the AccessViolationException exception as follows:  \\n  \\n Make sure that the memory that you are attempting to access has been allocated.  \\n An AccessViolationException exception is always thrown by an attempt to access protected memory -- that is, to access memory that is not allocated or that is not owned by a process.  \\n  \\n Automatic memory management is one of the services that the common language runtime provides. If managed code provides the same functionality as your unmanagede code, you may wish to move to managed code to take advantage of this functionality. For more information, see [Automatic Memory Management](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Make sure that the memory that you are attempting to access has not been corrupted.  \\n If several read or write operations have occurred through bad pointers, memory may be corrupted. This typically occurs when reading or writing to addresses outside of a predefined buffer.  \\n  \\n## AccessViolationException and try/catch blocks  \\n Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], AccessViolationException exceptions thrown by the common language runtime are not handled by the `catch` statement in a structured exception handler if the exception occurs outside of the memory reserved by the common language runtime. To handle such an AccessViolationException exception, you should apply the  <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attribute to the method in which the exception is thrown. This change does not affect AccessViolationException exceptions thrown by user code, which can continue to be caught by a `catch` statement. For code written for previous versions of the .NET Framework that you want to recompile and run without modification on the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you can add the [\\\\<legacyCorruptedStateExceptionsPolicy>](../Topic/%3ClegacyCorruptedStateExceptionsPolicy%3E%20Element.md) element to your app's configuration file. Note that you can also receive notification of the exceptions if you have defined a handler for the <xref:System.AppDomain.FirstChanceException?displayProperty=fullName> or <xref:System.AppDomain.UnhandledException?displayProperty=fullName> event.  \\n  \\n## Version Information  \\n This exception is thrown in the .NET Framework 2.0 and later versions. In earlier versions of the .NET Framework, an access violation in unmanaged code or unsafe managed code is represented by a <xref:System.NullReferenceException> in managed code. A <xref:System.NullReferenceException> is also thrown when a null reference is dereferenced in verifiable managed code, an occurrence that does not involve data corruption, and there is no way to distinguish between the two situations in versions 1.0 or 1.1.  \\n  \\n Administrators can allow selected applications to revert to the behavior of the .NET Framework version 1.1. Place the following line in the [\\\\&lt;runtime\\\\&gt; Element](../Topic/%3Cruntime%3E%20Element.md) section of the configuration file for the application:  \\n  \\n```  \\n<legacyNullReferenceExceptionPolicy enabled = \\\"1\\\"/>  \\n```\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class AccessViolationException : SystemException\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.AccessViolationException.#ctor\n  id: '#ctor'\n  parent: System.AccessViolationException\n  langs:\n  - csharp\n  name: AccessViolationException()\n  nameWithType: AccessViolationException.AccessViolationException()\n  fullName: System.AccessViolationException.AccessViolationException()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a system-supplied message that describes the error.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Attempted to read or write protected memory. This is often an indication that other memory has been corrupted.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public AccessViolationException ();\n    parameters: []\n  overload: System.AccessViolationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AccessViolationException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.AccessViolationException\n  langs:\n  - csharp\n  name: AccessViolationException(String)\n  nameWithType: AccessViolationException.AccessViolationException(String)\n  fullName: System.AccessViolationException.AccessViolationException(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a specified message that describes the error.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public AccessViolationException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n  overload: System.AccessViolationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.AccessViolationException\n  langs:\n  - csharp\n  name: AccessViolationException(SerializationInfo,StreamingContext)\n  nameWithType: AccessViolationException.AccessViolationException(SerializationInfo,StreamingContext)\n  fullName: System.AccessViolationException.AccessViolationException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected AccessViolationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.\n  overload: System.AccessViolationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AccessViolationException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.AccessViolationException\n  langs:\n  - csharp\n  name: AccessViolationException(String,Exception)\n  nameWithType: AccessViolationException.AccessViolationException(String,Exception)\n  fullName: System.AccessViolationException.AccessViolationException(String,Exception)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AccessViolationException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.AccessViolationException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public AccessViolationException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.\n  overload: System.AccessViolationException.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.SystemException\n  isExternal: false\n  name: System.SystemException\n- uid: System.AccessViolationException.#ctor\n  parent: System.AccessViolationException\n  isExternal: false\n  name: AccessViolationException()\n  nameWithType: AccessViolationException.AccessViolationException()\n  fullName: System.AccessViolationException.AccessViolationException()\n- uid: System.AccessViolationException.#ctor(System.String)\n  parent: System.AccessViolationException\n  isExternal: false\n  name: AccessViolationException(String)\n  nameWithType: AccessViolationException.AccessViolationException(String)\n  fullName: System.AccessViolationException.AccessViolationException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.AccessViolationException\n  isExternal: false\n  name: AccessViolationException(SerializationInfo,StreamingContext)\n  nameWithType: AccessViolationException.AccessViolationException(SerializationInfo,StreamingContext)\n  fullName: System.AccessViolationException.AccessViolationException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.AccessViolationException.#ctor(System.String,System.Exception)\n  parent: System.AccessViolationException\n  isExternal: false\n  name: AccessViolationException(String,Exception)\n  nameWithType: AccessViolationException.AccessViolationException(String,Exception)\n  fullName: System.AccessViolationException.AccessViolationException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.AccessViolationException.#ctor*\n  parent: System.AccessViolationException\n  isExternal: false\n  name: AccessViolationException\n  nameWithType: AccessViolationException.AccessViolationException\n"}