{"nodes":[{"pos":[2614,2708],"content":"Represents a persistence service that uses a SQL database to store workflow state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a persistence service that uses a SQL database to store workflow state information.","pos":[0,94]}]},{"pos":[2721,5162],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The SqlWorkflowPersistenceService class represents a fully-functional persistence service. You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.       The SqlWorkflowPersistenceService participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>. That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface.       The SqlWorkflowPersistenceService supports locking of workflow instances. This feature is used when several workflow runtimes share the same database. A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime. The SqlWorkflowPersistenceService does not load a workflow instance that is marked as \"in use\" by another runtime. Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination. The locks can also be released automatically after a period of inactivity. This period of inactivity can be set using the constructor of the SqlWorkflowPersistenceService class.  It can also be set through the configuration file.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.       Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>. For workflows that contain timers, the SqlWorkflowPersistenceService records the time when the workflow's next timer expires. The SqlWorkflowPersistenceService periodically polls the database, looking for workflows whose timers have expired. The frequency of the polling interval can be set using the SqlWorkflowPersistenceService constructor or using a configuration file.      > [!NOTE] >  When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the SqlWorkflowPersistenceService in a workflow application, it is recommended to use a single database for both persistence and tracking.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The SqlWorkflowPersistenceService class represents a fully-functional persistence service.","pos":[0,178],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The SqlWorkflowPersistenceService class represents a fully-functional persistence service."},{"content":"You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.","pos":[179,341]},{"content":"The SqlWorkflowPersistenceService participates in the workflow transaction batching functionality provided by the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;.","pos":[348,532],"source":"       The SqlWorkflowPersistenceService participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>."},{"content":"That is, it adds objects that represent pending writes to the SQL database to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; and implements the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface.","pos":[533,752],"source":" That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface."},{"content":"The SqlWorkflowPersistenceService supports locking of workflow instances.","pos":[759,832]},{"content":"This feature is used when several workflow runtimes share the same database.","pos":[833,909]},{"content":"A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime.","pos":[910,1039]},{"content":"The SqlWorkflowPersistenceService does not load a workflow instance that is marked as \"in use\" by another runtime.","pos":[1040,1154]},{"content":"Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination.","pos":[1155,1280]},{"content":"The locks can also be released automatically after a period of inactivity.","pos":[1281,1355]},{"content":"This period of inactivity can be set using the constructor of the SqlWorkflowPersistenceService class.","pos":[1356,1458]},{"content":"It can also be set through the configuration file.","pos":[1460,1510]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> persistence services in general, see the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class.","pos":[1517,1689],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class."},{"content":"Workflow instances can contain timers, for example, if they have a &lt;xref:System.Workflow.Activities.DelayActivity&gt;.","pos":[1696,1811],"source":"       Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>."},{"content":"For workflows that contain timers, the SqlWorkflowPersistenceService records the time when the workflow's next timer expires.","pos":[1812,1937]},{"content":"The SqlWorkflowPersistenceService periodically polls the database, looking for workflows whose timers have expired.","pos":[1938,2053]},{"content":"The frequency of the polling interval can be set using the SqlWorkflowPersistenceService constructor or using a configuration file.","pos":[2054,2185]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When using both the &lt;xref:System.Workflow.Runtime.Tracking.SqlTrackingService&gt; and the SqlWorkflowPersistenceService in a workflow application, it is recommended to use a single database for both persistence and tracking.","pos":[2191,2425],"source":"      > [!NOTE] >  When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the SqlWorkflowPersistenceService in a workflow application, it is recommended to use a single database for both persistence and tracking."}]},{"pos":[7384,7541],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class by using the specified parameters."},{"pos":[7553,7942],"content":"This constructor is invoked when the workflow runtime engine loads services from an application configuration file. It can also be programmatically invoked with the `NameValueCollection` parameter. The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`. An <xref:System.ArgumentException> is thrown if parameters contain any other keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is invoked when the workflow runtime engine loads services from an application configuration file.","pos":[0,115]},{"content":"It can also be programmatically invoked with the <ph id=\"ph1\">`NameValueCollection`</ph> parameter.","pos":[116,197],"source":" It can also be programmatically invoked with the `NameValueCollection` parameter."},{"content":"The valid parameters are <ph id=\"ph1\">`ConnectionString`</ph>, <ph id=\"ph2\">`OwnershipTimeoutSeconds`</ph>, <ph id=\"ph3\">`UnloadOnIdle`</ph>, and <ph id=\"ph4\">`EnableRetries`</ph>.","pos":[198,306],"source":" The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`."},{"content":"An &lt;xref:System.ArgumentException&gt; is thrown if parameters contain any other keys.","pos":[307,389],"source":" An <xref:System.ArgumentException> is thrown if parameters contain any other keys."}]},{"pos":[8187,8294],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains startup parameters.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that contains startup parameters."},{"pos":[8484,8555],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> contains an invalid database connection string.","needQuote":true,"needEscape":true,"source":"<code>parameters</code> contains an invalid database connection string."},{"pos":[8658,8787],"content":"<ph id=\"ph1\">&lt;code&gt;parameters &lt;/code&gt;</ph>is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>parameters </code>is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[9382,9545],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the database connection string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class by using the database connection string."},{"pos":[9721,9756],"content":"A valid database connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid database connection string.","pos":[0,35]}]},{"pos":[9954,10089],"content":"<ph id=\"ph1\">&lt;code&gt;connectionString&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>connectionString</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[10856,11035],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a database connection string and other parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class using a database connection string and other parameters."},{"pos":[11047,11294],"content":"Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking. To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`.","needQuote":true,"needEscape":true,"nodes":[{"content":"Note that using this constructor (which provides a value for <ph id=\"ph1\">`instanceOwnershipDuration`</ph>) enables locking.","pos":[0,106],"source":"Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking."},{"content":"To create a persistence service that does not enable locking, use a different constructor that does not specify <ph id=\"ph1\">`instanceOwnershipDuration`</ph>.","pos":[107,247],"source":" To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`."}]},{"pos":[11551,11586],"content":"A valid database connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid database connection string.","pos":[0,35]}]},{"pos":[11656,11768],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to unload the workflow when it is in an idle state.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to unload the workflow when it is in an idle state."},{"pos":[11852,11915],"content":"The length of time that locks are maintained on idle workflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of time that locks are maintained on idle workflows.","pos":[0,63]}]},{"pos":[11989,12089],"content":"The frequency at which the persistence service polls the database for workflows with expired timers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The frequency at which the persistence service polls the database for workflows with expired timers.","pos":[0,100]}]},{"pos":[12287,12422],"content":"<ph id=\"ph1\">&lt;code&gt;connectionString&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>connectionString</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[12926,13090],"content":"Gets and sets a value that specifies whether the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> retries committing a work batch.","needQuote":true,"needEscape":true,"source":"Gets and sets a value that specifies whether the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> retries committing a work batch."},{"pos":[13103,14027],"content":"The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:      -   Polling for expired database timers.      -   Loading workflow instance states.      -   Reloading workflow instances when the workflow run-time engine starts.      -   Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.       Besides being set programmatically, this functionality can be enabled through a configuration file. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to set this property through a configuration file, see [Workflow Configuration Files](http://msdn.microsoft.com/en-us/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).       For general information about retrying work batch transactions, see [Batching State Information in Workflows](http://msdn.microsoft.com/en-us/ecda18ba-9140-4bd7-b13d-6787fdf5959d).","needQuote":false,"needEscape":true,"nodes":[{"content":"The following work items cannot be batched and any transaction retries must be handled through the <ph id=\"ph1\">`EnableRetries`</ph> property:      -   Polling for expired database timers.","pos":[0,170],"source":"The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:      -   Polling for expired database timers."},{"content":"-   Loading workflow instance states.","pos":[176,213]},{"content":"-   Reloading workflow instances when the workflow run-time engine starts.","pos":[219,293]},{"content":"-   Calling &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A&gt;.","pos":[299,399],"source":"      -   Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>."},{"content":"Besides being set programmatically, this functionality can be enabled through a configuration file.","pos":[406,505]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> how to set this property through a configuration file, see <bpt id=\"p1\">[</bpt>Workflow Configuration Files<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909)</ept>.","pos":[506,725],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to set this property through a configuration file, see [Workflow Configuration Files](http://msdn.microsoft.com/en-us/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909)."},{"content":"For general information about retrying work batch transactions, see <bpt id=\"p1\">[</bpt>Batching State Information in Workflows<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ecda18ba-9140-4bd7-b13d-6787fdf5959d)</ept>.","pos":[732,912],"source":"       For general information about retrying work batch transactions, see [Batching State Information in Workflows](http://msdn.microsoft.com/en-us/ecda18ba-9140-4bd7-b13d-6787fdf5959d)."}]},{"pos":[14150,14419],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service should retry committing the work batch; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service should retry committing the work batch; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,190],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service should retry committing the work batch; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[191,269],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[15043,15102],"content":"Retrieves instance descriptions of all persisted workflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves instance descriptions of all persisted workflows.","pos":[0,59]}]},{"pos":[15443,15477],"content":"A list of all persisted workflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of all persisted workflows.","pos":[0,34]}]},{"pos":[16313,16371],"content":"Retrieves the specified completed scope from the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the specified completed scope from the database.","pos":[0,58]}]},{"pos":[16383,16550],"content":"The workflow run-time engine uses LoadCompletedContextActivity during compensation. LoadCompletedContextActivity should only be called by the workflow run-time engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow run-time engine uses LoadCompletedContextActivity during compensation. LoadCompletedContextActivity should only be called by the workflow run-time engine.","pos":[0,167],"nodes":[{"content":"The workflow run-time engine uses LoadCompletedContextActivity during compensation.","pos":[0,83]},{"content":"LoadCompletedContextActivity should only be called by the workflow run-time engine.","pos":[84,167]}]}]},{"pos":[16800,16845],"content":"The <xref:System.Guid> of the scope activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; of the scope activity.","pos":[0,45],"source":"The <xref:System.Guid> of the scope activity."}]},{"pos":[16941,17039],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that encloses the scope activity.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that encloses the scope activity."},{"pos":[17123,17223],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the completed scope.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the completed scope."},{"pos":[17452,17524],"content":"A scope that matches <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> could not be found in the database.","needQuote":true,"needEscape":true,"source":"A scope that matches <code>id</code> could not be found in the database."},{"pos":[18102,18160],"content":"Retrieves a list of ids for workflows with expired timers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of ids for workflows with expired timers.","pos":[0,58]}]},{"pos":[18370,18418],"content":"A list of ids for workflows with expired timers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of ids for workflows with expired timers.","pos":[0,48]}]},{"pos":[19052,19092],"content":"Gets the length of the loading interval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the loading interval.","pos":[0,40]}]},{"pos":[19104,19135],"content":"The default value is 2 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 2 minutes.","pos":[0,31]}]},{"pos":[19259,19359],"content":"The frequency at which the persistence service polls the database for workflows with expired timers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The frequency at which the persistence service polls the database for workflows with expired timers.","pos":[0,100]}]},{"pos":[20073,20139],"content":"Retrieves the specified workflow instance state from the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the specified workflow instance state from the database.","pos":[0,66]}]},{"pos":[20151,20231],"content":"LoadWorkflowInstanceState should only be called by the workflow run-time engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadWorkflowInstanceState should only be called by the workflow run-time engine.","pos":[0,80]}]},{"pos":[20423,20477],"content":"The <xref:System.Guid> of the workflow instance state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; of the workflow instance state.","pos":[0,54],"source":"The <xref:System.Guid> of the workflow instance state."}]},{"pos":[20561,20684],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance."},{"pos":[20910,21000],"content":"A workflow instance state that matches <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> could not be found in the database.","needQuote":true,"needEscape":true,"source":"A workflow instance state that matches <code>id</code> could not be found in the database."},{"pos":[21488,21547],"content":"Starts a new timer and recovers running workflow instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts a new timer and recovers running workflow instances.","pos":[0,59]}]},{"pos":[22418,22467],"content":"Saves the state of the specified completed scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the state of the specified completed scope.","pos":[0,49]}]},{"pos":[22480,22600],"content":"<ph id=\"ph1\">`completedScopeActivity`</ph> is serialized and added to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.","needQuote":false,"needEscape":true,"source":"`completedScopeActivity` is serialized and added to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>."},{"pos":[22864,22964],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the completed scope.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the completed scope."},{"pos":[23813,23857],"content":"Saves the specified workflow instance state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the specified workflow instance state.","pos":[0,44]}]},{"pos":[23870,24630],"content":"`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state. The user must configure the `instanceOwnershipDuration` parameter in the constructor. This value decides the time interval during which the instance can be locked by a host. If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`rootActivity`</ph> is serialized and written to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.","pos":[0,112],"source":"`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>."},{"content":"The out-of-box &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt; implements locking of the workflow instance state.","pos":[113,247],"source":" The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state."},{"content":"The user must configure the <ph id=\"ph1\">`instanceOwnershipDuration`</ph> parameter in the constructor.","pos":[248,333],"source":" The user must configure the `instanceOwnershipDuration` parameter in the constructor."},{"content":"This value decides the time interval during which the instance can be locked by a host.","pos":[334,421]},{"content":"If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt; occurs.","pos":[422,622],"source":" If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class.","pos":[623,760],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class."}]},{"pos":[24884,24927],"content":"The root activity of the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root activity of the workflow instance.","pos":[0,43]}]},{"pos":[24991,25204],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the workflow instance should not be locked; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the workflow instance should be locked.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow instance should not be locked; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the workflow instance should be locked."},{"pos":[25846,25883],"content":"Gets the service instance identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service instance identifier.","pos":[0,37]}]},{"pos":[25895,25929],"content":"The default value is <ph id=\"ph1\">`Guid.Empty`</ph>.","needQuote":true,"needEscape":true,"source":"The default value is `Guid.Empty`."},{"pos":[26047,26079],"content":"The service instance identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service instance identifier.","pos":[0,32]}]},{"pos":[26657,26751],"content":"Starts the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Starts the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref>."},{"pos":[26763,26821],"content":"Start must only be called by the workflow run-time engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start must only be called by the workflow run-time engine.","pos":[0,58]}]},{"pos":[27458,27490],"content":"Stops the service and the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops the service and the timer.","pos":[0,32]}]},{"pos":[28531,28623],"content":"Writes an <xref:System.Collections.ICollection> of serialized state objects to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes an &lt;xref:System.Collections.ICollection&gt; of serialized state objects to the database.","pos":[0,92],"source":"Writes an <xref:System.Collections.ICollection> of serialized state objects to the database."}]},{"pos":[28635,28722],"content":"The serialized state objects that are contained in <ph id=\"ph1\">`items`</ph> are written to the database.","needQuote":true,"needEscape":true,"source":"The serialized state objects that are contained in `items` are written to the database."},{"pos":[28957,29012],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.Transaction\"></xref>."},{"pos":[29091,29177],"content":"The <xref:System.Collections.ICollection> of work items to be written to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.ICollection&gt; of work items to be written to the database.","pos":[0,86],"source":"The <xref:System.Collections.ICollection> of work items to be written to the database."}]},{"pos":[29461,29517],"content":"An error occurred while trying to write to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while trying to write to the database.","pos":[0,56]}]},{"pos":[30350,30402],"content":"Completes the work batch and releases any resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes the work batch and releases any resources.","pos":[0,52]}]},{"pos":[30415,30979],"content":"In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,       <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> is a no-op. If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> to perform any actions required on `items` dictated by your implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"In the out-of-box implementation of the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;,       &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A&gt; is a no-op.","pos":[0,245],"source":"In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,       <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> is a no-op."},{"content":"If you inherit from and extend the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt; class, you may use &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A&gt; to perform any actions required on <ph id=\"ph1\">`items`</ph> dictated by your implementation.","pos":[246,562],"source":" If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> to perform any actions required on `items` dictated by your implementation."}]},{"pos":[31169,31329],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the commit succeeded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the commit succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31408,31477],"content":"An <xref:System.Collections.ICollection> of serialized state objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; of serialized state objects.","pos":[0,69],"source":"An <xref:System.Collections.ICollection> of serialized state objects."}]},{"pos":[32404,32520],"content":"Returns a value that indicates whether the collection of serialized state objects should be written to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the collection of serialized state objects should be written to the database.","pos":[0,116]}]},{"pos":[32532,32859],"content":"&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit%2A&gt; always returns <ph id=\"ph1\">`true`</ph>, which instructs the workflow run-time engine to invoke &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit%2A&gt; on the batch.","needQuote":true,"needEscape":true,"source":"<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit%2A> always returns `true`, which instructs the workflow run-time engine to invoke <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit%2A> on the batch."},{"pos":[33046,33145],"content":"An <xref:System.Collections.ICollection> of serialized state objects to be written to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; of serialized state objects to be written to the database.","pos":[0,99],"source":"An <xref:System.Collections.ICollection> of serialized state objects to be written to the database."}]},{"pos":[33204,33505],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that the batch should be committed; &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit*&gt; always returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that the batch should be committed; <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit*> always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[34254,34346],"content":"Returns a value that indicates whether the workflow is unloaded when it is in an idle state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the workflow is unloaded when it is in an idle state.","pos":[0,92]}]},{"pos":[34565,34688],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance."},{"pos":[34747,34939],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the workflow is unloaded when it is in an idle state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow is unloaded when it is in an idle state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35728,35784],"content":"Unlocks access to the specified workflow instance state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unlocks access to the specified workflow instance state.","pos":[0,56]}]},{"pos":[35796,36097],"content":"This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an &lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;.","pos":[0,301],"source":"This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>."}]},{"pos":[36339,36462],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  id: SqlWorkflowPersistenceService\n  children:\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)\n  langs:\n  - csharp\n  name: SqlWorkflowPersistenceService\n  nameWithType: SqlWorkflowPersistenceService\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  type: Class\n  summary: Represents a persistence service that uses a SQL database to store workflow state information.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The SqlWorkflowPersistenceService class represents a fully-functional persistence service. You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.  \\n  \\n The SqlWorkflowPersistenceService participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>. That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface.  \\n  \\n The SqlWorkflowPersistenceService supports locking of workflow instances. This feature is used when several workflow runtimes share the same database. A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime. The SqlWorkflowPersistenceService does not load a workflow instance that is marked as \\\"in use\\\" by another runtime. Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination. The locks can also be released automatically after a period of inactivity. This period of inactivity can be set using the constructor of the SqlWorkflowPersistenceService class.  It can also be set through the configuration file.  \\n  \\n [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.  \\n  \\n Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>. For workflows that contain timers, the SqlWorkflowPersistenceService records the time when the workflow's next timer expires. The SqlWorkflowPersistenceService periodically polls the database, looking for workflows whose timers have expired. The frequency of the polling interval can be set using the SqlWorkflowPersistenceService constructor or using a configuration file.  \\n  \\n> [!NOTE]\\n>  When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the SqlWorkflowPersistenceService in a workflow application, it is recommended to use a single database for both persistence and tracking.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork\n  inheritance:\n  - System.Object\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService\n  implements:\n  - System.Workflow.Runtime.IPendingWork\n  inheritedMembers:\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)\n  id: '#ctor(System.Collections.Specialized.NameValueCollection)'\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: SqlWorkflowPersistenceService(NameValueCollection)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class by using the specified parameters.\n  remarks: This constructor is invoked when the workflow runtime engine loads services from an application configuration file. It can also be programmatically invoked with the `NameValueCollection` parameter. The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`. An <xref:System.ArgumentException> is thrown if parameters contain any other keys.\n  syntax:\n    content: public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that contains startup parameters.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>parameters</code> contains an invalid database connection string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>parameters </code>is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: SqlWorkflowPersistenceService(String)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class by using the database connection string.\n  syntax:\n    content: public SqlWorkflowPersistenceService (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: A valid database connection string.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>connectionString</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)\n  id: '#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)'\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> class using a database connection string and other parameters.\n  remarks: Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking. To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`.\n  syntax:\n    content: public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: A valid database connection string.\n    - id: unloadOnIdle\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to unload the workflow when it is in an idle state.\n    - id: instanceOwnershipDuration\n      type: System.TimeSpan\n      description: The length of time that locks are maintained on idle workflows.\n    - id: loadingInterval\n      type: System.TimeSpan\n      description: The frequency at which the persistence service polls the database for workflows with expired timers.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>connectionString</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries\n  id: EnableRetries\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: EnableRetries\n  nameWithType: SqlWorkflowPersistenceService.EnableRetries\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Gets and sets a value that specifies whether the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref> retries committing a work batch.\n  remarks: \"The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:  \\n  \\n-   Polling for expired database timers.  \\n  \\n-   Loading workflow instance states.  \\n  \\n-   Reloading workflow instances when the workflow run-time engine starts.  \\n  \\n-   Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.  \\n  \\n Besides being set programmatically, this functionality can be enabled through a configuration file. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to set this property through a configuration file, see [Workflow Configuration Files](http://msdn.microsoft.com/en-us/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).  \\n  \\n For general information about retrying work batch transactions, see [Batching State Information in Workflows](http://msdn.microsoft.com/en-us/ecda18ba-9140-4bd7-b13d-6787fdf5959d).\"\n  syntax:\n    content: public bool EnableRetries { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service should retry committing the work batch; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows\n  id: GetAllWorkflows\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: GetAllWorkflows()\n  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Retrieves instance descriptions of all persisted workflows.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription> GetAllWorkflows ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription}\n      description: A list of all persisted workflows.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)\n  id: LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: LoadCompletedContextActivity(Guid,Activity)\n  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Retrieves the specified completed scope from the database.\n  remarks: The workflow run-time engine uses LoadCompletedContextActivity during compensation. LoadCompletedContextActivity should only be called by the workflow run-time engine.\n  syntax:\n    content: protected override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: The <xref:System.Guid> of the scope activity.\n    - id: outerActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that encloses the scope activity.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the completed scope.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A scope that matches <code>id</code> could not be found in the database.\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds\n  id: LoadExpiredTimerWorkflowIds\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: LoadExpiredTimerWorkflowIds()\n  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Retrieves a list of ids for workflows with expired timers.\n  syntax:\n    content: public System.Collections.Generic.IList<Guid> LoadExpiredTimerWorkflowIds ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Guid}\n      description: A list of ids for workflows with expired timers.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval\n  id: LoadingInterval\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: LoadingInterval\n  nameWithType: SqlWorkflowPersistenceService.LoadingInterval\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Gets the length of the loading interval.\n  remarks: The default value is 2 minutes.\n  syntax:\n    content: public TimeSpan LoadingInterval { get; }\n    return:\n      type: System.TimeSpan\n      description: The frequency at which the persistence service polls the database for workflows with expired timers.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)\n  id: LoadWorkflowInstanceState(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: LoadWorkflowInstanceState(Guid)\n  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Retrieves the specified workflow instance state from the database.\n  remarks: LoadWorkflowInstanceState should only be called by the workflow run-time engine.\n  syntax:\n    content: protected override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: The <xref:System.Guid> of the workflow instance state.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A workflow instance state that matches <code>id</code> could not be found in the database.\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted\n  id: OnStarted\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: OnStarted()\n  nameWithType: SqlWorkflowPersistenceService.OnStarted()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Starts a new timer and recovers running workflow instances.\n  syntax:\n    content: protected override void OnStarted ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)\n  id: SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: SaveCompletedContextActivity(Activity)\n  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Saves the state of the specified completed scope.\n  remarks: '`completedScopeActivity` is serialized and added to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.'\n  syntax:\n    content: protected override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);\n    parameters:\n    - id: completedScopeActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the completed scope.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)\n  id: SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: SaveWorkflowInstanceState(Activity,Boolean)\n  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Saves the specified workflow instance state.\n  remarks: '`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state. The user must configure the `instanceOwnershipDuration` parameter in the constructor. This value decides the time interval during which the instance can be locked by a host. If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.'\n  syntax:\n    content: protected override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);\n    parameters:\n    - id: rootActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The root activity of the workflow instance.\n    - id: unlock\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow instance should not be locked; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the workflow instance should be locked.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId\n  id: ServiceInstanceId\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: ServiceInstanceId\n  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Gets the service instance identifier.\n  remarks: The default value is `Guid.Empty`.\n  syntax:\n    content: public Guid ServiceInstanceId { get; }\n    return:\n      type: System.Guid\n      description: The service instance identifier.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start\n  id: Start\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: SqlWorkflowPersistenceService.Start()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Starts the <xref href=\"System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\"></xref>.\n  remarks: Start must only be called by the workflow run-time engine.\n  syntax:\n    content: protected override void Start ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop\n  id: Stop\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: SqlWorkflowPersistenceService.Stop()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Stops the service and the timer.\n  syntax:\n    content: protected override void Stop ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)\n  id: System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)\n  isEii: true\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Writes an <xref:System.Collections.ICollection> of serialized state objects to the database.\n  remarks: The serialized state objects that are contained in `items` are written to the database.\n  syntax:\n    content: void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: A <xref href=\"System.Transactions.Transaction\"></xref>.\n    - id: items\n      type: System.Collections.ICollection\n      description: The <xref:System.Collections.ICollection> of work items to be written to the database.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit*\n  exceptions:\n  - type: System.Workflow.Runtime.Hosting.PersistenceException\n    commentId: T:System.Workflow.Runtime.Hosting.PersistenceException\n    description: An error occurred while trying to write to the database.\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)\n  id: System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)\n  isEii: true\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Completes the work batch and releases any resources.\n  remarks: \"In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,  \\n  \\n <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> is a no-op. If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> to perform any actions required on `items` dictated by your implementation.\"\n  syntax:\n    content: void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);\n    parameters:\n    - id: succeeded\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the commit succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: items\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of serialized state objects.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)\n  id: System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)\n  isEii: true\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Returns a value that indicates whether the collection of serialized state objects should be written to the database.\n  remarks: <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit%2A> always returns `true`, which instructs the workflow run-time engine to invoke <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit%2A> on the batch.\n  syntax:\n    content: bool IPendingWork.MustCommit (System.Collections.ICollection items);\n    parameters:\n    - id: items\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of serialized state objects to be written to the database.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that the batch should be committed; <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit*> always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)\n  id: UnloadOnIdle(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: UnloadOnIdle(Activity)\n  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Returns a value that indicates whether the workflow is unloaded when it is in an idle state.\n  syntax:\n    content: protected override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow is unloaded when it is in an idle state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)\n  id: UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  langs:\n  - csharp\n  name: UnlockWorkflowInstanceState(Activity)\n  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Unlocks access to the specified workflow instance state.\n  remarks: This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.\n  syntax:\n    content: protected override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);\n    parameters:\n    - id: rootActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: An <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that represents the root activity of the workflow instance.\n  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.Hosting.WorkflowPersistenceService\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Workflow.Runtime.Hosting.PersistenceException\n  parent: System.Workflow.Runtime.Hosting\n  isExternal: false\n  name: PersistenceException\n  nameWithType: PersistenceException\n  fullName: System.Workflow.Runtime.Hosting.PersistenceException\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SqlWorkflowPersistenceService(NameValueCollection)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SqlWorkflowPersistenceService(String)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: EnableRetries\n  nameWithType: SqlWorkflowPersistenceService.EnableRetries\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: GetAllWorkflows()\n  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows()\n- uid: System.Collections.Generic.IEnumerable{System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SqlPersistenceWorkflowInstanceDescription>\n  nameWithType: IEnumerable<SqlPersistenceWorkflowInstanceDescription>\n  fullName: System.Collections.Generic.IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription\n    name: SqlPersistenceWorkflowInstanceDescription\n    nameWithType: SqlPersistenceWorkflowInstanceDescription\n    fullName: SqlPersistenceWorkflowInstanceDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadCompletedContextActivity(Guid,Activity)\n  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadExpiredTimerWorkflowIds()\n  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()\n- uid: System.Collections.Generic.IList{System.Guid}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Guid>\n  nameWithType: IList<Guid>\n  fullName: System.Collections.Generic.IList<System.Guid>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Guid>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadingInterval\n  nameWithType: SqlWorkflowPersistenceService.LoadingInterval\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadWorkflowInstanceState(Guid)\n  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: OnStarted()\n  nameWithType: SqlWorkflowPersistenceService.OnStarted()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted()\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SaveCompletedContextActivity(Activity)\n  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SaveWorkflowInstanceState(Activity,Boolean)\n  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: ServiceInstanceId\n  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: Start()\n  nameWithType: SqlWorkflowPersistenceService.Start()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start()\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: Stop()\n  nameWithType: SqlWorkflowPersistenceService.Stop()\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop()\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: UnloadOnIdle(Activity)\n  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(Activity)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: UnlockWorkflowInstanceState(Activity)\n  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)\n  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SqlWorkflowPersistenceService\n  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: EnableRetries\n  nameWithType: SqlWorkflowPersistenceService.EnableRetries\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: GetAllWorkflows\n  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadCompletedContextActivity\n  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadExpiredTimerWorkflowIds\n  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadingInterval\n  nameWithType: SqlWorkflowPersistenceService.LoadingInterval\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: LoadWorkflowInstanceState\n  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: OnStarted\n  nameWithType: SqlWorkflowPersistenceService.OnStarted\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SaveCompletedContextActivity\n  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: SaveWorkflowInstanceState\n  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: ServiceInstanceId\n  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: Start\n  nameWithType: SqlWorkflowPersistenceService.Start\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: Stop\n  nameWithType: SqlWorkflowPersistenceService.Stop\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.Commit\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.Complete\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: System.Workflow.Runtime.IPendingWork.MustCommit\n  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: UnloadOnIdle\n  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle\n- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState*\n  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService\n  isExternal: false\n  name: UnlockWorkflowInstanceState\n  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState\n"}