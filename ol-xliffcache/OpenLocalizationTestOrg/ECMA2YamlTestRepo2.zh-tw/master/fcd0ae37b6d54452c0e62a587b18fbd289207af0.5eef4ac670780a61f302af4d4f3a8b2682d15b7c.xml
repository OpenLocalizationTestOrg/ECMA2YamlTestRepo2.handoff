{"nodes":[{"pos":[1393,1620],"content":"Implements the `AspNetCompiler` task. Use the `AspNetCompiler` element in your project file to create and execute this task. For usage and parameter information, see [AspNetCompiler Task](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">`AspNetCompiler`</ph> task.","pos":[0,37],"source":"Implements the `AspNetCompiler` task."},{"content":"Use the <ph id=\"ph1\">`AspNetCompiler`</ph> element in your project file to create and execute this task.","pos":[38,124],"source":" Use the `AspNetCompiler` element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>AspNetCompiler Task<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[125,227],"source":" For usage and parameter information, see [AspNetCompiler Task](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5556,5654],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Tasks.AspNetCompiler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.AspNetCompiler\"></xref> class."},{"pos":[6434,6495],"content":"Generates command line arguments for the AspNetCompiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates command line arguments for the AspNetCompiler tool.","pos":[0,61]}]},{"pos":[6750,6791],"content":"Command line builder to add arguments to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Command line builder to add arguments to.","pos":[0,41]}]},{"pos":[7363,7627],"content":"Gets or sets a Boolean value that indicates whether the <xref:System.Security.AllowPartiallyTrustedCallersAttribute>, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates.","pos":[0,264],"source":"Gets or sets a Boolean value that indicates whether the <xref:System.Security.AllowPartiallyTrustedCallersAttribute>, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates."}]},{"pos":[7639,7808],"content":"This property must be combined with the <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyFile%2A> or <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer%2A> properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property must be combined with the &lt;xref:Microsoft.Build.Tasks.AspNetCompiler.KeyFile%2A&gt; or &lt;xref:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer%2A&gt; properties.","pos":[0,169],"source":"This property must be combined with the <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyFile%2A> or <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer%2A> properties."}]},{"pos":[7945,8233],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; should be applied to the strongly named assembly that Aspnet_compiler.exe generates; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> should be applied to the strongly named assembly that Aspnet_compiler.exe generates; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8696,8796],"content":"Gets or sets a Boolean value that indicates whether the precompiled application will be built clean.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the precompiled application will be built clean.","pos":[0,100]}]},{"pos":[8808,8920],"content":"If this property is `true`, any previously compiled components will be recompiled. The default value is `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, any previously compiled components will be recompiled.","pos":[0,82],"source":"If this property is `true`, any previously compiled components will be recompiled."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[83,112],"source":" The default value is `false`."}]},{"pos":[9034,9221],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the precompiled application will be built clean; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the precompiled application will be built clean; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9661,9773],"content":"Gets or sets a Boolean value that indicates whether debug information (.PDB file) is emitted during compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether debug information (.PDB file) is emitted during compilation.","pos":[0,112]}]},{"pos":[9785,9814],"content":"The default value is <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"The default value is `false`."},{"pos":[9928,10131],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the debug information (.PDB file) is emitted during compilation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the debug information (.PDB file) is emitted during compilation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10591,10871],"content":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyDelaySignAttribute>, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly.","pos":[0,280],"source":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyDelaySignAttribute>, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly."}]},{"pos":[10989,11228],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt; should be applied to the generated assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyDelaySignAttribute> should be applied to the generated assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11686,11721],"content":"Executes the <ph id=\"ph1\">`AspNetCompiler`</ph> task.","needQuote":true,"needEscape":true,"source":"Executes the `AspNetCompiler` task."},{"pos":[11855,12019],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if task execution succeeded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12486,12604],"content":"Gets or sets a Boolean value that indicates whether one assembly should be generated for each page in the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether one assembly should be generated for each page in the application.","pos":[0,118]}]},{"pos":[12617,12962],"content":"Each assembly is named with the virtual path of the original page unless the name would exceed the operating system limit for file names, in which case a hash is generated and used for the assembly name.       You cannot use this property for in-place compilation; in-place compilation honors configuration settings for compilation batch mode.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each assembly is named with the virtual path of the original page unless the name would exceed the operating system limit for file names, in which case a hash is generated and used for the assembly name.       You cannot use this property for in-place compilation; in-place compilation honors configuration settings for compilation batch mode.","pos":[0,343],"nodes":[{"content":"Each assembly is named with the virtual path of the original page unless the name would exceed the operating system limit for file names, in which case a hash is generated and used for the assembly name.","pos":[0,203]},{"content":"You cannot use this property for in-place compilation; in-place compilation honors configuration settings for compilation batch mode.","pos":[210,343]}]}]},{"pos":[13082,13287],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one assembly should be generated for each page in the application; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one assembly should be generated for each page in the application; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13732,13884],"content":"Gets or sets a Boolean value that specifies whether existing files in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDir</ph><ept id=\"p1\">&lt;/code&gt;</ept> directory and its subdirectories should be overwritten.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that specifies whether existing files in the <code>targetDir</code> directory and its subdirectories should be overwritten."},{"pos":[13998,14237],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if existing files in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDir</ph><ept id=\"p2\">&lt;/code&gt;</ept> directory and its subdirectories should be overwritten; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if existing files in the <code>targetDir</code> directory and its subdirectories should be overwritten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14766,14820],"content":"Returns the full file path of the AspNetCompiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the full file path of the AspNetCompiler tool.","pos":[0,54]}]},{"pos":[14973,15019],"content":"The full file path of the AspNetCompiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full file path of the AspNetCompiler tool.","pos":[0,46]}]},{"pos":[15511,15775],"content":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyNameAttribute>, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.","pos":[0,264],"source":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyNameAttribute>, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly."}]},{"pos":[15787,15908],"content":"This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property must be combined with &lt;xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A&gt; property.","pos":[0,121],"source":"This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property."}]},{"pos":[16030,16266],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt; should be applied to the compiled assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyKeyNameAttribute> should be applied to the compiled assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16723,16989],"content":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyFileAttribute>, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.","pos":[0,266],"source":"Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyFileAttribute>, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly."}]},{"pos":[17001,17122],"content":"This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property must be combined with &lt;xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A&gt; property.","pos":[0,121],"source":"This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property."}]},{"pos":[17239,17475],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt; should be applied to the compiled assembly; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyKeyFileAttribute> should be applied to the compiled assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17952,18011],"content":"Gets or sets the full IIS metabase path of the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the full IIS metabase path of the application.","pos":[0,59]}]},{"pos":[18133,18179],"content":"The full IIS metabase path of the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full IIS metabase path of the application.","pos":[0,46]}]},{"pos":[18661,18726],"content":"Gets or sets the physical path of the application to be compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the physical path of the application to be compiled.","pos":[0,65]}]},{"pos":[18738,18818],"content":"If this property is missing, the IIS metabase is used to locate the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this property is missing, the IIS metabase is used to locate the application.","pos":[0,80]}]},{"pos":[18940,18992],"content":"The physical path of the application to be compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the application to be compiled.","pos":[0,52]}]},{"pos":[19524,19642],"content":"Gets or sets the TargetFrameworkMoniker indicating which .NET Framework version of aspnet_compiler.exe should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the TargetFrameworkMoniker indicating which .NET Framework version of aspnet_compiler.exe should be used.","pos":[0,118]}]},{"pos":[19654,19691],"content":"Only accepts .NET Framework monikers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Only accepts .NET Framework monikers.","pos":[0,37]}]},{"pos":[19823,19858],"content":"Returns the TargetFrameworkMoniker.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the TargetFrameworkMoniker.","pos":[0,35]}]},{"pos":[20340,20408],"content":"Gets or sets the physical path to which the application is compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the physical path to which the application is compiled.","pos":[0,68]}]},{"pos":[20420,20478],"content":"If not specified, the application is precompiled in-place.","needQuote":true,"needEscape":true,"nodes":[{"content":"If not specified, the application is precompiled in-place.","pos":[0,58]}]},{"pos":[20598,20653],"content":"The physical path to which the application is compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to which the application is compiled.","pos":[0,55]}]},{"pos":[21113,21176],"content":"Gets the name of the AspNetCompiler tool (aspnet_compiler.exe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the AspNetCompiler tool (aspnet_compiler.exe).","pos":[0,63]}]},{"pos":[21301,21337],"content":"The name of the AspNetCompiler tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the AspNetCompiler tool.","pos":[0,36]}]},{"pos":[21805,21904],"content":"Gets or sets a Boolean value that indicates whether the precompiled application will be updateable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the precompiled application will be updateable.","pos":[0,99]}]},{"pos":[21916,21945],"content":"The default value is <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"The default value is `false`."},{"pos":[22064,22250],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the precompiled application will be updateable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the precompiled application will be updateable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22764,22905],"content":"Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.","pos":[0,141],"nodes":[{"content":"Validates input parameters and logs errors or warnings, if any.","pos":[0,63]},{"content":"Returns a Boolean value that indicates whether task execution should proceed.","pos":[64,141]}]}]},{"pos":[23053,23222],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if task execution should proceed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution should proceed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23705,23769],"content":"Gets or sets the virtual path of the application to be compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the virtual path of the application to be compiled.","pos":[0,64]}]},{"pos":[23781,23957],"content":"If `PhysicalPath` specified, the physical path is used to locate the application. Otherwise, the IIS metabase is used, and the application is assumed to be in the default site.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`PhysicalPath`</ph> specified, the physical path is used to locate the application.","pos":[0,81],"source":"If `PhysicalPath` specified, the physical path is used to locate the application."},{"content":"Otherwise, the IIS metabase is used, and the application is assumed to be in the default site.","pos":[82,176]}]},{"pos":[24078,24129],"content":"The virtual path of the application to be compiled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the application to be compiled.","pos":[0,51]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.AspNetCompiler\n  id: AspNetCompiler\n  children:\n  - Microsoft.Build.Tasks.AspNetCompiler.#ctor\n  - Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  - Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers\n  - Microsoft.Build.Tasks.AspNetCompiler.Clean\n  - Microsoft.Build.Tasks.AspNetCompiler.Debug\n  - Microsoft.Build.Tasks.AspNetCompiler.DelaySign\n  - Microsoft.Build.Tasks.AspNetCompiler.Execute\n  - Microsoft.Build.Tasks.AspNetCompiler.FixedNames\n  - Microsoft.Build.Tasks.AspNetCompiler.Force\n  - Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool\n  - Microsoft.Build.Tasks.AspNetCompiler.KeyContainer\n  - Microsoft.Build.Tasks.AspNetCompiler.KeyFile\n  - Microsoft.Build.Tasks.AspNetCompiler.MetabasePath\n  - Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath\n  - Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker\n  - Microsoft.Build.Tasks.AspNetCompiler.TargetPath\n  - Microsoft.Build.Tasks.AspNetCompiler.ToolName\n  - Microsoft.Build.Tasks.AspNetCompiler.Updateable\n  - Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters\n  - Microsoft.Build.Tasks.AspNetCompiler.VirtualPath\n  langs:\n  - csharp\n  name: AspNetCompiler\n  nameWithType: AspNetCompiler\n  fullName: Microsoft.Build.Tasks.AspNetCompiler\n  type: Class\n  summary: Implements the `AspNetCompiler` task. Use the `AspNetCompiler` element in your project file to create and execute this task. For usage and parameter information, see [AspNetCompiler Task](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public class AspNetCompiler : Microsoft.Build.Tasks.ToolTaskExtension'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Utilities.ToolTask\n  - Microsoft.Build.Tasks.ToolTaskExtension\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  - Microsoft.Build.Tasks.ToolTaskExtension.Bag\n  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands\n  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands\n  - Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)\n  - Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)\n  - Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors\n  - Microsoft.Build.Tasks.ToolTaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  - Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute\n  - Microsoft.Build.Utilities.ToolTask.Cancel\n  - Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)\n  - Microsoft.Build.Utilities.ToolTask.EchoOff\n  - Microsoft.Build.Utilities.ToolTask.EnvironmentOverride\n  - Microsoft.Build.Utilities.ToolTask.EnvironmentVariables\n  - Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.ExitCode\n  - Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)\n  - Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory\n  - Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors\n  - Microsoft.Build.Utilities.ToolTask.InitializeHostObject\n  - Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)\n  - Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)\n  - Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError\n  - Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)\n  - Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding\n  - Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)\n  - Microsoft.Build.Utilities.ToolTask.SkipTaskExecution\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse\n  - Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportance\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse\n  - Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance\n  - Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout\n  - Microsoft.Build.Utilities.ToolTask.Timeout\n  - Microsoft.Build.Utilities.ToolTask.ToolCanceled\n  - Microsoft.Build.Utilities.ToolTask.ToolExe\n  - Microsoft.Build.Utilities.ToolTask.ToolPath\n  - Microsoft.Build.Utilities.ToolTask.UseCommandProcessor\n  - Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: AspNetCompiler()\n  nameWithType: AspNetCompiler.AspNetCompiler()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AspNetCompiler()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.AspNetCompiler\"></xref> class.\n  syntax:\n    content: public AspNetCompiler ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.AspNetCompiler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  id: AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: AddCommandLineCommands(CommandLineBuilderExtension)\n  nameWithType: AspNetCompiler.AddCommandLineCommands(CommandLineBuilderExtension)\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(CommandLineBuilderExtension)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Generates command line arguments for the AspNetCompiler tool.\n  syntax:\n    content: protected override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);\n    parameters:\n    - id: commandLine\n      type: Microsoft.Build.Tasks.CommandLineBuilderExtension\n      description: Command line builder to add arguments to.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers\n  id: AllowPartiallyTrustedCallers\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: AllowPartiallyTrustedCallers\n  nameWithType: AspNetCompiler.AllowPartiallyTrustedCallers\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the <xref:System.Security.AllowPartiallyTrustedCallersAttribute>, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates.\n  remarks: This property must be combined with the <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyFile%2A> or <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer%2A> properties.\n  syntax:\n    content: public bool AllowPartiallyTrustedCallers { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> should be applied to the strongly named assembly that Aspnet_compiler.exe generates; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Clean\n  id: Clean\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: Clean\n  nameWithType: AspNetCompiler.Clean\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Clean\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the precompiled application will be built clean.\n  remarks: If this property is `true`, any previously compiled components will be recompiled. The default value is `false`.\n  syntax:\n    content: public bool Clean { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the precompiled application will be built clean; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.Clean*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Debug\n  id: Debug\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: Debug\n  nameWithType: AspNetCompiler.Debug\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Debug\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether debug information (.PDB file) is emitted during compilation.\n  remarks: The default value is `false`.\n  syntax:\n    content: public bool Debug { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the debug information (.PDB file) is emitted during compilation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.Debug*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.DelaySign\n  id: DelaySign\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: DelaySign\n  nameWithType: AspNetCompiler.DelaySign\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.DelaySign\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyDelaySignAttribute>, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly.\n  syntax:\n    content: public bool DelaySign { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyDelaySignAttribute> should be applied to the generated assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.DelaySign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: AspNetCompiler.Execute()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the `AspNetCompiler` task.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.FixedNames\n  id: FixedNames\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: FixedNames\n  nameWithType: AspNetCompiler.FixedNames\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.FixedNames\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether one assembly should be generated for each page in the application.\n  remarks: \"Each assembly is named with the virtual path of the original page unless the name would exceed the operating system limit for file names, in which case a hash is generated and used for the assembly name.  \\n  \\n You cannot use this property for in-place compilation; in-place compilation honors configuration settings for compilation batch mode.\"\n  syntax:\n    content: public bool FixedNames { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one assembly should be generated for each page in the application; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.FixedNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Force\n  id: Force\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: Force\n  nameWithType: AspNetCompiler.Force\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Force\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that specifies whether existing files in the <code>targetDir</code> directory and its subdirectories should be overwritten.\n  syntax:\n    content: public bool Force { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if existing files in the <code>targetDir</code> directory and its subdirectories should be overwritten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.Force*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool\n  id: GenerateFullPathToTool\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: GenerateFullPathToTool()\n  nameWithType: AspNetCompiler.GenerateFullPathToTool()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Returns the full file path of the AspNetCompiler tool.\n  syntax:\n    content: protected override string GenerateFullPathToTool ();\n    parameters: []\n    return:\n      type: System.String\n      description: The full file path of the AspNetCompiler tool.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer\n  id: KeyContainer\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: KeyContainer\n  nameWithType: AspNetCompiler.KeyContainer\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyNameAttribute>, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.\n  remarks: This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.\n  syntax:\n    content: public string KeyContainer { get; set; }\n    return:\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyKeyNameAttribute> should be applied to the compiled assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyFile\n  id: KeyFile\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: KeyFile\n  nameWithType: AspNetCompiler.KeyFile\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.KeyFile\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the <xref:System.Reflection.AssemblyKeyFileAttribute>, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.\n  remarks: This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.\n  syntax:\n    content: public string KeyFile { get; set; }\n    return:\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Reflection.AssemblyKeyFileAttribute> should be applied to the compiled assembly; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.KeyFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath\n  id: MetabasePath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: MetabasePath\n  nameWithType: AspNetCompiler.MetabasePath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the full IIS metabase path of the application.\n  syntax:\n    content: public string MetabasePath { get; set; }\n    return:\n      type: System.String\n      description: The full IIS metabase path of the application.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath\n  id: PhysicalPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: PhysicalPath\n  nameWithType: AspNetCompiler.PhysicalPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the physical path of the application to be compiled.\n  remarks: If this property is missing, the IIS metabase is used to locate the application.\n  syntax:\n    content: public string PhysicalPath { get; set; }\n    return:\n      type: System.String\n      description: The physical path of the application to be compiled.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker\n  id: TargetFrameworkMoniker\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: TargetFrameworkMoniker\n  nameWithType: AspNetCompiler.TargetFrameworkMoniker\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the TargetFrameworkMoniker indicating which .NET Framework version of aspnet_compiler.exe should be used.\n  remarks: Only accepts .NET Framework monikers.\n  syntax:\n    content: public string TargetFrameworkMoniker { get; set; }\n    return:\n      type: System.String\n      description: Returns the TargetFrameworkMoniker.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetPath\n  id: TargetPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: TargetPath\n  nameWithType: AspNetCompiler.TargetPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.TargetPath\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the physical path to which the application is compiled.\n  remarks: If not specified, the application is precompiled in-place.\n  syntax:\n    content: public string TargetPath { get; set; }\n    return:\n      type: System.String\n      description: The physical path to which the application is compiled.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.TargetPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ToolName\n  id: ToolName\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: ToolName\n  nameWithType: AspNetCompiler.ToolName\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.ToolName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets the name of the AspNetCompiler tool (aspnet_compiler.exe).\n  syntax:\n    content: protected override string ToolName { get; }\n    return:\n      type: System.String\n      description: The name of the AspNetCompiler tool.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.ToolName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Updateable\n  id: Updateable\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: Updateable\n  nameWithType: AspNetCompiler.Updateable\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Updateable\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the precompiled application will be updateable.\n  remarks: The default value is `false`.\n  syntax:\n    content: public bool Updateable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the precompiled application will be updateable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.Updateable*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters\n  id: ValidateParameters\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: ValidateParameters()\n  nameWithType: AspNetCompiler.ValidateParameters()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.\n  syntax:\n    content: protected override bool ValidateParameters ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution should proceed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath\n  id: VirtualPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  langs:\n  - csharp\n  name: VirtualPath\n  nameWithType: AspNetCompiler.VirtualPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the virtual path of the application to be compiled.\n  remarks: If `PhysicalPath` specified, the physical path is used to locate the application. Otherwise, the IIS metabase is used, and the application is assumed to be in the default site.\n  syntax:\n    content: public string VirtualPath { get; set; }\n    return:\n      type: System.String\n      description: The virtual path of the application to be compiled.\n  overload: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.ToolTaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.ToolTaskExtension\n- uid: Microsoft.Build.Tasks.AspNetCompiler.#ctor\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AspNetCompiler()\n  nameWithType: AspNetCompiler.AspNetCompiler()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AspNetCompiler()\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AddCommandLineCommands(CommandLineBuilderExtension)\n  nameWithType: AspNetCompiler.AddCommandLineCommands(CommandLineBuilderExtension)\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(CommandLineBuilderExtension)\n- uid: Microsoft.Build.Tasks.CommandLineBuilderExtension\n  parent: Microsoft.Build.Tasks\n  isExternal: false\n  name: CommandLineBuilderExtension\n  nameWithType: CommandLineBuilderExtension\n  fullName: Microsoft.Build.Tasks.CommandLineBuilderExtension\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AllowPartiallyTrustedCallers\n  nameWithType: AspNetCompiler.AllowPartiallyTrustedCallers\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Clean\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Clean\n  nameWithType: AspNetCompiler.Clean\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Clean\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Debug\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Debug\n  nameWithType: AspNetCompiler.Debug\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Debug\n- uid: Microsoft.Build.Tasks.AspNetCompiler.DelaySign\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: DelaySign\n  nameWithType: AspNetCompiler.DelaySign\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.DelaySign\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Execute\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Execute()\n  nameWithType: AspNetCompiler.Execute()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Execute()\n- uid: Microsoft.Build.Tasks.AspNetCompiler.FixedNames\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: FixedNames\n  nameWithType: AspNetCompiler.FixedNames\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.FixedNames\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Force\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Force\n  nameWithType: AspNetCompiler.Force\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Force\n- uid: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: GenerateFullPathToTool()\n  nameWithType: AspNetCompiler.GenerateFullPathToTool()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: KeyContainer\n  nameWithType: AspNetCompiler.KeyContainer\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyFile\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: KeyFile\n  nameWithType: AspNetCompiler.KeyFile\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.KeyFile\n- uid: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: MetabasePath\n  nameWithType: AspNetCompiler.MetabasePath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: PhysicalPath\n  nameWithType: AspNetCompiler.PhysicalPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: TargetFrameworkMoniker\n  nameWithType: AspNetCompiler.TargetFrameworkMoniker\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: TargetPath\n  nameWithType: AspNetCompiler.TargetPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.TargetPath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ToolName\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: ToolName\n  nameWithType: AspNetCompiler.ToolName\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.ToolName\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Updateable\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Updateable\n  nameWithType: AspNetCompiler.Updateable\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.Updateable\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: ValidateParameters()\n  nameWithType: AspNetCompiler.ValidateParameters()\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters()\n- uid: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: VirtualPath\n  nameWithType: AspNetCompiler.VirtualPath\n  fullName: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.#ctor*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AspNetCompiler\n  nameWithType: AspNetCompiler.AspNetCompiler\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AddCommandLineCommands\n  nameWithType: AspNetCompiler.AddCommandLineCommands\n- uid: Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: AllowPartiallyTrustedCallers\n  nameWithType: AspNetCompiler.AllowPartiallyTrustedCallers\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Clean*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Clean\n  nameWithType: AspNetCompiler.Clean\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Debug*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Debug\n  nameWithType: AspNetCompiler.Debug\n- uid: Microsoft.Build.Tasks.AspNetCompiler.DelaySign*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: DelaySign\n  nameWithType: AspNetCompiler.DelaySign\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Execute*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Execute\n  nameWithType: AspNetCompiler.Execute\n- uid: Microsoft.Build.Tasks.AspNetCompiler.FixedNames*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: FixedNames\n  nameWithType: AspNetCompiler.FixedNames\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Force*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Force\n  nameWithType: AspNetCompiler.Force\n- uid: Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: GenerateFullPathToTool\n  nameWithType: AspNetCompiler.GenerateFullPathToTool\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyContainer*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: KeyContainer\n  nameWithType: AspNetCompiler.KeyContainer\n- uid: Microsoft.Build.Tasks.AspNetCompiler.KeyFile*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: KeyFile\n  nameWithType: AspNetCompiler.KeyFile\n- uid: Microsoft.Build.Tasks.AspNetCompiler.MetabasePath*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: MetabasePath\n  nameWithType: AspNetCompiler.MetabasePath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: PhysicalPath\n  nameWithType: AspNetCompiler.PhysicalPath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: TargetFrameworkMoniker\n  nameWithType: AspNetCompiler.TargetFrameworkMoniker\n- uid: Microsoft.Build.Tasks.AspNetCompiler.TargetPath*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: TargetPath\n  nameWithType: AspNetCompiler.TargetPath\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ToolName*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: ToolName\n  nameWithType: AspNetCompiler.ToolName\n- uid: Microsoft.Build.Tasks.AspNetCompiler.Updateable*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: Updateable\n  nameWithType: AspNetCompiler.Updateable\n- uid: Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: ValidateParameters\n  nameWithType: AspNetCompiler.ValidateParameters\n- uid: Microsoft.Build.Tasks.AspNetCompiler.VirtualPath*\n  parent: Microsoft.Build.Tasks.AspNetCompiler\n  isExternal: false\n  name: VirtualPath\n  nameWithType: AspNetCompiler.VirtualPath\n"}