{"nodes":[{"pos":[3360,3434],"content":"Represents a node of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents a node of a <xref href=\"System.Windows.Forms.TreeView\"></xref>."},{"pos":[3447,7214],"content":"The <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection holds all the child TreeNode objects assigned to the current TreeNode. You can add, remove, or clone a TreeNode; when you do this, all child tree nodes are added, removed, or cloned. Each TreeNode can contain a collection of other TreeNode objects. This can make it difficult to determine where you are in the <xref:System.Windows.Forms.TreeView> when iterating through the collection. To determine your location in a tree structure, use the <xref:System.Windows.Forms.TreeNode.FullPath%2A> property. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> string can be parsed using the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> string value to determine where a TreeNode label begins and ends.       The TreeNode label is set by setting the <xref:System.Windows.Forms.TreeNode.Text%2A> property explicitly. The alternative is to create the tree node using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the <xref:System.Windows.Forms.TreeNode.Text%2A> property. The label is displayed next to the TreeNode image, if one is displayed.       To display images next to the tree nodes, assign an <xref:System.Windows.Forms.ImageList> to the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control and assign an <xref:System.Drawing.Image> by referencing its index value in the <xref:System.Windows.Forms.ImageList> property. Set the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is in an unselected state. Likewise, set the <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is selected.       Selecting specific tree nodes and iterating through the <xref:System.Windows.Forms.TreeView.Nodes%2A> collection can be achieved by using the following property values: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Assign the TreeNode returned by one of aforementioned properties to the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property to select that tree node in the <xref:System.Windows.Forms.TreeView> control.       Tree nodes can be expanded to display the next level of child tree nodes. The user can expand the TreeNode by pressing the plus (+) button next to the TreeNode, if one is displayed, or you can expand the TreeNode by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method. To expand all child tree node levels in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection, call the <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> method. You can collapse the child TreeNode level by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method, or the user can press the minus (-) button next to the TreeNode, if one is displayed. You can also call the <xref:System.Windows.Forms.TreeNode.Toggle%2A> method to alternate the TreeNode between the expanded and collapsed states.       Tree nodes can optionally display a check box. To display the check boxes, set the <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.TreeView> to `true`. The <xref:System.Windows.Forms.TreeNode.Checked%2A> property is set to `true` for tree nodes that are in a checked state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; collection holds all the child TreeNode objects assigned to the current TreeNode.","pos":[0,131],"source":"The <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection holds all the child TreeNode objects assigned to the current TreeNode."},{"content":"You can add, remove, or clone a TreeNode; when you do this, all child tree nodes are added, removed, or cloned.","pos":[132,243]},{"content":"Each TreeNode can contain a collection of other TreeNode objects.","pos":[244,309]},{"content":"This can make it difficult to determine where you are in the &lt;xref:System.Windows.Forms.TreeView&gt; when iterating through the collection.","pos":[310,446],"source":" This can make it difficult to determine where you are in the <xref:System.Windows.Forms.TreeView> when iterating through the collection."},{"content":"To determine your location in a tree structure, use the &lt;xref:System.Windows.Forms.TreeNode.FullPath%2A&gt; property.","pos":[447,561],"source":" To determine your location in a tree structure, use the <xref:System.Windows.Forms.TreeNode.FullPath%2A> property."},{"content":"The &lt;xref:System.Windows.Forms.TreeNode.FullPath%2A&gt; string can be parsed using the &lt;xref:System.Windows.Forms.TreeView.PathSeparator%2A&gt; string value to determine where a TreeNode label begins and ends.","pos":[562,765],"source":" The <xref:System.Windows.Forms.TreeNode.FullPath%2A> string can be parsed using the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> string value to determine where a TreeNode label begins and ends."},{"content":"The TreeNode label is set by setting the &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property explicitly.","pos":[772,878],"source":"       The TreeNode label is set by setting the <xref:System.Windows.Forms.TreeNode.Text%2A> property explicitly."},{"content":"The alternative is to create the tree node using one of the &lt;xref:System.Windows.Forms.TreeNode.%23ctor%2A&gt; constructors that has a string parameter that represents the &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property.","pos":[879,1102],"source":" The alternative is to create the tree node using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the <xref:System.Windows.Forms.TreeNode.Text%2A> property."},{"content":"The label is displayed next to the TreeNode image, if one is displayed.","pos":[1103,1174]},{"content":"To display images next to the tree nodes, assign an &lt;xref:System.Windows.Forms.ImageList&gt; to the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; control and assign an &lt;xref:System.Drawing.Image&gt; by referencing its index value in the &lt;xref:System.Windows.Forms.ImageList&gt; property.","pos":[1181,1523],"source":"       To display images next to the tree nodes, assign an <xref:System.Windows.Forms.ImageList> to the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control and assign an <xref:System.Drawing.Image> by referencing its index value in the <xref:System.Windows.Forms.ImageList> property."},{"content":"Set the &lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A&gt; property to the index value of the &lt;xref:System.Drawing.Image&gt; you want to display when the TreeNode is in an unselected state.","pos":[1524,1710],"source":" Set the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is in an unselected state."},{"content":"Likewise, set the &lt;xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A&gt; property to the index value of the &lt;xref:System.Drawing.Image&gt; you want to display when the TreeNode is selected.","pos":[1711,1901],"source":" Likewise, set the <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is selected."},{"content":"Selecting specific tree nodes and iterating through the &lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt; collection can be achieved by using the following property values: &lt;xref:System.Windows.Forms.TreeNode.FirstNode%2A&gt;, &lt;xref:System.Windows.Forms.TreeNode.LastNode%2A&gt;, &lt;xref:System.Windows.Forms.TreeNode.NextNode%2A&gt;, &lt;xref:System.Windows.Forms.TreeNode.PrevNode%2A&gt;, &lt;xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A&gt;, &lt;xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A&gt;.","pos":[1908,2391],"source":"       Selecting specific tree nodes and iterating through the <xref:System.Windows.Forms.TreeView.Nodes%2A> collection can be achieved by using the following property values: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>."},{"content":"Assign the TreeNode returned by one of aforementioned properties to the &lt;xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName&gt; property to select that tree node in the &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[2392,2628],"source":" Assign the TreeNode returned by one of aforementioned properties to the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property to select that tree node in the <xref:System.Windows.Forms.TreeView> control."},{"content":"Tree nodes can be expanded to display the next level of child tree nodes.","pos":[2635,2708]},{"content":"The user can expand the TreeNode by pressing the plus (+) button next to the TreeNode, if one is displayed, or you can expand the TreeNode by calling the &lt;xref:System.Windows.Forms.TreeNode.Expand%2A&gt; method.","pos":[2709,2917],"source":" The user can expand the TreeNode by pressing the plus (+) button next to the TreeNode, if one is displayed, or you can expand the TreeNode by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method."},{"content":"To expand all child tree node levels in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; collection, call the &lt;xref:System.Windows.Forms.TreeNode.ExpandAll%2A&gt; method.","pos":[2918,3086],"source":" To expand all child tree node levels in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection, call the <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> method."},{"content":"You can collapse the child TreeNode level by calling the &lt;xref:System.Windows.Forms.TreeNode.Collapse%2A&gt; method, or the user can press the minus (-) button next to the TreeNode, if one is displayed.","pos":[3087,3286],"source":" You can collapse the child TreeNode level by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method, or the user can press the minus (-) button next to the TreeNode, if one is displayed."},{"content":"You can also call the &lt;xref:System.Windows.Forms.TreeNode.Toggle%2A&gt; method to alternate the TreeNode between the expanded and collapsed states.","pos":[3287,3431],"source":" You can also call the <xref:System.Windows.Forms.TreeNode.Toggle%2A> method to alternate the TreeNode between the expanded and collapsed states."},{"content":"Tree nodes can optionally display a check box.","pos":[3438,3484]},{"content":"To display the check boxes, set the &lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt; property of the &lt;xref:System.Windows.Forms.TreeView&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[3485,3635],"source":" To display the check boxes, set the <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.TreeView> to `true`."},{"content":"The &lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> for tree nodes that are in a checked state.","pos":[3636,3757],"source":" The <xref:System.Windows.Forms.TreeNode.Checked%2A> property is set to `true` for tree nodes that are in a checked state."}]},{"pos":[9401,9492],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class."},{"pos":[11095,11216],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified label text.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text."},{"pos":[11228,11367],"content":"The <ph id=\"ph1\">`text`</ph> parameter value is assigned to the node's &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property and becomes the tree node label.","needQuote":true,"needEscape":true,"source":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label."},{"pos":[12694,12768],"content":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The label &lt;xref:System.Windows.Forms.TreeNode.Text*&gt; of the new tree node.","pos":[0,74],"source":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."}]},{"pos":[13477,13626],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified serialization information and context.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class using the specified serialization information and context."},{"pos":[13914,14034],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the data to deserialize the class.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that contains the data to deserialize the class."},{"pos":[14130,14253],"content":"The <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream.","pos":[0,123],"source":"The <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream."}]},{"pos":[14817,14959],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified label text and child tree nodes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text and child tree nodes."},{"pos":[14971,15310],"content":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`text`</ph> parameter value is assigned to the node's &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property and becomes the tree node label.","pos":[0,139],"source":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label."},{"content":"The tree nodes that are contained in the <ph id=\"ph1\">`children`</ph> array are added to the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; that is stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property.","pos":[140,339],"source":" The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property."}]},{"pos":[16534,16608],"content":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The label &lt;xref:System.Windows.Forms.TreeNode.Text*&gt; of the new tree node.","pos":[0,74],"source":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."}]},{"pos":[16691,16768],"content":"An array of child <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of child <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects."},{"pos":[17323,17523],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified label text and images to display when the tree node is in a selected and unselected state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text and images to display when the tree node is in a selected and unselected state."},{"pos":[17535,18154],"content":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` property is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` property is displayed when the tree node is in a selected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`text`</ph> parameter value is assigned to the node's &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property and becomes the tree node label.","pos":[0,139],"source":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label."},{"content":"The <ph id=\"ph1\">`imageIndex`</ph> and <ph id=\"ph2\">`selectedImageIndex`</ph> values are the index values of an &lt;xref:System.Drawing.Image&gt; stored in the &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName&gt; property.","pos":[140,396],"source":" The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property."},{"content":"The image referenced in the <ph id=\"ph1\">`imageIndex`</ph> property is displayed when the tree node is not selected.","pos":[397,495],"source":" The image referenced in the `imageIndex` property is displayed when the tree node is not selected."},{"content":"Likewise, the image referenced in the <ph id=\"ph1\">`selectedImageIndex`</ph> property is displayed when the tree node is in a selected state.","pos":[496,619],"source":" Likewise, the image referenced in the `selectedImageIndex` property is displayed when the tree node is in a selected state."}]},{"pos":[19333,19407],"content":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The label &lt;xref:System.Windows.Forms.TreeNode.Text*&gt; of the new tree node.","pos":[0,74],"source":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."}]},{"pos":[19473,19578],"content":"The index value of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display when the tree node is unselected.","needQuote":true,"needEscape":true,"source":"The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is unselected."},{"pos":[19652,19755],"content":"The index value of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display when the tree node is selected.","needQuote":true,"needEscape":true,"source":"The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is selected."},{"pos":[20407,20626],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state."},{"pos":[20638,21459],"content":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` parameter is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` parameter is displayed when the tree node is in a selected state. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`text`</ph> parameter value is assigned to the node's &lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt; property and becomes the tree node label.","pos":[0,139],"source":"The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label."},{"content":"The <ph id=\"ph1\">`imageIndex`</ph> and <ph id=\"ph2\">`selectedImageIndex`</ph> values are the index values of an &lt;xref:System.Drawing.Image&gt; stored in the &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName&gt; property.","pos":[140,396],"source":" The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property."},{"content":"The image referenced in the <ph id=\"ph1\">`imageIndex`</ph> parameter is displayed when the tree node is not selected.","pos":[397,496],"source":" The image referenced in the `imageIndex` parameter is displayed when the tree node is not selected."},{"content":"Likewise, the image referenced in the <ph id=\"ph1\">`selectedImageIndex`</ph> parameter is displayed when the tree node is in a selected state.","pos":[497,621],"source":" Likewise, the image referenced in the `selectedImageIndex` parameter is displayed when the tree node is in a selected state."},{"content":"The tree nodes that are contained in the <ph id=\"ph1\">`children`</ph> array are added to the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; that is stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property.","pos":[622,821],"source":" The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property."}]},{"pos":[22680,22754],"content":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The label &lt;xref:System.Windows.Forms.TreeNode.Text*&gt; of the new tree node.","pos":[0,74],"source":"The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."}]},{"pos":[22820,22925],"content":"The index value of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display when the tree node is unselected.","needQuote":true,"needEscape":true,"source":"The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is unselected."},{"pos":[22999,23102],"content":"The index value of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display when the tree node is selected.","needQuote":true,"needEscape":true,"source":"The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is selected."},{"pos":[23185,23262],"content":"An array of child <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of child <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects."},{"pos":[23681,23732],"content":"Gets or sets the background color of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the background color of the tree node.","pos":[0,51]}]},{"pos":[23744,24028],"content":"If the BackColor property is set to <xref:System.Drawing.Color?displayProperty=fullName>, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.BackColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the BackColor property is set to &lt;xref:System.Drawing.Color?displayProperty=fullName&gt;, the &lt;xref:System.Drawing.Color&gt; used is the &lt;xref:System.Windows.Forms.Control.BackColor%2A&gt; property value of the &lt;xref:System.Windows.Forms.TreeView&gt; control that the tree node is assigned to.","pos":[0,284],"source":"If the BackColor property is set to <xref:System.Drawing.Color?displayProperty=fullName>, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.BackColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to."}]},{"pos":[24953,25085],"content":"The background <xref href=\"System.Drawing.Color\"></xref> of the tree node. The default is <xref href=\"System.Drawing.Color\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The background <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the tree node.","pos":[0,74],"source":"The background <xref href=\"System.Drawing.Color\"></xref> of the tree node."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[75,132],"source":" The default is <xref href=\"System.Drawing.Color\"></xref>."}]},{"pos":[25512,25557],"content":"Initiates the editing of the tree node label.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the editing of the tree node label.","pos":[0,45]}]},{"pos":[25570,26088],"content":"A typical scenario to use this method is to call it on the <xref:System.Windows.Forms.MenuItem.Click> event of a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.ContextMenu>.      > [!NOTE] >  This method only works if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the <xref:System.Windows.Forms.TreeView> is set to `true`. If <xref:System.Windows.Forms.TreeView.LabelEdit%2A> is set to `false`, an exception is thrown and the tree node will not be put into an editable state.","needQuote":false,"needEscape":true,"nodes":[{"content":"A typical scenario to use this method is to call it on the &lt;xref:System.Windows.Forms.MenuItem.Click&gt; event of a &lt;xref:System.Windows.Forms.MenuItem&gt; or &lt;xref:System.Windows.Forms.ContextMenu&gt;.","pos":[0,193],"source":"A typical scenario to use this method is to call it on the <xref:System.Windows.Forms.MenuItem.Click> event of a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.ContextMenu>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method only works if the &lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A&gt; property of the &lt;xref:System.Windows.Forms.TreeView&gt; is set to <ph id=\"ph2\">`true`</ph>.","pos":[199,362],"source":"      > [!NOTE] >  This method only works if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the <xref:System.Windows.Forms.TreeView> is set to `true`."},{"content":"If &lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A&gt; is set to <ph id=\"ph1\">`false`</ph>, an exception is thrown and the tree node will not be put into an editable state.","pos":[363,515],"source":" If <xref:System.Windows.Forms.TreeView.LabelEdit%2A> is set to `false`, an exception is thrown and the tree node will not be put into an editable state."}]},{"pos":[27419,27573],"content":"<ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Forms.TreeView.LabelEdit%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A?displayProperty=fullName&gt; is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27912,27945],"content":"Gets the bounds of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the bounds of the tree node.","pos":[0,33]}]},{"pos":[27957,28063],"content":"The coordinates are relative to the upper-left corner of the <xref:System.Windows.Forms.TreeView> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinates are relative to the upper-left corner of the &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[0,106],"source":"The coordinates are relative to the upper-left corner of the <xref:System.Windows.Forms.TreeView> control."}]},{"pos":[29028,29122],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bounds of the tree node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the tree node."},{"pos":[29532,29608],"content":"Gets or sets a value indicating whether the tree node is in a checked state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the tree node is in a checked state.","pos":[0,76]}]},{"pos":[30520,30695],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the tree node is in a checked state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in a checked state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31100,31169],"content":"Copies the tree node and the entire subtree rooted at this tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the tree node and the entire subtree rooted at this tree node.","pos":[0,69]}]},{"pos":[31182,31674],"content":"The tree structure from the tree node being cloned and below is copied. Any child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode> being cloned are included in the new tree node and subtree.       The Clone method performs a shallow copy of the node. If the value of the <xref:System.Windows.Forms.TreeNode.Tag%2A> property is a reference type, both the original and cloned copy will point to the same single instance of the <xref:System.Windows.Forms.TreeNode.Tag%2A> value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The tree structure from the tree node being cloned and below is copied. Any child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode> being cloned are included in the new tree node and subtree.       The Clone method performs a shallow copy of the node. If the value of the <xref:System.Windows.Forms.TreeNode.Tag%2A> property is a reference type, both the original and cloned copy will point to the same single instance of the <xref:System.Windows.Forms.TreeNode.Tag%2A> value.","pos":[0,490],"nodes":[{"content":"The tree structure from the tree node being cloned and below is copied.","pos":[0,71]},{"content":"Any child tree nodes assigned to the &lt;xref:System.Windows.Forms.TreeNode&gt; being cloned are included in the new tree node and subtree.","pos":[72,205],"source":" Any child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode> being cloned are included in the new tree node and subtree."},{"content":"The Clone method performs a shallow copy of the node.","pos":[212,265]},{"content":"If the value of the &lt;xref:System.Windows.Forms.TreeNode.Tag%2A&gt; property is a reference type, both the original and cloned copy will point to the same single instance of the &lt;xref:System.Windows.Forms.TreeNode.Tag%2A&gt; value.","pos":[266,490],"source":" If the value of the <xref:System.Windows.Forms.TreeNode.Tag%2A> property is a reference type, both the original and cloned copy will point to the same single instance of the <xref:System.Windows.Forms.TreeNode.Tag%2A> value."}]}]},{"pos":[32537,32640],"content":"The &lt;xref:System.Object&gt; that represents the cloned <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> that represents the cloned <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[33058,33082],"content":"Collapses the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Collapses the tree node.","pos":[0,24]}]},{"pos":[33095,33720],"content":"The Collapse method collapses the current <xref:System.Windows.Forms.TreeNode> and its child nodes. If you want to collapse only the current <xref:System.Windows.Forms.TreeNode>, use the <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName> overload, passing `true` to ignore its child nodes.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Collapse method collapses the current &lt;xref:System.Windows.Forms.TreeNode&gt; and its child nodes.","pos":[0,99],"source":"The Collapse method collapses the current <xref:System.Windows.Forms.TreeNode> and its child nodes."},{"content":"If you want to collapse only the current &lt;xref:System.Windows.Forms.TreeNode&gt;, use the &lt;xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName&gt; overload, passing <ph id=\"ph1\">`true`</ph> to ignore its child nodes.","pos":[100,329],"source":" If you want to collapse only the current <xref:System.Windows.Forms.TreeNode>, use the <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName> overload, passing `true` to ignore its child nodes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The state of a &lt;xref:System.Windows.Forms.TreeNode&gt; is persisted.","pos":[335,413],"source":"      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted."},{"content":"For example, if the next level of child nodes was not collapsed previously, when the &lt;xref:System.Windows.Forms.TreeNode.Expand%2A&gt; method is called, the child nodes appear in their previously expanded state.","pos":[414,622],"source":" For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."}]},{"pos":[35096,35199],"content":"Collapses the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally collapses its children.","needQuote":true,"needEscape":true,"source":"Collapses the <xref href=\"System.Windows.Forms.TreeNode\"></xref> and optionally collapses its children."},{"pos":[35211,35335],"content":"Use the Collapse method, passing <ph id=\"ph1\">`true`</ph>, when you want to collapse a node but leave its child nodes in their expanded state.","needQuote":true,"needEscape":true,"source":"Use the Collapse method, passing `true`, when you want to collapse a node but leave its child nodes in their expanded state."},{"pos":[35490,35691],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to leave the child nodes in their current state; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to collapse the child nodes.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to leave the child nodes in their current state; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to collapse the child nodes."},{"pos":[36123,36185],"content":"Gets the shortcut menu that is associated with this tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the shortcut menu that is associated with this tree node.","pos":[0,62]}]},{"pos":[36197,36339],"content":"The preferred way to associate a shortcut menu with a tree node is with the <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The preferred way to associate a shortcut menu with a tree node is with the &lt;xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A&gt; property.","pos":[0,142],"source":"The preferred way to associate a shortcut menu with a tree node is with the <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> property."}]},{"pos":[36513,36609],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the tree node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.ContextMenu\"></xref> that is associated with the tree node."},{"pos":[37069,37131],"content":"Gets or sets the shortcut menu associated with this tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the shortcut menu associated with this tree node.","pos":[0,62]}]},{"pos":[37143,37211],"content":"The shortcut menu is shown when the user right-clicks the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The shortcut menu is shown when the user right-clicks the tree node.","pos":[0,68]}]},{"pos":[37400,37493],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenuStrip\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the tree node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> associated with the tree node."},{"pos":[38227,38388],"content":"Loads the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Loads the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> from the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>."},{"pos":[38692,38834],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that describes the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[38930,39049],"content":"The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during deserialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that indicates the state of the stream during deserialization.","pos":[0,119],"source":"The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during deserialization."}]},{"pos":[39521,39561],"content":"Ends the editing of the tree node label.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends the editing of the tree node label.","pos":[0,40]}]},{"pos":[40796,41008],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the editing of the tree node label text was canceled without being saved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the editing of the tree node label text was canceled without being saved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41453,41562],"content":"Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary.","pos":[0,109]}]},{"pos":[41575,42168],"content":"When the EnsureVisible method is called, the tree is expanded and scrolled to ensure that the current tree node is visible in the <xref:System.Windows.Forms.TreeView>. This method is useful if you are selecting a tree node in code based on certain criteria. By calling this method after you select the node, the user can see and interact with the selected node.      > [!NOTE] >  If the <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName> property is set to a value that is larger than the height of the tree view control, calling this method has unexpected results.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the EnsureVisible method is called, the tree is expanded and scrolled to ensure that the current tree node is visible in the &lt;xref:System.Windows.Forms.TreeView&gt;.","pos":[0,167],"source":"When the EnsureVisible method is called, the tree is expanded and scrolled to ensure that the current tree node is visible in the <xref:System.Windows.Forms.TreeView>."},{"content":"This method is useful if you are selecting a tree node in code based on certain criteria.","pos":[168,257]},{"content":"By calling this method after you select the node, the user can see and interact with the selected node.","pos":[258,361]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName&gt; property is set to a value that is larger than the height of the tree view control, calling this method has unexpected results.","pos":[367,590],"source":"      > [!NOTE] >  If the <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName> property is set to a value that is larger than the height of the tree view control, calling this method has unexpected results."}]},{"pos":[43455,43477],"content":"Expands the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Expands the tree node.","pos":[0,22]}]},{"pos":[43490,43853],"content":"The Expand method expands the current <xref:System.Windows.Forms.TreeNode> down to the next level of nodes.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the Expand method is called, the child nodes appear in their previously expanded state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Expand method expands the current &lt;xref:System.Windows.Forms.TreeNode&gt; down to the next level of nodes.","pos":[0,107],"source":"The Expand method expands the current <xref:System.Windows.Forms.TreeNode> down to the next level of nodes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The state of a &lt;xref:System.Windows.Forms.TreeNode&gt; is persisted.","pos":[113,191],"source":"      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted."},{"content":"For example, if the next level of child nodes was not collapsed previously, when the Expand method is called, the child nodes appear in their previously expanded state.","pos":[192,360]}]},{"pos":[45180,45213],"content":"Expands all the child tree nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Expands all the child tree nodes.","pos":[0,33]}]},{"pos":[45226,45649],"content":"The ExpandAll method expands all the child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ExpandAll method expands all the child tree nodes assigned to the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; collection.","pos":[0,127],"source":"The ExpandAll method expands all the child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The state of a &lt;xref:System.Windows.Forms.TreeNode&gt; is persisted.","pos":[133,211],"source":"      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted."},{"content":"For example, if the next level of child nodes was not collapsed previously, when the &lt;xref:System.Windows.Forms.TreeNode.Expand%2A&gt; method is called, the child nodes appear in their previously expanded state.","pos":[212,420],"source":" For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."}]},{"pos":[47059,47118],"content":"Gets the first child tree node in the tree node collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first child tree node in the tree node collection.","pos":[0,59]}]},{"pos":[47130,47455],"content":"The FirstNode is the first child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the FirstNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The FirstNode is the first child &lt;xref:System.Windows.Forms.TreeNode&gt; in the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property of the current tree node.","pos":[0,218],"source":"The FirstNode is the first child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node."},{"content":"If the &lt;xref:System.Windows.Forms.TreeNode&gt; has no child tree node, the FirstNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[219,325],"source":" If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the FirstNode property returns `null`."}]},{"pos":[48570,48699],"content":"The first child <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the &lt;xref:System.Windows.Forms.TreeNode.Nodes*&gt; collection.","needQuote":true,"needEscape":true,"source":"The first child <xref href=\"System.Windows.Forms.TreeNode\"></xref> in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."},{"pos":[49122,49173],"content":"Gets or sets the foreground color of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the foreground color of the tree node.","pos":[0,51]}]},{"pos":[49185,49390],"content":"If <ph id=\"ph1\">`null`</ph>, the &lt;xref:System.Drawing.Color&gt; used is the &lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt; property value of the &lt;xref:System.Windows.Forms.TreeView&gt; control that the tree node is assigned to.","needQuote":true,"needEscape":true,"source":"If `null`, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.ForeColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to."},{"pos":[50593,50667],"content":"The foreground <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the tree node.","needQuote":true,"needEscape":true,"source":"The foreground <xref href=\"System.Drawing.Color\"></xref> of the tree node."},{"pos":[51234,51330],"content":"Returns the tree node with the specified handle and assigned to the specified tree view control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the tree node with the specified handle and assigned to the specified tree view control.","pos":[0,96]}]},{"pos":[51342,51858],"content":"When a node is added to the <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName> collection, the <xref:System.Windows.Forms.TreeView> control sends an NM_CUSTOMDRAW notification before the node handle is available. If you override the <xref:System.Windows.Forms.Control.WndProc%2A> method of the <xref:System.Windows.Forms.TreeView> to provide custom drawing in response to this notification, you should always check the return value of this method for `null` before you attempt to access the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"When a node is added to the &lt;xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName&gt; collection, the &lt;xref:System.Windows.Forms.TreeView&gt; control sends an NM_CUSTOMDRAW notification before the node handle is available.","pos":[0,232],"source":"When a node is added to the <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName> collection, the <xref:System.Windows.Forms.TreeView> control sends an NM_CUSTOMDRAW notification before the node handle is available."},{"content":"If you override the &lt;xref:System.Windows.Forms.Control.WndProc%2A&gt; method of the &lt;xref:System.Windows.Forms.TreeView&gt; to provide custom drawing in response to this notification, you should always check the return value of this method for <ph id=\"ph1\">`null`</ph> before you attempt to access the node.","pos":[233,516],"source":" If you override the <xref:System.Windows.Forms.Control.WndProc%2A> method of the <xref:System.Windows.Forms.TreeView> to provide custom drawing in response to this notification, you should always check the return value of this method for `null` before you attempt to access the node."}]},{"pos":[52989,53072],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the tree node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.TreeView\"></xref> that contains the tree node."},{"pos":[53135,53163],"content":"The handle of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the tree node.","pos":[0,28]}]},{"pos":[53237,53431],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the tree node assigned to the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control with the specified handle.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the tree node assigned to the specified <xref href=\"System.Windows.Forms.TreeView\"></xref> control with the specified handle."},{"pos":[53850,53913],"content":"Gets the path from the root tree node to the current tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path from the root tree node to the current tree node.","pos":[0,63]}]},{"pos":[53925,54450],"content":"The path consists of the labels of all the tree nodes that must be navigated to reach this tree node, starting at the root tree node. The node labels are separated by the delimiter character specified in the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of the <xref:System.Windows.Forms.TreeView> control that contains this node. For example, if the delimiter character of the tree view control named \"Location\" is set to the backslash character, (\\\\), the FullPath property value is \"Country\\Region\\State\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The path consists of the labels of all the tree nodes that must be navigated to reach this tree node, starting at the root tree node. The node labels are separated by the delimiter character specified in the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of the <xref:System.Windows.Forms.TreeView> control that contains this node. For example, if the delimiter character of the tree view control named \"Location\" is set to the backslash character, (\\\\), the FullPath property value is \"Country\\Region\\State\".","pos":[0,525],"nodes":[{"content":"The path consists of the labels of all the tree nodes that must be navigated to reach this tree node, starting at the root tree node.","pos":[0,133]},{"content":"The node labels are separated by the delimiter character specified in the &lt;xref:System.Windows.Forms.TreeView.PathSeparator%2A&gt; property of the &lt;xref:System.Windows.Forms.TreeView&gt; control that contains this node.","pos":[134,347],"source":" The node labels are separated by the delimiter character specified in the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of the <xref:System.Windows.Forms.TreeView> control that contains this node."},{"content":"For example, if the delimiter character of the tree view control named \"Location\" is set to the backslash character, (<ph id=\"ph1\">\\\\</ph>), the FullPath property value is \"Country\\Region\\State\".","pos":[348,525],"source":" For example, if the delimiter character of the tree view control named \"Location\" is set to the backslash character, (\\\\), the FullPath property value is \"Country\\Region\\State\"."}]}]},{"pos":[55613,55671],"content":"The path from the root tree node to the current tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path from the root tree node to the current tree node.","pos":[0,58]}]},{"pos":[55848,55930],"content":"The node is not contained in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The node is not contained in a <xref href=\"System.Windows.Forms.TreeView\"></xref>."},{"pos":[56355,56394],"content":"Returns the number of child tree nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of child tree nodes.","pos":[0,39]}]},{"pos":[57615,57834],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[57891,57993],"content":"The number of child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes*> collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of child tree nodes assigned to the &lt;xref:System.Windows.Forms.TreeNode.Nodes*&gt; collection.","pos":[0,102],"source":"The number of child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."}]},{"pos":[58404,58437],"content":"Gets the handle of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the handle of the tree node.","pos":[0,33]}]},{"pos":[58449,58538],"content":"If a handle is not already created when the Handle property is referenced, it is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a handle is not already created when the Handle property is referenced, it is created.","pos":[0,89]}]},{"pos":[59528,59549],"content":"The tree node handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tree node handle.","pos":[0,21]}]},{"pos":[59974,60083],"content":"Gets or sets the image list index value of the image displayed when the tree node is in the unselected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the image list index value of the image displayed when the tree node is in the unselected state.","pos":[0,109]}]},{"pos":[60096,61010],"content":"The ImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.      > [!NOTE] >  The default value of the ImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.ImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to.       The <xref:System.Windows.Forms.TreeNode.ImageKey%2A> and ImageIndex properties are mutually exclusive; therefore, if one property is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.ImageKey%2A> property, the ImageIndex property is automatically set to -1. Alternatively, if you set ImageIndex, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> is automatically set to an empty string (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":"The ImageIndex value is the index value of an &lt;xref:System.Drawing.Image&gt; stored in the &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName&gt; property.","pos":[0,226],"source":"The ImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The default value of the ImageIndex property is the same as the &lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt; property of the &lt;xref:System.Windows.Forms.TreeView&gt; control that the &lt;xref:System.Windows.Forms.TreeNode&gt; is assigned to.","pos":[232,482],"source":"      > [!NOTE] >  The default value of the ImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.ImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to."},{"content":"The &lt;xref:System.Windows.Forms.TreeNode.ImageKey%2A&gt; and ImageIndex properties are mutually exclusive; therefore, if one property is set, the other is ignored.","pos":[489,648],"source":"       The <xref:System.Windows.Forms.TreeNode.ImageKey%2A> and ImageIndex properties are mutually exclusive; therefore, if one property is set, the other is ignored."},{"content":"If you set the &lt;xref:System.Windows.Forms.TreeNode.ImageKey%2A&gt; property, the ImageIndex property is automatically set to -1.","pos":[649,774],"source":" If you set the <xref:System.Windows.Forms.TreeNode.ImageKey%2A> property, the ImageIndex property is automatically set to -1."},{"content":"Alternatively, if you set ImageIndex, &lt;xref:System.Windows.Forms.TreeNode.ImageKey%2A&gt; is automatically set to an empty string (\"\").","pos":[775,907],"source":" Alternatively, if you set ImageIndex, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> is automatically set to an empty string (\"\")."}]},{"pos":[62147,62275],"content":"A zero-based index value that represents the image position in the assigned <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImageList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A zero-based index value that represents the image position in the assigned <xref href=\"System.Windows.Forms.ImageList\"></xref>."},{"pos":[62694,62800],"content":"Gets or sets the key for the image associated with this tree node when the node is in an unselected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key for the image associated with this tree node when the node is in an unselected state.","pos":[0,106]}]},{"pos":[62813,63455],"content":"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the containing <xref:System.Windows.Forms.TreeView> control.       The ImageKey is case-insensitive.       The ImageKey and <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> properties are mutually exclusive; if one property is set, the other is ignored. If you set the ImageKey property, the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, ImageKey is automatically set to an empty string (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the containing <xref:System.Windows.Forms.TreeView> control.       The ImageKey is case-insensitive.       The ImageKey and <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> properties are mutually exclusive; if one property is set, the other is ignored. If you set the ImageKey property, the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, ImageKey is automatically set to an empty string (\"\").","pos":[0,636],"nodes":[{"content":"The image key returned by this property is contained in the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt; property of the containing &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[0,182],"source":"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the containing <xref:System.Windows.Forms.TreeView> control."},{"content":"The ImageKey is case-insensitive.","pos":[189,222]},{"content":"The ImageKey and &lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A&gt; properties are mutually exclusive; if one property is set, the other is ignored.","pos":[229,377],"source":"       The ImageKey and <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> properties are mutually exclusive; if one property is set, the other is ignored."},{"content":"If you set the ImageKey property, the &lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A&gt; property is automatically set to -1.","pos":[378,503],"source":" If you set the ImageKey property, the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property is automatically set to -1."},{"content":"Alternatively, if you set &lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A&gt;, ImageKey is automatically set to an empty string (\"\").","pos":[504,636],"source":" Alternatively, if you set <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, ImageKey is automatically set to an empty string (\"\")."}]}]},{"pos":[63574,63667],"content":"The key for the image associated with this tree node when the node is in an unselected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for the image associated with this tree node when the node is in an unselected state.","pos":[0,93]}]},{"pos":[64069,64132],"content":"Gets the position of the tree node in the tree node collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the position of the tree node in the tree node collection.","pos":[0,63]}]},{"pos":[65137,65270],"content":"A zero-based index value that represents the position of the tree node in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero-based index value that represents the position of the tree node in the &lt;xref:System.Windows.Forms.TreeNode.Nodes*&gt; collection.","pos":[0,133],"source":"A zero-based index value that represents the position of the tree node in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."}]},{"pos":[65689,65759],"content":"Gets a value indicating whether the tree node is in an editable state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the tree node is in an editable state.","pos":[0,70]}]},{"pos":[66962,67136],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the tree node is in editable state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in editable state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[67564,67635],"content":"Gets a value indicating whether the tree node is in the expanded state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the tree node is in the expanded state.","pos":[0,71]}]},{"pos":[68643,68821],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the tree node is in the expanded state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in the expanded state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[69250,69321],"content":"Gets a value indicating whether the tree node is in the selected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the tree node is in the selected state.","pos":[0,71]}]},{"pos":[70411,70589],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the tree node is in the selected state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in the selected state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[71013,71091],"content":"Gets a value indicating whether the tree node is visible or partially visible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the tree node is visible or partially visible.","pos":[0,78]}]},{"pos":[72019,72204],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the tree node is visible or partially visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is visible or partially visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[72622,72652],"content":"Gets the last child tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the last child tree node.","pos":[0,30]}]},{"pos":[72664,72986],"content":"The LastNode is the last child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the LastNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LastNode is the last child &lt;xref:System.Windows.Forms.TreeNode&gt; in the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property of the current tree node.","pos":[0,216],"source":"The LastNode is the last child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node."},{"content":"If the &lt;xref:System.Windows.Forms.TreeNode&gt; has no child tree node, the LastNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[217,322],"source":" If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the LastNode property returns `null`."}]},{"pos":[74103,74197],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the last child tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the last child tree node."},{"pos":[74599,74708],"content":"Gets the zero-based depth of the tree node in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the zero-based depth of the tree node in the <xref href=\"System.Windows.Forms.TreeView\"></xref> control."},{"pos":[74720,74813],"content":"For the Level property, the root node is considered the first level of nesting and returns 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"For the Level property, the root node is considered the first level of nesting and returns 0.","pos":[0,93]}]},{"pos":[74919,75023],"content":"The zero-based depth of the tree node in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The zero-based depth of the tree node in the <xref href=\"System.Windows.Forms.TreeView\"></xref> control."},{"pos":[75417,75456],"content":"Gets or sets the name of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the tree node.","pos":[0,39]}]},{"pos":[75468,75686],"content":"The Name of a <xref:System.Windows.Forms.TreeNode> is also the node's key, when the node is part of a <xref:System.Windows.Forms.TreeNodeCollection>. If the node does not have a name, Name returns an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The Name of a <xref:System.Windows.Forms.TreeNode> is also the node's key, when the node is part of a <xref:System.Windows.Forms.TreeNodeCollection>. If the node does not have a name, Name returns an empty string (\"\").","pos":[0,218],"nodes":[{"content":"The Name of a &lt;xref:System.Windows.Forms.TreeNode&gt; is also the node's key, when the node is part of a &lt;xref:System.Windows.Forms.TreeNodeCollection&gt;.","pos":[0,149],"source":"The Name of a <xref:System.Windows.Forms.TreeNode> is also the node's key, when the node is part of a <xref:System.Windows.Forms.TreeNodeCollection>."},{"content":"If the node does not have a name, Name returns an empty string (\"\").","pos":[150,218]}]}]},{"pos":[75800,75865],"content":"A <xref:System.String> that represents the name of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents the name of the tree node.","pos":[0,65],"source":"A <xref:System.String> that represents the name of the tree node."}]},{"pos":[76278,76310],"content":"Gets the next sibling tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the next sibling tree node.","pos":[0,32]}]},{"pos":[76322,76647],"content":"The NextNode is the next sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>. If there is no next tree node, the NextNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The NextNode is the next sibling &lt;xref:System.Windows.Forms.TreeNode&gt; in the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property of the tree node's parent &lt;xref:System.Windows.Forms.TreeNode&gt;.","pos":[0,256],"source":"The NextNode is the next sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>."},{"content":"If there is no next tree node, the NextNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[257,325],"source":" If there is no next tree node, the NextNode property returns `null`."}]},{"pos":[77761,77857],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the next sibling tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the next sibling tree node."},{"pos":[78309,78341],"content":"Gets the next visible tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the next visible tree node.","pos":[0,32]}]},{"pos":[78353,78509],"content":"The NextVisibleNode can be a child, sibling, or a tree node from another branch. If there is no next tree node, the NextVisibleNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The NextVisibleNode can be a child, sibling, or a tree node from another branch.","pos":[0,80]},{"content":"If there is no next tree node, the NextVisibleNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[81,156],"source":" If there is no next tree node, the NextVisibleNode property returns `null`."}]},{"pos":[79633,79729],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the next visible tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the next visible tree node."},{"pos":[80153,80231],"content":"Gets or sets the font that is used to display the text on the tree node label.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font that is used to display the text on the tree node label.","pos":[0,78]}]},{"pos":[80244,80657],"content":"If `null`, the <xref:System.Drawing.Font> used is the <xref:System.Windows.Forms.Control.Font%2A> property value of the <xref:System.Windows.Forms.TreeView> control that this node is attached to.      > [!NOTE] >  If the node font is larger than the <xref:System.Windows.Forms.Control.Font%2A> property value that is set in the <xref:System.Windows.Forms.TreeView> control, the tree node label text is clipped.","needQuote":false,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`null`</ph>, the &lt;xref:System.Drawing.Font&gt; used is the &lt;xref:System.Windows.Forms.Control.Font%2A&gt; property value of the &lt;xref:System.Windows.Forms.TreeView&gt; control that this node is attached to.","pos":[0,195],"source":"If `null`, the <xref:System.Drawing.Font> used is the <xref:System.Windows.Forms.Control.Font%2A> property value of the <xref:System.Windows.Forms.TreeView> control that this node is attached to."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the node font is larger than the &lt;xref:System.Windows.Forms.Control.Font%2A&gt; property value that is set in the &lt;xref:System.Windows.Forms.TreeView&gt; control, the tree node label text is clipped.","pos":[201,410],"source":"      > [!NOTE] >  If the node font is larger than the <xref:System.Windows.Forms.Control.Font%2A> property value that is set in the <xref:System.Windows.Forms.TreeView> control, the tree node label text is clipped."}]},{"pos":[81580,81681],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to display the text on the tree node label.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Font\"></xref> that is used to display the text on the tree node label."},{"pos":[82083,82199],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects assigned to the current tree node.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects assigned to the current tree node."},{"pos":[82211,82635],"content":"The Nodes property can hold a collection of other <xref:System.Windows.Forms.TreeNode> objects. Each of the tree node in the collection has a Nodes property that can contain its own <xref:System.Windows.Forms.TreeNodeCollection>. This nesting of tree nodes can make it difficult to navigate a tree structure. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> property makes it easier to determine your location in a tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Nodes property can hold a collection of other <xref:System.Windows.Forms.TreeNode> objects. Each of the tree node in the collection has a Nodes property that can contain its own <xref:System.Windows.Forms.TreeNodeCollection>. This nesting of tree nodes can make it difficult to navigate a tree structure. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> property makes it easier to determine your location in a tree.","pos":[0,424],"nodes":[{"content":"The Nodes property can hold a collection of other &lt;xref:System.Windows.Forms.TreeNode&gt; objects.","pos":[0,95],"source":"The Nodes property can hold a collection of other <xref:System.Windows.Forms.TreeNode> objects."},{"content":"Each of the tree node in the collection has a Nodes property that can contain its own &lt;xref:System.Windows.Forms.TreeNodeCollection&gt;.","pos":[96,229],"source":" Each of the tree node in the collection has a Nodes property that can contain its own <xref:System.Windows.Forms.TreeNodeCollection>."},{"content":"This nesting of tree nodes can make it difficult to navigate a tree structure.","pos":[230,308]},{"content":"The &lt;xref:System.Windows.Forms.TreeNode.FullPath%2A&gt; property makes it easier to determine your location in a tree.","pos":[309,424],"source":" The <xref:System.Windows.Forms.TreeNode.FullPath%2A> property makes it easier to determine your location in a tree."}]}]},{"pos":[83895,84023],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the tree nodes assigned to the current tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNodeCollection\"></xref> that represents the tree nodes assigned to the current tree node."},{"pos":[84427,84478],"content":"Gets the parent tree node of the current tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent tree node of the current tree node.","pos":[0,51]}]},{"pos":[84490,84564],"content":"If the tree node is at the root level, the Parent property returns <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"source":"If the tree node is at the root level, the Parent property returns `null`."},{"pos":[85596,85701],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent of the current tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the parent of the current tree node."},{"pos":[86116,86152],"content":"Gets the previous sibling tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the previous sibling tree node.","pos":[0,36]}]},{"pos":[86164,86497],"content":"The PrevNode is the previous sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>. If there is no previous tree node, the PrevNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The PrevNode is the previous sibling &lt;xref:System.Windows.Forms.TreeNode&gt; in the &lt;xref:System.Windows.Forms.TreeNodeCollection&gt; stored in the &lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt; property of the tree node's parent &lt;xref:System.Windows.Forms.TreeNode&gt;.","pos":[0,260],"source":"The PrevNode is the previous sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>."},{"content":"If there is no previous tree node, the PrevNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[261,333],"source":" If there is no previous tree node, the PrevNode property returns `null`."}]},{"pos":[87614,87714],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the previous sibling tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the previous sibling tree node."},{"pos":[88166,88202],"content":"Gets the previous visible tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the previous visible tree node.","pos":[0,36]}]},{"pos":[88214,88374],"content":"The PrevVisibleNode can be a child, sibling, or a tree node from another branch. If there is no previous tree node, the PrevVisibleNode property returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The PrevVisibleNode can be a child, sibling, or a tree node from another branch.","pos":[0,80]},{"content":"If there is no previous tree node, the PrevVisibleNode property returns <ph id=\"ph1\">`null`</ph>.","pos":[81,160],"source":" If there is no previous tree node, the PrevVisibleNode property returns `null`."}]},{"pos":[89498,89598],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the previous visible tree node.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the previous visible tree node."},{"pos":[90016,90073],"content":"Removes the current tree node from the tree view control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the current tree node from the tree view control.","pos":[0,57]}]},{"pos":[90085,90404],"content":"When the Remove method is called, the tree node, and any child tree nodes that are assigned to the <xref:System.Windows.Forms.TreeNode>, are removed from the <xref:System.Windows.Forms.TreeView>. The removed child nodes are removed from the <xref:System.Windows.Forms.TreeView> but are still attached to this tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the Remove method is called, the tree node, and any child tree nodes that are assigned to the <xref:System.Windows.Forms.TreeNode>, are removed from the <xref:System.Windows.Forms.TreeView>. The removed child nodes are removed from the <xref:System.Windows.Forms.TreeView> but are still attached to this tree node.","pos":[0,319],"nodes":[{"content":"When the Remove method is called, the tree node, and any child tree nodes that are assigned to the &lt;xref:System.Windows.Forms.TreeNode&gt;, are removed from the &lt;xref:System.Windows.Forms.TreeView&gt;.","pos":[0,195],"source":"When the Remove method is called, the tree node, and any child tree nodes that are assigned to the <xref:System.Windows.Forms.TreeNode>, are removed from the <xref:System.Windows.Forms.TreeView>."},{"content":"The removed child nodes are removed from the &lt;xref:System.Windows.Forms.TreeView&gt; but are still attached to this tree node.","pos":[196,319],"source":" The removed child nodes are removed from the <xref:System.Windows.Forms.TreeView> but are still attached to this tree node."}]}]},{"pos":[91708,91823],"content":"Gets or sets the image list index value of the image that is displayed when the tree node is in the selected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the image list index value of the image that is displayed when the tree node is in the selected state.","pos":[0,115]}]},{"pos":[91836,92345],"content":"The SelectedImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.      > [!NOTE] >  The default value of the SelectedImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SelectedImageIndex value is the index value of an &lt;xref:System.Drawing.Image&gt; stored in the &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName&gt; property.","pos":[0,234],"source":"The SelectedImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The default value of the SelectedImageIndex property is the same as the &lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt; property of the &lt;xref:System.Windows.Forms.TreeView&gt; control that the &lt;xref:System.Windows.Forms.TreeNode&gt; is assigned to.","pos":[240,506],"source":"      > [!NOTE] >  The default value of the SelectedImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to."}]},{"pos":[93484,93602],"content":"A zero-based index value that represents the image position in an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImageList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A zero-based index value that represents the image position in an <xref href=\"System.Windows.Forms.ImageList\"></xref>."},{"pos":[94069,94161],"content":"Gets or sets the key of the image displayed in the tree node when it is in a selected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key of the image displayed in the tree node when it is in a selected state.","pos":[0,92]}]},{"pos":[94173,94351],"content":"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The image key returned by this property is contained in the &lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[0,178],"source":"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control."}]},{"pos":[94477,94550],"content":"The key of the image displayed when the tree node is in a selected state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the image displayed when the tree node is in a selected state.","pos":[0,73]}]},{"pos":[95274,95433],"content":"Saves the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Saves the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> to the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>."},{"pos":[95705,95847],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that describes the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[95943,96059],"content":"The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during serialization","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that indicates the state of the stream during serialization","pos":[0,116],"source":"The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during serialization"}]},{"pos":[96512,96844],"content":"Gets or sets the index of the image that is used to indicate the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the parent <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has its &lt;xref:System.Windows.Forms.TreeView.CheckBoxes*&gt; property set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the index of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> when the parent <xref href=\"System.Windows.Forms.TreeView\"></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[96857,98003],"content":"The image index that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageIndex.       The StateImageIndex returns -1 when not set. The <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> property, the StateImageIndex property is automatically set to -1. Alternatively, if you set StateImageIndex, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> is automatically set to an empty string (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":"The image index that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageIndex.       The StateImageIndex returns -1 when not set. The <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> property, the StateImageIndex property is automatically set to -1. Alternatively, if you set StateImageIndex, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> is automatically set to an empty string (\"\").","pos":[0,1140],"nodes":[{"content":"The image index that is returned by this property is contained in the &lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[0,193],"source":"The image index that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control."},{"content":"If the parent &lt;xref:System.Windows.Forms.TreeView&gt; has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the &lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt; set on the parent &lt;xref:System.Windows.Forms.TreeView&gt; to indicate an unchecked or checked state, respectively.","pos":[200,532],"source":"       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively."},{"content":"Toggling the &lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt; property does not affect the value of the StateImageIndex.","pos":[533,652],"source":" Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageIndex."},{"content":"The StateImageIndex returns -1 when not set.","pos":[659,703]},{"content":"The &lt;xref:System.Windows.Forms.TreeNode.StateImageKey%2A&gt; and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored.","pos":[704,861],"source":" The <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored."},{"content":"If you set the &lt;xref:System.Windows.Forms.TreeNode.StateImageKey%2A&gt; property, the StateImageIndex property is automatically set to -1.","pos":[862,997],"source":" If you set the <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> property, the StateImageIndex property is automatically set to -1."},{"content":"Alternatively, if you set StateImageIndex, &lt;xref:System.Windows.Forms.TreeNode.StateImageKey%2A&gt; is automatically set to an empty string (\"\").","pos":[998,1140],"source":" Alternatively, if you set StateImageIndex, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> is automatically set to an empty string (\"\")."}]}]},{"pos":[98125,98241],"content":"The index of the image that is used to indicate the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The index of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[98429,98484],"content":"The specified index is less than -1 or greater than 14.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified index is less than -1 or greater than 14.","pos":[0,55]}]},{"pos":[98857,99187],"content":"Gets or sets the key of the image that is used to indicate the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when the parent <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has its &lt;xref:System.Windows.Forms.TreeView.CheckBoxes*&gt; property set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the key of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> when the parent <xref href=\"System.Windows.Forms.TreeView\"></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[99200,100533],"content":"The image key that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageKey.       The StateImageKey and <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the StateImageKey property, the <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, StateImageKey is automatically set to an empty string (\"\"). You should set the StateImageKey to an image with a corresponding index between 0 and 14. You can set the StateImageKey to an image with an index value greater than 14 (an exception will not be thrown), but the image may not be displayed","needQuote":false,"needEscape":true,"nodes":[{"content":"The image key that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageKey.       The StateImageKey and <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the StateImageKey property, the <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, StateImageKey is automatically set to an empty string (\"\"). You should set the StateImageKey to an image with a corresponding index between 0 and 14. You can set the StateImageKey to an image with an index value greater than 14 (an exception will not be thrown), but the image may not be displayed","pos":[0,1327],"nodes":[{"content":"The image key that is returned by this property is contained in the &lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; control.","pos":[0,191],"source":"The image key that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control."},{"content":"If the parent &lt;xref:System.Windows.Forms.TreeView&gt; has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the &lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt; set on the parent &lt;xref:System.Windows.Forms.TreeView&gt; to indicate an unchecked or checked state, respectively.","pos":[198,528],"source":"       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively."},{"content":"Toggling the &lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt; property does not affect the value of the StateImageKey.","pos":[529,646],"source":" Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageKey."},{"content":"The StateImageKey and &lt;xref:System.Windows.Forms.TreeNode.StateImageIndex%2A&gt; properties are mutually exclusive, meaning if one is set, the other is ignored.","pos":[653,810],"source":"       The StateImageKey and <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> properties are mutually exclusive, meaning if one is set, the other is ignored."},{"content":"If you set the StateImageKey property, the &lt;xref:System.Windows.Forms.TreeNode.StateImageIndex%2A&gt; property is automatically set to -1.","pos":[811,946],"source":" If you set the StateImageKey property, the <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> property is automatically set to -1."},{"content":"Alternatively, if you set &lt;xref:System.Windows.Forms.TreeNode.StateImageIndex%2A&gt;, StateImageKey is automatically set to an empty string (\"\").","pos":[947,1089],"source":" Alternatively, if you set <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, StateImageKey is automatically set to an empty string (\"\")."},{"content":"You should set the StateImageKey to an image with a corresponding index between 0 and 14.","pos":[1090,1179]},{"content":"You can set the StateImageKey to an image with an index value greater than 14 (an exception will not be thrown), but the image may not be displayed","pos":[1180,1327]}]}]},{"pos":[100657,100771],"content":"The key of the image that is used to indicate the state of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[101741,101875],"content":"Populates a serialization information object with the data needed to serialize the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Populates a serialization information object with the data needed to serialize the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[102147,102308],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the data to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that contains the data to serialize the <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[102404,102524],"content":"A <xref:System.Runtime.Serialization.StreamingContext> that contains the destination information for this serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the destination information for this serialization.","pos":[0,120],"source":"A <xref:System.Runtime.Serialization.StreamingContext> that contains the destination information for this serialization."}]},{"pos":[102964,103027],"content":"Gets or sets the object that contains data about the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the object that contains data about the tree node.","pos":[0,63]}]},{"pos":[103040,103467],"content":"Any <xref:System.Object> derived type can be assigned to this property. If this property is being set through the Windows Forms designer, only text can be assigned.      > [!CAUTION] >  The <xref:System.Windows.Forms.TreeNode.Clone%2A> method performs a shallow copy of the node. If the value of the Tag property is a reference type, both the original and cloned copy will point to the same single instance of the Tag value.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any &lt;xref:System.Object&gt; derived type can be assigned to this property.","pos":[0,71],"source":"Any <xref:System.Object> derived type can be assigned to this property."},{"content":"If this property is being set through the Windows Forms designer, only text can be assigned.","pos":[72,164]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  The &lt;xref:System.Windows.Forms.TreeNode.Clone%2A&gt; method performs a shallow copy of the node.","pos":[170,279],"source":"      > [!CAUTION] >  The <xref:System.Windows.Forms.TreeNode.Clone%2A> method performs a shallow copy of the node."},{"content":"If the value of the Tag property is a reference type, both the original and cloned copy will point to the same single instance of the Tag value.","pos":[280,424]}]},{"pos":[104604,104744],"content":"An <xref:System.Object> that contains data about the tree node. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that contains data about the tree node.","pos":[0,63],"source":"An <xref:System.Object> that contains data about the tree node."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[64,140],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[105136,105198],"content":"Gets or sets the text displayed in the label of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text displayed in the label of the tree node.","pos":[0,62]}]},{"pos":[105211,105949],"content":"The maximum number of characters that a <xref:System.Windows.Forms.TreeNode> can display is 259. If a <xref:System.String> that has more than 259 characters is assigned to this property, only the first 259 characters are displayed.       This property cannot be set by the user if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the parent <xref:System.Windows.Forms.TreeView> is set to `false`. The alternative to explicitly setting this property is to create the tree node by using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the Text property. The label is displayed next to the <xref:System.Windows.Forms.TreeNode> image, if one is displayed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The maximum number of characters that a &lt;xref:System.Windows.Forms.TreeNode&gt; can display is 259.","pos":[0,96],"source":"The maximum number of characters that a <xref:System.Windows.Forms.TreeNode> can display is 259."},{"content":"If a &lt;xref:System.String&gt; that has more than 259 characters is assigned to this property, only the first 259 characters are displayed.","pos":[97,231],"source":" If a <xref:System.String> that has more than 259 characters is assigned to this property, only the first 259 characters are displayed."},{"content":"This property cannot be set by the user if the &lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; is set to <ph id=\"ph1\">`false`</ph>.","pos":[238,413],"source":"       This property cannot be set by the user if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the parent <xref:System.Windows.Forms.TreeView> is set to `false`."},{"content":"The alternative to explicitly setting this property is to create the tree node by using one of the &lt;xref:System.Windows.Forms.TreeNode.%23ctor%2A&gt; constructors that has a string parameter that represents the Text property.","pos":[414,636],"source":" The alternative to explicitly setting this property is to create the tree node by using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the Text property."},{"content":"The label is displayed next to the &lt;xref:System.Windows.Forms.TreeNode&gt; image, if one is displayed.","pos":[637,736],"source":" The label is displayed next to the <xref:System.Windows.Forms.TreeNode> image, if one is displayed."}]},{"pos":[107124,107173],"content":"The text displayed in the label of the tree node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text displayed in the label of the tree node.","pos":[0,49]}]},{"pos":[107580,107644],"content":"Toggles the tree node to either the expanded or collapsed state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Toggles the tree node to either the expanded or collapsed state.","pos":[0,64]}]},{"pos":[107657,108048],"content":"The tree node is toggled to the state opposite its current state, either expanded or collapsed.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The tree node is toggled to the state opposite its current state, either expanded or collapsed.","pos":[0,95]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The state of a &lt;xref:System.Windows.Forms.TreeNode&gt; is persisted.","pos":[101,179],"source":"      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted."},{"content":"For example, if the next level of child nodes was not collapsed previously, when the &lt;xref:System.Windows.Forms.TreeNode.Expand%2A&gt; method is called, the child nodes appear in their previously expanded state.","pos":[180,388],"source":" For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."}]},{"pos":[109321,109444],"content":"Gets or sets the text that appears when the mouse pointer hovers over a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the text that appears when the mouse pointer hovers over a <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[109457,109899],"content":"You must set the <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> property of the parent <xref:System.Windows.Forms.TreeView> to `true` for the ToolTipText to be visible at run time.       If the <xref:System.Windows.Forms.TreeView> control has a ToolTip and also contains a <xref:System.Windows.Forms.TreeNode> that has a <xref:System.Windows.Forms.ToolTip>, only the <xref:System.Windows.Forms.ToolTip> for the node will be shown.","needQuote":false,"needEscape":true,"nodes":[{"content":"You must set the &lt;xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A&gt; property of the parent &lt;xref:System.Windows.Forms.TreeView&gt; to <ph id=\"ph1\">`true`</ph> for the ToolTipText to be visible at run time.","pos":[0,190],"source":"You must set the <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> property of the parent <xref:System.Windows.Forms.TreeView> to `true` for the ToolTipText to be visible at run time."},{"content":"If the &lt;xref:System.Windows.Forms.TreeView&gt; control has a ToolTip and also contains a &lt;xref:System.Windows.Forms.TreeNode&gt; that has a &lt;xref:System.Windows.Forms.ToolTip&gt;, only the &lt;xref:System.Windows.Forms.ToolTip&gt; for the node will be shown.","pos":[197,440],"source":"       If the <xref:System.Windows.Forms.TreeView> control has a ToolTip and also contains a <xref:System.Windows.Forms.TreeNode> that has a <xref:System.Windows.Forms.ToolTip>, only the <xref:System.Windows.Forms.ToolTip> for the node will be shown."}]},{"pos":[110619,110734],"content":"Gets the text that appears when the mouse pointer hovers over a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the text that appears when the mouse pointer hovers over a <xref href=\"System.Windows.Forms.TreeNode\"></xref>."},{"pos":[111158,111210],"content":"Returns a string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents the current object.","pos":[0,52]}]},{"pos":[111346,111390],"content":"A string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]},{"pos":[111807,111867],"content":"Gets the parent tree view that the tree node is assigned to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent tree view that the tree node is assigned to.","pos":[0,60]}]},{"pos":[112995,113233],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TreeView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent tree view that the tree node is assigned to, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the node has not been assigned to a tree view.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.TreeView\"></xref> that represents the parent tree view that the tree node is assigned to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node has not been assigned to a tree view."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.TreeNode\n  id: TreeNode\n  children:\n  - System.Windows.Forms.TreeNode.#ctor\n  - System.Windows.Forms.TreeNode.#ctor(System.String)\n  - System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])\n  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)\n  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])\n  - System.Windows.Forms.TreeNode.BackColor\n  - System.Windows.Forms.TreeNode.BeginEdit\n  - System.Windows.Forms.TreeNode.Bounds\n  - System.Windows.Forms.TreeNode.Checked\n  - System.Windows.Forms.TreeNode.Clone\n  - System.Windows.Forms.TreeNode.Collapse\n  - System.Windows.Forms.TreeNode.Collapse(System.Boolean)\n  - System.Windows.Forms.TreeNode.ContextMenu\n  - System.Windows.Forms.TreeNode.ContextMenuStrip\n  - System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Windows.Forms.TreeNode.EndEdit(System.Boolean)\n  - System.Windows.Forms.TreeNode.EnsureVisible\n  - System.Windows.Forms.TreeNode.Expand\n  - System.Windows.Forms.TreeNode.ExpandAll\n  - System.Windows.Forms.TreeNode.FirstNode\n  - System.Windows.Forms.TreeNode.ForeColor\n  - System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)\n  - System.Windows.Forms.TreeNode.FullPath\n  - System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)\n  - System.Windows.Forms.TreeNode.Handle\n  - System.Windows.Forms.TreeNode.ImageIndex\n  - System.Windows.Forms.TreeNode.ImageKey\n  - System.Windows.Forms.TreeNode.Index\n  - System.Windows.Forms.TreeNode.IsEditing\n  - System.Windows.Forms.TreeNode.IsExpanded\n  - System.Windows.Forms.TreeNode.IsSelected\n  - System.Windows.Forms.TreeNode.IsVisible\n  - System.Windows.Forms.TreeNode.LastNode\n  - System.Windows.Forms.TreeNode.Level\n  - System.Windows.Forms.TreeNode.Name\n  - System.Windows.Forms.TreeNode.NextNode\n  - System.Windows.Forms.TreeNode.NextVisibleNode\n  - System.Windows.Forms.TreeNode.NodeFont\n  - System.Windows.Forms.TreeNode.Nodes\n  - System.Windows.Forms.TreeNode.Parent\n  - System.Windows.Forms.TreeNode.PrevNode\n  - System.Windows.Forms.TreeNode.PrevVisibleNode\n  - System.Windows.Forms.TreeNode.Remove\n  - System.Windows.Forms.TreeNode.SelectedImageIndex\n  - System.Windows.Forms.TreeNode.SelectedImageKey\n  - System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Windows.Forms.TreeNode.StateImageIndex\n  - System.Windows.Forms.TreeNode.StateImageKey\n  - System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Windows.Forms.TreeNode.Tag\n  - System.Windows.Forms.TreeNode.Text\n  - System.Windows.Forms.TreeNode.Toggle\n  - System.Windows.Forms.TreeNode.ToolTipText\n  - System.Windows.Forms.TreeNode.ToString\n  - System.Windows.Forms.TreeNode.TreeView\n  langs:\n  - csharp\n  name: TreeNode\n  nameWithType: TreeNode\n  fullName: System.Windows.Forms.TreeNode\n  type: Class\n  summary: Represents a node of a <xref href=\"System.Windows.Forms.TreeView\"></xref>.\n  remarks: \"The <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection holds all the child TreeNode objects assigned to the current TreeNode. You can add, remove, or clone a TreeNode; when you do this, all child tree nodes are added, removed, or cloned. Each TreeNode can contain a collection of other TreeNode objects. This can make it difficult to determine where you are in the <xref:System.Windows.Forms.TreeView> when iterating through the collection. To determine your location in a tree structure, use the <xref:System.Windows.Forms.TreeNode.FullPath%2A> property. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> string can be parsed using the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> string value to determine where a TreeNode label begins and ends.  \\n  \\n The TreeNode label is set by setting the <xref:System.Windows.Forms.TreeNode.Text%2A> property explicitly. The alternative is to create the tree node using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the <xref:System.Windows.Forms.TreeNode.Text%2A> property. The label is displayed next to the TreeNode image, if one is displayed.  \\n  \\n To display images next to the tree nodes, assign an <xref:System.Windows.Forms.ImageList> to the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control and assign an <xref:System.Drawing.Image> by referencing its index value in the <xref:System.Windows.Forms.ImageList> property. Set the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is in an unselected state. Likewise, set the <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is selected.  \\n  \\n Selecting specific tree nodes and iterating through the <xref:System.Windows.Forms.TreeView.Nodes%2A> collection can be achieved by using the following property values: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Assign the TreeNode returned by one of aforementioned properties to the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property to select that tree node in the <xref:System.Windows.Forms.TreeView> control.  \\n  \\n Tree nodes can be expanded to display the next level of child tree nodes. The user can expand the TreeNode by pressing the plus (+) button next to the TreeNode, if one is displayed, or you can expand the TreeNode by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method. To expand all child tree node levels in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection, call the <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> method. You can collapse the child TreeNode level by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method, or the user can press the minus (-) button next to the TreeNode, if one is displayed. You can also call the <xref:System.Windows.Forms.TreeNode.Toggle%2A> method to alternate the TreeNode between the expanded and collapsed states.  \\n  \\n Tree nodes can optionally display a check box. To display the check boxes, set the <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.TreeView> to `true`. The <xref:System.Windows.Forms.TreeNode.Checked%2A> property is set to `true` for tree nodes that are in a checked state.\"\n  example:\n  - \"The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the TreeNode objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_1_1.vb)]\\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_1_1.cs)]\\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_1_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultProperty(\"Text\")]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))]\n\n      public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.ICloneable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode()\n  nameWithType: TreeNode.TreeNode()\n  fullName: System.Windows.Forms.TreeNode.TreeNode()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \\n  \\n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/m-system.windows.forms.t_46_1.cs)]\\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/m-system.windows.forms.t_46_1.cpp)]\\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_46_1.vb)]\"\n  syntax:\n    content: public TreeNode ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode(String)\n  nameWithType: TreeNode.TreeNode(String)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text.\n  remarks: The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label.\n  example:\n  - \"The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_17_1.vb)]\\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_17_1.cs)]\\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_17_1.cpp)]\"\n  syntax:\n    content: public TreeNode (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class using the specified serialization information and context.\n  syntax:\n    content: protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: serializationInfo\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that contains the data to deserialize the class.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream.\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])\n  id: '#ctor(System.String,System.Windows.Forms.TreeNode[])'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode(String,TreeNode[])\n  nameWithType: TreeNode.TreeNode(String,TreeNode[])\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text and child tree nodes.\n  remarks: The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property.\n  example:\n  - \"The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \\n  \\n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/f9da6810-4d20-4683-b032-_1.cs)]\\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/f9da6810-4d20-4683-b032-_1.cpp)]\\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/f9da6810-4d20-4683-b032-_1.vb)]\"\n  syntax:\n    content: public TreeNode (string text, System.Windows.Forms.TreeNode[] children);\n    parameters:\n    - id: text\n      type: System.String\n      description: The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.\n    - id: children\n      type: System.Windows.Forms.TreeNode[]\n      description: An array of child <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects.\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Int32,System.Int32)'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode(String,Int32,Int32)\n  nameWithType: TreeNode.TreeNode(String,Int32,Int32)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text and images to display when the tree node is in a selected and unselected state.\n  remarks: The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` property is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` property is displayed when the tree node is in a selected state.\n  example:\n  - \"The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \\n  \\n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/8c41dd24-47e3-4299-bfdf-_1.vb)]\\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/8c41dd24-47e3-4299-bfdf-_1.cpp)]\\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/8c41dd24-47e3-4299-bfdf-_1.cs)]\"\n  syntax:\n    content: public TreeNode (string text, int imageIndex, int selectedImageIndex);\n    parameters:\n    - id: text\n      type: System.String\n      description: The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.\n    - id: imageIndex\n      type: System.Int32\n      description: The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is unselected.\n    - id: selectedImageIndex\n      type: System.Int32\n      description: The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is selected.\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])\n  id: '#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])'\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeNode(String,Int32,Int32,TreeNode[])\n  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state.\n  remarks: The `text` parameter value is assigned to the node's <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` parameter is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` parameter is displayed when the tree node is in a selected state. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property.\n  example:\n  - \"The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \\n  \\n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/737755cf-fb88-4601-a0bc-_1.vb)]\\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/737755cf-fb88-4601-a0bc-_1.cpp)]\\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/737755cf-fb88-4601-a0bc-_1.cs)]\"\n  syntax:\n    content: public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);\n    parameters:\n    - id: text\n      type: System.String\n      description: The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node.\n    - id: imageIndex\n      type: System.Int32\n      description: The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is unselected.\n    - id: selectedImageIndex\n      type: System.Int32\n      description: The index value of <xref href=\"System.Drawing.Image\"></xref> to display when the tree node is selected.\n    - id: children\n      type: System.Windows.Forms.TreeNode[]\n      description: An array of child <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects.\n  overload: System.Windows.Forms.TreeNode.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.BackColor\n  id: BackColor\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: TreeNode.BackColor\n  fullName: System.Windows.Forms.TreeNode.BackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background color of the tree node.\n  remarks: If the BackColor property is set to <xref:System.Drawing.Color?displayProperty=fullName>, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.BackColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to.\n  example:\n  - \"The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its <xref:System.Windows.Forms.TreeNode.Checked%2A> property set to `true` by setting its BackColor property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \\n  \\n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_251_1.vb)]\\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_251_1.cpp)]\\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_251_1.cs)]\"\n  syntax:\n    content: public System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: The background <xref href=\"System.Drawing.Color\"></xref> of the tree node. The default is <xref href=\"System.Drawing.Color\"></xref>.\n  overload: System.Windows.Forms.TreeNode.BackColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.BeginEdit\n  id: BeginEdit\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: BeginEdit()\n  nameWithType: TreeNode.BeginEdit()\n  fullName: System.Windows.Forms.TreeNode.BeginEdit()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initiates the editing of the tree node label.\n  remarks: \"A typical scenario to use this method is to call it on the <xref:System.Windows.Forms.MenuItem.Click> event of a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.ContextMenu>.  \\n  \\n> [!NOTE]\\n>  This method only works if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the <xref:System.Windows.Forms.TreeView> is set to `true`. If <xref:System.Windows.Forms.TreeView.LabelEdit%2A> is set to `false`, an exception is thrown and the tree node will not be put into an editable state.\"\n  example:\n  - \"The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right-clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \\n  \\n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_77_1.cpp)]\\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_77_1.cs)]\\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_77_1.vb)]\"\n  syntax:\n    content: public void BeginEdit ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.BeginEdit*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: '&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A?displayProperty=fullName&gt; is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.'\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Bounds\n  id: Bounds\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: TreeNode.Bounds\n  fullName: System.Windows.Forms.TreeNode.Bounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the bounds of the tree node.\n  remarks: The coordinates are relative to the upper-left corner of the <xref:System.Windows.Forms.TreeView> control.\n  example:\n  - \"The following code example changes the size <xref:System.Windows.Forms.TreeNode.NodeFont%2A> to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView> control with a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \\n  \\n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_227_1.cs)]\\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_227_1.cpp)]\\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_227_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Rectangle Bounds { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: The <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the tree node.\n  overload: System.Windows.Forms.TreeNode.Bounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Checked\n  id: Checked\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Checked\n  nameWithType: TreeNode.Checked\n  fullName: System.Windows.Forms.TreeNode.Checked\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the tree node is in a checked state.\n  remarks: ''\n  example:\n  - \"The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its Checked property set to `true` by setting its <xref:System.Windows.Forms.TreeNode.BackColor%2A> property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \\n  \\n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_26_1.vb)]\\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_26_1.cpp)]\\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_26_1.cs)]\"\n  syntax:\n    content: public bool Checked { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in a checked state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.Checked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Clone\n  id: Clone\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: TreeNode.Clone()\n  fullName: System.Windows.Forms.TreeNode.Clone()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Copies the tree node and the entire subtree rooted at this tree node.\n  remarks: \"The tree structure from the tree node being cloned and below is copied. Any child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode> being cloned are included in the new tree node and subtree.  \\n  \\n The Clone method performs a shallow copy of the node. If the value of the <xref:System.Windows.Forms.TreeNode.Tag%2A> property is a reference type, both the original and cloned copy will point to the same single instance of the <xref:System.Windows.Forms.TreeNode.Tag%2A> value.\"\n  example:\n  - \"The following code example clones the last child tree node of the last root tree node and inserts the clone as the first root tree node in the `TreeNodeCollection`. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects and a <xref:System.Windows.Forms.Button>.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#3](~/add/codesnippet/visualbasic/m-system.windows.forms.t_43_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#3](~/add/codesnippet/csharp/m-system.windows.forms.t_43_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#3](~/add/codesnippet/cpp/m-system.windows.forms.t_43_1.cpp)]\"\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref:System.Object> that represents the cloned <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  overload: System.Windows.Forms.TreeNode.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Collapse\n  id: Collapse\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Collapse()\n  nameWithType: TreeNode.Collapse()\n  fullName: System.Windows.Forms.TreeNode.Collapse()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Collapses the tree node.\n  remarks: \"The Collapse method collapses the current <xref:System.Windows.Forms.TreeNode> and its child nodes. If you want to collapse only the current <xref:System.Windows.Forms.TreeNode>, use the <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName> overload, passing `true` to ignore its child nodes.  \\n  \\n> [!NOTE]\\n>  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.\"\n  example:\n  - \"The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the Collapse method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_7_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_7_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_7_1.cpp)]\"\n  syntax:\n    content: public void Collapse ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.Collapse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)\n  id: Collapse(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Collapse(Boolean)\n  nameWithType: TreeNode.Collapse(Boolean)\n  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Collapses the <xref href=\"System.Windows.Forms.TreeNode\"></xref> and optionally collapses its children.\n  remarks: Use the Collapse method, passing `true`, when you want to collapse a node but leave its child nodes in their expanded state.\n  syntax:\n    content: public void Collapse (bool ignoreChildren);\n    parameters:\n    - id: ignoreChildren\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to leave the child nodes in their current state; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to collapse the child nodes.\n  overload: System.Windows.Forms.TreeNode.Collapse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ContextMenu\n  id: ContextMenu\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ContextMenu\n  nameWithType: TreeNode.ContextMenu\n  fullName: System.Windows.Forms.TreeNode.ContextMenu\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the shortcut menu that is associated with this tree node.\n  remarks: The preferred way to associate a shortcut menu with a tree node is with the <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> property.\n  syntax:\n    content: public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }\n    return:\n      type: System.Windows.Forms.ContextMenu\n      description: The <xref href=\"System.Windows.Forms.ContextMenu\"></xref> that is associated with the tree node.\n  overload: System.Windows.Forms.TreeNode.ContextMenu*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ContextMenuStrip\n  id: ContextMenuStrip\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ContextMenuStrip\n  nameWithType: TreeNode.ContextMenuStrip\n  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the shortcut menu associated with this tree node.\n  remarks: The shortcut menu is shown when the user right-clicks the tree node.\n  syntax:\n    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }\n    return:\n      type: System.Windows.Forms.ContextMenuStrip\n      description: The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> associated with the tree node.\n  overload: System.Windows.Forms.TreeNode.ContextMenuStrip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Deserialize(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Loads the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> from the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.\n  syntax:\n    content: protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: serializationInfo\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that describes the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during deserialization.\n  overload: System.Windows.Forms.TreeNode.Deserialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)\n  id: EndEdit(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: EndEdit(Boolean)\n  nameWithType: TreeNode.EndEdit(Boolean)\n  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Ends the editing of the tree node label.\n  remarks: ''\n  example:\n  - \"The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \\n  \\n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_40_1.cpp)]\\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_40_1.cs)]\\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_40_1.vb)]\"\n  syntax:\n    content: public void EndEdit (bool cancel);\n    parameters:\n    - id: cancel\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the editing of the tree node label text was canceled without being saved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.EndEdit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.EnsureVisible\n  id: EnsureVisible\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: EnsureVisible()\n  nameWithType: TreeNode.EnsureVisible()\n  fullName: System.Windows.Forms.TreeNode.EnsureVisible()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary.\n  remarks: \"When the EnsureVisible method is called, the tree is expanded and scrolled to ensure that the current tree node is visible in the <xref:System.Windows.Forms.TreeView>. This method is useful if you are selecting a tree node in code based on certain criteria. By calling this method after you select the node, the user can see and interact with the selected node.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName> property is set to a value that is larger than the height of the tree view control, calling this method has unexpected results.\"\n  example:\n  - \"The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_34_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/m-system.windows.forms.t_34_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/m-system.windows.forms.t_34_1.cpp)]\"\n  syntax:\n    content: public void EnsureVisible ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.EnsureVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Expand\n  id: Expand\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Expand()\n  nameWithType: TreeNode.Expand()\n  fullName: System.Windows.Forms.TreeNode.Expand()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Expands the tree node.\n  remarks: \"The Expand method expands the current <xref:System.Windows.Forms.TreeNode> down to the next level of nodes.  \\n  \\n> [!NOTE]\\n>  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the Expand method is called, the child nodes appear in their previously expanded state.\"\n  example:\n  - \"The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the Expand method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_74_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_74_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_74_1.cpp)]\"\n  syntax:\n    content: public void Expand ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.Expand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ExpandAll\n  id: ExpandAll\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ExpandAll()\n  nameWithType: TreeNode.ExpandAll()\n  fullName: System.Windows.Forms.TreeNode.ExpandAll()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Expands all the child tree nodes.\n  remarks: \"The ExpandAll method expands all the child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection.  \\n  \\n> [!NOTE]\\n>  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.\"\n  example:\n  - \"The following code example expands all the tree nodes in a <xref:System.Windows.Forms.TreeView> control when a <xref:System.Windows.Forms.CheckBox> is checked, and collapses the <xref:System.Windows.Forms.TreeNode.FirstNode%2A> when the <xref:System.Windows.Forms.CheckBox> is cleared. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.CheckBox>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \\n  \\n [!code-cpp[TreeNode_ForeColor#1](~/add/codesnippet/cpp/m-system.windows.forms.t_38_1.cpp)]\\n [!code-cs[TreeNode_ForeColor#1](~/add/codesnippet/csharp/m-system.windows.forms.t_38_1.cs)]\\n [!code-vb[TreeNode_ForeColor#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_38_1.vb)]\"\n  syntax:\n    content: public void ExpandAll ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.ExpandAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.FirstNode\n  id: FirstNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: FirstNode\n  nameWithType: TreeNode.FirstNode\n  fullName: System.Windows.Forms.TreeNode.FirstNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the first child tree node in the tree node collection.\n  remarks: The FirstNode is the first child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the FirstNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_89_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_89_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_89_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode FirstNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: The first child <xref href=\"System.Windows.Forms.TreeNode\"></xref> in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection.\n  overload: System.Windows.Forms.TreeNode.FirstNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ForeColor\n  id: ForeColor\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ForeColor\n  nameWithType: TreeNode.ForeColor\n  fullName: System.Windows.Forms.TreeNode.ForeColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the foreground color of the tree node.\n  remarks: If `null`, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.ForeColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to.\n  example:\n  - \"The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \\n  \\n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_178_1.cs)]\\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_178_1.cpp)]\\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_178_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Color ForeColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: The foreground <xref href=\"System.Drawing.Color\"></xref> of the tree node.\n  overload: System.Windows.Forms.TreeNode.ForeColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)\n  id: FromHandle(System.Windows.Forms.TreeView,System.IntPtr)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: FromHandle(TreeView,IntPtr)\n  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)\n  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the tree node with the specified handle and assigned to the specified tree view control.\n  remarks: When a node is added to the <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName> collection, the <xref:System.Windows.Forms.TreeView> control sends an NM_CUSTOMDRAW notification before the node handle is available. If you override the <xref:System.Windows.Forms.Control.WndProc%2A> method of the <xref:System.Windows.Forms.TreeView> to provide custom drawing in response to this notification, you should always check the return value of this method for `null` before you attempt to access the node.\n  example:\n  - \"The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its <xref:System.Windows.Forms.TreeNode.Handle%2A> property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/0a58bc0d-b346-4d14-af9f-_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/0a58bc0d-b346-4d14-af9f-_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/0a58bc0d-b346-4d14-af9f-_1.vb)]\"\n  syntax:\n    content: public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);\n    parameters:\n    - id: tree\n      type: System.Windows.Forms.TreeView\n      description: The <xref href=\"System.Windows.Forms.TreeView\"></xref> that contains the tree node.\n    - id: handle\n      type: System.IntPtr\n      description: The handle of the tree node.\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the tree node assigned to the specified <xref href=\"System.Windows.Forms.TreeView\"></xref> control with the specified handle.\n  overload: System.Windows.Forms.TreeNode.FromHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.FullPath\n  id: FullPath\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: FullPath\n  nameWithType: TreeNode.FullPath\n  fullName: System.Windows.Forms.TreeNode.FullPath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path from the root tree node to the current tree node.\n  remarks: The path consists of the labels of all the tree nodes that must be navigated to reach this tree node, starting at the root tree node. The node labels are separated by the delimiter character specified in the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of the <xref:System.Windows.Forms.TreeView> control that contains this node. For example, if the delimiter character of the tree view control named \"Location\" is set to the backslash character, (\\\\), the FullPath property value is \"Country\\Region\\State\".\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \\n  \\n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/p-system.windows.forms.t_103_1.cpp)]\\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/p-system.windows.forms.t_103_1.cs)]\\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_103_1.vb)]\"\n  syntax:\n    content: public string FullPath { get; }\n    return:\n      type: System.String\n      description: The path from the root tree node to the current tree node.\n  overload: System.Windows.Forms.TreeNode.FullPath*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The node is not contained in a <xref href=\"System.Windows.Forms.TreeView\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)\n  id: GetNodeCount(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: GetNodeCount(Boolean)\n  nameWithType: TreeNode.GetNodeCount(Boolean)\n  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the number of child tree nodes.\n  remarks: ''\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \\n  \\n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/m-system.windows.forms.t_75_1.cpp)]\\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/m-system.windows.forms.t_75_1.cs)]\\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_75_1.vb)]\"\n  syntax:\n    content: public int GetNodeCount (bool includeSubTrees);\n    parameters:\n    - id: includeSubTrees\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes*> collection.\n  overload: System.Windows.Forms.TreeNode.GetNodeCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Handle\n  id: Handle\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: TreeNode.Handle\n  fullName: System.Windows.Forms.TreeNode.Handle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the handle of the tree node.\n  remarks: If a handle is not already created when the Handle property is referenced, it is created.\n  example:\n  - \"The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its Handle property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/p-system.windows.forms.t_268_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/p-system.windows.forms.t_268_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/p-system.windows.forms.t_268_1.vb)]\"\n  syntax:\n    content: public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: The tree node handle.\n  overload: System.Windows.Forms.TreeNode.Handle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ImageIndex\n  id: ImageIndex\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ImageIndex\n  nameWithType: TreeNode.ImageIndex\n  fullName: System.Windows.Forms.TreeNode.ImageIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the image list index value of the image displayed when the tree node is in the unselected state.\n  remarks: \"The ImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The default value of the ImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.ImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to.  \\n  \\n The <xref:System.Windows.Forms.TreeNode.ImageKey%2A> and ImageIndex properties are mutually exclusive; therefore, if one property is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.ImageKey%2A> property, the ImageIndex property is automatically set to -1. Alternatively, if you set ImageIndex, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> is automatically set to an empty string (\\\"\\\").\"\n  example:\n  - \"The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \\n  \\n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_272_1.vb)]\\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_272_1.cpp)]\\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_272_1.cs)]\"\n  syntax:\n    content: public int ImageIndex { get; set; }\n    return:\n      type: System.Int32\n      description: A zero-based index value that represents the image position in the assigned <xref href=\"System.Windows.Forms.ImageList\"></xref>.\n  overload: System.Windows.Forms.TreeNode.ImageIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ImageKey\n  id: ImageKey\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ImageKey\n  nameWithType: TreeNode.ImageKey\n  fullName: System.Windows.Forms.TreeNode.ImageKey\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the key for the image associated with this tree node when the node is in an unselected state.\n  remarks: \"The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the containing <xref:System.Windows.Forms.TreeView> control.  \\n  \\n The ImageKey is case-insensitive.  \\n  \\n The ImageKey and <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> properties are mutually exclusive; if one property is set, the other is ignored. If you set the ImageKey property, the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, ImageKey is automatically set to an empty string (\\\"\\\").\"\n  syntax:\n    content: public string ImageKey { get; set; }\n    return:\n      type: System.String\n      description: The key for the image associated with this tree node when the node is in an unselected state.\n  overload: System.Windows.Forms.TreeNode.ImageKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Index\n  id: Index\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Index\n  nameWithType: TreeNode.Index\n  fullName: System.Windows.Forms.TreeNode.Index\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the position of the tree node in the tree node collection.\n  remarks: ''\n  example:\n  - \"The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and Index property values of the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeNode.Parent%2A> property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_120_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_120_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_120_1.vb)]\"\n  syntax:\n    content: public int Index { get; }\n    return:\n      type: System.Int32\n      description: A zero-based index value that represents the position of the tree node in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection.\n  overload: System.Windows.Forms.TreeNode.Index*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.IsEditing\n  id: IsEditing\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: IsEditing\n  nameWithType: TreeNode.IsEditing\n  fullName: System.Windows.Forms.TreeNode.IsEditing\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the tree node is in an editable state.\n  remarks: ''\n  example:\n  - \"The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, letting the user edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \\n  \\n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_7_1.cpp)]\\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_7_1.cs)]\\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_7_1.vb)]\"\n  syntax:\n    content: public bool IsEditing { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in editable state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.IsEditing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.IsExpanded\n  id: IsExpanded\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: IsExpanded\n  nameWithType: TreeNode.IsExpanded\n  fullName: System.Windows.Forms.TreeNode.IsExpanded\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the tree node is in the expanded state.\n  remarks: ''\n  example:\n  - \"The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_106_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/p-system.windows.forms.t_106_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/p-system.windows.forms.t_106_1.cpp)]\"\n  syntax:\n    content: public bool IsExpanded { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in the expanded state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.IsExpanded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.IsSelected\n  id: IsSelected\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: IsSelected\n  nameWithType: TreeNode.IsSelected\n  fullName: System.Windows.Forms.TreeNode.IsSelected\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the tree node is in the selected state.\n  remarks: ''\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> containing several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_224_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_224_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_224_1.cpp)]\"\n  syntax:\n    content: public bool IsSelected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is in the selected state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.IsSelected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.IsVisible\n  id: IsVisible\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: IsVisible\n  nameWithType: TreeNode.IsVisible\n  fullName: System.Windows.Forms.TreeNode.IsVisible\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the tree node is visible or partially visible.\n  remarks: ''\n  example:\n  - \"The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \\n  \\n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_184_1.vb)]\\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/p-system.windows.forms.t_184_1.cs)]\\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/p-system.windows.forms.t_184_1.cpp)]\"\n  syntax:\n    content: public bool IsVisible { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the tree node is visible or partially visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.IsVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.LastNode\n  id: LastNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: LastNode\n  nameWithType: TreeNode.LastNode\n  fullName: System.Windows.Forms.TreeNode.LastNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the last child tree node.\n  remarks: The LastNode is the last child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the LastNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_169_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_169_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_169_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode LastNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the last child tree node.\n  overload: System.Windows.Forms.TreeNode.LastNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Level\n  id: Level\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Level\n  nameWithType: TreeNode.Level\n  fullName: System.Windows.Forms.TreeNode.Level\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the zero-based depth of the tree node in the <xref href=\"System.Windows.Forms.TreeView\"></xref> control.\n  remarks: For the Level property, the root node is considered the first level of nesting and returns 0.\n  syntax:\n    content: public int Level { get; }\n    return:\n      type: System.Int32\n      description: The zero-based depth of the tree node in the <xref href=\"System.Windows.Forms.TreeView\"></xref> control.\n  overload: System.Windows.Forms.TreeNode.Level*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Name\n  id: Name\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Name\n  nameWithType: TreeNode.Name\n  fullName: System.Windows.Forms.TreeNode.Name\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the name of the tree node.\n  remarks: The Name of a <xref:System.Windows.Forms.TreeNode> is also the node's key, when the node is part of a <xref:System.Windows.Forms.TreeNodeCollection>. If the node does not have a name, Name returns an empty string (\"\").\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the name of the tree node.\n  overload: System.Windows.Forms.TreeNode.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.NextNode\n  id: NextNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: NextNode\n  nameWithType: TreeNode.NextNode\n  fullName: System.Windows.Forms.TreeNode.NextNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the next sibling tree node.\n  remarks: The NextNode is the next sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>. If there is no next tree node, the NextNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_51_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_51_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_51_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode NextNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the next sibling tree node.\n  overload: System.Windows.Forms.TreeNode.NextNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.NextVisibleNode\n  id: NextVisibleNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: NextVisibleNode\n  nameWithType: TreeNode.NextVisibleNode\n  fullName: System.Windows.Forms.TreeNode.NextVisibleNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the next visible tree node.\n  remarks: The NextVisibleNode can be a child, sibling, or a tree node from another branch. If there is no next tree node, the NextVisibleNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_267_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_267_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_267_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode NextVisibleNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the next visible tree node.\n  overload: System.Windows.Forms.TreeNode.NextVisibleNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.NodeFont\n  id: NodeFont\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: NodeFont\n  nameWithType: TreeNode.NodeFont\n  fullName: System.Windows.Forms.TreeNode.NodeFont\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the font that is used to display the text on the tree node label.\n  remarks: \"If `null`, the <xref:System.Drawing.Font> used is the <xref:System.Windows.Forms.Control.Font%2A> property value of the <xref:System.Windows.Forms.TreeView> control that this node is attached to.  \\n  \\n> [!NOTE]\\n>  If the node font is larger than the <xref:System.Windows.Forms.Control.Font%2A> property value that is set in the <xref:System.Windows.Forms.TreeView> control, the tree node label text is clipped.\"\n  example:\n  - \"The following code example changes the size of NodeFont to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \\n  \\n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_20_1.cs)]\\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_20_1.cpp)]\\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_20_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Font NodeFont { get; set; }\n    return:\n      type: System.Drawing.Font\n      description: The <xref href=\"System.Drawing.Font\"></xref> that is used to display the text on the tree node label.\n  overload: System.Windows.Forms.TreeNode.NodeFont*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Nodes\n  id: Nodes\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Nodes\n  nameWithType: TreeNode.Nodes\n  fullName: System.Windows.Forms.TreeNode.Nodes\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the collection of <xref href=\"System.Windows.Forms.TreeNode\"></xref> objects assigned to the current tree node.\n  remarks: The Nodes property can hold a collection of other <xref:System.Windows.Forms.TreeNode> objects. Each of the tree node in the collection has a Nodes property that can contain its own <xref:System.Windows.Forms.TreeNodeCollection>. This nesting of tree nodes can make it difficult to navigate a tree structure. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> property makes it easier to determine your location in a tree.\n  example:\n  - \"The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls named `treeView1` and `treeView2`, and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_107_1.vb)]\\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_107_1.cpp)]\\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_107_1.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNodeCollection Nodes { get; }\n    return:\n      type: System.Windows.Forms.TreeNodeCollection\n      description: A <xref href=\"System.Windows.Forms.TreeNodeCollection\"></xref> that represents the tree nodes assigned to the current tree node.\n  overload: System.Windows.Forms.TreeNode.Nodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Parent\n  id: Parent\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: TreeNode.Parent\n  fullName: System.Windows.Forms.TreeNode.Parent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the parent tree node of the current tree node.\n  remarks: If the tree node is at the root level, the Parent property returns `null`.\n  example:\n  - \"The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and <xref:System.Windows.Forms.TreeNode.Index%2A> property values of the <xref:System.Windows.Forms.TreeNode> represented by the Parent property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_38_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_38_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_38_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode Parent { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the parent of the current tree node.\n  overload: System.Windows.Forms.TreeNode.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.PrevNode\n  id: PrevNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: PrevNode\n  nameWithType: TreeNode.PrevNode\n  fullName: System.Windows.Forms.TreeNode.PrevNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the previous sibling tree node.\n  remarks: The PrevNode is the previous sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node's parent <xref:System.Windows.Forms.TreeNode>. If there is no previous tree node, the PrevNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_237_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_237_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_237_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode PrevNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the previous sibling tree node.\n  overload: System.Windows.Forms.TreeNode.PrevNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.PrevVisibleNode\n  id: PrevVisibleNode\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: PrevVisibleNode\n  nameWithType: TreeNode.PrevVisibleNode\n  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the previous visible tree node.\n  remarks: The PrevVisibleNode can be a child, sibling, or a tree node from another branch. If there is no previous tree node, the PrevVisibleNode property returns `null`.\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_203_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_203_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_203_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeNode PrevVisibleNode { get; }\n    return:\n      type: System.Windows.Forms.TreeNode\n      description: A <xref href=\"System.Windows.Forms.TreeNode\"></xref> that represents the previous visible tree node.\n  overload: System.Windows.Forms.TreeNode.PrevVisibleNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Remove\n  id: Remove\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Remove()\n  nameWithType: TreeNode.Remove()\n  fullName: System.Windows.Forms.TreeNode.Remove()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes the current tree node from the tree view control.\n  remarks: When the Remove method is called, the tree node, and any child tree nodes that are assigned to the <xref:System.Windows.Forms.TreeNode>, are removed from the <xref:System.Windows.Forms.TreeView>. The removed child nodes are removed from the <xref:System.Windows.Forms.TreeView> but are still attached to this tree node.\n  example:\n  - \"The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_3_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_3_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_3_1.vb)]\"\n  syntax:\n    content: public void Remove ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.SelectedImageIndex\n  id: SelectedImageIndex\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: SelectedImageIndex\n  nameWithType: TreeNode.SelectedImageIndex\n  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the image list index value of the image that is displayed when the tree node is in the selected state.\n  remarks: \"The SelectedImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The default value of the SelectedImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to.\"\n  example:\n  - \"The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> containing a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> containing `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \\n  \\n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_172_1.vb)]\\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_172_1.cpp)]\\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_172_1.cs)]\"\n  syntax:\n    content: public int SelectedImageIndex { get; set; }\n    return:\n      type: System.Int32\n      description: A zero-based index value that represents the image position in an <xref href=\"System.Windows.Forms.ImageList\"></xref>.\n  overload: System.Windows.Forms.TreeNode.SelectedImageIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.SelectedImageKey\n  id: SelectedImageKey\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: SelectedImageKey\n  nameWithType: TreeNode.SelectedImageKey\n  fullName: System.Windows.Forms.TreeNode.SelectedImageKey\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the key of the image displayed in the tree node when it is in a selected state.\n  remarks: The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.\n  syntax:\n    content: public string SelectedImageKey { get; set; }\n    return:\n      type: System.String\n      description: The key of the image displayed when the tree node is in a selected state.\n  overload: System.Windows.Forms.TreeNode.SelectedImageKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Serialize(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Saves the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> to the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.\n  syntax:\n    content: protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: si\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that describes the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during serialization\n  overload: System.Windows.Forms.TreeNode.Serialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.StateImageIndex\n  id: StateImageIndex\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: StateImageIndex\n  nameWithType: TreeNode.StateImageIndex\n  fullName: System.Windows.Forms.TreeNode.StateImageIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the index of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> when the parent <xref href=\"System.Windows.Forms.TreeView\"></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: \"The image index that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.  \\n  \\n If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageIndex.  \\n  \\n The StateImageIndex returns -1 when not set. The <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> property, the StateImageIndex property is automatically set to -1. Alternatively, if you set StateImageIndex, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> is automatically set to an empty string (\\\"\\\").\"\n  syntax:\n    content: public int StateImageIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The index of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  overload: System.Windows.Forms.TreeNode.StateImageIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified index is less than -1 or greater than 14.\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.StateImageKey\n  id: StateImageKey\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: StateImageKey\n  nameWithType: TreeNode.StateImageKey\n  fullName: System.Windows.Forms.TreeNode.StateImageKey\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the key of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref> when the parent <xref href=\"System.Windows.Forms.TreeView\"></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: \"The image key that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.  \\n  \\n If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageKey.  \\n  \\n The StateImageKey and <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the StateImageKey property, the <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, StateImageKey is automatically set to an empty string (\\\"\\\"). You should set the StateImageKey to an image with a corresponding index between 0 and 14. You can set the StateImageKey to an image with an index value greater than 14 (an exception will not be thrown), but the image may not be displayed\"\n  syntax:\n    content: public string StateImageKey { get; set; }\n    return:\n      type: System.String\n      description: The key of the image that is used to indicate the state of the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  overload: System.Windows.Forms.TreeNode.StateImageKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Populates a serialization information object with the data needed to serialize the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: si\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that contains the data to serialize the <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> that contains the destination information for this serialization.\n  overload: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Tag\n  id: Tag\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: TreeNode.Tag\n  fullName: System.Windows.Forms.TreeNode.Tag\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the object that contains data about the tree node.\n  remarks: \"Any <xref:System.Object> derived type can be assigned to this property. If this property is being set through the Windows Forms designer, only text can be assigned.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Windows.Forms.TreeNode.Clone%2A> method performs a shallow copy of the node. If the value of the Tag property is a reference type, both the original and cloned copy will point to the same single instance of the Tag value.\"\n  example:\n  - \"The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the Tag property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \\n  \\n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_222_1.cs)]\\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_222_1.cpp)]\\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_222_1.vb)]\"\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that contains data about the tree node. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.TreeNode.Tag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Text\n  id: Text\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TreeNode.Text\n  fullName: System.Windows.Forms.TreeNode.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text displayed in the label of the tree node.\n  remarks: \"The maximum number of characters that a <xref:System.Windows.Forms.TreeNode> can display is 259. If a <xref:System.String> that has more than 259 characters is assigned to this property, only the first 259 characters are displayed.  \\n  \\n This property cannot be set by the user if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the parent <xref:System.Windows.Forms.TreeView> is set to `false`. The alternative to explicitly setting this property is to create the tree node by using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the Text property. The label is displayed next to the <xref:System.Windows.Forms.TreeNode> image, if one is displayed.\"\n  example:\n  - \"The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \\n  \\n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_94_1.cs)]\\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_94_1.cpp)]\\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_94_1.vb)]\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text displayed in the label of the tree node.\n  overload: System.Windows.Forms.TreeNode.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.Toggle\n  id: Toggle\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: Toggle()\n  nameWithType: TreeNode.Toggle()\n  fullName: System.Windows.Forms.TreeNode.Toggle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Toggles the tree node to either the expanded or collapsed state.\n  remarks: \"The tree node is toggled to the state opposite its current state, either expanded or collapsed.  \\n  \\n> [!NOTE]\\n>  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state.\"\n  example:\n  - \"The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \\n  \\n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_28_1.cpp)]\\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_28_1.cs)]\\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_28_1.vb)]\"\n  syntax:\n    content: public void Toggle ();\n    parameters: []\n  overload: System.Windows.Forms.TreeNode.Toggle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ToolTipText\n  id: ToolTipText\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ToolTipText\n  nameWithType: TreeNode.ToolTipText\n  fullName: System.Windows.Forms.TreeNode.ToolTipText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text that appears when the mouse pointer hovers over a <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  remarks: \"You must set the <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> property of the parent <xref:System.Windows.Forms.TreeView> to `true` for the ToolTipText to be visible at run time.  \\n  \\n If the <xref:System.Windows.Forms.TreeView> control has a ToolTip and also contains a <xref:System.Windows.Forms.TreeNode> that has a <xref:System.Windows.Forms.ToolTip>, only the <xref:System.Windows.Forms.ToolTip> for the node will be shown.\"\n  example:\n  - \"The following code example demonstrates how to use the ToolTipText and <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> properties. To run this example, paste the following code into a Windows Form and call `InitializeTreeViewWithToolTips` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \\n  \\n [!code-cs[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/csharp/p-system.windows.forms.t_52_1.cs)]\\n [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/visualbasic/p-system.windows.forms.t_52_1.vb)]\"\n  syntax:\n    content: public string ToolTipText { get; set; }\n    return:\n      type: System.String\n      description: Gets the text that appears when the mouse pointer hovers over a <xref href=\"System.Windows.Forms.TreeNode\"></xref>.\n  overload: System.Windows.Forms.TreeNode.ToolTipText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.ToString\n  id: ToString\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: TreeNode.ToString()\n  fullName: System.Windows.Forms.TreeNode.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a string that represents the current object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Windows.Forms.TreeNode.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.TreeNode.TreeView\n  id: TreeView\n  parent: System.Windows.Forms.TreeNode\n  langs:\n  - csharp\n  name: TreeView\n  nameWithType: TreeNode.TreeView\n  fullName: System.Windows.Forms.TreeNode.TreeView\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the parent tree view that the tree node is assigned to.\n  remarks: ''\n  example:\n  - \"The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \\\"Previous\\\", \\\"PreviousVisible\\\", \\\"Next\\\", \\\"NextVisible\\\", \\\"First\\\", and \\\"Last\\\".  \\n  \\n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_40_1.cs)]\\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_40_1.vb)]\\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_40_1.cpp)]\"\n  syntax:\n    content: public System.Windows.Forms.TreeView TreeView { get; }\n    return:\n      type: System.Windows.Forms.TreeView\n      description: A <xref href=\"System.Windows.Forms.TreeView\"></xref> that represents the parent tree view that the tree node is assigned to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node has not been assigned to a tree view.\n  overload: System.Windows.Forms.TreeNode.TreeView*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Forms.TreeNode.#ctor\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode()\n  nameWithType: TreeNode.TreeNode()\n  fullName: System.Windows.Forms.TreeNode.TreeNode()\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode(String)\n  nameWithType: TreeNode.TreeNode(String)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode(String,TreeNode[])\n  nameWithType: TreeNode.TreeNode(String,TreeNode[])\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])\n- uid: System.Windows.Forms.TreeNode[]\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TreeNode\n  nameWithType: TreeNode\n  fullName: System.Windows.Forms.TreeNode[]\n  spec.csharp:\n  - uid: System.Windows.Forms.TreeNode\n    name: TreeNode\n    nameWithType: TreeNode\n    fullName: TreeNode[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode(String,Int32,Int32)\n  nameWithType: TreeNode.TreeNode(String,Int32,Int32)\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode(String,Int32,Int32,TreeNode[])\n  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])\n  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])\n- uid: System.Windows.Forms.TreeNode.BackColor\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: BackColor\n  nameWithType: TreeNode.BackColor\n  fullName: System.Windows.Forms.TreeNode.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.TreeNode.BeginEdit\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: BeginEdit()\n  nameWithType: TreeNode.BeginEdit()\n  fullName: System.Windows.Forms.TreeNode.BeginEdit()\n- uid: System.Windows.Forms.TreeNode.Bounds\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Bounds\n  nameWithType: TreeNode.Bounds\n  fullName: System.Windows.Forms.TreeNode.Bounds\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.TreeNode.Checked\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Checked\n  nameWithType: TreeNode.Checked\n  fullName: System.Windows.Forms.TreeNode.Checked\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.TreeNode.Clone\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Clone()\n  nameWithType: TreeNode.Clone()\n  fullName: System.Windows.Forms.TreeNode.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.TreeNode.Collapse\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Collapse()\n  nameWithType: TreeNode.Collapse()\n  fullName: System.Windows.Forms.TreeNode.Collapse()\n- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Collapse(Boolean)\n  nameWithType: TreeNode.Collapse(Boolean)\n  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)\n- uid: System.Windows.Forms.TreeNode.ContextMenu\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ContextMenu\n  nameWithType: TreeNode.ContextMenu\n  fullName: System.Windows.Forms.TreeNode.ContextMenu\n- uid: System.Windows.Forms.ContextMenu\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContextMenu\n  nameWithType: ContextMenu\n  fullName: System.Windows.Forms.ContextMenu\n- uid: System.Windows.Forms.TreeNode.ContextMenuStrip\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: TreeNode.ContextMenuStrip\n  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip\n- uid: System.Windows.Forms.ContextMenuStrip\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: ContextMenuStrip\n  fullName: System.Windows.Forms.ContextMenuStrip\n- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Deserialize(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)\n- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: EndEdit(Boolean)\n  nameWithType: TreeNode.EndEdit(Boolean)\n  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)\n- uid: System.Windows.Forms.TreeNode.EnsureVisible\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: EnsureVisible()\n  nameWithType: TreeNode.EnsureVisible()\n  fullName: System.Windows.Forms.TreeNode.EnsureVisible()\n- uid: System.Windows.Forms.TreeNode.Expand\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Expand()\n  nameWithType: TreeNode.Expand()\n  fullName: System.Windows.Forms.TreeNode.Expand()\n- uid: System.Windows.Forms.TreeNode.ExpandAll\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ExpandAll()\n  nameWithType: TreeNode.ExpandAll()\n  fullName: System.Windows.Forms.TreeNode.ExpandAll()\n- uid: System.Windows.Forms.TreeNode.FirstNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FirstNode\n  nameWithType: TreeNode.FirstNode\n  fullName: System.Windows.Forms.TreeNode.FirstNode\n- uid: System.Windows.Forms.TreeNode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TreeNode\n  nameWithType: TreeNode\n  fullName: System.Windows.Forms.TreeNode\n- uid: System.Windows.Forms.TreeNode.ForeColor\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ForeColor\n  nameWithType: TreeNode.ForeColor\n  fullName: System.Windows.Forms.TreeNode.ForeColor\n- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FromHandle(TreeView,IntPtr)\n  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)\n  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)\n- uid: System.Windows.Forms.TreeView\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TreeView\n  nameWithType: TreeView\n  fullName: System.Windows.Forms.TreeView\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Forms.TreeNode.FullPath\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FullPath\n  nameWithType: TreeNode.FullPath\n  fullName: System.Windows.Forms.TreeNode.FullPath\n- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: GetNodeCount(Boolean)\n  nameWithType: TreeNode.GetNodeCount(Boolean)\n  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)\n- uid: System.Windows.Forms.TreeNode.Handle\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Handle\n  nameWithType: TreeNode.Handle\n  fullName: System.Windows.Forms.TreeNode.Handle\n- uid: System.Windows.Forms.TreeNode.ImageIndex\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ImageIndex\n  nameWithType: TreeNode.ImageIndex\n  fullName: System.Windows.Forms.TreeNode.ImageIndex\n- uid: System.Windows.Forms.TreeNode.ImageKey\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ImageKey\n  nameWithType: TreeNode.ImageKey\n  fullName: System.Windows.Forms.TreeNode.ImageKey\n- uid: System.Windows.Forms.TreeNode.Index\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Index\n  nameWithType: TreeNode.Index\n  fullName: System.Windows.Forms.TreeNode.Index\n- uid: System.Windows.Forms.TreeNode.IsEditing\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsEditing\n  nameWithType: TreeNode.IsEditing\n  fullName: System.Windows.Forms.TreeNode.IsEditing\n- uid: System.Windows.Forms.TreeNode.IsExpanded\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsExpanded\n  nameWithType: TreeNode.IsExpanded\n  fullName: System.Windows.Forms.TreeNode.IsExpanded\n- uid: System.Windows.Forms.TreeNode.IsSelected\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsSelected\n  nameWithType: TreeNode.IsSelected\n  fullName: System.Windows.Forms.TreeNode.IsSelected\n- uid: System.Windows.Forms.TreeNode.IsVisible\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsVisible\n  nameWithType: TreeNode.IsVisible\n  fullName: System.Windows.Forms.TreeNode.IsVisible\n- uid: System.Windows.Forms.TreeNode.LastNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: LastNode\n  nameWithType: TreeNode.LastNode\n  fullName: System.Windows.Forms.TreeNode.LastNode\n- uid: System.Windows.Forms.TreeNode.Level\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Level\n  nameWithType: TreeNode.Level\n  fullName: System.Windows.Forms.TreeNode.Level\n- uid: System.Windows.Forms.TreeNode.Name\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Name\n  nameWithType: TreeNode.Name\n  fullName: System.Windows.Forms.TreeNode.Name\n- uid: System.Windows.Forms.TreeNode.NextNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NextNode\n  nameWithType: TreeNode.NextNode\n  fullName: System.Windows.Forms.TreeNode.NextNode\n- uid: System.Windows.Forms.TreeNode.NextVisibleNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NextVisibleNode\n  nameWithType: TreeNode.NextVisibleNode\n  fullName: System.Windows.Forms.TreeNode.NextVisibleNode\n- uid: System.Windows.Forms.TreeNode.NodeFont\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NodeFont\n  nameWithType: TreeNode.NodeFont\n  fullName: System.Windows.Forms.TreeNode.NodeFont\n- uid: System.Drawing.Font\n  parent: System.Drawing\n  isExternal: false\n  name: Font\n  nameWithType: Font\n  fullName: System.Drawing.Font\n- uid: System.Windows.Forms.TreeNode.Nodes\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Nodes\n  nameWithType: TreeNode.Nodes\n  fullName: System.Windows.Forms.TreeNode.Nodes\n- uid: System.Windows.Forms.TreeNodeCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TreeNodeCollection\n  nameWithType: TreeNodeCollection\n  fullName: System.Windows.Forms.TreeNodeCollection\n- uid: System.Windows.Forms.TreeNode.Parent\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Parent\n  nameWithType: TreeNode.Parent\n  fullName: System.Windows.Forms.TreeNode.Parent\n- uid: System.Windows.Forms.TreeNode.PrevNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: PrevNode\n  nameWithType: TreeNode.PrevNode\n  fullName: System.Windows.Forms.TreeNode.PrevNode\n- uid: System.Windows.Forms.TreeNode.PrevVisibleNode\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: PrevVisibleNode\n  nameWithType: TreeNode.PrevVisibleNode\n  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode\n- uid: System.Windows.Forms.TreeNode.Remove\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Remove()\n  nameWithType: TreeNode.Remove()\n  fullName: System.Windows.Forms.TreeNode.Remove()\n- uid: System.Windows.Forms.TreeNode.SelectedImageIndex\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: SelectedImageIndex\n  nameWithType: TreeNode.SelectedImageIndex\n  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex\n- uid: System.Windows.Forms.TreeNode.SelectedImageKey\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: SelectedImageKey\n  nameWithType: TreeNode.SelectedImageKey\n  fullName: System.Windows.Forms.TreeNode.SelectedImageKey\n- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Serialize(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)\n- uid: System.Windows.Forms.TreeNode.StateImageIndex\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: StateImageIndex\n  nameWithType: TreeNode.StateImageIndex\n  fullName: System.Windows.Forms.TreeNode.StateImageIndex\n- uid: System.Windows.Forms.TreeNode.StateImageKey\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: StateImageKey\n  nameWithType: TreeNode.StateImageKey\n  fullName: System.Windows.Forms.TreeNode.StateImageKey\n- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Windows.Forms.TreeNode.Tag\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Tag\n  nameWithType: TreeNode.Tag\n  fullName: System.Windows.Forms.TreeNode.Tag\n- uid: System.Windows.Forms.TreeNode.Text\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Text\n  nameWithType: TreeNode.Text\n  fullName: System.Windows.Forms.TreeNode.Text\n- uid: System.Windows.Forms.TreeNode.Toggle\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Toggle()\n  nameWithType: TreeNode.Toggle()\n  fullName: System.Windows.Forms.TreeNode.Toggle()\n- uid: System.Windows.Forms.TreeNode.ToolTipText\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ToolTipText\n  nameWithType: TreeNode.ToolTipText\n  fullName: System.Windows.Forms.TreeNode.ToolTipText\n- uid: System.Windows.Forms.TreeNode.ToString\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ToString()\n  nameWithType: TreeNode.ToString()\n  fullName: System.Windows.Forms.TreeNode.ToString()\n- uid: System.Windows.Forms.TreeNode.TreeView\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeView\n  nameWithType: TreeNode.TreeView\n  fullName: System.Windows.Forms.TreeNode.TreeView\n- uid: System.Windows.Forms.TreeNode.#ctor*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeNode\n  nameWithType: TreeNode.TreeNode\n- uid: System.Windows.Forms.TreeNode.BackColor*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: BackColor\n  nameWithType: TreeNode.BackColor\n- uid: System.Windows.Forms.TreeNode.BeginEdit*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: BeginEdit\n  nameWithType: TreeNode.BeginEdit\n- uid: System.Windows.Forms.TreeNode.Bounds*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Bounds\n  nameWithType: TreeNode.Bounds\n- uid: System.Windows.Forms.TreeNode.Checked*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Checked\n  nameWithType: TreeNode.Checked\n- uid: System.Windows.Forms.TreeNode.Clone*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Clone\n  nameWithType: TreeNode.Clone\n- uid: System.Windows.Forms.TreeNode.Collapse*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Collapse\n  nameWithType: TreeNode.Collapse\n- uid: System.Windows.Forms.TreeNode.ContextMenu*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ContextMenu\n  nameWithType: TreeNode.ContextMenu\n- uid: System.Windows.Forms.TreeNode.ContextMenuStrip*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: TreeNode.ContextMenuStrip\n- uid: System.Windows.Forms.TreeNode.Deserialize*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Deserialize\n  nameWithType: TreeNode.Deserialize\n- uid: System.Windows.Forms.TreeNode.EndEdit*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: EndEdit\n  nameWithType: TreeNode.EndEdit\n- uid: System.Windows.Forms.TreeNode.EnsureVisible*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: EnsureVisible\n  nameWithType: TreeNode.EnsureVisible\n- uid: System.Windows.Forms.TreeNode.Expand*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Expand\n  nameWithType: TreeNode.Expand\n- uid: System.Windows.Forms.TreeNode.ExpandAll*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ExpandAll\n  nameWithType: TreeNode.ExpandAll\n- uid: System.Windows.Forms.TreeNode.FirstNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FirstNode\n  nameWithType: TreeNode.FirstNode\n- uid: System.Windows.Forms.TreeNode.ForeColor*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ForeColor\n  nameWithType: TreeNode.ForeColor\n- uid: System.Windows.Forms.TreeNode.FromHandle*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FromHandle\n  nameWithType: TreeNode.FromHandle\n- uid: System.Windows.Forms.TreeNode.FullPath*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: FullPath\n  nameWithType: TreeNode.FullPath\n- uid: System.Windows.Forms.TreeNode.GetNodeCount*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: GetNodeCount\n  nameWithType: TreeNode.GetNodeCount\n- uid: System.Windows.Forms.TreeNode.Handle*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Handle\n  nameWithType: TreeNode.Handle\n- uid: System.Windows.Forms.TreeNode.ImageIndex*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ImageIndex\n  nameWithType: TreeNode.ImageIndex\n- uid: System.Windows.Forms.TreeNode.ImageKey*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ImageKey\n  nameWithType: TreeNode.ImageKey\n- uid: System.Windows.Forms.TreeNode.Index*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Index\n  nameWithType: TreeNode.Index\n- uid: System.Windows.Forms.TreeNode.IsEditing*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsEditing\n  nameWithType: TreeNode.IsEditing\n- uid: System.Windows.Forms.TreeNode.IsExpanded*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsExpanded\n  nameWithType: TreeNode.IsExpanded\n- uid: System.Windows.Forms.TreeNode.IsSelected*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsSelected\n  nameWithType: TreeNode.IsSelected\n- uid: System.Windows.Forms.TreeNode.IsVisible*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: IsVisible\n  nameWithType: TreeNode.IsVisible\n- uid: System.Windows.Forms.TreeNode.LastNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: LastNode\n  nameWithType: TreeNode.LastNode\n- uid: System.Windows.Forms.TreeNode.Level*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Level\n  nameWithType: TreeNode.Level\n- uid: System.Windows.Forms.TreeNode.Name*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Name\n  nameWithType: TreeNode.Name\n- uid: System.Windows.Forms.TreeNode.NextNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NextNode\n  nameWithType: TreeNode.NextNode\n- uid: System.Windows.Forms.TreeNode.NextVisibleNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NextVisibleNode\n  nameWithType: TreeNode.NextVisibleNode\n- uid: System.Windows.Forms.TreeNode.NodeFont*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: NodeFont\n  nameWithType: TreeNode.NodeFont\n- uid: System.Windows.Forms.TreeNode.Nodes*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Nodes\n  nameWithType: TreeNode.Nodes\n- uid: System.Windows.Forms.TreeNode.Parent*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Parent\n  nameWithType: TreeNode.Parent\n- uid: System.Windows.Forms.TreeNode.PrevNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: PrevNode\n  nameWithType: TreeNode.PrevNode\n- uid: System.Windows.Forms.TreeNode.PrevVisibleNode*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: PrevVisibleNode\n  nameWithType: TreeNode.PrevVisibleNode\n- uid: System.Windows.Forms.TreeNode.Remove*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Remove\n  nameWithType: TreeNode.Remove\n- uid: System.Windows.Forms.TreeNode.SelectedImageIndex*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: SelectedImageIndex\n  nameWithType: TreeNode.SelectedImageIndex\n- uid: System.Windows.Forms.TreeNode.SelectedImageKey*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: SelectedImageKey\n  nameWithType: TreeNode.SelectedImageKey\n- uid: System.Windows.Forms.TreeNode.Serialize*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Serialize\n  nameWithType: TreeNode.Serialize\n- uid: System.Windows.Forms.TreeNode.StateImageIndex*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: StateImageIndex\n  nameWithType: TreeNode.StateImageIndex\n- uid: System.Windows.Forms.TreeNode.StateImageKey*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: StateImageKey\n  nameWithType: TreeNode.StateImageKey\n- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData\n- uid: System.Windows.Forms.TreeNode.Tag*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Tag\n  nameWithType: TreeNode.Tag\n- uid: System.Windows.Forms.TreeNode.Text*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Text\n  nameWithType: TreeNode.Text\n- uid: System.Windows.Forms.TreeNode.Toggle*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: Toggle\n  nameWithType: TreeNode.Toggle\n- uid: System.Windows.Forms.TreeNode.ToolTipText*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ToolTipText\n  nameWithType: TreeNode.ToolTipText\n- uid: System.Windows.Forms.TreeNode.ToString*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: ToString\n  nameWithType: TreeNode.ToString\n- uid: System.Windows.Forms.TreeNode.TreeView*\n  parent: System.Windows.Forms.TreeNode\n  isExternal: false\n  name: TreeView\n  nameWithType: TreeNode.TreeView\n"}