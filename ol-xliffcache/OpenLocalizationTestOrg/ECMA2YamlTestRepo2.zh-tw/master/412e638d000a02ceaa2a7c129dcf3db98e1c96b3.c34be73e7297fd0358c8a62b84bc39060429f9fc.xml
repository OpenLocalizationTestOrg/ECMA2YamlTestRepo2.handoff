{"nodes":[{"pos":[664,787],"content":"Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.","pos":[0,123]}]},{"pos":[4506,4609],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WmiWebEventProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WmiWebEventProvider\"></xref> class."},{"pos":[4621,4913],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.","pos":[0,292],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to create an instance of the &lt;xref:System.Web.Management.TraceWebEventProvider&gt; class, but you can call this constructor when you implement your own provider type that inherits from this class.","pos":[77,292],"source":" You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class."}]}]},{"pos":[5439,5485],"content":"Removes all events from the provider's buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all events from the provider's buffer.","pos":[0,46]}]},{"pos":[5497,5839],"content":"When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action. Calling this method when the buffering mechanism is not enabled has no effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action. Calling this method when the buffering mechanism is not enabled has no effect.","pos":[0,342],"nodes":[{"content":"When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.","pos":[0,191]},{"content":"The time of the last write is reset to the time of the flushing action.","pos":[192,263]},{"content":"Calling this method when the buffering mechanism is not enabled has no effect.","pos":[264,342]}]}]},{"pos":[6600,6640],"content":"Sets the initial values for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the initial values for this object.","pos":[0,40]}]},{"pos":[6652,6951],"content":"ASP.NET calls the Initialize method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"ASP.NET calls the Initialize method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.","pos":[0,299],"nodes":[{"content":"ASP.NET calls the Initialize method after calling the &lt;xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A&gt; constructor.","pos":[0,126],"source":"ASP.NET calls the Initialize method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor."},{"content":"This method is called to initialize the &lt;xref:System.Web.Management.WmiWebEventProvider&gt; class with the configuration settings and name specified in the configuration file.","pos":[127,299],"source":" This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file."}]}]},{"pos":[7157,7223],"content":"The name used in the configuration file to identify this provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name used in the configuration file to identify this provider.","pos":[0,66]}]},{"pos":[7323,7487],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the attributes assigned for this provider in the configuration file.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that specifies the attributes assigned for this provider in the configuration file."},{"pos":[8088,8131],"content":"Processes the event passed to the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes the event passed to the provider.","pos":[0,43]}]},{"pos":[8143,8236],"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","pos":[0,93]}]},{"pos":[8448,8526],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebBaseEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process."},{"pos":[8703,8733],"content":"The event could not be raised.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event could not be raised.","pos":[0,30]}]},{"pos":[9123,9181],"content":"Performs tasks associated with shutting down the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs tasks associated with shutting down the provider.","pos":[0,58]}]},{"pos":[9193,9443],"content":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.","needQuote":true,"needEscape":true,"nodes":[{"content":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.","pos":[0,250],"nodes":[{"content":"ASP.NET calls the &lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt; method when the application domain that hosts the Web application terminates.","pos":[0,161],"source":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates."},{"content":"The method is called to perform tasks that will allow the application to end gracefully.","pos":[162,250]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WmiWebEventProvider\n  id: WmiWebEventProvider\n  children:\n  - System.Web.Management.WmiWebEventProvider.#ctor\n  - System.Web.Management.WmiWebEventProvider.Flush\n  - System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WmiWebEventProvider.Shutdown\n  langs:\n  - csharp\n  name: WmiWebEventProvider\n  nameWithType: WmiWebEventProvider\n  fullName: System.Web.Management.WmiWebEventProvider\n  type: Class\n  summary: Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n ASP.NET uses this class to map health-monitoring events to WMI events. To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the WmiWebEventProvider class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.  \\n  \\n The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the WmiWebEventProvider class and mapped into WMI events. The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\\\\Microsoft.NET\\\\Framework\\\\\\\\*BuildNumber*. For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/en-us/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.  \\n  \\n> [!NOTE]\\n>  The WmiWebEventProvider class and the health event types to monitor are already configured by default. The only thing you need to do is to define the rule for all the health events. Remember that the health events are not dispatched to the WmiWebEventProvider provider by default.  \\n  \\n [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._2_1.vb)]\\n [!code-cs[System.Web.Management.WmiWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._2_1.cs)]  \\n  \\n The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the WmiWebEventProvider provider to process all health-monitoring events.  \\n  \\n```  \\n<healthMonitoring>  \\n  <rules>  \\n    <add   \\n      name=\\\"Using Wmi\\\"  \\n      eventName=\\\"All Events\\\"   \\n      provider=\\\"WmiWebEventProvider\\\"   \\n      profile=\\\"Critical\\\"/>  \\n  </rules>  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public class WmiWebEventProvider : System.Web.Management.WebEventProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Management.WebEventProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  platform:\n  - net462\n- uid: System.Web.Management.WmiWebEventProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.Management.WmiWebEventProvider\n  langs:\n  - csharp\n  name: WmiWebEventProvider()\n  nameWithType: WmiWebEventProvider.WmiWebEventProvider()\n  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WmiWebEventProvider\"></xref> class.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.\n  syntax:\n    content: public WmiWebEventProvider ();\n    parameters: []\n  overload: System.Web.Management.WmiWebEventProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WmiWebEventProvider.Flush\n  id: Flush\n  parent: System.Web.Management.WmiWebEventProvider\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: WmiWebEventProvider.Flush()\n  fullName: System.Web.Management.WmiWebEventProvider.Flush()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Removes all events from the provider's buffer.\n  remarks: When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action. Calling this method when the buffering mechanism is not enabled has no effect.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Web.Management.WmiWebEventProvider.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.WmiWebEventProvider\n  langs:\n  - csharp\n  name: Initialize(String,NameValueCollection)\n  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Sets the initial values for this object.\n  remarks: ASP.NET calls the Initialize method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used in the configuration file to identify this provider.\n    - id: config\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that specifies the attributes assigned for this provider in the configuration file.\n  overload: System.Web.Management.WmiWebEventProvider.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  id: ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.WmiWebEventProvider\n  langs:\n  - csharp\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Processes the event passed to the provider.\n  remarks: This is the method that ASP.NET health monitoring calls to start the processing of the event.\n  syntax:\n    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);\n    parameters:\n    - id: eventRaised\n      type: System.Web.Management.WebBaseEvent\n      description: The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process.\n  overload: System.Web.Management.WmiWebEventProvider.ProcessEvent*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The event could not be raised.\n  platform:\n  - net462\n- uid: System.Web.Management.WmiWebEventProvider.Shutdown\n  id: Shutdown\n  parent: System.Web.Management.WmiWebEventProvider\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: WmiWebEventProvider.Shutdown()\n  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Performs tasks associated with shutting down the provider.\n  remarks: ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.\n  syntax:\n    content: public override void Shutdown ();\n    parameters: []\n  overload: System.Web.Management.WmiWebEventProvider.Shutdown*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.WebEventProvider\n  isExternal: false\n  name: System.Web.Management.WebEventProvider\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.Management.WmiWebEventProvider.#ctor\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: WmiWebEventProvider()\n  nameWithType: WmiWebEventProvider.WmiWebEventProvider()\n  fullName: System.Web.Management.WmiWebEventProvider.WmiWebEventProvider()\n- uid: System.Web.Management.WmiWebEventProvider.Flush\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Flush()\n  nameWithType: WmiWebEventProvider.Flush()\n  fullName: System.Web.Management.WmiWebEventProvider.Flush()\n- uid: System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Initialize(String,NameValueCollection)\n  nameWithType: WmiWebEventProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Management.WmiWebEventProvider.Initialize(String,NameValueCollection)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: WmiWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: System.Web.Management.WmiWebEventProvider.ProcessEvent(WebBaseEvent)\n- uid: System.Web.Management.WebBaseEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebBaseEvent\n  nameWithType: WebBaseEvent\n  fullName: System.Web.Management.WebBaseEvent\n- uid: System.Web.Management.WmiWebEventProvider.Shutdown\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Shutdown()\n  nameWithType: WmiWebEventProvider.Shutdown()\n  fullName: System.Web.Management.WmiWebEventProvider.Shutdown()\n- uid: System.Web.Management.WmiWebEventProvider.#ctor*\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: WmiWebEventProvider\n  nameWithType: WmiWebEventProvider.WmiWebEventProvider\n- uid: System.Web.Management.WmiWebEventProvider.Flush*\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Flush\n  nameWithType: WmiWebEventProvider.Flush\n- uid: System.Web.Management.WmiWebEventProvider.Initialize*\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: WmiWebEventProvider.Initialize\n- uid: System.Web.Management.WmiWebEventProvider.ProcessEvent*\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: ProcessEvent\n  nameWithType: WmiWebEventProvider.ProcessEvent\n- uid: System.Web.Management.WmiWebEventProvider.Shutdown*\n  parent: System.Web.Management.WmiWebEventProvider\n  isExternal: false\n  name: Shutdown\n  nameWithType: WmiWebEventProvider.Shutdown\n"}