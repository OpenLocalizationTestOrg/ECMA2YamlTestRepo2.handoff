{"nodes":[{"pos":[2911,3005],"content":"Manages storage of membership information for an ASP.NET application in a SQL Server database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages storage of membership information for an ASP.NET application in a SQL Server database.","pos":[0,94]}]},{"pos":[7142,7245],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.SqlMembershipProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> class."},{"pos":[7257,7514],"content":"The SqlMembershipProvider constructor is called by ASP.NET to create an instance of the <xref:System.Web.Security.SqlMembershipProvider> class as specified in the configuration for the application. This constructor is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SqlMembershipProvider constructor is called by ASP.NET to create an instance of the <xref:System.Web.Security.SqlMembershipProvider> class as specified in the configuration for the application. This constructor is not intended to be used from your code.","pos":[0,257],"nodes":[{"content":"The SqlMembershipProvider constructor is called by ASP.NET to create an instance of the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; class as specified in the configuration for the application.","pos":[0,197],"source":"The SqlMembershipProvider constructor is called by ASP.NET to create an instance of the <xref:System.Web.Security.SqlMembershipProvider> class as specified in the configuration for the application."},{"content":"This constructor is not intended to be used from your code.","pos":[198,257]}]}]},{"pos":[8088,8178],"content":"Gets or sets the name of the application to store and retrieve membership information for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the application to store and retrieve membership information for.","pos":[0,90]}]},{"pos":[8191,9884],"content":"The ApplicationName is used by the <xref:System.Web.Security.SqlMembershipProvider> to group user information. By qualifying user information with an application name, you can store information for multiple applications in a single database without running into conflicts between duplicate user names. Also, multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property. The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application with the `applicationName` attribute.       If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value for the first request made to the application is used.      > [!CAUTION] >  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code to allow users to set the ApplicationName property unless you must. An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ApplicationName is used by the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; to group user information.","pos":[0,110],"source":"The ApplicationName is used by the <xref:System.Web.Security.SqlMembershipProvider> to group user information."},{"content":"By qualifying user information with an application name, you can store information for multiple applications in a single database without running into conflicts between duplicate user names.","pos":[111,301]},{"content":"Also, multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property.","pos":[302,430]},{"content":"The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application with the <ph id=\"ph1\">`applicationName`</ph> attribute.","pos":[431,607],"source":" The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application with the `applicationName` attribute."},{"content":"If a value is not specified for the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file for the Web application, then the &lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt; property value for the first request made to the application is used.","pos":[614,856],"source":"       If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value for the first request made to the application is used."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Because a single default membership provider instance is used for all of the requests served by an &lt;xref:System.Web.HttpApplication&gt; object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value.","pos":[862,1130],"source":"      > [!CAUTION] >  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value."},{"content":"The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application.","pos":[1131,1319]},{"content":"We recommend that you avoid writing code to allow users to set the ApplicationName property unless you must.","pos":[1320,1428]},{"content":"An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications.","pos":[1429,1605]},{"content":"Such an application should be a single-user application and not a Web application.","pos":[1606,1688]}]},{"pos":[10795,11009],"content":"The name of the application to store and retrieve membership information for. The default is the <xref:System.Web.HttpRequest.ApplicationPath*> property value for the current <xref:System.Web.HttpContext.Request*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the application to store and retrieve membership information for.","pos":[0,77]},{"content":"The default is the &lt;xref:System.Web.HttpRequest.ApplicationPath<bpt id=\"p1\">*</bpt>&gt; property value for the current &lt;xref:System.Web.HttpContext.Request<ept id=\"p1\">*</ept>&gt;.","pos":[78,214],"source":" The default is the <xref:System.Web.HttpRequest.ApplicationPath*> property value for the current <xref:System.Web.HttpContext.Request*>."}]},{"pos":[11189,11328],"content":"An attempt was made to set the ApplicationName property to an empty string or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to set the ApplicationName property to an empty string or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11469,11572],"content":"An attempt was made to set the ApplicationName property to a string that is longer than 256 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to set the ApplicationName property to a string that is longer than 256 characters.","pos":[0,103]}]},{"pos":[12138,12165],"content":"Modifies a user's password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifies a user's password.","pos":[0,27]}]},{"pos":[12178,13920],"content":"This method is called by the <xref:System.Web.Security.Membership> class to update the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       The maximum password length is 128 characters.       If an incorrect password is supplied to the ChangePassword method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       You can call the ChangePassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The <xref:System.Web.Security.Membership.Provider%2A> property exposes the `defaultProvider` specified in the Web.config file for the application. Configured providers that are not the default provider referenced using the <xref:System.Web.Security.Membership.Providers%2A> property.       You can also change user passwords by using the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to update the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,205],"source":"This method is called by the <xref:System.Web.Security.Membership> class to update the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"The maximum password length is 128 characters.","pos":[212,258]},{"content":"If an incorrect password is supplied to the ChangePassword method, the internal counter that tracks invalid password attempts is incremented by one.","pos":[265,413]},{"content":"This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the &lt;xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A&gt; method.","pos":[414,600],"source":" This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method."},{"content":"If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero.","pos":[601,781]},{"content":"For more information, see the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt; properties.","pos":[782,980],"source":" For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties."},{"content":"You can call the ChangePassword method directly by first obtaining a reference to the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance through the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property of the &lt;xref:System.Web.Security.Membership&gt; class.","pos":[987,1253],"source":"       You can call the ChangePassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class."},{"content":"The &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property exposes the <ph id=\"ph1\">`defaultProvider`</ph> specified in the Web.config file for the application.","pos":[1254,1400],"source":" The <xref:System.Web.Security.Membership.Provider%2A> property exposes the `defaultProvider` specified in the Web.config file for the application."},{"content":"Configured providers that are not the default provider referenced using the &lt;xref:System.Web.Security.Membership.Providers%2A&gt; property.","pos":[1401,1537],"source":" Configured providers that are not the default provider referenced using the <xref:System.Web.Security.Membership.Providers%2A> property."},{"content":"You can also change user passwords by using the &lt;xref:System.Web.Security.MembershipUser.ChangePassword%2A&gt; method.","pos":[1544,1659],"source":"       You can also change user passwords by using the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1666,1732]}]},{"pos":[15235,15271],"content":"The user to update the password for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user to update the password for.","pos":[0,36]}]},{"pos":[15339,15383],"content":"The current password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current password for the specified user.","pos":[0,44]}]},{"pos":[15451,15491],"content":"The new password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password for the specified user.","pos":[0,40]}]},{"pos":[15550,15824],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the password was updated successfully. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the password was updated successfully.","pos":[0,102],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the password was updated successfully."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.","pos":[103,274],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database."}]},{"pos":[17984,18036],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> was not found in the database.","needQuote":true,"needEscape":true,"source":"<code>username</code> was not found in the database."},{"pos":[18177,18248],"content":"An error occurred while setting the new password value at the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while setting the new password value at the database.","pos":[0,71]}]},{"pos":[18327,18359],"content":"An unhandled exception occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unhandled exception occurred.","pos":[0,32]}]},{"pos":[19059,19149],"content":"Updates the password question and answer for a user in the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the password question and answer for a user in the SQL Server membership database.","pos":[0,90]}]},{"pos":[19162,21126],"content":"This method is called by the <xref:System.Web.Security.MembershipUser> class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config). The password answer is encrypted using the format that is specified in the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property.       Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. The ChangePasswordQuestionAndAnswer method updates the password question and answer for a membership user.       If an incorrect password is supplied to the ChangePasswordQuestionAndAnswer method, the internal counters that track invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by calling the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       The maximum length for the password question is 256 characters. The maximum length for the password answer is 128 characters.       For more information, see <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>, and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Web.Security.MembershipUser> class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config). The password answer is encrypted using the format that is specified in the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property.       Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. The ChangePasswordQuestionAndAnswer method updates the password question and answer for a membership user.       If an incorrect password is supplied to the ChangePasswordQuestionAndAnswer method, the internal counters that track invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by calling the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       The maximum length for the password question is 256 characters. The maximum length for the password answer is 128 characters.       For more information, see <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>, and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.       Leading and trailing spaces are trimmed from all parameter values.","pos":[0,1954],"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.MembershipUser&gt; class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config).","pos":[0,237],"source":"This method is called by the <xref:System.Web.Security.MembershipUser> class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config)."},{"content":"The password answer is encrypted using the format that is specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property.","pos":[238,389],"source":" The password answer is encrypted using the format that is specified in the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property."},{"content":"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password.","pos":[396,525]},{"content":"When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password.","pos":[526,658]},{"content":"The ChangePasswordQuestionAndAnswer method updates the password question and answer for a membership user.","pos":[659,765]},{"content":"If an incorrect password is supplied to the ChangePasswordQuestionAndAnswer method, the internal counters that track invalid password attempts is incremented by one.","pos":[772,937]},{"content":"This can result in the user being locked out and unable to log on until the lock status is cleared by calling the &lt;xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A&gt; method.","pos":[938,1122],"source":" This can result in the user being locked out and unable to log on until the lock status is cleared by calling the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method."},{"content":"If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero.","pos":[1123,1303]},{"content":"For more information, see the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt; properties.","pos":[1304,1502],"source":" For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties."},{"content":"The maximum length for the password question is 256 characters.","pos":[1509,1572]},{"content":"The maximum length for the password answer is 128 characters.","pos":[1573,1634]},{"content":"For more information, see &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A&gt;, &lt;xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A&gt;, and &lt;xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A&gt;.","pos":[1641,1881],"source":"       For more information, see <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>, and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1888,1954]}]}]},{"pos":[22498,22554],"content":"The user to change the password question and answer for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user to change the password question and answer for.","pos":[0,56]}]},{"pos":[22619,22655],"content":"The password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user.","pos":[0,36]}]},{"pos":[22731,22780],"content":"The new password question for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password question for the specified user.","pos":[0,49]}]},{"pos":[22854,22901],"content":"The new password answer for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password answer for the specified user.","pos":[0,47]}]},{"pos":[22960,23327],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the update was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the <code>password</code> is incorrect, the user is locked out, or the user does not exist in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the update was successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the update was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is also returned if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">password</ph><ept id=\"p2\">&lt;/code&gt;</ept> is incorrect, the user is locked out, or the user does not exist in the database.","pos":[166,367],"source":" A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the <code>password</code> is incorrect, the user is locked out, or the user does not exist in the database."}]},{"pos":[25067,25148],"content":"An error occurred when changing the password question and answer in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when changing the password question and answer in the database.","pos":[0,81]}]},{"pos":[26052,26106],"content":"Adds a new user to the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new user to the SQL Server membership database.","pos":[0,54]}]},{"pos":[26119,29123],"content":"This method is called by the <xref:System.Web.Security.Membership> class to create a new user in the SQL Server database specified in the ASP.NET application's configuration file.       New users are identified with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true`, and `null` or an empty string (\"\") is specified for the `email` parameter, the user creation will fail. The user creation will also fail if the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true` and the value specified for the `email` parameter is a duplicate of the e-mail address for an existing user in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       The maximum length for the user name is 256 characters. The maximum length for the e-mail address is 256 characters. The maximum length for the password in clear text or after it has been hashed or encrypted is 128 characters.       Other conditions that will cause user creation to fail:      -   The `password` parameter is `null`, or an empty string after trimming.      -   The length of the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.      -   The number of non-alphabetic characters in the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property.      -   The `password` parameter does not pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property.      -   Custom password-validation code canceled user creation during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.      -   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the `passwordAnswer` parameter is either `null` or an empty string after trimming.      -   The `passwordAnswer` parameter is an empty string.      -   The `passwordAnswer` parameter is longer than 128 characters.      -   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the password question is either `null` or an empty string after trimming.      -   The `passwordQuestion` parameter is an empty string.      -   The `passwordQuestion` parameter is longer than 256 characters.      -   The `providerUserKey` parameter set to an object of a type other than <xref:System.Guid?displayProperty=fullName>.      -   The `providerUserKey` parameter is a duplicate of an existing user key.      -   The `username` parameter is a duplicate of an existing user name.       Leading and trailing spaces are trimmed from all string parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to create a new user in the SQL Server database specified in the ASP.NET application's configuration file.","pos":[0,179],"source":"This method is called by the <xref:System.Web.Security.Membership> class to create a new user in the SQL Server database specified in the ASP.NET application's configuration file."},{"content":"New users are identified with the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[186,299],"source":"       New users are identified with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, and <ph id=\"ph2\">`null`</ph> or an empty string (\"\") is specified for the <ph id=\"ph3\">`email`</ph> parameter, the user creation will fail.","pos":[306,515],"source":"       If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true`, and `null` or an empty string (\"\") is specified for the `email` parameter, the user creation will fail."},{"content":"The user creation will also fail if the &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and the value specified for the <ph id=\"ph2\">`email`</ph> parameter is a duplicate of the e-mail address for an existing user in the database for the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[516,865],"source":" The user creation will also fail if the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true` and the value specified for the `email` parameter is a duplicate of the e-mail address for an existing user in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"The maximum length for the user name is 256 characters.","pos":[872,927]},{"content":"The maximum length for the e-mail address is 256 characters.","pos":[928,988]},{"content":"The maximum length for the password in clear text or after it has been hashed or encrypted is 128 characters.","pos":[989,1098]},{"content":"Other conditions that will cause user creation to fail:      -   The <ph id=\"ph1\">`password`</ph> parameter is <ph id=\"ph2\">`null`</ph>, or an empty string after trimming.","pos":[1105,1240],"source":"       Other conditions that will cause user creation to fail:      -   The `password` parameter is `null`, or an empty string after trimming."},{"content":"-   The length of the <ph id=\"ph1\">`password`</ph> parameter is less than the value specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; property.","pos":[1246,1416],"source":"      -   The length of the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property."},{"content":"-   The number of non-alphabetic characters in the <ph id=\"ph1\">`password`</ph> parameter is less than the value specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt; property.","pos":[1422,1632],"source":"      -   The number of non-alphabetic characters in the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property."},{"content":"-   The <ph id=\"ph1\">`password`</ph> parameter does not pass the regular expression in the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A&gt; property.","pos":[1638,1806],"source":"      -   The `password` parameter does not pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property."},{"content":"-   Custom password-validation code canceled user creation during the &lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt; event.","pos":[1812,1953],"source":"      -   Custom password-validation code canceled user creation during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event."},{"content":"-   The &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A&gt; property is <ph id=\"ph1\">`true`</ph> and the <ph id=\"ph2\">`passwordAnswer`</ph> parameter is either <ph id=\"ph3\">`null`</ph> or an empty string after trimming.","pos":[1959,2150],"source":"      -   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the `passwordAnswer` parameter is either `null` or an empty string after trimming."},{"content":"-   The <ph id=\"ph1\">`passwordAnswer`</ph> parameter is an empty string.","pos":[2156,2210],"source":"      -   The `passwordAnswer` parameter is an empty string."},{"content":"-   The <ph id=\"ph1\">`passwordAnswer`</ph> parameter is longer than 128 characters.","pos":[2216,2281],"source":"      -   The `passwordAnswer` parameter is longer than 128 characters."},{"content":"-   The &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A&gt; property is <ph id=\"ph1\">`true`</ph> and the password question is either <ph id=\"ph2\">`null`</ph> or an empty string after trimming.","pos":[2287,2469],"source":"      -   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the password question is either `null` or an empty string after trimming."},{"content":"-   The <ph id=\"ph1\">`passwordQuestion`</ph> parameter is an empty string.","pos":[2475,2531],"source":"      -   The `passwordQuestion` parameter is an empty string."},{"content":"-   The <ph id=\"ph1\">`passwordQuestion`</ph> parameter is longer than 256 characters.","pos":[2537,2604],"source":"      -   The `passwordQuestion` parameter is longer than 256 characters."},{"content":"-   The <ph id=\"ph1\">`providerUserKey`</ph> parameter set to an object of a type other than &lt;xref:System.Guid?displayProperty=fullName&gt;.","pos":[2610,2728],"source":"      -   The `providerUserKey` parameter set to an object of a type other than <xref:System.Guid?displayProperty=fullName>."},{"content":"-   The <ph id=\"ph1\">`providerUserKey`</ph> parameter is a duplicate of an existing user key.","pos":[2734,2809],"source":"      -   The `providerUserKey` parameter is a duplicate of an existing user key."},{"content":"-   The <ph id=\"ph1\">`username`</ph> parameter is a duplicate of an existing user name.","pos":[2815,2884],"source":"      -   The `username` parameter is a duplicate of an existing user name."},{"content":"Leading and trailing spaces are trimmed from all string parameter values.","pos":[2891,2964]}]},{"pos":[30780,30811],"content":"The user name for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the new user.","pos":[0,31]}]},{"pos":[30876,30906],"content":"The password for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the new user.","pos":[0,30]}]},{"pos":[30968,31004],"content":"The e-mail address for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address for the new user.","pos":[0,36]}]},{"pos":[31077,31116],"content":"The password question for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password question for the new user.","pos":[0,39]}]},{"pos":[31187,31224],"content":"The password answer for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password answer for the new user.","pos":[0,37]}]},{"pos":[31292,31348],"content":"Whether or not the new user is approved to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether or not the new user is approved to be validated.","pos":[0,56]}]},{"pos":[31420,31513],"content":"A <xref:System.Guid> that uniquely identifies the membership user in the SQL Server database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; that uniquely identifies the membership user in the SQL Server database.","pos":[0,93],"source":"A <xref:System.Guid> that uniquely identifies the membership user in the SQL Server database."}]},{"pos":[31605,31727],"content":"One of the <xref:System.Web.Security.MembershipCreateStatus> values, indicating whether the user was created successfully.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.Web.Security.MembershipCreateStatus&gt; values, indicating whether the user was created successfully.","pos":[0,122],"source":"One of the <xref:System.Web.Security.MembershipCreateStatus> values, indicating whether the user was created successfully."}]},{"pos":[31806,31990],"content":"A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,78],"source":"A <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If no user was created, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,184],"source":" If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[32575,32655],"content":"Removes a user's membership information from the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a user's membership information from the SQL Server membership database.","pos":[0,80]}]},{"pos":[32668,34097],"content":"This method is called by the <xref:System.Web.Security.Membership> class to remove a user from the SQL Server database specified in the ASP.NET application's configuration file.       Deleted users are only deleted from the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       If `deleteAllRelatedData` is set to `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features is also deleted for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       If the membership user does not exist in the database, and `deleteAllRelatedData` is `true`, then the related data and the user information stored for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features will still be deleted for the application specified in the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property. As a result, the DeleteUser method can be used for quickly deleting information related to a user, even when the <xref:System.Web.Security.SqlMembershipProvider> object is not used for storing authenticated user information.       Leading and trailing spaces are trimmed from the `username` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to remove a user from the SQL Server database specified in the ASP.NET application's configuration file.","pos":[0,177],"source":"This method is called by the <xref:System.Web.Security.Membership> class to remove a user from the SQL Server database specified in the ASP.NET application's configuration file."},{"content":"Deleted users are only deleted from the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[184,303],"source":"       Deleted users are only deleted from the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"If <ph id=\"ph1\">`deleteAllRelatedData`</ph> is set to <ph id=\"ph2\">`true`</ph>, then all user data stored in the database for the &lt;xref:System.Web.Security.Roles&gt;, &lt;xref:System.Web.HttpContext.Profile%2A&gt;, or &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; personalization features is also deleted for the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[310,661],"source":"       If `deleteAllRelatedData` is set to `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features is also deleted for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"If the membership user does not exist in the database, and <ph id=\"ph1\">`deleteAllRelatedData`</ph> is <ph id=\"ph2\">`true`</ph>, then the related data and the user information stored for the &lt;xref:System.Web.Security.Roles&gt;, &lt;xref:System.Web.HttpContext.Profile%2A&gt;, or &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; personalization features will still be deleted for the application specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt; property.","pos":[668,1113],"source":"       If the membership user does not exist in the database, and `deleteAllRelatedData` is `true`, then the related data and the user information stored for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features will still be deleted for the application specified in the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property."},{"content":"As a result, the DeleteUser method can be used for quickly deleting information related to a user, even when the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; object is not used for storing authenticated user information.","pos":[1114,1338],"source":" As a result, the DeleteUser method can be used for quickly deleting information related to a user, even when the <xref:System.Web.Security.SqlMembershipProvider> object is not used for storing authenticated user information."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`username`</ph> parameter value.","pos":[1345,1421],"source":"       Leading and trailing spaces are trimmed from the `username` parameter value."}]},{"pos":[35322,35353],"content":"The name of the user to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to delete.","pos":[0,31]}]},{"pos":[35431,35659],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to delete data related to the user from the database; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to leave data related to the user in the database.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to delete data related to the user from the database; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to leave data related to the user in the database."},{"pos":[35718,36013],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user was deleted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,160],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is also returned if the user does not exist in the database.","pos":[161,295],"source":" A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database."}]},{"pos":[36188,36286],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is an empty string (\"\"), contains a comma, or is longer than 256 characters.","needQuote":true,"needEscape":true,"source":"<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters."},{"pos":[36389,36475],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36916,37037],"content":"Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.","pos":[0,121]}]},{"pos":[37049,37406],"content":"Password reset allows the membership provider to replace the current password for a user name with a new, randomly generated password. This is especially useful when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Password reset allows the membership provider to replace the current password for a user name with a new, randomly generated password. This is especially useful when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.","pos":[0,357],"nodes":[{"content":"Password reset allows the membership provider to replace the current password for a user name with a new, randomly generated password.","pos":[0,134]},{"content":"This is especially useful when the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, as users cannot retrieve hashed password values.","pos":[135,357],"source":" This is especially useful when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values."}]}]},{"pos":[38290,38554],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership provider supports password reset; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,187],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[188,264],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[39107,39231],"content":"Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.","pos":[0,124]}]},{"pos":[39244,40091],"content":"If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, a user will not be able to retrieve his or her existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values. Passwords are hashed with a randomly generated salt value and compared to values stored in the database for authentication. Hashed values cannot be unencoded to retrieve the original password value.       If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and EnablePasswordRetrieval is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, a user will not be able to retrieve his or her existing password from the database.","pos":[0,229],"source":"If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, a user will not be able to retrieve his or her existing password from the database."},{"content":"The &lt;xref:System.Web.Security.MembershipPasswordFormat&gt; password format provides one-way encoding of password values.","pos":[230,347],"source":" The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values."},{"content":"Passwords are hashed with a randomly generated salt value and compared to values stored in the database for authentication.","pos":[348,471]},{"content":"Hashed values cannot be unencoded to retrieve the original password value.","pos":[472,546]},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, and EnablePasswordRetrieval is set to <ph id=\"ph1\">`true`</ph>, a &lt;xref:System.Configuration.Provider.ProviderException&gt; is thrown when the provider is initialized.","pos":[553,845],"source":"       If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and EnablePasswordRetrieval is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized."}]},{"pos":[40988,41258],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership provider supports password retrieval; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,191],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,270],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[41966,42080],"content":"Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.","pos":[0,114]}]},{"pos":[42093,43854],"content":"FindUsersByEmail returns a list of membership users in which the e-mail address contains a match with the supplied `emailToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `emailToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included in the parameter value. For example, if the `emailToMatch` parameter is set to \"address@example.com\", then information for users with the e-mail address \"address@example.com\" is returned, if it exists. If the `emailToMatch` parameter is set to \"%@example.com\", then information for users with the e-mail address \"address@example.com\", \"address2@example.com\", \"admin@example.com\", and so on is returned.       The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through tenth users returned. The `totalRecords` parameter would be set to 13.       Leading and trailing spaces are trimmed from the `emailToMatch` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"FindUsersByEmail returns a list of membership users in which the e-mail address contains a match with the supplied <ph id=\"ph1\">`emailToMatch`</ph> for the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[0,217],"source":"FindUsersByEmail returns a list of membership users in which the e-mail address contains a match with the supplied `emailToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; searches for a user name that matches the <ph id=\"ph1\">`emailToMatch`</ph> parameter value, using the LIKE clause.","pos":[224,373],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `emailToMatch` parameter value, using the LIKE clause."},{"content":"SQL Server wildcard characters can be included in the parameter value.","pos":[374,444]},{"content":"For example, if the <ph id=\"ph1\">`emailToMatch`</ph> parameter is set to \"<ph id=\"ph2\">address@example.com</ph>\", then information for users with the e-mail address \"<ph id=\"ph3\">address@example.com</ph>\" is returned, if it exists.","pos":[445,622],"source":" For example, if the `emailToMatch` parameter is set to \"address@example.com\", then information for users with the e-mail address \"address@example.com\" is returned, if it exists."},{"content":"If the <ph id=\"ph1\">`emailToMatch`</ph> parameter is set to \"%<ph id=\"ph2\">@example.com</ph>\", then information for users with the e-mail address \"<ph id=\"ph3\">address@example.com</ph>\", \"<ph id=\"ph4\">address2@example.com</ph>\", \"<ph id=\"ph5\">admin@example.com</ph>\", and so on is returned.","pos":[623,823],"source":" If the `emailToMatch` parameter is set to \"%@example.com\", then information for users with the e-mail address \"address@example.com\", \"address2@example.com\", \"admin@example.com\", and so on is returned."},{"content":"The results returned by FindUsersByEmail are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[830,932],"source":"       The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[933,1110],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where zero identifies the first page.","pos":[1111,1218],"source":" The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users for the configured <ph id=\"ph3\">`applicationName`</ph>.","pos":[1219,1359],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through tenth users returned.","pos":[1360,1607],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through tenth users returned."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter would be set to 13.","pos":[1608,1656],"source":" The `totalRecords` parameter would be set to 13."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`emailToMatch`</ph> parameter value.","pos":[1663,1743],"source":"       Leading and trailing spaces are trimmed from the `emailToMatch` parameter value."}]},{"pos":[45236,45269],"content":"The e-mail address to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]},{"pos":[45334,45404],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[45468,45510],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[45578,45612],"content":"The total number of matched users.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of matched users.","pos":[0,34]}]},{"pos":[45701,45908],"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept>&lt;xref:System.Web.Security.MembershipUser&gt; objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>."},{"pos":[47076,47176],"content":"Gets a collection of membership users where the user name contains the specified user name to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of membership users where the user name contains the specified user name to match.","pos":[0,100]}]},{"pos":[47189,48903],"content":"FindUsersByName returns a list of membership users for which the user name contains a match with the supplied `usernameToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.       The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `usernameToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included with the parameter value. For example, if the `usernameToMatch` parameter is set to \"user1\", then user information for the user with the user name of \"user1\" is returned, if it exists. If the `usernameToMatch` parameter is set to \"user%\", then user information for users with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned.       The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13.       Leading and trailing spaces are trimmed from the `usernameToMatch` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"FindUsersByName returns a list of membership users for which the user name contains a match with the supplied <ph id=\"ph1\">`usernameToMatch`</ph> for the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt;.","pos":[0,215],"source":"FindUsersByName returns a list of membership users for which the user name contains a match with the supplied `usernameToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; searches for a user name that matches the <ph id=\"ph1\">`usernameToMatch`</ph> parameter value, using the LIKE clause.","pos":[222,374],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `usernameToMatch` parameter value, using the LIKE clause."},{"content":"SQL Server wildcard characters can be included with the parameter value.","pos":[375,447]},{"content":"For example, if the <ph id=\"ph1\">`usernameToMatch`</ph> parameter is set to \"user1\", then user information for the user with the user name of \"user1\" is returned, if it exists.","pos":[448,606],"source":" For example, if the `usernameToMatch` parameter is set to \"user1\", then user information for the user with the user name of \"user1\" is returned, if it exists."},{"content":"If the <ph id=\"ph1\">`usernameToMatch`</ph> parameter is set to \"user%\", then user information for users with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned.","pos":[607,770],"source":" If the `usernameToMatch` parameter is set to \"user%\", then user information for users with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned."},{"content":"The results returned by FindUsersByName are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[777,878],"source":"       The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[879,1056],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where zero identifies the first page.","pos":[1057,1164],"source":" The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users for the configured <ph id=\"ph3\">`applicationName`</ph>.","pos":[1165,1305],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through the tenth users returned.","pos":[1306,1557],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter would be set to 13.","pos":[1558,1606],"source":" The `totalRecords` parameter would be set to 13."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`usernameToMatch`</ph> parameter value.","pos":[1613,1696],"source":"       Leading and trailing spaces are trimmed from the `usernameToMatch` parameter value."}]},{"pos":[50283,50311],"content":"The user name to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to search for.","pos":[0,28]}]},{"pos":[50376,50446],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[50510,50552],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[50620,50689],"content":"When this method returns, contains the total number of matched users.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the total number of matched users.","pos":[0,69]}]},{"pos":[50778,50985],"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept>&lt;xref:System.Web.Security.MembershipUser&gt; objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>."},{"pos":[51678,51771],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[52201,52265],"content":"Generates a random password that is at least 14 characters long.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random password that is at least 14 characters long.","pos":[0,64]}]},{"pos":[52278,54025],"content":"The <xref:System.Web.Security.Membership> class provides a <xref:System.Web.Security.Membership.GeneratePassword%2A> method, which generates a password of a specified size with at least the specified number of non-alphabetic characters. The GeneratePassword method of the <xref:System.Web.Security.SqlMembershipProvider> calls the <xref:System.Web.Security.Membership.GeneratePassword%2A> method of the <xref:System.Web.Security.Membership> class to retrieve a random password that is at least 14 characters long. If the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property is greater than 14, the password returned will be the length specified in the  <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.       You can specifically call the GeneratePassword method by referencing the <xref:System.Web.Security.SqlMembershipProvider> class directly from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.       The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.      > [!NOTE] >  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.Security.Membership&gt; class provides a &lt;xref:System.Web.Security.Membership.GeneratePassword%2A&gt; method, which generates a password of a specified size with at least the specified number of non-alphabetic characters.","pos":[0,236],"source":"The <xref:System.Web.Security.Membership> class provides a <xref:System.Web.Security.Membership.GeneratePassword%2A> method, which generates a password of a specified size with at least the specified number of non-alphabetic characters."},{"content":"The GeneratePassword method of the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; calls the &lt;xref:System.Web.Security.Membership.GeneratePassword%2A&gt; method of the &lt;xref:System.Web.Security.Membership&gt; class to retrieve a random password that is at least 14 characters long.","pos":[237,513],"source":" The GeneratePassword method of the <xref:System.Web.Security.SqlMembershipProvider> calls the <xref:System.Web.Security.Membership.GeneratePassword%2A> method of the <xref:System.Web.Security.Membership> class to retrieve a random password that is at least 14 characters long."},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; property is greater than 14, the password returned will be the length specified in the  &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; property.","pos":[514,774],"source":" If the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property is greater than 14, the password returned will be the length specified in the  <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property."},{"content":"You can specifically call the GeneratePassword method by referencing the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; class directly from the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property of the &lt;xref:System.Web.Security.Membership&gt; class.","pos":[781,1037],"source":"       You can specifically call the GeneratePassword method by referencing the <xref:System.Web.Security.SqlMembershipProvider> class directly from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class."},{"content":"The generated password only contains alphanumeric characters and the following punctuation marks: <ph id=\"ph1\">`!@#$%^&amp;*()_-+=[{]};:&lt;&gt;|./?`</ph>.","pos":[1044,1171],"source":"       The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`."},{"content":"No hidden or non-printable control characters are included in the generated password.","pos":[1172,1257]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A&gt; property.","pos":[1263,1486],"source":"      > [!NOTE] >  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property."},{"content":"However, the random password will meet the criteria established by the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt; properties.","pos":[1487,1740],"source":" However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties."}]},{"pos":[54502,54556],"content":"A random password that is at least 14 characters long.","needQuote":true,"needEscape":true,"nodes":[{"content":"A random password that is at least 14 characters long.","pos":[0,54]}]},{"pos":[55183,55256],"content":"Gets a collection of all the users in the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all the users in the SQL Server membership database.","pos":[0,73]}]},{"pos":[55269,56305],"content":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,202],"source":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"The results returned by GetAllUsers are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[209,306],"source":"       The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[307,484],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where zero identifies the first page.","pos":[485,592],"source":" The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users for the configured <ph id=\"ph3\">`applicationName`</ph>.","pos":[593,733],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through the tenth users returned.","pos":[734,985],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter would be set to 13.","pos":[986,1034],"source":" The `totalRecords` parameter would be set to 13."}]},{"pos":[57634,57704],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[57768,57810],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[57878,57904],"content":"The total number of users.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of users.","pos":[0,26]}]},{"pos":[57993,58228],"content":"A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all the users in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; of &lt;xref:System.Web.Security.MembershipUser&gt; objects representing all the users in the database for the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName*&gt;.","pos":[0,235],"source":"A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all the users in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>."}]},{"pos":[59162,59226],"content":"Returns the number of users currently accessing the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of users currently accessing the application.","pos":[0,64]}]},{"pos":[59239,59876],"content":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       GetNumberOfUsersOnline returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property in minutes.       Only users associated with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> are included in the count.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       GetNumberOfUsersOnline returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property in minutes.       Only users associated with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> are included in the count.","pos":[0,633],"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,223],"source":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"GetNumberOfUsersOnline returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the &lt;xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A&gt; property in minutes.","pos":[230,490],"source":"       GetNumberOfUsersOnline returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property in minutes."},{"content":"Only users associated with the configured &lt;xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A&gt; are included in the count.","pos":[497,633],"source":"       Only users associated with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> are included in the count."}]}]},{"pos":[61098,61154],"content":"The number of users currently accessing the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of users currently accessing the application.","pos":[0,56]}]},{"pos":[61751,61840],"content":"Returns the password for the specified user name from the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the password for the specified user name from the SQL Server membership database.","pos":[0,89]}]},{"pos":[61853,63757],"content":"This method is called by the <xref:System.Web.Security.MembershipUser> class to retrieve the password for a user from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       If an incorrect password answer is supplied to the GetPassword method, the internal counter that tracks invalid password-answer attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       You can call the GetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.       If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, the GetPassword method cannot retrieve the password. Hashed passwords are encrypted one-way and cannot be decrypted. If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.MembershipUser&gt; class to retrieve the password for a user from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,213],"source":"This method is called by the <xref:System.Web.Security.MembershipUser> class to retrieve the password for a user from the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"If an incorrect password answer is supplied to the GetPassword method, the internal counter that tracks invalid password-answer attempts is incremented by one.","pos":[220,379]},{"content":"This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the &lt;xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A&gt; method.","pos":[380,566],"source":" This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method."},{"content":"If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero.","pos":[567,740]},{"content":"For more information, see the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt; properties.","pos":[741,939],"source":" For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties."},{"content":"You can call the GetPassword method directly by first obtaining a reference to the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance through the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property of the &lt;xref:System.Web.Security.Membership&gt; class.","pos":[946,1209],"source":"       You can call the GetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class."},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, the GetPassword method cannot retrieve the password.","pos":[1216,1414],"source":"       If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, the GetPassword method cannot retrieve the password."},{"content":"Hashed passwords are encrypted one-way and cannot be decrypted.","pos":[1415,1478]},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, and &lt;xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A&gt; is set to <ph id=\"ph1\">`true`</ph>, a &lt;xref:System.Configuration.Provider.ProviderException&gt; is thrown when the provider is initialized.","pos":[1479,1823],"source":" If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1830,1896]}]},{"pos":[65271,65309],"content":"The user to retrieve the password for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user to retrieve the password for.","pos":[0,38]}]},{"pos":[65380,65413],"content":"The password answer for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password answer for the user.","pos":[0,33]}]},{"pos":[65471,65512],"content":"The password for the specified user name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user name.","pos":[0,41]}]},{"pos":[65974,66121],"content":"&lt;xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*&gt; is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[68078,68265],"content":"Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.","pos":[0,187]}]},{"pos":[68277,68573],"content":"<xref:System.Web.Security.Membership.GetUser%2A> retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier specified with the `providerUserKey` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Web.Security.Membership.GetUser%2A&gt; retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,197],"source":"<xref:System.Web.Security.Membership.GetUser%2A> retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"The user is identified using the unique identifier specified with the <ph id=\"ph1\">`providerUserKey`</ph> parameter.","pos":[198,296],"source":" The user is identified using the unique identifier specified with the `providerUserKey` parameter."}]},{"pos":[68788,68823],"content":"The unique identifier for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the user.","pos":[0,35]}]},{"pos":[68893,69096],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to update the last-activity date/time stamp for the specified user; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to update the last-activity date/time stamp for the specified user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[69175,69460],"content":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <code>providerUserKey</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the user associated with the specified unique identifier.","pos":[0,121],"source":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier."},{"content":"If no user is found in the database for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">providerUserKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> value, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned.","pos":[122,285],"source":" If no user is found in the database for the specified <code>providerUserKey</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[69640,69733],"content":"<ph id=\"ph1\">&lt;code&gt;providerUserKey&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[69828,69891],"content":"<ph id=\"ph1\">&lt;code&gt;providerUserKey&lt;/code&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref:System.Guid&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>providerUserKey</code> is not of type <xref:System.Guid>."},{"pos":[70378,70529],"content":"Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.","pos":[0,151]}]},{"pos":[70542,71215],"content":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       If `userIsOnline` is `true`, the last activity date/time stamp for the user is updated to the current date and time. This is reflected in the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> and <xref:System.Web.Security.MembershipUser.IsOnline%2A> properties and in the value returned by <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.       Leading and trailing spaces are trimmed from the `username` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,202],"source":"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"If <ph id=\"ph1\">`userIsOnline`</ph> is <ph id=\"ph2\">`true`</ph>, the last activity date/time stamp for the user is updated to the current date and time.","pos":[209,325],"source":"       If `userIsOnline` is `true`, the last activity date/time stamp for the user is updated to the current date and time."},{"content":"This is reflected in the &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; and &lt;xref:System.Web.Security.MembershipUser.IsOnline%2A&gt; properties and in the value returned by &lt;xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A&gt;.","pos":[326,586],"source":" This is reflected in the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> and <xref:System.Web.Security.MembershipUser.IsOnline%2A> properties and in the value returned by <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`username`</ph> parameter value.","pos":[593,669],"source":"       Leading and trailing spaces are trimmed from the `username` parameter value."}]},{"pos":[72524,72568],"content":"The name of the user to get information for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to get information for.","pos":[0,44]}]},{"pos":[72638,72911],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to update the last activity date/time stamp for the user; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to return user information without updating the last activity date/time stamp for the user.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to update the last activity date/time stamp for the user; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return user information without updating the last activity date/time stamp for the user."},{"pos":[72990,73230],"content":"A <xref:System.Web.Security.MembershipUser> object representing the specified user. If no user is found in the database for the specified <code>username</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the specified user.","pos":[0,83],"source":"A <xref:System.Web.Security.MembershipUser> object representing the specified user."},{"content":"If no user is found in the database for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">username</ph><ept id=\"p1\">&lt;/code&gt;</ept> value, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned.","pos":[84,240],"source":" If no user is found in the database for the specified <code>username</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[73617,73703],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[74191,74255],"content":"Gets the user name associated with the specified e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the user name associated with the specified e-mail address.","pos":[0,64]}]},{"pos":[74268,74886],"content":"This method is called by the <xref:System.Web.Security.Membership> class with an e-mail address, which it uses to retrieve an associated user name from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       If more than one user in the membership database has the same e-mail address, the first user name encountered is returned. You can set the `requiresUniqueEmail` attribute to `true` in the application-configuration file to ensure that each e-mail address in the database is unique.       Leading and trailing spaces are trimmed from the `email` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class with an e-mail address, which it uses to retrieve an associated user name from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,247],"source":"This method is called by the <xref:System.Web.Security.Membership> class with an e-mail address, which it uses to retrieve an associated user name from the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"If more than one user in the membership database has the same e-mail address, the first user name encountered is returned.","pos":[254,376]},{"content":"You can set the <ph id=\"ph1\">`requiresUniqueEmail`</ph> attribute to <ph id=\"ph2\">`true`</ph> in the application-configuration file to ensure that each e-mail address in the database is unique.","pos":[377,534],"source":" You can set the `requiresUniqueEmail` attribute to `true` in the application-configuration file to ensure that each e-mail address in the database is unique."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`email`</ph> parameter value.","pos":[541,614],"source":"       Leading and trailing spaces are trimmed from the `email` parameter value."}]},{"pos":[76109,76142],"content":"The e-mail address to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]},{"pos":[76200,76363],"content":"The user name associated with the specified e-mail address. If no match is found, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name associated with the specified e-mail address.","pos":[0,59]},{"content":"If no match is found, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[60,163],"source":" If no match is found, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[76546,76588],"content":"<ph id=\"ph1\">&lt;code&gt;email&lt;/code&gt;</ph> exceeds 256 characters.","needQuote":true,"needEscape":true,"source":"<code>email</code> exceeds 256 characters."},{"pos":[76729,76938],"content":"More than one user with the same e-mail address exists in the database and &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*&gt; is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"More than one user with the same e-mail address exists in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[77548,77742],"content":"Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.","pos":[0,194],"nodes":[{"content":"Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file.","pos":[0,130]},{"content":"This method is not intended to be used directly from your code.","pos":[131,194]}]}]},{"pos":[77754,77980],"content":"This method initializes the <xref:System.Web.Security.SqlMembershipProvider> with the property values specified in the ASP.NET application configuration file (Web.config) and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method initializes the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; with the property values specified in the ASP.NET application configuration file (Web.config) and is not intended to be used directly from your code.","pos":[0,226],"source":"This method initializes the <xref:System.Web.Security.SqlMembershipProvider> with the property values specified in the ASP.NET application configuration file (Web.config) and is not intended to be used directly from your code."}]},{"pos":[78186,78288],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.SqlMembershipProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to initialize.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance to initialize."},{"pos":[78388,78550],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the names and values of configuration options for the membership provider.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that contains the names and values of configuration options for the membership provider."},{"pos":[78733,78817],"content":"<ph id=\"ph1\">&lt;code&gt;config&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>config</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[82836,82932],"content":"The current trust level is less than <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Low\" name=\"Low\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The current trust level is less than <xref uid=\"langword_csharp_Low\" name=\"Low\" href=\"\"></xref>."},{"pos":[83043,83136],"content":"The provider has already been initialized prior to the current call to the Initialize method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider has already been initialized prior to the current call to the Initialize method.","pos":[0,93]}]},{"pos":[83612,83725],"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,113]}]},{"pos":[83738,85773],"content":"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property within the number of minutes identified by the value of the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked with the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counters that track the number of invalid password and password-answer attempts are reset to zero. If a valid password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, only the counter that tracks the number of invalid password-answer attempts is reset to zero.       The <xref:System.Web.Security.SqlMembershipProvider> keeps counts of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.       The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration section.       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; works in conjunction with the &lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt; to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts.","pos":[0,289],"source":"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts."},{"content":"If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the value of the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; property within the number of minutes identified by the value of the &lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt; property, then the membership user is locked out by setting the &lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt; property to <ph id=\"ph1\">`true`</ph> until the user is unlocked with the &lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt; method.","pos":[290,862],"source":" If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property within the number of minutes identified by the value of the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked with the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If a valid password is supplied before the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; value is reached, the counters that track the number of invalid password and password-answer attempts are reset to zero.","pos":[863,1094],"source":" If a valid password is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counters that track the number of invalid password and password-answer attempts are reset to zero."},{"content":"If a valid password answer is supplied before the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; value is reached, only the counter that tracks the number of invalid password-answer attempts is reset to zero.","pos":[1095,1324],"source":" If a valid password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, only the counter that tracks the number of invalid password-answer attempts is reset to zero."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; keeps counts of invalid password attempts and invalid password-answer attempts separately.","pos":[1331,1474],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> keeps counts of invalid password attempts and invalid password-answer attempts separately."},{"content":"Invalid password attempts result in only the password-attempt counter being incremented.","pos":[1475,1563]},{"content":"Invalid password-answer attempts result in only the password-answer counter being incremented.","pos":[1564,1658]},{"content":"The &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; property value is set in the application configuration using the <ph id=\"ph1\">`maxInvalidPasswordAttempts`</ph> attribute of the  configuration section.","pos":[1665,1871],"source":"       The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration section."},{"content":"If the &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>, invalid password-answer attempts are not tracked.","pos":[1878,2029],"source":"       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."}]},{"pos":[86763,86871],"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,108]}]},{"pos":[87496,87583],"content":"Gets the minimum number of special characters that must be present in a valid password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum number of special characters that must be present in a valid password.","pos":[0,87]}]},{"pos":[87596,88261],"content":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.       The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.       A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; object.","pos":[0,227],"source":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object."},{"content":"The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the <ph id=\"ph1\">`minRequiredNonalphanumericCharacters`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","pos":[234,535],"source":"       The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."},{"content":"A non-alphanumeric character is a character for which the &lt;xref:System.Char.IsLetterOrDigit%2A&gt; method returns <ph id=\"ph1\">`false`</ph>.","pos":[542,661],"source":"       A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."}]},{"pos":[89297,89379],"content":"The minimum number of special characters that must be present in a valid password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum number of special characters that must be present in a valid password.","pos":[0,82]}]},{"pos":[89959,90007],"content":"Gets the minimum length required for a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum length required for a password.","pos":[0,48]}]},{"pos":[90020,90534],"content":"MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.       The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.","needQuote":false,"needEscape":true,"nodes":[{"content":"MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; object.","pos":[0,185],"source":"MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object."},{"content":"The &lt;xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A&gt; property value is set in the application configuration using the <ph id=\"ph1\">`minRequiredPasswordLength`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","pos":[192,512],"source":"       The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."}]},{"pos":[91558,91601],"content":"The minimum length required for a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum length required for a password.","pos":[0,43]}]},{"pos":[92150,92273],"content":"Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.","pos":[0,123]}]},{"pos":[92286,94749],"content":"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or the password answer of a membership user through repeated attempts. When users are attempting to log in, change their password, or reset their password, only a certain number of consecutive attempts are allowed within a specified time window. The length of the time window is specified by the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts. If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified for the PasswordAttemptWindow property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true`. The user can be unlocked by calling the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to zero. If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to zero.       The <xref:System.Web.Security.SqlMembershipProvider> keeps count of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.       The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property value is set in the application configuration using the `passwordAttemptWindow` attribute of the  configuration section.       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PasswordAttemptWindow property works in conjunction with the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; property to help guard against an unwanted source guessing the password or the password answer of a membership user through repeated attempts.","pos":[0,286],"source":"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or the password answer of a membership user through repeated attempts."},{"content":"When users are attempting to log in, change their password, or reset their password, only a certain number of consecutive attempts are allowed within a specified time window.","pos":[287,461]},{"content":"The length of the time window is specified by the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts.","pos":[462,616]},{"content":"If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; property, and the time elapsed since the last invalid attempt is less than the number of minutes specified for the PasswordAttemptWindow property, then the membership user is locked out by setting the &lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[617,1096],"source":" If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified for the PasswordAttemptWindow property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true`."},{"content":"The user can be unlocked by calling the &lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt; method.","pos":[1097,1200],"source":" The user can be unlocked by calling the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first.","pos":[1201,1392]},{"content":"If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to zero.","pos":[1393,1559]},{"content":"If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to zero.","pos":[1560,1763]},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; keeps count of invalid password attempts and invalid password-answer attempts separately.","pos":[1770,1912],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> keeps count of invalid password attempts and invalid password-answer attempts separately."},{"content":"Invalid password attempts result in only the password-attempt counter being incremented.","pos":[1913,2001]},{"content":"Invalid password-answer attempts result in only the password-answer counter being incremented.","pos":[2002,2096]},{"content":"The &lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt; property value is set in the application configuration using the <ph id=\"ph1\">`passwordAttemptWindow`</ph> attribute of the  configuration section.","pos":[2103,2299],"source":"       The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property value is set in the application configuration using the `passwordAttemptWindow` attribute of the  configuration section."},{"content":"If the &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>, invalid password-answer attempts are not tracked.","pos":[2306,2457],"source":"       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."}]},{"pos":[95734,96101],"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","pos":[0,367],"nodes":[{"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked.","pos":[0,130]},{"content":"The default is 10 minutes.","pos":[131,157]},{"content":"If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","pos":[158,367]}]}]},{"pos":[96611,96706],"content":"Gets a value indicating the format for storing passwords in the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating the format for storing passwords in the SQL Server membership database.","pos":[0,95]}]},{"pos":[96719,98365],"content":"Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.       The PasswordFormat value is specified in the  section of the Web.config file for the ASP.NET application.       `Encrypted` and `Hashed` passwords are encrypted or hashed by default based on information supplied in the  element in your configuration. Note that if you specify a value of `3DES` for the `validation` attribute, or if no value is specified, hashed passwords will be hashed using the <xref:System.Security.Cryptography.SHA1> algorithm.       A custom hash algorithm can be defined using the `hashAlgorithmType` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element. If you choose encryption, default password encryption uses AES. You can change the encryption algorithm by setting the `decryption` attribute of the  configuration element. If you are encrypting passwords, you must provide an explicit value for the `decryptionKey` attribute in the  element. The default value of `AutoGenerate` for the `decryptionKey` attribute is not supported when using encrypted passwords with ASP.NET Membership.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use <ph id=\"ph1\">`Hashed`</ph> only, <ph id=\"ph2\">`Clear`</ph> and <ph id=\"ph3\">`Encrypted`</ph> are not secure.","pos":[0,58],"source":"Use `Hashed` only, `Clear` and `Encrypted` are not secure."},{"content":"<ph id=\"ph1\">`Hashed`</ph> passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database.","pos":[59,184],"source":"`Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database."},{"content":"When a password is validated, it is hashed with the salt value in the database for verification.","pos":[185,281]},{"content":"Hashed passwords cannot be retrieved.","pos":[282,319]},{"content":"<ph id=\"ph1\">`Encrypted`</ph> passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key.","pos":[320,450],"source":"`Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key."},{"content":"This means your encrypted passwords could be decrypted and exposed.","pos":[451,518]},{"content":"The PasswordFormat value is specified in the  section of the Web.config file for the ASP.NET application.","pos":[525,630]},{"content":"<ph id=\"ph1\">`Encrypted`</ph> and <ph id=\"ph2\">`Hashed`</ph> passwords are encrypted or hashed by default based on information supplied in the  element in your configuration.","pos":[637,775],"source":"`Encrypted` and `Hashed` passwords are encrypted or hashed by default based on information supplied in the  element in your configuration."},{"content":"Note that if you specify a value of <ph id=\"ph1\">`3DES`</ph> for the <ph id=\"ph2\">`validation`</ph> attribute, or if no value is specified, hashed passwords will be hashed using the &lt;xref:System.Security.Cryptography.SHA1&gt; algorithm.","pos":[776,973],"source":" Note that if you specify a value of `3DES` for the `validation` attribute, or if no value is specified, hashed passwords will be hashed using the <xref:System.Security.Cryptography.SHA1> algorithm."},{"content":"A custom hash algorithm can be defined using the <ph id=\"ph1\">`hashAlgorithmType`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","pos":[980,1205],"source":"       A custom hash algorithm can be defined using the `hashAlgorithmType` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."},{"content":"If you choose encryption, default password encryption uses AES.","pos":[1206,1269]},{"content":"You can change the encryption algorithm by setting the <ph id=\"ph1\">`decryption`</ph> attribute of the  configuration element.","pos":[1270,1378],"source":" You can change the encryption algorithm by setting the `decryption` attribute of the  configuration element."},{"content":"If you are encrypting passwords, you must provide an explicit value for the <ph id=\"ph1\">`decryptionKey`</ph> attribute in the  element.","pos":[1379,1497],"source":" If you are encrypting passwords, you must provide an explicit value for the `decryptionKey` attribute in the  element."},{"content":"The default value of <ph id=\"ph1\">`AutoGenerate`</ph> for the <ph id=\"ph2\">`decryptionKey`</ph> attribute is not supported when using encrypted passwords with ASP.NET Membership.","pos":[1498,1640],"source":" The default value of `AutoGenerate` for the `decryptionKey` attribute is not supported when using encrypted passwords with ASP.NET Membership."}]},{"pos":[99329,99471],"content":"One of the <xref:System.Web.Security.MembershipPasswordFormat> values, indicating the format for storing passwords in the SQL Server database.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.Web.Security.MembershipPasswordFormat&gt; values, indicating the format for storing passwords in the SQL Server database.","pos":[0,142],"source":"One of the <xref:System.Web.Security.MembershipPasswordFormat> values, indicating the format for storing passwords in the SQL Server database."}]},{"pos":[100069,100125],"content":"Gets the regular expression used to evaluate a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the regular expression used to evaluate a password.","pos":[0,56]}]},{"pos":[100138,100653],"content":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.SqlMembershipProvider> object.       The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity for the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; object.","pos":[0,176],"source":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.SqlMembershipProvider> object."},{"content":"The &lt;xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A&gt; property is set in the application configuration using the <ph id=\"ph1\">`passwordStrengthRegularExpression`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","pos":[183,513],"source":"       The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."}]},{"pos":[102059,102108],"content":"A regular expression used to evaluate a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"A regular expression used to evaluate a password.","pos":[0,49]}]},{"pos":[102685,102849],"content":"Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.","pos":[0,164]}]},{"pos":[102862,103559],"content":"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. If the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> property and the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> property are both `false`, the value of the RequiresQuestionAndAnswer property is irrelevant.       For more information, see <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password.","pos":[0,129]},{"content":"When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password.","pos":[130,262]},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A&gt; property and the &lt;xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A&gt; property are both <ph id=\"ph1\">`false`</ph>, the value of the RequiresQuestionAndAnswer property is irrelevant.","pos":[263,528],"source":" If the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> property and the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> property are both `false`, the value of the RequiresQuestionAndAnswer property is irrelevant."},{"content":"For more information, see &lt;xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A&gt;.","pos":[535,695],"source":"       For more information, see <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>."}]},{"pos":[104502,104781],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a password answer is required for password reset and retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a password answer is required for password reset and retrieval; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,202],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a password answer is required for password reset and retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[203,279],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[105320,105455],"content":"Gets a value indicating whether the SQL Server membership provider is configured to require a unique e-mail address for each user name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the SQL Server membership provider is configured to require a unique e-mail address for each user name.","pos":[0,135]}]},{"pos":[106422,106697],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider requires a unique e-mail address; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership provider requires a unique e-mail address; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider requires a unique e-mail address; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,275],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[107301,107369],"content":"Resets a user's password to a new, automatically generated password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets a user's password to a new, automatically generated password.","pos":[0,68]}]},{"pos":[107382,110130],"content":"This method is called by the <xref:System.Web.Security.Membership> class to reset the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config) to a new, randomly generated value. The new password is returned.      > [!NOTE] >  The random password created by the ResetPassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties.       The ResetPassword method is most commonly used when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to `Hashed`. If a user forgets a password that is hashed, the password cannot be retrieved. However, the provider can reset the password to a new, automatically generated password if the user supplies the correct password answer.       If an incorrect password answer is supplied to the ResetPassword method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       You can call the ResetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The generated password will be at least 14 characters long, or the length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property, and will contain the number of non-alphanumeric characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property. The password is not guaranteed to pass the regular expression contained in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property, if one is specified.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to reset the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config) to a new, randomly generated value.","pos":[0,239],"source":"This method is called by the <xref:System.Web.Security.Membership> class to reset the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config) to a new, randomly generated value."},{"content":"The new password is returned.","pos":[240,269]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The random password created by the ResetPassword method is not guaranteed to pass the regular expression in the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A&gt; property.","pos":[275,495],"source":"      > [!NOTE] >  The random password created by the ResetPassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property."},{"content":"However, the random password will meet the criteria established by the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt; properties.","pos":[496,749],"source":" However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties."},{"content":"The ResetPassword method is most commonly used when the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A&gt; property is set to <ph id=\"ph1\">`Hashed`</ph>.","pos":[756,907],"source":"       The ResetPassword method is most commonly used when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to `Hashed`."},{"content":"If a user forgets a password that is hashed, the password cannot be retrieved.","pos":[908,986]},{"content":"However, the provider can reset the password to a new, automatically generated password if the user supplies the correct password answer.","pos":[987,1124]},{"content":"If an incorrect password answer is supplied to the ResetPassword method, the internal counter that tracks invalid password attempts is incremented by one.","pos":[1131,1285]},{"content":"This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the &lt;xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A&gt; method.","pos":[1286,1472],"source":" This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method."},{"content":"If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero.","pos":[1473,1646]},{"content":"For more information, see the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt; properties.","pos":[1647,1845],"source":" For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties."},{"content":"You can call the ResetPassword method directly by first obtaining a reference to the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance from the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property of the &lt;xref:System.Web.Security.Membership&gt; class.","pos":[1852,2114],"source":"       You can call the ResetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class."},{"content":"The generated password will be at least 14 characters long, or the length specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A&gt; property, and will contain the number of non-alphanumeric characters specified in the &lt;xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt; property.","pos":[2115,2468],"source":" The generated password will be at least 14 characters long, or the length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property, and will contain the number of non-alphanumeric characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property."},{"content":"The password is not guaranteed to pass the regular expression contained in the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A&gt; property, if one is specified.","pos":[2469,2664],"source":" The password is not guaranteed to pass the regular expression contained in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property, if one is specified."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[2671,2737]}]},{"pos":[111397,111432],"content":"The user to reset the password for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user to reset the password for.","pos":[0,35]}]},{"pos":[111503,111546],"content":"The password answer for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password answer for the specified user.","pos":[0,43]}]},{"pos":[111604,111644],"content":"The new password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password for the specified user.","pos":[0,40]}]},{"pos":[112075,112218],"content":"&lt;xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*&gt; is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[113948,113980],"content":"An unhandled exception occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unhandled exception occurred.","pos":[0,32]}]},{"pos":[114428,114509],"content":"Clears the user's locked-out status so that the membership user can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the user's locked-out status so that the membership user can be validated.","pos":[0,81]}]},{"pos":[114522,114930],"content":"Users are most commonly locked out and cannot be validated by the <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> method when the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> is exceeded within the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.       Leading and trailing spaces are trimmed from the `username` parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"Users are most commonly locked out and cannot be validated by the &lt;xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A&gt; method when the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; is exceeded within the &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt;.","pos":[0,323],"source":"Users are most commonly locked out and cannot be validated by the <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> method when the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> is exceeded within the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`username`</ph> parameter value.","pos":[330,406],"source":"       Leading and trailing spaces are trimmed from the `username` parameter value."}]},{"pos":[115086,115153],"content":"The name of the membership user to clear the locked-out status for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the membership user to clear the locked-out status for.","pos":[0,67]}]},{"pos":[115212,115532],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership user was successfully unlocked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership user was successfully unlocked; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership user was successfully unlocked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is also returned if the user does not exist in the database.","pos":[186,320],"source":" A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database."}]},{"pos":[115707,115800],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is an empty string, is longer than 256 characters, or contains a comma.","needQuote":true,"needEscape":true,"source":"<code>username</code> is an empty string, is longer than 256 characters, or contains a comma."},{"pos":[115903,115989],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[116503,116574],"content":"Updates information about a user in the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates information about a user in the SQL Server membership database.","pos":[0,71]}]},{"pos":[116587,117642],"content":"This method is called by the <xref:System.Web.Security.Membership> class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config). The <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, and <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property values are updated for the specified membership user.       The maximum length for the <xref:System.Web.Security.MembershipUser.UserName%2A> property is 256 characters. The maximum length for the <xref:System.Web.Security.MembershipUser.Email%2A> property is 256 characters.       The password for a membership user cannot be updated using the UpdateUser method. To update the password for a membership user, use the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method of the <xref:System.Web.Security.MembershipUser> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Web.Security.Membership> class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config). The <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, and <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property values are updated for the specified membership user.       The maximum length for the <xref:System.Web.Security.MembershipUser.UserName%2A> property is 256 characters. The maximum length for the <xref:System.Web.Security.MembershipUser.Email%2A> property is 256 characters.       The password for a membership user cannot be updated using the UpdateUser method. To update the password for a membership user, use the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method of the <xref:System.Web.Security.MembershipUser> class.","pos":[0,1051],"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,209],"source":"This method is called by the <xref:System.Web.Security.Membership> class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"The &lt;xref:System.Web.Security.MembershipUser.Email%2A&gt;, &lt;xref:System.Web.Security.MembershipUser.Comment%2A&gt;, &lt;xref:System.Web.Security.MembershipUser.IsApproved%2A&gt;, &lt;xref:System.Web.Security.MembershipUser.LastLoginDate%2A&gt;, and &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; property values are updated for the specified membership user.","pos":[210,565],"source":" The <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, and <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property values are updated for the specified membership user."},{"content":"The maximum length for the &lt;xref:System.Web.Security.MembershipUser.UserName%2A&gt; property is 256 characters.","pos":[572,680],"source":"       The maximum length for the <xref:System.Web.Security.MembershipUser.UserName%2A> property is 256 characters."},{"content":"The maximum length for the &lt;xref:System.Web.Security.MembershipUser.Email%2A&gt; property is 256 characters.","pos":[681,786],"source":" The maximum length for the <xref:System.Web.Security.MembershipUser.Email%2A> property is 256 characters."},{"content":"The password for a membership user cannot be updated using the UpdateUser method.","pos":[793,874]},{"content":"To update the password for a membership user, use the &lt;xref:System.Web.Security.MembershipUser.ChangePassword%2A&gt; method of the &lt;xref:System.Web.Security.MembershipUser&gt; class.","pos":[875,1051],"source":" To update the password for a membership user, use the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method of the <xref:System.Web.Security.MembershipUser> class."}]}]},{"pos":[118883,119010],"content":"A <xref:System.Web.Security.MembershipUser> object that represents the user to update and the updated information for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object that represents the user to update and the updated information for the user.","pos":[0,127],"source":"A <xref:System.Web.Security.MembershipUser> object that represents the user to update and the updated information for the user."}]},{"pos":[121543,121638],"content":"Verifies that the specified user name and password exist in the SQL Server membership database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the specified user name and password exist in the SQL Server membership database.","pos":[0,95]}]},{"pos":[121651,122816],"content":"This method is called by the <xref:System.Web.Security.Membership> class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       When a user is successfully validated, the last activity date and last sign-in date values are updated to the current date and time in the database.       If an incorrect password is supplied to the ValidateUser method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Web.Security.Membership> class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).       When a user is successfully validated, the last activity date and last sign-in date values are updated to the current date and time in the database.       If an incorrect password is supplied to the ValidateUser method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.       Leading and trailing spaces are trimmed from all parameter values.","pos":[0,1159],"nodes":[{"content":"This method is called by the &lt;xref:System.Web.Security.Membership&gt; class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).","pos":[0,211],"source":"This method is called by the <xref:System.Web.Security.Membership> class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config)."},{"content":"When a user is successfully validated, the last activity date and last sign-in date values are updated to the current date and time in the database.","pos":[218,366]},{"content":"If an incorrect password is supplied to the ValidateUser method, the internal counter that tracks invalid password attempts is incremented by one.","pos":[373,519]},{"content":"This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the &lt;xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A&gt; method.","pos":[520,706],"source":" This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method."},{"content":"If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero.","pos":[707,887]},{"content":"For more information, see the &lt;xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A&gt; and &lt;xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A&gt; properties.","pos":[888,1086],"source":" For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1093,1159]}]}]},{"pos":[124379,124412],"content":"The name of the user to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to validate.","pos":[0,33]}]},{"pos":[124477,124513],"content":"The password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user.","pos":[0,36]}]},{"pos":[124572,124892],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified username and password are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified username and password are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified username and password are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is also returned if the user does not exist in the database.","pos":[186,320],"source":" A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.SqlMembershipProvider\n  id: SqlMembershipProvider\n  children:\n  - System.Web.Security.SqlMembershipProvider.#ctor\n  - System.Web.Security.SqlMembershipProvider.ApplicationName\n  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)\n  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)\n  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset\n  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval\n  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.SqlMembershipProvider.GeneratePassword\n  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline\n  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)\n  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)\n  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)\n  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)\n  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts\n  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\n  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow\n  - System.Web.Security.SqlMembershipProvider.PasswordFormat\n  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\n  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\n  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\n  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)\n  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)\n  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)\n  langs:\n  - csharp\n  name: SqlMembershipProvider\n  nameWithType: SqlMembershipProvider\n  fullName: System.Web.Security.SqlMembershipProvider\n  type: Class\n  summary: Manages storage of membership information for an ASP.NET application in a SQL Server database.\n  remarks: \"This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a SqlMembershipProvider without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the SqlMembershipProvider object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \\n  \\n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\\\Microsoft.NET\\\\Framework\\\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \\n  \\n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \\n  \\n The Machine.config file defines a default SqlMembershipProvider instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \\n  \\n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.\"\n  example:\n  - \"The following code example shows the Web.config file for an ASP.NET application configured to use a SqlMembershipProvider.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"SqlServices\\\" connectionString=\\\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />  \\n  </connectionStrings>  \\n  <system.web>  \\n    <authentication mode=\\\"Forms\\\" >  \\n      <forms loginUrl=\\\"login.aspx\\\"  \\n        name=\\\".ASPXFORMSAUTH\\\" />  \\n    </authentication>  \\n    <authorization>  \\n      <deny users=\\\"?\\\" />  \\n    </authorization>  \\n    <membership defaultProvider=\\\"SqlProvider\\\"  \\n      userIsOnlineTimeWindow=\\\"15\\\">  \\n      <providers>  \\n        <add   \\n          name=\\\"SqlProvider\\\"   \\n          type=\\\"System.Web.Security.SqlMembershipProvider\\\"   \\n          connectionStringName=\\\"SqlServices\\\"  \\n          applicationName=\\\"MyApplication\\\"  \\n          enablePasswordRetrieval=\\\"false\\\"  \\n          enablePasswordReset=\\\"true\\\"  \\n          requiresQuestionAndAnswer=\\\"true\\\"  \\n          requiresUniqueEmail=\\\"false\\\"  \\n          passwordFormat=\\\"Hashed\\\"  \\n          maxInvalidPasswordAttempts=\\\"5\\\"  \\n          passwordAttemptWindow=\\\"10\\\" />  \\n      </providers>  \\n    </membership>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'\n  inheritance:\n  - System.Web.Security.MembershipProvider\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: SqlMembershipProvider()\n  nameWithType: SqlMembershipProvider.SqlMembershipProvider()\n  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Initializes a new instance of the <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> class.\n  remarks: The SqlMembershipProvider constructor is called by ASP.NET to create an instance of the <xref:System.Web.Security.SqlMembershipProvider> class as specified in the configuration for the application. This constructor is not intended to be used from your code.\n  syntax:\n    content: public SqlMembershipProvider ();\n    parameters: []\n  overload: System.Web.Security.SqlMembershipProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.ApplicationName\n  id: ApplicationName\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: SqlMembershipProvider.ApplicationName\n  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets or sets the name of the application to store and retrieve membership information for.\n  remarks: \"The ApplicationName is used by the <xref:System.Web.Security.SqlMembershipProvider> to group user information. By qualifying user information with an application name, you can store information for multiple applications in a single database without running into conflicts between duplicate user names. Also, multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property. The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application with the `applicationName` attribute.  \\n  \\n If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value for the first request made to the application is used.  \\n  \\n> [!CAUTION]\\n>  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code to allow users to set the ApplicationName property unless you must. An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"true\\\"  \\n      enablePasswordReset=\\\"false\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Encrypted\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: The name of the application to store and retrieve membership information for. The default is the <xref:System.Web.HttpRequest.ApplicationPath*> property value for the current <xref:System.Web.HttpContext.Request*>.\n  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt was made to set the ApplicationName property to an empty string or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: An attempt was made to set the ApplicationName property to a string that is longer than 256 characters.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)\n  id: ChangePassword(System.String,System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: ChangePassword(String,String,String)\n  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Modifies a user's password.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to update the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n The maximum password length is 128 characters.  \\n  \\n If an incorrect password is supplied to the ChangePassword method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \\n  \\n You can call the ChangePassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The <xref:System.Web.Security.Membership.Provider%2A> property exposes the `defaultProvider` specified in the Web.config file for the application. Configured providers that are not the default provider referenced using the <xref:System.Web.Security.Membership.Providers%2A> property.  \\n  \\n You can also change user passwords by using the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example modifies the password for the specified user.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/csharp/baafd90e-fc24-4306-ac18-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/visualbasic/baafd90e-fc24-4306-ac18-_1.aspx)]\"\n  syntax:\n    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to update the password for.\n    - id: oldPassword\n      type: System.String\n      description: The current password for the specified user.\n    - id: newPassword\n      type: System.String\n      description: The new password for the specified user.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the password was updated successfully. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.\n  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>username</code> is an empty string (\\\"\\\"), contains a comma, or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>oldPassword</code> is an empty string or longer than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>newPassword</code> is an empty string or longer than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n The encoded version of <code>newPassword</code> is greater than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n The change-password action was canceled by a subscriber to the <xref href=\\\"System.Web.Security.Membership.ValidatingPassword\\\"></xref> event, and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The length of <code>newPassword</code> is less than the minimum length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*> property.  \\n  \\n \\\\- or -  \\n  \\n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*> property.  \\n  \\n \\\\- or -  \\n  \\n <code>newPassword</code> does not pass the regular expression defined in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*> property.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>username</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>oldPassword</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>newPassword</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Web.Security.MembershipPasswordException\n    commentId: T:System.Web.Security.MembershipPasswordException\n    description: <code>username</code> was not found in the database.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: An error occurred while setting the new password value at the database.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An unhandled exception occurred.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: ChangePasswordQuestionAndAnswer(String,String,String,String)\n  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Updates the password question and answer for a user in the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.MembershipUser> class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config). The password answer is encrypted using the format that is specified in the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property.  \\n  \\n Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. The ChangePasswordQuestionAndAnswer method updates the password question and answer for a membership user.  \\n  \\n If an incorrect password is supplied to the ChangePasswordQuestionAndAnswer method, the internal counters that track invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by calling the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \\n  \\n The maximum length for the password question is 256 characters. The maximum length for the password answer is 128 characters.  \\n  \\n For more information, see <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>, and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example updates the password question and answer for a user.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/csharp/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/visualbasic/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\"\n  syntax:\n    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to change the password question and answer for.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    - id: newPasswordQuestion\n      type: System.String\n      description: The new password question for the specified user.\n    - id: newPasswordAnswer\n      type: System.String\n      description: The new password answer for the specified user.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the update was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the <code>password</code> is incorrect, the user is locked out, or the user does not exist in the database.\n  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>username</code> is an empty string (\\\"\\\"), contains a comma, or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>password</code> is an empty string or is longer than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>username</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>password</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>newPasswordQuestion</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>newPasswordAnswer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: An error occurred when changing the password question and answer in the database.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Adds a new user to the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to create a new user in the SQL Server database specified in the ASP.NET application's configuration file.  \\n  \\n New users are identified with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true`, and `null` or an empty string (\\\"\\\") is specified for the `email` parameter, the user creation will fail. The user creation will also fail if the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true` and the value specified for the `email` parameter is a duplicate of the e-mail address for an existing user in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n The maximum length for the user name is 256 characters. The maximum length for the e-mail address is 256 characters. The maximum length for the password in clear text or after it has been hashed or encrypted is 128 characters.  \\n  \\n Other conditions that will cause user creation to fail:  \\n  \\n-   The `password` parameter is `null`, or an empty string after trimming.  \\n  \\n-   The length of the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.  \\n  \\n-   The number of non-alphabetic characters in the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property.  \\n  \\n-   The `password` parameter does not pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property.  \\n  \\n-   Custom password-validation code canceled user creation during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.  \\n  \\n-   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the `passwordAnswer` parameter is either `null` or an empty string after trimming.  \\n  \\n-   The `passwordAnswer` parameter is an empty string.  \\n  \\n-   The `passwordAnswer` parameter is longer than 128 characters.  \\n  \\n-   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the password question is either `null` or an empty string after trimming.  \\n  \\n-   The `passwordQuestion` parameter is an empty string.  \\n  \\n-   The `passwordQuestion` parameter is longer than 256 characters.  \\n  \\n-   The `providerUserKey` parameter set to an object of a type other than <xref:System.Guid?displayProperty=fullName>.  \\n  \\n-   The `providerUserKey` parameter is a duplicate of an existing user key.  \\n  \\n-   The `username` parameter is a duplicate of an existing user name.  \\n  \\n Leading and trailing spaces are trimmed from all string parameter values.\"\n  example:\n  - \"The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \\n  \\n> [!NOTE]\\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\"\n  syntax:\n    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    - id: email\n      type: System.String\n      description: The e-mail address for the new user.\n    - id: passwordQuestion\n      type: System.String\n      description: The password question for the new user.\n    - id: passwordAnswer\n      type: System.String\n      description: The password answer for the new user.\n    - id: isApproved\n      type: System.Boolean\n      description: Whether or not the new user is approved to be validated.\n    - id: providerUserKey\n      type: System.Object\n      description: A <xref:System.Guid> that uniquely identifies the membership user in the SQL Server database.\n    - id: status\n      type: System.Web.Security.MembershipCreateStatus\n      description: One of the <xref:System.Web.Security.MembershipCreateStatus> values, indicating whether the user was created successfully.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.CreateUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)\n  id: DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: DeleteUser(String,Boolean)\n  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Removes a user's membership information from the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to remove a user from the SQL Server database specified in the ASP.NET application's configuration file.  \\n  \\n Deleted users are only deleted from the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n If `deleteAllRelatedData` is set to `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features is also deleted for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n If the membership user does not exist in the database, and `deleteAllRelatedData` is `true`, then the related data and the user information stored for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features will still be deleted for the application specified in the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property. As a result, the DeleteUser method can be used for quickly deleting information related to a user, even when the <xref:System.Web.Security.SqlMembershipProvider> object is not used for storing authenticated user information.  \\n  \\n Leading and trailing spaces are trimmed from the `username` parameter value.\"\n  example:\n  - \"The following code example deletes the currently logged-on user.  \\n  \\n> [!NOTE]\\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/808bac53-4bf1-477e-8865-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/808bac53-4bf1-477e-8865-_1.aspx)]\"\n  syntax:\n    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to delete.\n    - id: deleteAllRelatedData\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to delete data related to the user from the database; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to leave data related to the user in the database.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.\n  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset\n  id: EnablePasswordReset\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: EnablePasswordReset\n  nameWithType: SqlMembershipProvider.EnablePasswordReset\n  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.\n  remarks: Password reset allows the membership provider to replace the current password for a user name with a new, randomly generated password. This is especially useful when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override bool EnablePasswordReset { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval\n  id: EnablePasswordRetrieval\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: EnablePasswordRetrieval\n  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval\n  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.\n  remarks: \"If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, a user will not be able to retrieve his or her existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values. Passwords are hashed with a randomly generated salt value and compared to values stored in the database for authentication. Hashed values cannot be unencoded to retrieve the original password value.  \\n  \\n If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and EnablePasswordRetrieval is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"true\\\"  \\n      enablePasswordReset=\\\"false\\\"  \\n      requiresQuestionAndAnswer=\\\"false\\\"  \\n      passwordFormat=\\\"Encrypted\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override bool EnablePasswordRetrieval { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: FindUsersByEmail(String,Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.\n  remarks: \"FindUsersByEmail returns a list of membership users in which the e-mail address contains a match with the supplied `emailToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `emailToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included in the parameter value. For example, if the `emailToMatch` parameter is set to \\\"address@example.com\\\", then information for users with the e-mail address \\\"address@example.com\\\" is returned, if it exists. If the `emailToMatch` parameter is set to \\\"%@example.com\\\", then information for users with the e-mail address \\\"address@example.com\\\", \\\"address2@example.com\\\", \\\"admin@example.com\\\", and so on is returned.  \\n  \\n The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through tenth users returned. The `totalRecords` parameter would be set to 13.  \\n  \\n Leading and trailing spaces are trimmed from the `emailToMatch` parameter value.\"\n  example:\n  - \"The following code example uses the FindUsersByEmail method to retrieve membership user information and displays the results in pages of data.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/2e443224-e510-47e7-9af2-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/2e443224-e510-47e7-9af2-_1.aspx)]\"\n  syntax:\n    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: emailToMatch\n      type: System.String\n      description: The e-mail address to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>emailToMatch</code> is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>pageSize</code> is less than one.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;.\"\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: FindUsersByName(String,Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users where the user name contains the specified user name to match.\n  remarks: \"FindUsersByName returns a list of membership users for which the user name contains a match with the supplied `usernameToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `usernameToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included with the parameter value. For example, if the `usernameToMatch` parameter is set to \\\"user1\\\", then user information for the user with the user name of \\\"user1\\\" is returned, if it exists. If the `usernameToMatch` parameter is set to \\\"user%\\\", then user information for users with the user name of \\\"user1\\\", \\\"user2\\\", \\\"user_admin\\\", and so on are returned.  \\n  \\n The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13.  \\n  \\n Leading and trailing spaces are trimmed from the `usernameToMatch` parameter value.\"\n  example:\n  - \"The following code example uses the FindUsersByName method to retrieve membership user information and displays the results in pages of data.  \\n  \\n> [!NOTE]\\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/492b000d-1abf-495e-82ba-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/492b000d-1abf-495e-82ba-_1.aspx)]\"\n  syntax:\n    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: usernameToMatch\n      type: System.String\n      description: The user name to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: When this method returns, contains the total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>usernameToMatch</code> is an empty string (\\\"\\\") or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>pageSize</code> is less than 1.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword\n  id: GeneratePassword\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GeneratePassword()\n  nameWithType: SqlMembershipProvider.GeneratePassword()\n  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Generates a random password that is at least 14 characters long.\n  remarks: \"The <xref:System.Web.Security.Membership> class provides a <xref:System.Web.Security.Membership.GeneratePassword%2A> method, which generates a password of a specified size with at least the specified number of non-alphabetic characters. The GeneratePassword method of the <xref:System.Web.Security.SqlMembershipProvider> calls the <xref:System.Web.Security.Membership.GeneratePassword%2A> method of the <xref:System.Web.Security.Membership> class to retrieve a random password that is at least 14 characters long. If the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property is greater than 14, the password returned will be the length specified in the  <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.  \\n  \\n You can specifically call the GeneratePassword method by referencing the <xref:System.Web.Security.SqlMembershipProvider> class directly from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.  \\n  \\n The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.  \\n  \\n> [!NOTE]\\n>  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties.\"\n  example:\n  - \"The following code example generates a random 10-character password.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/csharp/m-system.web.security.sq_2_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/visualbasic/m-system.web.security.sq_2_1.aspx)]\"\n  syntax:\n    content: public virtual string GeneratePassword ();\n    parameters: []\n    return:\n      type: System.String\n      description: A random password that is at least 14 characters long.\n  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetAllUsers(Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of all the users in the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13.\"\n  example:\n  - \"The following code example returns a list of users in pages of data with a count of the number of users currently online.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/f02da845-c892-4dcc-aa15-_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/f02da845-c892-4dcc-aa15-_1.aspx)]\"\n  syntax:\n    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all the users in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>.\n  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>pageIndex</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>pageSize</code> is less than one.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;.\"\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline\n  id: GetNumberOfUsersOnline\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetNumberOfUsersOnline()\n  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()\n  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Returns the number of users currently accessing the application.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n GetNumberOfUsersOnline returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property in minutes.  \\n  \\n Only users associated with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> are included in the count.\"\n  example:\n  - \"The following code example returns a list of users with a count of the users currently online.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.sq_3_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.sq_3_1.aspx)]\"\n  syntax:\n    content: public override int GetNumberOfUsersOnline ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of users currently accessing the application.\n  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)\n  id: GetPassword(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetPassword(String,String)\n  nameWithType: SqlMembershipProvider.GetPassword(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Returns the password for the specified user name from the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.MembershipUser> class to retrieve the password for a user from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n If an incorrect password answer is supplied to the GetPassword method, the internal counter that tracks invalid password-answer attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \\n  \\n You can call the GetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.  \\n  \\n If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, the GetPassword method cannot retrieve the password. Hashed passwords are encrypted one-way and cannot be decrypted. If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat>, and <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \\n  \\n> [!NOTE]\\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \\n  \\n> [!NOTE]\\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/66916cd5-cd17-4858-8835-_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/66916cd5-cd17-4858-8835-_1.aspx)]\"\n  syntax:\n    content: public override string GetPassword (string username, string passwordAnswer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to retrieve the password for.\n    - id: passwordAnswer\n      type: System.String\n      description: The password answer for the user.\n    return:\n      type: System.String\n      description: The password for the specified user name.\n  overload: System.Web.Security.SqlMembershipProvider.GetPassword*\n  exceptions:\n  - type: System.Web.Security.MembershipPasswordException\n    commentId: T:System.Web.Security.MembershipPasswordException\n    description: \"<code>passwordAnswer</code> is invalid.  \\n  \\n \\\\- or -  \\n  \\n The membership user identified by <code>username</code> is locked out.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: \"<code>username</code> is not found in the membership database.  \\n  \\n \\\\- or -  \\n  \\n An error occurred while retrieving the password from the database.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"One of the parameter values exceeds the maximum allowed length.  \\n  \\n \\\\- or -  \\n  \\n <code>username</code> is an empty string (\\\"\\\"), contains a comma, or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is greater than 128 characters.  \\n  \\n \\\\- or -  \\n  \\n The encoded version of <code>passwordAnswer</code> is greater than 128 characters.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>username</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)\n  id: GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetUser(Object,Boolean)\n  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.\n  remarks: <xref:System.Web.Security.Membership.GetUser%2A> retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier specified with the `providerUserKey` parameter.\n  syntax:\n    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);\n    parameters:\n    - id: providerUserKey\n      type: System.Object\n      description: The unique identifier for the user.\n    - id: userIsOnline\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to update the last-activity date/time stamp for the specified user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <code>providerUserKey</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Web.Security.SqlMembershipProvider.GetUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>providerUserKey</code> is not of type <xref:System.Guid>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)\n  id: GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetUser(String,Boolean)\n  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n If `userIsOnline` is `true`, the last activity date/time stamp for the user is updated to the current date and time. This is reflected in the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> and <xref:System.Web.Security.MembershipUser.IsOnline%2A> properties and in the value returned by <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  \\n  \\n Leading and trailing spaces are trimmed from the `username` parameter value.\"\n  example:\n  - \"The following code example uses the GetUser method to determine whether a user exists before retrieving the password for the user.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/08039896-5b29-4285-9a5a-_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/08039896-5b29-4285-9a5a-_1.aspx)]\"\n  syntax:\n    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to get information for.\n    - id: userIsOnline\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to update the last activity date/time stamp for the user; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return user information without updating the last activity date/time stamp for the user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the specified user. If no user is found in the database for the specified <code>username</code> value, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Web.Security.SqlMembershipProvider.GetUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>username</code> exceeds 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>username</code> contains a comma.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)\n  id: GetUserNameByEmail(System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: GetUserNameByEmail(String)\n  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the user name associated with the specified e-mail address.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class with an e-mail address, which it uses to retrieve an associated user name from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n If more than one user in the membership database has the same e-mail address, the first user name encountered is returned. You can set the `requiresUniqueEmail` attribute to `true` in the application-configuration file to ensure that each e-mail address in the database is unique.  \\n  \\n Leading and trailing spaces are trimmed from the `email` parameter value.\"\n  example:\n  - \"The following code example retrieves the user name for a specified e-mail address.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.sq_7_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.sq_7_1.aspx)]\"\n  syntax:\n    content: public override string GetUserNameByEmail (string email);\n    parameters:\n    - id: email\n      type: System.String\n      description: The e-mail address to search for.\n    return:\n      type: System.String\n      description: The user name associated with the specified e-mail address. If no match is found, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>email</code> exceeds 256 characters.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: More than one user with the same e-mail address exists in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.\n  remarks: This method initializes the <xref:System.Web.Security.SqlMembershipProvider> with the property values specified in the ASP.NET application configuration file (Web.config) and is not intended to be used directly from your code.\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance to initialize.\n    - id: config\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that contains the names and values of configuration options for the membership provider.\n  overload: System.Web.Security.SqlMembershipProvider.Initialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>config</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: \"The <xref uid=\\\"langword_csharp_enablePasswordRetrieval\\\" name=\\\"enablePasswordRetrieval\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_enablePasswordReset\\\" name=\\\"enablePasswordReset\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_requiresQuestionAndAnswer\\\" name=\\\"requiresQuestionAndAnswer\\\" href=\\\"\\\"></xref>, or <xref uid=\\\"langword_csharp_requiresUniqueEmail\\\" name=\\\"requiresUniqueEmail\\\" href=\\\"\\\"></xref> attribute is set to a value other than a <xref uid=\\\"langword_csharp_Boolean\\\" name=\\\"Boolean\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_maxInvalidPasswordAttempts\\\" name=\\\"maxInvalidPasswordAttempts\\\" href=\\\"\\\"></xref> or the <xref uid=\\\"langword_csharp_passwordAttemptWindow\\\" name=\\\"passwordAttemptWindow\\\" href=\\\"\\\"></xref> attribute is set to a value other than a positive integer.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_minRequiredPasswordLength\\\" name=\\\"minRequiredPasswordLength\\\" href=\\\"\\\"></xref> attribute is set to a value other than a positive integer, or the value is greater than 128.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_minRequiredNonalphanumericCharacters\\\" name=\\\"minRequiredNonalphanumericCharacters\\\" href=\\\"\\\"></xref> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \\n  \\n \\\\- or -  \\n  \\n The value for the <xref uid=\\\"langword_csharp_passwordStrengthRegularExpression\\\" name=\\\"passwordStrengthRegularExpression\\\" href=\\\"\\\"></xref> attribute is not a valid regular expression.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_applicationName\\\" name=\\\"applicationName\\\" href=\\\"\\\"></xref> attribute is set to a value that is greater than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_passwordFormat\\\" name=\\\"passwordFormat\\\" href=\\\"\\\"></xref> attribute specified in the application configuration file is an invalid <xref:System.Web.Security.MembershipPasswordFormat> enumeration.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_passwordFormat\\\" name=\\\"passwordFormat\\\" href=\\\"\\\"></xref> attribute is set to <xref:System.Web.Security.MembershipPasswordFormat> and the <xref uid=\\\"langword_csharp_enablePasswordRetrieval\\\" name=\\\"enablePasswordRetrieval\\\" href=\\\"\\\"></xref> attribute is set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> in the application configuration.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_passwordFormat\\\" name=\\\"passwordFormat\\\" href=\\\"\\\"></xref> attribute is set to <xref uid=\\\"langword_csharp_Encrypted\\\" name=\\\"Encrypted\\\" href=\\\"\\\"></xref> and the  configuration element specifies <xref uid=\\\"langword_csharp_AutoGenerate\\\" name=\\\"AutoGenerate\\\" href=\\\"\\\"></xref> for the <xref uid=\\\"langword_csharp_decryptionKey\\\" name=\\\"decryptionKey\\\" href=\\\"\\\"></xref> attribute.  \\n  \\n \\\\- or -  \\n  \\n The <xref uid=\\\"langword_csharp_connectionStringName\\\" name=\\\"connectionStringName\\\" href=\\\"\\\"></xref> attribute is empty or does not exist in the application configuration.  \\n  \\n \\\\- or -  \\n  \\n The value of the connection string for the <xref uid=\\\"langword_csharp_connectionStringName\\\" name=\\\"connectionStringName\\\" href=\\\"\\\"></xref> attribute value is empty, or the specified <xref uid=\\\"langword_csharp_connectionStringName\\\" name=\\\"connectionStringName\\\" href=\\\"\\\"></xref> does not exist in the application configuration file.  \\n  \\n \\\\- or -  \\n  \\n The value for the <xref uid=\\\"langword_csharp_commandTimeout\\\" name=\\\"commandTimeout\\\" href=\\\"\\\"></xref> attribute is set to a value other than zero or a positive integer.  \\n  \\n \\\\- or -  \\n  \\n The application configuration file for this <xref href=\\\"System.Web.Security.SqlMembershipProvider\\\"></xref> instance contains an unrecognized attribute.\"\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The current trust level is less than <xref uid=\"langword_csharp_Low\" name=\"Low\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The provider has already been initialized prior to the current call to the Initialize method.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts\n  id: MaxInvalidPasswordAttempts\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: MaxInvalidPasswordAttempts\n  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts\n  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  remarks: \"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property within the number of minutes identified by the value of the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked with the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counters that track the number of invalid password and password-answer attempts are reset to zero. If a valid password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, only the counter that tracks the number of invalid password-answer attempts is reset to zero.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> keeps counts of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.  \\n  \\n The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration section.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"   \\n  userIsOnlineTimeWindow=\\\"20\\\">  \\n    <providers>  \\n      <add name=\\\"SqlProvider\\\"  \\n        type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n        connectionStringName=\\\"SqlServices\\\"  \\n        requiresQuestionAndAnswer=\\\"true\\\"  \\n        maxInvalidPasswordAttempts=\\\"5\\\"  \\n        passwordAttemptWindow=\\\"30\\\"  \\n        applicationName=\\\"MyApplication\\\" />  \\n    </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override int MaxInvalidPasswordAttempts { get; }\n    return:\n      type: System.Int32\n      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  id: MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the minimum number of special characters that must be present in a valid password.\n  remarks: \"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.  \\n  \\n The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.  \\n  \\n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20\\\">  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      minRequiredNonalphanumericCharacters=\\\"1\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override int MinRequiredNonAlphanumericCharacters { get; }\n    return:\n      type: System.Int32\n      description: The minimum number of special characters that must be present in a valid password.\n  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\n  id: MinRequiredPasswordLength\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: MinRequiredPasswordLength\n  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength\n  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the minimum length required for a password.\n  remarks: \"MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.  \\n  \\n The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20\\\">  \\n    <providers>  \\n      <add  \\n        name=\\\"SqlProvider\\\"  \\n        type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n        connectionStringName=\\\"SqlServices\\\"  \\n        requiresQuestionAndAnswer=\\\"true\\\"  \\n        minRequiredPasswordLength=\\\"7\\\"  \\n        />  \\n    </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override int MinRequiredPasswordLength { get; }\n    return:\n      type: System.Int32\n      description: The minimum length required for a password.\n  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow\n  id: PasswordAttemptWindow\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: PasswordAttemptWindow\n  nameWithType: SqlMembershipProvider.PasswordAttemptWindow\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.\n  remarks: \"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or the password answer of a membership user through repeated attempts. When users are attempting to log in, change their password, or reset their password, only a certain number of consecutive attempts are allowed within a specified time window. The length of the time window is specified by the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts. If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified for the PasswordAttemptWindow property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true`. The user can be unlocked by calling the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to zero. If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to zero.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> keeps count of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.  \\n  \\n The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property value is set in the application configuration using the `passwordAttemptWindow` attribute of the  configuration section.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"   \\n  userIsOnlineTimeWindow=\\\"20\\\">  \\n    <providers>  \\n      <add name=\\\"SqlProvider\\\"  \\n        type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n        connectionStringName=\\\"SqlServices\\\"  \\n        requiresQuestionAndAnswer=\\\"true\\\"  \\n        maxInvalidPasswordAttempts=\\\"5\\\"  \\n        passwordAttemptWindow=\\\"30\\\"  \\n        applicationName=\\\"MyApplication\\\" />  \\n    </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override int PasswordAttemptWindow { get; }\n    return:\n      type: System.Int32\n      description: The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.\n  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat\n  id: PasswordFormat\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: PasswordFormat\n  nameWithType: SqlMembershipProvider.PasswordFormat\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating the format for storing passwords in the SQL Server membership database.\n  remarks: \"Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  \\n  \\n The PasswordFormat value is specified in the  section of the Web.config file for the ASP.NET application.  \\n  \\n `Encrypted` and `Hashed` passwords are encrypted or hashed by default based on information supplied in the  element in your configuration. Note that if you specify a value of `3DES` for the `validation` attribute, or if no value is specified, hashed passwords will be hashed using the <xref:System.Security.Cryptography.SHA1> algorithm.  \\n  \\n A custom hash algorithm can be defined using the `hashAlgorithmType` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element. If you choose encryption, default password encryption uses AES. You can change the encryption algorithm by setting the `decryption` attribute of the  configuration element. If you are encrypting passwords, you must provide an explicit value for the `decryptionKey` attribute in the  element. The default value of `AutoGenerate` for the `decryptionKey` attribute is not supported when using encrypted passwords with ASP.NET Membership.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }\n    return:\n      type: System.Web.Security.MembershipPasswordFormat\n      description: One of the <xref:System.Web.Security.MembershipPasswordFormat> values, indicating the format for storing passwords in the SQL Server database.\n  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\n  id: PasswordStrengthRegularExpression\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: PasswordStrengthRegularExpression\n  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the regular expression used to evaluate a password.\n  remarks: \"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.SqlMembershipProvider> object.  \\n  \\n The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \\n  \\n-   Is at least seven characters.  \\n  \\n-   Contains at least one digit.  \\n  \\n-   Contains at least one special (non-alphanumeric) character.  \\n  \\n If the password does not meet these criteria, the password is not accepted by the membership provider.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20\\\">  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordStrengthRegularExpression=\\\"@\\\\\\\"(?=.{6,})(?=(.*\\\\d){1,})(?=(.*\\\\W){1,})\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override string PasswordStrengthRegularExpression { get; }\n    return:\n      type: System.String\n      description: A regular expression used to evaluate a password.\n  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\n  id: RequiresQuestionAndAnswer\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: RequiresQuestionAndAnswer\n  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer\n  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.\n  remarks: \"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. If the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> property and the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> property are both `false`, the value of the RequiresQuestionAndAnswer property is irrelevant.  \\n  \\n For more information, see <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override bool RequiresQuestionAndAnswer { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a password answer is required for password reset and retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\n  id: RequiresUniqueEmail\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: RequiresUniqueEmail\n  nameWithType: SqlMembershipProvider.RequiresUniqueEmail\n  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the SQL Server membership provider is configured to require a unique e-mail address for each user name.\n  remarks: ''\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      requiresUniqueEmail=\\\"true\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public override bool RequiresUniqueEmail { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider requires a unique e-mail address; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)\n  id: ResetPassword(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: ResetPassword(String,String)\n  nameWithType: SqlMembershipProvider.ResetPassword(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Resets a user's password to a new, automatically generated password.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to reset the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config) to a new, randomly generated value. The new password is returned.  \\n  \\n> [!NOTE]\\n>  The random password created by the ResetPassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties.  \\n  \\n The ResetPassword method is most commonly used when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to `Hashed`. If a user forgets a password that is hashed, the password cannot be retrieved. However, the provider can reset the password to a new, automatically generated password if the user supplies the correct password answer.  \\n  \\n If an incorrect password answer is supplied to the ResetPassword method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \\n  \\n You can call the ResetPassword method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The generated password will be at least 14 characters long, or the length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property, and will contain the number of non-alphanumeric characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property. The password is not guaranteed to pass the regular expression contained in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property, if one is specified.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example resets a user's password and returns the new, automatically generated password.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\"\n  syntax:\n    content: public override string ResetPassword (string username, string passwordAnswer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to reset the password for.\n    - id: passwordAnswer\n      type: System.String\n      description: The password answer for the specified user.\n    return:\n      type: System.String\n      description: The new password for the specified user.\n  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*\n  exceptions:\n  - type: System.Web.Security.MembershipPasswordException\n    commentId: T:System.Web.Security.MembershipPasswordException\n    description: \"<code>passwordAnswer</code> is invalid.  \\n  \\n \\\\- or -  \\n  \\n The user account is currently locked.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: \"<code>username</code> is not found in the membership database.  \\n  \\n \\\\- or -  \\n  \\n The change password action was canceled by a subscriber to the <xref href=\\\"System.Web.Security.Membership.ValidatingPassword\\\"></xref> event and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n An error occurred while retrieving the password from the database.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>username</code> is an empty string (\\\"\\\"), contains a comma, or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is longer than 128 characters after encoding.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>username</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>passwordAnswer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An unhandled exception occurred.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)\n  id: UnlockUser(System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: UnlockUser(String)\n  nameWithType: SqlMembershipProvider.UnlockUser(String)\n  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Clears the user's locked-out status so that the membership user can be validated.\n  remarks: \"Users are most commonly locked out and cannot be validated by the <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> method when the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> is exceeded within the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  \\n  \\n Leading and trailing spaces are trimmed from the `username` parameter value.\"\n  syntax:\n    content: public override bool UnlockUser (string username);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the membership user to clear the locked-out status for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership user was successfully unlocked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.\n  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> is an empty string, is longer than 256 characters, or contains a comma.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  id: UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: UpdateUser(MembershipUser)\n  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)\n  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Updates information about a user in the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config). The <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, and <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property values are updated for the specified membership user.  \\n  \\n The maximum length for the <xref:System.Web.Security.MembershipUser.UserName%2A> property is 256 characters. The maximum length for the <xref:System.Web.Security.MembershipUser.Email%2A> property is 256 characters.  \\n  \\n The password for a membership user cannot be updated using the UpdateUser method. To update the password for a membership user, use the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method of the <xref:System.Web.Security.MembershipUser> class.\"\n  example:\n  - \"The following code example updates the e-mail address for a user.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/81f685ac-1799-4589-b9a2-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/81f685ac-1799-4589-b9a2-_1.aspx)]\"\n  syntax:\n    content: public override void UpdateUser (System.Web.Security.MembershipUser user);\n    parameters:\n    - id: user\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object that represents the user to update and the updated information for the user.\n  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>user</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is an empty string (\\\"\\\"), contains a comma, or is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is longer than 256 characters.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: \"The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> was not found in the database.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> was equal to an existing e-mail address in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to true.  \\n  \\n \\\\- or -  \\n  \\n The user update failed.\"\n  platform:\n  - net462\n- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)\n  id: ValidateUser(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  langs:\n  - csharp\n  name: ValidateUser(String,String)\n  nameWithType: SqlMembershipProvider.ValidateUser(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Verifies that the specified user name and password exist in the SQL Server membership database.\n  remarks: \"This method is called by the <xref:System.Web.Security.Membership> class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \\n  \\n When a user is successfully validated, the last activity date and last sign-in date values are updated to the current date and time in the database.  \\n  \\n If an incorrect password is supplied to the ValidateUser method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \\n  \\n> [!NOTE]\\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/12603449-9667-4437-88bc-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/12603449-9667-4437-88bc-_1.aspx)]\"\n  syntax:\n    content: public override bool ValidateUser (string username, string password);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to validate.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified username and password are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is also returned if the user does not exist in the database.\n  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: System.Web.Security.MembershipProvider\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.Provider.ProviderException\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderException\n  nameWithType: ProviderException\n  fullName: System.Configuration.Provider.ProviderException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Security.MembershipPasswordException\n  isExternal: true\n  name: System.Web.Security.MembershipPasswordException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.Security.SqlMembershipProvider.#ctor\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: SqlMembershipProvider()\n  nameWithType: SqlMembershipProvider.SqlMembershipProvider()\n  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()\n- uid: System.Web.Security.SqlMembershipProvider.ApplicationName\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: SqlMembershipProvider.ApplicationName\n  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ChangePassword(String,String,String)\n  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ChangePasswordQuestionAndAnswer(String,String,String,String)\n  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)\n- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n- uid: System.Web.Security.MembershipUser\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipUser\n  nameWithType: MembershipUser\n  fullName: System.Web.Security.MembershipUser\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Security.MembershipCreateStatus\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipCreateStatus\n  nameWithType: MembershipCreateStatus\n  fullName: System.Web.Security.MembershipCreateStatus\n- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: DeleteUser(String,Boolean)\n  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: SqlMembershipProvider.EnablePasswordReset\n  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval\n  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: FindUsersByEmail(String,Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)\n- uid: System.Web.Security.MembershipUserCollection\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipUserCollection\n  nameWithType: MembershipUserCollection\n  fullName: System.Web.Security.MembershipUserCollection\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: FindUsersByName(String,Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)\n- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GeneratePassword()\n  nameWithType: SqlMembershipProvider.GeneratePassword()\n  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()\n- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetAllUsers(Int32,Int32,Int32)\n  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)\n  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)\n- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetNumberOfUsersOnline()\n  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()\n  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()\n- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetPassword(String,String)\n  nameWithType: SqlMembershipProvider.GetPassword(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)\n- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetUser(Object,Boolean)\n  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)\n- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetUser(String,Boolean)\n  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)\n- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetUserNameByEmail(String)\n  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)\n  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)\n- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts\n  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength\n  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\n- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: SqlMembershipProvider.PasswordAttemptWindow\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow\n- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordFormat\n  nameWithType: SqlMembershipProvider.PasswordFormat\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat\n- uid: System.Web.Security.MembershipPasswordFormat\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipPasswordFormat\n  nameWithType: MembershipPasswordFormat\n  fullName: System.Web.Security.MembershipPasswordFormat\n- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression\n  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\n- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer\n  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\n- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: RequiresUniqueEmail\n  nameWithType: SqlMembershipProvider.RequiresUniqueEmail\n  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\n- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ResetPassword(String,String)\n  nameWithType: SqlMembershipProvider.ResetPassword(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)\n- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: UnlockUser(String)\n  nameWithType: SqlMembershipProvider.UnlockUser(String)\n  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)\n- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: UpdateUser(MembershipUser)\n  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)\n  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)\n- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ValidateUser(String,String)\n  nameWithType: SqlMembershipProvider.ValidateUser(String,String)\n  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)\n- uid: System.Web.Security.SqlMembershipProvider.#ctor*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: SqlMembershipProvider\n  nameWithType: SqlMembershipProvider.SqlMembershipProvider\n- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: SqlMembershipProvider.ApplicationName\n- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ChangePassword\n  nameWithType: SqlMembershipProvider.ChangePassword\n- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ChangePasswordQuestionAndAnswer\n  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer\n- uid: System.Web.Security.SqlMembershipProvider.CreateUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: CreateUser\n  nameWithType: SqlMembershipProvider.CreateUser\n- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: DeleteUser\n  nameWithType: SqlMembershipProvider.DeleteUser\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: SqlMembershipProvider.EnablePasswordReset\n- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: FindUsersByEmail\n  nameWithType: SqlMembershipProvider.FindUsersByEmail\n- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: FindUsersByName\n  nameWithType: SqlMembershipProvider.FindUsersByName\n- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GeneratePassword\n  nameWithType: SqlMembershipProvider.GeneratePassword\n- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetAllUsers\n  nameWithType: SqlMembershipProvider.GetAllUsers\n- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetNumberOfUsersOnline\n  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline\n- uid: System.Web.Security.SqlMembershipProvider.GetPassword*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetPassword\n  nameWithType: SqlMembershipProvider.GetPassword\n- uid: System.Web.Security.SqlMembershipProvider.GetUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetUser\n  nameWithType: SqlMembershipProvider.GetUser\n- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: GetUserNameByEmail\n  nameWithType: SqlMembershipProvider.GetUserNameByEmail\n- uid: System.Web.Security.SqlMembershipProvider.Initialize*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: SqlMembershipProvider.Initialize\n- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\n- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength\n- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: SqlMembershipProvider.PasswordAttemptWindow\n- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordFormat\n  nameWithType: SqlMembershipProvider.PasswordFormat\n- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression\n- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer\n- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: RequiresUniqueEmail\n  nameWithType: SqlMembershipProvider.RequiresUniqueEmail\n- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ResetPassword\n  nameWithType: SqlMembershipProvider.ResetPassword\n- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: UnlockUser\n  nameWithType: SqlMembershipProvider.UnlockUser\n- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: UpdateUser\n  nameWithType: SqlMembershipProvider.UpdateUser\n- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*\n  parent: System.Web.Security.SqlMembershipProvider\n  isExternal: false\n  name: ValidateUser\n  nameWithType: SqlMembershipProvider.ValidateUser\n"}