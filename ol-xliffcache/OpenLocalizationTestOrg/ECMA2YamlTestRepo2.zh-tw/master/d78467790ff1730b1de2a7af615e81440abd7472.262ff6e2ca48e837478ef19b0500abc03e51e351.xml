{"nodes":[{"pos":[5513,5525],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6173,6185],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7051,7063],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7140,7152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7881,7893],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7970,7982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9228,9240],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9303,9315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10102,10114],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10178,10190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10242,10254],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11066,11078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11143,11155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11207,11219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12005,12017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12081,12093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12871,12883],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13574,13586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13649,13661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14261,14273],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14870,14882],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15517,15529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16697,16709],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17473,17485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17548,17560],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17626,17638],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18233,18245],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18937,18949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19709,19721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19797,19809],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20671,20683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21553,21565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21656,21668],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21746,21758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22353,22365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22984,22996],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24183,24195],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24802,24814],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26458,26470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27317,27329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27420,27432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27489,27501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28411,28423],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28514,28526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28613,28625],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29690,29702],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29788,29800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29891,29903],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29990,30002],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30789,30801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30870,30882],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30939,30951],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31775,31787],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31856,31868],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31955,31967],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33013,33025],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33095,33107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33193,33205],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33274,33286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33372,33384],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34099,34111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34816,34828],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34886,34898],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35538,35550],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35606,35618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36338,36350],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36425,36437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37301,37313],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37388,37400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37486,37498],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38434,38446],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38568,38580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39670,39682],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39804,39816],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39902,39914],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40582,40594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41275,41287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41884,41896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42508,42520],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43379,43391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43475,43487],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44263,44275],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44338,44350],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44917,44929],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45602,45614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45671,45683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46422,46434],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46491,46503],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47079,47091],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47807,47819],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47906,47918],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48915,48927],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48997,49009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49095,49107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49193,49205],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49995,50007],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50069,50081],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50140,50152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectContext\n  id: ObjectContext\n  children:\n  - System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)\n  - System.Data.Objects.ObjectContext.#ctor(System.String)\n  - System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)\n  - System.Data.Objects.ObjectContext.#ctor(System.String,System.String)\n  - System.Data.Objects.ObjectContext.AcceptAllChanges\n  - System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)\n  - System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)\n  - System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)\n  - System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)\n  - System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)\n  - System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)\n  - System.Data.Objects.ObjectContext.CommandTimeout\n  - System.Data.Objects.ObjectContext.Connection\n  - System.Data.Objects.ObjectContext.ContextOptions\n  - System.Data.Objects.ObjectContext.CreateDatabase\n  - System.Data.Objects.ObjectContext.CreateDatabaseScript\n  - System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)\n  - System.Data.Objects.ObjectContext.CreateObject``1\n  - System.Data.Objects.ObjectContext.CreateObjectSet``1\n  - System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)\n  - System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})\n  - System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectContext.DatabaseExists\n  - System.Data.Objects.ObjectContext.DefaultContainerName\n  - System.Data.Objects.ObjectContext.DeleteDatabase\n  - System.Data.Objects.ObjectContext.DeleteObject(System.Object)\n  - System.Data.Objects.ObjectContext.Detach(System.Object)\n  - System.Data.Objects.ObjectContext.DetectChanges\n  - System.Data.Objects.ObjectContext.Dispose\n  - System.Data.Objects.ObjectContext.Dispose(System.Boolean)\n  - System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])\n  - System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])\n  - System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])\n  - System.Data.Objects.ObjectContext.GetKnownProxyTypes\n  - System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)\n  - System.Data.Objects.ObjectContext.GetObjectType(System.Type)\n  - System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)\n  - System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  - System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectContext.MetadataWorkspace\n  - System.Data.Objects.ObjectContext.ObjectMaterialized\n  - System.Data.Objects.ObjectContext.ObjectStateManager\n  - System.Data.Objects.ObjectContext.QueryProvider\n  - System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)\n  - System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)\n  - System.Data.Objects.ObjectContext.SaveChanges\n  - System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)\n  - System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)\n  - System.Data.Objects.ObjectContext.SavingChanges\n  - System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)\n  - System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)\n  langs:\n  - csharp\n  name: ObjectContext\n  nameWithType: ObjectContext\n  fullName: System.Data.Objects.ObjectContext\n  type: Class\n  syntax:\n    content: 'public class ObjectContext : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)\n  id: '#ctor(System.Data.EntityClient.EntityConnection)'\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectContext(EntityConnection)\n  nameWithType: ObjectContext.ObjectContext(EntityConnection)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(EntityConnection)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public ObjectContext (System.Data.EntityClient.EntityConnection connection);\n    parameters:\n    - id: connection\n      type: System.Data.EntityClient.EntityConnection\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectContext(String)\n  nameWithType: ObjectContext.ObjectContext(String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public ObjectContext (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)\n  id: '#ctor(System.Data.EntityClient.EntityConnection,System.String)'\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectContext(EntityConnection,String)\n  nameWithType: ObjectContext.ObjectContext(EntityConnection,String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(EntityConnection,String)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: protected ObjectContext (System.Data.EntityClient.EntityConnection connection, string defaultContainerName);\n    parameters:\n    - id: connection\n      type: System.Data.EntityClient.EntityConnection\n      description: To be added.\n    - id: defaultContainerName\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectContext(String,String)\n  nameWithType: ObjectContext.ObjectContext(String,String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(String,String)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: protected ObjectContext (string connectionString, string defaultContainerName);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: To be added.\n    - id: defaultContainerName\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.AcceptAllChanges\n  id: AcceptAllChanges\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: AcceptAllChanges()\n  nameWithType: ObjectContext.AcceptAllChanges()\n  fullName: System.Data.Objects.ObjectContext.AcceptAllChanges()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void AcceptAllChanges ();\n    parameters: []\n  overload: System.Data.Objects.ObjectContext.AcceptAllChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)\n  id: AddObject(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: AddObject(String,Object)\n  nameWithType: ObjectContext.AddObject(String,Object)\n  fullName: System.Data.Objects.ObjectContext.AddObject(String,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void AddObject (string entitySetName, object entity);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.AddObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)\n  id: ApplyCurrentValues``1(System.String,``0)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ApplyCurrentValues(String,TEntity)\n  nameWithType: ObjectContext.ApplyCurrentValues(String,TEntity)\n  fullName: System.Data.Objects.ObjectContext.ApplyCurrentValues(String,TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public TEntity ApplyCurrentValues<TEntity> (string entitySetName, TEntity currentEntity) where TEntity : class;'\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: currentEntity\n      type: TEntity\n      description: To be added.\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ApplyCurrentValues<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)\n  id: ApplyOriginalValues``1(System.String,``0)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ApplyOriginalValues(String,TEntity)\n  nameWithType: ObjectContext.ApplyOriginalValues(String,TEntity)\n  fullName: System.Data.Objects.ObjectContext.ApplyOriginalValues(String,TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public TEntity ApplyOriginalValues<TEntity> (string entitySetName, TEntity originalEntity) where TEntity : class;'\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: originalEntity\n      type: TEntity\n      description: To be added.\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ApplyOriginalValues<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)\n  id: ApplyPropertyChanges(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ApplyPropertyChanges(String,Object)\n  nameWithType: ObjectContext.ApplyPropertyChanges(String,Object)\n  fullName: System.Data.Objects.ObjectContext.ApplyPropertyChanges(String,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void ApplyPropertyChanges (string entitySetName, object changed);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: changed\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ApplyPropertyChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)\n  id: Attach(System.Data.Objects.DataClasses.IEntityWithKey)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Attach(IEntityWithKey)\n  nameWithType: ObjectContext.Attach(IEntityWithKey)\n  fullName: System.Data.Objects.ObjectContext.Attach(IEntityWithKey)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Attach (System.Data.Objects.DataClasses.IEntityWithKey entity);\n    parameters:\n    - id: entity\n      type: System.Data.Objects.DataClasses.IEntityWithKey\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)\n  id: AttachTo(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: AttachTo(String,Object)\n  nameWithType: ObjectContext.AttachTo(String,Object)\n  fullName: System.Data.Objects.ObjectContext.AttachTo(String,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void AttachTo (string entitySetName, object entity);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.AttachTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CommandTimeout\n  nameWithType: ObjectContext.CommandTimeout\n  fullName: System.Data.Objects.ObjectContext.CommandTimeout\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public Nullable<int> CommandTimeout { get; set; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CommandTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Connection\n  id: Connection\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: ObjectContext.Connection\n  fullName: System.Data.Objects.ObjectContext.Connection\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Common.DbConnection Connection { get; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Connection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ContextOptions\n  id: ContextOptions\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ContextOptions\n  nameWithType: ObjectContext.ContextOptions\n  fullName: System.Data.Objects.ObjectContext.ContextOptions\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectContextOptions ContextOptions { get; }\n    return:\n      type: System.Data.Objects.ObjectContextOptions\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ContextOptions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateDatabase\n  id: CreateDatabase\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateDatabase()\n  nameWithType: ObjectContext.CreateDatabase()\n  fullName: System.Data.Objects.ObjectContext.CreateDatabase()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void CreateDatabase ();\n    parameters: []\n  overload: System.Data.Objects.ObjectContext.CreateDatabase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateDatabaseScript\n  id: CreateDatabaseScript\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateDatabaseScript()\n  nameWithType: ObjectContext.CreateDatabaseScript()\n  fullName: System.Data.Objects.ObjectContext.CreateDatabaseScript()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public string CreateDatabaseScript ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateDatabaseScript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)\n  id: CreateEntityKey(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateEntityKey(String,Object)\n  nameWithType: ObjectContext.CreateEntityKey(String,Object)\n  fullName: System.Data.Objects.ObjectContext.CreateEntityKey(String,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.EntityKey CreateEntityKey (string entitySetName, object entity);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: entity\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Data.EntityKey\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateEntityKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateObject``1\n  id: CreateObject``1\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateObject()\n  nameWithType: ObjectContext.CreateObject()\n  fullName: System.Data.Objects.ObjectContext.CreateObject()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public T CreateObject<T> () where T : class;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateObject<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateObjectSet``1\n  id: CreateObjectSet``1\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateObjectSet()\n  nameWithType: ObjectContext.CreateObjectSet()\n  fullName: System.Data.Objects.ObjectContext.CreateObjectSet()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public System.Data.Objects.ObjectSet<TEntity> CreateObjectSet<TEntity> () where TEntity : class;'\n    parameters: []\n    return:\n      type: System.Data.Objects.ObjectSet`1\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateObjectSet<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)\n  id: CreateObjectSet``1(System.String)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateObjectSet(String)\n  nameWithType: ObjectContext.CreateObjectSet(String)\n  fullName: System.Data.Objects.ObjectContext.CreateObjectSet(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public System.Data.Objects.ObjectSet<TEntity> CreateObjectSet<TEntity> (string entitySetName) where TEntity : class;'\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectSet`1\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateObjectSet<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})\n  id: CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateProxyTypes(IEnumerable<Type>)\n  nameWithType: ObjectContext.CreateProxyTypes(IEnumerable<Type>)\n  fullName: System.Data.Objects.ObjectContext.CreateProxyTypes(IEnumerable<Type>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void CreateProxyTypes (System.Collections.Generic.IEnumerable<Type> types);\n    parameters:\n    - id: types\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateProxyTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])\n  id: CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: CreateQuery(String,ObjectParameter[])\n  nameWithType: ObjectContext.CreateQuery(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.CreateQuery(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> CreateQuery<T> (string queryString, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: queryString\n      type: System.String\n      description: To be added.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.CreateQuery<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.DatabaseExists\n  id: DatabaseExists\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: DatabaseExists()\n  nameWithType: ObjectContext.DatabaseExists()\n  fullName: System.Data.Objects.ObjectContext.DatabaseExists()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public bool DatabaseExists ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.DatabaseExists*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.DefaultContainerName\n  id: DefaultContainerName\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: DefaultContainerName\n  nameWithType: ObjectContext.DefaultContainerName\n  fullName: System.Data.Objects.ObjectContext.DefaultContainerName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public string DefaultContainerName { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.DefaultContainerName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.DeleteDatabase\n  id: DeleteDatabase\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: DeleteDatabase()\n  nameWithType: ObjectContext.DeleteDatabase()\n  fullName: System.Data.Objects.ObjectContext.DeleteDatabase()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void DeleteDatabase ();\n    parameters: []\n  overload: System.Data.Objects.ObjectContext.DeleteDatabase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.DeleteObject(System.Object)\n  id: DeleteObject(System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: DeleteObject(Object)\n  nameWithType: ObjectContext.DeleteObject(Object)\n  fullName: System.Data.Objects.ObjectContext.DeleteObject(Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void DeleteObject (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.DeleteObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Detach(System.Object)\n  id: Detach(System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Detach(Object)\n  nameWithType: ObjectContext.Detach(Object)\n  fullName: System.Data.Objects.ObjectContext.Detach(Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Detach (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Detach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.DetectChanges\n  id: DetectChanges\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: DetectChanges()\n  nameWithType: ObjectContext.DetectChanges()\n  fullName: System.Data.Objects.ObjectContext.DetectChanges()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void DetectChanges ();\n    parameters: []\n  overload: System.Data.Objects.ObjectContext.DetectChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Dispose\n  id: Dispose\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ObjectContext.Dispose()\n  fullName: System.Data.Objects.ObjectContext.Dispose()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Data.Objects.ObjectContext.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ObjectContext.Dispose(Boolean)\n  fullName: System.Data.Objects.ObjectContext.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])\n  id: ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteFunction(String,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public int ExecuteFunction (string functionName, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: functionName\n      type: System.String\n      description: To be added.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteFunction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])\n  id: ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteFunction(String,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TElement> ExecuteFunction<TElement> (string functionName, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: functionName\n      type: System.String\n      description: To be added.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TElement}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteFunction<TElement>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])\n  id: ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteFunction(String,MergeOption,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,MergeOption,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,MergeOption,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TElement> ExecuteFunction<TElement> (string functionName, System.Data.Objects.MergeOption mergeOption, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: functionName\n      type: System.String\n      description: To be added.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TElement}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteFunction<TElement>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])\n  id: ExecuteStoreCommand(System.String,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteStoreCommand(String,Object[])\n  nameWithType: ObjectContext.ExecuteStoreCommand(String,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreCommand(String,Object[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public int ExecuteStoreCommand (string commandText, object[] parameters);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: To be added.\n    - id: parameters\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteStoreCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])\n  id: ExecuteStoreQuery``1(System.String,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteStoreQuery(String,Object[])\n  nameWithType: ObjectContext.ExecuteStoreQuery(String,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreQuery(String,Object[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TElement> ExecuteStoreQuery<TElement> (string commandText, object[] parameters);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: To be added.\n    - id: parameters\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TElement}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteStoreQuery<TElement>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])\n  id: ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ExecuteStoreQuery(String,String,MergeOption,Object[])\n  nameWithType: ObjectContext.ExecuteStoreQuery(String,String,MergeOption,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreQuery(String,String,MergeOption,Object[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TEntity> ExecuteStoreQuery<TEntity> (string commandText, string entitySetName, System.Data.Objects.MergeOption mergeOption, object[] parameters);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: To be added.\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n    - id: parameters\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TEntity}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ExecuteStoreQuery<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.GetKnownProxyTypes\n  id: GetKnownProxyTypes\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: GetKnownProxyTypes()\n  nameWithType: ObjectContext.GetKnownProxyTypes()\n  fullName: System.Data.Objects.ObjectContext.GetKnownProxyTypes()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<Type> GetKnownProxyTypes ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.GetKnownProxyTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)\n  id: GetObjectByKey(System.Data.EntityKey)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: GetObjectByKey(EntityKey)\n  nameWithType: ObjectContext.GetObjectByKey(EntityKey)\n  fullName: System.Data.Objects.ObjectContext.GetObjectByKey(EntityKey)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public object GetObjectByKey (System.Data.EntityKey key);\n    parameters:\n    - id: key\n      type: System.Data.EntityKey\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.GetObjectByKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.GetObjectType(System.Type)\n  id: GetObjectType(System.Type)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: GetObjectType(Type)\n  nameWithType: ObjectContext.GetObjectType(Type)\n  fullName: System.Data.Objects.ObjectContext.GetObjectType(Type)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public static Type GetObjectType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: To be added.\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.GetObjectType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)\n  id: LoadProperty(System.Object,System.String)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: LoadProperty(Object,String)\n  nameWithType: ObjectContext.LoadProperty(Object,String)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(Object,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void LoadProperty (object entity, string navigationProperty);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    - id: navigationProperty\n      type: System.String\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.LoadProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)\n  id: LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: LoadProperty(Object,String,MergeOption)\n  nameWithType: ObjectContext.LoadProperty(Object,String,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(Object,String,MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void LoadProperty (object entity, string navigationProperty, System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    - id: navigationProperty\n      type: System.String\n      description: To be added.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.LoadProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  id: LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n  nameWithType: ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void LoadProperty<TEntity> (TEntity entity, System.Linq.Expressions.Expression<Func<TEntity,object>> selector);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.LoadProperty<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)\n  id: LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n  nameWithType: ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void LoadProperty<TEntity> (TEntity entity, System.Linq.Expressions.Expression<Func<TEntity,object>> selector, System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}\n      description: To be added.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.LoadProperty<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.MetadataWorkspace\n  id: MetadataWorkspace\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: MetadataWorkspace\n  nameWithType: ObjectContext.MetadataWorkspace\n  fullName: System.Data.Objects.ObjectContext.MetadataWorkspace\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }\n    return:\n      type: System.Data.Metadata.Edm.MetadataWorkspace\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.MetadataWorkspace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ObjectMaterialized\n  id: ObjectMaterialized\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectMaterialized\n  nameWithType: ObjectContext.ObjectMaterialized\n  fullName: System.Data.Objects.ObjectContext.ObjectMaterialized\n  type: Event\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public event System.Data.Objects.ObjectMaterializedEventHandler ObjectMaterialized;\n    return:\n      type: System.Data.Objects.ObjectMaterializedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.ObjectStateManager\n  id: ObjectStateManager\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: ObjectStateManager\n  nameWithType: ObjectContext.ObjectStateManager\n  fullName: System.Data.Objects.ObjectContext.ObjectStateManager\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectStateManager ObjectStateManager { get; }\n    return:\n      type: System.Data.Objects.ObjectStateManager\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.ObjectStateManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.QueryProvider\n  id: QueryProvider\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: QueryProvider\n  nameWithType: ObjectContext.QueryProvider\n  fullName: System.Data.Objects.ObjectContext.QueryProvider\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: protected System.Linq.IQueryProvider QueryProvider { get; }\n    return:\n      type: System.Linq.IQueryProvider\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.QueryProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)\n  id: Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Refresh(RefreshMode,IEnumerable)\n  nameWithType: ObjectContext.Refresh(RefreshMode,IEnumerable)\n  fullName: System.Data.Objects.ObjectContext.Refresh(RefreshMode,IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Refresh (System.Data.Objects.RefreshMode refreshMode, System.Collections.IEnumerable collection);\n    parameters:\n    - id: refreshMode\n      type: System.Data.Objects.RefreshMode\n      description: To be added.\n    - id: collection\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)\n  id: Refresh(System.Data.Objects.RefreshMode,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Refresh(RefreshMode,Object)\n  nameWithType: ObjectContext.Refresh(RefreshMode,Object)\n  fullName: System.Data.Objects.ObjectContext.Refresh(RefreshMode,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Refresh (System.Data.Objects.RefreshMode refreshMode, object entity);\n    parameters:\n    - id: refreshMode\n      type: System.Data.Objects.RefreshMode\n      description: To be added.\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.SaveChanges\n  id: SaveChanges\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: SaveChanges()\n  nameWithType: ObjectContext.SaveChanges()\n  fullName: System.Data.Objects.ObjectContext.SaveChanges()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public int SaveChanges ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.SaveChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)\n  id: SaveChanges(System.Boolean)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: SaveChanges(Boolean)\n  nameWithType: ObjectContext.SaveChanges(Boolean)\n  fullName: System.Data.Objects.ObjectContext.SaveChanges(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public int SaveChanges (bool acceptChangesDuringSave);\n    parameters:\n    - id: acceptChangesDuringSave\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.SaveChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)\n  id: SaveChanges(System.Data.Objects.SaveOptions)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: SaveChanges(SaveOptions)\n  nameWithType: ObjectContext.SaveChanges(SaveOptions)\n  fullName: System.Data.Objects.ObjectContext.SaveChanges(SaveOptions)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public virtual int SaveChanges (System.Data.Objects.SaveOptions options);\n    parameters:\n    - id: options\n      type: System.Data.Objects.SaveOptions\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.SaveChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.SavingChanges\n  id: SavingChanges\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: SavingChanges\n  nameWithType: ObjectContext.SavingChanges\n  fullName: System.Data.Objects.ObjectContext.SavingChanges\n  type: Event\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public event EventHandler SavingChanges;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)\n  id: Translate``1(System.Data.Common.DbDataReader)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Translate(DbDataReader)\n  nameWithType: ObjectContext.Translate(DbDataReader)\n  fullName: System.Data.Objects.ObjectContext.Translate(DbDataReader)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TElement> Translate<TElement> (System.Data.Common.DbDataReader reader);\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TElement}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Translate<TElement>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)\n  id: Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: Translate(DbDataReader,String,MergeOption)\n  nameWithType: ObjectContext.Translate(DbDataReader,String,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.Translate(DbDataReader,String,MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<TEntity> Translate<TEntity> (System.Data.Common.DbDataReader reader, string entitySetName, System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n      description: To be added.\n    - id: entitySetName\n      type: System.String\n      description: To be added.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n    return:\n      type: System.Data.Objects.ObjectResult{TEntity}\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.Translate<TEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)\n  id: TryGetObjectByKey(System.Data.EntityKey,System.Object@)\n  parent: System.Data.Objects.ObjectContext\n  langs:\n  - csharp\n  name: TryGetObjectByKey(EntityKey,Object)\n  nameWithType: ObjectContext.TryGetObjectByKey(EntityKey,Object)\n  fullName: System.Data.Objects.ObjectContext.TryGetObjectByKey(EntityKey,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public bool TryGetObjectByKey (System.Data.EntityKey key, out object value);\n    parameters:\n    - id: key\n      type: System.Data.EntityKey\n      description: To be added.\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.ObjectContext.TryGetObjectByKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectContext(EntityConnection)\n  nameWithType: ObjectContext.ObjectContext(EntityConnection)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(EntityConnection)\n- uid: System.Data.EntityClient.EntityConnection\n  parent: System.Data.EntityClient\n  isExternal: false\n  name: EntityConnection\n  nameWithType: EntityConnection\n  fullName: System.Data.EntityClient.EntityConnection\n- uid: System.Data.Objects.ObjectContext.#ctor(System.String)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectContext(String)\n  nameWithType: ObjectContext.ObjectContext(String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectContext(EntityConnection,String)\n  nameWithType: ObjectContext.ObjectContext(EntityConnection,String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(EntityConnection,String)\n- uid: System.Data.Objects.ObjectContext.#ctor(System.String,System.String)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectContext(String,String)\n  nameWithType: ObjectContext.ObjectContext(String,String)\n  fullName: System.Data.Objects.ObjectContext.ObjectContext(String,String)\n- uid: System.Data.Objects.ObjectContext.AcceptAllChanges\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AcceptAllChanges()\n  nameWithType: ObjectContext.AcceptAllChanges()\n  fullName: System.Data.Objects.ObjectContext.AcceptAllChanges()\n- uid: System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AddObject(String,Object)\n  nameWithType: ObjectContext.AddObject(String,Object)\n  fullName: System.Data.Objects.ObjectContext.AddObject(String,Object)\n- uid: System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyCurrentValues(String,TEntity)\n  nameWithType: ObjectContext.ApplyCurrentValues(String,TEntity)\n  fullName: System.Data.Objects.ObjectContext.ApplyCurrentValues(String,TEntity)\n- uid: TEntity\n  isExternal: true\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyOriginalValues(String,TEntity)\n  nameWithType: ObjectContext.ApplyOriginalValues(String,TEntity)\n  fullName: System.Data.Objects.ObjectContext.ApplyOriginalValues(String,TEntity)\n- uid: System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyPropertyChanges(String,Object)\n  nameWithType: ObjectContext.ApplyPropertyChanges(String,Object)\n  fullName: System.Data.Objects.ObjectContext.ApplyPropertyChanges(String,Object)\n- uid: System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Attach(IEntityWithKey)\n  nameWithType: ObjectContext.Attach(IEntityWithKey)\n  fullName: System.Data.Objects.ObjectContext.Attach(IEntityWithKey)\n- uid: System.Data.Objects.DataClasses.IEntityWithKey\n  parent: System.Data.Objects.DataClasses\n  isExternal: false\n  name: IEntityWithKey\n  nameWithType: IEntityWithKey\n  fullName: System.Data.Objects.DataClasses.IEntityWithKey\n- uid: System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AttachTo(String,Object)\n  nameWithType: ObjectContext.AttachTo(String,Object)\n  fullName: System.Data.Objects.ObjectContext.AttachTo(String,Object)\n- uid: System.Data.Objects.ObjectContext.CommandTimeout\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: ObjectContext.CommandTimeout\n  fullName: System.Data.Objects.ObjectContext.CommandTimeout\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectContext.Connection\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Connection\n  nameWithType: ObjectContext.Connection\n  fullName: System.Data.Objects.ObjectContext.Connection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.Data.Objects.ObjectContext.ContextOptions\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ContextOptions\n  nameWithType: ObjectContext.ContextOptions\n  fullName: System.Data.Objects.ObjectContext.ContextOptions\n- uid: System.Data.Objects.ObjectContextOptions\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectContextOptions\n  nameWithType: ObjectContextOptions\n  fullName: System.Data.Objects.ObjectContextOptions\n- uid: System.Data.Objects.ObjectContext.CreateDatabase\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateDatabase()\n  nameWithType: ObjectContext.CreateDatabase()\n  fullName: System.Data.Objects.ObjectContext.CreateDatabase()\n- uid: System.Data.Objects.ObjectContext.CreateDatabaseScript\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateDatabaseScript()\n  nameWithType: ObjectContext.CreateDatabaseScript()\n  fullName: System.Data.Objects.ObjectContext.CreateDatabaseScript()\n- uid: System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateEntityKey(String,Object)\n  nameWithType: ObjectContext.CreateEntityKey(String,Object)\n  fullName: System.Data.Objects.ObjectContext.CreateEntityKey(String,Object)\n- uid: System.Data.EntityKey\n  parent: System.Data\n  isExternal: false\n  name: EntityKey\n  nameWithType: EntityKey\n  fullName: System.Data.EntityKey\n- uid: System.Data.Objects.ObjectContext.CreateObject``1\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateObject()\n  nameWithType: ObjectContext.CreateObject()\n  fullName: System.Data.Objects.ObjectContext.CreateObject()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Objects.ObjectContext.CreateObjectSet``1\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateObjectSet()\n  nameWithType: ObjectContext.CreateObjectSet()\n  fullName: System.Data.Objects.ObjectContext.CreateObjectSet()\n- uid: System.Data.Objects.ObjectSet`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectSet<TEntity>\n  nameWithType: ObjectSet<TEntity>\n  fullName: System.Data.Objects.ObjectSet<TEntity>\n- uid: System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateObjectSet(String)\n  nameWithType: ObjectContext.CreateObjectSet(String)\n  fullName: System.Data.Objects.ObjectContext.CreateObjectSet(String)\n- uid: System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateProxyTypes(IEnumerable<Type>)\n  nameWithType: ObjectContext.CreateProxyTypes(IEnumerable<Type>)\n  fullName: System.Data.Objects.ObjectContext.CreateProxyTypes(IEnumerable<Type>)\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateQuery(String,ObjectParameter[])\n  nameWithType: ObjectContext.CreateQuery(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.CreateQuery(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectParameter[]\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectParameter\n    name: ObjectParameter\n    nameWithType: ObjectParameter\n    fullName: ObjectParameter[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Objects.ObjectContext.DatabaseExists\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DatabaseExists()\n  nameWithType: ObjectContext.DatabaseExists()\n  fullName: System.Data.Objects.ObjectContext.DatabaseExists()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Objects.ObjectContext.DefaultContainerName\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DefaultContainerName\n  nameWithType: ObjectContext.DefaultContainerName\n  fullName: System.Data.Objects.ObjectContext.DefaultContainerName\n- uid: System.Data.Objects.ObjectContext.DeleteDatabase\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DeleteDatabase()\n  nameWithType: ObjectContext.DeleteDatabase()\n  fullName: System.Data.Objects.ObjectContext.DeleteDatabase()\n- uid: System.Data.Objects.ObjectContext.DeleteObject(System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DeleteObject(Object)\n  nameWithType: ObjectContext.DeleteObject(Object)\n  fullName: System.Data.Objects.ObjectContext.DeleteObject(Object)\n- uid: System.Data.Objects.ObjectContext.Detach(System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Detach(Object)\n  nameWithType: ObjectContext.Detach(Object)\n  fullName: System.Data.Objects.ObjectContext.Detach(Object)\n- uid: System.Data.Objects.ObjectContext.DetectChanges\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DetectChanges()\n  nameWithType: ObjectContext.DetectChanges()\n  fullName: System.Data.Objects.ObjectContext.DetectChanges()\n- uid: System.Data.Objects.ObjectContext.Dispose\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: ObjectContext.Dispose()\n  fullName: System.Data.Objects.ObjectContext.Dispose()\n- uid: System.Data.Objects.ObjectContext.Dispose(System.Boolean)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ObjectContext.Dispose(Boolean)\n  fullName: System.Data.Objects.ObjectContext.Dispose(Boolean)\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteFunction(String,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,ObjectParameter[])\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteFunction(String,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectResult{TElement}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectResult<TElement>\n  nameWithType: ObjectResult<TElement>\n  fullName: System.Data.Objects.ObjectResult<TElement>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectResult`1\n    name: ObjectResult\n    nameWithType: ObjectResult\n    fullName: ObjectResult<TElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TElement\n    name: TElement\n    nameWithType: TElement\n    fullName: TElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteFunction(String,MergeOption,ObjectParameter[])\n  nameWithType: ObjectContext.ExecuteFunction(String,MergeOption,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteFunction(String,MergeOption,ObjectParameter[])\n- uid: System.Data.Objects.MergeOption\n  parent: System.Data.Objects\n  isExternal: false\n  name: MergeOption\n  nameWithType: MergeOption\n  fullName: System.Data.Objects.MergeOption\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreCommand(String,Object[])\n  nameWithType: ObjectContext.ExecuteStoreCommand(String,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreCommand(String,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreQuery(String,Object[])\n  nameWithType: ObjectContext.ExecuteStoreQuery(String,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreQuery(String,Object[])\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreQuery(String,String,MergeOption,Object[])\n  nameWithType: ObjectContext.ExecuteStoreQuery(String,String,MergeOption,Object[])\n  fullName: System.Data.Objects.ObjectContext.ExecuteStoreQuery(String,String,MergeOption,Object[])\n- uid: System.Data.Objects.ObjectResult{TEntity}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectResult<TEntity>\n  nameWithType: ObjectResult<TEntity>\n  fullName: System.Data.Objects.ObjectResult<TEntity>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectResult`1\n    name: ObjectResult\n    nameWithType: ObjectResult\n    fullName: ObjectResult<TEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectContext.GetKnownProxyTypes\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetKnownProxyTypes()\n  nameWithType: ObjectContext.GetKnownProxyTypes()\n  fullName: System.Data.Objects.ObjectContext.GetKnownProxyTypes()\n- uid: System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetObjectByKey(EntityKey)\n  nameWithType: ObjectContext.GetObjectByKey(EntityKey)\n  fullName: System.Data.Objects.ObjectContext.GetObjectByKey(EntityKey)\n- uid: System.Data.Objects.ObjectContext.GetObjectType(System.Type)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetObjectType(Type)\n  nameWithType: ObjectContext.GetObjectType(Type)\n  fullName: System.Data.Objects.ObjectContext.GetObjectType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty(Object,String)\n  nameWithType: ObjectContext.LoadProperty(Object,String)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(Object,String)\n- uid: System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty(Object,String,MergeOption)\n  nameWithType: ObjectContext.LoadProperty(Object,String,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(Object,String,MergeOption)\n- uid: System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n  nameWithType: ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>)\n- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TEntity,Object>>\n  nameWithType: Expression<Func<TEntity,Object>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TEntity,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TEntity,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n  nameWithType: ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.LoadProperty(TEntity,Expression<Func<TEntity,Object>>,MergeOption)\n- uid: System.Data.Objects.ObjectContext.MetadataWorkspace\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: MetadataWorkspace\n  nameWithType: ObjectContext.MetadataWorkspace\n  fullName: System.Data.Objects.ObjectContext.MetadataWorkspace\n- uid: System.Data.Metadata.Edm.MetadataWorkspace\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: MetadataWorkspace\n  nameWithType: MetadataWorkspace\n  fullName: System.Data.Metadata.Edm.MetadataWorkspace\n- uid: System.Data.Objects.ObjectContext.ObjectMaterialized\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectMaterialized\n  nameWithType: ObjectContext.ObjectMaterialized\n  fullName: System.Data.Objects.ObjectContext.ObjectMaterialized\n- uid: System.Data.Objects.ObjectMaterializedEventHandler\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectMaterializedEventHandler\n  nameWithType: ObjectMaterializedEventHandler\n  fullName: System.Data.Objects.ObjectMaterializedEventHandler\n- uid: System.Data.Objects.ObjectContext.ObjectStateManager\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectStateManager\n  nameWithType: ObjectContext.ObjectStateManager\n  fullName: System.Data.Objects.ObjectContext.ObjectStateManager\n- uid: System.Data.Objects.ObjectStateManager\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectStateManager\n  nameWithType: ObjectStateManager\n  fullName: System.Data.Objects.ObjectStateManager\n- uid: System.Data.Objects.ObjectContext.QueryProvider\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: QueryProvider\n  nameWithType: ObjectContext.QueryProvider\n  fullName: System.Data.Objects.ObjectContext.QueryProvider\n- uid: System.Linq.IQueryProvider\n  parent: System.Linq\n  isExternal: true\n  name: IQueryProvider\n  nameWithType: IQueryProvider\n  fullName: System.Linq.IQueryProvider\n- uid: System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Refresh(RefreshMode,IEnumerable)\n  nameWithType: ObjectContext.Refresh(RefreshMode,IEnumerable)\n  fullName: System.Data.Objects.ObjectContext.Refresh(RefreshMode,IEnumerable)\n- uid: System.Data.Objects.RefreshMode\n  parent: System.Data.Objects\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Objects.RefreshMode\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Refresh(RefreshMode,Object)\n  nameWithType: ObjectContext.Refresh(RefreshMode,Object)\n  fullName: System.Data.Objects.ObjectContext.Refresh(RefreshMode,Object)\n- uid: System.Data.Objects.ObjectContext.SaveChanges\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: SaveChanges()\n  nameWithType: ObjectContext.SaveChanges()\n  fullName: System.Data.Objects.ObjectContext.SaveChanges()\n- uid: System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: SaveChanges(Boolean)\n  nameWithType: ObjectContext.SaveChanges(Boolean)\n  fullName: System.Data.Objects.ObjectContext.SaveChanges(Boolean)\n- uid: System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: SaveChanges(SaveOptions)\n  nameWithType: ObjectContext.SaveChanges(SaveOptions)\n  fullName: System.Data.Objects.ObjectContext.SaveChanges(SaveOptions)\n- uid: System.Data.Objects.SaveOptions\n  parent: System.Data.Objects\n  isExternal: false\n  name: SaveOptions\n  nameWithType: SaveOptions\n  fullName: System.Data.Objects.SaveOptions\n- uid: System.Data.Objects.ObjectContext.SavingChanges\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: SavingChanges\n  nameWithType: ObjectContext.SavingChanges\n  fullName: System.Data.Objects.ObjectContext.SavingChanges\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Translate(DbDataReader)\n  nameWithType: ObjectContext.Translate(DbDataReader)\n  fullName: System.Data.Objects.ObjectContext.Translate(DbDataReader)\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Translate(DbDataReader,String,MergeOption)\n  nameWithType: ObjectContext.Translate(DbDataReader,String,MergeOption)\n  fullName: System.Data.Objects.ObjectContext.Translate(DbDataReader,String,MergeOption)\n- uid: System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: TryGetObjectByKey(EntityKey,Object)\n  nameWithType: ObjectContext.TryGetObjectByKey(EntityKey,Object)\n  fullName: System.Data.Objects.ObjectContext.TryGetObjectByKey(EntityKey,Object)\n- uid: System.Data.Objects.ObjectContext.#ctor*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectContext\n  nameWithType: ObjectContext.ObjectContext\n- uid: System.Data.Objects.ObjectContext.AcceptAllChanges*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AcceptAllChanges\n  nameWithType: ObjectContext.AcceptAllChanges\n- uid: System.Data.Objects.ObjectContext.AddObject*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AddObject\n  nameWithType: ObjectContext.AddObject\n- uid: System.Data.Objects.ObjectContext.ApplyCurrentValues<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyCurrentValues<TEntity>\n  nameWithType: ObjectContext.ApplyCurrentValues<TEntity>\n- uid: System.Data.Objects.ObjectContext.ApplyOriginalValues<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyOriginalValues<TEntity>\n  nameWithType: ObjectContext.ApplyOriginalValues<TEntity>\n- uid: System.Data.Objects.ObjectContext.ApplyPropertyChanges*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ApplyPropertyChanges\n  nameWithType: ObjectContext.ApplyPropertyChanges\n- uid: System.Data.Objects.ObjectContext.Attach*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Attach\n  nameWithType: ObjectContext.Attach\n- uid: System.Data.Objects.ObjectContext.AttachTo*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: AttachTo\n  nameWithType: ObjectContext.AttachTo\n- uid: System.Data.Objects.ObjectContext.CommandTimeout*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: ObjectContext.CommandTimeout\n- uid: System.Data.Objects.ObjectContext.Connection*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Connection\n  nameWithType: ObjectContext.Connection\n- uid: System.Data.Objects.ObjectContext.ContextOptions*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ContextOptions\n  nameWithType: ObjectContext.ContextOptions\n- uid: System.Data.Objects.ObjectContext.CreateDatabase*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateDatabase\n  nameWithType: ObjectContext.CreateDatabase\n- uid: System.Data.Objects.ObjectContext.CreateDatabaseScript*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateDatabaseScript\n  nameWithType: ObjectContext.CreateDatabaseScript\n- uid: System.Data.Objects.ObjectContext.CreateEntityKey*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateEntityKey\n  nameWithType: ObjectContext.CreateEntityKey\n- uid: System.Data.Objects.ObjectContext.CreateObject<T>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateObject<T>\n  nameWithType: ObjectContext.CreateObject<T>\n- uid: System.Data.Objects.ObjectContext.CreateObjectSet<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateObjectSet<TEntity>\n  nameWithType: ObjectContext.CreateObjectSet<TEntity>\n- uid: System.Data.Objects.ObjectContext.CreateProxyTypes*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateProxyTypes\n  nameWithType: ObjectContext.CreateProxyTypes\n- uid: System.Data.Objects.ObjectContext.CreateQuery<T>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: CreateQuery<T>\n  nameWithType: ObjectContext.CreateQuery<T>\n- uid: System.Data.Objects.ObjectContext.DatabaseExists*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DatabaseExists\n  nameWithType: ObjectContext.DatabaseExists\n- uid: System.Data.Objects.ObjectContext.DefaultContainerName*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DefaultContainerName\n  nameWithType: ObjectContext.DefaultContainerName\n- uid: System.Data.Objects.ObjectContext.DeleteDatabase*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DeleteDatabase\n  nameWithType: ObjectContext.DeleteDatabase\n- uid: System.Data.Objects.ObjectContext.DeleteObject*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DeleteObject\n  nameWithType: ObjectContext.DeleteObject\n- uid: System.Data.Objects.ObjectContext.Detach*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Detach\n  nameWithType: ObjectContext.Detach\n- uid: System.Data.Objects.ObjectContext.DetectChanges*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: DetectChanges\n  nameWithType: ObjectContext.DetectChanges\n- uid: System.Data.Objects.ObjectContext.Dispose*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Dispose\n  nameWithType: ObjectContext.Dispose\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteFunction\n  nameWithType: ObjectContext.ExecuteFunction\n- uid: System.Data.Objects.ObjectContext.ExecuteFunction<TElement>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteFunction<TElement>\n  nameWithType: ObjectContext.ExecuteFunction<TElement>\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreCommand*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreCommand\n  nameWithType: ObjectContext.ExecuteStoreCommand\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery<TElement>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreQuery<TElement>\n  nameWithType: ObjectContext.ExecuteStoreQuery<TElement>\n- uid: System.Data.Objects.ObjectContext.ExecuteStoreQuery<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ExecuteStoreQuery<TEntity>\n  nameWithType: ObjectContext.ExecuteStoreQuery<TEntity>\n- uid: System.Data.Objects.ObjectContext.GetKnownProxyTypes*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetKnownProxyTypes\n  nameWithType: ObjectContext.GetKnownProxyTypes\n- uid: System.Data.Objects.ObjectContext.GetObjectByKey*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetObjectByKey\n  nameWithType: ObjectContext.GetObjectByKey\n- uid: System.Data.Objects.ObjectContext.GetObjectType*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: GetObjectType\n  nameWithType: ObjectContext.GetObjectType\n- uid: System.Data.Objects.ObjectContext.LoadProperty*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty\n  nameWithType: ObjectContext.LoadProperty\n- uid: System.Data.Objects.ObjectContext.LoadProperty<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: LoadProperty<TEntity>\n  nameWithType: ObjectContext.LoadProperty<TEntity>\n- uid: System.Data.Objects.ObjectContext.MetadataWorkspace*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: MetadataWorkspace\n  nameWithType: ObjectContext.MetadataWorkspace\n- uid: System.Data.Objects.ObjectContext.ObjectStateManager*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: ObjectStateManager\n  nameWithType: ObjectContext.ObjectStateManager\n- uid: System.Data.Objects.ObjectContext.QueryProvider*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: QueryProvider\n  nameWithType: ObjectContext.QueryProvider\n- uid: System.Data.Objects.ObjectContext.Refresh*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Refresh\n  nameWithType: ObjectContext.Refresh\n- uid: System.Data.Objects.ObjectContext.SaveChanges*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: SaveChanges\n  nameWithType: ObjectContext.SaveChanges\n- uid: System.Data.Objects.ObjectContext.Translate<TElement>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Translate<TElement>\n  nameWithType: ObjectContext.Translate<TElement>\n- uid: System.Data.Objects.ObjectContext.Translate<TEntity>*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: Translate<TEntity>\n  nameWithType: ObjectContext.Translate<TEntity>\n- uid: System.Data.Objects.ObjectContext.TryGetObjectByKey*\n  parent: System.Data.Objects.ObjectContext\n  isExternal: false\n  name: TryGetObjectByKey\n  nameWithType: ObjectContext.TryGetObjectByKey\n"}