{"nodes":[{"pos":[760,900],"content":"To implement a custom upgrade acceptor, inherited from this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> base class.","needQuote":true,"needEscape":true,"source":"To implement a custom upgrade acceptor, inherited from this <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class."},{"pos":[913,1330],"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.       This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.       For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","needQuote":false,"needEscape":true,"nodes":[{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.       This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.       For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","pos":[0,413],"nodes":[{"content":"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.","pos":[0,104]},{"content":"This class is used with &lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator&gt; and &lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt; to implement a custom stream upgrade.","pos":[111,293],"source":"       This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade."},{"content":"For a detailed description of the upgrade process, see &lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;.","pos":[300,413],"source":"       For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>."}]}]},{"pos":[1946,2058],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref> class."},{"pos":[2737,2799],"content":"Upgrades the transport stream and returns the upgraded stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Upgrades the transport stream and returns the upgraded stream.","pos":[0,62]}]},{"pos":[2811,2945],"content":"This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.","pos":[0,134]}]},{"pos":[3123,3149],"content":"The stream to be upgraded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream to be upgraded.","pos":[0,26]}]},{"pos":[3210,3238],"content":"Returns the upgraded stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the upgraded stream.","pos":[0,28]}]},{"pos":[4005,4102],"content":"Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronous version of &lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*&gt;.","pos":[0,97],"source":"Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>."}]},{"pos":[4114,4231],"content":"For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information, see the remarks for &lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A&gt;.","pos":[0,117],"source":"For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>."}]},{"pos":[4449,4475],"content":"The stream to be upgraded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream to be upgraded.","pos":[0,26]}]},{"pos":[4547,4678],"content":"The method to be called when the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> call has completed.","needQuote":true,"needEscape":true,"source":"The method to be called when the <xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"></xref> call has completed."},{"pos":[4740,4850],"content":"State information for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> call.","needQuote":true,"needEscape":true,"source":"State information for the <xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"></xref> call."},{"pos":[4914,5003],"content":"Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.","pos":[0,89]}]},{"pos":[5596,5675],"content":"Determines whether the upgrade requested is supported by this upgrade acceptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the upgrade requested is supported by this upgrade acceptor.","pos":[0,79]}]},{"pos":[5687,5918],"content":"The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor. This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor.","pos":[0,139]},{"content":"This content type comes from the <ph id=\"ph1\">`GetNextUpgrade`</ph> method on the matching upgrade initiator.","pos":[140,231],"source":" This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator."}]},{"pos":[6079,6113],"content":"The type of content to be checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of content to be checked.","pos":[0,34]}]},{"pos":[6172,6345],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this kind of upgrade is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this kind of upgrade is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6990,7087],"content":"Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronous version of &lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*&gt;.","pos":[0,97],"source":"Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>."}]},{"pos":[7099,7215],"content":"For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information, see the remarks in &lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A&gt;.","pos":[0,116],"source":"For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>."}]},{"pos":[7396,7516],"content":"The IAsyncResult returned from <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BeginAcceptUpgrade\" name=\"BeginAcceptUpgrade\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The IAsyncResult returned from <xref uid=\"langword_csharp_BeginAcceptUpgrade\" name=\"BeginAcceptUpgrade\" href=\"\"></xref>."},{"pos":[7577,7605],"content":"Returns the upgraded stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the upgraded stream.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  id: StreamUpgradeAcceptor\n  children:\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  - System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  langs:\n  - csharp\n  name: StreamUpgradeAcceptor\n  nameWithType: StreamUpgradeAcceptor\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  type: Class\n  summary: To implement a custom upgrade acceptor, inherited from this <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class.\n  remarks: \"An example of a stream upgrade is to build a compression stream directly on top of the transport stream.  \\n  \\n This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.  \\n  \\n For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.\"\n  syntax:\n    content: public abstract class StreamUpgradeAcceptor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: StreamUpgradeAcceptor()\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeAcceptor\"></xref> class.\n  syntax:\n    content: protected StreamUpgradeAcceptor ();\n    parameters: []\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  id: AcceptUpgrade(System.IO.Stream)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: AcceptUpgrade(Stream)\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Upgrades the transport stream and returns the upgraded stream.\n  remarks: This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.\n  syntax:\n    content: public virtual System.IO.Stream AcceptUpgrade (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be upgraded.\n    return:\n      type: System.IO.Stream\n      description: Returns the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  id: BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>.\n  remarks: For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.\n  syntax:\n    content: public abstract IAsyncResult BeginAcceptUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be upgraded.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the <xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"></xref> call has completed.\n    - id: state\n      type: System.Object\n      description: State information for the <xref uid=\"langword_csharp_AcceptUpgrade\" name=\"AcceptUpgrade\" href=\"\"></xref> call.\n    return:\n      type: System.IAsyncResult\n      description: Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  id: CanUpgrade(System.String)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: CanUpgrade(String)\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade(String)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Determines whether the upgrade requested is supported by this upgrade acceptor.\n  remarks: The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor. This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.\n  syntax:\n    content: public abstract bool CanUpgrade (string contentType);\n    parameters:\n    - id: contentType\n      type: System.String\n      description: The type of content to be checked.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this kind of upgrade is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  id: EndAcceptUpgrade(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  langs:\n  - csharp\n  name: EndAcceptUpgrade(IAsyncResult)\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Asynchronous version of <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*>.\n  remarks: For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.\n  syntax:\n    content: public abstract System.IO.Stream EndAcceptUpgrade (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The IAsyncResult returned from <xref uid=\"langword_csharp_BeginAcceptUpgrade\" name=\"BeginAcceptUpgrade\" href=\"\"></xref>.\n    return:\n      type: System.IO.Stream\n      description: Returns the upgraded stream.\n  overload: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: StreamUpgradeAcceptor()\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.StreamUpgradeAcceptor()\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: AcceptUpgrade(Stream)\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(Stream,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: CanUpgrade(String)\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade(String)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: EndAcceptUpgrade(IAsyncResult)\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n  fullName: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(IAsyncResult)\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: StreamUpgradeAcceptor\n  nameWithType: StreamUpgradeAcceptor.StreamUpgradeAcceptor\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: AcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.AcceptUpgrade\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: BeginAcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.BeginAcceptUpgrade\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: CanUpgrade\n  nameWithType: StreamUpgradeAcceptor.CanUpgrade\n- uid: System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade*\n  parent: System.ServiceModel.Channels.StreamUpgradeAcceptor\n  isExternal: false\n  name: EndAcceptUpgrade\n  nameWithType: StreamUpgradeAcceptor.EndAcceptUpgrade\n"}