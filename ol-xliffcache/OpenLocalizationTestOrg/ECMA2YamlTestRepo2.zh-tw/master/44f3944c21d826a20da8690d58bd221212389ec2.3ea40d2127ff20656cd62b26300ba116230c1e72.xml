{"nodes":[{"pos":[406,701],"content":"Allows a code segment identified by <xref:System.EnterpriseServices.ServiceDomain.Enter*> and <xref:System.EnterpriseServices.ServiceDomain.Leave*> to run in its own context and behave as if it were a method that is called on an object created within the context. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows a code segment identified by &lt;xref:System.EnterpriseServices.ServiceDomain.Enter<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.EnterpriseServices.ServiceDomain.Leave<ept id=\"p1\">*</ept>&gt; to run in its own context and behave as if it were a method that is called on an object created within the context.","pos":[0,263],"source":"Allows a code segment identified by <xref:System.EnterpriseServices.ServiceDomain.Enter*> and <xref:System.EnterpriseServices.ServiceDomain.Leave*> to run in its own context and behave as if it were a method that is called on an object created within the context."},{"content":"This class cannot be inherited.","pos":[264,295]}]},{"pos":[713,1548],"content":"The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services. Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context. The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested. It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services. Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context. The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested. It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.","pos":[0,835],"nodes":[{"content":"The &lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt; and &lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt; methods are used in pairs to surround code that can then use COM+ services.","pos":[0,195],"source":"The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services."},{"content":"Code that is enclosed between calls to &lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt; and &lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt; runs in its own context and behaves as if it were a method that is called on an object created within the context.","pos":[196,465],"source":" Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context."},{"content":"The &lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt; and &lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt; pairs can be nested.","pos":[466,606],"source":" The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested."},{"content":"It is up to the user to make sure that pairs of calls are balanced so that every call to &lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt; matches a previous call to &lt;xref:System.EnterpriseServices.ServiceDomain.Enter%2A&gt;.","pos":[607,835],"source":" It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>."}]}]},{"pos":[2248,2420],"content":"Creates the context specified by the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ServiceConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and pushes it onto the context stack to become the current context.","needQuote":true,"needEscape":true,"source":"Creates the context specified by the <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> object and pushes it onto the context stack to become the current context."},{"pos":[2432,2999],"content":"Enter first creates a context configured as specified by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed as the `cfg` parameter. Policies on both the client and server sides are then triggered as if a method call had occurred. The new context is then pushed onto a context stack and becomes the current context. Because of their efficient design and because no thread marshaling is involved, using Enter and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> involves significantly reduced overhead compared to an equivalent method call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enter first creates a context configured as specified by the &lt;xref:System.EnterpriseServices.ServiceConfig&gt; object that is passed as the <ph id=\"ph1\">`cfg`</ph> parameter.","pos":[0,153],"source":"Enter first creates a context configured as specified by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed as the `cfg` parameter."},{"content":"Policies on both the client and server sides are then triggered as if a method call had occurred.","pos":[154,251]},{"content":"The new context is then pushed onto a context stack and becomes the current context.","pos":[252,336]},{"content":"Because of their efficient design and because no thread marshaling is involved, using Enter and &lt;xref:System.EnterpriseServices.ServiceDomain.Leave%2A&gt; involves significantly reduced overhead compared to an equivalent method call.","pos":[337,567],"source":" Because of their efficient design and because no thread marshaling is involved, using Enter and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> involves significantly reduced overhead compared to an equivalent method call."}]},{"pos":[3196,3356],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ServiceConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the configuration information for the services to be used within the enclosed code.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> that contains the configuration information for the services to be used within the enclosed code."},{"pos":[3548,3650],"content":"<bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ServiceConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not supported on the current platform.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> is not supported on the current platform."},{"pos":[4032,4312],"content":"Triggers the server and then the client side policies as if a method call were returning. The current context is then popped from the context stack, and the context that was running when <xref:System.EnterpriseServices.ServiceDomain.Enter*> was called becomes the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Triggers the server and then the client side policies as if a method call were returning. The current context is then popped from the context stack, and the context that was running when <xref:System.EnterpriseServices.ServiceDomain.Enter*> was called becomes the current context.","pos":[0,280],"nodes":[{"content":"Triggers the server and then the client side policies as if a method call were returning.","pos":[0,89]},{"content":"The current context is then popped from the context stack, and the context that was running when &lt;xref:System.EnterpriseServices.ServiceDomain.Enter*&gt; was called becomes the current context.","pos":[90,280],"source":" The current context is then popped from the context stack, and the context that was running when <xref:System.EnterpriseServices.ServiceDomain.Enter*> was called becomes the current context."}]}]},{"pos":[4510,4593],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.TransactionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.EnterpriseServices.TransactionStatus\"></xref> values."},{"pos":[4785,4887],"content":"<bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ServiceConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not supported on the current platform.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> is not supported on the current platform."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.ServiceDomain\n  id: ServiceDomain\n  children:\n  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)\n  - System.EnterpriseServices.ServiceDomain.Leave\n  langs:\n  - csharp\n  name: ServiceDomain\n  nameWithType: ServiceDomain\n  fullName: System.EnterpriseServices.ServiceDomain\n  type: Class\n  summary: Allows a code segment identified by <xref:System.EnterpriseServices.ServiceDomain.Enter*> and <xref:System.EnterpriseServices.ServiceDomain.Leave*> to run in its own context and behave as if it were a method that is called on an object created within the context. This class cannot be inherited.\n  remarks: The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services. Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context. The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested. It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class ServiceDomain\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)\n  id: Enter(System.EnterpriseServices.ServiceConfig)\n  parent: System.EnterpriseServices.ServiceDomain\n  langs:\n  - csharp\n  name: Enter(ServiceConfig)\n  nameWithType: ServiceDomain.Enter(ServiceConfig)\n  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Creates the context specified by the <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> object and pushes it onto the context stack to become the current context.\n  remarks: Enter first creates a context configured as specified by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed as the `cfg` parameter. Policies on both the client and server sides are then triggered as if a method call had occurred. The new context is then pushed onto a context stack and becomes the current context. Because of their efficient design and because no thread marshaling is involved, using Enter and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> involves significantly reduced overhead compared to an equivalent method call.\n  syntax:\n    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);\n    parameters:\n    - id: cfg\n      type: System.EnterpriseServices.ServiceConfig\n      description: A <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> that contains the configuration information for the services to be used within the enclosed code.\n  overload: System.EnterpriseServices.ServiceDomain.Enter*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> is not supported on the current platform.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.ServiceDomain.Leave\n  id: Leave\n  parent: System.EnterpriseServices.ServiceDomain\n  langs:\n  - csharp\n  name: Leave()\n  nameWithType: ServiceDomain.Leave()\n  fullName: System.EnterpriseServices.ServiceDomain.Leave()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Triggers the server and then the client side policies as if a method call were returning. The current context is then popped from the context stack, and the context that was running when <xref:System.EnterpriseServices.ServiceDomain.Enter*> was called becomes the current context.\n  syntax:\n    content: public static System.EnterpriseServices.TransactionStatus Leave ();\n    parameters: []\n    return:\n      type: System.EnterpriseServices.TransactionStatus\n      description: One of the <xref href=\"System.EnterpriseServices.TransactionStatus\"></xref> values.\n  overload: System.EnterpriseServices.ServiceDomain.Leave*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> is not supported on the current platform.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)\n  parent: System.EnterpriseServices.ServiceDomain\n  isExternal: false\n  name: Enter(ServiceConfig)\n  nameWithType: ServiceDomain.Enter(ServiceConfig)\n  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)\n- uid: System.EnterpriseServices.ServiceConfig\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: ServiceConfig\n  nameWithType: ServiceConfig\n  fullName: System.EnterpriseServices.ServiceConfig\n- uid: System.EnterpriseServices.ServiceDomain.Leave\n  parent: System.EnterpriseServices.ServiceDomain\n  isExternal: false\n  name: Leave()\n  nameWithType: ServiceDomain.Leave()\n  fullName: System.EnterpriseServices.ServiceDomain.Leave()\n- uid: System.EnterpriseServices.TransactionStatus\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: TransactionStatus\n  nameWithType: TransactionStatus\n  fullName: System.EnterpriseServices.TransactionStatus\n- uid: System.EnterpriseServices.ServiceDomain.Enter*\n  parent: System.EnterpriseServices.ServiceDomain\n  isExternal: false\n  name: Enter\n  nameWithType: ServiceDomain.Enter\n- uid: System.EnterpriseServices.ServiceDomain.Leave*\n  parent: System.EnterpriseServices.ServiceDomain\n  isExternal: false\n  name: Leave\n  nameWithType: ServiceDomain.Leave\n"}