{"nodes":[{"pos":[695,816],"content":"Enables setting message-level security properties on the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.NetMsmqBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> binding.","needQuote":true,"needEscape":true,"source":"Enables setting message-level security properties on the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding."},{"pos":[4529,4655],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"></xref> class."},{"pos":[5357,5432],"content":"Specifies the algorithm suite used for security messages at the SOAP level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the algorithm suite used for security messages at the SOAP level.","pos":[0,75]}]},{"pos":[5444,5861],"content":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","pos":[0,417],"nodes":[{"content":"&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation.","pos":[0,176],"source":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation."},{"content":"This property is most relevant when working with a platform that uses a set of algorithms different than the default.","pos":[177,294]},{"content":"You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","pos":[295,417]}]}]},{"pos":[6068,6244],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> setting for messages sent over the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.NetMsmqBinding\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> binding.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> setting for messages sent over the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding."},{"pos":[6901,7026],"content":"Gets or sets the <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the &lt;xref:System.ServiceModel.MessageCredentialType&gt; security setting for messages sent over the MSMQ transport.","pos":[0,125],"source":"Gets or sets the <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport."}]},{"pos":[7039,8948],"content":"This property can be set to one of the following values:      -   None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.      -   Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.      -   UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.          > [!NOTE]     >  [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.      -   Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.      -   CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/add/includes/infocard1-md.md)]. The serviceCertiifcate must be provisioned in the ClientCredential behavior.       The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property can be set to one of the following values:      -   None: This allows the service to interact with anonymous clients.","pos":[0,131]},{"content":"Neither the service nor the client requires a credential.","pos":[132,189]},{"content":"-   Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential.","pos":[195,302]},{"content":"This always performs Kerberos-based authentication.","pos":[303,354]},{"content":"-   UserName: This enables the service to require that the client be authenticated using a UserName credential.","pos":[360,471]},{"content":"This credential needs to be specified using &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class.","pos":[472,579],"source":" This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\">     &gt;  </ph><ph id=\"ph3\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> does not support sending a password digest or deriving keys using password and using such keys for message security.","pos":[589,781],"source":"          > [!NOTE]     >  [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security."},{"content":"As such, <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> enforces that the exchange is secured when using UserName credentials.","pos":[782,920],"source":" As such, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] enforces that the exchange is secured when using UserName credentials."},{"content":"This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.","pos":[921,1056]},{"content":"-   Certificate: This enables the service to require that the client be authenticated using a certificate.","pos":[1062,1168]},{"content":"The client credential in this case needs to be specified using the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class or ClientCredentials behavior.","pos":[1169,1329],"source":" The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior."},{"content":"The service credential in this case needs to be specified using the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class or ClientCredentials behavior by specifying the serviceCertificate.","pos":[1330,1528],"source":" The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate."},{"content":"-   CardSpace: This allows the service to require that the client be authenticated using a <ph id=\"ph1\">[!INCLUDE[infocard1](~/add/includes/infocard1-md.md)]</ph>.","pos":[1534,1679],"source":"      -   CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/add/includes/infocard1-md.md)]."},{"content":"The serviceCertiifcate must be provisioned in the ClientCredential behavior.","pos":[1680,1756]},{"content":"The Certificate credential for the <ph id=\"ph1\">`MessageSecurityOverMsmq`</ph> is relevant only when the security mode is set to <ph id=\"ph2\">`Both`</ph> or <ph id=\"ph3\">`Message`</ph>.","pos":[1763,1894],"source":"       The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`."}]},{"pos":[9142,9254],"content":"The <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.MessageCredentialType&gt; security setting for messages sent over the MSMQ transport.","pos":[0,112],"source":"The <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport."}]},{"pos":[10067,10079],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  id: MessageSecurityOverMsmqElement\n  children:\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  langs:\n  - csharp\n  name: MessageSecurityOverMsmqElement\n  nameWithType: MessageSecurityOverMsmqElement\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  type: Class\n  summary: Enables setting message-level security properties on the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.\n  syntax:\n    content: 'public sealed class MessageSecurityOverMsmqElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: MessageSecurityOverMsmqElement()\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"></xref> class.\n  syntax:\n    content: public MessageSecurityOverMsmqElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  id: AlgorithmSuite\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Specifies the algorithm suite used for security messages at the SOAP level.\n  remarks: <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.\n  syntax:\n    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: The <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> setting for messages sent over the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  id: ClientCredentialType\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport.\n  remarks: \"This property can be set to one of the following values:  \\n  \\n-   None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.  \\n  \\n-   Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.  \\n  \\n-   UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.  \\n  \\n    > [!NOTE]\\n    >  [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.  \\n  \\n-   Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.  \\n  \\n-   CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/add/includes/infocard1-md.md)]. The serviceCertiifcate must be provisioned in the ClientCredential behavior.  \\n  \\n The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`.\"\n  syntax:\n    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }\n    return:\n      type: System.ServiceModel.MessageCredentialType\n      description: The <xref:System.ServiceModel.MessageCredentialType> security setting for messages sent over the MSMQ transport.\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: MessageSecurityOverMsmqElement()\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n- uid: System.ServiceModel.MessageCredentialType\n  parent: System.ServiceModel\n  isExternal: true\n  name: MessageCredentialType\n  nameWithType: MessageCredentialType\n  fullName: System.ServiceModel.MessageCredentialType\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: MessageSecurityOverMsmqElement\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n"}