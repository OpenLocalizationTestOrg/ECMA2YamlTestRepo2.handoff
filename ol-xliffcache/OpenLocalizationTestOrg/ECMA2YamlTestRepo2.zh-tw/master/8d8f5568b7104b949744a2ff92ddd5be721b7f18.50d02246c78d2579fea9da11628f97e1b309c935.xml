{"nodes":[{"pos":[370,486],"content":"Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.","pos":[0,116]}]},{"pos":[499,1757],"content":"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>.       When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of RightToLeft you assigned. In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control. If there is no parent control, it will return a value of `No`. Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class.      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This enumeration is used by &lt;xref:System.Windows.Forms.ContextMenu&gt;, &lt;xref:System.Windows.Forms.MainMenu&gt;, &lt;xref:System.Windows.Forms.ProgressBar&gt;, &lt;xref:System.Text.RegularExpressions.Regex&gt; and &lt;xref:System.Windows.Forms.Control&gt;.","pos":[0,232],"source":"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>."},{"content":"When you retrieve the value of the <ph id=\"ph1\">`RightToLeft`</ph> property from &lt;xref:System.Windows.Forms.ContextMenu&gt;, &lt;xref:System.Windows.Forms.MainMenu&gt;, and &lt;xref:System.Windows.Forms.ProgressBar&gt; you will get the value of RightToLeft you assigned.","pos":[239,476],"source":"       When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of RightToLeft you assigned."},{"content":"In contrast, if you are deriving your own class from &lt;xref:System.Windows.Forms.Control&gt;, and you assign a value of <ph id=\"ph1\">`Inherit`</ph> to the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; property, the value returned will be the setting of the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; property of the parent control.","pos":[477,799],"source":" In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control."},{"content":"If there is no parent control, it will return a value of <ph id=\"ph1\">`No`</ph>.","pos":[800,862],"source":" If there is no parent control, it will return a value of `No`."},{"content":"Otherwise, it will return a value of <ph id=\"ph1\">`Yes`</ph> or <ph id=\"ph2\">`No`</ph>, depending on the value that you assigned to the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; property of your derived class.","pos":[863,1045],"source":" Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName&gt; property.","pos":[1051,1253],"source":"      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property."}]},{"pos":[2188,2253],"content":"The direction the text read is inherited from the parent control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The direction the text read is inherited from the parent control.","pos":[0,65]}]},{"pos":[2361,2373],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2717,2772],"content":"The text reads from left to right. This is the default.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text reads from left to right. This is the default.","pos":[0,55],"nodes":[{"content":"The text reads from left to right.","pos":[0,34]},{"content":"This is the default.","pos":[35,55]}]}]},{"pos":[2875,2887],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3236,3270],"content":"The text reads from right to left.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text reads from right to left.","pos":[0,34]}]},{"pos":[3374,3386],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.RightToLeft\n  id: RightToLeft\n  children:\n  - System.Windows.Forms.RightToLeft.Inherit\n  - System.Windows.Forms.RightToLeft.No\n  - System.Windows.Forms.RightToLeft.Yes\n  langs:\n  - csharp\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n  type: Enum\n  summary: Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.\n  remarks: \"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>.  \\n  \\n When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of RightToLeft you assigned. In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control. If there is no parent control, it will return a value of `No`. Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class.  \\n  \\n> [!NOTE]\\n>  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public enum RightToLeft\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Windows.Forms.RightToLeft.Inherit\n  id: Inherit\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: Inherit\n  nameWithType: RightToLeft.Inherit\n  fullName: System.Windows.Forms.RightToLeft.Inherit\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The direction the text read is inherited from the parent control.\n  syntax:\n    content: Inherit\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RightToLeft.No\n  id: No\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: No\n  nameWithType: RightToLeft.No\n  fullName: System.Windows.Forms.RightToLeft.No\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The text reads from left to right. This is the default.\n  syntax:\n    content: No\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RightToLeft.Yes\n  id: Yes\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: RightToLeft.Yes\n  fullName: System.Windows.Forms.RightToLeft.Yes\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The text reads from right to left.\n  syntax:\n    content: Yes\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Windows.Forms.RightToLeft.Inherit\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: Inherit\n  nameWithType: RightToLeft.Inherit\n  fullName: System.Windows.Forms.RightToLeft.Inherit\n- uid: System.Windows.Forms.RightToLeft\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n- uid: System.Windows.Forms.RightToLeft.No\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: No\n  nameWithType: RightToLeft.No\n  fullName: System.Windows.Forms.RightToLeft.No\n- uid: System.Windows.Forms.RightToLeft.Yes\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: Yes\n  nameWithType: RightToLeft.Yes\n  fullName: System.Windows.Forms.RightToLeft.Yes\n"}