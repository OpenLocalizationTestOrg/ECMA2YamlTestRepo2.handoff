{"nodes":[{"pos":[802,839],"content":"Validates tokens and extracts claims.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates tokens and extracts claims.","pos":[0,37]}]},{"pos":[851,915],"content":"This authenticator validates only SecurityContextSecurityTokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"This authenticator validates only SecurityContextSecurityTokens.","pos":[0,64]}]},{"pos":[2071,2210],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\"></xref> class."},{"pos":[2222,2286],"content":"This authenticator validates only SecurityContextSecurityTokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"This authenticator validates only SecurityContextSecurityTokens.","pos":[0,64]}]},{"pos":[3223,3294],"content":"Gets a value that indicates whether a specified token can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether a specified token can be validated.","pos":[0,71]}]},{"pos":[3519,3586],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."},{"pos":[3645,3821],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified token can be validated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified token can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4663,4691],"content":"Validates a specified token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates a specified token.","pos":[0,28]}]},{"pos":[5008,5075],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."},{"pos":[5219,5315],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> instances."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  id: SecurityContextSecurityTokenAuthenticator\n  children:\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SecurityContextSecurityTokenAuthenticator\n  nameWithType: SecurityContextSecurityTokenAuthenticator\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  type: Class\n  summary: Validates tokens and extracts claims.\n  remarks: This authenticator validates only SecurityContextSecurityTokens.\n  syntax:\n    content: 'public class SecurityContextSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: SecurityContextSecurityTokenAuthenticator()\n  nameWithType: SecurityContextSecurityTokenAuthenticator.SecurityContextSecurityTokenAuthenticator()\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.SecurityContextSecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\"></xref> class.\n  remarks: This authenticator validates only SecurityContextSecurityTokens.\n  syntax:\n    content: public SecurityContextSecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether a specified token can be validated.\n  syntax:\n    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified token can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Validates a specified token.\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A collection of <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> instances.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityContextSecurityTokenAuthenticator()\n  nameWithType: SecurityContextSecurityTokenAuthenticator.SecurityContextSecurityTokenAuthenticator()\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.SecurityContextSecurityTokenAuthenticator()\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityContextSecurityTokenAuthenticator\n  nameWithType: SecurityContextSecurityTokenAuthenticator.SecurityContextSecurityTokenAuthenticator\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: SecurityContextSecurityTokenAuthenticator.ValidateTokenCore\n"}