{"nodes":[{"pos":[611,670],"content":"Provides a way to filter a query based on a specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a way to filter a query based on a specified type.","pos":[0,59]}]},{"pos":[682,773],"content":"This expression filters out elements in the data source that are not of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This expression filters out elements in the data source that are not of the specified type.","pos":[0,91]}]},{"pos":[2798,2914],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> class."},{"pos":[3591,3730],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> class using a specified type."},{"pos":[3865,3902],"content":"The type that the filter is based on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that the filter is based on.","pos":[0,37]}]},{"pos":[4544,4664],"content":"Returns the query that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was performed on.","needQuote":true,"needEscape":true,"source":"Returns the query that the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> was performed on."},{"pos":[4858,4890],"content":"The query to use for the filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query to use for the filter.","pos":[0,32]}]},{"pos":[4957,5010],"content":"A query that contains elements of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A query that contains elements of the specified type.","pos":[0,53]}]},{"pos":[5557,5607],"content":"Gets or sets the type that the filter is based on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type that the filter is based on.","pos":[0,50]}]},{"pos":[5725,5845],"content":"The type that the filter is based on. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that the filter is based on.","pos":[0,37]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[38,120],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  id: OfTypeExpression\n  children:\n  - System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor\n  - System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor(System.Type)\n  - System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(System.Linq.IQueryable)\n  - System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName\n  langs:\n  - csharp\n  name: OfTypeExpression\n  nameWithType: OfTypeExpression\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  type: Class\n  summary: Provides a way to filter a query based on a specified type.\n  remarks: This expression filters out elements in the data source that are not of the specified type.\n  syntax:\n    content: 'public class OfTypeExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  langs:\n  - csharp\n  name: OfTypeExpression()\n  nameWithType: OfTypeExpression.OfTypeExpression()\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.OfTypeExpression()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> class.\n  syntax:\n    content: public OfTypeExpression ();\n    parameters: []\n  overload: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  langs:\n  - csharp\n  name: OfTypeExpression(Type)\n  nameWithType: OfTypeExpression.OfTypeExpression(Type)\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.OfTypeExpression(Type)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> class using a specified type.\n  syntax:\n    content: public OfTypeExpression (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type that the filter is based on.\n  overload: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(System.Linq.IQueryable)\n  id: GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  langs:\n  - csharp\n  name: GetQueryable(IQueryable)\n  nameWithType: OfTypeExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Returns the query that the <xref href=\"System.Web.UI.WebControls.Expressions.OfTypeExpression\"></xref> was performed on.\n  syntax:\n    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable query);\n    parameters:\n    - id: query\n      type: System.Linq.IQueryable\n      description: The query to use for the filter.\n    return:\n      type: System.Linq.IQueryable\n      description: A query that contains elements of the specified type.\n  overload: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName\n  id: TypeName\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: OfTypeExpression.TypeName\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Gets or sets the type that the filter is based on.\n  syntax:\n    content: public string TypeName { get; set; }\n    return:\n      type: System.String\n      description: The type that the filter is based on. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression\n  isExternal: false\n  name: System.Web.UI.WebControls.Expressions.DataSourceExpression\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: OfTypeExpression()\n  nameWithType: OfTypeExpression.OfTypeExpression()\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.OfTypeExpression()\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor(System.Type)\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: OfTypeExpression(Type)\n  nameWithType: OfTypeExpression.OfTypeExpression(Type)\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.OfTypeExpression(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: GetQueryable(IQueryable)\n  nameWithType: OfTypeExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: TypeName\n  nameWithType: OfTypeExpression.TypeName\n  fullName: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor*\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: OfTypeExpression\n  nameWithType: OfTypeExpression.OfTypeExpression\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable*\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: GetQueryable\n  nameWithType: OfTypeExpression.GetQueryable\n- uid: System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName*\n  parent: System.Web.UI.WebControls.Expressions.OfTypeExpression\n  isExternal: false\n  name: TypeName\n  nameWithType: OfTypeExpression.TypeName\n"}