{"nodes":[{"pos":[3127,3139],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3201,3213],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3277,3289],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3353,3365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3453,3465],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3557,3569],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3634,3646],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4311,4323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4918,4930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5527,5539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6210,6222],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6281,6293],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7121,7133],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7192,7204],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7844,7856],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8444,8456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9519,9531],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9628,9640],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9699,9711],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10791,10803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10900,10912],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10971,10983],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11583,11595],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12252,12264],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12905,12917],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState\n  id: FragmentState\n  children:\n  - System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Action\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Duration\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)\n  - System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode\n  - System.Speech.Synthesis.TtsEngine.FragmentState.LangId\n  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme\n  - System.Speech.Synthesis.TtsEngine.FragmentState.Prosody\n  - System.Speech.Synthesis.TtsEngine.FragmentState.SayAs\n  langs:\n  - csharp\n  name: FragmentState\n  nameWithType: FragmentState\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.ImmutableObject(true)]\n\n      public struct FragmentState : IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])\n  id: '#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])'\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);\n    parameters:\n    - id: action\n      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction\n      description: To be added.\n    - id: langId\n      type: System.Int32\n      description: To be added.\n    - id: emphasis\n      type: System.Int32\n      description: To be added.\n    - id: duration\n      type: System.Int32\n      description: To be added.\n    - id: sayAs\n      type: System.Speech.Synthesis.TtsEngine.SayAs\n      description: To be added.\n    - id: prosody\n      type: System.Speech.Synthesis.TtsEngine.Prosody\n      description: To be added.\n    - id: phonemes\n      type: System.Char[]\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action\n  id: Action\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Action\n  nameWithType: FragmentState.Action\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }\n    return:\n      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Action*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration\n  id: Duration\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Duration\n  nameWithType: FragmentState.Duration\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public int Duration { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis\n  id: Emphasis\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Emphasis\n  nameWithType: FragmentState.Emphasis\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public int Emphasis { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FragmentState.Equals(Object)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)\n  id: Equals(System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Equals(FragmentState)\n  nameWithType: FragmentState.Equals(FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);\n    parameters:\n    - id: other\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode\n  id: GetHashCode\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FragmentState.GetHashCode()\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId\n  id: LangId\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: LangId\n  nameWithType: FragmentState.LangId\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public int LangId { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  id: op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: op_Equality(FragmentState,FragmentState)\n  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)\n  type: Operator\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public static bool op_Equality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);\n    parameters:\n    - id: state1\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: To be added.\n    - id: state2\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  id: op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: op_Inequality(FragmentState,FragmentState)\n  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)\n  type: Operator\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public static bool op_Inequality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);\n    parameters:\n    - id: state1\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: To be added.\n    - id: state2\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme\n  id: Phoneme\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Phoneme\n  nameWithType: FragmentState.Phoneme\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public char[] Phoneme { get; }\n    return:\n      type: System.Char[]\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody\n  id: Prosody\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: Prosody\n  nameWithType: FragmentState.Prosody\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }\n    return:\n      type: System.Speech.Synthesis.TtsEngine.Prosody\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs\n  id: SayAs\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  langs:\n  - csharp\n  name: SayAs\n  nameWithType: FragmentState.SayAs\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  syntax:\n    content: public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }\n    return:\n      type: System.Speech.Synthesis.TtsEngine.SayAs\n      description: To be added.\n  overload: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineAction\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: TtsEngineAction\n  nameWithType: TtsEngineAction\n  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineAction\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Speech.Synthesis.TtsEngine.SayAs\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: SayAs\n  nameWithType: SayAs\n  fullName: System.Speech.Synthesis.TtsEngine.SayAs\n- uid: System.Speech.Synthesis.TtsEngine.Prosody\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: Prosody\n  nameWithType: Prosody\n  fullName: System.Speech.Synthesis.TtsEngine.Prosody\n- uid: System.Char[]\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: Char[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Action\n  nameWithType: FragmentState.Action\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Duration\n  nameWithType: FragmentState.Duration\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Emphasis\n  nameWithType: FragmentState.Emphasis\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FragmentState.Equals(Object)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Equals(FragmentState)\n  nameWithType: FragmentState.Equals(FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: FragmentState\n  nameWithType: FragmentState\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FragmentState.GetHashCode()\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: LangId\n  nameWithType: FragmentState.LangId\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: op_Equality(FragmentState,FragmentState)\n  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: op_Inequality(FragmentState,FragmentState)\n  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Phoneme\n  nameWithType: FragmentState.Phoneme\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Prosody\n  nameWithType: FragmentState.Prosody\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: SayAs\n  nameWithType: FragmentState.SayAs\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: FragmentState\n  nameWithType: FragmentState.FragmentState\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Action\n  nameWithType: FragmentState.Action\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Duration\n  nameWithType: FragmentState.Duration\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Emphasis\n  nameWithType: FragmentState.Emphasis\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Equals\n  nameWithType: FragmentState.Equals\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: GetHashCode\n  nameWithType: FragmentState.GetHashCode\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: LangId\n  nameWithType: FragmentState.LangId\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: op_Equality\n  nameWithType: FragmentState.op_Equality\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: op_Inequality\n  nameWithType: FragmentState.op_Inequality\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Phoneme\n  nameWithType: FragmentState.Phoneme\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: Prosody\n  nameWithType: FragmentState.Prosody\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*\n  parent: System.Speech.Synthesis.TtsEngine.FragmentState\n  isExternal: false\n  name: SayAs\n  nameWithType: FragmentState.SayAs\n"}