{"nodes":[{"pos":[1012,1258],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source.","pos":[126,246]}]},{"pos":[1272,2597],"content":"> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.       EmbossBitmapEffect is one of several effects that are shipped with the SDK. Other effects include:      -   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>      -   <xref:System.Windows.Media.Effects.BlurBitmapEffect>      -   <xref:System.Windows.Media.Effects.BevelBitmapEffect>      -   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>       An emboss makes a selection appear raised or stamped by converting its fill color to gray and tracing the edges with the original fill color. The following illustration shows a EmbossBitmapEffect applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Image>).       ![Screenshot: Compare image with and without emboss](~/add/media/effects-embosssimple.png \"Screenshot: Compare image with and without emboss\")       The visual effect of an emboss can be modified using the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A> and <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> bitmap effects are software rendered.","pos":[0,114],"source":"> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] bitmap effects are software rendered."},{"content":"Any object that applies an effect will also be rendered in software.","pos":[115,183]},{"content":"Bitmap effects should not be applied to large visuals or animations as this can degrade performance.","pos":[184,284]},{"content":"EmbossBitmapEffect is one of several effects that are shipped with the SDK.","pos":[291,366]},{"content":"Other effects include:      -   &lt;xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt;      -   &lt;xref:System.Windows.Media.Effects.BlurBitmapEffect&gt;      -   &lt;xref:System.Windows.Media.Effects.BevelBitmapEffect&gt;      -   &lt;xref:System.Windows.Media.Effects.DropShadowBitmapEffect&gt;       An emboss makes a selection appear raised or stamped by converting its fill color to gray and tracing the edges with the original fill color.","pos":[367,797],"source":" Other effects include:      -   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>      -   <xref:System.Windows.Media.Effects.BlurBitmapEffect>      -   <xref:System.Windows.Media.Effects.BevelBitmapEffect>      -   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>       An emboss makes a selection appear raised or stamped by converting its fill color to gray and tracing the edges with the original fill color."},{"content":"The following illustration shows a EmbossBitmapEffect applied to a visual object (in this case applied to a &lt;xref:System.Windows.Controls.Image&gt;).","pos":[798,944],"source":" The following illustration shows a EmbossBitmapEffect applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Image>)."},{"content":"<bpt id=\"p1\">![</bpt>Screenshot: Compare image with and without emboss<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-embosssimple.png \"</bpt>Screenshot: Compare image with and without emboss<ept id=\"p2\">\")</ept>       The visual effect of an emboss can be modified using the &lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A&gt; and &lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A&gt; properties.","pos":[951,1306],"source":"![Screenshot: Compare image with and without emboss](~/add/media/effects-embosssimple.png \"Screenshot: Compare image with and without emboss\")       The visual effect of an emboss can be modified using the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A> and <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> properties."}]},{"pos":[7460,7695],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"></xref> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[126,235],"source":" Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"></xref> class."}]},{"pos":[8719,9027],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","pos":[0,306],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version.","pos":[148,207]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[214,306],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}]},{"pos":[9227,9549],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,322],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[10500,10820],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","pos":[0,318],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version.","pos":[148,207]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;.","pos":[214,318],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}]},{"pos":[11032,11353],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[42,321],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[12085,12097],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12882,12894],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13421,13628],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the direction the artificial light is cast upon the embossed object.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the direction the artificial light is cast upon the embossed object.","pos":[126,207]}]},{"pos":[13642,14227],"content":"The direction of light cast on the embossed object affects the shadowing of the embossed visual object.       The following diagram shows what direction light comes from for a given value of this property:       ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \"Diagram: DropShadow direction\")      <a name=\"dependencyPropertyInfo_LightAngle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The direction of light cast on the embossed object affects the shadowing of the embossed visual object.","pos":[0,103]},{"content":"The following diagram shows what direction light comes from for a given value of this property:       <bpt id=\"p1\">![</bpt>Diagram: DropShadow direction<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-dropshadowdirection2.png \"</bpt>Diagram: DropShadow direction<ept id=\"p2\">\")</ept>      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_LightAngle\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[110,569],"source":"       The following diagram shows what direction light comes from for a given value of this property:       ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \"Diagram: DropShadow direction\")      <a name=\"dependencyPropertyInfo_LightAngle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[14348,14605],"content":"The direction the artificial light is cast upon the embossed object. The valid range is from `0-360` (degrees) with `0` specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The default value is `45`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The direction the artificial light is cast upon the embossed object.","pos":[0,68]},{"content":"The valid range is from <ph id=\"ph1\">`0-360`</ph> (degrees) with <ph id=\"ph2\">`0`</ph> specifying the right-hand side of the object and successive values moving counter-clockwise around the object.","pos":[69,230],"source":" The valid range is from `0-360` (degrees) with `0` specifying the right-hand side of the object and successive values moving counter-clockwise around the object."},{"content":"The default value is <ph id=\"ph1\">`45`</ph>.","pos":[231,257],"source":" The default value is `45`."}]},{"pos":[15158,15386],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*> dependency property.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the &lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*&gt; dependency property.","pos":[126,228],"source":" Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*> dependency property."}]},{"pos":[15565,15577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16001,16175],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the amount of relief of the emboss.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Gets or sets the amount of relief of the emboss.","pos":[126,174]}]},{"pos":[16189,16651],"content":"The following illustration demonstrates the effect of this property:       <bpt id=\"p1\">![</bpt>Screenshot: Compare minimum and higher relief<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/effects-embossrelief.png \"</bpt>Screenshot: Compare minimum and higher relief<ept id=\"p2\">\")</ept>      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_Relief\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"source":"The following illustration demonstrates the effect of this property:       ![Screenshot: Compare minimum and higher relief](~/add/media/effects-embossrelief.png \"Screenshot: Compare minimum and higher relief\")      <a name=\"dependencyPropertyInfo_Relief\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>|   |Metadata properties set to `true`|None|"},{"pos":[16768,16925],"content":"The amount of relief of the emboss. The valid range of values is `0-1` with `0` having the least relief and `1` having the most. The default value is `0.44`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of relief of the emboss.","pos":[0,35]},{"content":"The valid range of values is <ph id=\"ph1\">`0-1`</ph> with <ph id=\"ph2\">`0`</ph> having the least relief and <ph id=\"ph3\">`1`</ph> having the most.","pos":[36,128],"source":" The valid range of values is `0-1` with `0` having the least relief and `1` having the most."},{"content":"The default value is <ph id=\"ph1\">`0.44`</ph>.","pos":[129,157],"source":" The default value is `0.44`."}]},{"pos":[17454,17678],"content":"**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*> dependency property.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note: This API is now obsolete.<ept id=\"p1\">**</ept>","pos":[0,35],"source":"**Note: This API is now obsolete.**"},{"content":"The non-obsolete alternative is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,125],"source":" The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>."},{"content":"Identifies the &lt;xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*&gt; dependency property.","pos":[126,224],"source":" Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*> dependency property."}]},{"pos":[17853,17865],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18759,18771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect\n  id: EmbossBitmapEffect\n  children:\n  - System.Windows.Media.Effects.EmbossBitmapEffect.#ctor\n  - System.Windows.Media.Effects.EmbossBitmapEffect.Clone\n  - System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue\n  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore\n  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect\n  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle\n  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty\n  - System.Windows.Media.Effects.EmbossBitmapEffect.Relief\n  - System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty\n  - System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  langs:\n  - csharp\n  name: EmbossBitmapEffect\n  nameWithType: EmbossBitmapEffect\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect\n  type: Class\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source.'\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.  \\n  \\n EmbossBitmapEffect is one of several effects that are shipped with the SDK. Other effects include:  \\n  \\n-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.BevelBitmapEffect>  \\n  \\n-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  \\n  \\n An emboss makes a selection appear raised or stamped by converting its fill color to gray and tracing the edges with the original fill color. The following illustration shows a EmbossBitmapEffect applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Image>).  \\n  \\n ![Screenshot: Compare image with and without emboss](~/add/media/effects-embosssimple.png \\\"Screenshot: Compare image with and without emboss\\\")  \\n  \\n The visual effect of an emboss can be modified using the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A> and <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> properties.\"\n  syntax:\n    content: 'public sealed class EmbossBitmapEffect : System.Windows.Media.Effects.BitmapEffect'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Effects.BitmapEffect\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: EmbossBitmapEffect()\n  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"></xref> class.'\n  syntax:\n    content: public EmbossBitmapEffect ();\n    parameters: []\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone\n  id: Clone\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: EmbossBitmapEffect.Clone()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"></xref>, making deep copies of this object''s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.'\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Effects.EmbossBitmapEffect Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.EmbossBitmapEffect\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: EmbossBitmapEffect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.EmbossBitmapEffect\"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Effects.EmbossBitmapEffect CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.EmbossBitmapEffect\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: EmbossBitmapEffect.CreateInstanceCore()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: To be added.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect\n  id: CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: CreateUnmanagedEffect()\n  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.SafeHandle\n      description: To be added.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle\n  id: LightAngle\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: LightAngle\n  nameWithType: EmbossBitmapEffect.LightAngle\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the direction the artificial light is cast upon the embossed object.'\n  remarks: \"The direction of light cast on the embossed object affects the shadowing of the embossed visual object.  \\n  \\n The following diagram shows what direction light comes from for a given value of this property:  \\n  \\n ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png \\\"Diagram: DropShadow direction\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_LightAngle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double LightAngle { get; set; }\n    return:\n      type: System.Double\n      description: The direction the artificial light is cast upon the embossed object. The valid range is from `0-360` (degrees) with `0` specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The default value is `45`.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty\n  id: LightAngleProperty\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: LightAngleProperty\n  nameWithType: EmbossBitmapEffect.LightAngleProperty\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief\n  id: Relief\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: Relief\n  nameWithType: EmbossBitmapEffect.Relief\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Gets or sets the amount of relief of the emboss.'\n  remarks: \"The following illustration demonstrates the effect of this property:  \\n  \\n ![Screenshot: Compare minimum and higher relief](~/add/media/effects-embossrelief.png \\\"Screenshot: Compare minimum and higher relief\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_Relief\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Relief { get; set; }\n    return:\n      type: System.Double\n      description: The amount of relief of the emboss. The valid range of values is `0-1` with `0` having the least relief and `1` having the most. The default value is `0.44`.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty\n  id: ReliefProperty\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: ReliefProperty\n  nameWithType: EmbossBitmapEffect.ReliefProperty\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=\"System.Windows.Media.Effects.Effect\"></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*> dependency property.'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ReliefProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  langs:\n  - csharp\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);\n    parameters:\n    - id: unmanagedEffect\n      type: System.Runtime.InteropServices.SafeHandle\n      description: To be added.\n  overload: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: EmbossBitmapEffect()\n  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: Clone()\n  nameWithType: EmbossBitmapEffect.Clone()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: EmbossBitmapEffect\n  nameWithType: EmbossBitmapEffect\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: EmbossBitmapEffect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: EmbossBitmapEffect.CreateInstanceCore()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CreateUnmanagedEffect()\n  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: LightAngle\n  nameWithType: EmbossBitmapEffect.LightAngle\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: LightAngleProperty\n  nameWithType: EmbossBitmapEffect.LightAngleProperty\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: Relief\n  nameWithType: EmbossBitmapEffect.Relief\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: ReliefProperty\n  nameWithType: EmbossBitmapEffect.ReliefProperty\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: EmbossBitmapEffect\n  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: Clone\n  nameWithType: EmbossBitmapEffect.Clone\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: EmbossBitmapEffect.CloneCurrentValue\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: EmbossBitmapEffect.CreateInstanceCore\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: CreateUnmanagedEffect\n  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: LightAngle\n  nameWithType: EmbossBitmapEffect.LightAngle\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: Relief\n  nameWithType: EmbossBitmapEffect.Relief\n- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*\n  parent: System.Windows.Media.Effects.EmbossBitmapEffect\n  isExternal: false\n  name: UpdateUnmanagedPropertyState\n  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState\n"}