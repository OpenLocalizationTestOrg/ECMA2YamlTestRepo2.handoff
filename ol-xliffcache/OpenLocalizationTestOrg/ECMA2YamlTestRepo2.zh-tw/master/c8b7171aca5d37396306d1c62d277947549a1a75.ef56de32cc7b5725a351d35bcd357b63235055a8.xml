{"nodes":[{"pos":[398,478],"content":"Evaluates JScript code. This class belongs to the abstract syntax tree category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates JScript code. This class belongs to the abstract syntax tree category.","pos":[0,80],"nodes":[{"content":"Evaluates JScript code.","pos":[0,23]},{"content":"This class belongs to the abstract syntax tree category.","pos":[24,80]}]}]},{"pos":[1149,1216],"content":"Evaluates the specified JScript code by using the specified engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates the specified JScript code by using the specified engine.","pos":[0,67]}]},{"pos":[1412,1433],"content":"The code to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code to evaluate.","pos":[0,21]}]},{"pos":[1514,1578],"content":"A reference to the scripting engine to use to evaluate <ph id=\"ph1\">`source`</ph>.","needQuote":true,"needEscape":true,"source":"A reference to the scripting engine to use to evaluate `source`."},{"pos":[1636,1742],"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the evaluation.","pos":[0,29]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a string, return value is <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[30,106],"source":" If <code>source</code> is not a string, return value is <code>source</code>."}]},{"pos":[2358,2443],"content":"Evaluates the specified JScript code by using the specified engine and safety option.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates the specified JScript code by using the specified engine and safety option.","pos":[0,85]}]},{"pos":[2660,2681],"content":"The code to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code to evaluate.","pos":[0,21]}]},{"pos":[2750,2881],"content":"The string literal <ph id=\"ph1\">`unsafe`</ph> to enable unsafe evaluation; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string literal `unsafe` to enable unsafe evaluation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2962,3026],"content":"A reference to the scripting engine to use to evaluate <ph id=\"ph1\">`source`</ph>.","needQuote":true,"needEscape":true,"source":"A reference to the scripting engine to use to evaluate `source`."},{"pos":[3084,3190],"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the evaluation.","pos":[0,29]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a string, return value is <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[30,106],"source":" If <code>source</code> is not a string, return value is <code>source</code>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.Eval\n  id: Eval\n  children:\n  - Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  langs:\n  - csharp\n  name: Eval\n  nameWithType: Eval\n  fullName: Microsoft.JScript.Eval\n  type: Class\n  summary: Evaluates JScript code. This class belongs to the abstract syntax tree category.\n  syntax:\n    content: 'public sealed class Eval : Microsoft.JScript.AST'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.AST\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  langs:\n  - csharp\n  name: JScriptEvaluate(Object,VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object,VsaEngine)\n  fullName: Microsoft.JScript.Eval.JScriptEvaluate(Object,VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Evaluates the specified JScript code by using the specified engine.\n  syntax:\n    content: public static object JScriptEvaluate (object source, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The code to evaluate.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine to use to evaluate `source`.\n    return:\n      type: System.Object\n      description: The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.\n  overload: Microsoft.JScript.Eval.JScriptEvaluate*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  langs:\n  - csharp\n  name: JScriptEvaluate(Object,Object,VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object,Object,VsaEngine)\n  fullName: Microsoft.JScript.Eval.JScriptEvaluate(Object,Object,VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Evaluates the specified JScript code by using the specified engine and safety option.\n  syntax:\n    content: public static object JScriptEvaluate (object source, object unsafeOption, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The code to evaluate.\n    - id: unsafeOption\n      type: System.Object\n      description: The string literal `unsafe` to enable unsafe evaluation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine to use to evaluate `source`.\n    return:\n      type: System.Object\n      description: The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.\n  overload: Microsoft.JScript.Eval.JScriptEvaluate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.AST\n  isExternal: false\n  name: Microsoft.JScript.AST\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate(Object,VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object,VsaEngine)\n  fullName: Microsoft.JScript.Eval.JScriptEvaluate(Object,VsaEngine)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.Vsa.VsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: VsaEngine\n  nameWithType: VsaEngine\n  fullName: Microsoft.JScript.Vsa.VsaEngine\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate(Object,Object,VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object,Object,VsaEngine)\n  fullName: Microsoft.JScript.Eval.JScriptEvaluate(Object,Object,VsaEngine)\n- uid: Microsoft.JScript.Eval.JScriptEvaluate*\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate\n  nameWithType: Eval.JScriptEvaluate\n"}