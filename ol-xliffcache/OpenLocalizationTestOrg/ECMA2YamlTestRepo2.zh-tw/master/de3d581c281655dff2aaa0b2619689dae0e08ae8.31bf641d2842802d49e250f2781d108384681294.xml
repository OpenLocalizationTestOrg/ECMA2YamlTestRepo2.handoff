{"nodes":[{"pos":[1097,1194],"content":"Manages asynchronous code activity execution from start to completion. This is an abstract class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages asynchronous code activity execution from start to completion. This is an abstract class.","pos":[0,97],"nodes":[{"content":"Manages asynchronous code activity execution from start to completion.","pos":[0,70]},{"content":"This is an abstract class.","pos":[71,97]}]}]},{"pos":[2264,2357],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.AsyncCodeActivity\"></xref> class."},{"pos":[3189,3358],"content":"When implemented in a derived class and using the specified execution context, callback method, and user state, enqueues an asynchronous activity in a run-time workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class and using the specified execution context, callback method, and user state, enqueues an asynchronous activity in a run-time workflow.","pos":[0,169]}]},{"pos":[3832,3948],"content":"Information that defines the execution environment for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>."},{"pos":[4020,4118],"content":"The method to be called after the asynchronous activity and completion notification have occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to be called after the asynchronous activity and completion notification have occurred.","pos":[0,98]}]},{"pos":[4180,4266],"content":"An object that saves variable information for an instance of an asynchronous activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that saves variable information for an instance of an asynchronous activity.","pos":[0,86]}]},{"pos":[4330,4417],"content":"The object that saves variable information for an instance of an asynchronous activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that saves variable information for an instance of an asynchronous activity.","pos":[0,87]}]},{"pos":[5014,5101],"content":"Not implemented. Use <xref:System.Activities.AsyncCodeActivity.CacheMetadata*> instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented. Use <xref:System.Activities.AsyncCodeActivity.CacheMetadata*> instead.","pos":[0,87],"nodes":[{"content":"Not implemented.","pos":[0,16]},{"content":"Use &lt;xref:System.Activities.AsyncCodeActivity.CacheMetadata*&gt; instead.","pos":[17,87],"source":" Use <xref:System.Activities.AsyncCodeActivity.CacheMetadata*> instead."}]}]},{"pos":[5318,5334],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[5952,6077],"content":"Serves as a virtual method and converts information obtained by cache reflection into arguments for an asynchronous activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a virtual method and converts information obtained by cache reflection into arguments for an asynchronous activity.","pos":[0,125]}]},{"pos":[6089,6426],"content":"Custom activity authors can provide validation logic in an activity's CacheMetadata override. Any exceptions that are thrown from CacheMetadata are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom activity authors can provide validation logic in an activity's CacheMetadata override. Any exceptions that are thrown from CacheMetadata are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","pos":[0,337],"nodes":[{"content":"Custom activity authors can provide validation logic in an activity's CacheMetadata override.","pos":[0,93]},{"content":"Any exceptions that are thrown from CacheMetadata are not treated as validation errors.","pos":[94,181]},{"content":"These exceptions will escape from the call to &lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt; and must be handled by the caller.","pos":[182,337],"source":" These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller."}]}]},{"pos":[6643,6774],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Activities.CodeActivityMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains data for a set of asynchronous activity arguments.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Activities.CodeActivityMetadata\"></xref> object that contains data for a set of asynchronous activity arguments."},{"pos":[7377,7603],"content":"When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has reached an early completion. Serves as a virtual method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has reached an early completion. Serves as a virtual method.","pos":[0,226],"nodes":[{"content":"When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has reached an early completion.","pos":[0,198]},{"content":"Serves as a virtual method.","pos":[199,226]}]}]},{"pos":[7819,7935],"content":"Information that defines the execution environment for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>."},{"pos":[8630,8821],"content":"When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the associated asynchronous activity operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the associated asynchronous activity operation has completed.","pos":[0,191]}]},{"pos":[9266,9382],"content":"Information that defines the execution environment for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>."},{"pos":[9451,9566],"content":"The implemented <xref:System.IAsyncResult> that returns the status of an asynchronous activity when execution ends.","needQuote":true,"needEscape":true,"nodes":[{"content":"The implemented &lt;xref:System.IAsyncResult&gt; that returns the status of an asynchronous activity when execution ends.","pos":[0,115],"source":"The implemented <xref:System.IAsyncResult> that returns the status of an asynchronous activity when execution ends."}]},{"pos":[10042,10186],"content":"Gets <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or throws an error when there is an attempt to set the value of this property.","needQuote":true,"needEscape":true,"source":"Gets <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or throws an error when there is an attempt to set the value of this property."},{"pos":[10381,10402],"content":"An activity function.","needQuote":true,"needEscape":true,"nodes":[{"content":"An activity function.","pos":[0,21]}]},{"pos":[10917,10973],"content":"Gets or sets the implementation version of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the implementation version of the activity.","pos":[0,56]}]},{"pos":[11125,11168],"content":"The implementation version of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The implementation version of the activity.","pos":[0,43]}]},{"pos":[11943,12002],"content":"Raises an event when creating a map for the dynamic update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises an event when creating a map for the dynamic update.","pos":[0,59]}]},{"pos":[12305,12323],"content":"The metadata used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata used.","pos":[0,18]}]},{"pos":[12409,12431],"content":"The original activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original activity.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.AsyncCodeActivity\n  id: AsyncCodeActivity\n  children:\n  - System.Activities.AsyncCodeActivity.#ctor\n  - System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)\n  - System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  - System.Activities.AsyncCodeActivity.Implementation\n  - System.Activities.AsyncCodeActivity.ImplementationVersion\n  - System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  langs:\n  - csharp\n  name: AsyncCodeActivity\n  nameWithType: AsyncCodeActivity\n  fullName: System.Activities.AsyncCodeActivity\n  type: Class\n  summary: Manages asynchronous code activity execution from start to completion. This is an abstract class.\n  remarks: ''\n  example:\n  - \"The following example shows how to derive a class from AsyncCodeActivity to create a custom activity.  \\n  \\n [!code-cs[Async#0](~/add/codesnippet/csharp/t-system.activities.asyn_1.cs)]\"\n  syntax:\n    content: 'public abstract class AsyncCodeActivity : System.Activities.Activity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.#ctor\n  id: '#ctor'\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: AsyncCodeActivity()\n  nameWithType: AsyncCodeActivity.AsyncCodeActivity()\n  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Creates a new instance of the <xref href=\"System.Activities.AsyncCodeActivity\"></xref> class.\n  syntax:\n    content: protected AsyncCodeActivity ();\n    parameters: []\n  overload: System.Activities.AsyncCodeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class and using the specified execution context, callback method, and user state, enqueues an asynchronous activity in a run-time workflow.\n  remarks: ''\n  example:\n  - \"The following example shows how to override the BeginExecute method in a custom activity.  \\n  \\n [!code-cs[Async#1](~/add/codesnippet/csharp/fea949eb-d912-4322-a111-_1.cs)]\"\n  syntax:\n    content: protected abstract IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called after the asynchronous activity and completion notification have occurred.\n    - id: state\n      type: System.Object\n      description: An object that saves variable information for an instance of an asynchronous activity.\n    return:\n      type: System.IAsyncResult\n      description: The object that saves variable information for an instance of an asynchronous activity.\n  overload: System.Activities.AsyncCodeActivity.BeginExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  id: CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Not implemented. Use <xref:System.Activities.AsyncCodeActivity.CacheMetadata*> instead.\n  syntax:\n    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.ActivityMetadata\n      description: Not implemented.\n  overload: System.Activities.AsyncCodeActivity.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Serves as a virtual method and converts information obtained by cache reflection into arguments for an asynchronous activity.\n  remarks: Custom activity authors can provide validation logic in an activity's CacheMetadata override. Any exceptions that are thrown from CacheMetadata are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.\n  syntax:\n    content: protected virtual void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: <xref href=\"System.Activities.CodeActivityMetadata\"></xref> object that contains data for a set of asynchronous activity arguments.\n  overload: System.Activities.AsyncCodeActivity.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)\n  id: Cancel(System.Activities.AsyncCodeActivityContext)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: Cancel(AsyncCodeActivityContext)\n  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)\n  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the asynchronous activity operation has reached an early completion. Serves as a virtual method.\n  syntax:\n    content: protected virtual void Cancel (System.Activities.AsyncCodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>.\n  overload: System.Activities.AsyncCodeActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class and using the specified execution environment information, notifies the workflow runtime that the associated asynchronous activity operation has completed.\n  remarks: ''\n  example:\n  - \"The following example shows how to override the EndExecute method in a custom activity.  \\n  \\n [!code-cs[Async#2](~/add/codesnippet/csharp/250cdc3d-e27b-4bfa-a113-_1.cs)]\"\n  syntax:\n    content: protected abstract void EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: Information that defines the execution environment for the <xref href=\"System.Activities.AsyncCodeActivity\"></xref>.\n    - id: result\n      type: System.IAsyncResult\n      description: The implemented <xref:System.IAsyncResult> that returns the status of an asynchronous activity when execution ends.\n  overload: System.Activities.AsyncCodeActivity.EndExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.Implementation\n  id: Implementation\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: Implementation\n  nameWithType: AsyncCodeActivity.Implementation\n  fullName: System.Activities.AsyncCodeActivity.Implementation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or throws an error when there is an attempt to set the value of this property.\n  syntax:\n    content: protected override sealed Func<System.Activities.Activity> Implementation { get; set; }\n    return:\n      type: System.Func{System.Activities.Activity}\n      description: An activity function.\n  overload: System.Activities.AsyncCodeActivity.Implementation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.ImplementationVersion\n  id: ImplementationVersion\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: ImplementationVersion\n  nameWithType: AsyncCodeActivity.ImplementationVersion\n  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the implementation version of the activity.\n  syntax:\n    content: protected override sealed Version ImplementationVersion { get; set; }\n    return:\n      type: System.Version\n      description: The implementation version of the activity.\n  overload: System.Activities.AsyncCodeActivity.ImplementationVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.AsyncCodeActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating a map for the dynamic update.\n  syntax:\n    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.UpdateMapMetadata\n      description: The metadata used.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Activity\n  isExternal: false\n  name: System.Activities.Activity\n- uid: System.Activities.AsyncCodeActivity.#ctor\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: AsyncCodeActivity()\n  nameWithType: AsyncCodeActivity.AsyncCodeActivity()\n  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()\n- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Activities.AsyncCodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: Cancel(AsyncCodeActivityContext)\n  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)\n  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)\n- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n- uid: System.Activities.AsyncCodeActivity.Implementation\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: AsyncCodeActivity.Implementation\n  fullName: System.Activities.AsyncCodeActivity.Implementation\n- uid: System.Func{System.Activities.Activity}\n  parent: System\n  isExternal: true\n  name: Func<Activity>\n  nameWithType: Func<Activity>\n  fullName: System.Func<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.AsyncCodeActivity.ImplementationVersion\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: AsyncCodeActivity.ImplementationVersion\n  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.AsyncCodeActivity.#ctor*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: AsyncCodeActivity\n  nameWithType: AsyncCodeActivity.AsyncCodeActivity\n- uid: System.Activities.AsyncCodeActivity.BeginExecute*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: BeginExecute\n  nameWithType: AsyncCodeActivity.BeginExecute\n- uid: System.Activities.AsyncCodeActivity.CacheMetadata*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: AsyncCodeActivity.CacheMetadata\n- uid: System.Activities.AsyncCodeActivity.Cancel*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: AsyncCodeActivity.Cancel\n- uid: System.Activities.AsyncCodeActivity.EndExecute*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: EndExecute\n  nameWithType: AsyncCodeActivity.EndExecute\n- uid: System.Activities.AsyncCodeActivity.Implementation*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: AsyncCodeActivity.Implementation\n- uid: System.Activities.AsyncCodeActivity.ImplementationVersion*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: AsyncCodeActivity.ImplementationVersion\n- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*\n  parent: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap\n"}