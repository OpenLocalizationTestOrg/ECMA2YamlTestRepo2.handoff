{"nodes":[{"pos":[2091,2164],"content":"Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.","pos":[0,73]}]},{"pos":[2177,2746],"content":"The SamlAssertion class corresponds to the `<saml:Assertion>` XML element that is defined in the OASIS SAML 1.1 specification.       The claims for <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are contained within a SamlAssertion. A SamlAssertion has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> property. The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SamlAssertion class corresponds to the <ph id=\"ph1\">`&lt;saml:Assertion&gt;`</ph> XML element that is defined in the OASIS SAML 1.1 specification.","pos":[0,126],"source":"The SamlAssertion class corresponds to the `<saml:Assertion>` XML element that is defined in the OASIS SAML 1.1 specification."},{"content":"The claims for &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens are contained within a SamlAssertion.","pos":[133,254],"source":"       The claims for <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are contained within a SamlAssertion."},{"content":"A SamlAssertion has an extensible set of claims known as SAML statements that are represented by the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A&gt; property.","pos":[255,428],"source":" A SamlAssertion has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> property."},{"content":"The SAML authority that issued the SAML assertion is specified in the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A&gt; property.","pos":[429,567],"source":" The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property."}]},{"pos":[3286,3389],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAssertion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> class."},{"pos":[4593,4909],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAssertion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements."},{"pos":[4921,4995],"content":"The <ph id=\"ph1\">`assertionId`</ph> parameter must start with a letter or the \"_\" character.","needQuote":true,"needEscape":true,"source":"The `assertionId` parameter must start with a letter or the \"_\" character."},{"pos":[5391,5424],"content":"The identifier for the assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the assertion.","pos":[0,33]}]},{"pos":[5487,5538],"content":"The SAML authority that issued this SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SAML authority that issued this SAML assertion.","pos":[0,51]}]},{"pos":[5609,5684],"content":"A <xref:System.DateTime> that specifies when the SAML assertion was issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that specifies when the SAML assertion was issued.","pos":[0,75],"source":"A <xref:System.DateTime> that specifies when the SAML assertion was issued."}]},{"pos":[5784,5966],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlConditions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion."},{"pos":[6058,6243],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAdvice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion."},{"pos":[6382,6541],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contain SAML statements.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IEnumerable%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that contain SAML statements."},{"pos":[6712,7496],"content":"<code>assertionId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>assertionId</code> is <xref:System.String.Empty>       -or-       <code>assertionId</code> does not start with a letter or the \"_\" character.       -or-       <code>issuer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>issuer</code> is <xref:System.String.Empty>       -or-       <code>samlStatements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>samlStatements</code> does not contain any elements       -or-       <code>samlStatements</code> contains a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> element","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assertionId&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;assertionId&lt;/code&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph>       -or-       <ph id=\"ph4\">&lt;code&gt;assertionId&lt;/code&gt;</ph> does not start with a letter or the \"_\" character.","pos":[0,253],"source":"<code>assertionId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>assertionId</code> is <xref:System.String.Empty>       -or-       <code>assertionId</code> does not start with a letter or the \"_\" character."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;issuer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;issuer&lt;/code&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph>       -or-       <ph id=\"ph4\">&lt;code&gt;samlStatements&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph5\">&lt;code&gt;samlStatements&lt;/code&gt;</ph> does not contain any elements       -or-       <ph id=\"ph6\">&lt;code&gt;samlStatements&lt;/code&gt;</ph> contains a <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> element","pos":[260,730],"source":"       -or-       <code>issuer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>issuer</code> is <xref:System.String.Empty>       -or-       <code>samlStatements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>samlStatements</code> does not contain any elements       -or-       <code>samlStatements</code> contains a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> element"}]},{"pos":[7883,8094],"content":"Gets or sets additional information related to the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is supplied by the SAML authority that can aide in the processing of the SAML assertion.","needQuote":true,"needEscape":true,"source":"Gets or sets additional information related to the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> that is supplied by the SAML authority that can aide in the processing of the SAML assertion."},{"pos":[8106,8241],"content":"The Advice property corresponds to the <ph id=\"ph1\">`&lt;saml:Advice&gt;`</ph> element defined in the Assertions and Protocol for the OASIS SAML specification.","needQuote":true,"needEscape":true,"source":"The Advice property corresponds to the `<saml:Advice>` element defined in the Assertions and Protocol for the OASIS SAML specification."},{"pos":[8414,8607],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAdvice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion."},{"pos":[8794,8963],"content":"The Advice property is set and the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The Advice property is set and the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[9374,9421],"content":"Gets or sets the identifier for this assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the identifier for this assertion.","pos":[0,47]}]},{"pos":[9433,9579],"content":"The AssertionId property corresponds to the <ph id=\"ph1\">`AssertionID`</ph> attribute of the <ph id=\"ph2\">`&lt;saml:Assertion&gt;`</ph> element defined in the OASIS SAML 1.1 specification.","needQuote":true,"needEscape":true,"source":"The AssertionId property corresponds to the `AssertionID` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification."},{"pos":[9700,9734],"content":"The identifier for this assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for this assertion.","pos":[0,34]}]},{"pos":[9926,10132],"content":"The value of the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an attempt is made to set the AssertionId property.","needQuote":true,"needEscape":true,"source":"The value of the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the AssertionId property."},{"pos":[10227,10361],"content":"An attempt is made to set the AssertionId property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the AssertionId property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[10807,10930],"content":"Gets a value that indicates whether this assertion was deserialized from XML source and can re-emit the XML data unchanged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this assertion was deserialized from XML source and can re-emit the XML data unchanged.","pos":[0,123]}]},{"pos":[10943,11522],"content":"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion \"template\" is loaded and certain bits of data are filled in, the Id must be changed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation preserves the source data when read using the &lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A&gt; method and can re-emit the original data as long as the &lt;xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A&gt; property has not changed from the time that assertion was read.","pos":[0,338],"source":"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  It is very important that SAML assertions with different data have different IDs.","pos":[344,443],"source":"      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs."},{"content":"If implementing a scheme whereby an assertion \"template\" is loaded and certain bits of data are filled in, the Id must be changed.","pos":[444,574]}]},{"pos":[11653,11849],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this assertion can re-emit the XML source data unchanged; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this assertion can re-emit the XML source data unchanged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12346,12460],"content":"Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.","pos":[0,114]}]},{"pos":[12472,12587],"content":"The Conditions property corresponds to the <ph id=\"ph1\">`&lt;saml:Conditions&gt;`</ph> element defined in the OASIS SAML 1.1 specification.","needQuote":true,"needEscape":true,"source":"The Conditions property corresponds to the `<saml:Conditions>` element defined in the OASIS SAML 1.1 specification."},{"pos":[12772,12954],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlConditions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion."},{"pos":[13145,13337],"content":"The &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an attempt is made to set the Conditions property.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the Conditions property."},{"pos":[13743,13821],"content":"Gets a value indicating whether the properties of this instance are read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the properties of this instance are read-only.","pos":[0,78]}]},{"pos":[13833,14009],"content":"To make this instance of the <xref:System.IdentityModel.Tokens.SamlAssertion> class read-only, call the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"To make this instance of the &lt;xref:System.IdentityModel.Tokens.SamlAssertion&gt; class read-only, call the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A&gt; method.","pos":[0,176],"source":"To make this instance of the <xref:System.IdentityModel.Tokens.SamlAssertion> class read-only, call the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method."}]},{"pos":[14123,14387],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the properties of this instance are read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,264],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14886,14952],"content":"Gets or sets the date and time when the SAML assertion was issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the date and time when the SAML assertion was issued.","pos":[0,66]}]},{"pos":[14964,15112],"content":"The IssueInstant property corresponds to the <ph id=\"ph1\">`IssueInstant`</ph> attribute of the <ph id=\"ph2\">`&lt;saml:Assertion&gt;`</ph> element defined in the OASIS 1.1 SAML specification.","needQuote":true,"needEscape":true,"source":"The IssueInstant property corresponds to the `IssueInstant` attribute of the `<saml:Assertion>` element defined in the OASIS 1.1 SAML specification."},{"pos":[15238,15363],"content":"A <xref:System.DateTime> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued.","pos":[0,125],"source":"A <xref:System.DateTime> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued."}]},{"pos":[15556,15750],"content":"The &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an attempt is made to set the IssueInstant property.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the IssueInstant property."},{"pos":[16136,16212],"content":"Gets or sets the name of the SAML authority that issued this SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the SAML authority that issued this SAML assertion.","pos":[0,76]}]},{"pos":[16224,16360],"content":"The Issuer property corresponds to the <ph id=\"ph1\">`Issuer`</ph> attribute of the <ph id=\"ph2\">`&lt;saml:Assertion&gt;`</ph> element defined in the OASIS SAML 1.1 specification.","needQuote":true,"needEscape":true,"source":"The Issuer property corresponds to the `Issuer` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification."},{"pos":[16476,16527],"content":"The SAML authority that issued this SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SAML authority that issued this SAML assertion.","pos":[0,51]}]},{"pos":[16714,16902],"content":"The &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an attempt is made to set the Issuer property.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the Issuer property."},{"pos":[16997,17126],"content":"An attempt is made to set the Issuer property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the Issuer property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[17542,17629],"content":"Gets the major version of the SAML specification to which this SAML assertion conforms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the major version of the SAML specification to which this SAML assertion conforms.","pos":[0,87]}]},{"pos":[17641,17817],"content":"The MajorVersion property corresponds to the <ph id=\"ph1\">`MajorVersion`</ph> attribute of the <ph id=\"ph2\">`&lt;saml:Assertion&gt;`</ph> element defined in the Assertions and Protocol for the OASIS SAML specification.","needQuote":true,"needEscape":true,"source":"The MajorVersion property corresponds to the `MajorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification."},{"pos":[17930,18128],"content":"The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*> property.","pos":[0,198],"nodes":[{"content":"The major version of the SAML specification to which this SAML assertion conforms.","pos":[0,82]},{"content":"The default value is the value of the &lt;xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*&gt; property.","pos":[83,198],"source":" The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*> property."}]}]},{"pos":[18633,18670],"content":"Causes this instance to be read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes this instance to be read-only.","pos":[0,37]}]},{"pos":[18682,18815],"content":"When the MakeReadOnly method is called, the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is set to `true`."},{"pos":[19387,19474],"content":"Gets the minor version of the SAML specification to which this SAML assertion conforms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minor version of the SAML specification to which this SAML assertion conforms.","pos":[0,87]}]},{"pos":[19486,19662],"content":"The MinorVersion property corresponds to the <ph id=\"ph1\">`MinorVersion`</ph> attribute of the <ph id=\"ph2\">`&lt;saml:Assertion&gt;`</ph> element defined in the Assertions and Protocol for the OASIS SAML specification.","needQuote":true,"needEscape":true,"source":"The MinorVersion property corresponds to the `MinorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification."},{"pos":[19775,19973],"content":"The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*> property.","pos":[0,198],"nodes":[{"content":"The minor version of the SAML specification to which this SAML assertion conforms.","pos":[0,82]},{"content":"The default value is the value of the &lt;xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*&gt; property.","pos":[83,198],"source":" The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*> property."}]}]},{"pos":[21089,21157],"content":"Reads the digital signature for a SAML assertion from an XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads the digital signature for a SAML assertion from an XML reader.","pos":[0,68]}]},{"pos":[21169,21295],"content":"When the ReadSignature method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property is set.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the ReadSignature method is called, the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A&gt; property is set.","pos":[0,126],"source":"When the ReadSignature method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property is set."}]},{"pos":[21694,21764],"content":"A <xref:System.Xml.XmlDictionaryReader> to read the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the digital signature.","pos":[0,70],"source":"A <xref:System.Xml.XmlDictionaryReader> to read the digital signature."}]},{"pos":[21879,22071],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[22189,22335],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[22435,22584],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of reading XML elements that are defined in the SAML specification.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements that are defined in the SAML specification."},{"pos":[22771,23069],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>       -or-       the digital signature has not been read from the SAML assertion yet.","needQuote":false,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>samlSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       the digital signature has not been read from the SAML assertion yet."},{"pos":[24071,24124],"content":"Reads a SAML assertion from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a SAML assertion from the specified XML reader.","pos":[0,53]}]},{"pos":[24522,24589],"content":"A <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the SAML assertion.","pos":[0,67],"source":"A <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion."}]},{"pos":[24689,24860],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification."},{"pos":[24975,25167],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[25285,25431],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[25612,25820],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":false,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>samlSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[25932,26023],"content":"the ReadXml method had been previously called and that SAML assertion was digitally signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"the ReadXml method had been previously called and that SAML assertion was digitally signed.","pos":[0,91]}]},{"pos":[26170,26275],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification.","needQuote":true,"needEscape":true,"source":"<code>reader</code> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification."},{"pos":[26721,26810],"content":"Gets or sets the security credentials that are used to digitally sign the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security credentials that are used to digitally sign the SAML assertion.","pos":[0,89]}]},{"pos":[26822,27124],"content":"The SigningCredentials property represents the credentials that are used to sign a SAML assertion when it is serialized into XML. Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SigningCredentials property represents the credentials that are used to sign a SAML assertion when it is serialized into XML. Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message.","pos":[0,302],"nodes":[{"content":"The SigningCredentials property represents the credentials that are used to sign a SAML assertion when it is serialized into XML.","pos":[0,129]},{"content":"Similarly, the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A&gt; property represents the security token that signed a SAML token in an incoming SOAP message.","pos":[130,302],"source":" Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message."}]}]},{"pos":[27325,27445],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SigningCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to digitally sign the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> that is used to digitally sign the SAML assertion."},{"pos":[27644,27844],"content":"The &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an attempt is made to set the SigningCredentials property.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the SigningCredentials property."},{"pos":[28260,28348],"content":"Gets the security token contained in or referenced by a digitally signed SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the security token contained in or referenced by a digitally signed SAML assertion.","pos":[0,88]}]},{"pos":[28360,28761],"content":"When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A> method is called and a SAML assertion is digitally signed, the digital signature is set to the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property. When the SAML assertion is not digitally signed, the value of the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property is `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A&gt; method is called and a SAML assertion is digitally signed, the digital signature is set to the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A&gt; property.","pos":[0,244],"source":"When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A> method is called and a SAML assertion is digitally signed, the digital signature is set to the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property."},{"content":"When the SAML assertion is not digitally signed, the value of the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[245,401],"source":" When the SAML assertion is not digitally signed, the value of the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property is `null`."}]},{"pos":[28946,29075],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contained in or referenced by a digitally signed SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> contained in or referenced by a digitally signed SAML assertion."},{"pos":[29566,29633],"content":"Gets the set of SAML statements associated with the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the set of SAML statements associated with the SAML assertion.","pos":[0,67]}]},{"pos":[29646,30637],"content":"Use the <xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A> to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is `false`.       The following table maps the three types of SAML statements defined in the Assertions and Protocol for the OASIS SAML specification to their respective types.      |Statement Type|CLR Type|   |--------------------|--------------|   |Authentication|<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>|   |Attribute|<xref:System.IdentityModel.Tokens.SamlAttributeStatement>|   |Authorization decision|<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>|   |Statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlStatement>|   |Subject statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlSubjectStatement>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A&gt; to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A&gt; property is <ph id=\"ph1\">`false`</ph>.","pos":[0,291],"source":"Use the <xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A> to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is `false`."},{"content":"The following table maps the three types of SAML statements defined in the Assertions and Protocol for the OASIS SAML specification to their respective types.","pos":[298,456]},{"content":"|Statement Type|CLR Type|   |--------------------|--------------|   |Authentication|&lt;xref:System.IdentityModel.Tokens.SamlAuthenticationStatement&gt;|   |Attribute|&lt;xref:System.IdentityModel.Tokens.SamlAttributeStatement&gt;|   |Authorization decision|&lt;xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&gt;|   |Statement defined in an extension schema|&lt;xref:System.IdentityModel.Tokens.SamlStatement&gt;|   |Subject statement defined in an extension schema|&lt;xref:System.IdentityModel.Tokens.SamlSubjectStatement&gt;|","pos":[462,981],"source":"      |Statement Type|CLR Type|   |--------------------|--------------|   |Authentication|<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>|   |Attribute|<xref:System.IdentityModel.Tokens.SamlAttributeStatement>|   |Authorization decision|<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>|   |Statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlStatement>|   |Subject statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlSubjectStatement>|"}]},{"pos":[30884,31077],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the SAML statements associated with the SAML assertion.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IList%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that contains the SAML statements associated with the SAML assertion."},{"pos":[31666,31703],"content":"Writes the source data, if available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the source data, if available.","pos":[0,37]}]},{"pos":[31716,32295],"content":"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion \"template\" is loaded and certain bits of data are filled in, the Id must be changed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation preserves the source data when read using the &lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A&gt; method and can re-emit the original data as long as the &lt;xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A&gt; property has not changed from the time that assertion was read.","pos":[0,338],"source":"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  It is very important that SAML assertions with different data have different IDs.","pos":[344,443],"source":"      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs."},{"content":"If implementing a scheme whereby an assertion \"template\" is loaded and certain bits of data are filled in, the Id must be changed.","pos":[444,574]}]},{"pos":[32472,32523],"content":"The XML writer with which to write the source data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer with which to write the source data.","pos":[0,51]}]},{"pos":[32719,32746],"content":"No source data is available","needQuote":true,"needEscape":true,"nodes":[{"content":"No source data is available","pos":[0,27]}]},{"pos":[33580,33746],"content":"Writes the SAML assertion into the specified XML writer as a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;saml:Assertion&amp;gt;\" name=\"&amp;lt;saml:Assertion&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Writes the SAML assertion into the specified XML writer as a <xref uid=\"langword_csharp_&lt;saml:Assertion&gt;\" name=\"&lt;saml:Assertion&gt;\" href=\"\"></xref> element."},{"pos":[34068,34136],"content":"A <xref:System.Xml.XmlDictionaryWriter> to write the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlDictionaryWriter&gt; to write the SAML assertion.","pos":[0,68],"source":"A <xref:System.Xml.XmlDictionaryWriter> to write the SAML assertion."}]},{"pos":[34236,34418],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of writing the objects in the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAssertion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to XML.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of writing the objects in the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> to XML."},{"pos":[34533,34713],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of writing <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clauses.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses."},{"pos":[34895,35103],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;samlSerializer&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":false,"needEscape":true,"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>samlSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[35251,35427],"content":"the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAssertion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification.","needQuote":true,"needEscape":true,"source":"the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SamlAssertion\n  id: SamlAssertion\n  children:\n  - System.IdentityModel.Tokens.SamlAssertion.#ctor\n  - System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})\n  - System.IdentityModel.Tokens.SamlAssertion.Advice\n  - System.IdentityModel.Tokens.SamlAssertion.AssertionId\n  - System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData\n  - System.IdentityModel.Tokens.SamlAssertion.Conditions\n  - System.IdentityModel.Tokens.SamlAssertion.IsReadOnly\n  - System.IdentityModel.Tokens.SamlAssertion.IssueInstant\n  - System.IdentityModel.Tokens.SamlAssertion.Issuer\n  - System.IdentityModel.Tokens.SamlAssertion.MajorVersion\n  - System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly\n  - System.IdentityModel.Tokens.SamlAssertion.MinorVersion\n  - System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)\n  - System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlAssertion.SigningCredentials\n  - System.IdentityModel.Tokens.SamlAssertion.SigningToken\n  - System.IdentityModel.Tokens.SamlAssertion.Statements\n  - System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)\n  - System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  langs:\n  - csharp\n  name: SamlAssertion\n  nameWithType: SamlAssertion\n  fullName: System.IdentityModel.Tokens.SamlAssertion\n  type: Class\n  summary: Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.\n  remarks: \"The SamlAssertion class corresponds to the `<saml:Assertion>` XML element that is defined in the OASIS SAML 1.1 specification.  \\n  \\n The claims for <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are contained within a SamlAssertion. A SamlAssertion has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> property. The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property.\"\n  syntax:\n    content: public class SamlAssertion\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: SamlAssertion()\n  nameWithType: SamlAssertion.SamlAssertion()\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> class.\n  syntax:\n    content: public SamlAssertion ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SamlAssertion.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})\n  id: '#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})'\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n  nameWithType: SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements.\n  remarks: The `assertionId` parameter must start with a letter or the \"_\" character.\n  syntax:\n    content: public SamlAssertion (string assertionId, string issuer, DateTime issueInstant, System.IdentityModel.Tokens.SamlConditions samlConditions, System.IdentityModel.Tokens.SamlAdvice samlAdvice, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> samlStatements);\n    parameters:\n    - id: assertionId\n      type: System.String\n      description: The identifier for the assertion.\n    - id: issuer\n      type: System.String\n      description: The SAML authority that issued this SAML assertion.\n    - id: issueInstant\n      type: System.DateTime\n      description: A <xref:System.DateTime> that specifies when the SAML assertion was issued.\n    - id: samlConditions\n      type: System.IdentityModel.Tokens.SamlConditions\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.\n    - id: samlAdvice\n      type: System.IdentityModel.Tokens.SamlAdvice\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.\n    - id: samlStatements\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}\n      description: An &lt;xref:System.Collections.Generic.IEnumerable%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that contain SAML statements.\n  overload: System.IdentityModel.Tokens.SamlAssertion.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assertionId</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>assertionId</code> is <xref:System.String.Empty>  \\n  \\n -or-  \\n  \\n <code>assertionId</code> does not start with a letter or the \\\"_\\\" character.  \\n  \\n -or-  \\n  \\n <code>issuer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>issuer</code> is <xref:System.String.Empty>  \\n  \\n -or-  \\n  \\n <code>samlStatements</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>samlStatements</code> does not contain any elements  \\n  \\n -or-  \\n  \\n <code>samlStatements</code> contains a <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> element\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.Advice\n  id: Advice\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: Advice\n  nameWithType: SamlAssertion.Advice\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Advice\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets additional information related to the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> that is supplied by the SAML authority that can aide in the processing of the SAML assertion.\n  remarks: The Advice property corresponds to the `<saml:Advice>` element defined in the Assertions and Protocol for the OASIS SAML specification.\n  syntax:\n    content: public System.IdentityModel.Tokens.SamlAdvice Advice { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SamlAdvice\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.Advice*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The Advice property is set and the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId\n  id: AssertionId\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: AssertionId\n  nameWithType: SamlAssertion.AssertionId\n  fullName: System.IdentityModel.Tokens.SamlAssertion.AssertionId\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the identifier for this assertion.\n  remarks: The AssertionId property corresponds to the `AssertionID` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification.\n  syntax:\n    content: public string AssertionId { get; set; }\n    return:\n      type: System.String\n      description: The identifier for this assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.AssertionId*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the AssertionId property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set the AssertionId property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData\n  id: CanWriteSourceData\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: CanWriteSourceData\n  nameWithType: SamlAssertion.CanWriteSourceData\n  fullName: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this assertion was deserialized from XML source and can re-emit the XML data unchanged.\n  remarks: \"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.  \\n  \\n> [!IMPORTANT]\\n>  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion \\\"template\\\" is loaded and certain bits of data are filled in, the Id must be changed.\"\n  syntax:\n    content: public virtual bool CanWriteSourceData { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this assertion can re-emit the XML source data unchanged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions\n  id: Conditions\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: Conditions\n  nameWithType: SamlAssertion.Conditions\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Conditions\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.\n  remarks: The Conditions property corresponds to the `<saml:Conditions>` element defined in the OASIS SAML 1.1 specification.\n  syntax:\n    content: public System.IdentityModel.Tokens.SamlConditions Conditions { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SamlConditions\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.Conditions*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the Conditions property.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly\n  id: IsReadOnly\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: SamlAssertion.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value indicating whether the properties of this instance are read-only.\n  remarks: To make this instance of the <xref:System.IdentityModel.Tokens.SamlAssertion> class read-only, call the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant\n  id: IssueInstant\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: IssueInstant\n  nameWithType: SamlAssertion.IssueInstant\n  fullName: System.IdentityModel.Tokens.SamlAssertion.IssueInstant\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the date and time when the SAML assertion was issued.\n  remarks: The IssueInstant property corresponds to the `IssueInstant` attribute of the `<saml:Assertion>` element defined in the OASIS 1.1 SAML specification.\n  syntax:\n    content: public DateTime IssueInstant { get; set; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued.\n  overload: System.IdentityModel.Tokens.SamlAssertion.IssueInstant*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the IssueInstant property.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer\n  id: Issuer\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: Issuer\n  nameWithType: SamlAssertion.Issuer\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Issuer\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the name of the SAML authority that issued this SAML assertion.\n  remarks: The Issuer property corresponds to the `Issuer` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification.\n  syntax:\n    content: public string Issuer { get; set; }\n    return:\n      type: System.String\n      description: The SAML authority that issued this SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.Issuer*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the Issuer property.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set the Issuer property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion\n  id: MajorVersion\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: MajorVersion\n  nameWithType: SamlAssertion.MajorVersion\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MajorVersion\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the major version of the SAML specification to which this SAML assertion conforms.\n  remarks: The MajorVersion property corresponds to the `MajorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification.\n  syntax:\n    content: public int MajorVersion { get; }\n    return:\n      type: System.Int32\n      description: The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*> property.\n  overload: System.IdentityModel.Tokens.SamlAssertion.MajorVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly\n  id: MakeReadOnly\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: MakeReadOnly()\n  nameWithType: SamlAssertion.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Causes this instance to be read-only.\n  remarks: When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is set to `true`.\n  syntax:\n    content: public void MakeReadOnly ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion\n  id: MinorVersion\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: MinorVersion\n  nameWithType: SamlAssertion.MinorVersion\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MinorVersion\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the minor version of the SAML specification to which this SAML assertion conforms.\n  remarks: The MinorVersion property corresponds to the `MinorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification.\n  syntax:\n    content: public int MinorVersion { get; }\n    return:\n      type: System.Int32\n      description: The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*> property.\n  overload: System.IdentityModel.Tokens.SamlAssertion.MinorVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)\n  id: ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n  nameWithType: SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads the digital signature for a SAML assertion from an XML reader.\n  remarks: When the ReadSignature method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property is set.\n  syntax:\n    content: protected void ReadSignature (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, System.IdentityModel.Tokens.SamlSerializer samlSerializer);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: A <xref:System.Xml.XmlDictionaryReader> to read the digital signature.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    - id: samlSerializer\n      type: System.IdentityModel.Tokens.SamlSerializer\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements that are defined in the SAML specification.\n  overload: System.IdentityModel.Tokens.SamlAssertion.ReadSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>samlSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n the digital signature has not been read from the SAML assertion yet.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a SAML assertion from the specified XML reader.\n  syntax:\n    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: A <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion.\n    - id: samlSerializer\n      type: System.IdentityModel.Tokens.SamlSerializer\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n  overload: System.IdentityModel.Tokens.SamlAssertion.ReadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>reader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>samlSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: the ReadXml method had been previously called and that SAML assertion was digitally signed.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: <code>reader</code> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials\n  id: SigningCredentials\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: SigningCredentials\n  nameWithType: SamlAssertion.SigningCredentials\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the security credentials that are used to digitally sign the SAML assertion.\n  remarks: The SigningCredentials property represents the credentials that are used to sign a SAML assertion when it is serialized into XML. Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message.\n  syntax:\n    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SigningCredentials\n      description: A <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> that is used to digitally sign the SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and an attempt is made to set the SigningCredentials property.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken\n  id: SigningToken\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: SigningToken\n  nameWithType: SamlAssertion.SigningToken\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the security token contained in or referenced by a digitally signed SAML assertion.\n  remarks: When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A> method is called and a SAML assertion is digitally signed, the digital signature is set to the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property. When the SAML assertion is not digitally signed, the value of the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property is `null`.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken SigningToken { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> contained in or referenced by a digitally signed SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.SigningToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.Statements\n  id: Statements\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: Statements\n  nameWithType: SamlAssertion.Statements\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Statements\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the set of SAML statements associated with the SAML assertion.\n  remarks: \"Use the <xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A> to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is `false`.  \\n  \\n The following table maps the three types of SAML statements defined in the Assertions and Protocol for the OASIS SAML specification to their respective types.  \\n  \\n|Statement Type|CLR Type|  \\n|--------------------|--------------|  \\n|Authentication|<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>|  \\n|Attribute|<xref:System.IdentityModel.Tokens.SamlAttributeStatement>|  \\n|Authorization decision|<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>|  \\n|Statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlStatement>|  \\n|Subject statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlSubjectStatement>|\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement> Statements { get; }\n    return:\n      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}\n      description: An &lt;xref:System.Collections.Generic.IList%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that contains the SAML statements associated with the SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlAssertion.Statements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)\n  id: WriteSourceData(System.Xml.XmlWriter)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: WriteSourceData(XmlWriter)\n  nameWithType: SamlAssertion.WriteSourceData(XmlWriter)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(XmlWriter)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Writes the source data, if available.\n  remarks: \"The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.  \\n  \\n> [!IMPORTANT]\\n>  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion \\\"template\\\" is loaded and certain bits of data are filled in, the Id must be changed.\"\n  syntax:\n    content: public virtual void WriteSourceData (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer with which to write the source data.\n  overload: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No source data is available\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  langs:\n  - csharp\n  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  nameWithType: SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Writes the SAML assertion into the specified XML writer as a <xref uid=\"langword_csharp_&lt;saml:Assertion&gt;\" name=\"&lt;saml:Assertion&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: A <xref:System.Xml.XmlDictionaryWriter> to write the SAML assertion.\n    - id: samlSerializer\n      type: System.IdentityModel.Tokens.SamlSerializer\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of writing the objects in the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> to XML.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses.\n  overload: System.IdentityModel.Tokens.SamlAssertion.WriteXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>samlSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: the <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SamlAssertion()\n  nameWithType: SamlAssertion.SamlAssertion()\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion()\n- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n  nameWithType: SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.SamlConditions\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlConditions\n  nameWithType: SamlConditions\n  fullName: System.IdentityModel.Tokens.SamlConditions\n- uid: System.IdentityModel.Tokens.SamlAdvice\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlAdvice\n  nameWithType: SamlAdvice\n  fullName: System.IdentityModel.Tokens.SamlAdvice\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SamlStatement>\n  nameWithType: IEnumerable<SamlStatement>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.Tokens.SamlStatement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SamlStatement\n    name: SamlStatement\n    nameWithType: SamlStatement\n    fullName: SamlStatement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SamlAssertion.Advice\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Advice\n  nameWithType: SamlAssertion.Advice\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Advice\n- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: AssertionId\n  nameWithType: SamlAssertion.AssertionId\n  fullName: System.IdentityModel.Tokens.SamlAssertion.AssertionId\n- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: CanWriteSourceData\n  nameWithType: SamlAssertion.CanWriteSourceData\n  fullName: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Conditions\n  nameWithType: SamlAssertion.Conditions\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Conditions\n- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SamlAssertion.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly\n- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: IssueInstant\n  nameWithType: SamlAssertion.IssueInstant\n  fullName: System.IdentityModel.Tokens.SamlAssertion.IssueInstant\n- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Issuer\n  nameWithType: SamlAssertion.Issuer\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Issuer\n- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MajorVersion\n  nameWithType: SamlAssertion.MajorVersion\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MajorVersion\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MakeReadOnly()\n  nameWithType: SamlAssertion.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly()\n- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MinorVersion\n  nameWithType: SamlAssertion.MinorVersion\n  fullName: System.IdentityModel.Tokens.SamlAssertion.MinorVersion\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n  nameWithType: SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.SamlSerializer\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlSerializer\n  nameWithType: SamlSerializer\n  fullName: System.IdentityModel.Tokens.SamlSerializer\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SamlAssertion.SigningCredentials\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials\n- uid: System.IdentityModel.Tokens.SigningCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SigningCredentials\n  fullName: System.IdentityModel.Tokens.SigningCredentials\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SigningToken\n  nameWithType: SamlAssertion.SigningToken\n  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningToken\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.SamlAssertion.Statements\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Statements\n  nameWithType: SamlAssertion.Statements\n  fullName: System.IdentityModel.Tokens.SamlAssertion.Statements\n- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<SamlStatement>\n  nameWithType: IList<SamlStatement>\n  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.IdentityModel.Tokens.SamlStatement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SamlStatement\n    name: SamlStatement\n    nameWithType: SamlStatement\n    fullName: SamlStatement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: WriteSourceData(XmlWriter)\n  nameWithType: SamlAssertion.WriteSourceData(XmlWriter)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  nameWithType: SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n- uid: System.Xml.XmlDictionaryWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryWriter\n  nameWithType: XmlDictionaryWriter\n  fullName: System.Xml.XmlDictionaryWriter\n- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SamlAssertion\n  nameWithType: SamlAssertion.SamlAssertion\n- uid: System.IdentityModel.Tokens.SamlAssertion.Advice*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Advice\n  nameWithType: SamlAssertion.Advice\n- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: AssertionId\n  nameWithType: SamlAssertion.AssertionId\n- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: CanWriteSourceData\n  nameWithType: SamlAssertion.CanWriteSourceData\n- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Conditions\n  nameWithType: SamlAssertion.Conditions\n- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SamlAssertion.IsReadOnly\n- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: IssueInstant\n  nameWithType: SamlAssertion.IssueInstant\n- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Issuer\n  nameWithType: SamlAssertion.Issuer\n- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MajorVersion\n  nameWithType: SamlAssertion.MajorVersion\n- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MakeReadOnly\n  nameWithType: SamlAssertion.MakeReadOnly\n- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: MinorVersion\n  nameWithType: SamlAssertion.MinorVersion\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: ReadSignature\n  nameWithType: SamlAssertion.ReadSignature\n- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: ReadXml\n  nameWithType: SamlAssertion.ReadXml\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SamlAssertion.SigningCredentials\n- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: SigningToken\n  nameWithType: SamlAssertion.SigningToken\n- uid: System.IdentityModel.Tokens.SamlAssertion.Statements*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: Statements\n  nameWithType: SamlAssertion.Statements\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: WriteSourceData\n  nameWithType: SamlAssertion.WriteSourceData\n- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml*\n  parent: System.IdentityModel.Tokens.SamlAssertion\n  isExternal: false\n  name: WriteXml\n  nameWithType: SamlAssertion.WriteXml\n"}