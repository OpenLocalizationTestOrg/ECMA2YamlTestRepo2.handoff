{"nodes":[{"pos":[1615,1679],"content":"Converts data from one type to another. This is a utility class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts data from one type to another. This is a utility class.","pos":[0,64],"nodes":[{"content":"Converts data from one type to another.","pos":[0,39]},{"content":"This is a utility class.","pos":[40,64]}]}]},{"pos":[2134,2221],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.Convert\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.JScript.Convert\"></xref> class."},{"pos":[2795,2872],"content":"Determines whether a <xref:System.Double> variable contains an integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a &lt;xref:System.Double&gt; variable contains an integer value.","pos":[0,77],"source":"Determines whether a <xref:System.Double> variable contains an integer value."}]},{"pos":[3025,3058],"content":"The <xref:System.Double> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Double&gt; to test.","pos":[0,33],"source":"The <xref:System.Double> to test."}]},{"pos":[3116,3220],"content":"If <code>d</code> contains an integer value, <code>d</code> is returned. If not, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an integer value, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d</ph><ept id=\"p2\">&lt;/code&gt;</ept> is returned.","pos":[0,72],"source":"If <code>d</code> contains an integer value, <code>d</code> is returned."},{"content":"If not, an exception is thrown.","pos":[73,104]}]},{"pos":[3750,3827],"content":"Determines whether a <xref:System.Single> variable contains an integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a &lt;xref:System.Single&gt; variable contains an integer value.","pos":[0,77],"source":"Determines whether a <xref:System.Single> variable contains an integer value."}]},{"pos":[3978,4011],"content":"The <xref:System.Single> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Single&gt; to test.","pos":[0,33],"source":"The <xref:System.Single> to test."}]},{"pos":[4069,4173],"content":"If <code>s</code> contains an integer value, <code>s</code> is returned. If not, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an integer value, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept> is returned.","pos":[0,72],"source":"If <code>s</code> contains an integer value, <code>s</code> is returned."},{"content":"If not, an exception is thrown.","pos":[73,104]}]},{"pos":[4672,4723],"content":"Converts the specified value to the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to the specified type.","pos":[0,51]}]},{"pos":[4735,4845],"content":"This method does not allow conversions that cause a loss of information, such as converting 1.5 to an integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method does not allow conversions that cause a loss of information, such as converting 1.5 to an integer.","pos":[0,110]}]},{"pos":[5003,5038],"content":"The value to convert to a new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to a new type.","pos":[0,35]}]},{"pos":[5099,5130],"content":"The type to convert <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The type to convert `value` to."},{"pos":[5188,5238],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to <code>type</code>."},{"pos":[5790,5890],"content":"Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to the specified &lt;xref:System.TypeCode&gt;, optionally allowing data loss.","pos":[0,100],"source":"Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss."}]},{"pos":[6079,6114],"content":"The value to convert to a new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to a new type.","pos":[0,35]}]},{"pos":[6179,6210],"content":"The type to convert <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The type to convert `value` to."},{"pos":[6287,6442],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6500,6561],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to the <ph id=\"ph2\">&lt;code&gt;target&lt;/code&gt;</ph> type.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to the <code>target</code> type."},{"pos":[7094,7190],"content":"Converts the specified value to the specified <xref:System.Type>, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to the specified &lt;xref:System.Type&gt;, optionally allowing data loss.","pos":[0,96],"source":"Converts the specified value to the specified <xref:System.Type>, optionally allowing data loss."}]},{"pos":[7361,7396],"content":"The value to convert to a new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to a new type.","pos":[0,35]}]},{"pos":[7452,7483],"content":"The type to convert <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The type to convert `value` to."},{"pos":[7551,7706],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7764,7820],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to the type <ph id=\"ph2\">&lt;code&gt;t&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to the type <code>t</code>."},{"pos":[8282,8342],"content":"Determines whether a variable contains an array index value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a variable contains an array index value.","pos":[0,60]}]},{"pos":[8508,8529],"content":"The variable to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable to test.","pos":[0,21]}]},{"pos":[8588,8774],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">ast</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains an array index value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>ast</code> contains an array index value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9267,9355],"content":"Throws a <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.JScriptException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> exception in all cases.","needQuote":true,"needEscape":true,"source":"Throws a <xref href=\"Microsoft.JScript.JScriptException\"></xref> exception in all cases."},{"pos":[9505,9547],"content":"The source code that caused the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source code that caused the exception.","pos":[0,42]}]},{"pos":[10007,10078],"content":"Converts the specified <xref:System.Double> to a <xref:System.Boolean>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Double&gt; to a &lt;xref:System.Boolean&gt;.","pos":[0,71],"source":"Converts the specified <xref:System.Double> to a <xref:System.Boolean>."}]},{"pos":[10216,10237],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[10296,10455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p2\">&lt;/code&gt;</ept> is 0; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>d</code> is 0; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[10907,10978],"content":"Converts the specified <xref:System.Object> to a <xref:System.Boolean>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Object&gt; to a &lt;xref:System.Boolean&gt;.","pos":[0,71],"source":"Converts the specified <xref:System.Object> to a <xref:System.Boolean>."}]},{"pos":[11124,11145],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[11204,11260],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a <xref:System.Boolean>."},{"pos":[11766,11884],"content":"Converts the specified <xref:System.Object> value to a <xref:System.Boolean> structure, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Object&gt; value to a &lt;xref:System.Boolean&gt; structure, optionally allowing data loss.","pos":[0,118],"source":"Converts the specified <xref:System.Object> value to a <xref:System.Boolean> structure, optionally allowing data loss."}]},{"pos":[12055,12076],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[12152,12307],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12366,12422],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a <xref:System.Boolean>."},{"pos":[12988,13127],"content":"Converts the specified value to an &lt;xref:System.Object&gt; that represents a collection of <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.AST\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Converts the specified value to an <xref:System.Object> that represents a collection of <xref href=\"Microsoft.JScript.AST\"></xref> objects."},{"pos":[13319,13340],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[13421,13457],"content":"A reference to the scripting engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]},{"pos":[13515,13571],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to an <xref:System.Object>."},{"pos":[14017,14072],"content":"Converts the specified value to an <xref:System.Int32>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to an &lt;xref:System.Int32&gt;.","pos":[0,55],"source":"Converts the specified value to an <xref:System.Int32>."}]},{"pos":[14215,14236],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[14293,14348],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to an <xref:System.Int32>."},{"pos":[14922,15027],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.ArrayObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a typed &lt;xref:System.Array&gt;.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"Microsoft.JScript.ArrayObject\"></xref> to a typed <xref:System.Array>."},{"pos":[15205,15271],"content":"The <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.ArrayObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"Microsoft.JScript.ArrayObject\"></xref> to convert."},{"pos":[15345,15383],"content":"The type of the elements in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the elements in the array.","pos":[0,38]}]},{"pos":[15441,15547],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Array&gt;</ph> if this is possible; otherwise, <ph id=\"ph3\">&lt;code&gt;value&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to an <xref:System.Array> if this is possible; otherwise, <code>value</code>."},{"pos":[15998,16068],"content":"Converts the specified <xref:System.Object> to a <xref:System.Double>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Object&gt; to a &lt;xref:System.Double&gt;.","pos":[0,70],"source":"Converts the specified <xref:System.Object> to a <xref:System.Double>."}]},{"pos":[16215,16236],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[16294,16349],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a <xref:System.Double>."},{"pos":[16795,16865],"content":"Converts the specified <xref:System.String> to a <xref:System.Double>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.String&gt; to a &lt;xref:System.Double&gt;.","pos":[0,70],"source":"Converts the specified <xref:System.String> to a <xref:System.Double>."}]},{"pos":[17008,17029],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[17087,17140],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>str</code> converted to a <xref:System.Double>."},{"pos":[17680,17789],"content":"Converts the specified value to an <xref:System.Object>. Throws an error if it cannot perform the conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to an <xref:System.Object>. Throws an error if it cannot perform the conversion.","pos":[0,109],"nodes":[{"content":"Converts the specified value to an &lt;xref:System.Object&gt;.","pos":[0,56],"source":"Converts the specified value to an <xref:System.Object>."},{"content":"Throws an error if it cannot perform the conversion.","pos":[57,109]}]}]},{"pos":[17976,17997],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[18078,18114],"content":"A reference to the scripting engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]},{"pos":[18172,18228],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to an <xref:System.Object>."},{"pos":[18773,18879],"content":"Converts the specified value to an <xref:System.Object>. Returns null if it cannot perform the conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to an <xref:System.Object>. Returns null if it cannot perform the conversion.","pos":[0,106],"nodes":[{"content":"Converts the specified value to an &lt;xref:System.Object&gt;.","pos":[0,56],"source":"Converts the specified value to an <xref:System.Object>."},{"content":"Returns null if it cannot perform the conversion.","pos":[57,106]}]}]},{"pos":[19067,19088],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[19169,19205],"content":"A reference to the scripting engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]},{"pos":[19263,19319],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to an <xref:System.Object>."},{"pos":[19771,19842],"content":"Converts the specified <xref:System.Boolean> to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Boolean&gt; to a &lt;xref:System.String&gt;.","pos":[0,71],"source":"Converts the specified <xref:System.Boolean> to a <xref:System.String>."}]},{"pos":[19980,20001],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[20059,20110],"content":"<ph id=\"ph1\">&lt;code&gt;b&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>b</code> converted to a <xref:System.String>."},{"pos":[20556,20626],"content":"Converts the specified <xref:System.Double> to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Double&gt; to a &lt;xref:System.String&gt;.","pos":[0,70],"source":"Converts the specified <xref:System.Double> to a <xref:System.String>."}]},{"pos":[20765,20786],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[20844,20895],"content":"<ph id=\"ph1\">&lt;code&gt;d&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>d</code> converted to a <xref:System.String>."},{"pos":[21395,21496],"content":"Converts the specified <xref:System.Object> to a <xref:System.String>, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Object&gt; to a &lt;xref:System.String&gt;, optionally allowing data loss.","pos":[0,101],"source":"Converts the specified <xref:System.Object> to a <xref:System.String>, optionally allowing data loss."}]},{"pos":[21660,21681],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[21749,21904],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21962,22017],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a <xref:System.String>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.Convert\n  id: Convert\n  children:\n  - Microsoft.JScript.Convert.#ctor\n  - Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)\n  - Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)\n  - Microsoft.JScript.Convert.Coerce(System.Object,System.Object)\n  - Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)\n  - Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)\n  - Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)\n  - Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)\n  - Microsoft.JScript.Convert.ToBoolean(System.Double)\n  - Microsoft.JScript.Convert.ToBoolean(System.Object)\n  - Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)\n  - Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Convert.ToInt32(System.Object)\n  - Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)\n  - Microsoft.JScript.Convert.ToNumber(System.Object)\n  - Microsoft.JScript.Convert.ToNumber(System.String)\n  - Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Convert.ToString(System.Boolean)\n  - Microsoft.JScript.Convert.ToString(System.Double)\n  - Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)\n  langs:\n  - csharp\n  name: Convert\n  nameWithType: Convert\n  fullName: Microsoft.JScript.Convert\n  type: Class\n  summary: Converts data from one type to another. This is a utility class.\n  syntax:\n    content: public sealed class Convert\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.#ctor\n  id: '#ctor'\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: Convert()\n  nameWithType: Convert.Convert()\n  fullName: Microsoft.JScript.Convert.Convert()\n  type: Constructor\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Initializes a new instance of the <xref href=\"Microsoft.JScript.Convert\"></xref> class.\n  syntax:\n    content: public Convert ();\n    parameters: []\n  overload: Microsoft.JScript.Convert.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)\n  id: CheckIfDoubleIsInteger(System.Double)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: CheckIfDoubleIsInteger(Double)\n  nameWithType: Convert.CheckIfDoubleIsInteger(Double)\n  fullName: Microsoft.JScript.Convert.CheckIfDoubleIsInteger(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Determines whether a <xref:System.Double> variable contains an integer value.\n  syntax:\n    content: public static double CheckIfDoubleIsInteger (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: The <xref:System.Double> to test.\n    return:\n      type: System.Double\n      description: If <code>d</code> contains an integer value, <code>d</code> is returned. If not, an exception is thrown.\n  overload: Microsoft.JScript.Convert.CheckIfDoubleIsInteger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)\n  id: CheckIfSingleIsInteger(System.Single)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: CheckIfSingleIsInteger(Single)\n  nameWithType: Convert.CheckIfSingleIsInteger(Single)\n  fullName: Microsoft.JScript.Convert.CheckIfSingleIsInteger(Single)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Determines whether a <xref:System.Single> variable contains an integer value.\n  syntax:\n    content: public static float CheckIfSingleIsInteger (float s);\n    parameters:\n    - id: s\n      type: System.Single\n      description: The <xref:System.Single> to test.\n    return:\n      type: System.Single\n      description: If <code>s</code> contains an integer value, <code>s</code> is returned. If not, an exception is thrown.\n  overload: Microsoft.JScript.Convert.CheckIfSingleIsInteger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.Coerce(System.Object,System.Object)\n  id: Coerce(System.Object,System.Object)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: Coerce(Object,Object)\n  nameWithType: Convert.Coerce(Object,Object)\n  fullName: Microsoft.JScript.Convert.Coerce(Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to the specified type.\n  remarks: This method does not allow conversions that cause a loss of information, such as converting 1.5 to an integer.\n  syntax:\n    content: public static object Coerce (object value, object type);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert to a new type.\n    - id: type\n      type: System.Object\n      description: The type to convert `value` to.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to <code>type</code>.\n  overload: Microsoft.JScript.Convert.Coerce*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)\n  id: Coerce2(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: Coerce2(Object,TypeCode,Boolean)\n  nameWithType: Convert.Coerce2(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.Convert.Coerce2(Object,TypeCode,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.\n  syntax:\n    content: public static object Coerce2 (object value, TypeCode target, bool truncationPermitted);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert to a new type.\n    - id: target\n      type: System.TypeCode\n      description: The type to convert `value` to.\n    - id: truncationPermitted\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to the <code>target</code> type.\n  overload: Microsoft.JScript.Convert.Coerce2*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)\n  id: CoerceT(System.Object,System.Type,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: CoerceT(Object,Type,Boolean)\n  nameWithType: Convert.CoerceT(Object,Type,Boolean)\n  fullName: Microsoft.JScript.Convert.CoerceT(Object,Type,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to the specified <xref:System.Type>, optionally allowing data loss.\n  syntax:\n    content: public static object CoerceT (object value, Type t, bool explicitOK);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert to a new type.\n    - id: t\n      type: System.Type\n      description: The type to convert `value` to.\n    - id: explicitOK\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to the type <code>t</code>.\n  overload: Microsoft.JScript.Convert.CoerceT*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)\n  id: IsBadIndex(Microsoft.JScript.AST)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: IsBadIndex(AST)\n  nameWithType: Convert.IsBadIndex(AST)\n  fullName: Microsoft.JScript.Convert.IsBadIndex(AST)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Determines whether a variable contains an array index value.\n  syntax:\n    content: public static bool IsBadIndex (Microsoft.JScript.AST ast);\n    parameters:\n    - id: ast\n      type: Microsoft.JScript.AST\n      description: The variable to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>ast</code> contains an array index value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.JScript.Convert.IsBadIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)\n  id: ThrowTypeMismatch(System.Object)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ThrowTypeMismatch(Object)\n  nameWithType: Convert.ThrowTypeMismatch(Object)\n  fullName: Microsoft.JScript.Convert.ThrowTypeMismatch(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Throws a <xref href=\"Microsoft.JScript.JScriptException\"></xref> exception in all cases.\n  syntax:\n    content: public static void ThrowTypeMismatch (object val);\n    parameters:\n    - id: val\n      type: System.Object\n      description: The source code that caused the exception.\n  overload: Microsoft.JScript.Convert.ThrowTypeMismatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Double)\n  id: ToBoolean(System.Double)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToBoolean(Double)\n  nameWithType: Convert.ToBoolean(Double)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Double> to a <xref:System.Boolean>.\n  syntax:\n    content: public static bool ToBoolean (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>d</code> is 0; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: Microsoft.JScript.Convert.ToBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Object)\n  id: ToBoolean(System.Object)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToBoolean(Object)\n  nameWithType: Convert.ToBoolean(Object)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Object> to a <xref:System.Boolean>.\n  syntax:\n    content: public static bool ToBoolean (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    return:\n      type: System.Boolean\n      description: <code>value</code> converted to a <xref:System.Boolean>.\n  overload: Microsoft.JScript.Convert.ToBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)\n  id: ToBoolean(System.Object,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToBoolean(Object,Boolean)\n  nameWithType: Convert.ToBoolean(Object,Boolean)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Object,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Object> value to a <xref:System.Boolean> structure, optionally allowing data loss.\n  syntax:\n    content: public static bool ToBoolean (object value, bool explicitConversion);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: explicitConversion\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <code>value</code> converted to a <xref:System.Boolean>.\n  overload: Microsoft.JScript.Convert.ToBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToForInObject(Object,VsaEngine)\n  nameWithType: Convert.ToForInObject(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToForInObject(Object,VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to an <xref:System.Object> that represents a collection of <xref href=\"Microsoft.JScript.AST\"></xref> objects.\n  syntax:\n    content: public static object ToForInObject (object value, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.Convert.ToForInObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToInt32(System.Object)\n  id: ToInt32(System.Object)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToInt32(Object)\n  nameWithType: Convert.ToInt32(Object)\n  fullName: Microsoft.JScript.Convert.ToInt32(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to an <xref:System.Int32>.\n  syntax:\n    content: public static int ToInt32 (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    return:\n      type: System.Int32\n      description: <code>value</code> converted to an <xref:System.Int32>.\n  overload: Microsoft.JScript.Convert.ToInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)\n  id: ToNativeArray(System.Object,System.RuntimeTypeHandle)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToNativeArray(Object,RuntimeTypeHandle)\n  nameWithType: Convert.ToNativeArray(Object,RuntimeTypeHandle)\n  fullName: Microsoft.JScript.Convert.ToNativeArray(Object,RuntimeTypeHandle)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref href=\"Microsoft.JScript.ArrayObject\"></xref> to a typed <xref:System.Array>.\n  syntax:\n    content: public static object ToNativeArray (object value, RuntimeTypeHandle handle);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"Microsoft.JScript.ArrayObject\"></xref> to convert.\n    - id: handle\n      type: System.RuntimeTypeHandle\n      description: The type of the elements in the array.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to an <xref:System.Array> if this is possible; otherwise, <code>value</code>.\n  overload: Microsoft.JScript.Convert.ToNativeArray*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToNumber(System.Object)\n  id: ToNumber(System.Object)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToNumber(Object)\n  nameWithType: Convert.ToNumber(Object)\n  fullName: Microsoft.JScript.Convert.ToNumber(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Object> to a <xref:System.Double>.\n  syntax:\n    content: public static double ToNumber (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    return:\n      type: System.Double\n      description: <code>value</code> converted to a <xref:System.Double>.\n  overload: Microsoft.JScript.Convert.ToNumber*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToNumber(System.String)\n  id: ToNumber(System.String)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToNumber(String)\n  nameWithType: Convert.ToNumber(String)\n  fullName: Microsoft.JScript.Convert.ToNumber(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.String> to a <xref:System.Double>.\n  syntax:\n    content: public static double ToNumber (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The value to convert.\n    return:\n      type: System.Double\n      description: <code>str</code> converted to a <xref:System.Double>.\n  overload: Microsoft.JScript.Convert.ToNumber*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToObject(Object,VsaEngine)\n  nameWithType: Convert.ToObject(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToObject(Object,VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to an <xref:System.Object>. Throws an error if it cannot perform the conversion.\n  syntax:\n    content: public static object ToObject (object value, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.Convert.ToObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToObject2(Object,VsaEngine)\n  nameWithType: Convert.ToObject2(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToObject2(Object,VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to an <xref:System.Object>. Returns null if it cannot perform the conversion.\n  syntax:\n    content: public static object ToObject2 (object value, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.Convert.ToObject2*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToString(System.Boolean)\n  id: ToString(System.Boolean)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToString(Boolean)\n  nameWithType: Convert.ToString(Boolean)\n  fullName: Microsoft.JScript.Convert.ToString(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Boolean> to a <xref:System.String>.\n  syntax:\n    content: public static string ToString (bool b);\n    parameters:\n    - id: b\n      type: System.Boolean\n      description: The value to convert.\n    return:\n      type: System.String\n      description: <code>b</code> converted to a <xref:System.String>.\n  overload: Microsoft.JScript.Convert.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToString(System.Double)\n  id: ToString(System.Double)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToString(Double)\n  nameWithType: Convert.ToString(Double)\n  fullName: Microsoft.JScript.Convert.ToString(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Double> to a <xref:System.String>.\n  syntax:\n    content: public static string ToString (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.String\n      description: <code>d</code> converted to a <xref:System.String>.\n  overload: Microsoft.JScript.Convert.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)\n  id: ToString(System.Object,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  langs:\n  - csharp\n  name: ToString(Object,Boolean)\n  nameWithType: Convert.ToString(Object,Boolean)\n  fullName: Microsoft.JScript.Convert.ToString(Object,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Object> to a <xref:System.String>, optionally allowing data loss.\n  syntax:\n    content: public static string ToString (object value, bool explicitOK);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: explicitOK\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: <code>value</code> converted to a <xref:System.String>.\n  overload: Microsoft.JScript.Convert.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.JScript.Convert.#ctor\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Convert()\n  nameWithType: Convert.Convert()\n  fullName: Microsoft.JScript.Convert.Convert()\n- uid: Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CheckIfDoubleIsInteger(Double)\n  nameWithType: Convert.CheckIfDoubleIsInteger(Double)\n  fullName: Microsoft.JScript.Convert.CheckIfDoubleIsInteger(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CheckIfSingleIsInteger(Single)\n  nameWithType: Convert.CheckIfSingleIsInteger(Single)\n  fullName: Microsoft.JScript.Convert.CheckIfSingleIsInteger(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.JScript.Convert.Coerce(System.Object,System.Object)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Coerce(Object,Object)\n  nameWithType: Convert.Coerce(Object,Object)\n  fullName: Microsoft.JScript.Convert.Coerce(Object,Object)\n- uid: Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Coerce2(Object,TypeCode,Boolean)\n  nameWithType: Convert.Coerce2(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.Convert.Coerce2(Object,TypeCode,Boolean)\n- uid: System.TypeCode\n  parent: System\n  isExternal: true\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CoerceT(Object,Type,Boolean)\n  nameWithType: Convert.CoerceT(Object,Type,Boolean)\n  fullName: Microsoft.JScript.Convert.CoerceT(Object,Type,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: IsBadIndex(AST)\n  nameWithType: Convert.IsBadIndex(AST)\n  fullName: Microsoft.JScript.Convert.IsBadIndex(AST)\n- uid: Microsoft.JScript.AST\n  parent: Microsoft.JScript\n  isExternal: false\n  name: AST\n  nameWithType: AST\n  fullName: Microsoft.JScript.AST\n- uid: Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ThrowTypeMismatch(Object)\n  nameWithType: Convert.ThrowTypeMismatch(Object)\n  fullName: Microsoft.JScript.Convert.ThrowTypeMismatch(Object)\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Double)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToBoolean(Double)\n  nameWithType: Convert.ToBoolean(Double)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Double)\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Object)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToBoolean(Object)\n  nameWithType: Convert.ToBoolean(Object)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Object)\n- uid: Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToBoolean(Object,Boolean)\n  nameWithType: Convert.ToBoolean(Object,Boolean)\n  fullName: Microsoft.JScript.Convert.ToBoolean(Object,Boolean)\n- uid: Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToForInObject(Object,VsaEngine)\n  nameWithType: Convert.ToForInObject(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToForInObject(Object,VsaEngine)\n- uid: Microsoft.JScript.Vsa.VsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: VsaEngine\n  nameWithType: VsaEngine\n  fullName: Microsoft.JScript.Vsa.VsaEngine\n- uid: Microsoft.JScript.Convert.ToInt32(System.Object)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToInt32(Object)\n  nameWithType: Convert.ToInt32(Object)\n  fullName: Microsoft.JScript.Convert.ToInt32(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToNativeArray(Object,RuntimeTypeHandle)\n  nameWithType: Convert.ToNativeArray(Object,RuntimeTypeHandle)\n  fullName: Microsoft.JScript.Convert.ToNativeArray(Object,RuntimeTypeHandle)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: true\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: Microsoft.JScript.Convert.ToNumber(System.Object)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToNumber(Object)\n  nameWithType: Convert.ToNumber(Object)\n  fullName: Microsoft.JScript.Convert.ToNumber(Object)\n- uid: Microsoft.JScript.Convert.ToNumber(System.String)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToNumber(String)\n  nameWithType: Convert.ToNumber(String)\n  fullName: Microsoft.JScript.Convert.ToNumber(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToObject(Object,VsaEngine)\n  nameWithType: Convert.ToObject(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToObject(Object,VsaEngine)\n- uid: Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToObject2(Object,VsaEngine)\n  nameWithType: Convert.ToObject2(Object,VsaEngine)\n  fullName: Microsoft.JScript.Convert.ToObject2(Object,VsaEngine)\n- uid: Microsoft.JScript.Convert.ToString(System.Boolean)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToString(Boolean)\n  nameWithType: Convert.ToString(Boolean)\n  fullName: Microsoft.JScript.Convert.ToString(Boolean)\n- uid: Microsoft.JScript.Convert.ToString(System.Double)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToString(Double)\n  nameWithType: Convert.ToString(Double)\n  fullName: Microsoft.JScript.Convert.ToString(Double)\n- uid: Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToString(Object,Boolean)\n  nameWithType: Convert.ToString(Object,Boolean)\n  fullName: Microsoft.JScript.Convert.ToString(Object,Boolean)\n- uid: Microsoft.JScript.Convert.#ctor*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Convert\n  nameWithType: Convert.Convert\n- uid: Microsoft.JScript.Convert.CheckIfDoubleIsInteger*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CheckIfDoubleIsInteger\n  nameWithType: Convert.CheckIfDoubleIsInteger\n- uid: Microsoft.JScript.Convert.CheckIfSingleIsInteger*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CheckIfSingleIsInteger\n  nameWithType: Convert.CheckIfSingleIsInteger\n- uid: Microsoft.JScript.Convert.Coerce*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Coerce\n  nameWithType: Convert.Coerce\n- uid: Microsoft.JScript.Convert.Coerce2*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: Coerce2\n  nameWithType: Convert.Coerce2\n- uid: Microsoft.JScript.Convert.CoerceT*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: CoerceT\n  nameWithType: Convert.CoerceT\n- uid: Microsoft.JScript.Convert.IsBadIndex*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: IsBadIndex\n  nameWithType: Convert.IsBadIndex\n- uid: Microsoft.JScript.Convert.ThrowTypeMismatch*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ThrowTypeMismatch\n  nameWithType: Convert.ThrowTypeMismatch\n- uid: Microsoft.JScript.Convert.ToBoolean*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToBoolean\n  nameWithType: Convert.ToBoolean\n- uid: Microsoft.JScript.Convert.ToForInObject*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToForInObject\n  nameWithType: Convert.ToForInObject\n- uid: Microsoft.JScript.Convert.ToInt32*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToInt32\n  nameWithType: Convert.ToInt32\n- uid: Microsoft.JScript.Convert.ToNativeArray*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToNativeArray\n  nameWithType: Convert.ToNativeArray\n- uid: Microsoft.JScript.Convert.ToNumber*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToNumber\n  nameWithType: Convert.ToNumber\n- uid: Microsoft.JScript.Convert.ToObject*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToObject\n  nameWithType: Convert.ToObject\n- uid: Microsoft.JScript.Convert.ToObject2*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToObject2\n  nameWithType: Convert.ToObject2\n- uid: Microsoft.JScript.Convert.ToString*\n  parent: Microsoft.JScript.Convert\n  isExternal: false\n  name: ToString\n  nameWithType: Convert.ToString\n"}