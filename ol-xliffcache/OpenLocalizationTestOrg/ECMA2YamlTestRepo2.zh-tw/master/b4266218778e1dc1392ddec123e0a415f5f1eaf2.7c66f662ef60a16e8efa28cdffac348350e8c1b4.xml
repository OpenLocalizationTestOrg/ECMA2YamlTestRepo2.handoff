{"nodes":[{"pos":[533,637],"content":"Defines an interface that a cache uses in order to communicate cache memory usage to a host environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an interface that a cache uses in order to communicate cache memory usage to a host environment.","pos":[0,104]}]},{"pos":[650,1171],"content":"The IMemoryCacheManager interface is implemented by host environments such as ASP.NET, and is consumed by <xref:System.Runtime.Caching.ObjectCache> implementations that must interact with the host environment to determine memory usage. Because caches often consume significant quantities of memory, the IMemoryCacheManager interface helps host environments manage memory usage.       Typically, only <xref:System.Runtime.Caching.ObjectCache> implementations that manage cache objects in memory would use this interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IMemoryCacheManager interface is implemented by host environments such as ASP.NET, and is consumed by <xref:System.Runtime.Caching.ObjectCache> implementations that must interact with the host environment to determine memory usage. Because caches often consume significant quantities of memory, the IMemoryCacheManager interface helps host environments manage memory usage.       Typically, only <xref:System.Runtime.Caching.ObjectCache> implementations that manage cache objects in memory would use this interface.","pos":[0,519],"nodes":[{"content":"The IMemoryCacheManager interface is implemented by host environments such as ASP.NET, and is consumed by &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementations that must interact with the host environment to determine memory usage.","pos":[0,235],"source":"The IMemoryCacheManager interface is implemented by host environments such as ASP.NET, and is consumed by <xref:System.Runtime.Caching.ObjectCache> implementations that must interact with the host environment to determine memory usage."},{"content":"Because caches often consume significant quantities of memory, the IMemoryCacheManager interface helps host environments manage memory usage.","pos":[236,377]},{"content":"Typically, only &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementations that manage cache objects in memory would use this interface.","pos":[384,519],"source":"       Typically, only <xref:System.Runtime.Caching.ObjectCache> implementations that manage cache objects in memory would use this interface."}]}]},{"pos":[1812,1870],"content":"Removes all references to a cache in the host environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all references to a cache in the host environment.","pos":[0,58]}]},{"pos":[1882,2157],"content":"If a cache has previously registered itself with the host environment, the cache can call the ReleaseCache method to release the reference. When a cache is being disposed, it should call the ReleaseCache method to make sure that no reference to the cache is held on the host.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a cache has previously registered itself with the host environment, the cache can call the ReleaseCache method to release the reference. When a cache is being disposed, it should call the ReleaseCache method to make sure that no reference to the cache is held on the host.","pos":[0,275],"nodes":[{"content":"If a cache has previously registered itself with the host environment, the cache can call the ReleaseCache method to release the reference.","pos":[0,139]},{"content":"When a cache is being disposed, it should call the ReleaseCache method to make sure that no reference to the cache is held on the host.","pos":[140,275]}]}]},{"pos":[2348,2373],"content":"A reference to the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the cache.","pos":[0,25]}]},{"pos":[3089,3127],"content":"Reports the size of the current cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reports the size of the current cache.","pos":[0,38]}]},{"pos":[3140,3657],"content":"A well-behaved cache implementation should use the UpdateCacheSize method to periodically report the size of the cache's memory footprint to the host environment.       The cache implementation that reports the size also passes a reference to itself as a parameter. This enables the host environment to perform the following tasks:      -   Maintain a list of known object caches.      -   Call the cache and request that the cache trim a percentage of cache items based on the reported size, if it is required.","needQuote":false,"needEscape":true,"nodes":[{"content":"A well-behaved cache implementation should use the UpdateCacheSize method to periodically report the size of the cache's memory footprint to the host environment.       The cache implementation that reports the size also passes a reference to itself as a parameter. This enables the host environment to perform the following tasks:      -   Maintain a list of known object caches.      -   Call the cache and request that the cache trim a percentage of cache items based on the reported size, if it is required.","pos":[0,511],"nodes":[{"content":"A well-behaved cache implementation should use the UpdateCacheSize method to periodically report the size of the cache's memory footprint to the host environment.","pos":[0,162]},{"content":"The cache implementation that reports the size also passes a reference to itself as a parameter.","pos":[169,265]},{"content":"This enables the host environment to perform the following tasks:      -   Maintain a list of known object caches.","pos":[266,380]},{"content":"-   Call the cache and request that the cache trim a percentage of cache items based on the reported size, if it is required.","pos":[386,511]}]}]},{"pos":[3840,3898],"content":"The size of the memory, in bytes, that the cache consumes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the memory, in bytes, that the cache consumes.","pos":[0,58]}]},{"pos":[3981,4006],"content":"A reference to the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the cache.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  id: IMemoryCacheManager\n  children:\n  - System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)\n  - System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)\n  langs:\n  - csharp\n  name: IMemoryCacheManager\n  nameWithType: IMemoryCacheManager\n  fullName: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  type: Interface\n  summary: Defines an interface that a cache uses in order to communicate cache memory usage to a host environment.\n  remarks: \"The IMemoryCacheManager interface is implemented by host environments such as ASP.NET, and is consumed by <xref:System.Runtime.Caching.ObjectCache> implementations that must interact with the host environment to determine memory usage. Because caches often consume significant quantities of memory, the IMemoryCacheManager interface helps host environments manage memory usage.  \\n  \\n Typically, only <xref:System.Runtime.Caching.ObjectCache> implementations that manage cache objects in memory would use this interface.\"\n  syntax:\n    content: public interface IMemoryCacheManager\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)\n  id: ReleaseCache(System.Runtime.Caching.MemoryCache)\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  langs:\n  - csharp\n  name: ReleaseCache(MemoryCache)\n  nameWithType: IMemoryCacheManager.ReleaseCache(MemoryCache)\n  fullName: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(MemoryCache)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Removes all references to a cache in the host environment.\n  remarks: If a cache has previously registered itself with the host environment, the cache can call the ReleaseCache method to release the reference. When a cache is being disposed, it should call the ReleaseCache method to make sure that no reference to the cache is held on the host.\n  syntax:\n    content: public void ReleaseCache (System.Runtime.Caching.MemoryCache cache);\n    parameters:\n    - id: cache\n      type: System.Runtime.Caching.MemoryCache\n      description: A reference to the cache.\n  overload: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)\n  id: UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  langs:\n  - csharp\n  name: UpdateCacheSize(Int64,MemoryCache)\n  nameWithType: IMemoryCacheManager.UpdateCacheSize(Int64,MemoryCache)\n  fullName: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(Int64,MemoryCache)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Reports the size of the current cache.\n  remarks: \"A well-behaved cache implementation should use the UpdateCacheSize method to periodically report the size of the cache's memory footprint to the host environment.  \\n  \\n The cache implementation that reports the size also passes a reference to itself as a parameter. This enables the host environment to perform the following tasks:  \\n  \\n-   Maintain a list of known object caches.  \\n  \\n-   Call the cache and request that the cache trim a percentage of cache items based on the reported size, if it is required.\"\n  syntax:\n    content: public void UpdateCacheSize (long size, System.Runtime.Caching.MemoryCache cache);\n    parameters:\n    - id: size\n      type: System.Int64\n      description: The size of the memory, in bytes, that the cache consumes.\n    - id: cache\n      type: System.Runtime.Caching.MemoryCache\n      description: A reference to the cache.\n  overload: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  isExternal: false\n  name: ReleaseCache(MemoryCache)\n  nameWithType: IMemoryCacheManager.ReleaseCache(MemoryCache)\n  fullName: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(MemoryCache)\n- uid: System.Runtime.Caching.MemoryCache\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: MemoryCache\n  nameWithType: MemoryCache\n  fullName: System.Runtime.Caching.MemoryCache\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  isExternal: false\n  name: UpdateCacheSize(Int64,MemoryCache)\n  nameWithType: IMemoryCacheManager.UpdateCacheSize(Int64,MemoryCache)\n  fullName: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(Int64,MemoryCache)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache*\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  isExternal: false\n  name: ReleaseCache\n  nameWithType: IMemoryCacheManager.ReleaseCache\n- uid: System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize*\n  parent: System.Runtime.Caching.Hosting.IMemoryCacheManager\n  isExternal: false\n  name: UpdateCacheSize\n  nameWithType: IMemoryCacheManager.UpdateCacheSize\n"}