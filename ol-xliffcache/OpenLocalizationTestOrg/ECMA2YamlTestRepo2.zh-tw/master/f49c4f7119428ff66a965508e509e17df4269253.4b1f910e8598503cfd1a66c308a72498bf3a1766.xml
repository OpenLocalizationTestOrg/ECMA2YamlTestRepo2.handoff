{"nodes":[{"pos":[3954,4036],"content":"Represents a collection of model items that can be individually accessed by index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of model items that can be individually accessed by index.","pos":[0,82]}]},{"pos":[4048,4298],"content":"If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> property will not be updated until the editing scope completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the &lt;xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A&gt; property will not be updated until the editing scope completes.","pos":[0,250],"source":"If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> property will not be updated until the editing scope completes."}]},{"pos":[6877,6981],"content":"Creates a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new instance of <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[7718,7832],"content":"Adds a model item to the end of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[8045,8085],"content":"The model item to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item to add to the collection.","pos":[0,40]}]},{"pos":[8669,8783],"content":"Adds a model item to the end of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[8795,8880],"content":"The object will be stored as a <xref:System.Activities.Presentation.Model.ModelItem>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object will be stored as a &lt;xref:System.Activities.Presentation.Model.ModelItem&gt;.","pos":[0,85],"source":"The object will be stored as a <xref:System.Activities.Presentation.Model.ModelItem>."}]},{"pos":[9064,9100],"content":"The object to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add to the collection.","pos":[0,36]}]},{"pos":[9191,9299],"content":"Returns <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> wrapped in a <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <code>value</code> wrapped in a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[9845,9953],"content":"Removes all elements from the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all elements from the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[10627,10662],"content":"Occurs when the collection changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the collection changes.","pos":[0,35]}]},{"pos":[10904,10916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11526,11658],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the specified element.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element."},{"pos":[11876,11914],"content":"The value to locate in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to locate in the collection.","pos":[0,38]}]},{"pos":[11973,12243],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an element that has the specified value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12439,12521],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>item</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13039,13171],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the specified element.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element."},{"pos":[13318,13356],"content":"The value to locate in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to locate in the collection.","pos":[0,38]}]},{"pos":[13415,13685],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an element that has the specified value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13881,13964],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14601,14660],"content":"Copies the contents of the collection into the given array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the contents of the collection into the given array.","pos":[0,59]}]},{"pos":[14898,14936],"content":"The array to copy the collection into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array to copy the collection into.","pos":[0,38]}]},{"pos":[15002,15045],"content":"The index in the array to start copying at.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index in the array to start copying at.","pos":[0,43]}]},{"pos":[15239,15322],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15431,15556],"content":"<ph id=\"ph1\">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is out of range, or there is not sufficient room in the array to hold the contents of the collection.","needQuote":true,"needEscape":true,"source":"<code>arrayIndex</code> is out of range, or there is not sufficient room in the array to hold the contents of the collection."},{"pos":[16007,16052],"content":"Returns the count of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the count of items in the collection.","pos":[0,45]}]},{"pos":[16064,16333],"content":"This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session. If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the Count value will not be updated until the session exits.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session. If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the Count value will not be updated until the session exits.","pos":[0,269],"nodes":[{"content":"This value is not updated during an &lt;xref:System.Activities.Presentation.EditingContext&gt; session.","pos":[0,97],"source":"This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session."},{"content":"If an object is added to the &lt;xref:System.Activities.Presentation.Model.ModelItemCollection&gt; during a session, the Count value will not be updated until the session exits.","pos":[98,269],"source":" If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the Count value will not be updated until the session exits."}]}]},{"pos":[16448,16513],"content":"Returns the <xref:System.Int32> count of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.Int32&gt; count of items in the collection.","pos":[0,65],"source":"Returns the <xref:System.Int32> count of items in the collection."}]},{"pos":[17101,17224],"content":"Gets an enumerator that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that iterates through the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[17518,17671],"content":"Returns an <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerator%601<ph id=\"ph2\">&amp;gt;</ph> for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an &lt;xref:System.Collections.Generic.IEnumerator%601&gt; for the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[18360,18509],"content":"Returns the zero-based index of the first occurrence of a value in the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the zero-based index of the first occurrence of a value in the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[18725,18764],"content":"The object to locate in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to locate in the collection.","pos":[0,39]}]},{"pos":[18821,19008],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the entire <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if found; otherwise, –1.","needQuote":true,"needEscape":true,"source":"The zero-based index of the first occurrence of <code>item</code> within the entire <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>, if found; otherwise, –1."},{"pos":[19730,19859],"content":"Inserts an element into the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index."},{"pos":[20053,20109],"content":"The zero-based index at which <ph id=\"ph1\">`item`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `item` should be inserted."},{"pos":[20203,20228],"content":"The model item to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item to insert.","pos":[0,25]}]},{"pos":[20874,21003],"content":"Inserts an element into the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index."},{"pos":[21200,21257],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted."},{"pos":[21319,21340],"content":"The object to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to insert.","pos":[0,21]}]},{"pos":[21431,21539],"content":"Returns <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> wrapped in a <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <code>value</code> wrapped in a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[22114,22182],"content":"Gets a value that indicates whether the collection has a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the collection has a fixed size.","pos":[0,68]}]},{"pos":[22194,22267],"content":"The default implementation returns <ph id=\"ph1\">`true`</ph> if the collection is read-only.","needQuote":true,"needEscape":true,"source":"The default implementation returns `true` if the collection is read-only."},{"pos":[22393,22563],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23138,23202],"content":"Gets a value that indicates whether the collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the collection is read-only.","pos":[0,64]}]},{"pos":[23325,23498],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection cannot be modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection cannot be modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24092,24183],"content":"Gets a value that indicates whether access to the collection is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether access to the collection is synchronized (thread safe).","pos":[0,91]}]},{"pos":[24312,24506],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the collection is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25103,25162],"content":"Gets or sets the item at the given index in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the item at the given index in the collection.","pos":[0,59]}]},{"pos":[25355,25394],"content":"The zero-based index of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the collection.","pos":[0,39]}]},{"pos":[25485,25561],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[26136,26176],"content":"Identifies the Item dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the Item dependency property.","pos":[0,40]}]},{"pos":[26188,26430],"content":"The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>. The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>. The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself.","pos":[0,242],"nodes":[{"content":"The Item property represents all the items in the collection and is defined as type &lt;xref:System.Activities.Presentation.Model.ModelItem&gt;.","pos":[0,138],"source":"The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>."},{"content":"The Item property points to the &lt;xref:System.Activities.Presentation.Model.ModelItemCollection&gt; itself.","pos":[139,242],"source":" The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself."}]}]},{"pos":[26602,26614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27168,27221],"content":"Moves an item in the collection to a different index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Moves an item in the collection to a different index.","pos":[0,53]}]},{"pos":[27381,27431],"content":"The index of the item to be moved before the move.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item to be moved before the move.","pos":[0,50]}]},{"pos":[27494,27534],"content":"The index of the item after it is moved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item after it is moved.","pos":[0,40]}]},{"pos":[27732,27897],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fromIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">toIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept> is negative or greater than or equal to &lt;xref:System.Activities.Presentation.Model.ModelItemCollection.Count*&gt;.","needQuote":true,"needEscape":true,"source":"Either <code>fromIndex</code> or <code>toIndex</code> is negative or greater than or equal to <xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>."},{"pos":[28480,28580],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> from the collection."},{"pos":[28796,28868],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[28927,29170],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> was removed from the collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> was removed from the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29772,29810],"content":"Removes the value from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the value from the collection.","pos":[0,38]}]},{"pos":[29955,29980],"content":"The <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt;.","pos":[0,25],"source":"The <xref:System.Object>."}]},{"pos":[30039,30220],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value was removed from the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value was removed from the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30827,30863],"content":"Removes the item at the given index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the item at the given index.","pos":[0,36]}]},{"pos":[31006,31028],"content":"The index of the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item.","pos":[0,22]}]},{"pos":[31590,31662],"content":"Gets an object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection.","pos":[0,72]}]},{"pos":[31786,31818],"content":"Returns an <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Object&gt;.","pos":[0,32],"source":"Returns an <xref:System.Object>."}]},{"pos":[32630,32773],"content":"Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.","pos":[0,143],"source":"Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index."}]},{"pos":[32923,33108],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","pos":[0,185],"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.","pos":[0,130],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[131,185],"source":" The <xref:System.Array> must have zero-based indexing."}]}]},{"pos":[33169,33225],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[33970,34026],"content":"Gets the number of elements contained in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements contained in the collection.","pos":[0,56]}]},{"pos":[34156,34252],"content":"Returns an <xref:System.Int32> value that is the number of elements contained in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Int32&gt; value that is the number of elements contained in the collection.","pos":[0,96],"source":"Returns an <xref:System.Int32> value that is the number of elements contained in the collection."}]},{"pos":[35041,35149],"content":"The number of elements contained in the <xref:System.Collections.ICollection> is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements contained in the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).","pos":[0,108],"source":"The number of elements contained in the <xref:System.Collections.ICollection> is synchronized (thread safe)."}]},{"pos":[35291,35512],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36280,36379],"content":"Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,99],"source":"Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[36516,36632],"content":"Returns an <xref:System.Object> that can be used to synchronize access to the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Object&gt; that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,116],"source":"Returns an <xref:System.Object> that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[37423,37480],"content":"Returns an enumerator that iterates through a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]},{"pos":[37658,37758],"content":"Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.","pos":[0,100],"source":"Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."}]},{"pos":[38522,38636],"content":"Adds a model item to the end of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[38767,38803],"content":"The object to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add to the collection.","pos":[0,36]}]},{"pos":[38860,38904],"content":"Returns the index of the newly added object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the index of the newly added object.","pos":[0,44]}]},{"pos":[39614,39673],"content":"Removes all items from the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all items from the &lt;xref:System.Collections.IList&gt;.","pos":[0,59],"source":"Removes all items from the <xref:System.Collections.IList>."}]},{"pos":[40511,40643],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the specified element.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element."},{"pos":[40780,40886],"content":"The object to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to locate in the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>."},{"pos":[40945,41215],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an element that has the specified value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41436,41519],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[42171,42250],"content":"Determines the index of a specific item in the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the index of a specific item in the &lt;xref:System.Collections.IList&gt;.","pos":[0,79],"source":"Determines the index of a specific item in the <xref:System.Collections.IList>."}]},{"pos":[42385,42459],"content":"The <xref:System.Object> to locate in the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to locate in the &lt;xref:System.Collections.IList&gt;.","pos":[0,74],"source":"The <xref:System.Object> to locate in the <xref:System.Collections.IList>."}]},{"pos":[42516,42612],"content":"Returns the &lt;xref:System.Int32&gt; index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","needQuote":true,"needEscape":true,"source":"Returns the <xref:System.Int32> index of <code>value</code> if found in the list; otherwise, -1."},{"pos":[43423,43552],"content":"Inserts an element into the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index."},{"pos":[43697,43754],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted."},{"pos":[43816,43837],"content":"The object to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to insert.","pos":[0,21]}]},{"pos":[44576,44665],"content":"Gets a value that indicates whether the <xref:System.Collections.IList> has a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Collections.IList&gt; has a fixed size.","pos":[0,89],"source":"Gets a value that indicates whether the <xref:System.Collections.IList> has a fixed size."}]},{"pos":[44798,44990],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IList&gt; has a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IList> has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45729,45814],"content":"Gets a value that indicates whether the <xref:System.Collections.IList> is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Collections.IList&gt; is read-only.","pos":[0,85],"source":"Gets a value that indicates whether the <xref:System.Collections.IList> is read-only."}]},{"pos":[45946,46134],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IList&gt; is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IList> is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46891,46939],"content":"Gets or sets the element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]},{"pos":[47101,47151],"content":"The zero-based index of the element to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]},{"pos":[47209,47244],"content":"The element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element at the specified index.","pos":[0,35]}]},{"pos":[48008,48099],"content":"Removes the first occurrence of a specific object from the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the first occurrence of a specific object from the &lt;xref:System.Collections.IList&gt;.","pos":[0,91],"source":"Removes the first occurrence of a specific object from the <xref:System.Collections.IList>."}]},{"pos":[48111,48602],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]},{"content":"If <ph id=\"ph1\">`value`</ph> is not found in the &lt;xref:System.Collections.IList&gt;, the &lt;xref:System.Collections.IList&gt; remains unchanged and no exception is thrown.","pos":[346,491],"source":" If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown."}]},{"pos":[48737,48813],"content":"The <xref:System.Object> to remove from the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to remove from the &lt;xref:System.Collections.IList&gt;.","pos":[0,76],"source":"The <xref:System.Object> to remove from the <xref:System.Collections.IList>."}]},{"pos":[49584,49656],"content":"Removes the <xref:System.Collections.IList> item at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the &lt;xref:System.Collections.IList&gt; item at the specified index.","pos":[0,72],"source":"Removes the <xref:System.Collections.IList> item at the specified index."}]},{"pos":[49789,49832],"content":"The zero-based index of the item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.ModelItemCollection\n  id: ModelItemCollection\n  children:\n  - System.Activities.Presentation.Model.ModelItemCollection.#ctor\n  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.Clear\n  - System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged\n  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.Count\n  - System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator\n  - System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize\n  - System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly\n  - System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized\n  - System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.ItemProperty\n  - System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.SyncRoot\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)\n  - System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: ModelItemCollection\n  nameWithType: ModelItemCollection\n  fullName: System.Activities.Presentation.Model.ModelItemCollection\n  type: Class\n  summary: Represents a collection of model items that can be individually accessed by index.\n  remarks: If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> property will not be updated until the editing scope completes.\n  syntax:\n    content: 'public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.Model.ModelItem\n  implements:\n  - System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>\n  - System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>\n  - System.Collections.Generic.IList<System.Activities.Presentation.Model.ModelItem>\n  - System.Collections.IList\n  - System.Collections.Specialized.INotifyCollectionChanged\n  inheritedMembers:\n  - System.Activities.Presentation.Model.ModelItem.Attributes\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)\n  - System.Activities.Presentation.Model.ModelItem.Content\n  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue\n  - System.Activities.Presentation.Model.ModelItem.ItemType\n  - System.Activities.Presentation.Model.ModelItem.Name\n  - System.Activities.Presentation.Model.ModelItem.Parent\n  - System.Activities.Presentation.Model.ModelItem.Parents\n  - System.Activities.Presentation.Model.ModelItem.Properties\n  - System.Activities.Presentation.Model.ModelItem.PropertyChanged\n  - System.Activities.Presentation.Model.ModelItem.Root\n  - System.Activities.Presentation.Model.ModelItem.Source\n  - System.Activities.Presentation.Model.ModelItem.Sources\n  - System.Activities.Presentation.Model.ModelItem.ToString\n  - System.Activities.Presentation.Model.ModelItem.View\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: ModelItemCollection()\n  nameWithType: ModelItemCollection.ModelItemCollection()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Creates a new instance of <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: protected ModelItemCollection ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)\n  id: Add(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Add(ModelItem)\n  nameWithType: ModelItemCollection.Add(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem item);\n    parameters:\n    - id: item\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The model item to add to the collection.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: ModelItemCollection.Add(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  remarks: The object will be stored as a <xref:System.Activities.Presentation.Model.ModelItem>.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the collection.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns <code>value</code> wrapped in a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear\n  id: Clear\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ModelItemCollection.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes all elements from the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: public abstract void Clear ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged\n  id: CollectionChanged\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: ModelItemCollection.CollectionChanged\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Occurs when the collection changes.\n  syntax:\n    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;\n    return:\n      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)\n  id: Contains(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Contains(ModelItem)\n  nameWithType: ModelItemCollection.Contains(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element.\n  syntax:\n    content: public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);\n    parameters:\n    - id: item\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The value to locate in the collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>item</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: ModelItemCollection.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element.\n  syntax:\n    content: public abstract bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to locate in the collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)\n  id: CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: CopyTo(ModelItem[],Int32)\n  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Copies the contents of the collection into the given array.\n  syntax:\n    content: public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Activities.Presentation.Model.ModelItem[]\n      description: The array to copy the collection into.\n    - id: arrayIndex\n      type: System.Int32\n      description: The index in the array to start copying at.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: <code>arrayIndex</code> is out of range, or there is not sufficient room in the array to hold the contents of the collection.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Count\n  id: Count\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ModelItemCollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns the count of items in the collection.\n  remarks: This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session. If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the Count value will not be updated until the session exits.\n  syntax:\n    content: public abstract int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns the <xref:System.Int32> count of items in the collection.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ModelItemCollection.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an enumerator that iterates through the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}\n      description: Returns an &lt;xref:System.Collections.Generic.IEnumerator%601&gt; for the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)\n  id: IndexOf(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: IndexOf(ModelItem)\n  nameWithType: ModelItemCollection.IndexOf(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns the zero-based index of the first occurrence of a value in the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);\n    parameters:\n    - id: item\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The object to locate in the collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>item</code> within the entire <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>, if found; otherwise, –1.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)\n  id: Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Insert(Int32,ModelItem)\n  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index.\n  syntax:\n    content: public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `item` should be inserted.\n    - id: item\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The model item to insert.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Object)\n  nameWithType: ModelItemCollection.Insert(Int32,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns <code>value</code> wrapped in a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize\n  id: IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: ModelItemCollection.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the collection has a fixed size.\n  remarks: The default implementation returns `true` if the collection is read-only.\n  syntax:\n    content: protected virtual bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ModelItemCollection.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the collection is read-only.\n  syntax:\n    content: public abstract bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection cannot be modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ModelItemCollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether access to the collection is synchronized (thread safe).\n  syntax:\n    content: protected virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ModelItemCollection.Item(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the item at the given index in the collection.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the collection.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty\n  id: ItemProperty\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: ItemProperty\n  nameWithType: ModelItemCollection.ItemProperty\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Identifies the Item dependency property.\n  remarks: The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>. The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ItemProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)\n  id: Move(System.Int32,System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Move(Int32,Int32)\n  nameWithType: ModelItemCollection.Move(Int32,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Moves an item in the collection to a different index.\n  syntax:\n    content: public abstract void Move (int fromIndex, int toIndex);\n    parameters:\n    - id: fromIndex\n      type: System.Int32\n      description: The index of the item to be moved before the move.\n    - id: toIndex\n      type: System.Int32\n      description: The index of the item after it is moved.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Move*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Either <code>fromIndex</code> or <code>toIndex</code> is negative or greater than or equal to <xref:System.Activities.Presentation.Model.ModelItemCollection.Count*>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)\n  id: Remove(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Remove(ModelItem)\n  nameWithType: ModelItemCollection.Remove(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> from the collection.\n  syntax:\n    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);\n    parameters:\n    - id: item\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> was removed from the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: ModelItemCollection.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the value from the collection.\n  syntax:\n    content: public abstract bool Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value was removed from the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: ModelItemCollection.RemoveAt(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the item at the given index.\n  syntax:\n    content: public abstract void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the item.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ModelItemCollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an object that can be used to synchronize access to the collection.\n  syntax:\n    content: protected virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Returns an <xref:System.Object>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemCollection.System.Collections.ICollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets the number of elements contained in the collection.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: Returns an <xref:System.Int32> value that is the number of elements contained in the collection.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: The number of elements contained in the <xref:System.Collections.ICollection> is synchronized (thread safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Returns an <xref:System.Object> that can be used to synchronize access to the <xref:System.Collections.ICollection>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns an enumerator that iterates through a collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Returns an <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds a model item to the end of the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the collection.\n    return:\n      type: System.Int32\n      description: Returns the index of the newly added object.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: ModelItemCollection.System.Collections.IList.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes all items from the <xref:System.Collections.IList>.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains the specified element.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> contains an element that has the specified value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines the index of a specific item in the <xref:System.Collections.IList>.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to locate in the <xref:System.Collections.IList>.\n    return:\n      type: System.Int32\n      description: Returns the <xref:System.Int32> index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Inserts an element into the <xref href=\"System.Activities.Presentation.Model.ModelItemCollection\"></xref> at the specified index.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the <xref:System.Collections.IList> has a fixed size.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IList> has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the <xref:System.Collections.IList> is read-only.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IList> is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the first occurrence of a specific object from the <xref:System.Collections.IList>.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table. If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to remove from the <xref:System.Collections.IList>.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the <xref:System.Collections.IList> item at the specified index.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.Model.ModelItem\n  isExternal: false\n  name: System.Activities.Presentation.Model.ModelItem\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: ModelItemCollection()\n  nameWithType: ModelItemCollection.ModelItemCollection()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.ModelItemCollection()\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Add(ModelItem)\n  nameWithType: ModelItemCollection.Add(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Add(Object)\n  nameWithType: ModelItemCollection.Add(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Add(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ModelItemCollection.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Clear()\n- uid: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: ModelItemCollection.CollectionChanged\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged\n- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n  parent: System.Collections.Specialized\n  isExternal: true\n  name: NotifyCollectionChangedEventHandler\n  nameWithType: NotifyCollectionChangedEventHandler\n  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Contains(ModelItem)\n  nameWithType: ModelItemCollection.Contains(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(ModelItem)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: ModelItemCollection.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Contains(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: CopyTo(ModelItem[],Int32)\n  nameWithType: ModelItemCollection.CopyTo(ModelItem[],Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.CopyTo(ModelItem[],Int32)\n- uid: System.Activities.Presentation.Model.ModelItem[]\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: ModelItem\n  nameWithType: ModelItem\n  fullName: System.Activities.Presentation.Model.ModelItem[]\n  spec.csharp:\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Count\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Count\n  nameWithType: ModelItemCollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ModelItemCollection.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Activities.Presentation.Model.ModelItem}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<ModelItem>\n  nameWithType: IEnumerator<ModelItem>\n  fullName: System.Collections.Generic.IEnumerator<System.Activities.Presentation.Model.ModelItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Activities.Presentation.Model.ModelItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IndexOf(ModelItem)\n  nameWithType: ModelItemCollection.IndexOf(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IndexOf(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Insert(Int32,ModelItem)\n  nameWithType: ModelItemCollection.Insert(Int32,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Insert(Int32,Object)\n  nameWithType: ModelItemCollection.Insert(Int32,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Insert(Int32,Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: ModelItemCollection.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelItemCollection.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ModelItemCollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ModelItemCollection.Item(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Item(Int32)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: ItemProperty\n  nameWithType: ModelItemCollection.ItemProperty\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.ItemProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Move(Int32,Int32)\n  nameWithType: ModelItemCollection.Move(Int32,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Move(Int32,Int32)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Remove(ModelItem)\n  nameWithType: ModelItemCollection.Remove(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: ModelItemCollection.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.Remove(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: ModelItemCollection.RemoveAt(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(Int32)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ModelItemCollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemCollection.System.Collections.ICollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Add(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Add(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: ModelItemCollection.System.Collections.IList.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Clear()\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Contains(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ModelItemCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Item(Int32)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ModelItemCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.Remove(Object)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemCollection.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Activities.Presentation.Model.ModelItemCollection.#ctor*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: ModelItemCollection\n  nameWithType: ModelItemCollection.ModelItemCollection\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Add*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Add\n  nameWithType: ModelItemCollection.Add\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Clear*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ModelItemCollection.Clear\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Contains*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ModelItemCollection.Contains\n- uid: System.Activities.Presentation.Model.ModelItemCollection.CopyTo*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ModelItemCollection.CopyTo\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Count*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Count\n  nameWithType: ModelItemCollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ModelItemCollection.GetEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IndexOf*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ModelItemCollection.IndexOf\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Insert*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Insert\n  nameWithType: ModelItemCollection.Insert\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: ModelItemCollection.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelItemCollection.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ModelItemCollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Item*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Item\n  nameWithType: ModelItemCollection.Item\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Move*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Move\n  nameWithType: ModelItemCollection.Move\n- uid: System.Activities.Presentation.Model.ModelItemCollection.Remove*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ModelItemCollection.Remove\n- uid: System.Activities.Presentation.Model.ModelItemCollection.RemoveAt*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: ModelItemCollection.RemoveAt\n- uid: System.Activities.Presentation.Model.ModelItemCollection.SyncRoot*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ModelItemCollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ModelItemCollection.System.Collections.ICollection.CopyTo\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemCollection.System.Collections.ICollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ModelItemCollection.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: ModelItemCollection.System.Collections.IList.Add\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: ModelItemCollection.System.Collections.IList.Clear\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: ModelItemCollection.System.Collections.IList.Contains\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: ModelItemCollection.System.Collections.IList.IndexOf\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: ModelItemCollection.System.Collections.IList.Insert\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ModelItemCollection.System.Collections.IList.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ModelItemCollection.System.Collections.IList.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: ModelItemCollection.System.Collections.IList.Item\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: ModelItemCollection.System.Collections.IList.Remove\n- uid: System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt*\n  parent: System.Activities.Presentation.Model.ModelItemCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: ModelItemCollection.System.Collections.IList.RemoveAt\n"}