{"nodes":[{"pos":[782,870],"content":"The abstract base class that defines methods for a cache used to detect replayed tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"The abstract base class that defines methods for a cache used to detect replayed tokens.","pos":[0,88]}]},{"pos":[882,1280],"content":"When implemented, the cache should purge tokens on a scheduled time interval. The <xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A> method associates a security token with a key and an expiration time. The can be used to search the cache for the token or to remove the token from the cache. The expiration time indicates the time at which the token should be purged from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented, the cache should purge tokens on a scheduled time interval. The <xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A> method associates a security token with a key and an expiration time. The can be used to search the cache for the token or to remove the token from the cache. The expiration time indicates the time at which the token should be purged from the cache.","pos":[0,398],"nodes":[{"content":"When implemented, the cache should purge tokens on a scheduled time interval.","pos":[0,77]},{"content":"The &lt;xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A&gt; method associates a security token with a key and an expiration time.","pos":[78,218],"source":" The <xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A> method associates a security token with a key and an expiration time."},{"content":"The can be used to search the cache for the token or to remove the token from the cache.","pos":[219,307]},{"content":"The expiration time indicates the time at which the token should be purged from the cache.","pos":[308,398]}]}]},{"pos":[1985,2118],"content":"Called from constructors in derived classes to initialize the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>class.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>class."},{"pos":[2932,3025],"content":"When overridden in a derived class, attempts to add a new entry or update and existing entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to add a new entry or update and existing entry.","pos":[0,93]}]},{"pos":[3253,3289],"content":"The key to use when adding the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to use when adding the item.","pos":[0,36]}]},{"pos":[3387,3486],"content":"The token to add to the cache, can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The token to add to the cache, can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3559,3595],"content":"The time at which the entry expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time at which the entry expires.","pos":[0,36]}]},{"pos":[4142,4254],"content":"When overridden in a derived class, returns a value that indicates whether a matching entry exists in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns a value that indicates whether a matching entry exists in the cache.","pos":[0,112]}]},{"pos":[4397,4425],"content":"The key for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for which to search.","pos":[0,28]}]},{"pos":[4484,4665],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a matching entry is is found in the cache; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a matching entry is is found in the cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5184,5256],"content":"When overridden in a derived class, attempts to get the specified entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to get the specified entry.","pos":[0,72]}]},{"pos":[5431,5459],"content":"The key for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for which to search.","pos":[0,28]}]},{"pos":[5545,5661],"content":"The token that matches the key or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no token is found.","needQuote":true,"needEscape":true,"source":"The token that matches the key or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no token is found."},{"pos":[6308,6394],"content":"When overridden in a derived class, loads custom configuration from the specified XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, loads custom configuration from the specified XML.","pos":[0,86]}]},{"pos":[6406,6476],"content":"By default, this method throws a <xref:System.NotImplementedException>","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, this method throws a &lt;xref:System.NotImplementedException&gt;","pos":[0,70],"source":"By default, this method throws a <xref:System.NotImplementedException>"}]},{"pos":[6668,6706],"content":"The custom configuration XML elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom configuration XML elements.","pos":[0,38]}]},{"pos":[7255,7334],"content":"When overridden in a derived class, attempts to remove an entry from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to remove an entry from the cache.","pos":[0,79]}]},{"pos":[7475,7519],"content":"The key that identifies the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key that identifies the entry to remove.","pos":[0,44]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.TokenReplayCache\n  id: TokenReplayCache\n  children:\n  - System.IdentityModel.Tokens.TokenReplayCache.#ctor\n  - System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)\n  - System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)\n  - System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)\n  - System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)\n  langs:\n  - csharp\n  name: TokenReplayCache\n  nameWithType: TokenReplayCache\n  fullName: System.IdentityModel.Tokens.TokenReplayCache\n  type: Class\n  summary: The abstract base class that defines methods for a cache used to detect replayed tokens.\n  remarks: When implemented, the cache should purge tokens on a scheduled time interval. The <xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A> method associates a security token with a key and an expiration time. The can be used to search the cache for the token or to remove the token from the cache. The expiration time indicates the time at which the token should be purged from the cache.\n  syntax:\n    content: 'public abstract class TokenReplayCache : System.IdentityModel.Configuration.ICustomIdentityConfiguration'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: TokenReplayCache()\n  nameWithType: TokenReplayCache.TokenReplayCache()\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.TokenReplayCache()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>class.\n  syntax:\n    content: protected TokenReplayCache ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.TokenReplayCache.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)\n  id: AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: AddOrUpdate(String,SecurityToken,DateTime)\n  nameWithType: TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to add a new entry or update and existing entry.\n  syntax:\n    content: public abstract void AddOrUpdate (string key, System.IdentityModel.Tokens.SecurityToken securityToken, DateTime expirationTime);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key to use when adding the item.\n    - id: securityToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to add to the cache, can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: expirationTime\n      type: System.DateTime\n      description: The time at which the entry expires.\n  overload: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: TokenReplayCache.Contains(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Contains(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, returns a value that indicates whether a matching entry exists in the cache.\n  syntax:\n    content: public abstract bool Contains (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key for which to search.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a matching entry is is found in the cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.TokenReplayCache.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)\n  id: Get(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: TokenReplayCache.Get(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Get(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to get the specified entry.\n  syntax:\n    content: public abstract System.IdentityModel.Tokens.SecurityToken Get (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key for which to search.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token that matches the key or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no token is found.\n  overload: System.IdentityModel.Tokens.TokenReplayCache.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: TokenReplayCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, loads custom configuration from the specified XML.\n  remarks: By default, this method throws a <xref:System.NotImplementedException>\n  syntax:\n    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);\n    parameters:\n    - id: nodelist\n      type: System.Xml.XmlNodeList\n      description: The custom configuration XML elements.\n  overload: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: TokenReplayCache.Remove(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Remove(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to remove an entry from the cache.\n  syntax:\n    content: public abstract void Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key that identifies the entry to remove.\n  overload: System.IdentityModel.Tokens.TokenReplayCache.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: TokenReplayCache()\n  nameWithType: TokenReplayCache.TokenReplayCache()\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.TokenReplayCache()\n- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: AddOrUpdate(String,SecurityToken,DateTime)\n  nameWithType: TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Contains(String)\n  nameWithType: TokenReplayCache.Contains(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Get(String)\n  nameWithType: TokenReplayCache.Get(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Get(String)\n- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: TokenReplayCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Remove(String)\n  nameWithType: TokenReplayCache.Remove(String)\n  fullName: System.IdentityModel.Tokens.TokenReplayCache.Remove(String)\n- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: TokenReplayCache\n  nameWithType: TokenReplayCache.TokenReplayCache\n- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: AddOrUpdate\n  nameWithType: TokenReplayCache.AddOrUpdate\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Contains\n  nameWithType: TokenReplayCache.Contains\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Get*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Get\n  nameWithType: TokenReplayCache.Get\n- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: TokenReplayCache.LoadCustomConfiguration\n- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove*\n  parent: System.IdentityModel.Tokens.TokenReplayCache\n  isExternal: false\n  name: Remove\n  nameWithType: TokenReplayCache.Remove\n"}