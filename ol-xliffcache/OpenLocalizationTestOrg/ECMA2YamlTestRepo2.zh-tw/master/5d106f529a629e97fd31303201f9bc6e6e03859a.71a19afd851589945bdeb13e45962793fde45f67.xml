{"nodes":[{"pos":[887,923],"content":"Provides information about an event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about an event.","pos":[0,36]}]},{"pos":[936,2139],"content":"An EventDescriptor consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.       EventDescriptor provides the following `abstract` properties and methods:      -   <xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.      -   <xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.      -   <xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.      -   <xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.      -   <xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.       For more information about events, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2). For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"An EventDescriptor consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.","pos":[0,177]},{"content":"EventDescriptor provides the following <ph id=\"ph1\">`abstract`</ph> properties and methods:      -   &lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt; contains the type of the component this event is declared on.","pos":[184,390],"source":"       EventDescriptor provides the following `abstract` properties and methods:      -   <xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on."},{"content":"-   &lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt; contains the type of delegate for the event.","pos":[396,502],"source":"      -   <xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event."},{"content":"-   &lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt; contains a value indicating whether the event delegate is a multicast delegate.","pos":[508,651],"source":"      -   <xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate."},{"content":"-   &lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt; binds the event to a component.","pos":[657,756],"source":"      -   <xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component."},{"content":"-   &lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt; unbinds the delegate from the component so that the delegate no longer receives events from the component.","pos":[762,939],"source":"      -   <xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component."},{"content":"For more information about events, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[946,1079],"source":"       For more information about events, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"For more information about reflection, see the topics in <bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1080,1189],"source":" For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4778,4983],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the name and attributes in the specified <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref>."},{"pos":[5183,5300],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the name of the event and its attributes.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that contains the name of the event and its attributes."},{"pos":[5968,6287],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the name in the specified <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the attributes in both the <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the &lt;xref:System.Attribute&gt; array.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the <xref:System.Attribute> array."},{"pos":[6299,6447],"content":"This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor appends the attributes in the &lt;xref:System.Attribute&gt; array to the attributes in the &lt;xref:System.ComponentModel.MemberDescriptor&gt;.","pos":[0,148],"source":"This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>."}]},{"pos":[6666,6779],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has the name of the member and its attributes.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that has the name of the member and its attributes."},{"pos":[6846,6941],"content":"An <xref:System.Attribute> array with the attributes you want to add to this event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Attribute&gt; array with the attributes you want to add to this event description.","pos":[0,95],"source":"An <xref:System.Attribute> array with the attributes you want to add to this event description."}]},{"pos":[7529,7672],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name and attribute array.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the specified name and attribute array."},{"pos":[7832,7854],"content":"The name of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the event.","pos":[0,22]}]},{"pos":[7921,7997],"content":"An array of type <xref:System.Attribute> that contains the event attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; that contains the event attributes.","pos":[0,76],"source":"An array of type <xref:System.Attribute> that contains the event attributes."}]},{"pos":[8583,8652],"content":"When overridden in a derived class, binds the event to the component.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, binds the event to the component.","pos":[0,69]}]},{"pos":[8665,8981],"content":"Typically, this method is implemented through reflection. For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]},{"content":"For more information about reflection, see the topics in <bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[58,167],"source":" For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about delegates, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[174,314],"source":"       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."}]},{"pos":[9160,9209],"content":"A component that provides events to the delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component that provides events to the delegate.","pos":[0,49]}]},{"pos":[9273,9334],"content":"A delegate that represents the method that handles the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A delegate that represents the method that handles the event.","pos":[0,61]}]},{"pos":[9809,9895],"content":"When overridden in a derived class, gets the type of component this event is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the type of component this event is bound to.","pos":[0,86]}]},{"pos":[9907,9966],"content":"Typically, this property is implemented through reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, this property is implemented through reflection.","pos":[0,59]}]},{"pos":[10089,10170],"content":"A <xref:System.Type> that represents the type of component the event is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of component the event is bound to.","pos":[0,81],"source":"A <xref:System.Type> that represents the type of component the event is bound to."}]},{"pos":[10623,10699],"content":"When overridden in a derived class, gets the type of delegate for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the type of delegate for the event.","pos":[0,76]}]},{"pos":[10711,10770],"content":"Typically, this property is implemented through reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, this property is implemented through reflection.","pos":[0,59]}]},{"pos":[10889,10961],"content":"A <xref:System.Type> that represents the type of delegate for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of delegate for the event.","pos":[0,72],"source":"A <xref:System.Type> that represents the type of delegate for the event."}]},{"pos":[11420,11531],"content":"When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.","pos":[0,111]}]},{"pos":[11544,11983],"content":"Typically, this property is implemented through reflection.       A multicast delegate differs from a regular delegate in that it can contain references to more than just one method. Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear. If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, this property is implemented through reflection.       A multicast delegate differs from a regular delegate in that it can contain references to more than just one method. Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear. If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.","pos":[0,437],"nodes":[{"content":"Typically, this property is implemented through reflection.","pos":[0,59]},{"content":"A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.","pos":[66,182]},{"content":"Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.","pos":[183,306]},{"content":"If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.","pos":[307,437]}]}]},{"pos":[12108,12279],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the event delegate is multicast; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event delegate is multicast; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12886,13032],"content":"When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.","pos":[0,146]}]},{"pos":[13045,13344],"content":"Typically, this method is implemented through reflection. For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]},{"content":"For more information, see the topics in <bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[58,150],"source":" For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about delegates, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[157,297],"source":"       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."}]},{"pos":[13526,13570],"content":"The component that the delegate is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component that the delegate is bound to.","pos":[0,44]}]},{"pos":[13634,13676],"content":"The delegate to unbind from the component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to unbind from the component.","pos":[0,42]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.EventDescriptor\n  id: EventDescriptor\n  children:\n  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])\n  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)\n  - System.ComponentModel.EventDescriptor.ComponentType\n  - System.ComponentModel.EventDescriptor.EventType\n  - System.ComponentModel.EventDescriptor.IsMulticast\n  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)\n  langs:\n  - csharp\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.ComponentModel.EventDescriptor\n  type: Class\n  summary: Provides information about an event.\n  remarks: \"An EventDescriptor consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.  \\n  \\n EventDescriptor provides the following `abstract` properties and methods:  \\n  \\n-   <xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.  \\n  \\n-   <xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.  \\n  \\n-   <xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.  \\n  \\n-   <xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.  \\n  \\n-   <xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.  \\n  \\n For more information about events, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2). For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class. It prints the information (category, description, and display name) of each event on a button in a text box. It requires that `button1` and `textbox1` have been instantiated on a form.  \\n  \\n [!code-cpp[EventDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._26_1.cpp)]\\n [!code-cs[EventDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._26_1.cs)]\\n [!code-vb[EventDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._26_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MemberDescriptor\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.MemberDescriptor.AttributeArray\n  - System.ComponentModel.MemberDescriptor.Attributes\n  - System.ComponentModel.MemberDescriptor.Category\n  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - System.ComponentModel.MemberDescriptor.Description\n  - System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  - System.ComponentModel.MemberDescriptor.DisplayName\n  - System.ComponentModel.MemberDescriptor.Equals(System.Object)\n  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  - System.ComponentModel.MemberDescriptor.GetHashCode\n  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)\n  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  - System.ComponentModel.MemberDescriptor.IsBrowsable\n  - System.ComponentModel.MemberDescriptor.Name\n  - System.ComponentModel.MemberDescriptor.NameHashCode\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  id: '#ctor(System.ComponentModel.MemberDescriptor)'\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: EventDescriptor(MemberDescriptor)\n  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref>.\n  syntax:\n    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);\n    parameters:\n    - id: descr\n      type: System.ComponentModel.MemberDescriptor\n      description: A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that contains the name of the event and its attributes.\n  overload: System.ComponentModel.EventDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: EventDescriptor(MemberDescriptor,Attribute[])\n  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the <xref:System.Attribute> array.\n  remarks: This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.\n  syntax:\n    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);\n    parameters:\n    - id: descr\n      type: System.ComponentModel.MemberDescriptor\n      description: A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that has the name of the member and its attributes.\n    - id: attrs\n      type: System.Attribute[]\n      description: An <xref:System.Attribute> array with the attributes you want to add to this event description.\n  overload: System.ComponentModel.EventDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])\n  id: '#ctor(System.String,System.Attribute[])'\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: EventDescriptor(String,Attribute[])\n  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\"></xref> class with the specified name and attribute array.\n  syntax:\n    content: protected EventDescriptor (string name, Attribute[] attrs);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the event.\n    - id: attrs\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> that contains the event attributes.\n  overload: System.ComponentModel.EventDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)\n  id: AddEventHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: AddEventHandler(Object,Delegate)\n  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)\n  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, binds the event to the component.\n  remarks: \"Typically, this method is implemented through reflection. For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).\"\n  syntax:\n    content: public abstract void AddEventHandler (object component, Delegate value);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component that provides events to the delegate.\n    - id: value\n      type: System.Delegate\n      description: A delegate that represents the method that handles the event.\n  overload: System.ComponentModel.EventDescriptor.AddEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.ComponentType\n  id: ComponentType\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: ComponentType\n  nameWithType: EventDescriptor.ComponentType\n  fullName: System.ComponentModel.EventDescriptor.ComponentType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets the type of component this event is bound to.\n  remarks: Typically, this property is implemented through reflection.\n  syntax:\n    content: public abstract Type ComponentType { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of component the event is bound to.\n  overload: System.ComponentModel.EventDescriptor.ComponentType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.EventType\n  id: EventType\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: EventType\n  nameWithType: EventDescriptor.EventType\n  fullName: System.ComponentModel.EventDescriptor.EventType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets the type of delegate for the event.\n  remarks: Typically, this property is implemented through reflection.\n  syntax:\n    content: public abstract Type EventType { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of delegate for the event.\n  overload: System.ComponentModel.EventDescriptor.EventType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.IsMulticast\n  id: IsMulticast\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: IsMulticast\n  nameWithType: EventDescriptor.IsMulticast\n  fullName: System.ComponentModel.EventDescriptor.IsMulticast\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.\n  remarks: \"Typically, this property is implemented through reflection.  \\n  \\n A multicast delegate differs from a regular delegate in that it can contain references to more than just one method. Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear. If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.\"\n  syntax:\n    content: public abstract bool IsMulticast { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event delegate is multicast; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EventDescriptor.IsMulticast*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)\n  id: RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventDescriptor\n  langs:\n  - csharp\n  name: RemoveEventHandler(Object,Delegate)\n  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)\n  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.\n  remarks: \"Typically, this method is implemented through reflection. For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).\"\n  syntax:\n    content: public abstract void RemoveEventHandler (object component, Delegate value);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component that the delegate is bound to.\n    - id: value\n      type: System.Delegate\n      description: The delegate to unbind from the component.\n  overload: System.ComponentModel.EventDescriptor.RemoveEventHandler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: System.ComponentModel.MemberDescriptor\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventDescriptor(MemberDescriptor)\n  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventDescriptor(MemberDescriptor,Attribute[])\n  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])\n- uid: System.Attribute[]\n  parent: System\n  isExternal: true\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventDescriptor(String,Attribute[])\n  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])\n  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: AddEventHandler(Object,Delegate)\n  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)\n  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.ComponentModel.EventDescriptor.ComponentType\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: EventDescriptor.ComponentType\n  fullName: System.ComponentModel.EventDescriptor.ComponentType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.EventDescriptor.EventType\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventType\n  nameWithType: EventDescriptor.EventType\n  fullName: System.ComponentModel.EventDescriptor.EventType\n- uid: System.ComponentModel.EventDescriptor.IsMulticast\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: IsMulticast\n  nameWithType: EventDescriptor.IsMulticast\n  fullName: System.ComponentModel.EventDescriptor.IsMulticast\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: RemoveEventHandler(Object,Delegate)\n  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)\n  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)\n- uid: System.ComponentModel.EventDescriptor.#ctor*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor.EventDescriptor\n- uid: System.ComponentModel.EventDescriptor.AddEventHandler*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: AddEventHandler\n  nameWithType: EventDescriptor.AddEventHandler\n- uid: System.ComponentModel.EventDescriptor.ComponentType*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: EventDescriptor.ComponentType\n- uid: System.ComponentModel.EventDescriptor.EventType*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: EventType\n  nameWithType: EventDescriptor.EventType\n- uid: System.ComponentModel.EventDescriptor.IsMulticast*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: IsMulticast\n  nameWithType: EventDescriptor.IsMulticast\n- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler*\n  parent: System.ComponentModel.EventDescriptor\n  isExternal: false\n  name: RemoveEventHandler\n  nameWithType: EventDescriptor.RemoveEventHandler\n"}