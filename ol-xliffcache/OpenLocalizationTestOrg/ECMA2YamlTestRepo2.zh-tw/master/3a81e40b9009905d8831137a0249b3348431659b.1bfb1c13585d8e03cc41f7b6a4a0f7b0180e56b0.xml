{"nodes":[{"pos":[3693,3857],"content":"Presents <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> content in a <ph id=\"ph2\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> window.","needQuote":true,"needEscape":true,"source":"Presents [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] content in a [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] window."},{"pos":[3870,9923],"content":"> [!IMPORTANT] >  Many members of this class are unavailable in the Internet security zone.       An HwndSource implements a [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input. Because the HwndSource is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] features. You can use this class to do the following:      -   Specify window styles, window class styles, and extended window styles.      -   Hook the window procedure.      -   Provide access to the window handle (HWND).      -   Destroy the window.       The HwndSource class is designed for general interoperability and is not designed as a managed HWND wrapper. In general, it does not provide managed methods for manipulating the window or properties for inspecting its state. Instead, the HwndSource class provides access to the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.       **Construction**       Many aspects of the HwndSource can only be specified at construction time. To create an HwndSource, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters. These parameters include the following:      -   The class, window, and extended window styles. You must use PInvoke to change the styles after the window is created. Not all styles can be changed after the window is created. Consult the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.      -   The initial position of the window.      -   The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content.      -   The parent window.      -   The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain. If you specify a hook at construction time, it receives all messages for the window. You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.      -   The transparency settings. A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content. To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`. This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.       After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the HwndSource.       **Object Lifetime**       An HwndSource is a regular [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector. Because the HwndSource represents an unmanaged resource, HwndSource implements <xref:System.IDisposable>. Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window if called from the owner thread. If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously. Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.       **Window Procedures**       The HwndSource class implements its own window procedure. This window procedure is used to process important window messages, such as those related to layout, rendering, and input. However, you can also hook the window procedure for your own use. You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=fullName> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created. The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing. The actual hooks are held by a weak reference. Therefore, make sure that you manage the lifetime of your hook delegate.       For more information about HwndSource and other interoperation classes, see [WPF and Win32 Interoperation](~/add/includes/ajax-current-ext-md.md).       Notice how the constructors for HwndSource take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462).       Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an HwndSource. See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  Many members of this class are unavailable in the Internet security zone.","pos":[0,91],"source":"> [!IMPORTANT] >  Many members of this class are unavailable in the Internet security zone."},{"content":"An HwndSource implements a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> window that can contain <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[98,301],"source":"       An HwndSource implements a [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content in the window is arranged, measured, and rendered; and is interactive to input.","pos":[302,469],"source":" The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input."},{"content":"Because the HwndSource is specifically designed to interoperate with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>, this class exposes several low-level <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> features.","pos":[470,722],"source":" Because the HwndSource is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] features."},{"content":"You can use this class to do the following:      -   Specify window styles, window class styles, and extended window styles.","pos":[723,847]},{"content":"-   Hook the window procedure.","pos":[853,883]},{"content":"-   Provide access to the window handle (HWND).","pos":[889,936]},{"content":"-   Destroy the window.","pos":[942,965]},{"content":"The HwndSource class is designed for general interoperability and is not designed as a managed HWND wrapper.","pos":[972,1080]},{"content":"In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.","pos":[1081,1196]},{"content":"Instead, the HwndSource class provides access to the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> window handle (HWND) through the &lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt; property, which can be passed by means of PInvoke techniques to <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> <ph id=\"ph3\">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> in order to manipulate the window.","pos":[1197,1650],"source":" Instead, the HwndSource class provides access to the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window."},{"content":"<bpt id=\"p1\">**</bpt>Construction<ept id=\"p1\">**</ept>       Many aspects of the HwndSource can only be specified at construction time.","pos":[1657,1754],"source":"**Construction**       Many aspects of the HwndSource can only be specified at construction time."},{"content":"To create an HwndSource, first create an &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; structure and populate it with the desired parameters.","pos":[1755,1901],"source":" To create an HwndSource, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters."},{"content":"These parameters include the following:      -   The class, window, and extended window styles.","pos":[1902,1997]},{"content":"You must use PInvoke to change the styles after the window is created.","pos":[1998,2068]},{"content":"Not all styles can be changed after the window is created.","pos":[2069,2127]},{"content":"Consult the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> documentation before changing window styles.","pos":[2128,2252],"source":" Consult the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] documentation before changing window styles."},{"content":"-   The initial position of the window.","pos":[2258,2297]},{"content":"-   The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[2303,2524],"source":"      -   The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content."},{"content":"-   The parent window.","pos":[2530,2552]},{"content":"-   The &lt;xref:System.Windows.Interop.HwndSourceHook&gt; to include in the window procedure chain.","pos":[2558,2652],"source":"      -   The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain."},{"content":"If you specify a hook at construction time, it receives all messages for the window.","pos":[2653,2737]},{"content":"You can use &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; to add a hook after the window is created.","pos":[2738,2844],"source":" You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created."},{"content":"-   The transparency settings.","pos":[2850,2880]},{"content":"A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[2881,3096],"source":" A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content."},{"content":"To enable this, set the &lt;xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A&gt; property in the &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[3097,3272],"source":" To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`."},{"content":"This property can only be specified at construction time, and only through the &lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt; constructor signature, and it imposes several limitations.","pos":[3273,3508],"source":" This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations."},{"content":"After you populate the &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; structure, pass it to the &lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt; constructor for the HwndSource.","pos":[3515,3744],"source":"       After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the HwndSource."},{"content":"<bpt id=\"p1\">**</bpt>Object Lifetime<ept id=\"p1\">**</ept>       An HwndSource is a regular <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, and its lifetime is managed by the garbage collector.","pos":[3751,3927],"source":"**Object Lifetime**       An HwndSource is a regular [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector."},{"content":"Because the HwndSource represents an unmanaged resource, HwndSource implements &lt;xref:System.IDisposable&gt;.","pos":[3928,4033],"source":" Because the HwndSource represents an unmanaged resource, HwndSource implements <xref:System.IDisposable>."},{"content":"Synchronously calling &lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt; immediately destroys the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> window if called from the owner thread.","pos":[4034,4240],"source":" Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window if called from the owner thread."},{"content":"If called from another thread, the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> window is destroyed asynchronously.","pos":[4241,4379],"source":" If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously."},{"content":"Calling &lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt; explicitly from the interoperating code might be necessary for certain interoperation scenarios.","pos":[4380,4536],"source":" Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios."},{"content":"<bpt id=\"p1\">**</bpt>Window Procedures<ept id=\"p1\">**</ept>       The HwndSource class implements its own window procedure.","pos":[4543,4628],"source":"**Window Procedures**       The HwndSource class implements its own window procedure."},{"content":"This window procedure is used to process important window messages, such as those related to layout, rendering, and input.","pos":[4629,4751]},{"content":"However, you can also hook the window procedure for your own use.","pos":[4752,4817]},{"content":"You can specify your own hook during construction by setting the &lt;xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=fullName&gt; property, or you can also use &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; and &lt;xref:System.Windows.Interop.HwndSource.RemoveHook%2A&gt; to add and remove hooks after the window is created.","pos":[4818,5170],"source":" You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=fullName> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created."},{"content":"The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.","pos":[5171,5287]},{"content":"The actual hooks are held by a weak reference.","pos":[5288,5334]},{"content":"Therefore, make sure that you manage the lifetime of your hook delegate.","pos":[5335,5407]},{"content":"For more information about HwndSource and other interoperation classes, see <bpt id=\"p1\">[</bpt>WPF and Win32 Interoperation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[5414,5560],"source":"       For more information about HwndSource and other interoperation classes, see [WPF and Win32 Interoperation](~/add/includes/ajax-current-ext-md.md)."},{"content":"Notice how the constructors for HwndSource take parameters that resemble the parameters for <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> functions such as <bpt id=\"p1\">[</bpt>CreateWindowEx<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=98462)</ept>.","pos":[5567,5806],"source":"       Notice how the constructors for HwndSource take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462)."},{"content":"Scale transformations should not be applied to the &lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt; of an HwndSource.","pos":[5813,5936],"source":"       Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an HwndSource."},{"content":"See Remarks for &lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;.","pos":[5937,6008],"source":" See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>."}]},{"pos":[11877,12028],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.HwndSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a structure that contains the initial settings.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class by using a structure that contains the initial settings."},{"pos":[12041,12959],"content":"> [!IMPORTANT] >  This method is not available in the Internet security zone.       This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.      > [!IMPORTANT] >  If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value. You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name. If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  This method is not available in the Internet security zone.","pos":[0,77],"source":"> [!IMPORTANT] >  This method is not available in the Internet security zone."},{"content":"This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.","pos":[84,238]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  If you use this signature, do not use the default &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; constructor to construct the &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; structure for the <ph id=\"ph2\">`parameters`</ph> value.","pos":[244,480],"source":"      > [!IMPORTANT] >  If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value."},{"content":"You must use the &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; constructor that enables you to specify an initial window name.","pos":[481,612],"source":" You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name."},{"content":"If you use the default &lt;xref:System.Windows.Interop.HwndSourceParameters&gt; constructor and create an &lt;xref:System.Windows.Interop.HwndSource&gt; with it, that &lt;xref:System.Windows.Interop.HwndSource&gt; does not display because an initial window name is a construction requirement for the represented HWND.","pos":[613,912],"source":" If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND."}]},{"pos":[13172,13252],"content":"A structure that contains the parameters that are required to create the window.","needQuote":true,"needEscape":true,"nodes":[{"content":"A structure that contains the parameters that are required to create the window.","pos":[0,80]}]},{"pos":[14010,14196],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.HwndSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified class style, style, extended style, x-y position, name, and parent window.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class with a specified class style, style, extended style, x-y position, name, and parent window."},{"pos":[22435,22513],"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  This method is not available in the Internet security zone.","needQuote":false,"needEscape":true,"source":"> [!IMPORTANT] >  This method is not available in the Internet security zone."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Interop.HwndSource\n  id: HwndSource\n  children:\n  - System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)\n  - System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  - System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  - System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)\n  - System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode\n  - System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)\n  - System.Windows.Interop.HwndSource.AutoResized\n  - System.Windows.Interop.HwndSource.ChildKeyboardInputSinks\n  - System.Windows.Interop.HwndSource.CompositionTarget\n  - System.Windows.Interop.HwndSource.CreateHandleRef\n  - System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode\n  - System.Windows.Interop.HwndSource.Dispose\n  - System.Windows.Interop.HwndSource.Disposed\n  - System.Windows.Interop.HwndSource.DpiChanged\n  - System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)\n  - System.Windows.Interop.HwndSource.GetCompositionTargetCore\n  - System.Windows.Interop.HwndSource.Handle\n  - System.Windows.Interop.HwndSource.HasFocusWithinCore\n  - System.Windows.Interop.HwndSource.IsDisposed\n  - System.Windows.Interop.HwndSource.KeyboardInputSiteCore\n  - System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)\n  - System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)\n  - System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)\n  - System.Windows.Interop.HwndSource.RestoreFocusMode\n  - System.Windows.Interop.HwndSource.RootVisual\n  - System.Windows.Interop.HwndSource.SizeToContent\n  - System.Windows.Interop.HwndSource.SizeToContentChanged\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)\n  - System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.HwndSource.UsesPerPixelOpacity\n  langs:\n  - csharp\n  name: HwndSource\n  nameWithType: HwndSource\n  fullName: System.Windows.Interop.HwndSource\n  type: Class\n  summary: Presents [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] content in a [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] window.\n  remarks: \"> [!IMPORTANT]\\n>  Many members of this class are unavailable in the Internet security zone.  \\n  \\n An HwndSource implements a [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input. Because the HwndSource is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] features. You can use this class to do the following:  \\n  \\n-   Specify window styles, window class styles, and extended window styles.  \\n  \\n-   Hook the window procedure.  \\n  \\n-   Provide access to the window handle (HWND).  \\n  \\n-   Destroy the window.  \\n  \\n The HwndSource class is designed for general interoperability and is not designed as a managed HWND wrapper. In general, it does not provide managed methods for manipulating the window or properties for inspecting its state. Instead, the HwndSource class provides access to the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.  \\n  \\n **Construction**  \\n  \\n Many aspects of the HwndSource can only be specified at construction time. To create an HwndSource, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters. These parameters include the following:  \\n  \\n-   The class, window, and extended window styles. You must use PInvoke to change the styles after the window is created. Not all styles can be changed after the window is created. Consult the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.  \\n  \\n-   The initial position of the window.  \\n  \\n-   The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content.  \\n  \\n-   The parent window.  \\n  \\n-   The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain. If you specify a hook at construction time, it receives all messages for the window. You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.  \\n  \\n-   The transparency settings. A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content. To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`. This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.  \\n  \\n After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the HwndSource.  \\n  \\n **Object Lifetime**  \\n  \\n An HwndSource is a regular [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector. Because the HwndSource represents an unmanaged resource, HwndSource implements <xref:System.IDisposable>. Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window if called from the owner thread. If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously. Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.  \\n  \\n **Window Procedures**  \\n  \\n The HwndSource class implements its own window procedure. This window procedure is used to process important window messages, such as those related to layout, rendering, and input. However, you can also hook the window procedure for your own use. You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=fullName> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created. The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing. The actual hooks are held by a weak reference. Therefore, make sure that you manage the lifetime of your hook delegate.  \\n  \\n For more information about HwndSource and other interoperation classes, see [WPF and Win32 Interoperation](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Notice how the constructors for HwndSource take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462).  \\n  \\n Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an HwndSource. See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.\"\n  syntax:\n    content: 'public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.PresentationSource\n  implements:\n  - System.IDisposable\n  - System.Windows.Interop.IKeyboardInputSink\n  - System.Windows.Interop.IWin32Window\n  inheritedMembers:\n  - System.Windows.PresentationSource.AddSource\n  - System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)\n  - System.Windows.PresentationSource.ClearContentRenderedListeners\n  - System.Windows.PresentationSource.ContentRendered\n  - System.Windows.PresentationSource.CurrentSources\n  - System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)\n  - System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)\n  - System.Windows.PresentationSource.RemoveSource\n  - System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)\n  - System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)\n  id: '#ctor(System.Windows.Interop.HwndSourceParameters)'\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: HwndSource(HwndSourceParameters)\n  nameWithType: HwndSource.HwndSource(HwndSourceParameters)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(HwndSourceParameters)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class by using a structure that contains the initial settings.\n  remarks: \"> [!IMPORTANT]\\n>  This method is not available in the Internet security zone.  \\n  \\n This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.  \\n  \\n> [!IMPORTANT]\\n>  If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value. You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name. If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.\"\n  syntax:\n    content: public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Windows.Interop.HwndSourceParameters\n      description: A structure that contains the parameters that are required to create the window.\n  overload: System.Windows.Interop.HwndSource.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)'\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class with a specified class style, style, extended style, x-y position, name, and parent window.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This method is not available in the Internet security zone.\n  syntax:\n    content: public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);\n    parameters:\n    - id: classStyle\n      type: System.Int32\n      description: The [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] class styles for the window.\n    - id: style\n      type: System.Int32\n      description: The [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: exStyle\n      type: System.Int32\n      description: The extended [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: x\n      type: System.Int32\n      description: The position of the window's left edge.\n    - id: y\n      type: System.Int32\n      description: The position of the window's upper edge.\n    - id: name\n      type: System.String\n      description: The name of the window.\n    - id: parent\n      type: System.IntPtr\n      description: The handle of the window's parent window.\n  overload: System.Windows.Interop.HwndSource.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)'\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This method is not available in the Internet security zone.\n  syntax:\n    content: public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);\n    parameters:\n    - id: classStyle\n      type: System.Int32\n      description: The [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] class styles for the window.\n    - id: style\n      type: System.Int32\n      description: The [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: exStyle\n      type: System.Int32\n      description: The extended [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: x\n      type: System.Int32\n      description: The position of the window's left edge.\n    - id: y\n      type: System.Int32\n      description: The position of the window's upper edge.\n    - id: width\n      type: System.Int32\n      description: The width of the window.\n    - id: height\n      type: System.Int32\n      description: The height of the window.\n    - id: name\n      type: System.String\n      description: The name of the window.\n    - id: parent\n      type: System.IntPtr\n      description: The handle of the window's parent window.\n  overload: System.Windows.Interop.HwndSource.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)'\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Interop.HwndSource\"></xref> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This method is not available in the Internet security zone.\n  syntax:\n    content: public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);\n    parameters:\n    - id: classStyle\n      type: System.Int32\n      description: The [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] class styles for the window.\n    - id: style\n      type: System.Int32\n      description: The [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: exStyle\n      type: System.Int32\n      description: The extended [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] styles for the window.\n    - id: x\n      type: System.Int32\n      description: The position of the window's left edge.\n    - id: y\n      type: System.Int32\n      description: The position of the window's upper edge.\n    - id: width\n      type: System.Int32\n      description: The width of the window.\n    - id: height\n      type: System.Int32\n      description: The height of the window.\n    - id: name\n      type: System.String\n      description: The name of the window.\n    - id: parent\n      type: System.IntPtr\n      description: The handle of the window's parent window.\n    - id: adjustSizingForNonClientArea\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to have the layout manager include the non-client area for sizing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode\n  id: AcquireHwndFocusInMenuMode\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: AcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.AcquireHwndFocusInMenuMode\n  fullName: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <xref href=\"System.Windows.Interop.HwndSource\"></xref>.\n  remarks: \"This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.  \\n  \\n The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.\"\n  syntax:\n    content: public bool AcquireHwndFocusInMenuMode { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)\n  id: AddHook(System.Windows.Interop.HwndSourceHook)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: AddHook(HwndSourceHook)\n  nameWithType: HwndSource.AddHook(HwndSourceHook)\n  fullName: System.Windows.Interop.HwndSource.AddHook(HwndSourceHook)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Adds an event handler that receives all window messages.\n  remarks: \"> [!IMPORTANT]\\n>  This method is not available in the Internet security zone.  \\n  \\n Most [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] equivalent. You use AddHook to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] equivalent.  \\n  \\n The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] main window procedure. All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.  \\n  \\n Hooks are called in the order that they were added. If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.\"\n  syntax:\n    content: public void AddHook (System.Windows.Interop.HwndSourceHook hook);\n    parameters:\n    - id: hook\n      type: System.Windows.Interop.HwndSourceHook\n      description: The handler implementation (based on the <xref href=\"System.Windows.Interop.HwndSourceHook\"></xref> delegate) that receives the window messages.\n  overload: System.Windows.Interop.HwndSource.AddHook*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.AutoResized\n  id: AutoResized\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: AutoResized\n  nameWithType: HwndSource.AutoResized\n  fullName: System.Windows.Interop.HwndSource.AutoResized\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Occurs when layout causes the <xref href=\"System.Windows.Interop.HwndSource\"></xref> to automatically resize.\n  remarks: The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] layout system. The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent>.\n  syntax:\n    content: public event System.Windows.AutoResizedEventHandler AutoResized;\n    return:\n      type: System.Windows.AutoResizedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks\n  id: ChildKeyboardInputSinks\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: ChildKeyboardInputSinks\n  nameWithType: HwndSource.ChildKeyboardInputSinks\n  fullName: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets a sequence of registered input sinks.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Interop.IKeyboardInputSink> ChildKeyboardInputSinks { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Interop.IKeyboardInputSink}\n      description: An enumeration of keyboard input sinks.\n  overload: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.CompositionTarget\n  id: CompositionTarget\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: CompositionTarget\n  nameWithType: HwndSource.CompositionTarget\n  fullName: System.Windows.Interop.HwndSource.CompositionTarget\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the visual manager for the hosted window.\n  remarks: Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that CompositionTarget returns.\n  syntax:\n    content: public System.Windows.Interop.HwndTarget CompositionTarget { get; }\n    return:\n      type: System.Windows.Interop.HwndTarget\n      description: The visual manager.\n  overload: System.Windows.Interop.HwndSource.CompositionTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.CreateHandleRef\n  id: CreateHandleRef\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: CreateHandleRef()\n  nameWithType: HwndSource.CreateHandleRef()\n  fullName: System.Windows.Interop.HwndSource.CreateHandleRef()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the window handle for the <xref href=\"System.Windows.Interop.HwndSource\"></xref>. The window handle is packaged as part of a <xref href=\"System.Runtime.InteropServices.HandleRef\"></xref> structure.\n  remarks: \"You can use the handle that is obtained from CreateHandleRef to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] code. Use the handle for operations such as message handling and window behavior.  \\n  \\n To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.\"\n  syntax:\n    content: public System.Runtime.InteropServices.HandleRef CreateHandleRef ();\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.HandleRef\n      description: A structure that contains the window handle for this <xref href=\"System.Windows.Interop.HwndSource\"></xref>.\n  overload: System.Windows.Interop.HwndSource.CreateHandleRef*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode\n  id: DefaultAcquireHwndFocusInMenuMode\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: DefaultAcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.DefaultAcquireHwndFocusInMenuMode\n  fullName: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets or sets the default <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode*> value for new instances of <xref href=\"System.Windows.Interop.HwndSource\"></xref>.\n  remarks: New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.\n  syntax:\n    content: public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.Dispose\n  id: Dispose\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HwndSource.Dispose()\n  fullName: System.Windows.Interop.HwndSource.Dispose()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Releases all managed resources that are used by the <xref href=\"System.Windows.Interop.HwndSource\"></xref>, and raises the <xref href=\"System.Windows.Interop.HwndSource.Disposed\"></xref> event.\n  remarks: \"> [!IMPORTANT]\\n>  This method is not available in the Internet security zone.  \\n  \\n Dispose initiates related cleanup work for the HWND. If Dispose is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.  \\n  \\n Calling Dispose explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Windows.Interop.HwndSource.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.Disposed\n  id: Disposed\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: Disposed\n  nameWithType: HwndSource.Disposed\n  fullName: System.Windows.Interop.HwndSource.Disposed\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Occurs when the <xref:System.Windows.Interop.HwndSource.Dispose*> method is called on this object.\n  remarks: \"The Disposed event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>. The Disposed event indicates that the object that raises the event is about to have all references to it removed.  \\n  \\n Use Disposed and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).\"\n  syntax:\n    content: public event EventHandler Disposed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.DpiChanged\n  id: DpiChanged\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: DpiChanged\n  nameWithType: HwndSource.DpiChanged\n  fullName: System.Windows.Interop.HwndSource.DpiChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.\n  syntax:\n    content: public event System.Windows.HwndDpiChangedEventHandler DpiChanged;\n    return:\n      type: System.Windows.HwndDpiChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)\n  id: FromHwnd(System.IntPtr)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: FromHwnd(IntPtr)\n  nameWithType: HwndSource.FromHwnd(IntPtr)\n  fullName: System.Windows.Interop.HwndSource.FromHwnd(IntPtr)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Returns the <xref href=\"System.Windows.Interop.HwndSource\"></xref> object of the specified window.\n  remarks: \"> [!IMPORTANT]\\n>  This method is not available in the Internet security zone, or for partial trust in general.  \\n  \\n You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window. The procedure for this is:  \\n  \\n1.  Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).  \\n  \\n2.  Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.  \\n  \\n3.  Pass that HWND value as a parameter to FromHwnd.  \\n  \\n This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window. However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it. This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed. For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.\"\n  syntax:\n    content: public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);\n    parameters:\n    - id: hwnd\n      type: System.IntPtr\n      description: The provided window handle.\n    return:\n      type: System.Windows.Interop.HwndSource\n      description: The <xref href=\"System.Windows.Interop.HwndSource\"></xref> object for the window that is specified by the <code>hwnd</code> window handle.\n  overload: System.Windows.Interop.HwndSource.FromHwnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.GetCompositionTargetCore\n  id: GetCompositionTargetCore\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: GetCompositionTargetCore()\n  nameWithType: HwndSource.GetCompositionTargetCore()\n  fullName: System.Windows.Interop.HwndSource.GetCompositionTargetCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the visual target of the window.\n  remarks: The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.\n  syntax:\n    content: protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();\n    parameters: []\n    return:\n      type: System.Windows.Media.CompositionTarget\n      description: Returns the visual target of the window.\n  overload: System.Windows.Interop.HwndSource.GetCompositionTargetCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.Handle\n  id: Handle\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: HwndSource.Handle\n  fullName: System.Windows.Interop.HwndSource.Handle\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the window handle for this <xref href=\"System.Windows.Interop.HwndSource\"></xref>.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This property is not available in the Internet security zone.\n  syntax:\n    content: public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: The window handle.\n  overload: System.Windows.Interop.HwndSource.Handle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.HasFocusWithinCore\n  id: HasFocusWithinCore\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: HasFocusWithinCore()\n  nameWithType: HwndSource.HasFocusWithinCore()\n  fullName: System.Windows.Interop.HwndSource.HasFocusWithinCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets a value that indicates whether the sink or one of its contained components has focus.\n  syntax:\n    content: protected virtual bool HasFocusWithinCore ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sink or one of its contained components has focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.HasFocusWithinCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.IsDisposed\n  id: IsDisposed\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: IsDisposed\n  nameWithType: HwndSource.IsDisposed\n  fullName: System.Windows.Interop.HwndSource.IsDisposed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets a value that indicates whether <xref:System.Windows.Interop.HwndSource.Dispose*> has been called on this <xref href=\"System.Windows.Interop.HwndSource\"></xref>.\n  remarks: <xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND. If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread. The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of IsDisposed becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called. During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.\n  syntax:\n    content: public override bool IsDisposed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object has had <xref:System.Windows.Interop.HwndSource.Dispose*> called on it; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.IsDisposed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.KeyboardInputSiteCore\n  id: KeyboardInputSiteCore\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: KeyboardInputSiteCore\n  nameWithType: HwndSource.KeyboardInputSiteCore\n  fullName: System.Windows.Interop.HwndSource.KeyboardInputSiteCore\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  syntax:\n    content: protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no site is assigned. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.KeyboardInputSiteCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)\n  id: OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: OnDpiChanged(HwndDpiChangedEventArgs)\n  nameWithType: HwndSource.OnDpiChanged(HwndDpiChangedEventArgs)\n  fullName: System.Windows.Interop.HwndSource.OnDpiChanged(HwndDpiChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Called when the DPI is going to change for the window.\n  remarks: \"If the user handles this event,         WPF does not scale any visuals.  \\n  \\n> [!IMPORTANT]\\n>  This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.\"\n  syntax:\n    content: protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.HwndDpiChangedEventArgs\n      description: The event arguments\n  overload: System.Windows.Interop.HwndSource.OnDpiChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: OnMnemonicCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.OnMnemonicCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.OnMnemonicCore(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Called when one of the mnemonics (access keys) for this sink is invoked.\n  syntax:\n    content: protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message for the mnemonic and associated data.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.OnMnemonicCore*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>msg</code> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)\n  id: RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n  nameWithType: HwndSource.RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n  fullName: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component.\n  syntax:\n    content: protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);\n    parameters:\n    - id: sink\n      type: System.Windows.Interop.IKeyboardInputSink\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component.\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component.\n  overload: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)\n  id: RemoveHook(System.Windows.Interop.HwndSourceHook)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: RemoveHook(HwndSourceHook)\n  nameWithType: HwndSource.RemoveHook(HwndSourceHook)\n  fullName: System.Windows.Interop.HwndSource.RemoveHook(HwndSourceHook)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Removes the event handlers that were added by <xref:System.Windows.Interop.HwndSource.AddHook*>.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This method is not available in the Internet security zone.\n  syntax:\n    content: public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);\n    parameters:\n    - id: hook\n      type: System.Windows.Interop.HwndSourceHook\n      description: The event handler to remove.\n  overload: System.Windows.Interop.HwndSource.RemoveHook*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.RestoreFocusMode\n  id: RestoreFocusMode\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: RestoreFocusMode\n  nameWithType: HwndSource.RestoreFocusMode\n  fullName: System.Windows.Interop.HwndSource.RestoreFocusMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets the <xref href=\"System.Windows.Input.RestoreFocusMode\"></xref> for the window.\n  remarks: This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=fullName> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=fullName> property.\n  syntax:\n    content: public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }\n    return:\n      type: System.Windows.Input.RestoreFocusMode\n      description: The <xref href=\"System.Windows.Input.RestoreFocusMode\"></xref> for the window.\n  overload: System.Windows.Interop.HwndSource.RestoreFocusMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.RootVisual\n  id: RootVisual\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: RootVisual\n  nameWithType: HwndSource.RootVisual\n  fullName: System.Windows.Interop.HwndSource.RootVisual\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets or sets the <xref:System.Windows.Media.CompositionTarget.RootVisual*> of the window.\n  remarks: \"Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.  \\n  \\n Scale transformations should not be applied to the RootVisual of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior. The content will scale, but the enclosing window will not. Instead of applying the transformation to the object that is the RootVisual, apply the transformation to an object that is a child element of the RootVisual. You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.  \\n  \\n You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.\"\n  syntax:\n    content: public override System.Windows.Media.Visual RootVisual { get; set; }\n    return:\n      type: System.Windows.Media.Visual\n      description: The root visual object of the window.\n  overload: System.Windows.Interop.HwndSource.RootVisual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.SizeToContent\n  id: SizeToContent\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: SizeToContent\n  nameWithType: HwndSource.SizeToContent\n  fullName: System.Windows.Interop.HwndSource.SizeToContent\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Get or sets whether and how the window is sized to its content.\n  remarks: \"End users might indirectly set this property through application UI, if that functionality is exposed by the application.  \\n  \\n Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable SizeToContent behavior. See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.\"\n  syntax:\n    content: public System.Windows.SizeToContent SizeToContent { get; set; }\n    return:\n      type: System.Windows.SizeToContent\n      description: One of the enumeration values. The default value is <xref href=\"System.Windows.SizeToContent\"></xref>, which specifies that the window is not sized to its content.\n  overload: System.Windows.Interop.HwndSource.SizeToContent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.SizeToContentChanged\n  id: SizeToContentChanged\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: SizeToContentChanged\n  nameWithType: HwndSource.SizeToContentChanged\n  fullName: System.Windows.Interop.HwndSource.SizeToContentChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Occurs when the value of the <xref:System.Windows.Interop.HwndSource.SizeToContent*> property changes.\n  remarks: The SizeToContentChanged event is only raised when user interaction causes the change. If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the SizeToContentChanged event is not raised.\n  syntax:\n    content: public event EventHandler SizeToContentChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin\n  id: System#Windows#Interop#IKeyboardInputSink#HasFocusWithin\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see &lt;xref:System.Windows.Media.FamilyTypefaceCollection.System%23Collections%23IList%23Remove%2A&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: bool IKeyboardInputSink.HasFocusWithin ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sink or one of its contained components has focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite\n  id: System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  id: System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);\n    parameters:\n    - id: sink\n      type: System.Windows.Interop.IKeyboardInputSink\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component.\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)\n  id: System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.TabInto*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: Specifies whether focus should be set to the first or the last tab stop.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the focus has been set as requested; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if there are no tab stops.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled by the method implementation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  isEii: true\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: For a description of this member, see <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.\n  syntax:\n    content: bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed and <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> should not be called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)\n  id: TabIntoCore(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: TabIntoCore(TraversalRequest)\n  nameWithType: HwndSource.TabIntoCore(TraversalRequest)\n  fullName: System.Windows.Interop.HwndSource.TabIntoCore(TraversalRequest)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Sets focus on either the first tab stop or the last tab stop of the sink.\n  syntax:\n    content: protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: Specifies whether focus should be set to the first or the last tab stop.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the focus has been set as requested; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if there are no tab stops.\n  overload: System.Windows.Interop.HwndSource.TabIntoCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: TranslateAcceleratorCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.TranslateAcceleratorCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.TranslateAcceleratorCore(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Processes keyboard input at the key-down message level.\n  syntax:\n    content: protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled by the method implementation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.TranslateAcceleratorCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: TranslateCharCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.TranslateCharCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.TranslateCharCore(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> method is called.\n  syntax:\n    content: protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed and <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> should not be called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.TranslateCharCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.HwndSource.UsesPerPixelOpacity\n  id: UsesPerPixelOpacity\n  parent: System.Windows.Interop.HwndSource\n  langs:\n  - csharp\n  name: UsesPerPixelOpacity\n  nameWithType: HwndSource.UsesPerPixelOpacity\n  fullName: System.Windows.Interop.HwndSource.UsesPerPixelOpacity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  summary: Gets a value that declares whether the per-pixel opacity of the source window content is respected.\n  remarks: When you enable per-pixel opacity, the system no longer draws the non-client area. This is because the intended purpose of UsesPerPixelOpacity is to show non-rectangular top-level UI that works in interoperation scenarios. Therefore, showing the rectangular non-client area defeats that purpose.\n  syntax:\n    content: public bool UsesPerPixelOpacity { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system uses per-pixel opacity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.HwndSource.UsesPerPixelOpacity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.PresentationSource\n  isExternal: false\n  name: System.Windows.PresentationSource\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HwndSource(HwndSourceParameters)\n  nameWithType: HwndSource.HwndSource(HwndSourceParameters)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(HwndSourceParameters)\n- uid: System.Windows.Interop.HwndSourceParameters\n  parent: System.Windows.Interop\n  isExternal: false\n  name: HwndSourceParameters\n  nameWithType: HwndSourceParameters\n  fullName: System.Windows.Interop.HwndSourceParameters\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr)\n- uid: System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n  nameWithType: HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n  fullName: System.Windows.Interop.HwndSource.HwndSource(Int32,Int32,Int32,Int32,Int32,Int32,Int32,String,IntPtr,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: AcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.AcquireHwndFocusInMenuMode\n  fullName: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode\n- uid: System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: AddHook(HwndSourceHook)\n  nameWithType: HwndSource.AddHook(HwndSourceHook)\n  fullName: System.Windows.Interop.HwndSource.AddHook(HwndSourceHook)\n- uid: System.Windows.Interop.HwndSourceHook\n  parent: System.Windows.Interop\n  isExternal: false\n  name: HwndSourceHook\n  nameWithType: HwndSourceHook\n  fullName: System.Windows.Interop.HwndSourceHook\n- uid: System.Windows.Interop.HwndSource.AutoResized\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: AutoResized\n  nameWithType: HwndSource.AutoResized\n  fullName: System.Windows.Interop.HwndSource.AutoResized\n- uid: System.Windows.AutoResizedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: AutoResizedEventHandler\n  nameWithType: AutoResizedEventHandler\n  fullName: System.Windows.AutoResizedEventHandler\n- uid: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: ChildKeyboardInputSinks\n  nameWithType: HwndSource.ChildKeyboardInputSinks\n  fullName: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Interop.IKeyboardInputSink}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<IKeyboardInputSink>\n  nameWithType: IEnumerable<IKeyboardInputSink>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Interop.IKeyboardInputSink>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Interop.IKeyboardInputSink>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Interop.IKeyboardInputSink\n    name: IKeyboardInputSink\n    nameWithType: IKeyboardInputSink\n    fullName: IKeyboardInputSink\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Interop.HwndSource.CompositionTarget\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: CompositionTarget\n  nameWithType: HwndSource.CompositionTarget\n  fullName: System.Windows.Interop.HwndSource.CompositionTarget\n- uid: System.Windows.Interop.HwndTarget\n  parent: System.Windows.Interop\n  isExternal: false\n  name: HwndTarget\n  nameWithType: HwndTarget\n  fullName: System.Windows.Interop.HwndTarget\n- uid: System.Windows.Interop.HwndSource.CreateHandleRef\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: CreateHandleRef()\n  nameWithType: HwndSource.CreateHandleRef()\n  fullName: System.Windows.Interop.HwndSource.CreateHandleRef()\n- uid: System.Runtime.InteropServices.HandleRef\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: HandleRef\n  nameWithType: HandleRef\n  fullName: System.Runtime.InteropServices.HandleRef\n- uid: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: DefaultAcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.DefaultAcquireHwndFocusInMenuMode\n  fullName: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode\n- uid: System.Windows.Interop.HwndSource.Dispose\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: Dispose()\n  nameWithType: HwndSource.Dispose()\n  fullName: System.Windows.Interop.HwndSource.Dispose()\n- uid: System.Windows.Interop.HwndSource.Disposed\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: Disposed\n  nameWithType: HwndSource.Disposed\n  fullName: System.Windows.Interop.HwndSource.Disposed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Interop.HwndSource.DpiChanged\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: DpiChanged\n  nameWithType: HwndSource.DpiChanged\n  fullName: System.Windows.Interop.HwndSource.DpiChanged\n- uid: System.Windows.HwndDpiChangedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: HwndDpiChangedEventHandler\n  nameWithType: HwndDpiChangedEventHandler\n  fullName: System.Windows.HwndDpiChangedEventHandler\n- uid: System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: FromHwnd(IntPtr)\n  nameWithType: HwndSource.FromHwnd(IntPtr)\n  fullName: System.Windows.Interop.HwndSource.FromHwnd(IntPtr)\n- uid: System.Windows.Interop.HwndSource\n  parent: System.Windows.Interop\n  isExternal: false\n  name: HwndSource\n  nameWithType: HwndSource\n  fullName: System.Windows.Interop.HwndSource\n- uid: System.Windows.Interop.HwndSource.GetCompositionTargetCore\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: GetCompositionTargetCore()\n  nameWithType: HwndSource.GetCompositionTargetCore()\n  fullName: System.Windows.Interop.HwndSource.GetCompositionTargetCore()\n- uid: System.Windows.Media.CompositionTarget\n  parent: System.Windows.Media\n  isExternal: false\n  name: CompositionTarget\n  nameWithType: CompositionTarget\n  fullName: System.Windows.Media.CompositionTarget\n- uid: System.Windows.Interop.HwndSource.Handle\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: Handle\n  nameWithType: HwndSource.Handle\n  fullName: System.Windows.Interop.HwndSource.Handle\n- uid: System.Windows.Interop.HwndSource.HasFocusWithinCore\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HasFocusWithinCore()\n  nameWithType: HwndSource.HasFocusWithinCore()\n  fullName: System.Windows.Interop.HwndSource.HasFocusWithinCore()\n- uid: System.Windows.Interop.HwndSource.IsDisposed\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: IsDisposed\n  nameWithType: HwndSource.IsDisposed\n  fullName: System.Windows.Interop.HwndSource.IsDisposed\n- uid: System.Windows.Interop.HwndSource.KeyboardInputSiteCore\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: KeyboardInputSiteCore\n  nameWithType: HwndSource.KeyboardInputSiteCore\n  fullName: System.Windows.Interop.HwndSource.KeyboardInputSiteCore\n- uid: System.Windows.Interop.IKeyboardInputSite\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSite\n  nameWithType: IKeyboardInputSite\n  fullName: System.Windows.Interop.IKeyboardInputSite\n- uid: System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: OnDpiChanged(HwndDpiChangedEventArgs)\n  nameWithType: HwndSource.OnDpiChanged(HwndDpiChangedEventArgs)\n  fullName: System.Windows.Interop.HwndSource.OnDpiChanged(HwndDpiChangedEventArgs)\n- uid: System.Windows.HwndDpiChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: HwndDpiChangedEventArgs\n  nameWithType: HwndDpiChangedEventArgs\n  fullName: System.Windows.HwndDpiChangedEventArgs\n- uid: System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: OnMnemonicCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.OnMnemonicCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.OnMnemonicCore(MSG,ModifierKeys)\n- uid: System.Windows.Interop.MSG\n  parent: System.Windows.Interop\n  isExternal: false\n  name: MSG\n  nameWithType: MSG\n  fullName: System.Windows.Interop.MSG\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n  nameWithType: HwndSource.RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n  fullName: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(IKeyboardInputSink)\n- uid: System.Windows.Interop.IKeyboardInputSink\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSink\n  nameWithType: IKeyboardInputSink\n  fullName: System.Windows.Interop.IKeyboardInputSink\n- uid: System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RemoveHook(HwndSourceHook)\n  nameWithType: HwndSource.RemoveHook(HwndSourceHook)\n  fullName: System.Windows.Interop.HwndSource.RemoveHook(HwndSourceHook)\n- uid: System.Windows.Interop.HwndSource.RestoreFocusMode\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RestoreFocusMode\n  nameWithType: HwndSource.RestoreFocusMode\n  fullName: System.Windows.Interop.HwndSource.RestoreFocusMode\n- uid: System.Windows.Input.RestoreFocusMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: RestoreFocusMode\n  nameWithType: RestoreFocusMode\n  fullName: System.Windows.Input.RestoreFocusMode\n- uid: System.Windows.Interop.HwndSource.RootVisual\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RootVisual\n  nameWithType: HwndSource.RootVisual\n  fullName: System.Windows.Interop.HwndSource.RootVisual\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Interop.HwndSource.SizeToContent\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: SizeToContent\n  nameWithType: HwndSource.SizeToContent\n  fullName: System.Windows.Interop.HwndSource.SizeToContent\n- uid: System.Windows.SizeToContent\n  parent: System.Windows\n  isExternal: false\n  name: SizeToContent\n  nameWithType: SizeToContent\n  fullName: System.Windows.SizeToContent\n- uid: System.Windows.Interop.HwndSource.SizeToContentChanged\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: SizeToContentChanged\n  nameWithType: HwndSource.SizeToContentChanged\n  fullName: System.Windows.Interop.HwndSource.SizeToContentChanged\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n- uid: System.Windows.Input.TraversalRequest\n  parent: System.Windows.Input\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n- uid: System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TabIntoCore(TraversalRequest)\n  nameWithType: HwndSource.TabIntoCore(TraversalRequest)\n  fullName: System.Windows.Interop.HwndSource.TabIntoCore(TraversalRequest)\n- uid: System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TranslateAcceleratorCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.TranslateAcceleratorCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.TranslateAcceleratorCore(MSG,ModifierKeys)\n- uid: System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TranslateCharCore(MSG,ModifierKeys)\n  nameWithType: HwndSource.TranslateCharCore(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.HwndSource.TranslateCharCore(MSG,ModifierKeys)\n- uid: System.Windows.Interop.HwndSource.UsesPerPixelOpacity\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: UsesPerPixelOpacity\n  nameWithType: HwndSource.UsesPerPixelOpacity\n  fullName: System.Windows.Interop.HwndSource.UsesPerPixelOpacity\n- uid: System.Windows.Interop.HwndSource.#ctor*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HwndSource\n  nameWithType: HwndSource.HwndSource\n- uid: System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: AcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.AcquireHwndFocusInMenuMode\n- uid: System.Windows.Interop.HwndSource.AddHook*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: AddHook\n  nameWithType: HwndSource.AddHook\n- uid: System.Windows.Interop.HwndSource.ChildKeyboardInputSinks*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: ChildKeyboardInputSinks\n  nameWithType: HwndSource.ChildKeyboardInputSinks\n- uid: System.Windows.Interop.HwndSource.CompositionTarget*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: CompositionTarget\n  nameWithType: HwndSource.CompositionTarget\n- uid: System.Windows.Interop.HwndSource.CreateHandleRef*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: CreateHandleRef\n  nameWithType: HwndSource.CreateHandleRef\n- uid: System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: DefaultAcquireHwndFocusInMenuMode\n  nameWithType: HwndSource.DefaultAcquireHwndFocusInMenuMode\n- uid: System.Windows.Interop.HwndSource.Dispose*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: Dispose\n  nameWithType: HwndSource.Dispose\n- uid: System.Windows.Interop.HwndSource.FromHwnd*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: FromHwnd\n  nameWithType: HwndSource.FromHwnd\n- uid: System.Windows.Interop.HwndSource.GetCompositionTargetCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: GetCompositionTargetCore\n  nameWithType: HwndSource.GetCompositionTargetCore\n- uid: System.Windows.Interop.HwndSource.Handle*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: Handle\n  nameWithType: HwndSource.Handle\n- uid: System.Windows.Interop.HwndSource.HasFocusWithinCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: HasFocusWithinCore\n  nameWithType: HwndSource.HasFocusWithinCore\n- uid: System.Windows.Interop.HwndSource.IsDisposed*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: IsDisposed\n  nameWithType: HwndSource.IsDisposed\n- uid: System.Windows.Interop.HwndSource.KeyboardInputSiteCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: KeyboardInputSiteCore\n  nameWithType: HwndSource.KeyboardInputSiteCore\n- uid: System.Windows.Interop.HwndSource.OnDpiChanged*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: OnDpiChanged\n  nameWithType: HwndSource.OnDpiChanged\n- uid: System.Windows.Interop.HwndSource.OnMnemonicCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: OnMnemonicCore\n  nameWithType: HwndSource.OnMnemonicCore\n- uid: System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RegisterKeyboardInputSinkCore\n  nameWithType: HwndSource.RegisterKeyboardInputSinkCore\n- uid: System.Windows.Interop.HwndSource.RemoveHook*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RemoveHook\n  nameWithType: HwndSource.RemoveHook\n- uid: System.Windows.Interop.HwndSource.RestoreFocusMode*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RestoreFocusMode\n  nameWithType: HwndSource.RestoreFocusMode\n- uid: System.Windows.Interop.HwndSource.RootVisual*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: RootVisual\n  nameWithType: HwndSource.RootVisual\n- uid: System.Windows.Interop.HwndSource.SizeToContent*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: SizeToContent\n  nameWithType: HwndSource.SizeToContent\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.OnMnemonic\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TabInto\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator\n- uid: System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: System.Windows.Interop.IKeyboardInputSink.TranslateChar\n  nameWithType: HwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar\n- uid: System.Windows.Interop.HwndSource.TabIntoCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TabIntoCore\n  nameWithType: HwndSource.TabIntoCore\n- uid: System.Windows.Interop.HwndSource.TranslateAcceleratorCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TranslateAcceleratorCore\n  nameWithType: HwndSource.TranslateAcceleratorCore\n- uid: System.Windows.Interop.HwndSource.TranslateCharCore*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: TranslateCharCore\n  nameWithType: HwndSource.TranslateCharCore\n- uid: System.Windows.Interop.HwndSource.UsesPerPixelOpacity*\n  parent: System.Windows.Interop.HwndSource\n  isExternal: false\n  name: UsesPerPixelOpacity\n  nameWithType: HwndSource.UsesPerPixelOpacity\n"}