{"nodes":[{"pos":[743,877],"content":"Reports the information returned from &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reports the information returned from <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,134],"source":"Reports the information returned from &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;."}]},{"pos":[890,2024],"content":"Most of the information that ValueSource transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property. This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.       Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference). This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively. Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Most of the information that ValueSource transmits is contained in the &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; property.","pos":[0,133],"source":"Most of the information that ValueSource transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property."},{"content":"This property contains an enumeration value that specifies exactly one aspect of the overall <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.","pos":[134,388],"source":" This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property."},{"content":"Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).","pos":[395,639]},{"content":"This information is reported by &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt; and &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt; respectively.","pos":[640,787],"source":" This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively."},{"content":"Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.","pos":[788,1005]},{"content":"A coerced property that is not at its desired value will report that &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt; is <ph id=\"ph1\">`true`</ph>.","pos":[1006,1132],"source":" A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`."}]},{"pos":[2499,2667],"content":"Gets a value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.BaseValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration, which reports the source that provided the dependency property system with a value.","needQuote":true,"needEscape":true,"source":"Gets a value of the <xref href=\"System.Windows.BaseValueSource\"></xref> enumeration, which reports the source that provided the dependency property system with a value."},{"pos":[2680,3105],"content":"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.       You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.","needQuote":false,"needEscape":true,"nodes":[{"content":"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.       You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.","pos":[0,423],"nodes":[{"content":"The base value is not the effective value if either coercion or animation is acting on the property.","pos":[0,100]},{"content":"Check &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt; and &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt; if you want to determine whether the base value is the effective value.","pos":[101,277],"source":" Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value."},{"content":"You might also want to check &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt; to see if the base value was evaluated out of an expression.","pos":[284,423],"source":"       You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression."}]}]},{"pos":[3267,3294],"content":"A value of the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of the enumeration.","pos":[0,27]}]},{"pos":[3746,3865],"content":"Returns a value indicating whether this <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to a specified object.","needQuote":true,"needEscape":true,"source":"Returns a value indicating whether this <xref href=\"System.Windows.ValueSource\"></xref> is equal to a specified object."},{"pos":[3877,4011],"content":"This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation supports value equality, based on each of the property values of each &lt;xref:System.Windows.ValueSource&gt; structure.","pos":[0,134],"source":"This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure."}]},{"pos":[4148,4228],"content":"The object to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare with this <xref href=\"System.Windows.ValueSource\"></xref>."},{"pos":[4287,4523],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the provided object is equivalent to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided object is equivalent to the current <xref href=\"System.Windows.ValueSource\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4943,5022],"content":"Returns the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this <xref href=\"System.Windows.ValueSource\"></xref>."},{"pos":[5034,5124],"content":"This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"This hash code is based on the &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; value.","pos":[0,90],"source":"This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value."}]},{"pos":[5259,5295],"content":"A 32-bit unsigned integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit unsigned integer hash code.","pos":[0,36]}]},{"pos":[5711,5777],"content":"Gets a value that declares whether the property is being animated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that declares whether the property is being animated.","pos":[0,66]}]},{"pos":[5789,6174],"content":"For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value. For more information about precedence and animations, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"For any property that is currently being animated, the source reported by &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.","pos":[0,248],"source":"For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value."},{"content":"For more information about precedence and animations, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[249,385],"source":" For more information about precedence and animations, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[6288,6452],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is animated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is animated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6862,7028],"content":"Gets a value that declares whether this value resulted from a <bpt id=\"p1\">&lt;xref href=\"System.Windows.CoerceValueCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation applied to a dependency property.","needQuote":true,"needEscape":true,"source":"Gets a value that declares whether this value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property."},{"pos":[7041,7776],"content":"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that IsCoerced is `true`.       Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set. Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration. For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.","pos":[0,211]},{"content":"A coerced property that is not at its desired value will report that IsCoerced is <ph id=\"ph1\">`true`</ph>.","pos":[212,301],"source":" A coerced property that is not at its desired value will report that IsCoerced is `true`."},{"content":"Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.","pos":[308,436]},{"content":"Therefore the state of being coerced is reported by this property, rather than by a value of the &lt;xref:System.Windows.BaseValueSource&gt; enumeration.","pos":[437,584],"source":" Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration."},{"content":"For more information about coercion, base values, and precedence, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[585,733],"source":" For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[7890,8159],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value resulted from a <bpt id=\"p2\">&lt;xref href=\"System.Windows.CoerceValueCallback\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> implementation applied to a dependency property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8568,8669],"content":"Gets whether the value was set by the <xref:System.Windows.DependencyObject.SetCurrentValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the value was set by the &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt; method.","pos":[0,101],"source":"Gets whether the value was set by the <xref:System.Windows.DependencyObject.SetCurrentValue*> method."}]},{"pos":[8782,9009],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value was set by the &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt; method; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value was set by the <xref:System.Windows.DependencyObject.SetCurrentValue*> method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9433,9746],"content":"Gets a value that declares whether this value resulted from an evaluated expression. This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that declares whether this value resulted from an evaluated expression.","pos":[0,84]},{"content":"This might be a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supporting a binding, or an internal expression such as those that support the <bpt id=\"p2\">[</bpt>DynamicResource Markup Extension<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[85,313],"source":" This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[9759,10603],"content":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>. The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where IsExpression is `true`. Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.       If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value. That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>. Failed expression evaluations will return `false` for IsExpression.","needQuote":false,"needEscape":true,"nodes":[{"content":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.","pos":[0,184],"source":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>."},{"content":"The &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; is still very relevant for any property where IsExpression is <ph id=\"ph1\">`true`</ph>.","pos":[185,311],"source":" The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where IsExpression is `true`."},{"content":"Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.","pos":[312,481]},{"content":"If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.","pos":[488,688]},{"content":"That source is then reported in &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.","pos":[689,774],"source":" That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>."},{"content":"Failed expression evaluations will return <ph id=\"ph1\">`false`</ph> for IsExpression.","pos":[775,842],"source":" Failed expression evaluations will return `false` for IsExpression."}]},{"pos":[10720,10903],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value came from an evaluated expression; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value came from an evaluated expression; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11510,11611],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances have the same value.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances have the same value."},{"pos":[11623,11783],"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation calls &lt;xref:System.Windows.ValueSource.Equals%2A&gt;, and supports value equality based on all properties of &lt;xref:System.Windows.ValueSource&gt;.","pos":[0,160],"source":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>."}]},{"pos":[11992,12061],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare."},{"pos":[12134,12204],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare."},{"pos":[12263,12483],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are equivalent; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13099,13207],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances do not have the same value.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances do not have the same value."},{"pos":[13219,13403],"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation calls &lt;xref:System.Windows.ValueSource.Equals%2A&gt;, returning its negation, and supports value equality based on all properties of &lt;xref:System.Windows.ValueSource&gt;.","pos":[0,184],"source":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>."}]},{"pos":[13614,13683],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare."},{"pos":[13756,13826],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare."},{"pos":[13885,14109],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are not equivalent; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are not equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.ValueSource\n  id: ValueSource\n  children:\n  - System.Windows.ValueSource.BaseValueSource\n  - System.Windows.ValueSource.Equals(System.Object)\n  - System.Windows.ValueSource.GetHashCode\n  - System.Windows.ValueSource.IsAnimated\n  - System.Windows.ValueSource.IsCoerced\n  - System.Windows.ValueSource.IsCurrent\n  - System.Windows.ValueSource.IsExpression\n  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  langs:\n  - csharp\n  name: ValueSource\n  nameWithType: ValueSource\n  fullName: System.Windows.ValueSource\n  type: Struct\n  summary: Reports the information returned from &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;.\n  remarks: \"Most of the information that ValueSource transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property. This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.  \\n  \\n Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference). This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively. Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.\"\n  syntax:\n    content: public struct ValueSource\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.BaseValueSource\n  id: BaseValueSource\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n  fullName: System.Windows.ValueSource.BaseValueSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value of the <xref href=\"System.Windows.BaseValueSource\"></xref> enumeration, which reports the source that provided the dependency property system with a value.\n  remarks: \"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.  \\n  \\n You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.\"\n  syntax:\n    content: public System.Windows.BaseValueSource BaseValueSource { get; }\n    return:\n      type: System.Windows.BaseValueSource\n      description: A value of the enumeration.\n  overload: System.Windows.ValueSource.BaseValueSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueSource.Equals(Object)\n  fullName: System.Windows.ValueSource.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a value indicating whether this <xref href=\"System.Windows.ValueSource\"></xref> is equal to a specified object.\n  remarks: This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare with this <xref href=\"System.Windows.ValueSource\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided object is equivalent to the current <xref href=\"System.Windows.ValueSource\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueSource.GetHashCode()\n  fullName: System.Windows.ValueSource.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the hash code for this <xref href=\"System.Windows.ValueSource\"></xref>.\n  remarks: This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit unsigned integer hash code.\n  overload: System.Windows.ValueSource.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.IsAnimated\n  id: IsAnimated\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n  fullName: System.Windows.ValueSource.IsAnimated\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether the property is being animated.\n  remarks: For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value. For more information about precedence and animations, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsAnimated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is animated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.IsAnimated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.IsCoerced\n  id: IsCoerced\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n  fullName: System.Windows.ValueSource.IsCoerced\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether this value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property.\n  remarks: \"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that IsCoerced is `true`.  \\n  \\n Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set. Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration. For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool IsCoerced { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.IsCoerced*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.IsCurrent\n  id: IsCurrent\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n  fullName: System.Windows.ValueSource.IsCurrent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets whether the value was set by the <xref:System.Windows.DependencyObject.SetCurrentValue*> method.\n  syntax:\n    content: public bool IsCurrent { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value was set by the <xref:System.Windows.DependencyObject.SetCurrentValue*> method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.IsCurrent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.IsExpression\n  id: IsExpression\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n  fullName: System.Windows.ValueSource.IsExpression\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether this value resulted from an evaluated expression. This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md).\n  remarks: \"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>. The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where IsExpression is `true`. Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.  \\n  \\n If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value. That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>. Failed expression evaluations will return `false` for IsExpression.\"\n  syntax:\n    content: public bool IsExpression { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value came from an evaluated expression; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.IsExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: op_Equality(ValueSource,ValueSource)\n  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)\n  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances have the same value.\n  remarks: This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.\n  syntax:\n    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);\n    parameters:\n    - id: vs1\n      type: System.Windows.ValueSource\n      description: The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    - id: vs2\n      type: System.Windows.ValueSource\n      description: The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: op_Inequality(ValueSource,ValueSource)\n  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)\n  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances do not have the same value.\n  remarks: This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);\n    parameters:\n    - id: vs1\n      type: System.Windows.ValueSource\n      description: The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    - id: vs2\n      type: System.Windows.ValueSource\n      description: The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are not equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ValueSource.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.ValueSource.BaseValueSource\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n  fullName: System.Windows.ValueSource.BaseValueSource\n- uid: System.Windows.BaseValueSource\n  parent: System.Windows\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: BaseValueSource\n  fullName: System.Windows.BaseValueSource\n- uid: System.Windows.ValueSource.Equals(System.Object)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueSource.Equals(Object)\n  fullName: System.Windows.ValueSource.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.ValueSource.GetHashCode\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueSource.GetHashCode()\n  fullName: System.Windows.ValueSource.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.ValueSource.IsAnimated\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n  fullName: System.Windows.ValueSource.IsAnimated\n- uid: System.Windows.ValueSource.IsCoerced\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n  fullName: System.Windows.ValueSource.IsCoerced\n- uid: System.Windows.ValueSource.IsCurrent\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n  fullName: System.Windows.ValueSource.IsCurrent\n- uid: System.Windows.ValueSource.IsExpression\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n  fullName: System.Windows.ValueSource.IsExpression\n- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Equality(ValueSource,ValueSource)\n  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)\n  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)\n- uid: System.Windows.ValueSource\n  parent: System.Windows\n  isExternal: false\n  name: ValueSource\n  nameWithType: ValueSource\n  fullName: System.Windows.ValueSource\n- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Inequality(ValueSource,ValueSource)\n  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)\n  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)\n- uid: System.Windows.ValueSource.BaseValueSource*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n- uid: System.Windows.ValueSource.Equals*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: Equals\n  nameWithType: ValueSource.Equals\n- uid: System.Windows.ValueSource.GetHashCode*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ValueSource.GetHashCode\n- uid: System.Windows.ValueSource.IsAnimated*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n- uid: System.Windows.ValueSource.IsCoerced*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n- uid: System.Windows.ValueSource.IsCurrent*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n- uid: System.Windows.ValueSource.IsExpression*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n- uid: System.Windows.ValueSource.op_Equality*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Equality\n  nameWithType: ValueSource.op_Equality\n- uid: System.Windows.ValueSource.op_Inequality*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ValueSource.op_Inequality\n"}