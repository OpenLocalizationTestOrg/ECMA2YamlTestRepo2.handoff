{"nodes":[{"pos":[3118,3175],"content":"Structure that represents a rotation in three dimensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Structure that represents a rotation in three dimensions.","pos":[0,57]}]},{"pos":[3188,5095],"content":"Quaternions allow you to interpolate between rotation transformations applied to an object, thereby making it easier to compute smooth animations of rotations. A quaternion represents an axis of rotation and a rotation around that axis. It's possible to individually define the axis and angle of rotation of the starting and ending positions of a rotated object ,but the intermediate positions of that object during an animation are computationally uncertain.  By determining a quaternion that represents the original orientation of a 3-D object and one that represents its destination orientation, you can smoothly interpolate between those orientations.       In XAML, the delimiter between the values of a Quaternion can be either a comma or a space.       Some cultures might use the comma character as the decimal delimiter instead of the period character. XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter. You should avoid using the comma character as the decimal delimiter if specifying a Quaternion in XAML, because that will clash with the string type conversion of a Quaternion attribute value into its components.      <a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y,z,w\"/>   -or-   <object property=\"x y z w\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The <xref:System.Windows.Media.Media3D.Quaternion.X%2A> component of this Quaternion structure.       *y*    The <xref:System.Windows.Media.Media3D.Quaternion.Y%2A> component of this Quaternion structure.       *z*    The <xref:System.Windows.Media.Media3D.Quaternion.Z%2A> component of this Quaternion structure.       *w*    The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> component of this Quaternion structure.","needQuote":false,"needEscape":true,"nodes":[{"content":"Quaternions allow you to interpolate between rotation transformations applied to an object, thereby making it easier to compute smooth animations of rotations.","pos":[0,159]},{"content":"A quaternion represents an axis of rotation and a rotation around that axis.","pos":[160,236]},{"content":"It's possible to individually define the axis and angle of rotation of the starting and ending positions of a rotated object ,but the intermediate positions of that object during an animation are computationally uncertain.","pos":[237,459]},{"content":"By determining a quaternion that represents the original orientation of a 3-D object and one that represents its destination orientation, you can smoothly interpolate between those orientations.","pos":[461,655]},{"content":"In XAML, the delimiter between the values of a Quaternion can be either a comma or a space.","pos":[662,753]},{"content":"Some cultures might use the comma character as the decimal delimiter instead of the period character.","pos":[760,861]},{"content":"XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.","pos":[862,1009]},{"content":"You should avoid using the comma character as the decimal delimiter if specifying a Quaternion in XAML, because that will clash with the string type conversion of a Quaternion attribute value into its components.","pos":[1010,1222]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Duration\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"x,y,z,w\"/&gt;   -or-   &lt;object property=\"x y z w\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_MinWidth\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>x<ept id=\"p3\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Quaternion.X%2A&gt; component of this Quaternion structure.","pos":[1228,1545],"source":"<a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y,z,w\"/>   -or-   <object property=\"x y z w\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The <xref:System.Windows.Media.Media3D.Quaternion.X%2A> component of this Quaternion structure."},{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Quaternion.Y%2A&gt; component of this Quaternion structure.","pos":[1552,1654],"source":"*y*    The <xref:System.Windows.Media.Media3D.Quaternion.Y%2A> component of this Quaternion structure."},{"content":"<bpt id=\"p1\">*</bpt>z<ept id=\"p1\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Quaternion.Z%2A&gt; component of this Quaternion structure.","pos":[1661,1763],"source":"*z*    The <xref:System.Windows.Media.Media3D.Quaternion.Z%2A> component of this Quaternion structure."},{"content":"<bpt id=\"p1\">*</bpt>w<ept id=\"p1\">*</ept>    The &lt;xref:System.Windows.Media.Media3D.Quaternion.W%2A&gt; component of this Quaternion structure.","pos":[1770,1872],"source":"*w*    The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> component of this Quaternion structure."}]},{"pos":[6525,6630],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure."},{"pos":[6642,6751],"content":"The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> property of the quaternion is computed automatically.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Media.Media3D.Quaternion.W%2A&gt; property of the quaternion is computed automatically.","pos":[0,109],"source":"The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> property of the quaternion is computed automatically."}]},{"pos":[6982,7078],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Vector3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the axis of rotation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> that represents the axis of rotation."},{"pos":[7149,7203],"content":"Angle to rotate around the specified axis, in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Angle to rotate around the specified axis, in degrees.","pos":[0,54]}]},{"pos":[7869,7974],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure."},{"pos":[7987,8282],"content":"For the axis (x, y, z) and angle of rotation theta, the <ph id=\"ph1\">`w`</ph> value for the quaternion is:       w = cos(theta/2)       Note that if you use the &lt;xref:System.Windows.Media.Media3D.Vector3D&gt; constructor, the fourth parameter is the angle, in degrees, and the w calculation is performed for you.","needQuote":false,"needEscape":true,"source":"For the axis (x, y, z) and angle of rotation theta, the `w` value for the quaternion is:       w = cos(theta/2)       Note that if you use the <xref:System.Windows.Media.Media3D.Vector3D> constructor, the fourth parameter is the angle, in degrees, and the w calculation is performed for you."},{"pos":[8440,8533],"content":"Value of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>'s X coordinate.","needQuote":true,"needEscape":true,"source":"Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s X coordinate."},{"pos":[8591,8684],"content":"Value of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>'s Y coordinate.","needQuote":true,"needEscape":true,"source":"Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s Y coordinate."},{"pos":[8742,8835],"content":"Value of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>'s Z coordinate.","needQuote":true,"needEscape":true,"source":"Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s Z coordinate."},{"pos":[8893,8986],"content":"Value of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>'s W coordinate.","needQuote":true,"needEscape":true,"source":"Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s W coordinate."},{"pos":[9650,9681],"content":"Adds the specified quaternions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified quaternions.","pos":[0,31]}]},{"pos":[9960,9984],"content":"First quaternion to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"First quaternion to add.","pos":[0,24]}]},{"pos":[10072,10097],"content":"Second quaternion to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second quaternion to add.","pos":[0,25]}]},{"pos":[10181,10223],"content":"Quaternion that is the result of addition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion that is the result of addition.","pos":[0,42]}]},{"pos":[10666,10706],"content":"Gets the quaternion's angle, in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the quaternion's angle, in degrees.","pos":[0,40]}]},{"pos":[10816,10874],"content":"Double that represents the quaternion's angle, in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Double that represents the quaternion's angle, in degrees.","pos":[0,58]}]},{"pos":[11314,11341],"content":"Gets the quaternion's axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the quaternion's axis.","pos":[0,27]}]},{"pos":[11505,11602],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Vector3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the quaternion's axis.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> that represents the quaternion's axis."},{"pos":[12070,12111],"content":"Replaces a quaternion with its conjugate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces a quaternion with its conjugate.","pos":[0,41]}]},{"pos":[12685,12782],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality."},{"pos":[12794,13099],"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Windows.Media.Media3D.Quaternion&gt; components are described using &lt;xref:System.Double&gt; values.","pos":[0,106],"source":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Media.Media3D.Quaternion&gt; values that are logically equal might fail.","pos":[107,305],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail."}]}]},{"pos":[13236,13265],"content":"Object with which to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"Object with which to compare.","pos":[0,29]}]},{"pos":[13324,13559],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are exactly equal, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[14126,14223],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality."},{"pos":[14235,14540],"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Windows.Media.Media3D.Quaternion&gt; components are described using &lt;xref:System.Double&gt; values.","pos":[0,106],"source":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Media.Media3D.Quaternion&gt; values that are logically equal might fail.","pos":[107,305],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail."}]}]},{"pos":[14735,14768],"content":"Quaternion with which to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion with which to compare.","pos":[0,33]}]},{"pos":[14827,15062],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are exactly equal, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[15742,15839],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality."},{"pos":[15851,16156],"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Windows.Media.Media3D.Quaternion&gt; components are described using &lt;xref:System.Double&gt; values.","pos":[0,106],"source":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Media.Media3D.Quaternion&gt; values that are logically equal might fail.","pos":[107,305],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail."}]}]},{"pos":[16423,16501],"content":"First <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"First <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> to compare."},{"pos":[16595,16674],"content":"Second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"Second <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> to compare."},{"pos":[16733,16968],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are exactly equal, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[17448,17539],"content":"Returns the hash code for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>."},{"pos":[17674,17789],"content":"An integer type that represents the hash code for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An integer type that represents the hash code for the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>."},{"pos":[18255,18283],"content":"Gets the Identity quaternion","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Identity quaternion","pos":[0,28]}]},{"pos":[18462,18486],"content":"The Identity quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Identity quaternion.","pos":[0,24]}]},{"pos":[18943,18993],"content":"Replaces the specified quaternion with its inverse","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the specified quaternion with its inverse","pos":[0,50]}]},{"pos":[19529,19664],"content":"Gets a value that indicates whether the specified quaternion is an <xref:System.Windows.Media.Media3D.Quaternion.Identity*> quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified quaternion is an &lt;xref:System.Windows.Media.Media3D.Quaternion.Identity*&gt; quaternion.","pos":[0,135],"source":"Gets a value that indicates whether the specified quaternion is an <xref:System.Windows.Media.Media3D.Quaternion.Identity*> quaternion."}]},{"pos":[19778,20006],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the quaternion is the &lt;xref:System.Windows.Media.Media3D.Quaternion.Identity*&gt; quaternion, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the quaternion is the <xref:System.Windows.Media.Media3D.Quaternion.Identity*> quaternion, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[20491,20556],"content":"Gets a value that indicates whether the quaternion is normalized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the quaternion is normalized.","pos":[0,65]}]},{"pos":[20672,20839],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the quaternion is normalized, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the quaternion is normalized, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[21535,21628],"content":"Multiplies the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Multiplies the specified <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values."},{"pos":[21912,21941],"content":"First quaternion to multiply.","needQuote":true,"needEscape":true,"nodes":[{"content":"First quaternion to multiply.","pos":[0,29]}]},{"pos":[22029,22059],"content":"Second quaternion to multiply.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second quaternion to multiply.","pos":[0,30]}]},{"pos":[22143,22191],"content":"Quaternion that is the result of multiplication.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion that is the result of multiplication.","pos":[0,48]}]},{"pos":[22663,22695],"content":"Returns a normalized quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a normalized quaternion.","pos":[0,32]}]},{"pos":[22707,22805],"content":"Throws <xref:System.InvalidOperationException> if the quaternion is zero and cannot be normalized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws &lt;xref:System.InvalidOperationException&gt; if the quaternion is zero and cannot be normalized.","pos":[0,98],"source":"Throws <xref:System.InvalidOperationException> if the quaternion is zero and cannot be normalized."}]},{"pos":[23583,23670],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values."},{"pos":[23957,23981],"content":"First quaternion to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"First quaternion to add.","pos":[0,24]}]},{"pos":[24069,24094],"content":"Second quaternion to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second quaternion to add.","pos":[0,25]}]},{"pos":[24178,24295],"content":"Quaternion that is the sum of the two specified  <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Quaternion that is the sum of the two specified  <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values."},{"pos":[25007,25110],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for exact equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for exact equality."},{"pos":[25122,25427],"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Windows.Media.Media3D.Quaternion&gt; components are described using &lt;xref:System.Double&gt; values.","pos":[0,106],"source":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Media.Media3D.Quaternion&gt; values that are logically equal might fail.","pos":[107,305],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail."}]}]},{"pos":[25699,25727],"content":"First Quaternion to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"First Quaternion to compare.","pos":[0,28]}]},{"pos":[25821,25850],"content":"Second Quaternion to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second Quaternion to compare.","pos":[0,29]}]},{"pos":[25909,26144],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are exactly equal, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[26866,26971],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for exact inequality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for exact inequality."},{"pos":[26983,27288],"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Windows.Media.Media3D.Quaternion&gt; components are described using &lt;xref:System.Double&gt; values.","pos":[0,106],"source":"<xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Media.Media3D.Quaternion&gt; values that are logically equal might fail.","pos":[107,305],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail."}]}]},{"pos":[27562,27590],"content":"First quaternion to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"First quaternion to compare.","pos":[0,28]}]},{"pos":[27684,27713],"content":"Second quaternion to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second quaternion to compare.","pos":[0,29]}]},{"pos":[27772,28007],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are exactly equal, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[28721,28768],"content":"Multiplies the specified quaternion by another.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplies the specified quaternion by another.","pos":[0,47]}]},{"pos":[29055,29072],"content":"First quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"First quaternion.","pos":[0,17]}]},{"pos":[29160,29178],"content":"Second quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second quaternion.","pos":[0,18]}]},{"pos":[29262,29311],"content":"Quaternion that is the product of multiplication.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion that is the product of multiplication.","pos":[0,49]}]},{"pos":[30038,30084],"content":"Subtracts a specified quaternion from another.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts a specified quaternion from another.","pos":[0,46]}]},{"pos":[30374,30408],"content":"Quaternion from which to subtract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion from which to subtract.","pos":[0,34]}]},{"pos":[30496,30545],"content":"Quaternion to subtract from the first quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion to subtract from the first quaternion.","pos":[0,49]}]},{"pos":[30629,30674],"content":"Quaternion that is the result of subtraction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion that is the result of subtraction.","pos":[0,45]}]},{"pos":[31180,31370],"content":"Converts a string representation of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into the equivalent <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Converts a string representation of a <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> into the equivalent <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure."},{"pos":[31839,31929],"content":"A string representation of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string representation of a <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>."},{"pos":[32013,32100],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represented by the string.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> represented by the string."},{"pos":[32823,32898],"content":"Interpolates between two orientations using spherical linear interpolation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Interpolates between two orientations using spherical linear interpolation.","pos":[0,75]}]},{"pos":[32910,33075],"content":"Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.","pos":[0,165]}]},{"pos":[33363,33465],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the starting orientation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the starting orientation."},{"pos":[33550,33650],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the ending orientation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the ending orientation."},{"pos":[33708,33734],"content":"Interpolation coefficient.","needQuote":true,"needEscape":true,"nodes":[{"content":"Interpolation coefficient.","pos":[0,26]}]},{"pos":[33818,33944],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the orientation resulting from the interpolation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the orientation resulting from the interpolation."},{"pos":[34721,34881],"content":"Interpolates between orientations, represented as <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures, using spherical linear interpolation.","needQuote":true,"needEscape":true,"source":"Interpolates between orientations, represented as <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structures, using spherical linear interpolation."},{"pos":[34893,35058],"content":"Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.","pos":[0,165]}]},{"pos":[35368,35470],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the starting orientation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the starting orientation."},{"pos":[35555,35655],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the ending orientation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the ending orientation."},{"pos":[35713,35739],"content":"Interpolation coefficient.","needQuote":true,"needEscape":true,"nodes":[{"content":"Interpolation coefficient.","pos":[0,26]}]},{"pos":[35812,35942],"content":"Boolean that indicates whether to compute quaternions that constitute the shortest possible arc on a four-dimensional unit sphere.","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean that indicates whether to compute quaternions that constitute the shortest possible arc on a four-dimensional unit sphere.","pos":[0,130]}]},{"pos":[36026,36152],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Media3D.Quaternion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the orientation resulting from the interpolation.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the orientation resulting from the interpolation."},{"pos":[36841,36877],"content":"Subtracts a Quaternion from another.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtracts a Quaternion from another.","pos":[0,36]}]},{"pos":[37161,37195],"content":"Quaternion from which to subtract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion from which to subtract.","pos":[0,34]}]},{"pos":[37283,37332],"content":"Quaternion to subtract from the first quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion to subtract from the first quaternion.","pos":[0,49]}]},{"pos":[37416,37461],"content":"Quaternion that is the result of subtraction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quaternion that is the result of subtraction.","pos":[0,45]}]},{"pos":[38184,38424],"content":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.IFormattable.ToString*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,164],"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.IFormattable.ToString*&gt;.","pos":[165,240],"source":" For a description of this member, see <xref:System.IFormattable.ToString*>."}]},{"pos":[38599,38824],"content":"The string specifying the format to use.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The string specifying the format to use.","pos":[0,40]},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the default format defined for the type of the &lt;xref:System.IFormattable&gt; implementation.","pos":[47,215],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation."}]},{"pos":[38900,39206],"content":"The <xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"></xref> to use to format the value.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to obtain the numeric format information from the current locale setting of the operating system.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use to format the value.","pos":[0,114],"source":"The <xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"></xref> to use to format the value."},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to obtain the numeric format information from the current locale setting of the operating system.","pos":[121,290],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to obtain the numeric format information from the current locale setting of the operating system."}]},{"pos":[39265,39343],"content":"A string containing the value of the current instance in the specified format.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the value of the current instance in the specified format.","pos":[0,78]}]},{"pos":[39830,39876],"content":"Creates a string representation of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a string representation of the object.","pos":[0,46]}]},{"pos":[40012,40048],"content":"String representation of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"String representation of the object.","pos":[0,36]}]},{"pos":[40608,40654],"content":"Creates a string representation of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a string representation of the object.","pos":[0,46]}]},{"pos":[40818,40858],"content":"Culture-specific formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture-specific formatting information.","pos":[0,40]}]},{"pos":[40916,40952],"content":"String representation of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"String representation of the object.","pos":[0,36]}]},{"pos":[41380,41419],"content":"Gets the W component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the W component of the quaternion.","pos":[0,39]}]},{"pos":[41431,41454],"content":"The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 0.","pos":[0,23]}]},{"pos":[41897,41931],"content":"The W component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The W component of the quaternion.","pos":[0,34]}]},{"pos":[42352,42391],"content":"Gets the X component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the X component of the quaternion.","pos":[0,39]}]},{"pos":[42403,42426],"content":"The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 0.","pos":[0,23]}]},{"pos":[42869,42903],"content":"The X component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X component of the quaternion.","pos":[0,34]}]},{"pos":[43324,43363],"content":"Gets the Y component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Y component of the quaternion.","pos":[0,39]}]},{"pos":[43375,43398],"content":"The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 0.","pos":[0,23]}]},{"pos":[43841,43875],"content":"The Y component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y component of the quaternion.","pos":[0,34]}]},{"pos":[44296,44335],"content":"Gets the Z component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Z component of the quaternion.","pos":[0,39]}]},{"pos":[44347,44370],"content":"The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 0.","pos":[0,23]}]},{"pos":[44813,44847],"content":"The Z component of the quaternion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z component of the quaternion.","pos":[0,34]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Media3D.Quaternion\n  id: Quaternion\n  children:\n  - System.Windows.Media.Media3D.Quaternion.#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)\n  - System.Windows.Media.Media3D.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Quaternion.Add(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.Angle\n  - System.Windows.Media.Media3D.Quaternion.Axis\n  - System.Windows.Media.Media3D.Quaternion.Conjugate\n  - System.Windows.Media.Media3D.Quaternion.Equals(System.Object)\n  - System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.GetHashCode\n  - System.Windows.Media.Media3D.Quaternion.Identity\n  - System.Windows.Media.Media3D.Quaternion.Invert\n  - System.Windows.Media.Media3D.Quaternion.IsIdentity\n  - System.Windows.Media.Media3D.Quaternion.IsNormalized\n  - System.Windows.Media.Media3D.Quaternion.Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.Normalize\n  - System.Windows.Media.Media3D.Quaternion.op_Addition(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.op_Equality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.op_Inequality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.op_Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.op_Subtraction(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.Parse(System.String)\n  - System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double)\n  - System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double,System.Boolean)\n  - System.Windows.Media.Media3D.Quaternion.Subtract(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  - System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Media3D.Quaternion.ToString\n  - System.Windows.Media.Media3D.Quaternion.ToString(System.IFormatProvider)\n  - System.Windows.Media.Media3D.Quaternion.W\n  - System.Windows.Media.Media3D.Quaternion.X\n  - System.Windows.Media.Media3D.Quaternion.Y\n  - System.Windows.Media.Media3D.Quaternion.Z\n  langs:\n  - csharp\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Windows.Media.Media3D.Quaternion\n  type: Struct\n  summary: Structure that represents a rotation in three dimensions.\n  remarks: \"Quaternions allow you to interpolate between rotation transformations applied to an object, thereby making it easier to compute smooth animations of rotations. A quaternion represents an axis of rotation and a rotation around that axis. It's possible to individually define the axis and angle of rotation of the starting and ending positions of a rotated object ,but the intermediate positions of that object during an animation are computationally uncertain.  By determining a quaternion that represents the original orientation of a 3-D object and one that represents its destination orientation, you can smoothly interpolate between those orientations.  \\n  \\n In XAML, the delimiter between the values of a Quaternion can be either a comma or a space.  \\n  \\n Some cultures might use the comma character as the decimal delimiter instead of the period character. XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter. You should avoid using the comma character as the decimal delimiter if specifying a Quaternion in XAML, because that will clash with the string type conversion of a Quaternion attribute value into its components.  \\n  \\n<a name=\\\"xamlAttributeUsage_Duration\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"x,y,z,w\\\"/>  \\n-or-  \\n<object property=\\\"x y z w\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_MinWidth\\\"></a>   \\n## XAML Values  \\n *x*  \\n The <xref:System.Windows.Media.Media3D.Quaternion.X%2A> component of this Quaternion structure.  \\n  \\n *y*  \\n The <xref:System.Windows.Media.Media3D.Quaternion.Y%2A> component of this Quaternion structure.  \\n  \\n *z*  \\n The <xref:System.Windows.Media.Media3D.Quaternion.Z%2A> component of this Quaternion structure.  \\n  \\n *w*  \\n The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> component of this Quaternion structure.\"\n  example:\n  - \"[!code-xml[animation3dgallery_snip#QuaternionAnimationExampleInline2](~/add/codesnippet/xaml/Animation3DGallery/QuaternionAnimationExample.xaml#quaternionanimationexampleinline2)]  \\n  \\n [!code-cs[matrixtransform3dview#MatrixTransform3DView3DN4](~/add/codesnippet/csharp/MatrixTransform3DView/Window1.xaml.cs#matrixtransform3dview3dn4)]\\n [!code-vb[matrixtransform3dview#MatrixTransform3DView3DN4](~/add/codesnippet/visualbasic/matrixtransform3dview/window1.xaml.vb#matrixtransform3dview3dn4)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Media3D.QuaternionConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Media3D.Converters.QuaternionValueSerializer))]\n\n      public struct Quaternion : IFormattable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)\n  id: '#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)'\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Quaternion(Vector3D,Double)\n  nameWithType: Quaternion.Quaternion(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Quaternion(Vector3D,Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure.\n  remarks: The <xref:System.Windows.Media.Media3D.Quaternion.W%2A> property of the quaternion is computed automatically.\n  syntax:\n    content: public Quaternion (System.Windows.Media.Media3D.Vector3D axisOfRotation, double angleInDegrees);\n    parameters:\n    - id: axisOfRotation\n      type: System.Windows.Media.Media3D.Vector3D\n      description: <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> that represents the axis of rotation.\n    - id: angleInDegrees\n      type: System.Double\n      description: Angle to rotate around the specified axis, in degrees.\n  overload: System.Windows.Media.Media3D.Quaternion.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Quaternion(Double,Double,Double,Double)\n  nameWithType: Quaternion.Quaternion(Double,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Quaternion(Double,Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure.\n  remarks: \"For the axis (x, y, z) and angle of rotation theta, the `w` value for the quaternion is:  \\n  \\n w = cos(theta/2)  \\n  \\n Note that if you use the <xref:System.Windows.Media.Media3D.Vector3D> constructor, the fourth parameter is the angle, in degrees, and the w calculation is performed for you.\"\n  syntax:\n    content: public Quaternion (double x, double y, double z, double w);\n    parameters:\n    - id: x\n      type: System.Double\n      description: Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s X coordinate.\n    - id: y\n      type: System.Double\n      description: Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s Y coordinate.\n    - id: z\n      type: System.Double\n      description: Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s Z coordinate.\n    - id: w\n      type: System.Double\n      description: Value of the new <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>'s W coordinate.\n  overload: System.Windows.Media.Media3D.Quaternion.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Add(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: Add(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Add(Quaternion,Quaternion)\n  nameWithType: Quaternion.Add(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Add(Quaternion,Quaternion)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Adds the specified quaternions.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Add (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First quaternion to add.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second quaternion to add.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the result of addition.\n  overload: System.Windows.Media.Media3D.Quaternion.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Angle\n  id: Angle\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Angle\n  nameWithType: Quaternion.Angle\n  fullName: System.Windows.Media.Media3D.Quaternion.Angle\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the quaternion's angle, in degrees.\n  syntax:\n    content: public double Angle { get; }\n    return:\n      type: System.Double\n      description: Double that represents the quaternion's angle, in degrees.\n  overload: System.Windows.Media.Media3D.Quaternion.Angle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Axis\n  id: Axis\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Axis\n  nameWithType: Quaternion.Axis\n  fullName: System.Windows.Media.Media3D.Quaternion.Axis\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the quaternion's axis.\n  syntax:\n    content: public System.Windows.Media.Media3D.Vector3D Axis { get; }\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref> that represents the quaternion's axis.\n  overload: System.Windows.Media.Media3D.Quaternion.Axis*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Conjugate\n  id: Conjugate\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Conjugate()\n  nameWithType: Quaternion.Conjugate()\n  fullName: System.Windows.Media.Media3D.Quaternion.Conjugate()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Replaces a quaternion with its conjugate.\n  syntax:\n    content: public void Conjugate ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.Quaternion.Conjugate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Quaternion.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality.\n  remarks: <xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Object with which to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion)\n  id: Equals(System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Equals(Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Quaternion)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality.\n  remarks: <xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.\n  syntax:\n    content: public bool Equals (System.Windows.Media.Media3D.Quaternion value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion with which to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: Equals(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Equals(Quaternion,Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Quaternion,Quaternion)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for equality.\n  remarks: <xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.\n  syntax:\n    content: public static bool Equals (System.Windows.Media.Media3D.Quaternion quaternion1, System.Windows.Media.Media3D.Quaternion quaternion2);\n    parameters:\n    - id: quaternion1\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> to compare.\n    - id: quaternion2\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Quaternion.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Quaternion.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Returns the hash code for the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer type that represents the hash code for the <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>.\n  overload: System.Windows.Media.Media3D.Quaternion.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Identity\n  id: Identity\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: Quaternion.Identity\n  fullName: System.Windows.Media.Media3D.Quaternion.Identity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the Identity quaternion\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Identity { get; }\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: The Identity quaternion.\n  overload: System.Windows.Media.Media3D.Quaternion.Identity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Invert\n  id: Invert\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Invert()\n  nameWithType: Quaternion.Invert()\n  fullName: System.Windows.Media.Media3D.Quaternion.Invert()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Replaces the specified quaternion with its inverse\n  syntax:\n    content: public void Invert ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.Quaternion.Invert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.IsIdentity\n  id: IsIdentity\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n  fullName: System.Windows.Media.Media3D.Quaternion.IsIdentity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets a value that indicates whether the specified quaternion is an <xref:System.Windows.Media.Media3D.Quaternion.Identity*> quaternion.\n  syntax:\n    content: public bool IsIdentity { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the quaternion is the <xref:System.Windows.Media.Media3D.Quaternion.Identity*> quaternion, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.IsIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.IsNormalized\n  id: IsNormalized\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: IsNormalized\n  nameWithType: Quaternion.IsNormalized\n  fullName: System.Windows.Media.Media3D.Quaternion.IsNormalized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets a value that indicates whether the quaternion is normalized.\n  syntax:\n    content: public bool IsNormalized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the quaternion is normalized, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.IsNormalized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Multiply(Quaternion,Quaternion)\n  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Multiply(Quaternion,Quaternion)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Multiply (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First quaternion to multiply.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second quaternion to multiply.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the result of multiplication.\n  overload: System.Windows.Media.Media3D.Quaternion.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Normalize\n  id: Normalize\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Normalize()\n  nameWithType: Quaternion.Normalize()\n  fullName: System.Windows.Media.Media3D.Quaternion.Normalize()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Returns a normalized quaternion.\n  remarks: Throws <xref:System.InvalidOperationException> if the quaternion is zero and cannot be normalized.\n  syntax:\n    content: public void Normalize ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.Quaternion.Normalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.op_Addition(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: op_Addition(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: op_Addition(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Addition(Quaternion,Quaternion)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Adds the specified <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion op_Addition (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First quaternion to add.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second quaternion to add.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the sum of the two specified  <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> values.\n  overload: System.Windows.Media.Media3D.Quaternion.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.op_Equality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: op_Equality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: op_Equality(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Equality(Quaternion,Quaternion)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for exact equality.\n  remarks: <xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.Media3D.Quaternion quaternion1, System.Windows.Media.Media3D.Quaternion quaternion2);\n    parameters:\n    - id: quaternion1\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First Quaternion to compare.\n    - id: quaternion2\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second Quaternion to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.op_Inequality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: op_Inequality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: op_Inequality(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Inequality(Quaternion,Quaternion)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Compares two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances for exact inequality.\n  remarks: <xref:System.Windows.Media.Media3D.Quaternion> components are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Media.Media3D.Quaternion> values that are logically equal might fail.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.Media3D.Quaternion quaternion1, System.Windows.Media.Media3D.Quaternion quaternion2);\n    parameters:\n    - id: quaternion1\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First quaternion to compare.\n    - id: quaternion2\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second quaternion to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> instances are exactly equal, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Windows.Media.Media3D.Quaternion.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.op_Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: op_Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: op_Multiply(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Multiply(Quaternion,Quaternion)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Multiplies the specified quaternion by another.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion op_Multiply (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: First quaternion.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Second quaternion.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the product of multiplication.\n  overload: System.Windows.Media.Media3D.Quaternion.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.op_Subtraction(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: op_Subtraction(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: op_Subtraction(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Subtraction(Quaternion,Quaternion)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a specified quaternion from another.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion op_Subtraction (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion from which to subtract.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion to subtract from the first quaternion.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the result of subtraction.\n  overload: System.Windows.Media.Media3D.Quaternion.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Quaternion.Parse(String)\n  fullName: System.Windows.Media.Media3D.Quaternion.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Converts a string representation of a <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> into the equivalent <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structure.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[quaternionview#QuaternionView3DN3](~/add/codesnippet/visualbasic/quaternionview/window1.xaml.vb#quaternionview3dn3)]\n     [!code-cs[quaternionview#QuaternionView3DN3](~/add/codesnippet/csharp/QuaternionView/Window1.xaml.cs#quaternionview3dn3)]\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: A string representation of a <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref>.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> represented by the string.\n  overload: System.Windows.Media.Media3D.Quaternion.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double)\n  id: Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Slerp(Quaternion,Quaternion,Double)\n  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Slerp(Quaternion,Quaternion,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Interpolates between two orientations using spherical linear interpolation.\n  remarks: Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Slerp (System.Windows.Media.Media3D.Quaternion from, System.Windows.Media.Media3D.Quaternion to, double t);\n    parameters:\n    - id: from\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the starting orientation.\n    - id: to\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the ending orientation.\n    - id: t\n      type: System.Double\n      description: Interpolation coefficient.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the orientation resulting from the interpolation.\n  overload: System.Windows.Media.Media3D.Quaternion.Slerp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double,System.Boolean)\n  id: Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double,System.Boolean)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Slerp(Quaternion,Quaternion,Double,Boolean)\n  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Double,Boolean)\n  fullName: System.Windows.Media.Media3D.Quaternion.Slerp(Quaternion,Quaternion,Double,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Interpolates between orientations, represented as <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> structures, using spherical linear interpolation.\n  remarks: Spherical linear interpolation is useful for animating a three-dimensional models because it provides smooth transitions between different orientations of the model.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Slerp (System.Windows.Media.Media3D.Quaternion from, System.Windows.Media.Media3D.Quaternion to, double t, bool useShortestPath);\n    parameters:\n    - id: from\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the starting orientation.\n    - id: to\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the ending orientation.\n    - id: t\n      type: System.Double\n      description: Interpolation coefficient.\n    - id: useShortestPath\n      type: System.Boolean\n      description: Boolean that indicates whether to compute quaternions that constitute the shortest possible arc on a four-dimensional unit sphere.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: <xref href=\"System.Windows.Media.Media3D.Quaternion\"></xref> that represents the orientation resulting from the interpolation.\n  overload: System.Windows.Media.Media3D.Quaternion.Slerp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Subtract(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  id: Subtract(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Subtract(Quaternion,Quaternion)\n  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Subtract(Quaternion,Quaternion)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Subtracts a Quaternion from another.\n  syntax:\n    content: public static System.Windows.Media.Media3D.Quaternion Subtract (System.Windows.Media.Media3D.Quaternion left, System.Windows.Media.Media3D.Quaternion right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion from which to subtract.\n    - id: right\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion to subtract from the first quaternion.\n    return:\n      type: System.Windows.Media.Media3D.Quaternion\n      description: Quaternion that is the result of subtraction.\n  overload: System.Windows.Media.Media3D.Quaternion.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Quaternion.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Quaternion.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.IFormattable.ToString*>.\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: \"The string specifying the format to use.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation.\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"The <xref uid=\\\"langword_csharp_IFormatProvider\\\" name=\\\"IFormatProvider\\\" href=\\\"\\\"></xref> to use to format the value.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to obtain the numeric format information from the current locale setting of the operating system.\"\n    return:\n      type: System.String\n      description: A string containing the value of the current instance in the specified format.\n  overload: System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.ToString\n  id: ToString\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Quaternion.ToString()\n  fullName: System.Windows.Media.Media3D.Quaternion.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a string representation of the object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: String representation of the object.\n  overload: System.Windows.Media.Media3D.Quaternion.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Quaternion.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Quaternion.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a string representation of the object.\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Culture-specific formatting information.\n    return:\n      type: System.String\n      description: String representation of the object.\n  overload: System.Windows.Media.Media3D.Quaternion.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.W\n  id: W\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: W\n  nameWithType: Quaternion.W\n  fullName: System.Windows.Media.Media3D.Quaternion.W\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the W component of the quaternion.\n  remarks: The default value is 0.\n  example:\n  - >-\n    [!code-cs[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/csharp/MatrixTransform3DView/Window1.xaml.cs#matrixtransform3dview3dn3)]\n     [!code-vb[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/visualbasic/matrixtransform3dview/window1.xaml.vb#matrixtransform3dview3dn3)]\n  syntax:\n    content: public double W { get; set; }\n    return:\n      type: System.Double\n      description: The W component of the quaternion.\n  overload: System.Windows.Media.Media3D.Quaternion.W*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.X\n  id: X\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: X\n  nameWithType: Quaternion.X\n  fullName: System.Windows.Media.Media3D.Quaternion.X\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the X component of the quaternion.\n  remarks: The default value is 0.\n  example:\n  - >-\n    [!code-cs[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/csharp/MatrixTransform3DView/Window1.xaml.cs#matrixtransform3dview3dn3)]\n     [!code-vb[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/visualbasic/matrixtransform3dview/window1.xaml.vb#matrixtransform3dview3dn3)]\n  syntax:\n    content: public double X { get; set; }\n    return:\n      type: System.Double\n      description: The X component of the quaternion.\n  overload: System.Windows.Media.Media3D.Quaternion.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Y\n  id: Y\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Quaternion.Y\n  fullName: System.Windows.Media.Media3D.Quaternion.Y\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the Y component of the quaternion.\n  remarks: The default value is 0.\n  example:\n  - >-\n    [!code-cs[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/csharp/MatrixTransform3DView/Window1.xaml.cs#matrixtransform3dview3dn3)]\n     [!code-vb[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/visualbasic/matrixtransform3dview/window1.xaml.vb#matrixtransform3dview3dn3)]\n  syntax:\n    content: public double Y { get; set; }\n    return:\n      type: System.Double\n      description: The Y component of the quaternion.\n  overload: System.Windows.Media.Media3D.Quaternion.Y*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Media3D.Quaternion.Z\n  id: Z\n  parent: System.Windows.Media.Media3D.Quaternion\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Quaternion.Z\n  fullName: System.Windows.Media.Media3D.Quaternion.Z\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Gets the Z component of the quaternion.\n  remarks: The default value is 0.\n  example:\n  - >-\n    [!code-cs[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/csharp/MatrixTransform3DView/Window1.xaml.cs#matrixtransform3dview3dn3)]\n     [!code-vb[matrixtransform3dview#MatrixTransform3DView3DN3](~/add/codesnippet/visualbasic/matrixtransform3dview/window1.xaml.vb#matrixtransform3dview3dn3)]\n  syntax:\n    content: public double Z { get; set; }\n    return:\n      type: System.Double\n      description: The Z component of the quaternion.\n  overload: System.Windows.Media.Media3D.Quaternion.Z*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.Media3D.Quaternion.#ctor(System.Windows.Media.Media3D.Vector3D,System.Double)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Quaternion(Vector3D,Double)\n  nameWithType: Quaternion.Quaternion(Vector3D,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Quaternion(Vector3D,Double)\n- uid: System.Windows.Media.Media3D.Vector3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Quaternion(Double,Double,Double,Double)\n  nameWithType: Quaternion.Quaternion(Double,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Quaternion(Double,Double,Double,Double)\n- uid: System.Windows.Media.Media3D.Quaternion.Add(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Add(Quaternion,Quaternion)\n  nameWithType: Quaternion.Add(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Add(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Windows.Media.Media3D.Quaternion\n- uid: System.Windows.Media.Media3D.Quaternion.Angle\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Angle\n  nameWithType: Quaternion.Angle\n  fullName: System.Windows.Media.Media3D.Quaternion.Angle\n- uid: System.Windows.Media.Media3D.Quaternion.Axis\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Axis\n  nameWithType: Quaternion.Axis\n  fullName: System.Windows.Media.Media3D.Quaternion.Axis\n- uid: System.Windows.Media.Media3D.Quaternion.Conjugate\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Conjugate()\n  nameWithType: Quaternion.Conjugate()\n  fullName: System.Windows.Media.Media3D.Quaternion.Conjugate()\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Quaternion.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Equals(Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.Equals(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Equals(Quaternion,Quaternion)\n  nameWithType: Quaternion.Equals(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Equals(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.GetHashCode\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Quaternion.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Quaternion.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Media3D.Quaternion.Identity\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Identity\n  nameWithType: Quaternion.Identity\n  fullName: System.Windows.Media.Media3D.Quaternion.Identity\n- uid: System.Windows.Media.Media3D.Quaternion.Invert\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Invert()\n  nameWithType: Quaternion.Invert()\n  fullName: System.Windows.Media.Media3D.Quaternion.Invert()\n- uid: System.Windows.Media.Media3D.Quaternion.IsIdentity\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n  fullName: System.Windows.Media.Media3D.Quaternion.IsIdentity\n- uid: System.Windows.Media.Media3D.Quaternion.IsNormalized\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: IsNormalized\n  nameWithType: Quaternion.IsNormalized\n  fullName: System.Windows.Media.Media3D.Quaternion.IsNormalized\n- uid: System.Windows.Media.Media3D.Quaternion.Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Multiply(Quaternion,Quaternion)\n  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Multiply(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.Normalize\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Normalize()\n  nameWithType: Quaternion.Normalize()\n  fullName: System.Windows.Media.Media3D.Quaternion.Normalize()\n- uid: System.Windows.Media.Media3D.Quaternion.op_Addition(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Addition(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Addition(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.op_Equality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Equality(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Equality(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.op_Inequality(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Inequality(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Inequality(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.op_Multiply(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Multiply(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Multiply(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.op_Subtraction(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Subtraction(Quaternion,Quaternion)\n  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.op_Subtraction(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.Parse(System.String)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Quaternion.Parse(String)\n  fullName: System.Windows.Media.Media3D.Quaternion.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Slerp(Quaternion,Quaternion,Double)\n  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Double)\n  fullName: System.Windows.Media.Media3D.Quaternion.Slerp(Quaternion,Quaternion,Double)\n- uid: System.Windows.Media.Media3D.Quaternion.Slerp(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Double,System.Boolean)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Slerp(Quaternion,Quaternion,Double,Boolean)\n  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Double,Boolean)\n  fullName: System.Windows.Media.Media3D.Quaternion.Slerp(Quaternion,Quaternion,Double,Boolean)\n- uid: System.Windows.Media.Media3D.Quaternion.Subtract(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Subtract(Quaternion,Quaternion)\n  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)\n  fullName: System.Windows.Media.Media3D.Quaternion.Subtract(Quaternion,Quaternion)\n- uid: System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Quaternion.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Quaternion.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Media3D.Quaternion.ToString\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: ToString()\n  nameWithType: Quaternion.ToString()\n  fullName: System.Windows.Media.Media3D.Quaternion.ToString()\n- uid: System.Windows.Media.Media3D.Quaternion.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Quaternion.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Quaternion.ToString(IFormatProvider)\n- uid: System.Windows.Media.Media3D.Quaternion.W\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: W\n  nameWithType: Quaternion.W\n  fullName: System.Windows.Media.Media3D.Quaternion.W\n- uid: System.Windows.Media.Media3D.Quaternion.X\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: X\n  nameWithType: Quaternion.X\n  fullName: System.Windows.Media.Media3D.Quaternion.X\n- uid: System.Windows.Media.Media3D.Quaternion.Y\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Y\n  nameWithType: Quaternion.Y\n  fullName: System.Windows.Media.Media3D.Quaternion.Y\n- uid: System.Windows.Media.Media3D.Quaternion.Z\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Z\n  nameWithType: Quaternion.Z\n  fullName: System.Windows.Media.Media3D.Quaternion.Z\n- uid: System.Windows.Media.Media3D.Quaternion.#ctor*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion.Quaternion\n- uid: System.Windows.Media.Media3D.Quaternion.Add*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Add\n  nameWithType: Quaternion.Add\n- uid: System.Windows.Media.Media3D.Quaternion.Angle*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Angle\n  nameWithType: Quaternion.Angle\n- uid: System.Windows.Media.Media3D.Quaternion.Axis*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Axis\n  nameWithType: Quaternion.Axis\n- uid: System.Windows.Media.Media3D.Quaternion.Conjugate*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Conjugate\n  nameWithType: Quaternion.Conjugate\n- uid: System.Windows.Media.Media3D.Quaternion.Equals*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Equals\n  nameWithType: Quaternion.Equals\n- uid: System.Windows.Media.Media3D.Quaternion.GetHashCode*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Quaternion.GetHashCode\n- uid: System.Windows.Media.Media3D.Quaternion.Identity*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Identity\n  nameWithType: Quaternion.Identity\n- uid: System.Windows.Media.Media3D.Quaternion.Invert*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Invert\n  nameWithType: Quaternion.Invert\n- uid: System.Windows.Media.Media3D.Quaternion.IsIdentity*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: IsIdentity\n  nameWithType: Quaternion.IsIdentity\n- uid: System.Windows.Media.Media3D.Quaternion.IsNormalized*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: IsNormalized\n  nameWithType: Quaternion.IsNormalized\n- uid: System.Windows.Media.Media3D.Quaternion.Multiply*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Multiply\n  nameWithType: Quaternion.Multiply\n- uid: System.Windows.Media.Media3D.Quaternion.Normalize*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Normalize\n  nameWithType: Quaternion.Normalize\n- uid: System.Windows.Media.Media3D.Quaternion.op_Addition*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Addition\n  nameWithType: Quaternion.op_Addition\n- uid: System.Windows.Media.Media3D.Quaternion.op_Equality*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Equality\n  nameWithType: Quaternion.op_Equality\n- uid: System.Windows.Media.Media3D.Quaternion.op_Inequality*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Quaternion.op_Inequality\n- uid: System.Windows.Media.Media3D.Quaternion.op_Multiply*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Quaternion.op_Multiply\n- uid: System.Windows.Media.Media3D.Quaternion.op_Subtraction*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Quaternion.op_Subtraction\n- uid: System.Windows.Media.Media3D.Quaternion.Parse*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Parse\n  nameWithType: Quaternion.Parse\n- uid: System.Windows.Media.Media3D.Quaternion.Slerp*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Slerp\n  nameWithType: Quaternion.Slerp\n- uid: System.Windows.Media.Media3D.Quaternion.Subtract*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Subtract\n  nameWithType: Quaternion.Subtract\n- uid: System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Quaternion.System.IFormattable.ToString\n- uid: System.Windows.Media.Media3D.Quaternion.ToString*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: ToString\n  nameWithType: Quaternion.ToString\n- uid: System.Windows.Media.Media3D.Quaternion.W*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: W\n  nameWithType: Quaternion.W\n- uid: System.Windows.Media.Media3D.Quaternion.X*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: X\n  nameWithType: Quaternion.X\n- uid: System.Windows.Media.Media3D.Quaternion.Y*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Y\n  nameWithType: Quaternion.Y\n- uid: System.Windows.Media.Media3D.Quaternion.Z*\n  parent: System.Windows.Media.Media3D.Quaternion\n  isExternal: false\n  name: Z\n  nameWithType: Quaternion.Z\n"}