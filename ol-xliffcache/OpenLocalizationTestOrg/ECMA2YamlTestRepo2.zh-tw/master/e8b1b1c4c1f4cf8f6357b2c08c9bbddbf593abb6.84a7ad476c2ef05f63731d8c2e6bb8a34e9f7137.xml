{"nodes":[{"pos":[740,997],"content":"Represents a security attribute used to declaratively assign access checks based on the logic provided by the <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> instance in the current application context. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security attribute used to declaratively assign access checks based on the logic provided by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance in the current application context.","pos":[0,225],"source":"Represents a security attribute used to declaratively assign access checks based on the logic provided by the <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> instance in the current application context."},{"content":"This class cannot be inherited.","pos":[226,257]}]},{"pos":[6889,7015],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\"></xref> class."},{"pos":[7027,7358],"content":"You must also specify the <ph id=\"ph1\">`Operation`</ph> and <ph id=\"ph2\">`Resource`</ph> properties in your &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; declaration or an exception will be thrown when the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A&gt; method is invoked to create the permission.","needQuote":true,"needEscape":true,"source":"You must also specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is invoked to create the permission."},{"pos":[7584,7692],"content":"One of the values that specifies the security actions that can be performed when using declarative security.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the values that specifies the security actions that can be performed when using declarative security.","pos":[0,108]}]},{"pos":[8334,8483],"content":"Creates new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is based on the current instance.","needQuote":true,"needEscape":true,"source":"Creates new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> class that is based on the current instance."},{"pos":[8495,9053],"content":"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is created by using the value of the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> property and the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> property. You must specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the CreatePermission method is invoked to create the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt; object is created by using the value of the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A&gt; property and the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A&gt; property.","pos":[0,306],"source":"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is created by using the value of the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> property and the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> property."},{"content":"You must specify the <ph id=\"ph1\">`Operation`</ph> and <ph id=\"ph2\">`Resource`</ph> properties in your &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; declaration or an exception will be thrown when the CreatePermission method is invoked to create the permission.","pos":[307,558],"source":" You must specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the CreatePermission method is invoked to create the permission."}]},{"pos":[9232,9373],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the operation and resource associated with this instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> with the operation and resource associated with this instance."},{"pos":[9987,10093],"content":"Gets or sets the operation for which the current principal should be authorized on the specified resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the operation for which the current principal should be authorized on the specified resource.","pos":[0,106]}]},{"pos":[10105,10517],"content":"The operation is the action for which the current principal should be authorized on the specified resource. You must set the `Operation` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation is the action for which the current principal should be authorized on the specified resource.","pos":[0,107]},{"content":"You must set the <ph id=\"ph1\">`Operation`</ph> property in your &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; declaration or an exception will be thrown when the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A&gt; method is called to create the permission.","pos":[108,412],"source":" You must set the `Operation` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission."}]},{"pos":[10636,10700],"content":"The action for which the current principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action for which the current principal should be authorized.","pos":[0,64]}]},{"pos":[11302,11416],"content":"Gets or sets the resource on which the principal should be authorized to perform the specified action (operation).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the resource on which the principal should be authorized to perform the specified action (operation).","pos":[0,114]}]},{"pos":[11428,11829],"content":"The resource on which the current principal should be authorized to perform the specified action. You must set the `Resource` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resource on which the current principal should be authorized to perform the specified action.","pos":[0,97]},{"content":"You must set the <ph id=\"ph1\">`Resource`</ph> property in your &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; declaration or an exception will be thrown when the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A&gt; method is called to create the permission.","pos":[98,401],"source":" You must set the `Resource` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission."}]},{"pos":[11947,12012],"content":"The resource on which the current principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resource on which the current principal should be authorized.","pos":[0,65]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  id: ClaimsPrincipalPermissionAttribute\n  children:\n  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission\n  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation\n  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource\n  langs:\n  - csharp\n  name: ClaimsPrincipalPermissionAttribute\n  nameWithType: ClaimsPrincipalPermissionAttribute\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  type: Class\n  summary: Represents a security attribute used to declaratively assign access checks based on the logic provided by the <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> instance in the current application context. This class cannot be inherited.\n  remarks: \"The ClaimsPrincipalPermissionAttribute is used to declaratively request an access check using the configured <xref:System.Security.Claims.ClaimsAuthorizationManager>.  \\n  \\n You must specify one of the <xref:System.Security.Permissions.SecurityAction> values, a `Resource` and an `Operation` in your ClaimsPrincipalPermissionAttribute declaration. The `Resource` and `Operation` properties specify the resource and action for which the current principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>) must be authorized for execution to proceed. If the current principal is not authorized to perform the specified action (operation) on the specified resource, a <xref:System.Security.SecurityException> is thrown.  \\n  \\n> [!IMPORTANT]\\n>  The ClaimsPrincipalPermissionAttribute class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications. You can specify the claims authorization manager either in configuration or programmatically. To specify the claims authorization manager in a configuration file, set the [\\\\&lt;claimsAuthorizationManager\\\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under an [\\\\&lt;identityConfiguration\\\\&gt;](../Topic/%3CidentityConfiguration%3E.md) element and ensure that this identity configuration is referenced by the [\\\\&lt;federationConfiguration\\\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute). To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event.\"\n  example:\n  - \"The following example shows how to protect a method by decorating it with the ClaimsPrincipalPermissionAttribute attribute. The attribute will evaluate whether access should be granted to the current principal by leveraging the logic provided by the <xref:System.Security.Claims.ClaimsAuthorizationManager> instance in the application context. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \\n  \\n [!code-cs[WifCppWithCam#4](~/add/codesnippet/csharp/wifcppwithcam/program.cs#4)]  \\n  \\n The following XML shows the minimum configuration required to use a custom claims authorization manager with the ClaimsPrincipalPermissionAttribute class. You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [\\\\&lt;claimsAuthorizationManager\\\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under the default identity configuration. This will ensure that your authorization manager is referenced from the default federation configuration. Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [\\\\&lt;federationConfiguration\\\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element.  \\n  \\n```xml  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>  \\n<configuration>  \\n  <configSections>  \\n    <!-- WIF configuration sections -->  \\n    <section name=\\\"system.identityModel\\\" type=\\\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\\\"/>  \\n    <section name=\\\"system.identityModel.services\\\" type=\\\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\\\"/>  \\n  </configSections>  \\n  \\n  <startup>  \\n    <supportedRuntime version=\\\"v4.0\\\" sku=\\\".NETFramework,Version=v4.5\\\" />  \\n  </startup>  \\n  \\n  <system.identityModel>  \\n    <identityConfiguration>  \\n      <claimsAuthorizationManager type =\\\"MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager\\\"/>  \\n    </identityConfiguration>  \\n  </system.identityModel>  \\n  \\n</configuration>  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class ClaimsPrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  langs:\n  - csharp\n  name: ClaimsPrincipalPermissionAttribute(SecurityAction)\n  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\"></xref> class.\n  remarks: You must also specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is invoked to create the permission.\n  syntax:\n    content: public ClaimsPrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the values that specifies the security actions that can be performed when using declarative security.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Creates new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> class that is based on the current instance.\n  remarks: The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is created by using the value of the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> property and the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> property. You must specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the CreatePermission method is invoked to create the permission.\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> with the operation and resource associated with this instance.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation\n  id: Operation\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  langs:\n  - csharp\n  name: Operation\n  nameWithType: ClaimsPrincipalPermissionAttribute.Operation\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets or sets the operation for which the current principal should be authorized on the specified resource.\n  remarks: The operation is the action for which the current principal should be authorized on the specified resource. You must set the `Operation` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.\n  syntax:\n    content: public string Operation { get; set; }\n    return:\n      type: System.String\n      description: The action for which the current principal should be authorized.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource\n  id: Resource\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  langs:\n  - csharp\n  name: Resource\n  nameWithType: ClaimsPrincipalPermissionAttribute.Resource\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets or sets the resource on which the principal should be authorized to perform the specified action (operation).\n  remarks: The resource on which the current principal should be authorized to perform the specified action. You must set the `Resource` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.\n  syntax:\n    content: public string Resource { get; set; }\n    return:\n      type: System.String\n      description: The resource on which the current principal should be authorized.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: ClaimsPrincipalPermissionAttribute(SecurityAction)\n  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: Operation\n  nameWithType: ClaimsPrincipalPermissionAttribute.Operation\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: Resource\n  nameWithType: ClaimsPrincipalPermissionAttribute.Resource\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: ClaimsPrincipalPermissionAttribute\n  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: Operation\n  nameWithType: ClaimsPrincipalPermissionAttribute.Operation\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute\n  isExternal: false\n  name: Resource\n  nameWithType: ClaimsPrincipalPermissionAttribute.Resource\n"}