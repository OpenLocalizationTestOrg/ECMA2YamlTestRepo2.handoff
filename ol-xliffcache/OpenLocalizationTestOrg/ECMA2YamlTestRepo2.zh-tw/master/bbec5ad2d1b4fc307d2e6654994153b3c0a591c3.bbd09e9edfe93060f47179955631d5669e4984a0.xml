{"nodes":[{"pos":[437,498],"content":"Represents a log record that has been appended to a sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a log record that has been appended to a sequence.","pos":[0,61]}]},{"pos":[987,1072],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogRecord\"></xref> class."},{"pos":[1495,1575],"content":"When overridden in a derived class, gets a stream that contains the record data.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a stream that contains the record data.","pos":[0,80]}]},{"pos":[1706,1745],"content":"A stream that contains the record data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream that contains the record data.","pos":[0,39]}]},{"pos":[1908,1978],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been disposed of.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.LogRecord\"></xref> has been disposed of."},{"pos":[2294,2374],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.IO.Log.LogRecord\"></xref>."},{"pos":[2387,3077],"content":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The Dispose method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.","needQuote":false,"needEscape":true,"nodes":[{"content":"You should call this method when you finish using the &lt;xref:System.IO.Log.LogRecord&gt; instance.","pos":[0,94],"source":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance."},{"content":"The Dispose method leaves the &lt;xref:System.IO.Log.LogRecord&gt; instance in an unusable state.","pos":[95,186],"source":" The Dispose method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state."},{"content":"After calling this method, you must release all references to the &lt;xref:System.IO.Log.LogRecord&gt; instance, so that the garbage collector can reclaim the memory that the &lt;xref:System.IO.Log.LogRecord&gt; instance was occupying.","pos":[187,410],"source":" After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.IO.Log.LogRecord&gt; instance.","pos":[416,535],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.IO.Log.LogRecord> instance."},{"content":"Otherwise, the resources it is using cannot be freed until the garbage collector calls the &lt;xref:System.IO.Log.LogRecord&gt; instance's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[536,687],"source":" Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method."}]},{"pos":[3532,3616],"content":"When overridden in a derived class, gets the sequence number of the previous record.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the sequence number of the previous record.","pos":[0,84]}]},{"pos":[3628,3896],"content":"The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this property is the sequence number that was provided as the <ph id=\"ph1\">`previousUndoRecord`</ph> parameter in the &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; method.","pos":[0,167],"source":"The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method."},{"content":"Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","pos":[168,268]}]},{"pos":[4055,4098],"content":"The sequence number of the previous record.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sequence number of the previous record.","pos":[0,43]}]},{"pos":[4508,4584],"content":"When overridden in a derived class, gets the sequence number of this record.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the sequence number of this record.","pos":[0,76]}]},{"pos":[4749,4784],"content":"The sequence number of this record.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sequence number of this record.","pos":[0,35]}]},{"pos":[5150,5230],"content":"When overridden in a derived class, gets the sequence number of the next record.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the sequence number of the next record.","pos":[0,80]}]},{"pos":[5242,5506],"content":"The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this property is the sequence number that was provided as the <ph id=\"ph1\">`nextUndoRecord`</ph> parameter in the &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; method.","pos":[0,163],"source":"The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method."},{"content":"Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","pos":[164,264]}]},{"pos":[5661,5728],"content":"The sequence number of the next record in the user-specified chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sequence number of the next record in the user-specified chain.","pos":[0,67]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.LogRecord\n  id: LogRecord\n  children:\n  - System.IO.Log.LogRecord.#ctor\n  - System.IO.Log.LogRecord.Data\n  - System.IO.Log.LogRecord.Dispose\n  - System.IO.Log.LogRecord.Previous\n  - System.IO.Log.LogRecord.SequenceNumber\n  - System.IO.Log.LogRecord.User\n  langs:\n  - csharp\n  name: LogRecord\n  nameWithType: LogRecord\n  fullName: System.IO.Log.LogRecord\n  type: Class\n  summary: Represents a log record that has been appended to a sequence.\n  syntax:\n    content: 'public abstract class LogRecord : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.#ctor\n  id: '#ctor'\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: LogRecord()\n  nameWithType: LogRecord.LogRecord()\n  fullName: System.IO.Log.LogRecord.LogRecord()\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogRecord\"></xref> class.\n  syntax:\n    content: protected LogRecord ();\n    parameters: []\n  overload: System.IO.Log.LogRecord.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.Data\n  id: Data\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Data\n  nameWithType: LogRecord.Data\n  fullName: System.IO.Log.LogRecord.Data\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets a stream that contains the record data.\n  syntax:\n    content: public abstract System.IO.Stream Data { get; }\n    return:\n      type: System.IO.Stream\n      description: A stream that contains the record data.\n  overload: System.IO.Log.LogRecord.Data*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Log.LogRecord\"></xref> has been disposed of.\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.Dispose\n  id: Dispose\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: LogRecord.Dispose()\n  fullName: System.IO.Log.LogRecord.Dispose()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Releases all resources used by the <xref href=\"System.IO.Log.LogRecord\"></xref>.\n  remarks: \"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The Dispose method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.\"\n  syntax:\n    content: public abstract void Dispose ();\n    parameters: []\n  overload: System.IO.Log.LogRecord.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.Previous\n  id: Previous\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Previous\n  nameWithType: LogRecord.Previous\n  fullName: System.IO.Log.LogRecord.Previous\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of the previous record.\n  remarks: The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber Previous { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the previous record.\n  overload: System.IO.Log.LogRecord.Previous*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.SequenceNumber\n  id: SequenceNumber\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n  fullName: System.IO.Log.LogRecord.SequenceNumber\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of this record.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber SequenceNumber { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of this record.\n  overload: System.IO.Log.LogRecord.SequenceNumber*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogRecord.User\n  id: User\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: User\n  nameWithType: LogRecord.User\n  fullName: System.IO.Log.LogRecord.User\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of the next record.\n  remarks: The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber User { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the next record in the user-specified chain.\n  overload: System.IO.Log.LogRecord.User*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.IO.Log.LogRecord.#ctor\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: LogRecord()\n  nameWithType: LogRecord.LogRecord()\n  fullName: System.IO.Log.LogRecord.LogRecord()\n- uid: System.IO.Log.LogRecord.Data\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Data\n  nameWithType: LogRecord.Data\n  fullName: System.IO.Log.LogRecord.Data\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Log.LogRecord.Dispose\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Dispose()\n  nameWithType: LogRecord.Dispose()\n  fullName: System.IO.Log.LogRecord.Dispose()\n- uid: System.IO.Log.LogRecord.Previous\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Previous\n  nameWithType: LogRecord.Previous\n  fullName: System.IO.Log.LogRecord.Previous\n- uid: System.IO.Log.SequenceNumber\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: SequenceNumber\n  fullName: System.IO.Log.SequenceNumber\n- uid: System.IO.Log.LogRecord.SequenceNumber\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n  fullName: System.IO.Log.LogRecord.SequenceNumber\n- uid: System.IO.Log.LogRecord.User\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: User\n  nameWithType: LogRecord.User\n  fullName: System.IO.Log.LogRecord.User\n- uid: System.IO.Log.LogRecord.#ctor*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: LogRecord\n  nameWithType: LogRecord.LogRecord\n- uid: System.IO.Log.LogRecord.Data*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Data\n  nameWithType: LogRecord.Data\n- uid: System.IO.Log.LogRecord.Dispose*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Dispose\n  nameWithType: LogRecord.Dispose\n- uid: System.IO.Log.LogRecord.Previous*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Previous\n  nameWithType: LogRecord.Previous\n- uid: System.IO.Log.LogRecord.SequenceNumber*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n- uid: System.IO.Log.LogRecord.User*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: User\n  nameWithType: LogRecord.User\n"}