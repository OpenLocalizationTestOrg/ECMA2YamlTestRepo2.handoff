{"nodes":[{"pos":[514,848],"content":"When the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\"></xref> event is raised, an instance of this object is passed to the delegate method that handles the event. This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised, an instance of this object is passed to the delegate method that handles the event.","pos":[0,200],"source":"When the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\"></xref> event is raised, an instance of this object is passed to the delegate method that handles the event."},{"content":"This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.","pos":[201,334]}]},{"pos":[1697,1829],"content":"Gets the exception that occurred when the event subscription failed. The exception has a description of why the subscription failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the exception that occurred when the event subscription failed. The exception has a description of why the subscription failed.","pos":[0,132],"nodes":[{"content":"Gets the exception that occurred when the event subscription failed.","pos":[0,68]},{"content":"The exception has a description of why the subscription failed.","pos":[69,132]}]}]},{"pos":[1954,1996],"content":"Returns an <xref:System.Exception> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Exception&gt; object.","pos":[0,42],"source":"Returns an <xref:System.Exception> object."}]},{"pos":[2590,2731],"content":"Gets the event record that is published to the event log. This event matches the criteria from the query specified in the event subscription.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the event record that is published to the event log. This event matches the criteria from the query specified in the event subscription.","pos":[0,141],"nodes":[{"content":"Gets the event record that is published to the event log.","pos":[0,57]},{"content":"This event matches the criteria from the query specified in the event subscription.","pos":[58,141]}]}]},{"pos":[2920,3005],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Diagnostics.Eventing.Reader.EventRecord\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  id: EventRecordWrittenEventArgs\n  children:\n  - System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException\n  - System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord\n  langs:\n  - csharp\n  name: EventRecordWrittenEventArgs\n  nameWithType: EventRecordWrittenEventArgs\n  fullName: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  type: Class\n  summary: When the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\"></xref> event is raised, an instance of this object is passed to the delegate method that handles the event. This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How to: Subscribe to Events in an Event Log](http://msdn.microsoft.com/en-us/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).'\n  syntax:\n    content: 'public sealed class EventRecordWrittenEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException\n  id: EventException\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  langs:\n  - csharp\n  name: EventException\n  nameWithType: EventRecordWrittenEventArgs.EventException\n  fullName: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the exception that occurred when the event subscription failed. The exception has a description of why the subscription failed.\n  syntax:\n    content: public Exception EventException { get; }\n    return:\n      type: System.Exception\n      description: Returns an <xref:System.Exception> object.\n  overload: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord\n  id: EventRecord\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  langs:\n  - csharp\n  name: EventRecord\n  nameWithType: EventRecordWrittenEventArgs.EventRecord\n  fullName: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the event record that is published to the event log. This event matches the criteria from the query specified in the event subscription.\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventRecord EventRecord { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventRecord\n      description: Returns a <xref href=\"System.Diagnostics.Eventing.Reader.EventRecord\"></xref> object.\n  overload: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  isExternal: false\n  name: EventException\n  nameWithType: EventRecordWrittenEventArgs.EventException\n  fullName: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  isExternal: false\n  name: EventRecord\n  nameWithType: EventRecordWrittenEventArgs.EventRecord\n  fullName: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord\n- uid: System.Diagnostics.Eventing.Reader.EventRecord\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventRecord\n  nameWithType: EventRecord\n  fullName: System.Diagnostics.Eventing.Reader.EventRecord\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException*\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  isExternal: false\n  name: EventException\n  nameWithType: EventRecordWrittenEventArgs.EventException\n- uid: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord*\n  parent: System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs\n  isExternal: false\n  name: EventRecord\n  nameWithType: EventRecordWrittenEventArgs.EventRecord\n"}