{"nodes":[{"pos":[1099,1147],"content":"Represents an elliptical arc between two points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an elliptical arc between two points.","pos":[0,48]}]},{"pos":[1160,4194],"content":"Use a <xref:System.Windows.Media.PathFigure> object to store ArcSegment objects and other segments.       An elliptical arc is defined by its start and end points, x- and y-radius, x-axis rotation factor, a value indicating whether the arc should be greater than 180 degrees, and a value describing the direction in which the arc is drawn. The ArcSegment class does not contain a property for the starting point of the arc; it only defines the destination point of the arc it represents. The beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the ArcSegment is added.       The following illustrations demonstrate the different end point, <xref:System.Windows.Media.ArcSegment.Size%2A>, and <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> settings.       ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \"ArcSegments with different Point settings\")       ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \"ArcSegments with different Size settings\")       ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \"ArcSegments with different RotationAngle settings\")      ## IsLargeArc and SweepDirection    For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustrations show different <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> settings.       ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \"ArcSegments with different IsLargeArc settings\")   ArcSegment objects with different IsLargeArc settings       ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \"ArcSegments with different SweepDirection settings\")   ArcSegment objects with different SweepDirection settings      ## Freezable Features    An ArcSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use a &lt;xref:System.Windows.Media.PathFigure&gt; object to store ArcSegment objects and other segments.","pos":[0,99],"source":"Use a <xref:System.Windows.Media.PathFigure> object to store ArcSegment objects and other segments."},{"content":"An elliptical arc is defined by its start and end points, x- and y-radius, x-axis rotation factor, a value indicating whether the arc should be greater than 180 degrees, and a value describing the direction in which the arc is drawn.","pos":[106,339]},{"content":"The ArcSegment class does not contain a property for the starting point of the arc; it only defines the destination point of the arc it represents.","pos":[340,487]},{"content":"The beginning point of the arc is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; to which the ArcSegment is added.","pos":[488,619],"source":" The beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the ArcSegment is added."},{"content":"The following illustrations demonstrate the different end point, &lt;xref:System.Windows.Media.ArcSegment.Size%2A&gt;, and &lt;xref:System.Windows.Media.ArcSegment.RotationAngle%2A&gt; settings.","pos":[626,808],"source":"       The following illustrations demonstrate the different end point, <xref:System.Windows.Media.ArcSegment.Size%2A>, and <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> settings."},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different Point settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-point.png \"</bpt>ArcSegments with different Point settings<ept id=\"p2\">\")</ept>       <bpt id=\"p3\">![</bpt>ArcSegments with different Size settings<ept id=\"p3\">]</ept><bpt id=\"p4\">(~/add/media/arcsegment-size.png \"</bpt>ArcSegments with different Size settings<ept id=\"p4\">\")</ept>       <bpt id=\"p5\">![</bpt>ArcSegments with different RotationAngle settings<ept id=\"p5\">]</ept><bpt id=\"p6\">(~/add/media/arcsegment-rotationangle.png \"</bpt>ArcSegments with different RotationAngle settings<ept id=\"p6\">\")</ept>      ## IsLargeArc and SweepDirection    For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; and &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; properties indicate which arc to use.","pos":[815,1523],"source":"![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \"ArcSegments with different Point settings\")       ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \"ArcSegments with different Size settings\")       ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \"ArcSegments with different RotationAngle settings\")      ## IsLargeArc and SweepDirection    For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use."},{"content":"Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less.","pos":[1530,1691]},{"content":"If &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then one of the two larger arc sweeps is chosen; otherwise, if  is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, one of the smaller arc sweeps is chosen.","pos":[1692,1879],"source":" If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen."},{"content":"The remaining two arc candidates are each drawn in a different direction: &lt;xref:System.Windows.Media.SweepDirection&gt; or &lt;xref:System.Windows.Media.SweepDirection&gt;.","pos":[1880,2043],"source":" The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>."},{"content":"The &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; property specifies which one to use.","pos":[2044,2141],"source":" The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use."},{"content":"The following illustrations show different &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; and &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; settings.","pos":[2148,2314],"source":"       The following illustrations show different <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> settings."},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different IsLargeArc settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-islargearc.png \"</bpt>ArcSegments with different IsLargeArc settings<ept id=\"p2\">\")</ept>   ArcSegment objects with different IsLargeArc settings       <bpt id=\"p3\">![</bpt>ArcSegments with different SweepDirection settings<ept id=\"p3\">]</ept><bpt id=\"p4\">(~/add/media/arcsegment-sweepdirection.png \"</bpt>ArcSegments with different SweepDirection settings<ept id=\"p4\">\")</ept>   ArcSegment objects with different SweepDirection settings      ## Freezable Features    An ArcSegment is a type of &lt;xref:System.Windows.Freezable&gt; object.","pos":[2321,2827],"source":"![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \"ArcSegments with different IsLargeArc settings\")   ArcSegment objects with different IsLargeArc settings       ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \"ArcSegments with different SweepDirection settings\")   ArcSegment objects with different SweepDirection settings      ## Freezable Features    An ArcSegment is a type of <xref:System.Windows.Freezable> object."},{"content":"For information about &lt;xref:System.Windows.Freezable&gt; features, such as freezing and cloning, see the <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2828,2998],"source":" For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[8698,8791],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.ArcSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.ArcSegment\"></xref> class."},{"pos":[8804,9840],"content":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Media.ArcSegment&gt; class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt;, to which the &lt;xref:System.Windows.Media.ArcSegment&gt; is added.","pos":[0,270],"source":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added."},{"content":"For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the <ph id=\"ph1\">`largeArc`</ph> and <ph id=\"ph2\">`sweepDirection`</ph> parameters indicate which arc to use.","pos":[277,470],"source":"       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use."},{"content":"Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less.","pos":[477,638]},{"content":"If <ph id=\"ph1\">`largeArc`</ph> is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then one of the two larger arc sweeps is chosen; otherwise, if <ph id=\"ph2\">`largeArc`</ph> is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, one of the smaller arc sweeps is chosen.","pos":[639,794],"source":" If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen."},{"content":"If <ph id=\"ph1\">`sweepDirection`</ph> is &lt;xref:System.Windows.Media.SweepDirection&gt;, the arc is drawn in a positive-angle direction.","pos":[801,915],"source":"       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction."},{"content":"If <ph id=\"ph1\">`sweepDirection`</ph> is &lt;xref:System.Windows.Media.SweepDirection&gt;, the arc is drawn in a negative-angle direction.","pos":[916,1030],"source":" If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction."}]},{"pos":[10724,10817],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.ArcSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.ArcSegment\"></xref> class."},{"pos":[10830,11866],"content":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Media.ArcSegment&gt; class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt;, to which the &lt;xref:System.Windows.Media.ArcSegment&gt; is added.","pos":[0,270],"source":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added."},{"content":"For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the <ph id=\"ph1\">`largeArc`</ph> and <ph id=\"ph2\">`sweepDirection`</ph> parameters indicate which arc to use.","pos":[277,470],"source":"       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use."},{"content":"Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less.","pos":[477,638]},{"content":"If <ph id=\"ph1\">`largeArc`</ph> is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then one of the two larger arc sweeps is chosen; otherwise, if <ph id=\"ph2\">`largeArc`</ph> is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, one of the smaller arc sweeps is chosen.","pos":[639,794],"source":" If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen."},{"content":"If <ph id=\"ph1\">`sweepDirection`</ph> is &lt;xref:System.Windows.Media.SweepDirection&gt;, the arc is drawn in a positive-angle direction.","pos":[801,915],"source":"       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction."},{"content":"If <ph id=\"ph1\">`sweepDirection`</ph> is &lt;xref:System.Windows.Media.SweepDirection&gt;, the arc is drawn in a negative-angle direction.","pos":[916,1030],"source":" If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction."}]},{"pos":[12156,12384],"content":"The destination point of the arc; the start point of the arc is defined as the current point of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PathFigure\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.ArcSegment\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is added.","needQuote":true,"needEscape":true,"source":"The destination point of the arc; the start point of the arc is defined as the current point of the <xref href=\"System.Windows.Media.PathFigure\"></xref> to which the <xref href=\"System.Windows.Media.ArcSegment\"></xref> is added."},{"pos":[12451,12747],"content":"The x- and y-radius of the arc. The x-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property, and the y-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Height*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x- and y-radius of the arc.","pos":[0,31]},{"content":"The x-radius is specified by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Windows.Size.Width<bpt id=\"p2\">*</bpt>&gt; property, and the y-radius is specified by the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Windows.Size.Height<ept id=\"p2\">*</ept>&gt; property.","pos":[32,296],"source":" The x-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property, and the y-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Height*> property."}]},{"pos":[12817,12852],"content":"The x-axis rotation of the ellipse.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-axis rotation of the ellipse.","pos":[0,35]}]},{"pos":[12920,12971],"content":"Whether the arc should be greater than 180 degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether the arc should be greater than 180 degrees.","pos":[0,51]}]},{"pos":[13064,13285],"content":"Set to <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the arc in a positive angle direction; set to <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to draw the arc in a negative angle direction.","needQuote":true,"needEscape":true,"source":"Set to <xref href=\"System.Windows.Media.SweepDirection\"></xref> to draw the arc in a positive angle direction; set to <xref href=\"System.Windows.Media.SweepDirection\"></xref> to draw the arc in a negative angle direction."},{"pos":[13352,13487],"content":"Set to <ph id=\"ph1\">`true`</ph> to stroke the arc when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <ph id=\"ph2\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"Set to `true` to stroke the arc when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, `false`."},{"pos":[13896,14200],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.ArcSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","pos":[0,132],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[133,304]}]},{"pos":[14213,14558],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","pos":[0,343],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[251,343],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}]},{"pos":[14726,15048],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,322],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[15517,15761],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.ArcSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, making deep copies of this object's current values.","pos":[0,147],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[148,244]}]},{"pos":[15774,16131],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","pos":[0,355],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;.","pos":[251,355],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}]},{"pos":[16311,16632],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[42,321],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[17284,17296],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17739,17826],"content":"Gets or sets a value that indicates whether the arc should be greater than 180 degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the arc should be greater than 180 degrees.","pos":[0,87]}]},{"pos":[17839,19206],"content":"For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  IsLargeArc and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If IsLargeArc is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustration shows two elliptical arcs that are identical except for their IsLargeArc settings.       ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \"ArcSegments with different IsLargeArc settings\")   ArcSegment objects with different IsLargeArc settings      <a name=\"dependencyPropertyInfo_IsLargeArc\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|   |Metadata properties set to **true**|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  IsLargeArc and &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; properties indicate which arc to use.","pos":[0,223],"source":"For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  IsLargeArc and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use."},{"content":"Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less.","pos":[230,391]},{"content":"If IsLargeArc is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then one of the two larger arc sweeps is chosen; otherwise, if  is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, one of the smaller arc sweeps is chosen.","pos":[392,537],"source":" If IsLargeArc is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen."},{"content":"The remaining two arc candidates are each drawn in a different direction: &lt;xref:System.Windows.Media.SweepDirection&gt; or &lt;xref:System.Windows.Media.SweepDirection&gt;.","pos":[538,701],"source":" The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>."},{"content":"The &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; property specifies which one to use.","pos":[702,799],"source":" The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use."},{"content":"The following illustration shows two elliptical arcs that are identical except for their IsLargeArc settings.","pos":[806,915]},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different IsLargeArc settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-islargearc.png \"</bpt>ArcSegments with different IsLargeArc settings<ept id=\"p2\">\")</ept>   ArcSegment objects with different IsLargeArc settings      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_IsLargeArc\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.ArcSegment.IsLargeArcProperty&gt;|   |Metadata properties set to <bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>|None|","pos":[922,1348],"source":"![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \"ArcSegments with different IsLargeArc settings\")   ArcSegment objects with different IsLargeArc settings      <a name=\"dependencyPropertyInfo_IsLargeArc\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|   |Metadata properties set to **true**|None|"}]},{"pos":[19327,19489],"content":"**true** if the arc should be greater than 180 degrees; otherwise, **false**. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the arc should be greater than 180 degrees; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,77],"source":"**true** if the arc should be greater than 180 degrees; otherwise, **false**."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[78,162],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19962,20048],"content":"Identifies the <xref:System.Windows.Media.ArcSegment.IsLargeArc*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Media.ArcSegment.IsLargeArc*> dependency property."}]},{"pos":[20226,20238],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20592,20640],"content":"Gets or sets the endpoint of the elliptical arc.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the endpoint of the elliptical arc.","pos":[0,48]}]},{"pos":[20653,22445],"content":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.ArcSegment> is added.       If the arc segment's start point and end point are the same, no arc is drawn.       For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustration shows several elliptical arcs that are identical except for their Point settings.       ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \"ArcSegments with different Point settings\")   Several ArcSegment objects with different Point settings      <a name=\"dependencyPropertyInfo_Point\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.PointProperty>|   |Metadata properties set to **true**|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Media.ArcSegment&gt; class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; to which the &lt;xref:System.Windows.Media.ArcSegment&gt; is added.","pos":[0,269],"source":"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.ArcSegment> is added."},{"content":"If the arc segment's start point and end point are the same, no arc is drawn.","pos":[276,353]},{"content":"For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; and &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; properties indicate which arc to use.","pos":[360,625],"source":"       For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use."},{"content":"Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less.","pos":[632,793]},{"content":"If &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, then one of the two larger arc sweeps is chosen; otherwise, if  is <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, one of the smaller arc sweeps is chosen.","pos":[794,981],"source":" If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen."},{"content":"The remaining two arc candidates are each drawn in a different direction: &lt;xref:System.Windows.Media.SweepDirection&gt; or &lt;xref:System.Windows.Media.SweepDirection&gt;.","pos":[982,1145],"source":" The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>."},{"content":"The &lt;xref:System.Windows.Media.ArcSegment.SweepDirection%2A&gt; property specifies which one to use.","pos":[1146,1243],"source":" The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use."},{"content":"The following illustration shows several elliptical arcs that are identical except for their Point settings.","pos":[1250,1358]},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different Point settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-point.png \"</bpt>ArcSegments with different Point settings<ept id=\"p2\">\")</ept>   Several ArcSegment objects with different Point settings      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_Point\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.ArcSegment.PointProperty&gt;|   |Metadata properties set to <bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>|None|","pos":[1365,1769],"source":"![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \"ArcSegments with different Point settings\")   Several ArcSegment objects with different Point settings      <a name=\"dependencyPropertyInfo_Point\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.PointProperty>|   |Metadata properties set to **true**|None|"}]},{"pos":[22582,22646],"content":"The point to which the arc is drawn. The default value is (0,0).","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to which the arc is drawn. The default value is (0,0).","pos":[0,64],"nodes":[{"content":"The point to which the arc is drawn.","pos":[0,36]},{"content":"The default value is (0,0).","pos":[37,64]}]}]},{"pos":[23088,23169],"content":"Identifies the <xref:System.Windows.Media.ArcSegment.Point*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.ArcSegment.Point*&gt; dependency property.","pos":[0,81],"source":"Identifies the <xref:System.Windows.Media.ArcSegment.Point*> dependency property."}]},{"pos":[23342,23354],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23748,23834],"content":"Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.","pos":[0,86]}]},{"pos":[23847,24537],"content":"The following illustration shows several elliptical arcs that are identical except for their RotationAngle settings.       ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \"ArcSegments with different RotationAngle settings\")   Several ArcSegment objects with different RotationAngle settings       Note that, if the arc's width and height are the same, setting this property has no effect.      <a name=\"dependencyPropertyInfo_RotationAngle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|   |Metadata properties set to **true**|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following illustration shows several elliptical arcs that are identical except for their RotationAngle settings.","pos":[0,116]},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different RotationAngle settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-rotationangle.png \"</bpt>ArcSegments with different RotationAngle settings<ept id=\"p2\">\")</ept>   Several ArcSegment objects with different RotationAngle settings       Note that, if the arc's width and height are the same, setting this property has no effect.","pos":[123,434],"source":"![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \"ArcSegments with different RotationAngle settings\")   Several ArcSegment objects with different RotationAngle settings       Note that, if the arc's width and height are the same, setting this property has no effect."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_RotationAngle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.ArcSegment.RotationAngleProperty&gt;|   |Metadata properties set to <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>|None|","pos":[440,673],"source":"<a name=\"dependencyPropertyInfo_RotationAngle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|   |Metadata properties set to **true**|None|"}]},{"pos":[24661,24758],"content":"The amount (in degrees) by which the ellipse is rotated about the x-axis. The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount (in degrees) by which the ellipse is rotated about the x-axis. The default value is 0.","pos":[0,97],"nodes":[{"content":"The amount (in degrees) by which the ellipse is rotated about the x-axis.","pos":[0,73]},{"content":"The default value is 0.","pos":[74,97]}]}]},{"pos":[25248,25338],"content":"Identifies the  <xref:System.Windows.Media.ArcSegment.RotationAngle*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the  &lt;xref:System.Windows.Media.ArcSegment.RotationAngle*&gt; dependency property.","pos":[0,90],"source":"Identifies the  <xref:System.Windows.Media.ArcSegment.RotationAngle*> dependency property."}]},{"pos":[25519,25531],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25880,25980],"content":"Gets or sets the x- and y-radius of the arc as a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the x- and y-radius of the arc as a <xref href=\"System.Windows.Size\"></xref> structure."},{"pos":[25993,26520],"content":"The following illustration shows several elliptical arcs that are identical except for their Size settings.       ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \"ArcSegments with different Size settings\")   Several ArcSegment objects with different Size settings      <a name=\"dependencyPropertyInfo_Size\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SizeProperty>|   |Metadata properties set to **true**|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following illustration shows several elliptical arcs that are identical except for their Size settings.","pos":[0,107]},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different Size settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-size.png \"</bpt>ArcSegments with different Size settings<ept id=\"p2\">\")</ept>   Several ArcSegment objects with different Size settings      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_Size\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.ArcSegment.SizeProperty&gt;|   |Metadata properties set to <bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>|None|","pos":[114,512],"source":"![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \"ArcSegments with different Size settings\")   Several ArcSegment objects with different Size settings      <a name=\"dependencyPropertyInfo_Size\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SizeProperty>|   |Metadata properties set to **true**|None|"}]},{"pos":[26654,26998],"content":"A <xref href=\"System.Windows.Size\"></xref> structure that describes the x- and y-radius of the elliptical arc. The <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property specifies the arc's x-radius; its <xref:System.Windows.Size.Height*> property specifies the arc's y-radius. The default value is 0,0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that describes the x- and y-radius of the elliptical arc.","pos":[0,110],"source":"A <xref href=\"System.Windows.Size\"></xref> structure that describes the x- and y-radius of the elliptical arc."},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Windows.Size.Width<bpt id=\"p2\">*</bpt>&gt; property specifies the arc's x-radius; its &lt;xref:System.Windows.Size.Height<ept id=\"p2\">*</ept>&gt; property specifies the arc's y-radius.","pos":[111,318],"source":" The <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property specifies the arc's x-radius; its <xref:System.Windows.Size.Height*> property specifies the arc's y-radius."},{"content":"The default value is 0,0.","pos":[319,344]}]},{"pos":[27434,27514],"content":"Identifies the <xref:System.Windows.Media.ArcSegment.Size*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.ArcSegment.Size*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.Media.ArcSegment.Size*> dependency property."}]},{"pos":[27686,27698],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28097,28292],"content":"Gets or sets a value that specifies whether the arc is drawn in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> direction.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies whether the arc is drawn in the <xref href=\"System.Windows.Media.SweepDirection\"></xref> or <xref href=\"System.Windows.Media.SweepDirection\"></xref> direction."},{"pos":[28305,29552],"content":"For an <xref:System.Windows.Media.ArcSegment> with a given <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, start point, and end <xref:System.Windows.Media.ArcSegment.Point%2A>, four different arcs are possible. Specifying the <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> property reduces the number of possible arcs to two: an arc drawn from the start point to the end <xref:System.Windows.Media.ArcSegment.Point%2A> in a <xref:System.Windows.Media.SweepDirection> direction and an arc drawn from the start point to the end point in a <xref:System.Windows.Media.SweepDirection> direction.       The following illustration shows two elliptical arcs that are identical except for their SweepDirection settings.       ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \"ArcSegments with different SweepDirection settings\")   ArcSegment objects with different SweepDirection settings      <a name=\"dependencyPropertyInfo_SweepDirection\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|   |Metadata properties set to **true**|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"For an &lt;xref:System.Windows.Media.ArcSegment&gt; with a given &lt;xref:System.Windows.Media.ArcSegment.Size%2A&gt;, &lt;xref:System.Windows.Media.ArcSegment.RotationAngle%2A&gt;, start point, and end &lt;xref:System.Windows.Media.ArcSegment.Point%2A&gt;, four different arcs are possible.","pos":[0,267],"source":"For an <xref:System.Windows.Media.ArcSegment> with a given <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, start point, and end <xref:System.Windows.Media.ArcSegment.Point%2A>, four different arcs are possible."},{"content":"Specifying the &lt;xref:System.Windows.Media.ArcSegment.IsLargeArc%2A&gt; property reduces the number of possible arcs to two: an arc drawn from the start point to the end &lt;xref:System.Windows.Media.ArcSegment.Point%2A&gt; in a &lt;xref:System.Windows.Media.SweepDirection&gt; direction and an arc drawn from the start point to the end point in a &lt;xref:System.Windows.Media.SweepDirection&gt; direction.","pos":[268,653],"source":" Specifying the <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> property reduces the number of possible arcs to two: an arc drawn from the start point to the end <xref:System.Windows.Media.ArcSegment.Point%2A> in a <xref:System.Windows.Media.SweepDirection> direction and an arc drawn from the start point to the end point in a <xref:System.Windows.Media.SweepDirection> direction."},{"content":"The following illustration shows two elliptical arcs that are identical except for their SweepDirection settings.","pos":[660,773]},{"content":"<bpt id=\"p1\">![</bpt>ArcSegments with different SweepDirection settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/arcsegment-sweepdirection.png \"</bpt>ArcSegments with different SweepDirection settings<ept id=\"p2\">\")</ept>   ArcSegment objects with different SweepDirection settings      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_SweepDirection\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.ArcSegment.SweepDirectionProperty&gt;|   |Metadata properties set to <bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>|None|","pos":[780,1230],"source":"![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \"ArcSegments with different SweepDirection settings\")   ArcSegment objects with different SweepDirection settings      <a name=\"dependencyPropertyInfo_SweepDirection\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|   |Metadata properties set to **true**|None|"}]},{"pos":[29728,29870],"content":"A value that specifies the direction in which the arc is drawn. The default value is <xref href=\"System.Windows.Media.SweepDirection\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies the direction in which the arc is drawn.","pos":[0,63]},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[64,142],"source":" The default value is <xref href=\"System.Windows.Media.SweepDirection\"></xref>."}]},{"pos":[30366,30456],"content":"Identifies the <xref:System.Windows.Media.ArcSegment.SweepDirection*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.ArcSegment.SweepDirection*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Media.ArcSegment.SweepDirection*> dependency property."}]},{"pos":[30638,30650],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.ArcSegment\n  id: ArcSegment\n  children:\n  - System.Windows.Media.ArcSegment.#ctor\n  - System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)\n  - System.Windows.Media.ArcSegment.Clone\n  - System.Windows.Media.ArcSegment.CloneCurrentValue\n  - System.Windows.Media.ArcSegment.CreateInstanceCore\n  - System.Windows.Media.ArcSegment.IsLargeArc\n  - System.Windows.Media.ArcSegment.IsLargeArcProperty\n  - System.Windows.Media.ArcSegment.Point\n  - System.Windows.Media.ArcSegment.PointProperty\n  - System.Windows.Media.ArcSegment.RotationAngle\n  - System.Windows.Media.ArcSegment.RotationAngleProperty\n  - System.Windows.Media.ArcSegment.Size\n  - System.Windows.Media.ArcSegment.SizeProperty\n  - System.Windows.Media.ArcSegment.SweepDirection\n  - System.Windows.Media.ArcSegment.SweepDirectionProperty\n  langs:\n  - csharp\n  name: ArcSegment\n  nameWithType: ArcSegment\n  fullName: System.Windows.Media.ArcSegment\n  type: Class\n  summary: Represents an elliptical arc between two points.\n  remarks: \"Use a <xref:System.Windows.Media.PathFigure> object to store ArcSegment objects and other segments.  \\n  \\n An elliptical arc is defined by its start and end points, x- and y-radius, x-axis rotation factor, a value indicating whether the arc should be greater than 180 degrees, and a value describing the direction in which the arc is drawn. The ArcSegment class does not contain a property for the starting point of the arc; it only defines the destination point of the arc it represents. The beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the ArcSegment is added.  \\n  \\n The following illustrations demonstrate the different end point, <xref:System.Windows.Media.ArcSegment.Size%2A>, and <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> settings.  \\n  \\n ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \\\"ArcSegments with different Point settings\\\")  \\n  \\n ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \\\"ArcSegments with different Size settings\\\")  \\n  \\n ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \\\"ArcSegments with different RotationAngle settings\\\")  \\n  \\n## IsLargeArc and SweepDirection  \\n For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.  \\n  \\n Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.  \\n  \\n The following illustrations show different <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> settings.  \\n  \\n ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \\\"ArcSegments with different IsLargeArc settings\\\")  \\nArcSegment objects with different IsLargeArc settings  \\n  \\n ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \\\"ArcSegments with different SweepDirection settings\\\")  \\nArcSegment objects with different SweepDirection settings  \\n  \\n## Freezable Features  \\n An ArcSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: 'public sealed class ArcSegment : System.Windows.Media.PathSegment'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.PathSegment\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.PathSegment.IsSmoothJoin\n  - System.Windows.Media.PathSegment.IsSmoothJoinProperty\n  - System.Windows.Media.PathSegment.IsStroked\n  - System.Windows.Media.PathSegment.IsStrokedProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: ArcSegment()\n  nameWithType: ArcSegment.ArcSegment()\n  fullName: System.Windows.Media.ArcSegment.ArcSegment()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.ArcSegment\"></xref> class.\n  remarks: \"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.  \\n  \\n For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.  \\n  \\n Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.  \\n  \\n If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction.\"\n  syntax:\n    content: public ArcSegment ();\n    parameters: []\n  overload: System.Windows.Media.ArcSegment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)\n  id: '#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)'\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.ArcSegment\"></xref> class.\n  remarks: \"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.  \\n  \\n For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.  \\n  \\n Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.  \\n  \\n If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction.\"\n  syntax:\n    content: public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The destination point of the arc; the start point of the arc is defined as the current point of the <xref href=\"System.Windows.Media.PathFigure\"></xref> to which the <xref href=\"System.Windows.Media.ArcSegment\"></xref> is added.\n    - id: size\n      type: System.Windows.Size\n      description: The x- and y-radius of the arc. The x-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property, and the y-radius is specified by the <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Height*> property.\n    - id: rotationAngle\n      type: System.Double\n      description: The x-axis rotation of the ellipse.\n    - id: isLargeArc\n      type: System.Boolean\n      description: Whether the arc should be greater than 180 degrees.\n    - id: sweepDirection\n      type: System.Windows.Media.SweepDirection\n      description: Set to <xref href=\"System.Windows.Media.SweepDirection\"></xref> to draw the arc in a positive angle direction; set to <xref href=\"System.Windows.Media.SweepDirection\"></xref> to draw the arc in a negative angle direction.\n    - id: isStroked\n      type: System.Boolean\n      description: Set to `true` to stroke the arc when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, `false`.\n  overload: System.Windows.Media.ArcSegment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.Clone\n  id: Clone\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ArcSegment.Clone()\n  fullName: System.Windows.Media.ArcSegment.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.ArcSegment Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.ArcSegment\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.ArcSegment.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: ArcSegment.CloneCurrentValue()\n  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.ArcSegment\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.ArcSegment CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.ArcSegment\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Media.ArcSegment.CloneCurrentValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: ArcSegment.CreateInstanceCore()\n  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: To be added.\n  overload: System.Windows.Media.ArcSegment.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.IsLargeArc\n  id: IsLargeArc\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: IsLargeArc\n  nameWithType: ArcSegment.IsLargeArc\n  fullName: System.Windows.Media.ArcSegment.IsLargeArc\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that indicates whether the arc should be greater than 180 degrees.\n  remarks: \"For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  IsLargeArc and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.  \\n  \\n Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If IsLargeArc is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.  \\n  \\n The following illustration shows two elliptical arcs that are identical except for their IsLargeArc settings.  \\n  \\n ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png \\\"ArcSegments with different IsLargeArc settings\\\")  \\nArcSegment objects with different IsLargeArc settings  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsLargeArc\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  \\n|Metadata properties set to **true**|None|\"\n  syntax:\n    content: public bool IsLargeArc { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if the arc should be greater than 180 degrees; otherwise, **false**. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.'\n  overload: System.Windows.Media.ArcSegment.IsLargeArc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty\n  id: IsLargeArcProperty\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: IsLargeArcProperty\n  nameWithType: ArcSegment.IsLargeArcProperty\n  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.ArcSegment.IsLargeArc*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsLargeArcProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.Point\n  id: Point\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: Point\n  nameWithType: ArcSegment.Point\n  fullName: System.Windows.Media.ArcSegment.Point\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the endpoint of the elliptical arc.\n  remarks: \"The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.ArcSegment> is added.  \\n  \\n If the arc segment's start point and end point are the same, no arc is drawn.  \\n  \\n For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.  \\n  \\n Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.  \\n  \\n The following illustration shows several elliptical arcs that are identical except for their Point settings.  \\n  \\n ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png \\\"ArcSegments with different Point settings\\\")  \\nSeveral ArcSegment objects with different Point settings  \\n  \\n<a name=\\\"dependencyPropertyInfo_Point\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.ArcSegment.PointProperty>|  \\n|Metadata properties set to **true**|None|\"\n  syntax:\n    content: public System.Windows.Point Point { get; set; }\n    return:\n      type: System.Windows.Point\n      description: The point to which the arc is drawn. The default value is (0,0).\n  overload: System.Windows.Media.ArcSegment.Point*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.PointProperty\n  id: PointProperty\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: PointProperty\n  nameWithType: ArcSegment.PointProperty\n  fullName: System.Windows.Media.ArcSegment.PointProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.ArcSegment.Point*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PointProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.RotationAngle\n  id: RotationAngle\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: RotationAngle\n  nameWithType: ArcSegment.RotationAngle\n  fullName: System.Windows.Media.ArcSegment.RotationAngle\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.\n  remarks: \"The following illustration shows several elliptical arcs that are identical except for their RotationAngle settings.  \\n  \\n ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png \\\"ArcSegments with different RotationAngle settings\\\")  \\nSeveral ArcSegment objects with different RotationAngle settings  \\n  \\n Note that, if the arc's width and height are the same, setting this property has no effect.  \\n  \\n<a name=\\\"dependencyPropertyInfo_RotationAngle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  \\n|Metadata properties set to **true**|None|\"\n  syntax:\n    content: public double RotationAngle { get; set; }\n    return:\n      type: System.Double\n      description: The amount (in degrees) by which the ellipse is rotated about the x-axis. The default value is 0.\n  overload: System.Windows.Media.ArcSegment.RotationAngle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.RotationAngleProperty\n  id: RotationAngleProperty\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: RotationAngleProperty\n  nameWithType: ArcSegment.RotationAngleProperty\n  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the  <xref:System.Windows.Media.ArcSegment.RotationAngle*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty RotationAngleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.Size\n  id: Size\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: Size\n  nameWithType: ArcSegment.Size\n  fullName: System.Windows.Media.ArcSegment.Size\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the x- and y-radius of the arc as a <xref href=\"System.Windows.Size\"></xref> structure.\n  remarks: \"The following illustration shows several elliptical arcs that are identical except for their Size settings.  \\n  \\n ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png \\\"ArcSegments with different Size settings\\\")  \\nSeveral ArcSegment objects with different Size settings  \\n  \\n<a name=\\\"dependencyPropertyInfo_Size\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  \\n|Metadata properties set to **true**|None|\"\n  syntax:\n    content: public System.Windows.Size Size { get; set; }\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that describes the x- and y-radius of the elliptical arc. The <xref href=\"System.Windows.Size\"></xref> structure's <xref:System.Windows.Size.Width*> property specifies the arc's x-radius; its <xref:System.Windows.Size.Height*> property specifies the arc's y-radius. The default value is 0,0.\n  overload: System.Windows.Media.ArcSegment.Size*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.SizeProperty\n  id: SizeProperty\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: SizeProperty\n  nameWithType: ArcSegment.SizeProperty\n  fullName: System.Windows.Media.ArcSegment.SizeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.ArcSegment.Size*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SizeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.SweepDirection\n  id: SweepDirection\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: SweepDirection\n  nameWithType: ArcSegment.SweepDirection\n  fullName: System.Windows.Media.ArcSegment.SweepDirection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that specifies whether the arc is drawn in the <xref href=\"System.Windows.Media.SweepDirection\"></xref> or <xref href=\"System.Windows.Media.SweepDirection\"></xref> direction.\n  remarks: \"For an <xref:System.Windows.Media.ArcSegment> with a given <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, start point, and end <xref:System.Windows.Media.ArcSegment.Point%2A>, four different arcs are possible. Specifying the <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> property reduces the number of possible arcs to two: an arc drawn from the start point to the end <xref:System.Windows.Media.ArcSegment.Point%2A> in a <xref:System.Windows.Media.SweepDirection> direction and an arc drawn from the start point to the end point in a <xref:System.Windows.Media.SweepDirection> direction.  \\n  \\n The following illustration shows two elliptical arcs that are identical except for their SweepDirection settings.  \\n  \\n ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png \\\"ArcSegments with different SweepDirection settings\\\")  \\nArcSegment objects with different SweepDirection settings  \\n  \\n<a name=\\\"dependencyPropertyInfo_SweepDirection\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  \\n|Metadata properties set to **true**|None|\"\n  syntax:\n    content: public System.Windows.Media.SweepDirection SweepDirection { get; set; }\n    return:\n      type: System.Windows.Media.SweepDirection\n      description: A value that specifies the direction in which the arc is drawn. The default value is <xref href=\"System.Windows.Media.SweepDirection\"></xref>.\n  overload: System.Windows.Media.ArcSegment.SweepDirection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty\n  id: SweepDirectionProperty\n  parent: System.Windows.Media.ArcSegment\n  langs:\n  - csharp\n  name: SweepDirectionProperty\n  nameWithType: ArcSegment.SweepDirectionProperty\n  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.ArcSegment.SweepDirection*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SweepDirectionProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.PathSegment\n  isExternal: false\n  name: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.ArcSegment.#ctor\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: ArcSegment()\n  nameWithType: ArcSegment.ArcSegment()\n  fullName: System.Windows.Media.ArcSegment.ArcSegment()\n- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.SweepDirection\n  parent: System.Windows.Media\n  isExternal: false\n  name: SweepDirection\n  nameWithType: SweepDirection\n  fullName: System.Windows.Media.SweepDirection\n- uid: System.Windows.Media.ArcSegment.Clone\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Clone()\n  nameWithType: ArcSegment.Clone()\n  fullName: System.Windows.Media.ArcSegment.Clone()\n- uid: System.Windows.Media.ArcSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: ArcSegment\n  nameWithType: ArcSegment\n  fullName: System.Windows.Media.ArcSegment\n- uid: System.Windows.Media.ArcSegment.CloneCurrentValue\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: ArcSegment.CloneCurrentValue()\n  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()\n- uid: System.Windows.Media.ArcSegment.CreateInstanceCore\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: ArcSegment.CreateInstanceCore()\n  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.ArcSegment.IsLargeArc\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: IsLargeArc\n  nameWithType: ArcSegment.IsLargeArc\n  fullName: System.Windows.Media.ArcSegment.IsLargeArc\n- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: IsLargeArcProperty\n  nameWithType: ArcSegment.IsLargeArcProperty\n  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.ArcSegment.Point\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Point\n  nameWithType: ArcSegment.Point\n  fullName: System.Windows.Media.ArcSegment.Point\n- uid: System.Windows.Media.ArcSegment.PointProperty\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: PointProperty\n  nameWithType: ArcSegment.PointProperty\n  fullName: System.Windows.Media.ArcSegment.PointProperty\n- uid: System.Windows.Media.ArcSegment.RotationAngle\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: RotationAngle\n  nameWithType: ArcSegment.RotationAngle\n  fullName: System.Windows.Media.ArcSegment.RotationAngle\n- uid: System.Windows.Media.ArcSegment.RotationAngleProperty\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: RotationAngleProperty\n  nameWithType: ArcSegment.RotationAngleProperty\n  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty\n- uid: System.Windows.Media.ArcSegment.Size\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Size\n  nameWithType: ArcSegment.Size\n  fullName: System.Windows.Media.ArcSegment.Size\n- uid: System.Windows.Media.ArcSegment.SizeProperty\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: SizeProperty\n  nameWithType: ArcSegment.SizeProperty\n  fullName: System.Windows.Media.ArcSegment.SizeProperty\n- uid: System.Windows.Media.ArcSegment.SweepDirection\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: SweepDirection\n  nameWithType: ArcSegment.SweepDirection\n  fullName: System.Windows.Media.ArcSegment.SweepDirection\n- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: SweepDirectionProperty\n  nameWithType: ArcSegment.SweepDirectionProperty\n  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty\n- uid: System.Windows.Media.ArcSegment.#ctor*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: ArcSegment\n  nameWithType: ArcSegment.ArcSegment\n- uid: System.Windows.Media.ArcSegment.Clone*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Clone\n  nameWithType: ArcSegment.Clone\n- uid: System.Windows.Media.ArcSegment.CloneCurrentValue*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: ArcSegment.CloneCurrentValue\n- uid: System.Windows.Media.ArcSegment.CreateInstanceCore*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: ArcSegment.CreateInstanceCore\n- uid: System.Windows.Media.ArcSegment.IsLargeArc*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: IsLargeArc\n  nameWithType: ArcSegment.IsLargeArc\n- uid: System.Windows.Media.ArcSegment.Point*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Point\n  nameWithType: ArcSegment.Point\n- uid: System.Windows.Media.ArcSegment.RotationAngle*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: RotationAngle\n  nameWithType: ArcSegment.RotationAngle\n- uid: System.Windows.Media.ArcSegment.Size*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: Size\n  nameWithType: ArcSegment.Size\n- uid: System.Windows.Media.ArcSegment.SweepDirection*\n  parent: System.Windows.Media.ArcSegment\n  isExternal: false\n  name: SweepDirection\n  nameWithType: ArcSegment.SweepDirection\n"}