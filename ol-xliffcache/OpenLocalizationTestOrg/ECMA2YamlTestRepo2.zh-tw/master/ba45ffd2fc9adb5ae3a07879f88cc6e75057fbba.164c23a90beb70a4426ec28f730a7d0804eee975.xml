{"nodes":[{"pos":[1426,1558],"content":"Specifies the values that define a peer-to-peer PeerName object. A peer name is typically a string used to identify a peer resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the values that define a peer-to-peer PeerName object. A peer name is typically a string used to identify a peer resource.","pos":[0,132],"nodes":[{"content":"Specifies the values that define a peer-to-peer PeerName object.","pos":[0,64]},{"content":"A peer name is typically a string used to identify a peer resource.","pos":[65,132]}]}]},{"pos":[2260,2416],"content":"Initializes a new object of type <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the supplied fully qualified peer name &lt;xref:System.String&gt; value.","needQuote":true,"needEscape":true,"source":"Initializes a new object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> with the supplied fully qualified peer name <xref:System.String> value."},{"pos":[2567,2666],"content":"Contains the peer name to encode as a <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Contains the peer name to encode as a <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> instance."},{"pos":[2825,2926],"content":"The &lt;xref:System.String&gt; provided is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.String> provided is not a valid <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[3029,3121],"content":"<ph id=\"ph1\">&lt;code&gt;remotePeerName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>remotePeerName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3758,3935],"content":"Populates a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the data needed to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[3947,4009],"content":"This constructor is required for deserialization of this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is required for deserialization of this type.","pos":[0,62]}]},{"pos":[4271,4351],"content":"Reference to the object that holds the data needed to deserialize this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reference to the object that holds the data needed to deserialize this instance.","pos":[0,80]}]},{"pos":[4447,4561],"content":"Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.","pos":[0,114],"nodes":[{"content":"Context that provides the means for deserializing the data.","pos":[0,59]},{"content":"Also referred to as the source of the serialized data.","pos":[60,114]}]}]},{"pos":[4728,4816],"content":"One or more parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5320,5412],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> class."},{"pos":[5425,5854],"content":"This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer. It also specifies whether the peer name is secured or unsecured.       This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer. It also specifies whether the peer name is secured or unsecured.       This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.","pos":[0,427],"nodes":[{"content":"This constructor returns an object of type &lt;xref:System.Net.PeerToPeer.PeerName&gt; that contains the fully qualified name of the peer.","pos":[0,132],"source":"This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer."},{"content":"It also specifies whether the peer name is secured or unsecured.","pos":[133,197]},{"content":"This instance uses the default peer identity for the current user and the specified &lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;, in addition to the type of peer name to create with the specified classifier and type.","pos":[204,427],"source":"       This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type."}]}]},{"pos":[6047,6163],"content":"&lt;xref:System.String&gt; that contains the Peer Name to encode as a <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref:System.String> that contains the Peer Name to encode as a <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[6253,6374],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that specifies the type of peer name to create.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Net.PeerToPeer.PeerNameType\"></xref> enumeration value that specifies the type of peer name to create."},{"pos":[6533,6627],"content":"The <xref:System.Net.PeerToPeer.PeerName.Classifier*> includes one or more illegal characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.PeerToPeer.PeerName.Classifier*&gt; includes one or more illegal characters.","pos":[0,94],"source":"The <xref:System.Net.PeerToPeer.PeerName.Classifier*> includes one or more illegal characters."}]},{"pos":[6730,6818],"content":"One or more parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6948,7166],"content":"-   The Default Identity used as the basis of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be retrieved.      -   The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">-</ph>   The Default Identity used as the basis of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> could not be retrieved.","pos":[0,125],"source":"-   The Default Identity used as the basis of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be retrieved."},{"content":"-   The <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> could not be created.","pos":[131,212],"source":"      -   The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created."}]},{"pos":[7514,7632],"content":"Returns a string that specifies the Authority used by this <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that specifies the Authority used by this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[7645,7942],"content":"Only the owner, or peer host, can register a secured peer name. A peer name is considered secured if it is backed by a self-signed certificate.       Peer names are case-sensitive and the format of a peer name is: *Authority.Classifier*. For example, \"0.MyPeerName\" is a well-formed peer name.","needQuote":false,"needEscape":true,"nodes":[{"content":"Only the owner, or peer host, can register a secured peer name.","pos":[0,63]},{"content":"A peer name is considered secured if it is backed by a self-signed certificate.","pos":[64,143]},{"content":"Peer names are case-sensitive and the format of a peer name is: <bpt id=\"p1\">*</bpt>Authority.Classifier<ept id=\"p1\">*</ept>.","pos":[150,237],"source":"       Peer names are case-sensitive and the format of a peer name is: *Authority.Classifier*."},{"content":"For example, \"0.MyPeerName\" is a well-formed peer name.","pos":[238,293]}]},{"pos":[8057,8342],"content":"The string which contains the authentication portion of the specified <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>. For secured peer names, this property contains the public key as a forty-character hexadecimal string. For unsecured peer names, this property is set to zero (0).","needQuote":true,"needEscape":true,"nodes":[{"content":"The string which contains the authentication portion of the specified <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,122],"source":"The string which contains the authentication portion of the specified <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"content":"For secured peer names, this property contains the public key as a forty-character hexadecimal string.","pos":[123,225]},{"content":"For unsecured peer names, this property is set to zero (0).","pos":[226,285]}]},{"pos":[8765,8882],"content":"Returns a string that contains the classifier for a peer-to-peer <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a string that contains the classifier for a peer-to-peer <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[9415,9908],"content":"The string which contains the classifier portion used to identify a peer name for <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> or resolution within a PNRP <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>.       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The string which contains the classifier portion used to identify a peer name for <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or resolution within a PNRP <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,223],"source":"The string which contains the classifier portion used to identify a peer name for <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> or resolution within a PNRP <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>."},{"content":"Unless explicitly specified, the default value for all properties is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for reference types and zero (0) for properties of type <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[230,475],"source":"       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>."}]},{"pos":[10445,10578],"content":"Creates a new instance of the specified <xref:System.Net.PeerToPeer.PeerName.PeerHostName*> object with the specified peer host name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the specified &lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName*&gt; object with the specified peer host name.","pos":[0,133],"source":"Creates a new instance of the specified <xref:System.Net.PeerToPeer.PeerName.PeerHostName*> object with the specified peer host name."}]},{"pos":[10591,11102],"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.       This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property. This peer name is not associated with the identity of the calling node.","needQuote":false,"needEscape":true,"nodes":[{"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.       This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property. This peer name is not associated with the identity of the calling node.","pos":[0,507],"nodes":[{"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.","pos":[0,271]},{"content":"This method can be used to create a &lt;xref:System.Net.PeerToPeer.PeerName&gt; object based on the &lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A&gt; property.","pos":[278,435],"source":"       This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property."},{"content":"This peer name is not associated with the identity of the calling node.","pos":[436,507]}]}]},{"pos":[11302,11353],"content":"A string that contains the DNS-qualified host name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the DNS-qualified host name.","pos":[0,51]}]},{"pos":[11428,11534],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the specified peer host name.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that represents the specified peer host name."},{"pos":[11710,11781],"content":"The <xref:System.String> provided is not a valid peer host name string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; provided is not a valid peer host name string.","pos":[0,71],"source":"The <xref:System.String> provided is not a valid peer host name string."}]},{"pos":[11884,12013],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName.PeerHostName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Net.PeerToPeer.PeerName.PeerHostName\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12142,12286],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> could not be created from the supplied &lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName*&gt;","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created from the supplied <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"},{"pos":[12839,13104],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by replacing the &lt;xref:System.Net.PeerToPeer.PeerName.Classifier*&gt; field defined on the supplied <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object with the specified classifier string value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> by replacing the <xref:System.Net.PeerToPeer.PeerName.Classifier*> field defined on the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object with the specified classifier string value."},{"pos":[13116,13442],"content":"The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> is appended to the existing <xref:System.Net.PeerToPeer.PeerName.Authority%2A> portion of the <xref:System.Net.PeerToPeer.PeerName>. This string is no more than 149 characters long, including the `null` terminator. Specify `null` to return the peer name of the identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt; is appended to the existing &lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt; portion of the &lt;xref:System.Net.PeerToPeer.PeerName&gt;.","pos":[0,188],"source":"The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> is appended to the existing <xref:System.Net.PeerToPeer.PeerName.Authority%2A> portion of the <xref:System.Net.PeerToPeer.PeerName>."},{"content":"This string is no more than 149 characters long, including the <ph id=\"ph1\">`null`</ph> terminator.","pos":[189,270],"source":" This string is no more than 149 characters long, including the `null` terminator."},{"content":"Specify <ph id=\"ph1\">`null`</ph> to return the peer name of the identity.","pos":[271,326],"source":" Specify `null` to return the peer name of the identity."}]},{"pos":[13693,13804],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object on which to set the new classifier string value.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object on which to set the new classifier string value."},{"pos":[13871,14000],"content":"The &lt;xref:System.Net.PeerToPeer.PeerName.Classifier*&gt; to set on the returned <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Net.PeerToPeer.PeerName.Classifier*> to set on the returned <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[14075,14179],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the updated classifier.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that contains the updated classifier."},{"pos":[14355,14425],"content":"The <xref:System.String> provided is not a valid peer name classifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; provided is not a valid peer name classifier.","pos":[0,70],"source":"The <xref:System.String> provided is not a valid peer name classifier."}]},{"pos":[14528,14616],"content":"One or more parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14745,14889],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> could not be created from the supplied &lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName*&gt;","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created from the supplied <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"},{"pos":[15313,15445],"content":"Performs a case-sensitive comparison of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the specified peer name.","needQuote":true,"needEscape":true,"source":"Performs a case-sensitive comparison of the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> and the specified peer name."},{"pos":[15458,15832],"content":"Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components.       No normalizations are performed on the strings prior to comparison.  All normalization should have been completed while or before constructing the peer name objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components.       No normalizations are performed on the strings prior to comparison.  All normalization should have been completed while or before constructing the peer name objects.","pos":[0,372],"nodes":[{"content":"Two peer names are considered equal if they contain identical characters in their &lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt; and &lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt; components.","pos":[0,200],"source":"Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components."},{"content":"No normalizations are performed on the strings prior to comparison.","pos":[207,274]},{"content":"All normalization should have been completed while or before constructing the peer name objects.","pos":[276,372]}]}]},{"pos":[16010,16097],"content":"The peer name to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The peer name to compare with this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[16157,16666],"content":"Returns <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> identifies the same resource as the current peer name object; otherwise this method returns <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.       This method also returns <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if <code>other</code> is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> identifies the same resource as the current peer name object; otherwise this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,293],"source":"Returns <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the specified <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> identifies the same resource as the current peer name object; otherwise this method returns <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"content":"This method also returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[300,481],"source":"       This method also returns <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> if <code>other</code> is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[17119,17252],"content":"Determines whether the content of this <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to the content of another object.","needQuote":true,"needEscape":true,"source":"Determines whether the content of this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> is equal to the content of another object."},{"pos":[17264,17346],"content":"This method inherits the default signature and behavior from <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method inherits the default signature and behavior from &lt;xref:System.Object&gt;.","pos":[0,82],"source":"This method inherits the default signature and behavior from <xref:System.Object>."}]},{"pos":[17487,17592],"content":"The &lt;xref:System.Object&gt; to compare with the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> to compare with the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[17651,17900],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the comparison object contain the same information; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> and the comparison object contain the same information; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18329,18384],"content":"Overrides the <xref:System.Object.GetHashCode*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the &lt;xref:System.Object.GetHashCode*&gt; method.","pos":[0,55],"source":"Overrides the <xref:System.Object.GetHashCode*> method."}]},{"pos":[18396,18487],"content":"Two objects are considered equal if this method returns the same hashcode for both of them.","needQuote":true,"needEscape":true,"nodes":[{"content":"Two objects are considered equal if this method returns the same hashcode for both of them.","pos":[0,91]}]},{"pos":[18622,18670],"content":"A hashcode for the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hashcode for the current &lt;xref:System.Object&gt;.","pos":[0,48],"source":"A hashcode for the current <xref:System.Object>."}]},{"pos":[19404,19539],"content":"Populates a serialization information object with the data needed to serialize the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Populates a serialization information object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."},{"pos":[19551,19664],"content":"A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A derived type must call the base type &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt; method.","pos":[0,113],"source":"A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method."}]},{"pos":[19944,20049],"content":"Holds the serialized data associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[20145,20275],"content":"Contains the destination for the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[20697,20769],"content":"Gets a Boolean value that specifies whether this is a secured peer name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value that specifies whether this is a secured peer name.","pos":[0,72]}]},{"pos":[20782,20928],"content":"A peer name is considered secured if it is backed by a self-signed certificate.       Only the owner can register a secured peer name with PNRP.","needQuote":false,"needEscape":true,"nodes":[{"content":"A peer name is considered secured if it is backed by a self-signed certificate.       Only the owner can register a secured peer name with PNRP.","pos":[0,144],"nodes":[{"content":"A peer name is considered secured if it is backed by a self-signed certificate.","pos":[0,79]},{"content":"Only the owner can register a secured peer name with PNRP.","pos":[86,144]}]}]},{"pos":[21043,21687],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this peer name is secured with a private key/ public key pair. Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine. Otherwise, if <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the peer name has no associated identity.       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this peer name is secured with a private key/ public key pair.","pos":[0,127],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this peer name is secured with a private key/ public key pair."},{"content":"Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine.","pos":[128,246]},{"content":"Otherwise, if <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the peer name has no associated identity.","pos":[247,366],"source":" Otherwise, if <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the peer name has no associated identity."},{"content":"Unless explicitly specified, the default value for all properties is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for reference types and zero (0) for properties of type <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[373,618],"source":"       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>."}]},{"pos":[22121,22380],"content":"Gets the name of the peer-to-peer host. This is a DNS-encoded version of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> which is equivalent to a PeerHostName in that they are both identifiers.  The difference between the two is visual representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the peer-to-peer host.","pos":[0,39]},{"content":"This is a DNS-encoded version of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> which is equivalent to a PeerHostName in that they are both identifiers.","pos":[40,201],"source":" This is a DNS-encoded version of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> which is equivalent to a PeerHostName in that they are both identifiers."},{"content":"The difference between the two is visual representation.","pos":[203,259]}]},{"pos":[22393,23018],"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.       The PeerHostName property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.  The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>. Also, a peer may simultaneously be hosted by more than one peer host.","needQuote":false,"needEscape":true,"nodes":[{"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.       The PeerHostName property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.  The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>. Also, a peer may simultaneously be hosted by more than one peer host.","pos":[0,621],"nodes":[{"content":"The peer-to-peer host is the \"seed node\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.","pos":[0,271]},{"content":"The PeerHostName property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.","pos":[278,431]},{"content":"The host of a peer-to-peer networking session may collect peers into more than one &lt;xref:System.Net.PeerToPeer.Cloud&gt;.","pos":[433,551],"source":"  The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>."},{"content":"Also, a peer may simultaneously be hosted by more than one peer host.","pos":[552,621]}]}]},{"pos":[23136,23358],"content":"A <xref:System.String> value that is the name of the peer-to-peer host. Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; value that is the name of the peer-to-peer host.","pos":[0,71],"source":"A <xref:System.String> value that is the name of the peer-to-peer host."},{"content":"Unless explicitly specified, the default value for all properties is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for reference types.","pos":[72,222],"source":" Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types."}]},{"pos":[24322,24517],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> instance."},{"pos":[24793,24898],"content":"Holds the serialized data associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[24994,25124],"content":"Contains the destination for the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[25588,25694],"content":"Returns a string representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string representation of the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."},{"pos":[25706,25788],"content":"This method inherits the default signature and behavior from <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method inherits the default signature and behavior from &lt;xref:System.Object&gt;.","pos":[0,82],"source":"This method inherits the default signature and behavior from <xref:System.Object>."}]},{"pos":[25925,26110],"content":"A string that represents the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>, and specified in the following format: *Authority.Classifier*. For example, \"0.MyInternetPeer\".","needQuote":false,"needEscape":true,"nodes":[{"content":"A string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and specified in the following format: <bpt id=\"p2\">*</bpt>Authority.Classifier<ept id=\"p2\">*</ept>.","pos":[0,152],"source":"A string that represents the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>, and specified in the following format: *Authority.Classifier*."},{"content":"For example, \"0.MyInternetPeer\".","pos":[153,185]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.PeerName\n  id: PeerName\n  children:\n  - System.Net.PeerToPeer.PeerName.#ctor(System.String)\n  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)\n  - System.Net.PeerToPeer.PeerName.Authority\n  - System.Net.PeerToPeer.PeerName.Classifier\n  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)\n  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)\n  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)\n  - System.Net.PeerToPeer.PeerName.Equals(System.Object)\n  - System.Net.PeerToPeer.PeerName.GetHashCode\n  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.PeerToPeer.PeerName.IsSecured\n  - System.Net.PeerToPeer.PeerName.PeerHostName\n  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.PeerToPeer.PeerName.ToString\n  langs:\n  - csharp\n  name: PeerName\n  nameWithType: PeerName\n  fullName: System.Net.PeerToPeer.PeerName\n  type: Class\n  summary: Specifies the values that define a peer-to-peer PeerName object. A peer name is typically a string used to identify a peer resource.\n  syntax:\n    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Net.PeerToPeer.PeerName>\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: PeerName(String)\n  nameWithType: PeerName.PeerName(String)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> with the supplied fully qualified peer name <xref:System.String> value.\n  syntax:\n    content: public PeerName (string remotePeerName);\n    parameters:\n    - id: remotePeerName\n      type: System.String\n      description: Contains the peer name to encode as a <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> instance.\n  overload: System.Net.PeerToPeer.PeerName.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.String> provided is not a valid <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>remotePeerName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: PeerName(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n  remarks: This constructor is required for deserialization of this type.\n  syntax:\n    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Reference to the object that holds the data needed to deserialize this instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.\n  overload: System.Net.PeerToPeer.PeerName.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)\n  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: PeerName(String,PeerNameType)\n  nameWithType: PeerName.PeerName(String,PeerNameType)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> class.\n  remarks: \"This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer. It also specifies whether the peer name is secured or unsecured.  \\n  \\n This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.\"\n  syntax:\n    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);\n    parameters:\n    - id: classifier\n      type: System.String\n      description: <xref:System.String> that contains the Peer Name to encode as a <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n    - id: peerNameType\n      type: System.Net.PeerToPeer.PeerNameType\n      description: <xref href=\"System.Net.PeerToPeer.PeerNameType\"></xref> enumeration value that specifies the type of peer name to create.\n  overload: System.Net.PeerToPeer.PeerName.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.Net.PeerToPeer.PeerName.Classifier*> includes one or more illegal characters.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: \"-   The Default Identity used as the basis of the <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> could not be retrieved.  \\n  \\n-   The <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> could not be created.\"\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.Authority\n  id: Authority\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: Authority\n  nameWithType: PeerName.Authority\n  fullName: System.Net.PeerToPeer.PeerName.Authority\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Returns a string that specifies the Authority used by this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n  remarks: \"Only the owner, or peer host, can register a secured peer name. A peer name is considered secured if it is backed by a self-signed certificate.  \\n  \\n Peer names are case-sensitive and the format of a peer name is: *Authority.Classifier*. For example, \\\"0.MyPeerName\\\" is a well-formed peer name.\"\n  syntax:\n    content: public string Authority { get; }\n    return:\n      type: System.String\n      description: The string which contains the authentication portion of the specified <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>. For secured peer names, this property contains the public key as a forty-character hexadecimal string. For unsecured peer names, this property is set to zero (0).\n  overload: System.Net.PeerToPeer.PeerName.Authority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.Classifier\n  id: Classifier\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: Classifier\n  nameWithType: PeerName.Classifier\n  fullName: System.Net.PeerToPeer.PeerName.Classifier\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Returns a string that contains the classifier for a peer-to-peer <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n  remarks: \"The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\\\"\\\\0\\\") terminator. Peer name strings are case-sensitive.  \\n  \\n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional.\"\n  syntax:\n    content: public string Classifier { get; }\n    return:\n      type: System.String\n      description: \"The string which contains the classifier portion used to identify a peer name for <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration\\\"></xref> or resolution within a PNRP <xref href=\\\"System.Net.PeerToPeer.Cloud\\\"></xref>.  \\n  \\n Unless explicitly specified, the default value for all properties is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> for reference types and zero (0) for properties of type <xref uid=\\\"langword_csharp_int\\\" name=\\\"int\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.PeerToPeer.PeerName.Classifier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)\n  id: CreateFromPeerHostName(System.String)\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: CreateFromPeerHostName(String)\n  nameWithType: PeerName.CreateFromPeerHostName(String)\n  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Creates a new instance of the specified <xref:System.Net.PeerToPeer.PeerName.PeerHostName*> object with the specified peer host name.\n  remarks: \"The peer-to-peer host is the \\\"seed node\\\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.  \\n  \\n This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property. This peer name is not associated with the identity of the calling node.\"\n  syntax:\n    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);\n    parameters:\n    - id: peerHostName\n      type: System.String\n      description: A string that contains the DNS-qualified host name.\n    return:\n      type: System.Net.PeerToPeer.PeerName\n      description: A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that represents the specified peer host name.\n  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.String> provided is not a valid peer host name string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <xref href=\"System.Net.PeerToPeer.PeerName.PeerHostName\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created from the supplied <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)\n  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: CreateRelativePeerName(PeerName,String)\n  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)\n  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Creates a new <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> by replacing the <xref:System.Net.PeerToPeer.PeerName.Classifier*> field defined on the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object with the specified classifier string value.\n  remarks: The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> is appended to the existing <xref:System.Net.PeerToPeer.PeerName.Authority%2A> portion of the <xref:System.Net.PeerToPeer.PeerName>. This string is no more than 149 characters long, including the `null` terminator. Specify `null` to return the peer name of the identity.\n  syntax:\n    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);\n    parameters:\n    - id: peerName\n      type: System.Net.PeerToPeer.PeerName\n      description: The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object on which to set the new classifier string value.\n    - id: classifier\n      type: System.String\n      description: The <xref:System.Net.PeerToPeer.PeerName.Classifier*> to set on the returned <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n    return:\n      type: System.Net.PeerToPeer.PeerName\n      description: The new <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that contains the updated classifier.\n  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.String> provided is not a valid peer name classifier.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: A <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> could not be created from the supplied <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)\n  id: Equals(System.Net.PeerToPeer.PeerName)\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: Equals(PeerName)\n  nameWithType: PeerName.Equals(PeerName)\n  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Performs a case-sensitive comparison of the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> and the specified peer name.\n  remarks: \"Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components.  \\n  \\n No normalizations are performed on the strings prior to comparison.  All normalization should have been completed while or before constructing the peer name objects.\"\n  syntax:\n    content: public bool Equals (System.Net.PeerToPeer.PeerName other);\n    parameters:\n    - id: other\n      type: System.Net.PeerToPeer.PeerName\n      description: The peer name to compare with this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n    return:\n      type: System.Boolean\n      description: \"Returns <xref uid=\\\"langword_csharp_True\\\" name=\\\"True\\\" href=\\\"\\\"></xref> if the specified <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> identifies the same resource as the current peer name object; otherwise this method returns <xref uid=\\\"langword_csharp_False\\\" name=\\\"False\\\" href=\\\"\\\"></xref>.  \\n  \\n This method also returns <xref uid=\\\"langword_csharp_False\\\" name=\\\"False\\\" href=\\\"\\\"></xref> if <code>other</code> is set to <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.PeerToPeer.PeerName.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PeerName.Equals(Object)\n  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Determines whether the content of this <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> is equal to the content of another object.\n  remarks: This method inherits the default signature and behavior from <xref:System.Object>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> and the comparison object contain the same information; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.PeerToPeer.PeerName.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.GetHashCode\n  id: GetHashCode\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PeerName.GetHashCode()\n  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Overrides the <xref:System.Object.GetHashCode*> method.\n  remarks: Two objects are considered equal if this method returns the same hashcode for both of them.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hashcode for the current <xref:System.Object>.\n  overload: System.Net.PeerToPeer.PeerName.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Populates a serialization information object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n  remarks: A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method.\n  syntax:\n    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n  overload: System.Net.PeerToPeer.PeerName.GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.IsSecured\n  id: IsSecured\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: IsSecured\n  nameWithType: PeerName.IsSecured\n  fullName: System.Net.PeerToPeer.PeerName.IsSecured\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets a Boolean value that specifies whether this is a secured peer name.\n  remarks: \"A peer name is considered secured if it is backed by a self-signed certificate.  \\n  \\n Only the owner can register a secured peer name with PNRP.\"\n  syntax:\n    content: public bool IsSecured { get; }\n    return:\n      type: System.Boolean\n      description: \"If <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, this peer name is secured with a private key/ public key pair. Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine. Otherwise, if <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, the peer name has no associated identity.  \\n  \\n Unless explicitly specified, the default value for all properties is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> for reference types and zero (0) for properties of type <xref uid=\\\"langword_csharp_int\\\" name=\\\"int\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.PeerToPeer.PeerName.IsSecured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.PeerHostName\n  id: PeerHostName\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: PeerHostName\n  nameWithType: PeerName.PeerHostName\n  fullName: System.Net.PeerToPeer.PeerName.PeerHostName\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets the name of the peer-to-peer host. This is a DNS-encoded version of the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> which is equivalent to a PeerHostName in that they are both identifiers.  The difference between the two is visual representation.\n  remarks: \"The peer-to-peer host is the \\\"seed node\\\" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.  \\n  \\n The PeerHostName property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.  The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>. Also, a peer may simultaneously be hosted by more than one peer host.\"\n  syntax:\n    content: public string PeerHostName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> value that is the name of the peer-to-peer host. Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types.\n  overload: System.Net.PeerToPeer.PeerName.PeerHostName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> instance.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerName.ToString\n  id: ToString\n  parent: System.Net.PeerToPeer.PeerName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PeerName.ToString()\n  fullName: System.Net.PeerToPeer.PeerName.ToString()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Returns a string representation of the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.\n  remarks: This method inherits the default signature and behavior from <xref:System.Object>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: 'A string that represents the current <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>, and specified in the following format: *Authority.Classifier*. For example, \"0.MyInternetPeer\".'\n  overload: System.Net.PeerToPeer.PeerName.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.PeerToPeer.PeerToPeerException\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerToPeerException\n  nameWithType: PeerToPeerException\n  fullName: System.Net.PeerToPeer.PeerToPeerException\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerName(String)\n  nameWithType: PeerName.PeerName(String)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerName(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerName(String,PeerNameType)\n  nameWithType: PeerName.PeerName(String,PeerNameType)\n  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)\n- uid: System.Net.PeerToPeer.PeerNameType\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerNameType\n  nameWithType: PeerNameType\n  fullName: System.Net.PeerToPeer.PeerNameType\n- uid: System.Net.PeerToPeer.PeerName.Authority\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Authority\n  nameWithType: PeerName.Authority\n  fullName: System.Net.PeerToPeer.PeerName.Authority\n- uid: System.Net.PeerToPeer.PeerName.Classifier\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Classifier\n  nameWithType: PeerName.Classifier\n  fullName: System.Net.PeerToPeer.PeerName.Classifier\n- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: CreateFromPeerHostName(String)\n  nameWithType: PeerName.CreateFromPeerHostName(String)\n  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)\n- uid: System.Net.PeerToPeer.PeerName\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerName\n  nameWithType: PeerName\n  fullName: System.Net.PeerToPeer.PeerName\n- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: CreateRelativePeerName(PeerName,String)\n  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)\n  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)\n- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Equals(PeerName)\n  nameWithType: PeerName.Equals(PeerName)\n  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PeerName.Equals(Object)\n  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)\n- uid: System.Net.PeerToPeer.PeerName.GetHashCode\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PeerName.GetHashCode()\n  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Net.PeerToPeer.PeerName.IsSecured\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: IsSecured\n  nameWithType: PeerName.IsSecured\n  fullName: System.Net.PeerToPeer.PeerName.IsSecured\n- uid: System.Net.PeerToPeer.PeerName.PeerHostName\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerHostName\n  nameWithType: PeerName.PeerHostName\n  fullName: System.Net.PeerToPeer.PeerName.PeerHostName\n- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Net.PeerToPeer.PeerName.ToString\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: ToString()\n  nameWithType: PeerName.ToString()\n  fullName: System.Net.PeerToPeer.PeerName.ToString()\n- uid: System.Net.PeerToPeer.PeerName.#ctor*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerName\n  nameWithType: PeerName.PeerName\n- uid: System.Net.PeerToPeer.PeerName.Authority*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Authority\n  nameWithType: PeerName.Authority\n- uid: System.Net.PeerToPeer.PeerName.Classifier*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Classifier\n  nameWithType: PeerName.Classifier\n- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: CreateFromPeerHostName\n  nameWithType: PeerName.CreateFromPeerHostName\n- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: CreateRelativePeerName\n  nameWithType: PeerName.CreateRelativePeerName\n- uid: System.Net.PeerToPeer.PeerName.Equals*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: Equals\n  nameWithType: PeerName.Equals\n- uid: System.Net.PeerToPeer.PeerName.GetHashCode*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PeerName.GetHashCode\n- uid: System.Net.PeerToPeer.PeerName.GetObjectData*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: GetObjectData\n  nameWithType: PeerName.GetObjectData\n- uid: System.Net.PeerToPeer.PeerName.IsSecured*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: IsSecured\n  nameWithType: PeerName.IsSecured\n- uid: System.Net.PeerToPeer.PeerName.PeerHostName*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: PeerHostName\n  nameWithType: PeerName.PeerHostName\n- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData\n- uid: System.Net.PeerToPeer.PeerName.ToString*\n  parent: System.Net.PeerToPeer.PeerName\n  isExternal: false\n  name: ToString\n  nameWithType: PeerName.ToString\n"}