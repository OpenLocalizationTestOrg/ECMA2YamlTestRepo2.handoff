{"nodes":[{"pos":[1181,1227],"content":"Specifies the style and behavior of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the style and behavior of a control.","pos":[0,46]}]},{"pos":[1240,5438],"content":"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.      ```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```       If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT. This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control. You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.       To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`. However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.       If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background. This is not true transparency.      > [!NOTE] >  If there is another control between the control and its parent, the current control will not show the control in the middle.       When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>.       When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event. When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event. Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event. However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values. For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics.       When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key. Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead. This style is set by default. Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.","needQuote":false,"needEscape":true,"nodes":[{"content":"Controls use this enumeration in various properties and methods to specify functionality.","pos":[0,89]},{"content":"A control can enable a style by calling the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to.","pos":[90,291],"source":" A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to."},{"content":"For example, the following line of Visual Basic code would enable double-buffering.","pos":[292,375]},{"content":"<ph id=\"ph1\">```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```</ph>       If the AllPaintingInWmPaint bit is set to <ph id=\"ph2\">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; and &lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt; methods are called directly from the window message WM_PAINT.","pos":[381,748],"source":"```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```       If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT."},{"content":"This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.","pos":[749,855]},{"content":"You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a &lt;xref:System.Windows.Forms.ToolBar&gt; with flat appearance does this.","pos":[856,1067],"source":" You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this."},{"content":"To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id=\"ph1\">`true`</ph>.","pos":[1074,1186],"source":"       To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`."},{"content":"However the preferred method for enabling double buffering, which yields the same result, is to set the &lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt; property for the control to <ph id=\"ph1\">`true`</ph>.","pos":[1187,1380],"source":" However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`."},{"content":"If the SupportsTransparentBackColor bit is set to <ph id=\"ph1\">`true`</ph>, and the &lt;xref:System.Windows.Forms.Control.BackColor%2A&gt; is set to a color whose alpha component is less than 255, &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; will simulate transparency by asking its parent control to paint the background.","pos":[1387,1697],"source":"       If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background."},{"content":"This is not true transparency.","pos":[1698,1728]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If there is another control between the control and its parent, the current control will not show the control in the middle.","pos":[1734,1871],"source":"      > [!NOTE] >  If there is another control between the control and its parent, the current control will not show the control in the middle."},{"content":"When the UserMouse bit is set to <ph id=\"ph1\">`true`</ph>, the following methods are still called: &lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;, and &lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;.","pos":[1878,2503],"source":"       When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>."},{"content":"When the control is clicked, if the StandardClick bit is set to <ph id=\"ph1\">`true`</ph> the &lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; event.","pos":[2510,2765],"source":"       When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event."},{"content":"When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id=\"ph1\">`true`</ph>, the click is passed on to the &lt;xref:System.Windows.Forms.Control.DoubleClick&gt; event.","pos":[2766,2961],"source":" When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event."},{"content":"Then the &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; event.","pos":[2962,3163],"source":" Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event."},{"content":"However, the control can call &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; or &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt; directly regardless of the StandardClick and StandardDoubleClick bit values.","pos":[3164,3373],"source":" However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values."},{"content":"For more information on control click and double click behaviors, see the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; and &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; topics.","pos":[3374,3599],"source":" For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics."},{"content":"When the UseTextForAccessibility bit is set and there is a value in the control's <ph id=\"ph1\">`Text`</ph> property, the value of that control's <ph id=\"ph2\">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.","pos":[3606,3825],"source":"       When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key."},{"content":"Otherwise, the text of the preceding &lt;xref:System.Windows.Forms.Label&gt; control will be used instead.","pos":[3826,3926],"source":" Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead."},{"content":"This style is set by default.","pos":[3927,3956]},{"content":"Certain built-in control types, such as &lt;xref:System.Windows.Forms.TextBox&gt; and &lt;xref:System.Windows.Forms.ComboBox&gt;, reset this style so that the <ph id=\"ph1\">`Text`</ph> property of those controls will not be used by Active Accessibility.","pos":[3957,4179],"source":" Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility."}]},{"pos":[6413,6676],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control ignores the window message WM_ERASEBKGND to reduce flicker.","pos":[0,136],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control ignores the window message WM_ERASEBKGND to reduce flicker."},{"content":"This style should only be applied if the UserPaint bit is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[137,263],"source":" This style should only be applied if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[6799,6811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7198,7576],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control keeps a copy of the text rather than getting it from the <xref:System.Windows.Forms.Control.Handle*> each time it is needed. This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. This behavior improves performance, but makes it difficult to keep the text synchronized.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control keeps a copy of the text rather than getting it from the &lt;xref:System.Windows.Forms.Control.Handle*&gt; each time it is needed.","pos":[0,201],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control keeps a copy of the text rather than getting it from the <xref:System.Windows.Forms.Control.Handle*> each time it is needed."},{"content":"This style defaults to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[202,288],"source":" This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"This behavior improves performance, but makes it difficult to keep the text synchronized.","pos":[289,378]}]},{"pos":[7688,7700],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8122,8227],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control is a container-like control.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is a container-like control."},{"pos":[8346,8358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8760,9201],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set DoubleBuffer to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set UserPaint and AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, drawing is performed in a buffer, and after it completes, the result is output to the screen.","pos":[0,158],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, drawing is performed in a buffer, and after it completes, the result is output to the screen."},{"content":"Double-buffering prevents flicker caused by the redrawing of the control.","pos":[159,232]},{"content":"If you set DoubleBuffer to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, you should also set UserPaint and AllPaintingInWmPaint to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[233,441],"source":" If you set DoubleBuffer to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set UserPaint and AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[9316,9328],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9765,10128],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the <xref:System.Windows.Forms.Control.OnNotifyMessage*> method is called for every message sent to the control's <xref:System.Windows.Forms.Control.WndProc*>. This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. EnableNotifyMessage does not work in partial trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the &lt;xref:System.Windows.Forms.Control.OnNotifyMessage<bpt id=\"p2\">*</bpt>&gt; method is called for every message sent to the control's &lt;xref:System.Windows.Forms.Control.WndProc<ept id=\"p2\">*</ept>&gt;.","pos":[0,224],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the <xref:System.Windows.Forms.Control.OnNotifyMessage*> method is called for every message sent to the control's <xref:System.Windows.Forms.Control.WndProc*>."},{"content":"This style defaults to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[225,311],"source":" This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"EnableNotifyMessage does not work in partial trust.","pos":[312,363]}]},{"pos":[10250,10262],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10659,10979],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Height*> remains unchanged.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control has a fixed height when auto-scaled.","pos":[0,113],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed height when auto-scaled."},{"content":"For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Height*&gt; remains unchanged.","pos":[114,320],"source":" For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Height*> remains unchanged."}]},{"pos":[11093,11105],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11497,11815],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Width*> remains unchanged.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control has a fixed width when auto-scaled.","pos":[0,112],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed width when auto-scaled."},{"content":"For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Width*&gt; remains unchanged.","pos":[113,318],"source":" For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Width*> remains unchanged."}]},{"pos":[11928,11940],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12312,12439],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control is drawn opaque and the background is not painted.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is drawn opaque and the background is not painted."},{"pos":[12548,12560],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13007,13372],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set the AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.","pos":[0,165],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker."},{"content":"If you set this property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, you should also set the AllPaintingInWmPaint to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[166,365],"source":" If you set this property to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set the AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[13496,13508],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13910,14017],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control is redrawn when it is resized.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is redrawn when it is resized."},{"pos":[14132,14144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14536,14631],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control can receive focus.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control can receive focus."},{"pos":[14744,14756],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15163,15329],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control implements the standard <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> behavior.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control implements the standard <xref href=\"System.Windows.Forms.Control.Click\"></xref> behavior."},{"pos":[15445,15457],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15894,16189],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior. This style is ignored if the StandardClick bit is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control implements the standard <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.DoubleClick\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> behavior.","pos":[0,172],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior."},{"content":"This style is ignored if the StandardClick bit is not set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[173,295],"source":" This style is ignored if the StandardClick bit is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[16311,16323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16805,17223],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control accepts a <xref:System.Windows.Forms.Control.BackColor*> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control accepts a &lt;xref:System.Windows.Forms.Control.BackColor*&gt; with an alpha component of less than 255 to simulate transparency.","pos":[0,200],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control accepts a <xref:System.Windows.Forms.Control.BackColor*> with an alpha component of less than 255 to simulate transparency."},{"content":"Transparency will be simulated only if the UserPaint bit is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the parent control is derived from <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[201,418],"source":" Transparency will be simulated only if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>."}]},{"pos":[17354,17366],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17753,17918],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control does its own mouse processing, and mouse events are not handled by the operating system.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control does its own mouse processing, and mouse events are not handled by the operating system."},{"pos":[18030,18042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18429,18809],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control paints itself rather than the operating system doing so. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised. This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the control paints itself rather than the operating system doing so.","pos":[0,133],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control paints itself rather than the operating system doing so."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event is not raised.","pos":[134,281],"source":" If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised."},{"content":"This style only applies to classes derived from <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[282,380],"source":" This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>."}]},{"pos":[18921,18933],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19390,19533],"content":"Specifies that the value of the control's <ph id=\"ph1\">`Text`</ph> property, if set, determines the control's default Active Accessibility name and shortcut key.","needQuote":true,"needEscape":true,"source":"Specifies that the value of the control's `Text` property, if set, determines the control's default Active Accessibility name and shortcut key."},{"pos":[19659,19671],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ControlStyles\n  id: ControlStyles\n  children:\n  - System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  - System.Windows.Forms.ControlStyles.CacheText\n  - System.Windows.Forms.ControlStyles.ContainerControl\n  - System.Windows.Forms.ControlStyles.DoubleBuffer\n  - System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  - System.Windows.Forms.ControlStyles.FixedHeight\n  - System.Windows.Forms.ControlStyles.FixedWidth\n  - System.Windows.Forms.ControlStyles.Opaque\n  - System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  - System.Windows.Forms.ControlStyles.ResizeRedraw\n  - System.Windows.Forms.ControlStyles.Selectable\n  - System.Windows.Forms.ControlStyles.StandardClick\n  - System.Windows.Forms.ControlStyles.StandardDoubleClick\n  - System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  - System.Windows.Forms.ControlStyles.UserMouse\n  - System.Windows.Forms.ControlStyles.UserPaint\n  - System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  langs:\n  - csharp\n  name: ControlStyles\n  nameWithType: ControlStyles\n  fullName: System.Windows.Forms.ControlStyles\n  type: Enum\n  summary: Specifies the style and behavior of a control.\n  remarks: \"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.  \\n  \\n```  \\nmyControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  \\n```  \\n  \\n If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT. This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control. You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.  \\n  \\n To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`. However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.  \\n  \\n If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background. This is not true transparency.  \\n  \\n> [!NOTE]\\n>  If there is another control between the control and its parent, the current control will not show the control in the middle.  \\n  \\n When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>.  \\n  \\n When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event. When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event. Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event. However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values. For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics.  \\n  \\n When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key. Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead. This style is set by default. Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.\"\n  example:\n  - \"The following example demonstrates a use of ControlStyles with the <xref:System.Windows.Forms.Control.StyleChanged> event.  \\n  \\n [!code-vb[Control_StyleChanged#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_20_1.vb)]\\n [!code-cs[Control_StyleChanged#1](~/add/codesnippet/csharp/t-system.windows.forms.c_20_1.cs)]\\n [!code-cpp[Control_StyleChanged#1](~/add/codesnippet/cpp/t-system.windows.forms.c_20_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum ControlStyles\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  id: AllPaintingInWmPaint\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: AllPaintingInWmPaint\n  nameWithType: ControlStyles.AllPaintingInWmPaint\n  fullName: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: AllPaintingInWmPaint\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.CacheText\n  id: CacheText\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: CacheText\n  nameWithType: ControlStyles.CacheText\n  fullName: System.Windows.Forms.ControlStyles.CacheText\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control keeps a copy of the text rather than getting it from the <xref:System.Windows.Forms.Control.Handle*> each time it is needed. This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. This behavior improves performance, but makes it difficult to keep the text synchronized.\n  syntax:\n    content: CacheText\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.ContainerControl\n  id: ContainerControl\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: ContainerControl\n  nameWithType: ControlStyles.ContainerControl\n  fullName: System.Windows.Forms.ControlStyles.ContainerControl\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is a container-like control.\n  syntax:\n    content: ContainerControl\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.DoubleBuffer\n  id: DoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: DoubleBuffer\n  nameWithType: ControlStyles.DoubleBuffer\n  fullName: System.Windows.Forms.ControlStyles.DoubleBuffer\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set DoubleBuffer to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set UserPaint and AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: DoubleBuffer\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  id: EnableNotifyMessage\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: EnableNotifyMessage\n  nameWithType: ControlStyles.EnableNotifyMessage\n  fullName: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the <xref:System.Windows.Forms.Control.OnNotifyMessage*> method is called for every message sent to the control's <xref:System.Windows.Forms.Control.WndProc*>. This style defaults to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. EnableNotifyMessage does not work in partial trust.\n  syntax:\n    content: EnableNotifyMessage\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.FixedHeight\n  id: FixedHeight\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: FixedHeight\n  nameWithType: ControlStyles.FixedHeight\n  fullName: System.Windows.Forms.ControlStyles.FixedHeight\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Height*> remains unchanged.\n  syntax:\n    content: FixedHeight\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.FixedWidth\n  id: FixedWidth\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: FixedWidth\n  nameWithType: ControlStyles.FixedWidth\n  fullName: System.Windows.Forms.ControlStyles.FixedWidth\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref:System.Windows.Forms.Control.Width*> remains unchanged.\n  syntax:\n    content: FixedWidth\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.Opaque\n  id: Opaque\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: Opaque\n  nameWithType: ControlStyles.Opaque\n  fullName: System.Windows.Forms.ControlStyles.Opaque\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is drawn opaque and the background is not painted.\n  syntax:\n    content: Opaque\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  id: OptimizedDoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: OptimizedDoubleBuffer\n  nameWithType: ControlStyles.OptimizedDoubleBuffer\n  fullName: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, you should also set the AllPaintingInWmPaint to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: OptimizedDoubleBuffer\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.ResizeRedraw\n  id: ResizeRedraw\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: ResizeRedraw\n  nameWithType: ControlStyles.ResizeRedraw\n  fullName: System.Windows.Forms.ControlStyles.ResizeRedraw\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control is redrawn when it is resized.\n  syntax:\n    content: ResizeRedraw\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.Selectable\n  id: Selectable\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: Selectable\n  nameWithType: ControlStyles.Selectable\n  fullName: System.Windows.Forms.ControlStyles.Selectable\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control can receive focus.\n  syntax:\n    content: Selectable\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.StandardClick\n  id: StandardClick\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: StandardClick\n  nameWithType: ControlStyles.StandardClick\n  fullName: System.Windows.Forms.ControlStyles.StandardClick\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control implements the standard <xref href=\"System.Windows.Forms.Control.Click\"></xref> behavior.\n  syntax:\n    content: StandardClick\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.StandardDoubleClick\n  id: StandardDoubleClick\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: StandardDoubleClick\n  nameWithType: ControlStyles.StandardDoubleClick\n  fullName: System.Windows.Forms.ControlStyles.StandardDoubleClick\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior. This style is ignored if the StandardClick bit is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: StandardDoubleClick\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  id: SupportsTransparentBackColor\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: SupportsTransparentBackColor\n  nameWithType: ControlStyles.SupportsTransparentBackColor\n  fullName: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control accepts a <xref:System.Windows.Forms.Control.BackColor*> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the UserPaint bit is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>.\n  syntax:\n    content: SupportsTransparentBackColor\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.UserMouse\n  id: UserMouse\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UserMouse\n  nameWithType: ControlStyles.UserMouse\n  fullName: System.Windows.Forms.ControlStyles.UserMouse\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control does its own mouse processing, and mouse events are not handled by the operating system.\n  syntax:\n    content: UserMouse\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.UserPaint\n  id: UserPaint\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UserPaint\n  nameWithType: ControlStyles.UserPaint\n  fullName: System.Windows.Forms.ControlStyles.UserPaint\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the control paints itself rather than the operating system doing so. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised. This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>.\n  syntax:\n    content: UserPaint\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  id: UseTextForAccessibility\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UseTextForAccessibility\n  nameWithType: ControlStyles.UseTextForAccessibility\n  fullName: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies that the value of the control's `Text` property, if set, determines the control's default Active Accessibility name and shortcut key.\n  syntax:\n    content: UseTextForAccessibility\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: AllPaintingInWmPaint\n  nameWithType: ControlStyles.AllPaintingInWmPaint\n  fullName: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n- uid: System.Windows.Forms.ControlStyles\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlStyles\n  nameWithType: ControlStyles\n  fullName: System.Windows.Forms.ControlStyles\n- uid: System.Windows.Forms.ControlStyles.CacheText\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: CacheText\n  nameWithType: ControlStyles.CacheText\n  fullName: System.Windows.Forms.ControlStyles.CacheText\n- uid: System.Windows.Forms.ControlStyles.ContainerControl\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: ContainerControl\n  nameWithType: ControlStyles.ContainerControl\n  fullName: System.Windows.Forms.ControlStyles.ContainerControl\n- uid: System.Windows.Forms.ControlStyles.DoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: DoubleBuffer\n  nameWithType: ControlStyles.DoubleBuffer\n  fullName: System.Windows.Forms.ControlStyles.DoubleBuffer\n- uid: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: EnableNotifyMessage\n  nameWithType: ControlStyles.EnableNotifyMessage\n  fullName: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n- uid: System.Windows.Forms.ControlStyles.FixedHeight\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: FixedHeight\n  nameWithType: ControlStyles.FixedHeight\n  fullName: System.Windows.Forms.ControlStyles.FixedHeight\n- uid: System.Windows.Forms.ControlStyles.FixedWidth\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: FixedWidth\n  nameWithType: ControlStyles.FixedWidth\n  fullName: System.Windows.Forms.ControlStyles.FixedWidth\n- uid: System.Windows.Forms.ControlStyles.Opaque\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: Opaque\n  nameWithType: ControlStyles.Opaque\n  fullName: System.Windows.Forms.ControlStyles.Opaque\n- uid: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: OptimizedDoubleBuffer\n  nameWithType: ControlStyles.OptimizedDoubleBuffer\n  fullName: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n- uid: System.Windows.Forms.ControlStyles.ResizeRedraw\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: ControlStyles.ResizeRedraw\n  fullName: System.Windows.Forms.ControlStyles.ResizeRedraw\n- uid: System.Windows.Forms.ControlStyles.Selectable\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: Selectable\n  nameWithType: ControlStyles.Selectable\n  fullName: System.Windows.Forms.ControlStyles.Selectable\n- uid: System.Windows.Forms.ControlStyles.StandardClick\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: StandardClick\n  nameWithType: ControlStyles.StandardClick\n  fullName: System.Windows.Forms.ControlStyles.StandardClick\n- uid: System.Windows.Forms.ControlStyles.StandardDoubleClick\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: StandardDoubleClick\n  nameWithType: ControlStyles.StandardDoubleClick\n  fullName: System.Windows.Forms.ControlStyles.StandardDoubleClick\n- uid: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: SupportsTransparentBackColor\n  nameWithType: ControlStyles.SupportsTransparentBackColor\n  fullName: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n- uid: System.Windows.Forms.ControlStyles.UserMouse\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UserMouse\n  nameWithType: ControlStyles.UserMouse\n  fullName: System.Windows.Forms.ControlStyles.UserMouse\n- uid: System.Windows.Forms.ControlStyles.UserPaint\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UserPaint\n  nameWithType: ControlStyles.UserPaint\n  fullName: System.Windows.Forms.ControlStyles.UserPaint\n- uid: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UseTextForAccessibility\n  nameWithType: ControlStyles.UseTextForAccessibility\n  fullName: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n"}