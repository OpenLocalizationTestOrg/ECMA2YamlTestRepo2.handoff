{"nodes":[{"pos":[1712,1779],"content":"Defines the contract to implement a custom session-state container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the contract to implement a custom session-state container.","pos":[0,67]}]},{"pos":[1792,3972],"content":"A session-state container provides access to the session-state values and related information for the current session. Session information included in a session-state container is exposed to application code through the <xref:System.Web.SessionState.HttpSessionState> class using the <xref:System.Web.HttpContext.Session%2A> property. The <xref:System.Web.SessionState.HttpSessionState> class is a wrapper class for a session-state container.       The ASP.NET implementation of a session-state container is the <xref:System.Web.SessionState.HttpSessionStateContainer> class. At the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> creates and populates an <xref:System.Web.SessionState.HttpSessionStateContainer> object and assigns it to the current <xref:System.Web.HttpContext>. At the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> retrieves the <xref:System.Web.SessionState.HttpSessionStateContainer> object from the current <xref:System.Web.HttpContext> and performs any required session work, such as writing the session values to the session store, or abandoning the session. If the request is abruptly terminated, such as through a redirect, the <xref:System.Web.SessionState.SessionStateModule> performs the same cleanup by calling the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method.       To create a custom session-state container, create a class that implements the IHttpSessionState interface. If you are creating your own custom session-state container, you must also replace the <xref:System.Web.SessionState.SessionStateModule> with your own custom module. Your custom module will create an instance of your custom session-state container and add it to the current <xref:System.Web.HttpContext> using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. An example of a custom session-state module is included in the <xref:System.Web.SessionState.SessionStateUtility> class overview.","needQuote":false,"needEscape":true,"nodes":[{"content":"A session-state container provides access to the session-state values and related information for the current session. Session information included in a session-state container is exposed to application code through the <xref:System.Web.SessionState.HttpSessionState> class using the <xref:System.Web.HttpContext.Session%2A> property. The <xref:System.Web.SessionState.HttpSessionState> class is a wrapper class for a session-state container.       The ASP.NET implementation of a session-state container is the <xref:System.Web.SessionState.HttpSessionStateContainer> class. At the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> creates and populates an <xref:System.Web.SessionState.HttpSessionStateContainer> object and assigns it to the current <xref:System.Web.HttpContext>. At the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> retrieves the <xref:System.Web.SessionState.HttpSessionStateContainer> object from the current <xref:System.Web.HttpContext> and performs any required session work, such as writing the session values to the session store, or abandoning the session. If the request is abruptly terminated, such as through a redirect, the <xref:System.Web.SessionState.SessionStateModule> performs the same cleanup by calling the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method.       To create a custom session-state container, create a class that implements the IHttpSessionState interface. If you are creating your own custom session-state container, you must also replace the <xref:System.Web.SessionState.SessionStateModule> with your own custom module. Your custom module will create an instance of your custom session-state container and add it to the current <xref:System.Web.HttpContext> using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. An example of a custom session-state module is included in the <xref:System.Web.SessionState.SessionStateUtility> class overview.","pos":[0,2176],"nodes":[{"content":"A session-state container provides access to the session-state values and related information for the current session.","pos":[0,118]},{"content":"Session information included in a session-state container is exposed to application code through the &lt;xref:System.Web.SessionState.HttpSessionState&gt; class using the &lt;xref:System.Web.HttpContext.Session%2A&gt; property.","pos":[119,334],"source":" Session information included in a session-state container is exposed to application code through the <xref:System.Web.SessionState.HttpSessionState> class using the <xref:System.Web.HttpContext.Session%2A> property."},{"content":"The &lt;xref:System.Web.SessionState.HttpSessionState&gt; class is a wrapper class for a session-state container.","pos":[335,442],"source":" The <xref:System.Web.SessionState.HttpSessionState> class is a wrapper class for a session-state container."},{"content":"The ASP.NET implementation of a session-state container is the &lt;xref:System.Web.SessionState.HttpSessionStateContainer&gt; class.","pos":[449,575],"source":"       The ASP.NET implementation of a session-state container is the <xref:System.Web.SessionState.HttpSessionStateContainer> class."},{"content":"At the beginning of a request, during the &lt;xref:System.Web.HttpApplication.AcquireRequestState&gt; event, the &lt;xref:System.Web.SessionState.SessionStateModule&gt; creates and populates an &lt;xref:System.Web.SessionState.HttpSessionStateContainer&gt; object and assigns it to the current &lt;xref:System.Web.HttpContext&gt;.","pos":[576,882],"source":" At the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> creates and populates an <xref:System.Web.SessionState.HttpSessionStateContainer> object and assigns it to the current <xref:System.Web.HttpContext>."},{"content":"At the end of a request, during the &lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt; event, the &lt;xref:System.Web.SessionState.SessionStateModule&gt; retrieves the &lt;xref:System.Web.SessionState.HttpSessionStateContainer&gt; object from the current &lt;xref:System.Web.HttpContext&gt; and performs any required session work, such as writing the session values to the session store, or abandoning the session.","pos":[883,1282],"source":" At the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> retrieves the <xref:System.Web.SessionState.HttpSessionStateContainer> object from the current <xref:System.Web.HttpContext> and performs any required session work, such as writing the session values to the session store, or abandoning the session."},{"content":"If the request is abruptly terminated, such as through a redirect, the &lt;xref:System.Web.SessionState.SessionStateModule&gt; performs the same cleanup by calling the &lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A&gt; method.","pos":[1283,1527],"source":" If the request is abruptly terminated, such as through a redirect, the <xref:System.Web.SessionState.SessionStateModule> performs the same cleanup by calling the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method."},{"content":"To create a custom session-state container, create a class that implements the IHttpSessionState interface.","pos":[1534,1641]},{"content":"If you are creating your own custom session-state container, you must also replace the &lt;xref:System.Web.SessionState.SessionStateModule&gt; with your own custom module.","pos":[1642,1807],"source":" If you are creating your own custom session-state container, you must also replace the <xref:System.Web.SessionState.SessionStateModule> with your own custom module."},{"content":"Your custom module will create an instance of your custom session-state container and add it to the current &lt;xref:System.Web.HttpContext&gt; using the &lt;xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A&gt; method.","pos":[1808,2046],"source":" Your custom module will create an instance of your custom session-state container and add it to the current <xref:System.Web.HttpContext> using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method."},{"content":"An example of a custom session-state module is included in the &lt;xref:System.Web.SessionState.SessionStateUtility&gt; class overview.","pos":[2047,2176],"source":" An example of a custom session-state module is included in the <xref:System.Web.SessionState.SessionStateUtility> class overview."}]}]},{"pos":[4833,4858],"content":"Ends the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends the current session.","pos":[0,25]}]},{"pos":[4870,5021],"content":"The Abandon method is used to clear out session data and raise the <bpt id=\"p1\">**</bpt>Session_OnEnd<ept id=\"p1\">**</ept> event defined in the Global.asax file for the ASP.NET application.","needQuote":true,"needEscape":true,"source":"The Abandon method is used to clear out session data and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application."},{"pos":[6626,6674],"content":"Adds a new item to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new item to the session-state collection.","pos":[0,48]}]},{"pos":[7285,7345],"content":"The name of the item to add to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item to add to the session-state collection.","pos":[0,60]}]},{"pos":[7407,7468],"content":"The value of the item to add to the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the item to add to the session-state collection.","pos":[0,61]}]},{"pos":[7919,7976],"content":"Clears all values from the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all values from the session-state item collection.","pos":[0,57]}]},{"pos":[7988,8086],"content":"Clear performs the same function as <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear performs the same function as &lt;xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A&gt;.","pos":[0,98],"source":"Clear performs the same function as <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>."}]},{"pos":[9067,9129],"content":"Gets or sets the code-page identifier for the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the code-page identifier for the current session.","pos":[0,62]}]},{"pos":[9142,9661],"content":"A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order. Code-page settings apply only to multi-byte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Text.Encoding.CodePage%2A> property of the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order. Code-page settings apply only to multi-byte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Text.Encoding.CodePage%2A> property of the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.","pos":[0,517],"nodes":[{"content":"A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order.","pos":[0,130]},{"content":"Code-page settings apply only to multi-byte character data, not to Unicode character data.","pos":[131,221]},{"content":"This CodePage property is provided for compatibility with earlier versions of ASP only.","pos":[228,315]},{"content":"If you do not need to maintain backward compatibility with ASP pages, use the &lt;xref:System.Text.Encoding.CodePage%2A&gt; property of the &lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt; property instead.","pos":[316,517],"source":" If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Text.Encoding.CodePage%2A> property of the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead."}]}]},{"pos":[10220,10269],"content":"The code-page identifier for the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code-page identifier for the current session.","pos":[0,49]}]},{"pos":[10746,10836],"content":"Gets a value that indicates whether the application is configured for cookieless sessions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the application is configured for cookieless sessions.","pos":[0,90]}]},{"pos":[10848,11285],"content":"The CookieMode property returns a <xref:System.Web.HttpCookieMode> enumeration value that is based on the value of the `cookieless` attribute of the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> configuration element. If the `cookieless` attribute is set to `true`, then the CookieMode property returns <xref:System.Web.HttpCookieMode>; otherwise, the CookieMode property returns <xref:System.Web.HttpCookieMode>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CookieMode property returns a &lt;xref:System.Web.HttpCookieMode&gt; enumeration value that is based on the value of the <ph id=\"ph1\">`cookieless`</ph> attribute of the &lt;xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A&gt; configuration element.","pos":[0,241],"source":"The CookieMode property returns a <xref:System.Web.HttpCookieMode> enumeration value that is based on the value of the `cookieless` attribute of the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> configuration element."},{"content":"If the <ph id=\"ph1\">`cookieless`</ph> attribute is set to <ph id=\"ph2\">`true`</ph>, then the CookieMode property returns &lt;xref:System.Web.HttpCookieMode&gt;; otherwise, the CookieMode property returns &lt;xref:System.Web.HttpCookieMode&gt;.","pos":[242,437],"source":" If the `cookieless` attribute is set to `true`, then the CookieMode property returns <xref:System.Web.HttpCookieMode>; otherwise, the CookieMode property returns <xref:System.Web.HttpCookieMode>."}]},{"pos":[12019,12223],"content":"One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicate whether the application is configured for cookieless sessions. The default is <xref href=\"System.Web.HttpCookieMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCookieMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that indicate whether the application is configured for cookieless sessions.","pos":[0,141],"source":"One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicate whether the application is configured for cookieless sessions."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCookieMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[142,204],"source":" The default is <xref href=\"System.Web.HttpCookieMode\"></xref>."}]},{"pos":[12773,12897],"content":"Copies the collection of session-state item values to a one-dimensional array, starting at the specified index in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the collection of session-state item values to a one-dimensional array, starting at the specified index in the array.","pos":[0,124]}]},{"pos":[13489,13546],"content":"The <xref:System.Array> that receives the session values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Array&gt; that receives the session values.","pos":[0,57],"source":"The <xref:System.Array> that receives the session values."}]},{"pos":[13607,13649],"content":"The index in <ph id=\"ph1\">`array`</ph> where copying starts.","needQuote":true,"needEscape":true,"source":"The index in `array` where copying starts."},{"pos":[14099,14161],"content":"Gets the number of items in the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of items in the session-state item collection.","pos":[0,62]}]},{"pos":[14745,14802],"content":"The number of items in the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items in the session-state item collection.","pos":[0,57]}]},{"pos":[15295,15399],"content":"Returns an enumerator that can be used to read all the session-state item values in the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to read all the session-state item values in the current session.","pos":[0,104]}]},{"pos":[16051,16165],"content":"An <xref:System.Collections.IEnumerator> that can iterate through the values in the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can iterate through the values in the session-state item collection.","pos":[0,114],"source":"An <xref:System.Collections.IEnumerator> that can iterate through the values in the session-state item collection."}]},{"pos":[16657,16755],"content":"Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.","pos":[0,98]}]},{"pos":[16767,16872],"content":"For information on cookieless sessions, see <bpt id=\"p1\">[</bpt>Session Identifiers<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For information on cookieless sessions, see [Session Identifiers](~/add/includes/ajax-current-ext-md.md)."},{"pos":[17379,17553],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session is embedded in the URL; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is embedded in the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18044,18125],"content":"Gets a value indicating whether the session was created with the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session was created with the current request.","pos":[0,81]}]},{"pos":[18648,18836],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session was created with the current request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19317,19374],"content":"Gets a value indicating whether the session is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the session is read-only.","pos":[0,57]}]},{"pos":[19386,19531],"content":"Session state is set to read-only by setting the &lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt; page attribute to <ph id=\"ph1\">`ReadOnly`</ph>.","needQuote":true,"needEscape":true,"source":"Session state is set to read-only by setting the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> page attribute to `ReadOnly`."},{"pos":[20112,20276],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20775,20886],"content":"Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).","pos":[0,111]}]},{"pos":[21413,21607],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the collection is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22109,22168],"content":"Gets or sets a session-state item value by numerical index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a session-state item value by numerical index.","pos":[0,59]}]},{"pos":[22850,22902],"content":"The numerical index of the session-state item value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The numerical index of the session-state item value.","pos":[0,52]}]},{"pos":[22960,23035],"content":"The session-state item value specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The session-state item value specified in the <code>index</code> parameter."},{"pos":[23532,23580],"content":"Gets or sets a session-state item value by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a session-state item value by name.","pos":[0,48]}]},{"pos":[24211,24256],"content":"The key name of the session-state item value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key name of the session-state item value.","pos":[0,45]}]},{"pos":[24314,24388],"content":"The session-state item value specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The session-state item value specified in the <code>name</code> parameter."},{"pos":[24831,24920],"content":"Gets a collection of the keys for all values stored in the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the keys for all values stored in the session-state item collection.","pos":[0,89]}]},{"pos":[25654,25776],"content":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session-item keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; that contains all the session-item keys.","pos":[0,122],"source":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session-item keys."}]},{"pos":[26219,26284],"content":"Gets or sets the locale identifier (LCID) of the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the locale identifier (LCID) of the current session.","pos":[0,65]}]},{"pos":[26297,26704],"content":"This `LCID` property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.       ASP.NET does not store the locale identifier in session state. The LCID property calls the <xref:System.Globalization.CultureInfo.LCID%2A> to get and set the identifier.","needQuote":false,"needEscape":true,"nodes":[{"content":"This <ph id=\"ph1\">`LCID`</ph> property is provided for compatibility with earlier versions of ASP only.","pos":[0,85],"source":"This `LCID` property is provided for compatibility with earlier versions of ASP only."},{"content":"If you do not need to maintain backward compatibility with ASP pages, use the &lt;xref:System.Globalization.CultureInfo.LCID%2A&gt; property instead.","pos":[86,229],"source":" If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead."},{"content":"ASP.NET does not store the locale identifier in session state.","pos":[236,298]},{"content":"The LCID property calls the &lt;xref:System.Globalization.CultureInfo.LCID%2A&gt; to get and set the identifier.","pos":[299,405],"source":" The LCID property calls the <xref:System.Globalization.CultureInfo.LCID%2A> to get and set the identifier."}]},{"pos":[27258,27359],"content":"A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; instance that specifies the culture of the current session.","pos":[0,101],"source":"A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session."}]},{"pos":[27802,27838],"content":"Gets the current session-state mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current session-state mode.","pos":[0,36]}]},{"pos":[27850,27965],"content":"For information on different session-state modes, see <bpt id=\"p1\">[</bpt>Session-State Modes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For information on different session-state modes, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md)."},{"pos":[28520,28600],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.SessionStateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values."},{"pos":[29105,29160],"content":"Deletes an item from the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item from the session-state item collection.","pos":[0,55]}]},{"pos":[29777,29847],"content":"The name of the item to delete from the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item to delete from the session-state item collection.","pos":[0,70]}]},{"pos":[30321,30378],"content":"Clears all values from the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all values from the session-state item collection.","pos":[0,57]}]},{"pos":[30390,30488],"content":"RemoveAll performs the same function as <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAll performs the same function as &lt;xref:System.Web.SessionState.IHttpSessionState.Clear%2A&gt;.","pos":[0,98],"source":"RemoveAll performs the same function as <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>."}]},{"pos":[31526,31602],"content":"Deletes an item at a specified index from the session-state item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item at a specified index from the session-state item collection.","pos":[0,76]}]},{"pos":[32237,32303],"content":"The index of the item to remove from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item to remove from the session-state collection.","pos":[0,66]}]},{"pos":[32775,32826],"content":"Gets the unique session identifier for the session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique session identifier for the session.","pos":[0,51]}]},{"pos":[33344,33359],"content":"The session ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session ID.","pos":[0,15]}]},{"pos":[33852,34131],"content":"Gets a collection of objects declared by <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" name=\"&amp;lt;object Runat=&amp;quot;Server&amp;quot; Scope=&amp;quot;Session&amp;quot;/&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tags within the ASP.NET application file Global.asax.","needQuote":true,"needEscape":true,"source":"Gets a collection of objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax."},{"pos":[34144,34219],"content":"<ph id=\"ph1\">`StaticObjects`</ph> is provided for compatibility with earlier versions of ASP.","needQuote":false,"needEscape":true,"source":"`StaticObjects` is provided for compatibility with earlier versions of ASP."},{"pos":[34791,34906],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpStaticObjectsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing objects declared in the Global.asax file.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> containing objects declared in the Global.asax file."},{"pos":[35378,35474],"content":"Gets an object that can be used to synchronize access to the collection of session-state values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection of session-state values.","pos":[0,96]}]},{"pos":[36042,36109],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]},{"pos":[36571,36700],"content":"Gets and sets the time-out period (in minutes) allowed between requests before the session-state provider terminates the session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets the time-out period (in minutes) allowed between requests before the session-state provider terminates the session.","pos":[0,129]}]},{"pos":[37326,37358],"content":"The time-out period, in minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out period, in minutes.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SessionState.IHttpSessionState\n  id: IHttpSessionState\n  children:\n  - System.Web.SessionState.IHttpSessionState.Abandon\n  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)\n  - System.Web.SessionState.IHttpSessionState.Clear\n  - System.Web.SessionState.IHttpSessionState.CodePage\n  - System.Web.SessionState.IHttpSessionState.CookieMode\n  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)\n  - System.Web.SessionState.IHttpSessionState.Count\n  - System.Web.SessionState.IHttpSessionState.GetEnumerator\n  - System.Web.SessionState.IHttpSessionState.IsCookieless\n  - System.Web.SessionState.IHttpSessionState.IsNewSession\n  - System.Web.SessionState.IHttpSessionState.IsReadOnly\n  - System.Web.SessionState.IHttpSessionState.IsSynchronized\n  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)\n  - System.Web.SessionState.IHttpSessionState.Item(System.String)\n  - System.Web.SessionState.IHttpSessionState.Keys\n  - System.Web.SessionState.IHttpSessionState.LCID\n  - System.Web.SessionState.IHttpSessionState.Mode\n  - System.Web.SessionState.IHttpSessionState.Remove(System.String)\n  - System.Web.SessionState.IHttpSessionState.RemoveAll\n  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)\n  - System.Web.SessionState.IHttpSessionState.SessionID\n  - System.Web.SessionState.IHttpSessionState.StaticObjects\n  - System.Web.SessionState.IHttpSessionState.SyncRoot\n  - System.Web.SessionState.IHttpSessionState.Timeout\n  langs:\n  - csharp\n  name: IHttpSessionState\n  nameWithType: IHttpSessionState\n  fullName: System.Web.SessionState.IHttpSessionState\n  type: Interface\n  summary: Defines the contract to implement a custom session-state container.\n  remarks: \"A session-state container provides access to the session-state values and related information for the current session. Session information included in a session-state container is exposed to application code through the <xref:System.Web.SessionState.HttpSessionState> class using the <xref:System.Web.HttpContext.Session%2A> property. The <xref:System.Web.SessionState.HttpSessionState> class is a wrapper class for a session-state container.  \\n  \\n The ASP.NET implementation of a session-state container is the <xref:System.Web.SessionState.HttpSessionStateContainer> class. At the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> creates and populates an <xref:System.Web.SessionState.HttpSessionStateContainer> object and assigns it to the current <xref:System.Web.HttpContext>. At the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> retrieves the <xref:System.Web.SessionState.HttpSessionStateContainer> object from the current <xref:System.Web.HttpContext> and performs any required session work, such as writing the session values to the session store, or abandoning the session. If the request is abruptly terminated, such as through a redirect, the <xref:System.Web.SessionState.SessionStateModule> performs the same cleanup by calling the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method.  \\n  \\n To create a custom session-state container, create a class that implements the IHttpSessionState interface. If you are creating your own custom session-state container, you must also replace the <xref:System.Web.SessionState.SessionStateModule> with your own custom module. Your custom module will create an instance of your custom session-state container and add it to the current <xref:System.Web.HttpContext> using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. An example of a custom session-state module is included in the <xref:System.Web.SessionState.SessionStateUtility> class overview.\"\n  example:\n  - \"The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]\"\n  syntax:\n    content: public interface IHttpSessionState\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Abandon\n  id: Abandon\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Abandon()\n  nameWithType: IHttpSessionState.Abandon()\n  fullName: System.Web.SessionState.IHttpSessionState.Abandon()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Ends the current session.\n  remarks: The Abandon method is used to clear out session data and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application.\n  example:\n  - \"The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]\"\n  syntax:\n    content: public void Abandon ();\n    parameters: []\n  overload: System.Web.SessionState.IHttpSessionState.Abandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Add(String,Object)\n  nameWithType: IHttpSessionState.Add(String,Object)\n  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Adds a new item to the session-state collection.\n  remarks: ''\n  example:\n  - \"The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]\"\n  syntax:\n    content: public void Add (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item to add to the session-state collection.\n    - id: value\n      type: System.Object\n      description: The value of the item to add to the session-state collection.\n  overload: System.Web.SessionState.IHttpSessionState.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Clear\n  id: Clear\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IHttpSessionState.Clear()\n  fullName: System.Web.SessionState.IHttpSessionState.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Clears all values from the session-state item collection.\n  remarks: Clear performs the same function as <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.\n  example:\n  - \"The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.SessionState.IHttpSessionState.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.CodePage\n  id: CodePage\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: CodePage\n  nameWithType: IHttpSessionState.CodePage\n  fullName: System.Web.SessionState.IHttpSessionState.CodePage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets the code-page identifier for the current session.\n  remarks: \"A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order. Code-page settings apply only to multi-byte character data, not to Unicode character data.  \\n  \\n This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Text.Encoding.CodePage%2A> property of the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.\"\n  example:\n  - \"The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]\"\n  syntax:\n    content: public int CodePage { get; set; }\n    return:\n      type: System.Int32\n      description: The code-page identifier for the current session.\n  overload: System.Web.SessionState.IHttpSessionState.CodePage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.CookieMode\n  id: CookieMode\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: CookieMode\n  nameWithType: IHttpSessionState.CookieMode\n  fullName: System.Web.SessionState.IHttpSessionState.CookieMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value that indicates whether the application is configured for cookieless sessions.\n  remarks: The CookieMode property returns a <xref:System.Web.HttpCookieMode> enumeration value that is based on the value of the `cookieless` attribute of the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> configuration element. If the `cookieless` attribute is set to `true`, then the CookieMode property returns <xref:System.Web.HttpCookieMode>; otherwise, the CookieMode property returns <xref:System.Web.HttpCookieMode>.\n  example:\n  - \"The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <sessionState  \\n      mode=\\\"InProc\\\"  \\n      cookieless=\\\"true\\\"  \\n      timeout=\\\"30\\\" />  \\n  </system.web>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public System.Web.HttpCookieMode CookieMode { get; }\n    return:\n      type: System.Web.HttpCookieMode\n      description: One of the <xref href=\"System.Web.HttpCookieMode\"></xref> values that indicate whether the application is configured for cookieless sessions. The default is <xref href=\"System.Web.HttpCookieMode\"></xref>.\n  overload: System.Web.SessionState.IHttpSessionState.CookieMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: IHttpSessionState.CopyTo(Array,Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Copies the collection of session-state item values to a one-dimensional array, starting at the specified index in the array.\n  remarks: ''\n  example:\n  - \"The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]\"\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The <xref:System.Array> that receives the session values.\n    - id: index\n      type: System.Int32\n      description: The index in `array` where copying starts.\n  overload: System.Web.SessionState.IHttpSessionState.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Count\n  id: Count\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Count\n  nameWithType: IHttpSessionState.Count\n  fullName: System.Web.SessionState.IHttpSessionState.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the number of items in the session-state item collection.\n  remarks: ''\n  example:\n  - \"The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the session-state item collection.\n  overload: System.Web.SessionState.IHttpSessionState.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: IHttpSessionState.GetEnumerator()\n  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Returns an enumerator that can be used to read all the session-state item values in the current session.\n  remarks: ''\n  example:\n  - \"The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can iterate through the values in the session-state item collection.\n  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.IsCookieless\n  id: IsCookieless\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: IsCookieless\n  nameWithType: IHttpSessionState.IsCookieless\n  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.\n  remarks: For information on cookieless sessions, see [Session Identifiers](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]\"\n  syntax:\n    content: public bool IsCookieless { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is embedded in the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.IsNewSession\n  id: IsNewSession\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: IsNewSession\n  nameWithType: IHttpSessionState.IsNewSession\n  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session was created with the current request.\n  remarks: ''\n  example:\n  - \"The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]\"\n  syntax:\n    content: public bool IsNewSession { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session was created with the current request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IHttpSessionState.IsReadOnly\n  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether the session is read-only.\n  remarks: Session state is set to read-only by setting the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> page attribute to `ReadOnly`.\n  example:\n  - \"The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized\n  id: IsSynchronized\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: IHttpSessionState.IsSynchronized\n  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).\n  remarks: ''\n  example:\n  - \"The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IHttpSessionState.Item(Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a session-state item value by numerical index.\n  remarks: ''\n  example:\n  - \"The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The numerical index of the session-state item value.\n    return:\n      type: System.Object\n      description: The session-state item value specified in the <code>index</code> parameter.\n  overload: System.Web.SessionState.IHttpSessionState.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: IHttpSessionState.Item(String)\n  fullName: System.Web.SessionState.IHttpSessionState.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a session-state item value by name.\n  remarks: ''\n  example:\n  - \"The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]\"\n  syntax:\n    content: public object this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The key name of the session-state item value.\n    return:\n      type: System.Object\n      description: The session-state item value specified in the <code>name</code> parameter.\n  overload: System.Web.SessionState.IHttpSessionState.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Keys\n  id: Keys\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: IHttpSessionState.Keys\n  fullName: System.Web.SessionState.IHttpSessionState.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a collection of the keys for all values stored in the session-state item collection.\n  remarks: ''\n  example:\n  - \"The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]\"\n  syntax:\n    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }\n    return:\n      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n      description: The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session-item keys.\n  overload: System.Web.SessionState.IHttpSessionState.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.LCID\n  id: LCID\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: LCID\n  nameWithType: IHttpSessionState.LCID\n  fullName: System.Web.SessionState.IHttpSessionState.LCID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets the locale identifier (LCID) of the current session.\n  remarks: \"This `LCID` property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.  \\n  \\n ASP.NET does not store the locale identifier in session state. The LCID property calls the <xref:System.Globalization.CultureInfo.LCID%2A> to get and set the identifier.\"\n  example:\n  - \"The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]\"\n  syntax:\n    content: public int LCID { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session.\n  overload: System.Web.SessionState.IHttpSessionState.LCID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Mode\n  id: Mode\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: IHttpSessionState.Mode\n  fullName: System.Web.SessionState.IHttpSessionState.Mode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the current session-state mode.\n  remarks: For information on different session-state modes, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]\"\n  syntax:\n    content: public System.Web.SessionState.SessionStateMode Mode { get; }\n    return:\n      type: System.Web.SessionState.SessionStateMode\n      description: One of the <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> values.\n  overload: System.Web.SessionState.IHttpSessionState.Mode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: IHttpSessionState.Remove(String)\n  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item from the session-state item collection.\n  remarks: ''\n  example:\n  - \"The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item to delete from the session-state item collection.\n  overload: System.Web.SessionState.IHttpSessionState.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAll\n  id: RemoveAll\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: IHttpSessionState.RemoveAll()\n  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Clears all values from the session-state item collection.\n  remarks: RemoveAll performs the same function as <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.\n  example:\n  - \"The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]\"\n  syntax:\n    content: public void RemoveAll ();\n    parameters: []\n  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IHttpSessionState.RemoveAt(Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item at a specified index from the session-state item collection.\n  remarks: ''\n  example:\n  - \"The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the item to remove from the session-state collection.\n  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.SessionID\n  id: SessionID\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: SessionID\n  nameWithType: IHttpSessionState.SessionID\n  fullName: System.Web.SessionState.IHttpSessionState.SessionID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the unique session identifier for the session.\n  remarks: ''\n  example:\n  - \"The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]\"\n  syntax:\n    content: public string SessionID { get; }\n    return:\n      type: System.String\n      description: The session ID.\n  overload: System.Web.SessionState.IHttpSessionState.SessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.StaticObjects\n  id: StaticObjects\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: StaticObjects\n  nameWithType: IHttpSessionState.StaticObjects\n  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a collection of objects declared by <xref uid=\"langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" name=\"&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;\" href=\"\"></xref> tags within the ASP.NET application file Global.asax.\n  remarks: '`StaticObjects` is provided for compatibility with earlier versions of ASP.'\n  example:\n  - \"The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }\n    return:\n      type: System.Web.HttpStaticObjectsCollection\n      description: An <xref href=\"System.Web.HttpStaticObjectsCollection\"></xref> containing objects declared in the Global.asax file.\n  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.SyncRoot\n  id: SyncRoot\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: IHttpSessionState.SyncRoot\n  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets an object that can be used to synchronize access to the collection of session-state values.\n  remarks: ''\n  example:\n  - \"The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.IHttpSessionState.Timeout\n  id: Timeout\n  parent: System.Web.SessionState.IHttpSessionState\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: IHttpSessionState.Timeout\n  fullName: System.Web.SessionState.IHttpSessionState.Timeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets and sets the time-out period (in minutes) allowed between requests before the session-state provider terminates the session.\n  remarks: ''\n  example:\n  - \"The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \\n  \\n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]\"\n  syntax:\n    content: public int Timeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time-out period, in minutes.\n  overload: System.Web.SessionState.IHttpSessionState.Timeout*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.SessionState.IHttpSessionState.Abandon\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Abandon()\n  nameWithType: IHttpSessionState.Abandon()\n  fullName: System.Web.SessionState.IHttpSessionState.Abandon()\n- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Add(String,Object)\n  nameWithType: IHttpSessionState.Add(String,Object)\n  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.SessionState.IHttpSessionState.Clear\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Clear()\n  nameWithType: IHttpSessionState.Clear()\n  fullName: System.Web.SessionState.IHttpSessionState.Clear()\n- uid: System.Web.SessionState.IHttpSessionState.CodePage\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CodePage\n  nameWithType: IHttpSessionState.CodePage\n  fullName: System.Web.SessionState.IHttpSessionState.CodePage\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.SessionState.IHttpSessionState.CookieMode\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CookieMode\n  nameWithType: IHttpSessionState.CookieMode\n  fullName: System.Web.SessionState.IHttpSessionState.CookieMode\n- uid: System.Web.HttpCookieMode\n  parent: System.Web\n  isExternal: false\n  name: HttpCookieMode\n  nameWithType: HttpCookieMode\n  fullName: System.Web.HttpCookieMode\n- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: IHttpSessionState.CopyTo(Array,Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Web.SessionState.IHttpSessionState.Count\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Count\n  nameWithType: IHttpSessionState.Count\n  fullName: System.Web.SessionState.IHttpSessionState.Count\n- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: IHttpSessionState.GetEnumerator()\n  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.SessionState.IHttpSessionState.IsCookieless\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsCookieless\n  nameWithType: IHttpSessionState.IsCookieless\n  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.SessionState.IHttpSessionState.IsNewSession\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsNewSession\n  nameWithType: IHttpSessionState.IsNewSession\n  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession\n- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IHttpSessionState.IsReadOnly\n  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly\n- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: IHttpSessionState.IsSynchronized\n  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized\n- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IHttpSessionState.Item(Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)\n- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Item(String)\n  nameWithType: IHttpSessionState.Item(String)\n  fullName: System.Web.SessionState.IHttpSessionState.Item(String)\n- uid: System.Web.SessionState.IHttpSessionState.Keys\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Keys\n  nameWithType: IHttpSessionState.Keys\n  fullName: System.Web.SessionState.IHttpSessionState.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase+KeysCollection\n  nameWithType: NameObjectCollectionBase+KeysCollection\n  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection\n- uid: System.Web.SessionState.IHttpSessionState.LCID\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: LCID\n  nameWithType: IHttpSessionState.LCID\n  fullName: System.Web.SessionState.IHttpSessionState.LCID\n- uid: System.Web.SessionState.IHttpSessionState.Mode\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Mode\n  nameWithType: IHttpSessionState.Mode\n  fullName: System.Web.SessionState.IHttpSessionState.Mode\n- uid: System.Web.SessionState.SessionStateMode\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateMode\n  nameWithType: SessionStateMode\n  fullName: System.Web.SessionState.SessionStateMode\n- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Remove(String)\n  nameWithType: IHttpSessionState.Remove(String)\n  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAll\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: IHttpSessionState.RemoveAll()\n  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IHttpSessionState.RemoveAt(Int32)\n  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)\n- uid: System.Web.SessionState.IHttpSessionState.SessionID\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: SessionID\n  nameWithType: IHttpSessionState.SessionID\n  fullName: System.Web.SessionState.IHttpSessionState.SessionID\n- uid: System.Web.SessionState.IHttpSessionState.StaticObjects\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: IHttpSessionState.StaticObjects\n  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects\n- uid: System.Web.HttpStaticObjectsCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpStaticObjectsCollection\n  nameWithType: HttpStaticObjectsCollection\n  fullName: System.Web.HttpStaticObjectsCollection\n- uid: System.Web.SessionState.IHttpSessionState.SyncRoot\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: SyncRoot\n  nameWithType: IHttpSessionState.SyncRoot\n  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot\n- uid: System.Web.SessionState.IHttpSessionState.Timeout\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Timeout\n  nameWithType: IHttpSessionState.Timeout\n  fullName: System.Web.SessionState.IHttpSessionState.Timeout\n- uid: System.Web.SessionState.IHttpSessionState.Abandon*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Abandon\n  nameWithType: IHttpSessionState.Abandon\n- uid: System.Web.SessionState.IHttpSessionState.Add*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Add\n  nameWithType: IHttpSessionState.Add\n- uid: System.Web.SessionState.IHttpSessionState.Clear*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Clear\n  nameWithType: IHttpSessionState.Clear\n- uid: System.Web.SessionState.IHttpSessionState.CodePage*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CodePage\n  nameWithType: IHttpSessionState.CodePage\n- uid: System.Web.SessionState.IHttpSessionState.CookieMode*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CookieMode\n  nameWithType: IHttpSessionState.CookieMode\n- uid: System.Web.SessionState.IHttpSessionState.CopyTo*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: CopyTo\n  nameWithType: IHttpSessionState.CopyTo\n- uid: System.Web.SessionState.IHttpSessionState.Count*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Count\n  nameWithType: IHttpSessionState.Count\n- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: IHttpSessionState.GetEnumerator\n- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsCookieless\n  nameWithType: IHttpSessionState.IsCookieless\n- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsNewSession\n  nameWithType: IHttpSessionState.IsNewSession\n- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IHttpSessionState.IsReadOnly\n- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: IHttpSessionState.IsSynchronized\n- uid: System.Web.SessionState.IHttpSessionState.Item*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Item\n  nameWithType: IHttpSessionState.Item\n- uid: System.Web.SessionState.IHttpSessionState.Keys*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Keys\n  nameWithType: IHttpSessionState.Keys\n- uid: System.Web.SessionState.IHttpSessionState.LCID*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: LCID\n  nameWithType: IHttpSessionState.LCID\n- uid: System.Web.SessionState.IHttpSessionState.Mode*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Mode\n  nameWithType: IHttpSessionState.Mode\n- uid: System.Web.SessionState.IHttpSessionState.Remove*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Remove\n  nameWithType: IHttpSessionState.Remove\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: RemoveAll\n  nameWithType: IHttpSessionState.RemoveAll\n- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: RemoveAt\n  nameWithType: IHttpSessionState.RemoveAt\n- uid: System.Web.SessionState.IHttpSessionState.SessionID*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: SessionID\n  nameWithType: IHttpSessionState.SessionID\n- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: IHttpSessionState.StaticObjects\n- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: SyncRoot\n  nameWithType: IHttpSessionState.SyncRoot\n- uid: System.Web.SessionState.IHttpSessionState.Timeout*\n  parent: System.Web.SessionState.IHttpSessionState\n  isExternal: false\n  name: Timeout\n  nameWithType: IHttpSessionState.Timeout\n"}