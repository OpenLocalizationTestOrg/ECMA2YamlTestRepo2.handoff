{"nodes":[{"pos":[905,1005],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.Windows.Automation.AutomationElement\"></xref> objects."},{"pos":[1017,1312],"content":"AutomationElementCollection is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>. It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"AutomationElementCollection is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>. It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>.","pos":[0,295],"nodes":[{"content":"AutomationElementCollection is used as the return type for methods such as &lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;.","pos":[0,137],"source":"AutomationElementCollection is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>."},{"content":"It is not intended to be used for application-defined collections, for which you should use a more generic class such as &lt;xref:System.Collections.ArrayList&gt;.","pos":[138,295],"source":" It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>."}]}]},{"pos":[2039,2137],"content":"Copies the collection's elements to an array, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the collection's elements to an array, starting at the specified index in the target array.","pos":[0,98]}]},{"pos":[2649,2708],"content":"The destination of the elements copied from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination of the elements copied from the collection.","pos":[0,59]}]},{"pos":[2769,2837],"content":"The zero-based index in the target array where copying should begin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in the target array where copying should begin.","pos":[0,68]}]},{"pos":[3559,3677],"content":"Copies the collection's elements to a specialized array instance, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the collection's elements to a specialized array instance, starting at the specified index in the target array.","pos":[0,118]}]},{"pos":[4305,4364],"content":"The destination of the elements copied from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination of the elements copied from the collection.","pos":[0,59]}]},{"pos":[4425,4493],"content":"The zero-based index in the target array where copying should begin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in the target array where copying should begin.","pos":[0,68]}]},{"pos":[4676,4776],"content":"The destination array is not large enough, or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is outside the bounds of the array.","needQuote":true,"needEscape":true,"source":"The destination array is not large enough, or <code>index</code> is outside the bounds of the array."},{"pos":[5203,5250],"content":"Gets the number of elements in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements in this collection.","pos":[0,47]}]},{"pos":[5646,5669],"content":"The number of elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements.","pos":[0,23]}]},{"pos":[6230,6316],"content":"Returns an enumerator that can be used to iterate through the items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through the items in the collection.","pos":[0,86]}]},{"pos":[6489,6618],"content":"An enumerator that can be used to iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator that can be used to iterate through the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref>."},{"pos":[7188,7336],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is synchronized (thread-safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref> object is synchronized (thread-safe)."},{"pos":[7348,7431],"content":"An <xref:System.Windows.Automation.AutomationElementCollection> is not thread-safe.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Windows.Automation.AutomationElementCollection&gt; is not thread-safe.","pos":[0,83],"source":"An <xref:System.Windows.Automation.AutomationElementCollection> is not thread-safe."}]},{"pos":[7557,7635],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8205,8302],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Automation.AutomationElement\"></xref> at the specified index."},{"pos":[8836,8890],"content":"The zero-based index of the element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element in the collection.","pos":[0,54]}]},{"pos":[8978,9070],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Automation.AutomationElement\"></xref> at the specified index."},{"pos":[9265,9440],"content":"A negative integer was specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Windows.Automation.AutomationElementCollection.Count*&gt;.","needQuote":true,"needEscape":true,"source":"A negative integer was specified for <code>index</code>, or <code>index</code> is greater than or equal to <xref:System.Windows.Automation.AutomationElementCollection.Count*>."},{"pos":[9882,10029],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.AutomationElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref> collection."},{"pos":[10150,10217],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.AutomationElementCollection\n  id: AutomationElementCollection\n  children:\n  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)\n  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)\n  - System.Windows.Automation.AutomationElementCollection.Count\n  - System.Windows.Automation.AutomationElementCollection.GetEnumerator\n  - System.Windows.Automation.AutomationElementCollection.IsSynchronized\n  - System.Windows.Automation.AutomationElementCollection.Item(System.Int32)\n  - System.Windows.Automation.AutomationElementCollection.SyncRoot\n  langs:\n  - csharp\n  name: AutomationElementCollection\n  nameWithType: AutomationElementCollection\n  fullName: System.Windows.Automation.AutomationElementCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Windows.Automation.AutomationElement\"></xref> objects.\n  remarks: AutomationElementCollection is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>. It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>.\n  syntax:\n    content: 'public class AutomationElementCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Copies the collection's elements to an array, starting at the specified index in the target array.\n  remarks: ''\n  example:\n  - \"The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of objects.  \\n  \\n [!code-vb[UIAClient_snip#118](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#118)]\\n [!code-cs[UIAClient_snip#118](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#118)]\"\n  syntax:\n    content: public virtual void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The destination of the elements copied from the collection.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in the target array where copying should begin.\n  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)\n  id: CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: CopyTo(AutomationElement[],Int32)\n  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Copies the collection's elements to a specialized array instance, starting at the specified index in the target array.\n  remarks: ''\n  example:\n  - \"The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of <xref:System.Windows.Automation.AutomationElement> objects.  \\n  \\n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]\"\n  syntax:\n    content: public void CopyTo (System.Windows.Automation.AutomationElement[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Automation.AutomationElement[]\n      description: The destination of the elements copied from the collection.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in the target array where copying should begin.\n  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The destination array is not large enough, or <code>index</code> is outside the bounds of the array.\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.Count\n  id: Count\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: AutomationElementCollection.Count\n  fullName: System.Windows.Automation.AutomationElementCollection.Count\n  type: Property\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Gets the number of elements in this collection.\n  remarks: ''\n  example:\n  - \"The following example shows the Count property being used.  \\n  \\n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements.\n  overload: System.Windows.Automation.AutomationElementCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: AutomationElementCollection.GetEnumerator()\n  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Returns an enumerator that can be used to iterate through the items in the collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref>.\n  overload: System.Windows.Automation.AutomationElementCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: AutomationElementCollection.IsSynchronized\n  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Gets a value indicating whether the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref> object is synchronized (thread-safe).\n  remarks: An <xref:System.Windows.Automation.AutomationElementCollection> is not thread-safe.\n  syntax:\n    content: public virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Automation.AutomationElementCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: AutomationElementCollection.Item(Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Gets the <xref href=\"System.Windows.Automation.AutomationElement\"></xref> at the specified index.\n  remarks: ''\n  example:\n  - \"In the following example, the first element is retrieved from an <xref:System.Windows.Automation.AutomationElementCollection>.  \\n  \\n [!code-vb[UIAClient_snip#182](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#182)]\\n [!code-cs[UIAClient_snip#182](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#182)]\"\n  syntax:\n    content: public System.Windows.Automation.AutomationElement this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element in the collection.\n    return:\n      type: System.Windows.Automation.AutomationElement\n      description: The <xref href=\"System.Windows.Automation.AutomationElement\"></xref> at the specified index.\n  overload: System.Windows.Automation.AutomationElementCollection.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: A negative integer was specified for <code>index</code>, or <code>index</code> is greater than or equal to <xref:System.Windows.Automation.AutomationElementCollection.Count*>.\n  platform:\n  - net462\n- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Automation.AutomationElementCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: AutomationElementCollection.SyncRoot\n  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot\n  type: Property\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Automation.AutomationElementCollection\"></xref> collection.\n  syntax:\n    content: public virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Windows.Automation.AutomationElementCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: CopyTo(AutomationElement[],Int32)\n  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)\n- uid: System.Windows.Automation.AutomationElement[]\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationElement\n  nameWithType: AutomationElement\n  fullName: System.Windows.Automation.AutomationElement[]\n  spec.csharp:\n  - uid: System.Windows.Automation.AutomationElement\n    name: AutomationElement\n    nameWithType: AutomationElement\n    fullName: AutomationElement[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Automation.AutomationElementCollection.Count\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: Count\n  nameWithType: AutomationElementCollection.Count\n  fullName: System.Windows.Automation.AutomationElementCollection.Count\n- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: AutomationElementCollection.GetEnumerator()\n  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: AutomationElementCollection.IsSynchronized\n  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: AutomationElementCollection.Item(Int32)\n  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)\n- uid: System.Windows.Automation.AutomationElement\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationElement\n  nameWithType: AutomationElement\n  fullName: System.Windows.Automation.AutomationElement\n- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: AutomationElementCollection.SyncRoot\n  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot\n- uid: System.Windows.Automation.AutomationElementCollection.CopyTo*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: AutomationElementCollection.CopyTo\n- uid: System.Windows.Automation.AutomationElementCollection.Count*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: Count\n  nameWithType: AutomationElementCollection.Count\n- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: AutomationElementCollection.GetEnumerator\n- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: AutomationElementCollection.IsSynchronized\n- uid: System.Windows.Automation.AutomationElementCollection.Item*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: Item\n  nameWithType: AutomationElementCollection.Item\n- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot*\n  parent: System.Windows.Automation.AutomationElementCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: AutomationElementCollection.SyncRoot\n"}