{"nodes":[{"pos":[2192,2286],"content":"Provides the definition of a constraint-based execution context for a set of child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the definition of a constraint-based execution context for a set of child activities.","pos":[0,94]}]},{"pos":[2299,2958],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ConditionedActivityGroup activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the ConditionedActivityGroup activity can contain other activities.       The ConditionedActivityGroup activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.       When the completion rule of the ConditionedActivityGroup evaluates to `true`, it immediately cancels any currently executing child activities and finishes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The ConditionedActivityGroup activity is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;, meaning the ConditionedActivityGroup activity can contain other activities.","pos":[0,263],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ConditionedActivityGroup activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the ConditionedActivityGroup activity can contain other activities."},{"content":"The ConditionedActivityGroup activity runs and re-executes child activities based on the evaluation of their <ph id=\"ph1\">`when`</ph> conditions.","pos":[270,397],"source":"       The ConditionedActivityGroup activity runs and re-executes child activities based on the evaluation of their `when` conditions."},{"content":"All rules are evaluated whenever required based on their data and state change dependencies.","pos":[398,490]},{"content":"When the completion rule of the ConditionedActivityGroup evaluates to <ph id=\"ph1\">`true`</ph>, it immediately cancels any currently executing child activities and finishes.","pos":[497,652],"source":"       When the completion rule of the ConditionedActivityGroup evaluates to `true`, it immediately cancels any currently executing child activities and finishes."}]},{"pos":[11533,11646],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class."},{"pos":[12717,12902],"content":"No children are executing and the &lt;xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*&gt; evaluates to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No children are executing and the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13445,13589],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class using the name of the activity."},{"pos":[13736,13774],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[14783,14795],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14894,14906],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15922,15934],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16033,16045],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16792,16869],"content":"Gets the number of times that the specified child activity has been executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of times that the specified child activity has been executed.","pos":[0,77]}]},{"pos":[17086,17105],"content":"The child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child activity.","pos":[0,19]}]},{"pos":[17162,17234],"content":"The number of times that the specified child activity has been executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of times that the specified child activity has been executed.","pos":[0,72]}]},{"pos":[17446,17636],"content":"<ph id=\"ph1\">&lt;code&gt;child&lt;/code&gt;</ph> parameter is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>child</code> parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[17747,17848],"content":"The conditioned activity group state is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The conditioned activity group state is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17943,18021],"content":"The number of times that the child activity has been run cannot be determined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of times that the child activity has been run cannot be determined.","pos":[0,78]}]},{"pos":[18565,18625],"content":"Gets the currently executing instance of the child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the currently executing instance of the child activity.","pos":[0,60]}]},{"pos":[18832,18922],"content":"The name of the child <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."},{"pos":[19006,19114],"content":"The currently executing instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."},{"pos":[19315,19503],"content":"<ph id=\"ph1\">&lt;code&gt;childactivity&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>childactivity</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[19598,19670],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">childactivity</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The executable activities do not contain the <code>childactivity</code>."},{"pos":[20204,20374],"content":"Gets the condition associated with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified dependency object.","needQuote":true,"needEscape":true,"source":"Gets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object."},{"pos":[20551,20603],"content":"The underlying data storage object for the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying data storage object for the activity.","pos":[0,52]}]},{"pos":[20661,20736],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_when\" name=\"when\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> condition.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_when\" name=\"when\" href=\"\"></xref> condition."},{"pos":[20935,21070],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>dependencyObject</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[21165,21240],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dependencyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The executable activities do not contain the <code>dependencyObject</code>."},{"pos":[22351,22363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22459,22471],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23704,23716],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23814,23826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24639,24651],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25733,25745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26437,26607],"content":"Sets the condition associated with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified dependency object.","needQuote":true,"needEscape":true,"source":"Sets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object."},{"pos":[26796,26848],"content":"The underlying data storage object for the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying data storage object for the activity.","pos":[0,52]}]},{"pos":[26910,26942],"content":"The value of the when condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the when condition.","pos":[0,32]}]},{"pos":[27141,27332],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>dependencyObject</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[27427,27502],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dependencyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The executable activities do not contain the <code>dependencyObject</code>."},{"pos":[28915,28927],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29042,29054],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29742,29876],"content":"Gets or sets a value that indicates when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should complete.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates when the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete."},{"pos":[30751,30880],"content":"A condition that determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should complete.","needQuote":true,"needEscape":true,"source":"A condition that determines whether the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete."},{"pos":[31486,31673],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> property."},{"pos":[31984,31996],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32517,32651],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the WhenConditionProperty property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the WhenConditionProperty property."},{"pos":[32961,32973],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ConditionedActivityGroup\n  id: ConditionedActivityGroup\n  children:\n  - System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  - System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  - System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  - System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  - System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  - System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  langs:\n  - csharp\n  name: ConditionedActivityGroup\n  nameWithType: ConditionedActivityGroup\n  fullName: System.Workflow.Activities.ConditionedActivityGroup\n  type: Class\n  summary: Provides the definition of a constraint-based execution context for a set of child activities.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The ConditionedActivityGroup activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the ConditionedActivityGroup activity can contain other activities.  \\n  \\n The ConditionedActivityGroup activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.  \\n  \\n When the completion rule of the ConditionedActivityGroup evaluates to `true`, it immediately cancels any currently executing child activities and finishes.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ConditionedActivityGroupDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ConditionedActivityGroup), \"Resources.cag.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ConditionedActivityGroupValidator))]\n\n      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]\n\n      public sealed class ConditionedActivityGroup : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: ConditionedActivityGroup()\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the constructor to create an instance of <xref:System.Workflow.Activities.ConditionedActivityGroup>. The code also creates two <xref:System.Workflow.Activities.CodeCondition> class instances and two <xref:System.Workflow.Activities.CodeActivity> class instances. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \\n  \\n [!code-cs[wf_samples#157](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#157)]\\n [!code-vb[wf_samples#157](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#157)]\"\n  syntax:\n    content: public ConditionedActivityGroup ();\n    parameters: []\n  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No children are executing and the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: ConditionedActivityGroup(String)\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class using the name of the activity.\n  syntax:\n    content: public ConditionedActivityGroup (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  id: GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetChildActivityExecutedCount(Activity)\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the number of times that the specified child activity has been executed.\n  syntax:\n    content: public int GetChildActivityExecutedCount (System.Workflow.ComponentModel.Activity child);\n    parameters:\n    - id: child\n      type: System.Workflow.ComponentModel.Activity\n      description: The child activity.\n    return:\n      type: System.Int32\n      description: The number of times that the specified child activity has been executed.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>child</code> parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The conditioned activity group state is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of times that the child activity has been run cannot be determined.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  id: GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetDynamicActivity(String)\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the currently executing instance of the child activity.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);\n    parameters:\n    - id: childActivityName\n      type: System.String\n      description: The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>childactivity</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>childactivity</code>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  id: GetWhenCondition(System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetWhenCondition(Object)\n  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.\n  syntax:\n    content: public static object GetWhenCondition (object dependencyObject);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The underlying data storage object for the activity.\n    return:\n      type: System.Object\n      description: The <xref uid=\"langword_csharp_when\" name=\"when\" href=\"\"></xref> condition.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dependencyObject</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>dependencyObject</code>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  id: SetWhenCondition(System.Object,System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: SetWhenCondition(Object,Object)\n  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object,Object)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(Object,Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Sets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.\n  syntax:\n    content: public static void SetWhenCondition (object dependencyObject, object value);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The underlying data storage object for the activity.\n    - id: value\n      type: System.Object\n      description: The value of the when condition.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dependencyObject</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>dependencyObject</code>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: To be added.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  id: UntilCondition\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets a value that indicates when the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set the UntilCondition to `null`, which means the `BookingCAG`<xref:System.Workflow.Activities.ConditionedActivityGroup> class never completes. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \\n  \\n [!code-cs[wf_samples#159](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#159)]\\n [!code-vb[wf_samples#159](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#159)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: A condition that determines whether the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  id: UntilConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: UntilConditionProperty\n  nameWithType: ConditionedActivityGroup.UntilConditionProperty\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  id: WhenConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: WhenConditionProperty\n  nameWithType: ConditionedActivityGroup.WhenConditionProperty\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the WhenConditionProperty property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WhenConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup()\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup()\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup(String)\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetChildActivityExecutedCount(Activity)\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetDynamicActivity(String)\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(String)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetWhenCondition(Object)\n  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: SetWhenCondition(Object,Object)\n  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object,Object)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(Object,Object)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilConditionProperty\n  nameWithType: ConditionedActivityGroup.UntilConditionProperty\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: WhenConditionProperty\n  nameWithType: ConditionedActivityGroup.WhenConditionProperty\n  fullName: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Cancel\n  nameWithType: ConditionedActivityGroup.Cancel\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Execute\n  nameWithType: ConditionedActivityGroup.Execute\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetChildActivityExecutedCount\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetDynamicActivity\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetWhenCondition\n  nameWithType: ConditionedActivityGroup.GetWhenCondition\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnClosed\n  nameWithType: ConditionedActivityGroup.OnClosed\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: SetWhenCondition\n  nameWithType: ConditionedActivityGroup.SetWhenCondition\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n"}