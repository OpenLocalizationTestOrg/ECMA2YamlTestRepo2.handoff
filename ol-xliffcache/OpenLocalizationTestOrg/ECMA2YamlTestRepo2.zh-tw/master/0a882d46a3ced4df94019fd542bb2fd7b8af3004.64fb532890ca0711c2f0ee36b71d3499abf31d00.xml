{"nodes":[{"pos":[723,836],"content":"Validates whether the value of an associated input control matches the pattern specified by a regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates whether the value of an associated input control matches the pattern specified by a regular expression.","pos":[0,113]}]},{"pos":[849,3177],"content":"The RegularExpressionValidator control checks whether the value of an input control matches a pattern defined by a regular expression. This type of validation allows you to check for predictable sequences of characters, such as those in e-mail addresses, telephone numbers, and postal codes.      > [!NOTE] >  Validation succeeds if the input control is empty. If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the RegularExpressionValidator control.       Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).       The regular-expression validation implementation is slightly different on the client than on the server. On the client, JScript regular-expression syntax is used. On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax is used. Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.      > [!NOTE] >  When you use the RegularExpressionValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).       For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>. For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).      ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The RegularExpressionValidator control checks whether the value of an input control matches a pattern defined by a regular expression.","pos":[0,134]},{"content":"This type of validation allows you to check for predictable sequences of characters, such as those in e-mail addresses, telephone numbers, and postal codes.","pos":[135,291]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Validation succeeds if the input control is empty.","pos":[297,360],"source":"      > [!NOTE] >  Validation succeeds if the input control is empty."},{"content":"If a value is required for the associated input control, use a &lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt; control in addition to the RegularExpressionValidator control.","pos":[361,542],"source":" If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the RegularExpressionValidator control."},{"content":"Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the &lt;xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A&gt; property to <ph id=\"ph1\">`false`</ph>).","pos":[549,821],"source":"       Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`)."},{"content":"The regular-expression validation implementation is slightly different on the client than on the server.","pos":[828,932]},{"content":"On the client, JScript regular-expression syntax is used.","pos":[933,990]},{"content":"On the server, &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; syntax is used.","pos":[991,1090],"source":" On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax is used."},{"content":"Since JScript regular expression syntax is a subset of &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.","pos":[1091,1357],"source":" Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you use the RegularExpressionValidator control inside an &lt;xref:System.Web.UI.UpdatePanel&gt; control, make sure that the validator control and the control it is associated with are in the same panel.","pos":[1363,1577],"source":"      > [!NOTE] >  When you use the RegularExpressionValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel."},{"content":"For more information about using the &lt;xref:System.Web.UI.UpdatePanel&gt; control for partial-page updates, see <bpt id=\"p1\">[</bpt>Partial-Page Rendering Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1578,1759],"source":" For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For additional information about validation controls, see &lt;xref:System.Web.UI.WebControls.BaseValidator&gt;.","pos":[1766,1871],"source":"       For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>."},{"content":"For more information on regular expressions, see <bpt id=\"p1\">[</bpt>.NET Framework Regular Expressions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1872,1997],"source":" For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md)."},{"content":"Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <bpt id=\"p1\">[</bpt>Accessibility in Visual Studio and ASP.NET<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>ASP.NET Controls and Accessibility<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2006,2313],"source":"      ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[14161,14275],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.RegularExpressionValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.RegularExpressionValidator\"></xref> class."},{"pos":[15045,15196],"content":"Adds to the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object the HTML attributes and styles that need to be rendered for the control.","needQuote":true,"needEscape":true,"source":"Adds to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object the HTML attributes and styles that need to be rendered for the control."},{"pos":[16684,16808],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[17382,17440],"content":"Indicates whether the value in the input control is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the value in the input control is valid.","pos":[0,58]}]},{"pos":[18864,19043],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value in the input control is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19592,19700],"content":"Gets or set the maximum time interval to execute a single matching operation before the operation times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or set the maximum time interval to execute a single matching operation before the operation times out.","pos":[0,108]}]},{"pos":[19845,19941],"content":"The maximum time interval to execute a single matching operation before the operation times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum time interval to execute a single matching operation before the operation times out.","pos":[0,96]}]},{"pos":[20527,20616],"content":"Gets or sets the regular expression that determines the pattern used to validate a field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the regular expression that determines the pattern used to validate a field.","pos":[0,89]}]},{"pos":[20629,21655],"content":"Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, e-mail addresses, telephone numbers, and postal codes.       The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string. If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.       For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  If you experience problems with pattern matching constructs, try wrapping the expression with \"^(\" and \")$\". For example, \"a&#124;ab\" becomes \"^(a&#124;ab)$\".       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, e-mail addresses, telephone numbers, and postal codes.","pos":[0,192]},{"content":"The &lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt; does not perform validation on an empty string.","pos":[199,310],"source":"       The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string."},{"content":"If the string you are testing might be empty, use the &lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt; as well as the &lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;.","pos":[311,496],"source":" If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>."},{"content":"For more information on regular expressions, see <bpt id=\"p1\">[</bpt>.NET Framework Regular Expressions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[503,628],"source":"       For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you experience problems with pattern matching constructs, try wrapping the expression with \"^(\" and \")$\".","pos":[634,755],"source":"      > [!NOTE] >  If you experience problems with pattern matching constructs, try wrapping the expression with \"^(\" and \")$\"."},{"content":"For example, \"a&amp;#124;ab\" becomes \"^(a&amp;#124;ab)$\".","pos":[756,805],"source":" For example, \"a&#124;ab\" becomes \"^(a&#124;ab)$\"."},{"content":"This property cannot be set by themes or style sheet themes.","pos":[812,872]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[873,1009],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[22839,22990],"content":"A string that specifies the regular expression used to validate a field for format. The default is &lt;xref:System.String?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies the regular expression used to validate a field for format. The default is &lt;xref:System.String?displayProperty=fullName&gt;.","pos":[0,151],"nodes":[{"content":"A string that specifies the regular expression used to validate a field for format.","pos":[0,83]},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[84,151],"source":" The default is &lt;xref:System.String?displayProperty=fullName&gt;."}]}]},{"pos":[23186,23232],"content":"The regular expression is not properly formed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression is not properly formed.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.RegularExpressionValidator\n  id: RegularExpressionValidator\n  children:\n  - System.Web.UI.WebControls.RegularExpressionValidator.#ctor\n  - System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid\n  - System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout\n  - System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression\n  langs:\n  - csharp\n  name: RegularExpressionValidator\n  nameWithType: RegularExpressionValidator\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator\n  type: Class\n  summary: Validates whether the value of an associated input control matches the pattern specified by a regular expression.\n  remarks: \"The RegularExpressionValidator control checks whether the value of an input control matches a pattern defined by a regular expression. This type of validation allows you to check for predictable sequences of characters, such as those in e-mail addresses, telephone numbers, and postal codes.  \\n  \\n> [!NOTE]\\n>  Validation succeeds if the input control is empty. If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the RegularExpressionValidator control.  \\n  \\n Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).  \\n  \\n The regular-expression validation implementation is slightly different on the client than on the server. On the client, JScript regular-expression syntax is used. On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax is used. Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.  \\n  \\n> [!NOTE]\\n>  When you use the RegularExpressionValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>. For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).  \\n  \\n## Accessibility  \\n For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates how to use the RegularExpressionValidator control to validate a five-digit postal code.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic RegularExpressionValidator Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_28_1.aspx)]\\n [!code-cs[Classic RegularExpressionValidator Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_28_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.Web.UI.ToolboxData(\"<{0}:RegularExpressionValidator runat=\"server\" ErrorMessage=\"RegularExpressionValidator\"></{0}:RegularExpressionValidator>\")]\n\n      public class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.Label\n  - System.Web.UI.WebControls.BaseValidator\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID\n  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)\n  - System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.ControlToValidate\n  - System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.Display\n  - System.Web.UI.WebControls.BaseValidator.EnableClientScript\n  - System.Web.UI.WebControls.BaseValidator.Enabled\n  - System.Web.UI.WebControls.BaseValidator.ErrorMessage\n  - System.Web.UI.WebControls.BaseValidator.ForeColor\n  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)\n  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive\n  - System.Web.UI.WebControls.BaseValidator.IsValid\n  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.PropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration\n  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.BaseValidator.RenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError\n  - System.Web.UI.WebControls.BaseValidator.Text\n  - System.Web.UI.WebControls.BaseValidator.Validate\n  - System.Web.UI.WebControls.BaseValidator.ValidationGroup\n  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)\n  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.Label.TagKey\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SaveViewState\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.TrackViewState\n  - System.Web.UI.WebControls.WebControl.Width\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  langs:\n  - csharp\n  name: RegularExpressionValidator()\n  nameWithType: RegularExpressionValidator.RegularExpressionValidator()\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.RegularExpressionValidator()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.RegularExpressionValidator\"></xref> class.\n  syntax:\n    content: public RegularExpressionValidator ();\n    parameters: []\n  overload: System.Web.UI.WebControls.RegularExpressionValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  langs:\n  - csharp\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: RegularExpressionValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Adds to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object the HTML attributes and styles that need to be rendered for the control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the AddAttributesToRender method in a custom server control so that the <xref:System.Web.UI.WebControls.RegularExpressionValidator> error message always displays as bold.  \\n  \\n [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#2](~/add/codesnippet/visualbasic/0a176ee3-1e68-4255-9fb0-_1.vb)]\\n [!code-cs[CustomRegularExpressionValidatorAddAttributesToRender#2](~/add/codesnippet/csharp/0a176ee3-1e68-4255-9fb0-_1.cs)]  \\n  \\n The following code example demonstrates how to use the use the `CustomRegularExpressionValidatorAddAttributesToRender` control, defined in the preceding example, on a Web Forms page.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomRegularExpressionValidatorAddAttributesToRender#1](~/add/codesnippet/csharp/0a176ee3-1e68-4255-9fb0-_2.aspx)]\\n [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#1](~/add/codesnippet/visualbasic/0a176ee3-1e68-4255-9fb0-_2.aspx)]\"\n  syntax:\n    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid\n  id: EvaluateIsValid\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  langs:\n  - csharp\n  name: EvaluateIsValid()\n  nameWithType: RegularExpressionValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Indicates whether the value in the input control is valid.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the EvaluateIsValid method in a custom server control so that it always checks the value against the expression for a match in a <xref:System.Web.UI.WebControls.RegularExpressionValidator>.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomRegularExpressionValidatorEvaluateIsValid#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_79_1.cs)]\\n [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_79_1.vb)]  \\n  \\n The following code example demonstrates how to use the `CustomRegularExpressionValidatorEvaluateIsValid` control, defined in the preceding example, on a Web Forms page.  \\n  \\n [!code-cs[CustomRegularExpressionValidatorEvaluateIsValid#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_79_2.aspx)]\\n [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_79_2.aspx)]\"\n  syntax:\n    content: protected override bool EvaluateIsValid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout\n  id: MatchTimeout\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  langs:\n  - csharp\n  name: MatchTimeout\n  nameWithType: RegularExpressionValidator.MatchTimeout\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or set the maximum time interval to execute a single matching operation before the operation times out.\n  syntax:\n    content: public Nullable<int> MatchTimeout { get; set; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The maximum time interval to execute a single matching operation before the operation times out.\n  overload: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression\n  id: ValidationExpression\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  langs:\n  - csharp\n  name: ValidationExpression\n  nameWithType: RegularExpressionValidator.ValidationExpression\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the regular expression that determines the pattern used to validate a field.\n  remarks: \"Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, e-mail addresses, telephone numbers, and postal codes.  \\n  \\n The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string. If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.  \\n  \\n For more information on regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  If you experience problems with pattern matching constructs, try wrapping the expression with \\\"^(\\\" and \\\")$\\\". For example, \\\"a&#124;ab\\\" becomes \\\"^(a&#124;ab)$\\\".  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates how to use the ValidationExpression property to validate a field with five numeric digits. When the <xref:System.Web.UI.WebControls.Button> control is clicked, the resulting <xref:System.Web.UI.WebControls.Button.OnClick%2A> event handler checks the <xref:System.Web.UI.Page.IsValid%2A> property of the <xref:System.Web.UI.Page> to determine whether the text in the <xref:System.Web.UI.WebControls.TextBox> satisfies the regular expression.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic RegularExpressionValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_355_1.aspx)]\\n [!code-cs[Classic RegularExpressionValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_355_1.aspx)]\"\n  syntax:\n    content: public string ValidationExpression { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the regular expression used to validate a field for format. The default is &lt;xref:System.String?displayProperty=fullName&gt;.\n  overload: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The regular expression is not properly formed.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.BaseValidator\n  isExternal: false\n  name: System.Web.UI.WebControls.BaseValidator\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.#ctor\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: RegularExpressionValidator()\n  nameWithType: RegularExpressionValidator.RegularExpressionValidator()\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.RegularExpressionValidator()\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: RegularExpressionValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: EvaluateIsValid()\n  nameWithType: RegularExpressionValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: MatchTimeout\n  nameWithType: RegularExpressionValidator.MatchTimeout\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: ValidationExpression\n  nameWithType: RegularExpressionValidator.ValidationExpression\n  fullName: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.#ctor*\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: RegularExpressionValidator\n  nameWithType: RegularExpressionValidator.RegularExpressionValidator\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender*\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: AddAttributesToRender\n  nameWithType: RegularExpressionValidator.AddAttributesToRender\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid*\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: EvaluateIsValid\n  nameWithType: RegularExpressionValidator.EvaluateIsValid\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout*\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: MatchTimeout\n  nameWithType: RegularExpressionValidator.MatchTimeout\n- uid: System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression*\n  parent: System.Web.UI.WebControls.RegularExpressionValidator\n  isExternal: false\n  name: ValidationExpression\n  nameWithType: RegularExpressionValidator.ValidationExpression\n"}