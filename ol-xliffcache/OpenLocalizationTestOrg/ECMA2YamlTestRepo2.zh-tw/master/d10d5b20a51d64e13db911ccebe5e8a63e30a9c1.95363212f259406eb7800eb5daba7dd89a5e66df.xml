{"nodes":[{"pos":[650,774],"content":"Specifies the file structure that will be used for the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventSchemaTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> log.","needQuote":true,"needEscape":true,"source":"Specifies the file structure that will be used for the <xref href=\"System.Diagnostics.EventSchemaTraceListener\"></xref> log."},{"pos":[787,2874],"content":"The TraceLogRetentionOption enumeration is used to specify the value of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> property in the <xref:System.Diagnostics.EventSchemaTraceListener> class. That property setting determines the possible and default values for the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A?displayProperty=fullName> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A?displayProperty=fullName> properties.       You can set the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> properties through the `maximumFileSize` and `maximumNumberOfFiles` custom attributes in the configuration file or by using the `maximumFileSize` or `maximumNumberOfFiles` parameters in the  <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor. If the `maximumFileSize` or `maximumNumberOfFiles` attributes in the configuration file specify an out-of-range value, the properties are set to their default values. If you specify an out-of-range value in the `maximumFileSize` or `maximumNumberOfFiles` parameter when you call the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor, an <xref:System.ArgumentOutOfRangeException> is thrown.       The following table shows the possible and default values for file size and file count that are associated with each trace log retention option. \"N/A\" indicates that the associated property is not checked for that TraceLogRetentionOption value.      |TraceLogRetentionOption|Maximum file size|Default file size|Maximum number of files|Default number of files|   |-----------------------------|-----------------------|-----------------------|-----------------------------|-----------------------------|   |LimitedCircularFiles|N/A|-1|N/A|1|   |LimitedSequentialFiles|>0|4 kB|N/A|1|   |SingleFileBoundedSize|>0|4 kB|N/A|-1|   |SingleFileUnboundedSize|>0|4 kB|>0|1|   |UnlimitedSequentialFiles|>0|4 kB|>1|2|","needQuote":false,"needEscape":true,"nodes":[{"content":"The TraceLogRetentionOption enumeration is used to specify the value of the &lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A&gt; property in the &lt;xref:System.Diagnostics.EventSchemaTraceListener&gt; class.","pos":[0,227],"source":"The TraceLogRetentionOption enumeration is used to specify the value of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> property in the <xref:System.Diagnostics.EventSchemaTraceListener> class."},{"content":"That property setting determines the possible and default values for the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A?displayProperty=fullName&gt; and &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A?displayProperty=fullName&gt; properties.","pos":[228,511],"source":" That property setting determines the possible and default values for the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A?displayProperty=fullName> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A?displayProperty=fullName> properties."},{"content":"You can set the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt; and &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt; properties through the <ph id=\"ph1\">`maximumFileSize`</ph> and <ph id=\"ph2\">`maximumNumberOfFiles`</ph> custom attributes in the configuration file or by using the <ph id=\"ph3\">`maximumFileSize`</ph> or <ph id=\"ph4\">`maximumNumberOfFiles`</ph> parameters in the  &lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A&gt; constructor.","pos":[518,948],"source":"       You can set the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> properties through the `maximumFileSize` and `maximumNumberOfFiles` custom attributes in the configuration file or by using the `maximumFileSize` or `maximumNumberOfFiles` parameters in the  <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor."},{"content":"If the <ph id=\"ph1\">`maximumFileSize`</ph> or <ph id=\"ph2\">`maximumNumberOfFiles`</ph> attributes in the configuration file specify an out-of-range value, the properties are set to their default values.","pos":[949,1115],"source":" If the `maximumFileSize` or `maximumNumberOfFiles` attributes in the configuration file specify an out-of-range value, the properties are set to their default values."},{"content":"If you specify an out-of-range value in the <ph id=\"ph1\">`maximumFileSize`</ph> or <ph id=\"ph2\">`maximumNumberOfFiles`</ph> parameter when you call the &lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A&gt; constructor, an &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown.","pos":[1116,1362],"source":" If you specify an out-of-range value in the `maximumFileSize` or `maximumNumberOfFiles` parameter when you call the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor, an <xref:System.ArgumentOutOfRangeException> is thrown."},{"content":"The following table shows the possible and default values for file size and file count that are associated with each trace log retention option.","pos":[1369,1513]},{"content":"\"N/A\" indicates that the associated property is not checked for that TraceLogRetentionOption value.","pos":[1514,1613]},{"content":"|TraceLogRetentionOption|Maximum file size|Default file size|Maximum number of files|Default number of files|   |-----------------------------|-----------------------|-----------------------|-----------------------------|-----------------------------|   |LimitedCircularFiles|N/A|-1|N/A|1|   |LimitedSequentialFiles|&gt;0|4 kB|N/A|1|   |SingleFileBoundedSize|&gt;0|4 kB|N/A|-1|   |SingleFileUnboundedSize|&gt;0|4 kB|&gt;0|1|   |UnlimitedSequentialFiles|&gt;0|4 kB|&gt;1|2|","pos":[1619,2073],"source":"      |TraceLogRetentionOption|Maximum file size|Default file size|Maximum number of files|Default number of files|   |-----------------------------|-----------------------|-----------------------|-----------------------------|-----------------------------|   |LimitedCircularFiles|N/A|-1|N/A|1|   |LimitedSequentialFiles|>0|4 kB|N/A|1|   |SingleFileBoundedSize|>0|4 kB|N/A|-1|   |SingleFileUnboundedSize|>0|4 kB|>0|1|   |UnlimitedSequentialFiles|>0|4 kB|>1|2|"}]},{"pos":[3413,3864],"content":"A finite number of sequential files, each with a maximum file size. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles*> property value is reached, the first file is cleared and overwritten. Files are then incrementally overwritten in a circular manner.","needQuote":true,"needEscape":true,"nodes":[{"content":"A finite number of sequential files, each with a maximum file size.","pos":[0,67]},{"content":"When the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize<bpt id=\"p1\">*</bpt>&gt; property value is reached, writing starts in a new file with an incremented integer suffix. When the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles<ept id=\"p1\">*</ept>&gt; property value is reached, the first file is cleared and overwritten.","pos":[68,388],"source":" When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles*> property value is reached, the first file is cleared and overwritten."},{"content":"Files are then incrementally overwritten in a circular manner.","pos":[389,451]}]},{"pos":[3995,4007],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4482,4718],"content":"A finite number of sequential files, each with a maximum file size. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix.","needQuote":true,"needEscape":true,"nodes":[{"content":"A finite number of sequential files, each with a maximum file size. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix.","pos":[0,236],"nodes":[{"content":"A finite number of sequential files, each with a maximum file size.","pos":[0,67]},{"content":"When the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*&gt; property value is reached, writing starts in a new file with an incremented integer suffix.","pos":[68,236],"source":" When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix."}]}]},{"pos":[4851,4863],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5333,5470],"content":"One file with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"One file with a maximum file size that is determined by the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*&gt; property.","pos":[0,137],"source":"One file with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property."}]},{"pos":[5602,5614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6094,6141],"content":"One file with no maximum file size restriction.","needQuote":true,"needEscape":true,"nodes":[{"content":"One file with no maximum file size restriction.","pos":[0,47]}]},{"pos":[6275,6287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6772,7079],"content":"An unlimited number of sequential files, each with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property. There is no logical bound to the number or size of the files, but it is limited by the physical constraints imposed by the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unlimited number of sequential files, each with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property. There is no logical bound to the number or size of the files, but it is limited by the physical constraints imposed by the computer.","pos":[0,307],"nodes":[{"content":"An unlimited number of sequential files, each with a maximum file size that is determined by the &lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*&gt; property.","pos":[0,174],"source":"An unlimited number of sequential files, each with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property."},{"content":"There is no logical bound to the number or size of the files, but it is limited by the physical constraints imposed by the computer.","pos":[175,307]}]}]},{"pos":[7214,7226],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.TraceLogRetentionOption\n  id: TraceLogRetentionOption\n  children:\n  - System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles\n  - System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles\n  - System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize\n  - System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize\n  - System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles\n  langs:\n  - csharp\n  name: TraceLogRetentionOption\n  nameWithType: TraceLogRetentionOption\n  fullName: System.Diagnostics.TraceLogRetentionOption\n  type: Enum\n  summary: Specifies the file structure that will be used for the <xref href=\"System.Diagnostics.EventSchemaTraceListener\"></xref> log.\n  remarks: \"The TraceLogRetentionOption enumeration is used to specify the value of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> property in the <xref:System.Diagnostics.EventSchemaTraceListener> class. That property setting determines the possible and default values for the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A?displayProperty=fullName> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A?displayProperty=fullName> properties.  \\n  \\n You can set the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> and <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> properties through the `maximumFileSize` and `maximumNumberOfFiles` custom attributes in the configuration file or by using the `maximumFileSize` or `maximumNumberOfFiles` parameters in the  <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor. If the `maximumFileSize` or `maximumNumberOfFiles` attributes in the configuration file specify an out-of-range value, the properties are set to their default values. If you specify an out-of-range value in the `maximumFileSize` or `maximumNumberOfFiles` parameter when you call the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor, an <xref:System.ArgumentOutOfRangeException> is thrown.  \\n  \\n The following table shows the possible and default values for file size and file count that are associated with each trace log retention option. \\\"N/A\\\" indicates that the associated property is not checked for that TraceLogRetentionOption value.  \\n  \\n|TraceLogRetentionOption|Maximum file size|Default file size|Maximum number of files|Default number of files|  \\n|-----------------------------|-----------------------|-----------------------|-----------------------------|-----------------------------|  \\n|LimitedCircularFiles|N/A|-1|N/A|1|  \\n|LimitedSequentialFiles|>0|4 kB|N/A|1|  \\n|SingleFileBoundedSize|>0|4 kB|N/A|-1|  \\n|SingleFileUnboundedSize|>0|4 kB|>0|1|  \\n|UnlimitedSequentialFiles|>0|4 kB|>1|2|\"\n  syntax:\n    content: public enum TraceLogRetentionOption\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles\n  id: LimitedCircularFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  langs:\n  - csharp\n  name: LimitedCircularFiles\n  nameWithType: TraceLogRetentionOption.LimitedCircularFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics\n  summary: A finite number of sequential files, each with a maximum file size. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles*> property value is reached, the first file is cleared and overwritten. Files are then incrementally overwritten in a circular manner.\n  syntax:\n    content: LimitedCircularFiles\n    return:\n      type: System.Diagnostics.TraceLogRetentionOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles\n  id: LimitedSequentialFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  langs:\n  - csharp\n  name: LimitedSequentialFiles\n  nameWithType: TraceLogRetentionOption.LimitedSequentialFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics\n  summary: A finite number of sequential files, each with a maximum file size. When the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property value is reached, writing starts in a new file with an incremented integer suffix.\n  syntax:\n    content: LimitedSequentialFiles\n    return:\n      type: System.Diagnostics.TraceLogRetentionOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize\n  id: SingleFileBoundedSize\n  parent: System.Diagnostics.TraceLogRetentionOption\n  langs:\n  - csharp\n  name: SingleFileBoundedSize\n  nameWithType: TraceLogRetentionOption.SingleFileBoundedSize\n  fullName: System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics\n  summary: One file with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property.\n  syntax:\n    content: SingleFileBoundedSize\n    return:\n      type: System.Diagnostics.TraceLogRetentionOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize\n  id: SingleFileUnboundedSize\n  parent: System.Diagnostics.TraceLogRetentionOption\n  langs:\n  - csharp\n  name: SingleFileUnboundedSize\n  nameWithType: TraceLogRetentionOption.SingleFileUnboundedSize\n  fullName: System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics\n  summary: One file with no maximum file size restriction.\n  syntax:\n    content: SingleFileUnboundedSize\n    return:\n      type: System.Diagnostics.TraceLogRetentionOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles\n  id: UnlimitedSequentialFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  langs:\n  - csharp\n  name: UnlimitedSequentialFiles\n  nameWithType: TraceLogRetentionOption.UnlimitedSequentialFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics\n  summary: An unlimited number of sequential files, each with a maximum file size that is determined by the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*> property. There is no logical bound to the number or size of the files, but it is limited by the physical constraints imposed by the computer.\n  syntax:\n    content: UnlimitedSequentialFiles\n    return:\n      type: System.Diagnostics.TraceLogRetentionOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  isExternal: false\n  name: LimitedCircularFiles\n  nameWithType: TraceLogRetentionOption.LimitedCircularFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles\n- uid: System.Diagnostics.TraceLogRetentionOption\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceLogRetentionOption\n  nameWithType: TraceLogRetentionOption\n  fullName: System.Diagnostics.TraceLogRetentionOption\n- uid: System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  isExternal: false\n  name: LimitedSequentialFiles\n  nameWithType: TraceLogRetentionOption.LimitedSequentialFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles\n- uid: System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize\n  parent: System.Diagnostics.TraceLogRetentionOption\n  isExternal: false\n  name: SingleFileBoundedSize\n  nameWithType: TraceLogRetentionOption.SingleFileBoundedSize\n  fullName: System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize\n- uid: System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize\n  parent: System.Diagnostics.TraceLogRetentionOption\n  isExternal: false\n  name: SingleFileUnboundedSize\n  nameWithType: TraceLogRetentionOption.SingleFileUnboundedSize\n  fullName: System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize\n- uid: System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles\n  parent: System.Diagnostics.TraceLogRetentionOption\n  isExternal: false\n  name: UnlimitedSequentialFiles\n  nameWithType: TraceLogRetentionOption.UnlimitedSequentialFiles\n  fullName: System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles\n"}