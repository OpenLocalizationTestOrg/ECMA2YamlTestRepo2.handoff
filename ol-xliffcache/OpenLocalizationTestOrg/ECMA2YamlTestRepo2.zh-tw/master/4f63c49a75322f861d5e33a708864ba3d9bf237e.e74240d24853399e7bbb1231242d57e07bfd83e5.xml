{"nodes":[{"pos":[1457,1637],"content":"[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">[</bpt>Json.NET<ept id=\"p1\">](http://www.newtonsoft.com/json)</ept> should be used serialization and deserialization.","pos":[0,92],"source":"[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization."},{"content":"Provides serialization and deserialization functionality for AJAX-enabled applications.","pos":[93,180]}]},{"pos":[7950,8090],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has no type resolver.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class that has no type resolver."},{"pos":[8102,8709],"content":"An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named \"__type\") in the serialized JSON string. A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted. For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named \"__type\") in the serialized JSON string. A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted. For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.","pos":[0,607],"nodes":[{"content":"An instance of the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class without a type resolver does not include type metadata properties (named \"__type\") in the serialized JSON string.","pos":[0,198],"source":"An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named \"__type\") in the serialized JSON string."},{"content":"A type metadata property is used by the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt; and &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt; methods to determine the appropriate managed type to which the JSON string will be converted.","pos":[199,492],"source":" A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted."},{"content":"For information about type resolvers, see the &lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt; class.","pos":[493,607],"source":" For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class."}]}]},{"pos":[9532,9678],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has a custom type resolver.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class that has a custom type resolver."},{"pos":[9691,11115],"content":"When it is serializing an object, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class uses the `resolver` parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property (\"__type\"). Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.       You can set the `resolver` parameter to `null`, which is equivalent to calling the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor.       The instance of <xref:System.Web.Script.Serialization.JavaScriptSerializer> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver. This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applied. You cannot modify this built-in type resolver programmatically.      > [!IMPORTANT] >  Using an instance of this object initialized with a custom type-resolver can present a security risk. Use this object only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","needQuote":false,"needEscape":true,"nodes":[{"content":"When it is serializing an object, the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class uses the <ph id=\"ph1\">`resolver`</ph> parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property (\"__type\").","pos":[0,252],"source":"When it is serializing an object, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class uses the `resolver` parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property (\"__type\")."},{"content":"Similarly, when the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.","pos":[253,480],"source":" Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance."},{"content":"You can set the <ph id=\"ph1\">`resolver`</ph> parameter to <ph id=\"ph2\">`null`</ph>, which is equivalent to calling the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A&gt; constructor.","pos":[487,653],"source":"       You can set the `resolver` parameter to `null`, which is equivalent to calling the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor."},{"content":"The instance of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver.","pos":[660,863],"source":"       The instance of <xref:System.Web.Script.Serialization.JavaScriptSerializer> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver."},{"content":"This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the &lt;xref:System.Web.Script.Services.GenerateScriptTypeAttribute&gt; applied.","pos":[864,1080],"source":" This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applied."},{"content":"You cannot modify this built-in type resolver programmatically.","pos":[1081,1144]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Using an instance of this object initialized with a custom type-resolver can present a security risk.","pos":[1150,1269],"source":"      > [!IMPORTANT] >  Using an instance of this object initialized with a custom type-resolver can present a security risk."},{"content":"Use this object only with trusted data.","pos":[1270,1309]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Untrusted Data Security Risks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.","pos":[1310,1415],"source":" For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."}]},{"pos":[11356,11388],"content":"The custom type-resolver object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom type-resolver object.","pos":[0,32]}]},{"pos":[12034,12086],"content":"Converts the specified object to the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to the specified type.","pos":[0,52]}]},{"pos":[12099,12718],"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","pos":[0,617],"nodes":[{"content":"When the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; instance is serializing a type for which a custom converter is registered, the serializer calls the &lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt; method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.","pos":[0,343],"source":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string."},{"content":"The &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt; method can also throw exceptions if the object graph is too complex, or if registered instances of &lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt; have caused converter recursion.","pos":[350,617],"source":"       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion."}]}]},{"pos":[12877,12899],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[12964,12998],"content":"The type to convert the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]},{"pos":[13056,13083],"content":"The serialized JSON string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serialized JSON string.","pos":[0,27]}]},{"pos":[13289,13633],"content":"The resulting JSON-formatted string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resulting JSON-formatted string exceeds the value of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*&gt;.","pos":[0,132],"source":"The resulting JSON-formatted string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a circular reference.","pos":[139,197],"source":"       -or-       <code>obj</code> contains a circular reference."},{"content":"A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","pos":[198,340]}]},{"pos":[13729,13849],"content":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recursion limit defined by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*&gt; was exceeded.","pos":[0,120],"source":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded."}]},{"pos":[14500,14512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14558,14570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15217,15285],"content":"Converts a JSON-formatted string to an object of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a JSON-formatted string to an object of the specified type.","pos":[0,68]}]},{"pos":[15297,15499],"content":"This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method does.","needQuote":true,"needEscape":true,"nodes":[{"content":"This deserialization method does not try to cast the root of the object graph to a specific type, the way that the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt; method does.","pos":[0,202],"source":"This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method does."}]},{"pos":[15659,15690],"content":"The JSON string to deserialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The JSON string to deserialize.","pos":[0,31]}]},{"pos":[15755,15788],"content":"The type of the resulting object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the resulting object.","pos":[0,33]}]},{"pos":[15846,15870],"content":"The deserialized object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The deserialized object.","pos":[0,24]}]},{"pos":[16065,16148],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>input</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16244,16814],"content":"The length of <code>input</code> exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.       -or-       <code>input</code> contains an unexpected character sequence.       -or-       <code>input</code> is a dictionary type and a non-string key value was encountered.       -or-       <code>input</code> includes member definitions that are not available on the target type.","needQuote":false,"needEscape":true,"nodes":[{"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> exceeds the value of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength<bpt id=\"p2\">*</bpt>&gt;.       -or-       The recursion limit defined by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit<ept id=\"p2\">*</ept>&gt; was exceeded.","pos":[0,267],"source":"The length of <code>input</code> exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an unexpected character sequence.","pos":[274,346],"source":"       -or-       <code>input</code> contains an unexpected character sequence."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a dictionary type and a non-string key value was encountered.","pos":[353,447],"source":"       -or-       <code>input</code> is a dictionary type and a non-string key value was encountered."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> includes member definitions that are not available on the target type.","pos":[454,554],"source":"       -or-       <code>input</code> includes member definitions that are not available on the target type."}]},{"pos":[16927,17769],"content":"<code>input</code> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.       -or-       <code>input</code> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.       -or-       <code>input</code> contains a \"__type\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface).       -or-       An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.       -or-       It is not possible to convert <code>input</code> to the target type.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.","pos":[0,190],"source":"<code>input</code> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.","pos":[197,395],"source":"       -or-       <code>input</code> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates either <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).","pos":[402,579],"source":"       -or-       <code>input</code> contains a \"__type\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface)."},{"content":"-or-       An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.","pos":[586,734]},{"content":"-or-       It is not possible to convert <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> to the target type.","pos":[741,820],"source":"       -or-       It is not possible to convert <code>input</code> to the target type."}]},{"pos":[18413,18425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18471,18483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19119,19173],"content":"Converts the specified JSON string to an object graph.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified JSON string to an object graph.","pos":[0,54]}]},{"pos":[19185,19377],"content":"This deserialization method does not try to cast the root of the object graph to a specific type, as with the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This deserialization method does not try to cast the root of the object graph to a specific type, as with the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt; method.","pos":[0,192],"source":"This deserialization method does not try to cast the root of the object graph to a specific type, as with the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method."}]},{"pos":[19526,19561],"content":"The JSON string to be deserialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The JSON string to be deserialized.","pos":[0,35]}]},{"pos":[19619,19643],"content":"The deserialized object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The deserialized object.","pos":[0,24]}]},{"pos":[19844,19927],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>input</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20023,20590],"content":"The <code>input</code> length exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.       -or-       <code>input</code> contains an unexpected character sequence.       -or-       <code>input</code> is a dictionary type and a non-string key value was encountered.       -or-       <code>input</code> includes member definitions that are not available on the target type.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> length exceeds the value of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength<bpt id=\"p2\">*</bpt>&gt;.       -or-       The recursion limit defined by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit<ept id=\"p2\">*</ept>&gt; was exceeded.","pos":[0,264],"source":"The <code>input</code> length exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an unexpected character sequence.","pos":[271,343],"source":"       -or-       <code>input</code> contains an unexpected character sequence."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a dictionary type and a non-string key value was encountered.","pos":[350,444],"source":"       -or-       <code>input</code> is a dictionary type and a non-string key value was encountered."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> includes member definitions that are not available on the target type.","pos":[451,551],"source":"       -or-       <code>input</code> includes member definitions that are not available on the target type."}]},{"pos":[20703,21545],"content":"<code>input</code> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.       -or-       <code>input</code> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.       -or-       <code>input</code> contains a \"__type\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface).       -or-       An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.       -or-       It is not possible to convert <code>input</code> to the target type.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.","pos":[0,190],"source":"<code>input</code> contains a \"__type\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.","pos":[197,395],"source":"       -or-       <code>input</code> contains a \"__type\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains a \"__type\" property that indicates either <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).","pos":[402,579],"source":"       -or-       <code>input</code> contains a \"__type\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface)."},{"content":"-or-       An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.","pos":[586,734]},{"content":"-or-       It is not possible to convert <ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> to the target type.","pos":[741,820],"source":"       -or-       It is not possible to convert <code>input</code> to the target type."}]},{"pos":[22012,22165],"content":"Gets or sets the maximum length of JSON strings that are accepted by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum length of JSON strings that are accepted by the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class."},{"pos":[22178,22694],"content":"The value of the MaxJsonLength property applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. Use the `jsonSerialization` element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer. For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the MaxJsonLength property applies only when you explicitly create an instance of the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class.","pos":[0,165],"source":"The value of the MaxJsonLength property applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class."},{"content":"Use the <ph id=\"ph1\">`jsonSerialization`</ph> element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer.","pos":[166,344],"source":" Use the `jsonSerialization` element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer."},{"content":"For more information about the configuration elements for serialization, see <bpt id=\"p1\">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[345,516],"source":" For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[22814,22936],"content":"The maximum length of JSON strings. The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length of JSON strings. The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.","pos":[0,122],"nodes":[{"content":"The maximum length of JSON strings.","pos":[0,35]},{"content":"The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.","pos":[36,122]}]}]},{"pos":[23145,23198],"content":"The property is set to a value that is less than one.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value that is less than one.","pos":[0,53]}]},{"pos":[23669,23748],"content":"Gets or sets the limit for constraining the number of object levels to process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the limit for constraining the number of object levels to process.","pos":[0,79]}]},{"pos":[23761,24731],"content":"The RecursionLimit property refers to the number of levels in the object hierarchy that <xref:System.Web.Script.Serialization.JavaScriptSerializer> will process in the following cases:      -   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is deserializing a JSON string.      -   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is walking an object graph during serialization.       The value of RecursionLimit applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. Use the `jsonSerialization` element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer. For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The RecursionLimit property refers to the number of levels in the object hierarchy that &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; will process in the following cases:      -   When the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class is deserializing a JSON string.","pos":[0,300],"source":"The RecursionLimit property refers to the number of levels in the object hierarchy that <xref:System.Web.Script.Serialization.JavaScriptSerializer> will process in the following cases:      -   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is deserializing a JSON string."},{"content":"-   When the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class is walking an object graph during serialization.","pos":[306,433],"source":"      -   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is walking an object graph during serialization."},{"content":"The value of RecursionLimit applies only when you explicitly create an instance of the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class.","pos":[440,593],"source":"       The value of RecursionLimit applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class."},{"content":"Use the <ph id=\"ph1\">`jsonSerialization`</ph> element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer.","pos":[594,792],"source":" Use the `jsonSerialization` element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer."},{"content":"For more information about the configuration elements for serialization, see <bpt id=\"p1\">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[793,964],"source":" For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[24852,24900],"content":"The number of object levels. The default is 100.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of object levels. The default is 100.","pos":[0,48],"nodes":[{"content":"The number of object levels.","pos":[0,28]},{"content":"The default is 100.","pos":[29,48]}]}]},{"pos":[25110,25163],"content":"The property is set to a value that is less than one.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value that is less than one.","pos":[0,53]}]},{"pos":[25940,26061],"content":"Registers a custom converter with the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Registers a custom converter with the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> instance."},{"pos":[26074,26942],"content":"You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the RegisterConverters method. When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.       Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type. As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type.       For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the RegisterConverters method. When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.       Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type. As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type.       For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.","pos":[0,864],"nodes":[{"content":"You can register one or more custom converters with a &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; instance by using the RegisterConverters method.","pos":[0,162],"source":"You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the RegisterConverters method."},{"content":"When custom converters are registered, &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; uses the converters both to serialize managed types and to deserialize JSON strings to managed types.","pos":[163,363],"source":" When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types."},{"content":"Multiple converters can be registered with the same &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; instance, and these converters can indicate support for the same type.","pos":[370,552],"source":"       Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type."},{"content":"As a result, the last converter that is registered for a specific type is the one that will be used by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; to serialize the type.","pos":[553,738],"source":" As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type."},{"content":"For more information about custom converters, see the &lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt; class.","pos":[745,864],"source":"       For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class."}]}]},{"pos":[27773,27835],"content":"An array that contains the custom converters to be registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains the custom converters to be registered.","pos":[0,62]}]},{"pos":[28037,28125],"content":"<ph id=\"ph1\">&lt;code&gt;converters&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>converters</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[28623,28659],"content":"Converts an object to a JSON string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an object to a JSON string.","pos":[0,36]}]},{"pos":[28672,29218],"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.       The Serialize method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.       The Serialize method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","pos":[0,544],"nodes":[{"content":"When the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; instance is serializing a type for which a custom converter is registered, the serializer calls the &lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt; method to obtain the dictionary of name/value pairs that will be converted to a JSON string.","pos":[0,333],"source":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string."},{"content":"The Serialize method can also throw exceptions if the object graph is too complex, or if registered instances of &lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt; have caused converter recursion.","pos":[340,544],"source":"       The Serialize method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion."}]}]},{"pos":[29781,29805],"content":"The object to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to serialize.","pos":[0,24]}]},{"pos":[29863,29890],"content":"The serialized JSON string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serialized JSON string.","pos":[0,27]}]},{"pos":[30092,30426],"content":"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resulting JSON string exceeds the value of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*&gt;.","pos":[0,122],"source":"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a circular reference.","pos":[129,187],"source":"       -or-       <code>obj</code> contains a circular reference."},{"content":"A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","pos":[188,330]}]},{"pos":[30522,30642],"content":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recursion limit defined by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*&gt; was exceeded.","pos":[0,120],"source":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded."}]},{"pos":[31234,31349],"content":"Serializes an object and writes the resulting JSON string to the specified <xref:System.Text.StringBuilder> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes an object and writes the resulting JSON string to the specified &lt;xref:System.Text.StringBuilder&gt; object.","pos":[0,115],"source":"Serializes an object and writes the resulting JSON string to the specified <xref:System.Text.StringBuilder> object."}]},{"pos":[31362,31971],"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.","pos":[0,607],"nodes":[{"content":"When the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; instance is serializing a type for which a custom converter is registered, the serializer calls the &lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt; method to obtain the dictionary of name/value pairs that will be converted to a JSON string.","pos":[0,333],"source":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string."},{"content":"The &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt; method can also throw exceptions if the object graph is too complex, or if registered instances of &lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt; have caused converter recursion.","pos":[340,607],"source":"       The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion."}]}]},{"pos":[32141,32165],"content":"The object to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to serialize.","pos":[0,24]}]},{"pos":[32240,32322],"content":"The <xref:System.Text.StringBuilder> object that is used to write the JSON string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Text.StringBuilder&gt; object that is used to write the JSON string.","pos":[0,82],"source":"The <xref:System.Text.StringBuilder> object that is used to write the JSON string."}]},{"pos":[32524,32858],"content":"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.       -or-       <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resulting JSON string exceeds the value of &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*&gt;.","pos":[0,122],"source":"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a circular reference.","pos":[129,187],"source":"       -or-       <code>obj</code> contains a circular reference."},{"content":"A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.","pos":[188,330]}]},{"pos":[32954,33074],"content":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recursion limit defined by &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*&gt; was exceeded.","pos":[0,120],"source":"The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded."}]},{"pos":[33177,33261],"content":"<code>output</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[20,84],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Script.Serialization.JavaScriptSerializer\n  id: JavaScriptSerializer\n  children:\n  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor\n  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)\n  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)\n  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)\n  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)\n  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)\n  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)\n  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength\n  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit\n  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})\n  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)\n  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)\n  langs:\n  - csharp\n  name: JavaScriptSerializer\n  nameWithType: JavaScriptSerializer\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer\n  type: Class\n  summary: '[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.'\n  remarks: \"The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \\n  \\n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \\n  \\n## Mapping Between Managed Types and JSON  \\n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \\n  \\n> [!NOTE]\\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \\n  \\n|Managed type|JSON equivalent|  \\n|------------------|---------------------|  \\n|<xref:System.String> (UTF-8 encoding only).|String|  \\n|<xref:System.Char>|String|  \\n|Single null char (such as, \\\\0 )|Null|  \\n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \\n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \\n|<xref:System.DBNull>|A string value of null|  \\n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \\n|<xref:System.DateTime>|Date object, represented in JSON as \\\"\\\\\\\\/Date(number of ticks)\\\\\\\\/\\\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \\n|Enumerations of integer type|Integer equivalent of the enumeration value|  \\n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \\n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \\n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \\\"__type\\\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \\n|<xref:System.Guid>|String representation of a GUID|  \\n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|\"\n  example:\n  - \"The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \\n  \\n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \\n  \\n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \\n  \\n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \\n  \\n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]\"\n  syntax:\n    content: public class JavaScriptSerializer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor\n  id: '#ctor'\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: JavaScriptSerializer()\n  nameWithType: JavaScriptSerializer.JavaScriptSerializer()\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class that has no type resolver.\n  remarks: An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named \"__type\") in the serialized JSON string. A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted. For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.\n  syntax:\n    content: public JavaScriptSerializer ();\n    parameters: []\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)\n  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: JavaScriptSerializer(JavaScriptTypeResolver)\n  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class that has a custom type resolver.\n  remarks: \"When it is serializing an object, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class uses the `resolver` parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property (\\\"__type\\\"). Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.  \\n  \\n You can set the `resolver` parameter to `null`, which is equivalent to calling the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor.  \\n  \\n The instance of <xref:System.Web.Script.Serialization.JavaScriptSerializer> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver. This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applied. You cannot modify this built-in type resolver programmatically.  \\n  \\n> [!IMPORTANT]\\n>  Using an instance of this object initialized with a custom type-resolver can present a security risk. Use this object only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\"\n  syntax:\n    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);\n    parameters:\n    - id: resolver\n      type: System.Web.Script.Serialization.JavaScriptTypeResolver\n      description: The custom type-resolver object.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)\n  id: ConvertToType(System.Object,System.Type)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: ConvertToType(Object,Type)\n  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Converts the specified object to the specified type.\n  remarks: \"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.  \\n  \\n The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.\"\n  syntax:\n    content: public object ConvertToType (object obj, Type targetType);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to convert.\n    - id: targetType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The serialized JSON string.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The resulting JSON-formatted string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.  \\n  \\n -or-  \\n  \\n <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)\n  id: ConvertToType``1(System.Object)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: ConvertToType(Object)\n  nameWithType: JavaScriptSerializer.ConvertToType(Object)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  syntax:\n    content: public T ConvertToType<T> (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)\n  id: Deserialize(System.String,System.Type)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: Deserialize(String,Type)\n  nameWithType: JavaScriptSerializer.Deserialize(String,Type)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Converts a JSON-formatted string to an object of the specified type.\n  remarks: This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method does.\n  syntax:\n    content: public object Deserialize (string input, Type targetType);\n    parameters:\n    - id: input\n      type: System.String\n      description: The JSON string to deserialize.\n    - id: targetType\n      type: System.Type\n      description: The type of the resulting object.\n    return:\n      type: System.Object\n      description: The deserialized object.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>input</code> exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.  \\n  \\n -or-  \\n  \\n The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.  \\n  \\n -or-  \\n  \\n <code>input</code> contains an unexpected character sequence.  \\n  \\n -or-  \\n  \\n <code>input</code> is a dictionary type and a non-string key value was encountered.  \\n  \\n -or-  \\n  \\n <code>input</code> includes member definitions that are not available on the target type.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>input</code> contains a \\\"__type\\\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  \\n  \\n -or-  \\n  \\n <code>input</code> contains a \\\"__type\\\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  \\n  \\n -or-  \\n  \\n <code>input</code> contains a \\\"__type\\\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface).  \\n  \\n -or-  \\n  \\n An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  \\n  \\n -or-  \\n  \\n It is not possible to convert <code>input</code> to the target type.\"\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)\n  id: Deserialize``1(System.String)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: Deserialize(String)\n  nameWithType: JavaScriptSerializer.Deserialize(String)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  syntax:\n    content: public T Deserialize<T> (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)\n  id: DeserializeObject(System.String)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: DeserializeObject(String)\n  nameWithType: JavaScriptSerializer.DeserializeObject(String)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Converts the specified JSON string to an object graph.\n  remarks: This deserialization method does not try to cast the root of the object graph to a specific type, as with the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method.\n  syntax:\n    content: public object DeserializeObject (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: The JSON string to be deserialized.\n    return:\n      type: System.Object\n      description: The deserialized object.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>input</code> length exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.  \\n  \\n -or-  \\n  \\n The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.  \\n  \\n -or-  \\n  \\n <code>input</code> contains an unexpected character sequence.  \\n  \\n -or-  \\n  \\n <code>input</code> is a dictionary type and a non-string key value was encountered.  \\n  \\n -or-  \\n  \\n <code>input</code> includes member definitions that are not available on the target type.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>input</code> contains a \\\"__type\\\" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  \\n  \\n -or-  \\n  \\n <code>input</code> contains a \\\"__type\\\" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  \\n  \\n -or-  \\n  \\n <code>input</code> contains a \\\"__type\\\" property that indicates either <xref:System.Object> or a non-instantiable type (for example, an abstract type or an interface).  \\n  \\n -or-  \\n  \\n An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  \\n  \\n -or-  \\n  \\n It is not possible to convert <code>input</code> to the target type.\"\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength\n  id: MaxJsonLength\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: MaxJsonLength\n  nameWithType: JavaScriptSerializer.MaxJsonLength\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Gets or sets the maximum length of JSON strings that are accepted by the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> class.\n  remarks: 'The value of the MaxJsonLength property applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. Use the `jsonSerialization` element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer. For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public int MaxJsonLength { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum length of JSON strings. The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value that is less than one.\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit\n  id: RecursionLimit\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: RecursionLimit\n  nameWithType: JavaScriptSerializer.RecursionLimit\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Gets or sets the limit for constraining the number of object levels to process.\n  remarks: \"The RecursionLimit property refers to the number of levels in the object hierarchy that <xref:System.Web.Script.Serialization.JavaScriptSerializer> will process in the following cases:  \\n  \\n-   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is deserializing a JSON string.  \\n  \\n-   When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is walking an object graph during serialization.  \\n  \\n The value of RecursionLimit applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. Use the `jsonSerialization` element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer. For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public int RecursionLimit { get; set; }\n    return:\n      type: System.Int32\n      description: The number of object levels. The default is 100.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value that is less than one.\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})\n  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: RegisterConverters(IEnumerable<JavaScriptConverter>)\n  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Registers a custom converter with the <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> instance.\n  remarks: \"You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the RegisterConverters method. When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.  \\n  \\n Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type. As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type.  \\n  \\n For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.\"\n  example:\n  - \"The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \\n  \\n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]\"\n  syntax:\n    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);\n    parameters:\n    - id: converters\n      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}\n      description: An array that contains the custom converters to be registered.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>converters</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)\n  id: Serialize(System.Object)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: Serialize(Object)\n  nameWithType: JavaScriptSerializer.Serialize(Object)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Converts an object to a JSON string.\n  remarks: \"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.  \\n  \\n The Serialize method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.\"\n  example:\n  - \"The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public string Serialize (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to serialize.\n    return:\n      type: System.String\n      description: The serialized JSON string.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.  \\n  \\n -or-  \\n  \\n <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)\n  id: Serialize(System.Object,System.Text.StringBuilder)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  langs:\n  - csharp\n  name: Serialize(Object,StringBuilder)\n  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Serializes an object and writes the resulting JSON string to the specified <xref:System.Text.StringBuilder> object.\n  remarks: \"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.  \\n  \\n The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.\"\n  syntax:\n    content: public void Serialize (object obj, System.Text.StringBuilder output);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to serialize.\n    - id: output\n      type: System.Text.StringBuilder\n      description: The <xref:System.Text.StringBuilder> object that is used to write the JSON string.\n  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The resulting JSON string exceeds the value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.  \\n  \\n -or-  \\n  \\n <code>obj</code> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The recursion limit defined by <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*> was exceeded.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>output</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: JavaScriptSerializer()\n  nameWithType: JavaScriptSerializer.JavaScriptSerializer()\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: JavaScriptSerializer(JavaScriptTypeResolver)\n  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)\n- uid: System.Web.Script.Serialization.JavaScriptTypeResolver\n  parent: System.Web.Script.Serialization\n  isExternal: false\n  name: JavaScriptTypeResolver\n  nameWithType: JavaScriptTypeResolver\n  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: ConvertToType(Object,Type)\n  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: ConvertToType(Object)\n  nameWithType: JavaScriptSerializer.ConvertToType(Object)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Deserialize(String,Type)\n  nameWithType: JavaScriptSerializer.Deserialize(String,Type)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Deserialize(String)\n  nameWithType: JavaScriptSerializer.Deserialize(String)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: DeserializeObject(String)\n  nameWithType: JavaScriptSerializer.DeserializeObject(String)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: MaxJsonLength\n  nameWithType: JavaScriptSerializer.MaxJsonLength\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: RecursionLimit\n  nameWithType: JavaScriptSerializer.RecursionLimit\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: RegisterConverters(IEnumerable<JavaScriptConverter>)\n  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)\n- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<JavaScriptConverter>\n  nameWithType: IEnumerable<JavaScriptConverter>\n  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.Script.Serialization.JavaScriptConverter\n    name: JavaScriptConverter\n    nameWithType: JavaScriptConverter\n    fullName: JavaScriptConverter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Serialize(Object)\n  nameWithType: JavaScriptSerializer.Serialize(Object)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Serialize(Object,StringBuilder)\n  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)\n- uid: System.Text.StringBuilder\n  parent: System.Text\n  isExternal: true\n  name: StringBuilder\n  nameWithType: StringBuilder\n  fullName: System.Text.StringBuilder\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: JavaScriptSerializer\n  nameWithType: JavaScriptSerializer.JavaScriptSerializer\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: ConvertToType\n  nameWithType: JavaScriptSerializer.ConvertToType\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: ConvertToType<T>\n  nameWithType: JavaScriptSerializer.ConvertToType<T>\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Deserialize\n  nameWithType: JavaScriptSerializer.Deserialize\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Deserialize<T>\n  nameWithType: JavaScriptSerializer.Deserialize<T>\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: DeserializeObject\n  nameWithType: JavaScriptSerializer.DeserializeObject\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: MaxJsonLength\n  nameWithType: JavaScriptSerializer.MaxJsonLength\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: RecursionLimit\n  nameWithType: JavaScriptSerializer.RecursionLimit\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: RegisterConverters\n  nameWithType: JavaScriptSerializer.RegisterConverters\n- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*\n  parent: System.Web.Script.Serialization.JavaScriptSerializer\n  isExternal: false\n  name: Serialize\n  nameWithType: JavaScriptSerializer.Serialize\n"}