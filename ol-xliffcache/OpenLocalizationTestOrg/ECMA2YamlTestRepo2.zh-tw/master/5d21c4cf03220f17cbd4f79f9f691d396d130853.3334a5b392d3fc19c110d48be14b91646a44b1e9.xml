{"nodes":[{"pos":[788,991],"content":"Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.","pos":[0,203]}]},{"pos":[1003,1840],"content":"Implement the IOperationInvoker interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object. It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object. It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and [InvokeEnd(Object, Object\\[\\], IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True) variant.  The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implement the IOperationInvoker interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.","pos":[0,162]},{"content":"It has a synchronous &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt; method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.","pos":[163,373],"source":" It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object."},{"content":"It also has a &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A&gt; and <bpt id=\"p1\">[</bpt>InvokeEnd(Object, Object<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>, IAsyncResult)<ept id=\"p1\">](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&amp;autoUpgrade=True)</ept> variant.","pos":[374,677],"source":" It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and [InvokeEnd(Object, Object\\[\\], IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True) variant."},{"content":"The &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A&gt; property specifies whether the synchronous or asynchronous method should be used.","pos":[679,837],"source":"  The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used."}]},{"pos":[2372,2455],"content":"Returns an &lt;xref:System.Array?displayProperty=fullName&gt; of parameter objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an <ph id=\"ph1\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> of parameter objects.","pos":[0,83],"source":"Returns an &lt;xref:System.Array?displayProperty=fullName&gt; of parameter objects."}]},{"pos":[2467,2684],"content":"Implement this to return an array of parameters for the operation. This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implement this to return an array of parameters for the operation. This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.","pos":[0,217],"nodes":[{"content":"Implement this to return an array of parameters for the operation.","pos":[0,66]},{"content":"This array is filled by the formatter and passed back to the invoker when &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt; is called.","pos":[67,217],"source":" This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called."}]}]},{"pos":[2821,2886],"content":"The parameters that are to be used as arguments to the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters that are to be used as arguments to the operation.","pos":[0,65]}]},{"pos":[3565,3653],"content":"Returns an object and a set of output objects from an instance and set of input objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an object and a set of output objects from an instance and set of input objects.","pos":[0,88]}]},{"pos":[3836,3861],"content":"The object to be invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be invoked.","pos":[0,25]}]},{"pos":[3926,3951],"content":"The inputs to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inputs to the method.","pos":[0,25]}]},{"pos":[4017,4045],"content":"The outputs from the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The outputs from the method.","pos":[0,28]}]},{"pos":[4103,4120],"content":"The return value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The return value.","pos":[0,17]}]},{"pos":[4888,4997],"content":"An asynchronous implementation of the <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous implementation of the &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*&gt; method.","pos":[0,109],"source":"An asynchronous implementation of the <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*> method."}]},{"pos":[5207,5232],"content":"The object to be invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be invoked.","pos":[0,25]}]},{"pos":[5297,5322],"content":"The inputs to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inputs to the method.","pos":[0,25]}]},{"pos":[5394,5427],"content":"The asynchronous callback object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback object.","pos":[0,33]}]},{"pos":[5489,5511],"content":"Associated state data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Associated state data.","pos":[0,22]}]},{"pos":[5575,5674],"content":"A &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; used to complete the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.IAsyncResult?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> used to complete the asynchronous call.","pos":[0,99],"source":"A &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; used to complete the asynchronous call."}]},{"pos":[6385,6413],"content":"The asynchronous end method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous end method.","pos":[0,28]}]},{"pos":[6603,6622],"content":"The object invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object invoked.","pos":[0,19]}]},{"pos":[6688,6716],"content":"The outputs from the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The outputs from the method.","pos":[0,28]}]},{"pos":[6785,6854],"content":"The &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.IAsyncResult?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object.","pos":[0,69],"source":"The &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; object."}]},{"pos":[6912,6929],"content":"The return value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The return value.","pos":[0,17]}]},{"pos":[7466,7677],"content":"Gets a value that specifies whether the &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin<ept id=\"p1\">*</ept>&gt; method is called by the dispatcher.","needQuote":true,"needEscape":true,"source":"Gets a value that specifies whether the <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*> or <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*> method is called by the dispatcher."},{"pos":[7689,7945],"content":"The default invoker dispatches messages to the synchronous operation by default. This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default invoker dispatches messages to the synchronous operation by default. This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.","pos":[0,256],"nodes":[{"content":"The default invoker dispatches messages to the synchronous operation by default.","pos":[0,80]},{"content":"This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements &lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker&gt;.","pos":[81,256],"source":" This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>."}]}]},{"pos":[8062,8250],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dispatcher invokes the synchronous operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dispatcher invokes the synchronous operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker\n  id: IOperationInvoker\n  children:\n  - System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs\n  - System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)\n  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)\n  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)\n  - System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous\n  langs:\n  - csharp\n  name: IOperationInvoker\n  nameWithType: IOperationInvoker\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker\n  type: Interface\n  summary: Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.\n  remarks: Implement the IOperationInvoker interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object. It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object. It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and [InvokeEnd(Object, Object\\[\\], IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True) variant.  The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.\n  syntax:\n    content: public interface IOperationInvoker\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs\n  id: AllocateInputs\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  langs:\n  - csharp\n  name: AllocateInputs()\n  nameWithType: IOperationInvoker.AllocateInputs()\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an &lt;xref:System.Array?displayProperty=fullName&gt; of parameter objects.\n  remarks: Implement this to return an array of parameters for the operation. This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.\n  syntax:\n    content: public object[] AllocateInputs ();\n    parameters: []\n    return:\n      type: System.Object[]\n      description: The parameters that are to be used as arguments to the operation.\n  overload: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)\n  id: Invoke(System.Object,System.Object[],System.Object[]@)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  langs:\n  - csharp\n  name: Invoke(Object,Object[],Object[])\n  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an object and a set of output objects from an instance and set of input objects.\n  syntax:\n    content: public object Invoke (object instance, object[] inputs, out object[] outputs);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object to be invoked.\n    - id: inputs\n      type: System.Object[]\n      description: The inputs to the method.\n    - id: outputs\n      type: System.Object[]\n      description: The outputs from the method.\n    return:\n      type: System.Object\n      description: The return value.\n  overload: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)\n  id: InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  langs:\n  - csharp\n  name: InvokeBegin(Object,Object[],AsyncCallback,Object)\n  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: An asynchronous implementation of the <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*> method.\n  syntax:\n    content: public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object to be invoked.\n    - id: inputs\n      type: System.Object[]\n      description: The inputs to the method.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback object.\n    - id: state\n      type: System.Object\n      description: Associated state data.\n    return:\n      type: System.IAsyncResult\n      description: A &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; used to complete the asynchronous call.\n  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)\n  id: InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  langs:\n  - csharp\n  name: InvokeEnd(Object,Object[],IAsyncResult)\n  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: The asynchronous end method.\n  syntax:\n    content: public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object invoked.\n    - id: outputs\n      type: System.Object[]\n      description: The outputs from the method.\n    - id: result\n      type: System.IAsyncResult\n      description: The &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; object.\n    return:\n      type: System.Object\n      description: The return value.\n  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous\n  id: IsSynchronous\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  langs:\n  - csharp\n  name: IsSynchronous\n  nameWithType: IOperationInvoker.IsSynchronous\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that specifies whether the <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*> or <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*> method is called by the dispatcher.\n  remarks: The default invoker dispatches messages to the synchronous operation by default. This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.\n  syntax:\n    content: public bool IsSynchronous { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dispatcher invokes the synchronous operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: AllocateInputs()\n  nameWithType: IOperationInvoker.AllocateInputs()\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: Invoke(Object,Object[],Object[])\n  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: InvokeBegin(Object,Object[],AsyncCallback,Object)\n  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: InvokeEnd(Object,Object[],IAsyncResult)\n  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: IsSynchronous\n  nameWithType: IOperationInvoker.IsSynchronous\n  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: AllocateInputs\n  nameWithType: IOperationInvoker.AllocateInputs\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: Invoke\n  nameWithType: IOperationInvoker.Invoke\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: InvokeBegin\n  nameWithType: IOperationInvoker.InvokeBegin\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: InvokeEnd\n  nameWithType: IOperationInvoker.InvokeEnd\n- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*\n  parent: System.ServiceModel.Dispatcher.IOperationInvoker\n  isExternal: false\n  name: IsSynchronous\n  nameWithType: IOperationInvoker.IsSynchronous\n"}