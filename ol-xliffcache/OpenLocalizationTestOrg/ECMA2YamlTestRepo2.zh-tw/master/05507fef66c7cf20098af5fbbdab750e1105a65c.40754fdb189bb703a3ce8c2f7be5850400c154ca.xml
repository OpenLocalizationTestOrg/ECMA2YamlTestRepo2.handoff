{"nodes":[{"pos":[408,673],"content":"Specifies whether a &lt;xref:System.Net.Sockets.Socket&gt; will remain connected after a call to the &lt;xref:System.Net.Sockets.Socket.Close<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Net.Sockets.TcpClient.Close<ept id=\"p1\">*</ept>&gt; methods and the length of time it will remain connected, if data remains to be sent.","needQuote":true,"needEscape":true,"source":"Specifies whether a <xref:System.Net.Sockets.Socket> will remain connected after a call to the <xref:System.Net.Sockets.Socket.Close*> or <xref:System.Net.Sockets.TcpClient.Close*> methods and the length of time it will remain connected, if data remains to be sent."},{"pos":[686,2441],"content":"There may still be data available in the outgoing network buffer after an application calls the <xref:System.Net.Sockets.Socket> or <xref:System.Net.Sockets.TcpClient> method. If you want to specify the amount of time that the <xref:System.Net.Sockets.Socket> will attempt to transmit unsent data after closing, create a LingerOption with the `enable` parameter set to `true`, and the `seconds` parameter set to the desired amount of time. The `seconds` parameter is used to indicate how long you would like the <xref:System.Net.Sockets.Socket> to remain connected before timing out. If you do not want the <xref:System.Net.Sockets.Socket> to stay connected for any length of time after closing, create a LingerOption instance with the `enable` parameter set to `true` and the `seconds` parameter set to zero. In this case, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost. Once created, pass the LingerOption to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> method. If you are sending and receiving data with a <xref:System.Net.Sockets.TcpClient>, then set the LingerOption instance in the <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a <xref:System.Net.Sockets.Socket> when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set and for a <xref:System.Net.Sockets.TcpClient> when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.","needQuote":false,"needEscape":true,"nodes":[{"content":"There may still be data available in the outgoing network buffer after an application calls the &lt;xref:System.Net.Sockets.Socket&gt; or &lt;xref:System.Net.Sockets.TcpClient&gt; method.","pos":[0,175],"source":"There may still be data available in the outgoing network buffer after an application calls the <xref:System.Net.Sockets.Socket> or <xref:System.Net.Sockets.TcpClient> method."},{"content":"If you want to specify the amount of time that the &lt;xref:System.Net.Sockets.Socket&gt; will attempt to transmit unsent data after closing, create a LingerOption with the <ph id=\"ph1\">`enable`</ph> parameter set to <ph id=\"ph2\">`true`</ph>, and the <ph id=\"ph3\">`seconds`</ph> parameter set to the desired amount of time.","pos":[176,439],"source":" If you want to specify the amount of time that the <xref:System.Net.Sockets.Socket> will attempt to transmit unsent data after closing, create a LingerOption with the `enable` parameter set to `true`, and the `seconds` parameter set to the desired amount of time."},{"content":"The <ph id=\"ph1\">`seconds`</ph> parameter is used to indicate how long you would like the &lt;xref:System.Net.Sockets.Socket&gt; to remain connected before timing out.","pos":[440,583],"source":" The `seconds` parameter is used to indicate how long you would like the <xref:System.Net.Sockets.Socket> to remain connected before timing out."},{"content":"If you do not want the &lt;xref:System.Net.Sockets.Socket&gt; to stay connected for any length of time after closing, create a LingerOption instance with the <ph id=\"ph1\">`enable`</ph> parameter set to <ph id=\"ph2\">`true`</ph> and the <ph id=\"ph3\">`seconds`</ph> parameter set to zero.","pos":[584,809],"source":" If you do not want the <xref:System.Net.Sockets.Socket> to stay connected for any length of time after closing, create a LingerOption instance with the `enable` parameter set to `true` and the `seconds` parameter set to zero."},{"content":"In this case, the &lt;xref:System.Net.Sockets.Socket&gt; will close immediately and any unsent data will be lost.","pos":[810,917],"source":" In this case, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost."},{"content":"Once created, pass the LingerOption to the &lt;xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName&gt; method.","pos":[918,1045],"source":" Once created, pass the LingerOption to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> method."},{"content":"If you are sending and receiving data with a &lt;xref:System.Net.Sockets.TcpClient&gt;, then set the LingerOption instance in the &lt;xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName&gt; property.","pos":[1046,1255],"source":" If you are sending and receiving data with a <xref:System.Net.Sockets.TcpClient>, then set the LingerOption instance in the <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property."},{"content":"The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.","pos":[1262,1378]},{"content":"In most cases, the time-out computed by the stack is more relevant than one defined by an application.","pos":[1379,1481]},{"content":"This is the default behavior for a &lt;xref:System.Net.Sockets.Socket&gt; when the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is not set and for a &lt;xref:System.Net.Sockets.TcpClient&gt; when the &lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt; property is not set.","pos":[1482,1753],"source":" This is the default behavior for a <xref:System.Net.Sockets.Socket> when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set and for a <xref:System.Net.Sockets.TcpClient> when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set."}]},{"pos":[3520,3613],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.LingerOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Sockets.LingerOption\"></xref> class."},{"pos":[3626,6175],"content":"There may still be data available in the outgoing network buffer after you close the <xref:System.Net.Sockets.Socket>. Use the `enable` parameter to specify whether you would like the <xref:System.Net.Sockets.Socket> to continue transmitting unsent data after the close method is called. Use the `seconds` parameter to indicate how long you would like the <xref:System.Net.Sockets.Socket> to attempt transferring unsent data before timing out. If you specify `true` for the `enable` parameter and 0 for the `seconds` parameter, the <xref:System.Net.Sockets.Socket> will attempt to send data until there is no data left in the outgoing network buffer. If you specify `false` for the `enable` parameter, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost.       The following table describes the behavior on the <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName> and <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> methods based on the possible values of the `enable` and `seconds` parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> or <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","needQuote":false,"needEscape":true,"nodes":[{"content":"There may still be data available in the outgoing network buffer after you close the &lt;xref:System.Net.Sockets.Socket&gt;.","pos":[0,118],"source":"There may still be data available in the outgoing network buffer after you close the <xref:System.Net.Sockets.Socket>."},{"content":"Use the <ph id=\"ph1\">`enable`</ph> parameter to specify whether you would like the &lt;xref:System.Net.Sockets.Socket&gt; to continue transmitting unsent data after the close method is called.","pos":[119,287],"source":" Use the `enable` parameter to specify whether you would like the <xref:System.Net.Sockets.Socket> to continue transmitting unsent data after the close method is called."},{"content":"Use the <ph id=\"ph1\">`seconds`</ph> parameter to indicate how long you would like the &lt;xref:System.Net.Sockets.Socket&gt; to attempt transferring unsent data before timing out.","pos":[288,443],"source":" Use the `seconds` parameter to indicate how long you would like the <xref:System.Net.Sockets.Socket> to attempt transferring unsent data before timing out."},{"content":"If you specify <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`enable`</ph> parameter and 0 for the <ph id=\"ph3\">`seconds`</ph> parameter, the &lt;xref:System.Net.Sockets.Socket&gt; will attempt to send data until there is no data left in the outgoing network buffer.","pos":[444,650],"source":" If you specify `true` for the `enable` parameter and 0 for the `seconds` parameter, the <xref:System.Net.Sockets.Socket> will attempt to send data until there is no data left in the outgoing network buffer."},{"content":"If you specify <ph id=\"ph1\">`false`</ph> for the <ph id=\"ph2\">`enable`</ph> parameter, the &lt;xref:System.Net.Sockets.Socket&gt; will close immediately and any unsent data will be lost.","pos":[651,795],"source":" If you specify `false` for the `enable` parameter, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost."},{"content":"The following table describes the behavior on the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; and &lt;xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName&gt; methods based on the possible values of the <ph id=\"ph1\">`enable`</ph> and <ph id=\"ph2\">`seconds`</ph> parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName&gt; or &lt;xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName&gt; property.","pos":[802,1309],"source":"       The following table describes the behavior on the <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName> and <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> methods based on the possible values of the `enable` and `seconds` parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> or <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property."},{"content":"|<ph id=\"ph1\">`enable`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`seconds`</ph>|Behavior|   |--------------|---------------|--------------|   |<ph id=\"ph4\">`false`</ph> (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |<ph id=\"ph5\">`true`</ph> (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |<ph id=\"ph6\">`true`</ph> (enabled)|A zero timeout.|Discards any pending data.","pos":[1315,1842],"source":"      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data."},{"content":"For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.","pos":[1843,2048]},{"content":"In most cases, the time-out computed by the stack is more relevant than one defined by an application.","pos":[2049,2151]},{"content":"This is the default behavior for a socket when the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is not set.","pos":[2152,2271],"source":" This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set."},{"content":"When the &lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt; property stored in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","pos":[2278,2537],"source":"       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."}]},{"pos":[6827,7083],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remain connected after the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method is called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7146,7288],"content":"The number of seconds to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of seconds to remain connected after the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method is called.","pos":[0,142],"source":"The number of seconds to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called."}]},{"pos":[7693,7800],"content":"Gets or sets a value that indicates whether to linger after the <xref:System.Net.Sockets.Socket> is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to linger after the &lt;xref:System.Net.Sockets.Socket&gt; is closed.","pos":[0,107],"source":"Gets or sets a value that indicates whether to linger after the <xref:System.Net.Sockets.Socket> is closed."}]},{"pos":[7813,9728],"content":"You can use the Enabled property to determine whether the <xref:System.Net.Sockets.Socket> will linger after closing. Change this value to `true` or `false` and pass the altered <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.to disable or enable lingering.       The following table describes the behavior for the possible values of the Enabled property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use the Enabled property to determine whether the &lt;xref:System.Net.Sockets.Socket&gt; will linger after closing.","pos":[0,117],"source":"You can use the Enabled property to determine whether the <xref:System.Net.Sockets.Socket> will linger after closing."},{"content":"Change this value to <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> and pass the altered &lt;xref:System.Net.Sockets.LingerOption&gt; to the &lt;xref:System.Net.Sockets.Socket.SetSocketOption%2A&gt; method or set the &lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt; or &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property.to disable or enable lingering.","pos":[118,436],"source":" Change this value to `true` or `false` and pass the altered <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.to disable or enable lingering."},{"content":"The following table describes the behavior for the possible values of the Enabled property and the &lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt; property stored in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property.","pos":[443,675],"source":"       The following table describes the behavior for the possible values of the Enabled property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property."},{"content":"|<ph id=\"ph1\">`enable`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`seconds`</ph>|Behavior|   |--------------|---------------|--------------|   |<ph id=\"ph4\">`false`</ph> (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |<ph id=\"ph5\">`true`</ph> (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |<ph id=\"ph6\">`true`</ph> (enabled)|A zero timeout.|Discards any pending data.","pos":[681,1208],"source":"      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data."},{"content":"For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.","pos":[1209,1414]},{"content":"In most cases, the time-out computed by the stack is more relevant than one defined by an application.","pos":[1415,1517]},{"content":"This is the default behavior for a socket when the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is not set.","pos":[1518,1637],"source":" This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set."},{"content":"When the &lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt; property stored in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","pos":[1644,1903],"source":"       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."}]},{"pos":[9845,10124],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Net.Sockets.Socket&gt; should linger after <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> is called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Net.Sockets.Socket> should linger after &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10546,10723],"content":"Gets or sets the amount of time to remain connected after calling the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method if data remains to be sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount of time to remain connected after calling the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method if data remains to be sent.","pos":[0,177],"source":"Gets or sets the amount of time to remain connected after calling the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method if data remains to be sent."}]},{"pos":[10736,12897],"content":"Use this value if you want to determine how long a closed <xref:System.Net.Sockets.Socket> will attempt to transfer unsent data before timing out. You can also set this value to the desired time-out period, in seconds.       If the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property is `true`, and you set LingerTime to 0, the <xref:System.Net.Sockets.Socket> discards any pending data to send in the outgoing network buffer. If you change this value, you must pass the altered <xref:System.Net.Sockets.LingerOption> instance to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.       The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this value if you want to determine how long a closed &lt;xref:System.Net.Sockets.Socket&gt; will attempt to transfer unsent data before timing out.","pos":[0,146],"source":"Use this value if you want to determine how long a closed <xref:System.Net.Sockets.Socket> will attempt to transfer unsent data before timing out."},{"content":"You can also set this value to the desired time-out period, in seconds.","pos":[147,218]},{"content":"If the &lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt; property is <ph id=\"ph1\">`true`</ph>, and you set LingerTime to 0, the &lt;xref:System.Net.Sockets.Socket&gt; discards any pending data to send in the outgoing network buffer.","pos":[225,433],"source":"       If the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property is `true`, and you set LingerTime to 0, the <xref:System.Net.Sockets.Socket> discards any pending data to send in the outgoing network buffer."},{"content":"If you change this value, you must pass the altered &lt;xref:System.Net.Sockets.LingerOption&gt; instance to the &lt;xref:System.Net.Sockets.Socket.SetSocketOption%2A&gt; method or set the &lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt; or &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property.","pos":[434,722],"source":" If you change this value, you must pass the altered <xref:System.Net.Sockets.LingerOption> instance to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property."},{"content":"The following table describes the behavior for the possible values of the &lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt; property and the LingerTime property stored in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property.","pos":[729,961],"source":"       The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property."},{"content":"|<ph id=\"ph1\">`enable`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`seconds`</ph>|Behavior|   |--------------|---------------|--------------|   |<ph id=\"ph4\">`false`</ph> (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |<ph id=\"ph5\">`true`</ph> (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |<ph id=\"ph6\">`true`</ph> (enabled)|A zero timeout.|Discards any pending data.","pos":[967,1494],"source":"      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data."},{"content":"For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.","pos":[1495,1700]},{"content":"In most cases, the time-out computed by the stack is more relevant than one defined by an application.","pos":[1701,1803]},{"content":"This is the default behavior for a socket when the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is not set.","pos":[1804,1923],"source":" This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set."},{"content":"When the LingerTime property stored in the &lt;xref:System.Net.Sockets.Socket.LingerState%2A&gt; property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.","pos":[1930,2147],"source":"       When the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."}]},{"pos":[13382,13521],"content":"The amount of time, in seconds, to remain connected after calling &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of time, in seconds, to remain connected after calling <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,139],"source":"The amount of time, in seconds, to remain connected after calling &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.LingerOption\n  id: LingerOption\n  children:\n  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)\n  - System.Net.Sockets.LingerOption.Enabled\n  - System.Net.Sockets.LingerOption.LingerTime\n  langs:\n  - csharp\n  name: LingerOption\n  nameWithType: LingerOption\n  fullName: System.Net.Sockets.LingerOption\n  type: Class\n  summary: Specifies whether a <xref:System.Net.Sockets.Socket> will remain connected after a call to the <xref:System.Net.Sockets.Socket.Close*> or <xref:System.Net.Sockets.TcpClient.Close*> methods and the length of time it will remain connected, if data remains to be sent.\n  remarks: \"There may still be data available in the outgoing network buffer after an application calls the <xref:System.Net.Sockets.Socket> or <xref:System.Net.Sockets.TcpClient> method. If you want to specify the amount of time that the <xref:System.Net.Sockets.Socket> will attempt to transmit unsent data after closing, create a LingerOption with the `enable` parameter set to `true`, and the `seconds` parameter set to the desired amount of time. The `seconds` parameter is used to indicate how long you would like the <xref:System.Net.Sockets.Socket> to remain connected before timing out. If you do not want the <xref:System.Net.Sockets.Socket> to stay connected for any length of time after closing, create a LingerOption instance with the `enable` parameter set to `true` and the `seconds` parameter set to zero. In this case, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost. Once created, pass the LingerOption to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> method. If you are sending and receiving data with a <xref:System.Net.Sockets.TcpClient>, then set the LingerOption instance in the <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.  \\n  \\n The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a <xref:System.Net.Sockets.Socket> when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set and for a <xref:System.Net.Sockets.TcpClient> when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.\"\n  example:\n  - \"The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \\n  \\n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]\"\n  syntax:\n    content: public class LingerOption\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)\n  id: '#ctor(System.Boolean,System.Int32)'\n  parent: System.Net.Sockets.LingerOption\n  langs:\n  - csharp\n  name: LingerOption(Boolean,Int32)\n  nameWithType: LingerOption.LingerOption(Boolean,Int32)\n  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Initializes a new instance of the <xref href=\"System.Net.Sockets.LingerOption\"></xref> class.\n  remarks: \"There may still be data available in the outgoing network buffer after you close the <xref:System.Net.Sockets.Socket>. Use the `enable` parameter to specify whether you would like the <xref:System.Net.Sockets.Socket> to continue transmitting unsent data after the close method is called. Use the `seconds` parameter to indicate how long you would like the <xref:System.Net.Sockets.Socket> to attempt transferring unsent data before timing out. If you specify `true` for the `enable` parameter and 0 for the `seconds` parameter, the <xref:System.Net.Sockets.Socket> will attempt to send data until there is no data left in the outgoing network buffer. If you specify `false` for the `enable` parameter, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost.  \\n  \\n The following table describes the behavior on the <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName> and <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> methods based on the possible values of the `enable` and `seconds` parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> or <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.  \\n  \\n|`enable`|`seconds`|Behavior|  \\n|--------------|---------------|--------------|  \\n|`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|  \\n|`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|  \\n|`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|  \\n  \\n The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.  \\n  \\n When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.\"\n  example:\n  - \"The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \\n  \\n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]\"\n  syntax:\n    content: public LingerOption (bool enable, int seconds);\n    parameters:\n    - id: enable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: seconds\n      type: System.Int32\n      description: The number of seconds to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called.\n  overload: System.Net.Sockets.LingerOption.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.LingerOption.Enabled\n  id: Enabled\n  parent: System.Net.Sockets.LingerOption\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: LingerOption.Enabled\n  fullName: System.Net.Sockets.LingerOption.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Gets or sets a value that indicates whether to linger after the <xref:System.Net.Sockets.Socket> is closed.\n  remarks: \"You can use the Enabled property to determine whether the <xref:System.Net.Sockets.Socket> will linger after closing. Change this value to `true` or `false` and pass the altered <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.to disable or enable lingering.  \\n  \\n The following table describes the behavior for the possible values of the Enabled property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.  \\n  \\n|`enable`|`seconds`|Behavior|  \\n|--------------|---------------|--------------|  \\n|`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|  \\n|`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|  \\n|`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|  \\n  \\n The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.  \\n  \\n When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Net.Sockets.Socket> should linger after &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Sockets.LingerOption.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.LingerOption.LingerTime\n  id: LingerTime\n  parent: System.Net.Sockets.LingerOption\n  langs:\n  - csharp\n  name: LingerTime\n  nameWithType: LingerOption.LingerTime\n  fullName: System.Net.Sockets.LingerOption.LingerTime\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Gets or sets the amount of time to remain connected after calling the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method if data remains to be sent.\n  remarks: \"Use this value if you want to determine how long a closed <xref:System.Net.Sockets.Socket> will attempt to transfer unsent data before timing out. You can also set this value to the desired time-out period, in seconds.  \\n  \\n If the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property is `true`, and you set LingerTime to 0, the <xref:System.Net.Sockets.Socket> discards any pending data to send in the outgoing network buffer. If you change this value, you must pass the altered <xref:System.Net.Sockets.LingerOption> instance to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.  \\n  \\n The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.  \\n  \\n|`enable`|`seconds`|Behavior|  \\n|--------------|---------------|--------------|  \\n|`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|  \\n|`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|  \\n|`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|  \\n  \\n The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.  \\n  \\n When the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.\"\n  example:\n  - \"The following example displays the value of this property.  \\n  \\n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]\"\n  syntax:\n    content: public int LingerTime { get; set; }\n    return:\n      type: System.Int32\n      description: The amount of time, in seconds, to remain connected after calling &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;.\n  overload: System.Net.Sockets.LingerOption.LingerTime*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: LingerOption(Boolean,Int32)\n  nameWithType: LingerOption.LingerOption(Boolean,Int32)\n  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.LingerOption.Enabled\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: Enabled\n  nameWithType: LingerOption.Enabled\n  fullName: System.Net.Sockets.LingerOption.Enabled\n- uid: System.Net.Sockets.LingerOption.LingerTime\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: LingerTime\n  nameWithType: LingerOption.LingerTime\n  fullName: System.Net.Sockets.LingerOption.LingerTime\n- uid: System.Net.Sockets.LingerOption.#ctor*\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: LingerOption\n  nameWithType: LingerOption.LingerOption\n- uid: System.Net.Sockets.LingerOption.Enabled*\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: Enabled\n  nameWithType: LingerOption.Enabled\n- uid: System.Net.Sockets.LingerOption.LingerTime*\n  parent: System.Net.Sockets.LingerOption\n  isExternal: false\n  name: LingerTime\n  nameWithType: LingerOption.LingerTime\n"}