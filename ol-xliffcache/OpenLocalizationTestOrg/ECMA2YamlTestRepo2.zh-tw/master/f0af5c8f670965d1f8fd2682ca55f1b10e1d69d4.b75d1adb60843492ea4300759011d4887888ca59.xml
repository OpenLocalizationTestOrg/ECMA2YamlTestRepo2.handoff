{"nodes":[{"pos":[884,967],"content":"Manages the authentication modules called during the client authentication process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages the authentication modules called during the client authentication process.","pos":[0,83]}]},{"pos":[980,2185],"content":"AuthenticationManager is a static class that manages the authentication modules that an application uses. When a request is made to protected resources, the AuthenticationManager calls the <xref:System.Net.AuthenticationManager.Authenticate%2A> method to get an <xref:System.Net.Authorization> instance to use in subsequent requests.       The AuthenticationManager queries each registered authentication module by calling the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method for each module. The first authentication module to return an <xref:System.Net.Authorization> instance is used to authenticate the request.       Modules that provide the basic, digest, negotiate, NTLM, and Kerberos authentication types are registered with the AuthenticationManager by default. Additional authentication modules that implement the <xref:System.Net.IAuthenticationModule> interface can be added using the <xref:System.Net.AuthenticationManager.Register%2A> method. Authentication modules are called in the order in which they were added to the list.      > [!NOTE] >  The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0.","needQuote":false,"needEscape":true,"nodes":[{"content":"AuthenticationManager is a static class that manages the authentication modules that an application uses.","pos":[0,105]},{"content":"When a request is made to protected resources, the AuthenticationManager calls the &lt;xref:System.Net.AuthenticationManager.Authenticate%2A&gt; method to get an &lt;xref:System.Net.Authorization&gt; instance to use in subsequent requests.","pos":[106,333],"source":" When a request is made to protected resources, the AuthenticationManager calls the <xref:System.Net.AuthenticationManager.Authenticate%2A> method to get an <xref:System.Net.Authorization> instance to use in subsequent requests."},{"content":"The AuthenticationManager queries each registered authentication module by calling the &lt;xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName&gt; method for each module.","pos":[340,531],"source":"       The AuthenticationManager queries each registered authentication module by calling the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method for each module."},{"content":"The first authentication module to return an &lt;xref:System.Net.Authorization&gt; instance is used to authenticate the request.","pos":[532,654],"source":" The first authentication module to return an <xref:System.Net.Authorization> instance is used to authenticate the request."},{"content":"Modules that provide the basic, digest, negotiate, NTLM, and Kerberos authentication types are registered with the AuthenticationManager by default.","pos":[661,809]},{"content":"Additional authentication modules that implement the &lt;xref:System.Net.IAuthenticationModule&gt; interface can be added using the &lt;xref:System.Net.AuthenticationManager.Register%2A&gt; method.","pos":[810,995],"source":" Additional authentication modules that implement the <xref:System.Net.IAuthenticationModule> interface can be added using the <xref:System.Net.AuthenticationManager.Register%2A> method."},{"content":"Authentication modules are called in the order in which they were added to the list.","pos":[996,1080]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0.","pos":[1086,1198],"source":"      > [!NOTE] >  The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0."}]},{"pos":[3229,3345],"content":"Calls each registered authentication module to find the first module that can respond to the authentication request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls each registered authentication module to find the first module that can respond to the authentication request.","pos":[0,116]}]},{"pos":[3358,3940],"content":"The Authenticate method calls the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method on each registered authentication module until one of the module responds with an <xref:System.Net.Authorization> instance.       The first <xref:System.Net.Authorization> instance returned is used to authenticate the request. If no authentication module can authenticate the request, the Authenticate method returns `null`.       Authentication modules are called in the order in which they are registered with the <xref:System.Net.AuthenticationManager>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Authenticate method calls the &lt;xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName&gt; method on each registered authentication module until one of the module responds with an &lt;xref:System.Net.Authorization&gt; instance.","pos":[0,245],"source":"The Authenticate method calls the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method on each registered authentication module until one of the module responds with an <xref:System.Net.Authorization> instance."},{"content":"The first &lt;xref:System.Net.Authorization&gt; instance returned is used to authenticate the request.","pos":[252,348],"source":"       The first <xref:System.Net.Authorization> instance returned is used to authenticate the request."},{"content":"If no authentication module can authenticate the request, the Authenticate method returns <ph id=\"ph1\">`null`</ph>.","pos":[349,446],"source":" If no authentication module can authenticate the request, the Authenticate method returns `null`."},{"content":"Authentication modules are called in the order in which they are registered with the &lt;xref:System.Net.AuthenticationManager&gt;.","pos":[453,578],"source":"       Authentication modules are called in the order in which they are registered with the <xref:System.Net.AuthenticationManager>."}]},{"pos":[4186,4234],"content":"The challenge returned by the Internet resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The challenge returned by the Internet resource.","pos":[0,48]}]},{"pos":[4306,4383],"content":"The <xref:System.Net.WebRequest> that initiated the authentication challenge.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; that initiated the authentication challenge.","pos":[0,77],"source":"The <xref:System.Net.WebRequest> that initiated the authentication challenge."}]},{"pos":[4461,4525],"content":"The <xref:System.Net.ICredentials> associated with this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.ICredentials&gt; associated with this request.","pos":[0,64],"source":"The <xref:System.Net.ICredentials> associated with this request."}]},{"pos":[4594,4864],"content":"An instance of the <xref href=\"System.Net.Authorization\"></xref> class containing the result of the authorization attempt. If there is no authentication module to respond to the challenge, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Authorization\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class containing the result of the authorization attempt.","pos":[0,122],"source":"An instance of the <xref href=\"System.Net.Authorization\"></xref> class containing the result of the authorization attempt."},{"content":"If there is no authentication module to respond to the challenge, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[123,270],"source":" If there is no authentication module to respond to the challenge, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[5041,5364],"content":"<code>challenge</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>credentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;challenge&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,87],"source":"<code>challenge</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[94,190],"source":"       -or-       <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;credentials&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,297],"source":"       -or-       <code>credentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[5751,5873],"content":"Gets or sets the credential policy to be used for resource requests made using the <xref:System.Net.HttpWebRequest> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the credential policy to be used for resource requests made using the &lt;xref:System.Net.HttpWebRequest&gt; class.","pos":[0,122],"source":"Gets or sets the credential policy to be used for resource requests made using the <xref:System.Net.HttpWebRequest> class."}]},{"pos":[5886,6656],"content":"The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page. If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required. While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network. When the destination server does not require client authentication it is best to not send credentials.       The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.","needQuote":false,"needEscape":true,"nodes":[{"content":"The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page. If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required. While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network. When the destination server does not require client authentication it is best to not send credentials.       The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.","pos":[0,768],"nodes":[{"content":"The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page.","pos":[0,142]},{"content":"If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required.","pos":[143,363]},{"content":"While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network.","pos":[364,508]},{"content":"When the destination server does not require client authentication it is best to not send credentials.","pos":[509,611]},{"content":"The credential policy will be called only for requests that specify credentials or use a &lt;xref:System.Net.WebProxy&gt; object that specifies credentials.","pos":[618,768],"source":"       The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials."}]}]},{"pos":[7096,7328],"content":"An object that implements the <xref href=\"System.Net.ICredentialPolicy\"></xref> interface that determines whether credentials are sent with requests. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements the <bpt id=\"p1\">&lt;xref href=\"System.Net.ICredentialPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface that determines whether credentials are sent with requests.","pos":[0,149],"source":"An object that implements the <xref href=\"System.Net.ICredentialPolicy\"></xref> interface that determines whether credentials are sent with requests."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[150,232],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7844,8049],"content":"Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using <xref:System.Net.WebRequest> and its derived classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using &lt;xref:System.Net.WebRequest&gt; and its derived classes.","pos":[0,205],"source":"Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using <xref:System.Net.WebRequest> and its derived classes."}]},{"pos":[8062,10933],"content":"An SPN is a name by which a client uniquely identifies an instance of a service or application on a server for purposes of mutual authentication. Mutual authentication is requested by default, and you can require it by setting <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName> to <xref:System.Net.Security.AuthenticationLevel> in your request.       When a <xref:System.Net.WebRequest> requires mutual authentication, the SPN for the destination must be supplied by the client. If you know the SPN, you can add it to the CustomTargetNameDictionary before sending the request. If you have not added SPN information to this dictionary, the <xref:System.Net.AuthenticationManager> uses the <xref:System.Net.WebRequest.RequestUri%2A> method to compose the most likely SPN; however, this is a computed value and might be incorrect. If mutual authentication is attempted and fails, you can check the dictionary to determine the computed SPN. No SPN is entered into the dictionary if the authentication protocol does not support mutual authentication.       To add an SPN value to this dictionary, use the <xref:System.Uri.AbsoluteUri%2A> of the <xref:System.Net.WebRequest.RequestUri%2A> as the key. Internally, the key is truncated to include the <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, and the <xref:System.Uri.Port%2A> if it is not the default port.      > [!NOTE] >  Accessing the methods and properties of the CustomTargetNameDictionary requires unrestricted <xref:System.Net.WebPermission>.      > [!NOTE] >  When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN. The proxy name resolution is protected by a timeout. Resolution of the ultimate host name to a SPN requires a DNS lookup, and there is no timeout associated directly with this operation. Therefore synchronous operations may take longer to timeout. To overcome this, add the ultimate host's URI prefix to the SPN cache prior to making requests to it.       Version 3.5 SP1 now defaults to specifying the host name used in the request URL in the SPN in the NTLM (NT LAN Manager) authentication exchange when the CustomTargetNameDictionary property is not set. The host name used in the request URL may be different from the Host header specified in the <xref:System.Net.HttpRequestHeader?displayProperty=fullName> in the client request. The host name used in the request URL may be different from the actual host name of the server, the machine name of the server, the computer's IP address, or the loopback address. In these cases, Windows will fail the authentication request. To address the issue, you may need to notify Windows that the host name used in the request URL in the client request (\"contoso\", for example) is actually an alternate name for the local computer.","needQuote":false,"needEscape":true,"nodes":[{"content":"An SPN is a name by which a client uniquely identifies an instance of a service or application on a server for purposes of mutual authentication.","pos":[0,145]},{"content":"Mutual authentication is requested by default, and you can require it by setting &lt;xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName&gt; to &lt;xref:System.Net.Security.AuthenticationLevel&gt; in your request.","pos":[146,370],"source":" Mutual authentication is requested by default, and you can require it by setting <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName> to <xref:System.Net.Security.AuthenticationLevel> in your request."},{"content":"When a &lt;xref:System.Net.WebRequest&gt; requires mutual authentication, the SPN for the destination must be supplied by the client.","pos":[377,504],"source":"       When a <xref:System.Net.WebRequest> requires mutual authentication, the SPN for the destination must be supplied by the client."},{"content":"If you know the SPN, you can add it to the CustomTargetNameDictionary before sending the request.","pos":[505,602]},{"content":"If you have not added SPN information to this dictionary, the &lt;xref:System.Net.AuthenticationManager&gt; uses the &lt;xref:System.Net.WebRequest.RequestUri%2A&gt; method to compose the most likely SPN; however, this is a computed value and might be incorrect.","pos":[603,853],"source":" If you have not added SPN information to this dictionary, the <xref:System.Net.AuthenticationManager> uses the <xref:System.Net.WebRequest.RequestUri%2A> method to compose the most likely SPN; however, this is a computed value and might be incorrect."},{"content":"If mutual authentication is attempted and fails, you can check the dictionary to determine the computed SPN.","pos":[854,962]},{"content":"No SPN is entered into the dictionary if the authentication protocol does not support mutual authentication.","pos":[963,1071]},{"content":"To add an SPN value to this dictionary, use the &lt;xref:System.Uri.AbsoluteUri%2A&gt; of the &lt;xref:System.Net.WebRequest.RequestUri%2A&gt; as the key.","pos":[1078,1220],"source":"       To add an SPN value to this dictionary, use the <xref:System.Uri.AbsoluteUri%2A> of the <xref:System.Net.WebRequest.RequestUri%2A> as the key."},{"content":"Internally, the key is truncated to include the &lt;xref:System.Uri.Scheme%2A&gt;, &lt;xref:System.Uri.Host%2A&gt;, and the &lt;xref:System.Uri.Port%2A&gt; if it is not the default port.","pos":[1221,1389],"source":" Internally, the key is truncated to include the <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, and the <xref:System.Uri.Port%2A> if it is not the default port."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Accessing the methods and properties of the CustomTargetNameDictionary requires unrestricted &lt;xref:System.Net.WebPermission&gt;.","pos":[1395,1533],"source":"      > [!NOTE] >  Accessing the methods and properties of the CustomTargetNameDictionary requires unrestricted <xref:System.Net.WebPermission>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN.","pos":[1539,1683],"source":"      > [!NOTE] >  When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN."},{"content":"The proxy name resolution is protected by a timeout.","pos":[1684,1736]},{"content":"Resolution of the ultimate host name to a SPN requires a DNS lookup, and there is no timeout associated directly with this operation.","pos":[1737,1870]},{"content":"Therefore synchronous operations may take longer to timeout.","pos":[1871,1931]},{"content":"To overcome this, add the ultimate host's URI prefix to the SPN cache prior to making requests to it.","pos":[1932,2033]},{"content":"Version 3.5 SP1 now defaults to specifying the host name used in the request URL in the SPN in the NTLM (NT LAN Manager) authentication exchange when the CustomTargetNameDictionary property is not set.","pos":[2040,2241]},{"content":"The host name used in the request URL may be different from the Host header specified in the &lt;xref:System.Net.HttpRequestHeader?displayProperty=fullName&gt; in the client request.","pos":[2242,2418],"source":" The host name used in the request URL may be different from the Host header specified in the <xref:System.Net.HttpRequestHeader?displayProperty=fullName> in the client request."},{"content":"The host name used in the request URL may be different from the actual host name of the server, the machine name of the server, the computer's IP address, or the loopback address.","pos":[2419,2598]},{"content":"In these cases, Windows will fail the authentication request.","pos":[2599,2660]},{"content":"To address the issue, you may need to notify Windows that the host name used in the request URL in the client request (\"contoso\", for example) is actually an alternate name for the local computer.","pos":[2661,2857]}]},{"pos":[11444,11591],"content":"A writable <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the SPN values for keys composed of host information.","needQuote":true,"needEscape":true,"source":"A writable <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> that contains the SPN values for keys composed of host information."},{"pos":[12229,12256],"content":"Preauthenticates a request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Preauthenticates a request.","pos":[0,27]}]},{"pos":[12269,12976],"content":"If the authentication module can preauthenticate the request, the PreAuthenticate method returns an Authentication instance and sends the authorization information to the server preemptively instead of waiting for the resource to issue a challenge. This behavior is outlined in section 3.3 of RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication). Authentication modules that support preauthentication allow clients to improve server efficiency by avoiding extra round trips caused by authentication challenges.       Authorization modules that can preauthenticate requests set the <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName> property to `true`.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the authentication module can preauthenticate the request, the PreAuthenticate method returns an Authentication instance and sends the authorization information to the server preemptively instead of waiting for the resource to issue a challenge.","pos":[0,248]},{"content":"This behavior is outlined in section 3.3 of RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication).","pos":[249,364]},{"content":"Authentication modules that support preauthentication allow clients to improve server efficiency by avoiding extra round trips caused by authentication challenges.","pos":[365,528]},{"content":"Authorization modules that can preauthenticate requests set the &lt;xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[535,705],"source":"       Authorization modules that can preauthenticate requests set the <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName> property to `true`."}]},{"pos":[13213,13268],"content":"A <xref:System.Net.WebRequest> to an Internet resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.WebRequest&gt; to an Internet resource.","pos":[0,55],"source":"A <xref:System.Net.WebRequest> to an Internet resource."}]},{"pos":[13346,13409],"content":"The <xref:System.Net.ICredentials> associated with the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.ICredentials&gt; associated with the request.","pos":[0,63],"source":"The <xref:System.Net.ICredentials> associated with the request."}]},{"pos":[13478,13836],"content":"An instance of the <xref href=\"System.Net.Authorization\"></xref> class if the request can be preauthenticated; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. If <code>credentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Authorization\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class if the request can be preauthenticated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,183],"source":"An instance of the <xref href=\"System.Net.Authorization\"></xref> class if the request can be preauthenticated; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">credentials</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[184,358],"source":" If <code>credentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14015,14100],"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14581,14648],"content":"Registers an authentication module with the authentication manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers an authentication module with the authentication manager.","pos":[0,67]}]},{"pos":[14660,15113],"content":"The Register method adds authentication modules to the end of the list of modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. Authentication modules are called in the order in which they were added to the list. If a module with the same <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> is already registered, this method removes the registered module and adds `authenticationModule` to the end of the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Register method adds authentication modules to the end of the list of modules called by the &lt;xref:System.Net.AuthenticationManager.Authenticate%2A&gt; method.","pos":[0,159],"source":"The Register method adds authentication modules to the end of the list of modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method."},{"content":"Authentication modules are called in the order in which they were added to the list.","pos":[160,244]},{"content":"If a module with the same &lt;xref:System.Net.IAuthenticationModule.AuthenticationType%2A&gt; is already registered, this method removes the registered module and adds <ph id=\"ph1\">`authenticationModule`</ph> to the end of the list.","pos":[245,453],"source":" If a module with the same <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> is already registered, this method removes the registered module and adds `authenticationModule` to the end of the list."}]},{"pos":[15858,15960],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.IAuthenticationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to register with the authentication manager.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.IAuthenticationModule\"></xref> to register with the authentication manager."},{"pos":[16132,16230],"content":"<ph id=\"ph1\">&lt;code&gt;authenticationModule&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>authenticationModule</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16621,16711],"content":"Gets a list of authentication modules that are registered with the authentication manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of authentication modules that are registered with the authentication manager.","pos":[0,90]}]},{"pos":[16723,17066],"content":"The RegisteredModules property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read. The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RegisteredModules property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read. The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it.","pos":[0,343],"nodes":[{"content":"The RegisteredModules property provides an &lt;xref:System.Collections.IEnumerator&gt; instance that enables the list of registered authentication modules to be read.","pos":[0,160],"source":"The RegisteredModules property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read."},{"content":"The &lt;xref:System.Net.AuthenticationManager.Register%2A&gt; method adds modules to the list, and the &lt;xref:System.Net.AuthenticationManager.Unregister%2A&gt; method removes modules from it.","pos":[161,343],"source":" The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it."}]}]},{"pos":[17798,17901],"content":"An <xref:System.Collections.IEnumerator> that enables the registered authentication modules to be read.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that enables the registered authentication modules to be read.","pos":[0,103],"source":"An <xref:System.Collections.IEnumerator> that enables the registered authentication modules to be read."}]},{"pos":[18473,18553],"content":"Removes the specified authentication module from the list of registered modules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified authentication module from the list of registered modules.","pos":[0,80]}]},{"pos":[18565,18901],"content":"The Unregister method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Unregister method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.","pos":[0,336],"nodes":[{"content":"The Unregister method removes the specified authentication module from the list of authentication modules called by the &lt;xref:System.Net.AuthenticationManager.Authenticate%2A&gt; method.","pos":[0,183],"source":"The Unregister method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method."},{"content":"The module must have been added to the list using the &lt;xref:System.Net.AuthenticationManager.Register%2A&gt; method before it can be removed from the list.","pos":[184,336],"source":" The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list."}]}]},{"pos":[19690,19794],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.IAuthenticationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove from the list of registered modules.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.IAuthenticationModule\"></xref> to remove from the list of registered modules."},{"pos":[19968,20066],"content":"<ph id=\"ph1\">&lt;code&gt;authenticationModule&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>authenticationModule</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20177,20263],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Net.IAuthenticationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not registered.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Net.IAuthenticationModule\"></xref> is not registered."},{"pos":[20671,20779],"content":"Removes authentication modules with the specified authentication scheme from the list of registered modules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes authentication modules with the specified authentication scheme from the list of registered modules.","pos":[0,108]}]},{"pos":[20791,21201],"content":"The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.","pos":[0,410],"nodes":[{"content":"The &lt;xref:System.Net.AuthenticationManager.Unregister%2A&gt; method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the &lt;xref:System.Net.AuthenticationManager.Authenticate%2A&gt; method.","pos":[0,257],"source":"The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method."},{"content":"The module must have been added to the list using the &lt;xref:System.Net.AuthenticationManager.Register%2A&gt; method before it can be removed from the list.","pos":[258,410],"source":" The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list."}]}]},{"pos":[21934,21984],"content":"The authentication scheme of the module to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authentication scheme of the module to remove.","pos":[0,50]}]},{"pos":[22158,22256],"content":"<ph id=\"ph1\">&lt;code&gt;authenticationScheme&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>authenticationScheme</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22367,22425],"content":"A module for this authentication scheme is not registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"A module for this authentication scheme is not registered.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.AuthenticationManager\n  id: AuthenticationManager\n  children:\n  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)\n  - System.Net.AuthenticationManager.CredentialPolicy\n  - System.Net.AuthenticationManager.CustomTargetNameDictionary\n  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)\n  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)\n  - System.Net.AuthenticationManager.RegisteredModules\n  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)\n  - System.Net.AuthenticationManager.Unregister(System.String)\n  langs:\n  - csharp\n  name: AuthenticationManager\n  nameWithType: AuthenticationManager\n  fullName: System.Net.AuthenticationManager\n  type: Class\n  summary: Manages the authentication modules called during the client authentication process.\n  remarks: \"AuthenticationManager is a static class that manages the authentication modules that an application uses. When a request is made to protected resources, the AuthenticationManager calls the <xref:System.Net.AuthenticationManager.Authenticate%2A> method to get an <xref:System.Net.Authorization> instance to use in subsequent requests.  \\n  \\n The AuthenticationManager queries each registered authentication module by calling the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method for each module. The first authentication module to return an <xref:System.Net.Authorization> instance is used to authenticate the request.  \\n  \\n Modules that provide the basic, digest, negotiate, NTLM, and Kerberos authentication types are registered with the AuthenticationManager by default. Additional authentication modules that implement the <xref:System.Net.IAuthenticationModule> interface can be added using the <xref:System.Net.AuthenticationManager.Register%2A> method. Authentication modules are called in the order in which they were added to the list.  \\n  \\n> [!NOTE]\\n>  The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0.\"\n  example:\n  - >-\n    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]\n     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]\n     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]\n  syntax:\n    content: public class AuthenticationManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)\n  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: Authenticate(String,WebRequest,ICredentials)\n  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)\n  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Calls each registered authentication module to find the first module that can respond to the authentication request.\n  remarks: \"The Authenticate method calls the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> method on each registered authentication module until one of the module responds with an <xref:System.Net.Authorization> instance.  \\n  \\n The first <xref:System.Net.Authorization> instance returned is used to authenticate the request. If no authentication module can authenticate the request, the Authenticate method returns `null`.  \\n  \\n Authentication modules are called in the order in which they are registered with the <xref:System.Net.AuthenticationManager>.\"\n  syntax:\n    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);\n    parameters:\n    - id: challenge\n      type: System.String\n      description: The challenge returned by the Internet resource.\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> that initiated the authentication challenge.\n    - id: credentials\n      type: System.Net.ICredentials\n      description: The <xref:System.Net.ICredentials> associated with this request.\n    return:\n      type: System.Net.Authorization\n      description: An instance of the <xref href=\"System.Net.Authorization\"></xref> class containing the result of the authorization attempt. If there is no authentication module to respond to the challenge, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.AuthenticationManager.Authenticate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>challenge</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>request</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>credentials</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.CredentialPolicy\n  id: CredentialPolicy\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: CredentialPolicy\n  nameWithType: AuthenticationManager.CredentialPolicy\n  fullName: System.Net.AuthenticationManager.CredentialPolicy\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets the credential policy to be used for resource requests made using the <xref:System.Net.HttpWebRequest> class.\n  remarks: \"The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page. If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required. While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network. When the destination server does not require client authentication it is best to not send credentials.  \\n  \\n The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.\"\n  example:\n  - \"The following code example demonstrates setting the credential policy.  \\n  \\n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]\"\n  syntax:\n    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }\n    return:\n      type: System.Net.ICredentialPolicy\n      description: An object that implements the <xref href=\"System.Net.ICredentialPolicy\"></xref> interface that determines whether credentials are sent with requests. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.AuthenticationManager.CredentialPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary\n  id: CustomTargetNameDictionary\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: CustomTargetNameDictionary\n  nameWithType: AuthenticationManager.CustomTargetNameDictionary\n  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using <xref:System.Net.WebRequest> and its derived classes.\n  remarks: \"An SPN is a name by which a client uniquely identifies an instance of a service or application on a server for purposes of mutual authentication. Mutual authentication is requested by default, and you can require it by setting <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName> to <xref:System.Net.Security.AuthenticationLevel> in your request.  \\n  \\n When a <xref:System.Net.WebRequest> requires mutual authentication, the SPN for the destination must be supplied by the client. If you know the SPN, you can add it to the CustomTargetNameDictionary before sending the request. If you have not added SPN information to this dictionary, the <xref:System.Net.AuthenticationManager> uses the <xref:System.Net.WebRequest.RequestUri%2A> method to compose the most likely SPN; however, this is a computed value and might be incorrect. If mutual authentication is attempted and fails, you can check the dictionary to determine the computed SPN. No SPN is entered into the dictionary if the authentication protocol does not support mutual authentication.  \\n  \\n To add an SPN value to this dictionary, use the <xref:System.Uri.AbsoluteUri%2A> of the <xref:System.Net.WebRequest.RequestUri%2A> as the key. Internally, the key is truncated to include the <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, and the <xref:System.Uri.Port%2A> if it is not the default port.  \\n  \\n> [!NOTE]\\n>  Accessing the methods and properties of the CustomTargetNameDictionary requires unrestricted <xref:System.Net.WebPermission>.  \\n  \\n> [!NOTE]\\n>  When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN. The proxy name resolution is protected by a timeout. Resolution of the ultimate host name to a SPN requires a DNS lookup, and there is no timeout associated directly with this operation. Therefore synchronous operations may take longer to timeout. To overcome this, add the ultimate host's URI prefix to the SPN cache prior to making requests to it.  \\n  \\n Version 3.5 SP1 now defaults to specifying the host name used in the request URL in the SPN in the NTLM (NT LAN Manager) authentication exchange when the CustomTargetNameDictionary property is not set. The host name used in the request URL may be different from the Host header specified in the <xref:System.Net.HttpRequestHeader?displayProperty=fullName> in the client request. The host name used in the request URL may be different from the actual host name of the server, the machine name of the server, the computer's IP address, or the loopback address. In these cases, Windows will fail the authentication request. To address the issue, you may need to notify Windows that the host name used in the request URL in the client request (\\\"contoso\\\", for example) is actually an alternate name for the local computer.\"\n  example:\n  - \"The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \\n  \\n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]\"\n  syntax:\n    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }\n    return:\n      type: System.Collections.Specialized.StringDictionary\n      description: A writable <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> that contains the SPN values for keys composed of host information.\n  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)\n  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: PreAuthenticate(WebRequest,ICredentials)\n  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)\n  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Preauthenticates a request.\n  remarks: \"If the authentication module can preauthenticate the request, the PreAuthenticate method returns an Authentication instance and sends the authorization information to the server preemptively instead of waiting for the resource to issue a challenge. This behavior is outlined in section 3.3 of RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication). Authentication modules that support preauthentication allow clients to improve server efficiency by avoiding extra round trips caused by authentication challenges.  \\n  \\n Authorization modules that can preauthenticate requests set the <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName> property to `true`.\"\n  syntax:\n    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: A <xref:System.Net.WebRequest> to an Internet resource.\n    - id: credentials\n      type: System.Net.ICredentials\n      description: The <xref:System.Net.ICredentials> associated with the request.\n    return:\n      type: System.Net.Authorization\n      description: An instance of the <xref href=\"System.Net.Authorization\"></xref> class if the request can be preauthenticated; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. If <code>credentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.AuthenticationManager.PreAuthenticate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)\n  id: Register(System.Net.IAuthenticationModule)\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: Register(IAuthenticationModule)\n  nameWithType: AuthenticationManager.Register(IAuthenticationModule)\n  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Registers an authentication module with the authentication manager.\n  remarks: The Register method adds authentication modules to the end of the list of modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. Authentication modules are called in the order in which they were added to the list. If a module with the same <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> is already registered, this method removes the registered module and adds `authenticationModule` to the end of the list.\n  example:\n  - \"The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \\n  \\n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]\"\n  syntax:\n    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);\n    parameters:\n    - id: authenticationModule\n      type: System.Net.IAuthenticationModule\n      description: The <xref href=\"System.Net.IAuthenticationModule\"></xref> to register with the authentication manager.\n  overload: System.Net.AuthenticationManager.Register*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>authenticationModule</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.RegisteredModules\n  id: RegisteredModules\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: RegisteredModules\n  nameWithType: AuthenticationManager.RegisteredModules\n  fullName: System.Net.AuthenticationManager.RegisteredModules\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets a list of authentication modules that are registered with the authentication manager.\n  remarks: The RegisteredModules property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read. The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it.\n  example:\n  - \"The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \\n  \\n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]\"\n  syntax:\n    content: public static System.Collections.IEnumerator RegisteredModules { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that enables the registered authentication modules to be read.\n  overload: System.Net.AuthenticationManager.RegisteredModules*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)\n  id: Unregister(System.Net.IAuthenticationModule)\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: Unregister(IAuthenticationModule)\n  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)\n  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Removes the specified authentication module from the list of registered modules.\n  remarks: The Unregister method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.\n  example:\n  - \"The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \\n  \\n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]\"\n  syntax:\n    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);\n    parameters:\n    - id: authenticationModule\n      type: System.Net.IAuthenticationModule\n      description: The <xref href=\"System.Net.IAuthenticationModule\"></xref> to remove from the list of registered modules.\n  overload: System.Net.AuthenticationManager.Unregister*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>authenticationModule</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.Net.IAuthenticationModule\"></xref> is not registered.\n  platform:\n  - net462\n- uid: System.Net.AuthenticationManager.Unregister(System.String)\n  id: Unregister(System.String)\n  parent: System.Net.AuthenticationManager\n  langs:\n  - csharp\n  name: Unregister(String)\n  nameWithType: AuthenticationManager.Unregister(String)\n  fullName: System.Net.AuthenticationManager.Unregister(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Removes authentication modules with the specified authentication scheme from the list of registered modules.\n  remarks: The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method. The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.\n  example:\n  - \"The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \\n  \\n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]\"\n  syntax:\n    content: public static void Unregister (string authenticationScheme);\n    parameters:\n    - id: authenticationScheme\n      type: System.String\n      description: The authentication scheme of the module to remove.\n  overload: System.Net.AuthenticationManager.Unregister*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>authenticationScheme</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A module for this authentication scheme is not registered.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Authenticate(String,WebRequest,ICredentials)\n  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)\n  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)\n- uid: System.Net.Authorization\n  parent: System.Net\n  isExternal: false\n  name: Authorization\n  nameWithType: Authorization\n  fullName: System.Net.Authorization\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: true\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.AuthenticationManager.CredentialPolicy\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: CredentialPolicy\n  nameWithType: AuthenticationManager.CredentialPolicy\n  fullName: System.Net.AuthenticationManager.CredentialPolicy\n- uid: System.Net.ICredentialPolicy\n  parent: System.Net\n  isExternal: false\n  name: ICredentialPolicy\n  nameWithType: ICredentialPolicy\n  fullName: System.Net.ICredentialPolicy\n- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: CustomTargetNameDictionary\n  nameWithType: AuthenticationManager.CustomTargetNameDictionary\n  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary\n- uid: System.Collections.Specialized.StringDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: StringDictionary\n  nameWithType: StringDictionary\n  fullName: System.Collections.Specialized.StringDictionary\n- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: PreAuthenticate(WebRequest,ICredentials)\n  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)\n  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)\n- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Register(IAuthenticationModule)\n  nameWithType: AuthenticationManager.Register(IAuthenticationModule)\n  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)\n- uid: System.Net.IAuthenticationModule\n  parent: System.Net\n  isExternal: false\n  name: IAuthenticationModule\n  nameWithType: IAuthenticationModule\n  fullName: System.Net.IAuthenticationModule\n- uid: System.Net.AuthenticationManager.RegisteredModules\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: RegisteredModules\n  nameWithType: AuthenticationManager.RegisteredModules\n  fullName: System.Net.AuthenticationManager.RegisteredModules\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Unregister(IAuthenticationModule)\n  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)\n  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)\n- uid: System.Net.AuthenticationManager.Unregister(System.String)\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Unregister(String)\n  nameWithType: AuthenticationManager.Unregister(String)\n  fullName: System.Net.AuthenticationManager.Unregister(String)\n- uid: System.Net.AuthenticationManager.Authenticate*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Authenticate\n  nameWithType: AuthenticationManager.Authenticate\n- uid: System.Net.AuthenticationManager.CredentialPolicy*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: CredentialPolicy\n  nameWithType: AuthenticationManager.CredentialPolicy\n- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: CustomTargetNameDictionary\n  nameWithType: AuthenticationManager.CustomTargetNameDictionary\n- uid: System.Net.AuthenticationManager.PreAuthenticate*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: AuthenticationManager.PreAuthenticate\n- uid: System.Net.AuthenticationManager.Register*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Register\n  nameWithType: AuthenticationManager.Register\n- uid: System.Net.AuthenticationManager.RegisteredModules*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: RegisteredModules\n  nameWithType: AuthenticationManager.RegisteredModules\n- uid: System.Net.AuthenticationManager.Unregister*\n  parent: System.Net.AuthenticationManager\n  isExternal: false\n  name: Unregister\n  nameWithType: AuthenticationManager.Unregister\n"}