{"nodes":[{"pos":[520,692],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class that compliments the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> REST programming model.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class that compliments the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] REST programming model."},{"pos":[705,1896],"content":"If WebServiceHost finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses. It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address. WebServiceHost automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.       When creating a default HTTP endpoint, the WebServiceHost also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.       In addition, the WebServiceHost class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>. If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the WebServiceHost automatically configures the appropriate content type mapper for the binding.","needQuote":false,"needEscape":true,"nodes":[{"content":"If WebServiceHost finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses. It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address. WebServiceHost automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.       When creating a default HTTP endpoint, the WebServiceHost also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.       In addition, the WebServiceHost class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>. If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the WebServiceHost automatically configures the appropriate content type mapper for the binding.","pos":[0,1187],"nodes":[{"content":"If WebServiceHost finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.","pos":[0,173]},{"content":"It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.","pos":[174,289]},{"content":"WebServiceHost automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.","pos":[290,475]},{"content":"When creating a default HTTP endpoint, the WebServiceHost also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.","pos":[482,715]},{"content":"In addition, the WebServiceHost class adds the &lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt; to all endpoints that do not already have the behavior and that have a &lt;xref:System.ServiceModel.Configuration.WebMessageEncodingElement&gt;.","pos":[722,962],"source":"       In addition, the WebServiceHost class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>."},{"content":"If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the WebServiceHost automatically configures the appropriate content type mapper for the binding.","pos":[963,1187]}]}]},{"pos":[6750,6850],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class."},{"pos":[7495,7657],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified singleton server instance and base address.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class with the specified singleton server instance and base address."},{"pos":[7669,7741],"content":"The <ph id=\"ph1\">`baseAddresses`</ph> parameter can consist of one or more base addresses.","needQuote":true,"needEscape":true,"source":"The `baseAddresses` parameter can consist of one or more base addresses."},{"pos":[8189,8245],"content":"A service instance to be used as the singleton instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service instance to be used as the singleton instance.","pos":[0,56]}]},{"pos":[8314,8346],"content":"The base address of the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base address of the service.","pos":[0,32]}]},{"pos":[8913,9062],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified service type and base address.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class with the specified service type and base address."},{"pos":[9074,9146],"content":"The <ph id=\"ph1\">`baseAddresses`</ph> parameter can consist of one or more base addresses.","needQuote":true,"needEscape":true,"source":"The `baseAddresses` parameter can consist of one or more base addresses."},{"pos":[9578,9595],"content":"The service type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service type.","pos":[0,17]}]},{"pos":[9664,9696],"content":"The base address of the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base address of the service.","pos":[0,32]}]},{"pos":[10167,10258],"content":"Called when the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance opens.","needQuote":true,"needEscape":true,"source":"Called when the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> instance opens."},{"pos":[10271,11235],"content":"The following occurs when this method is called:      1.  If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address. <xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.      2.  <xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>. If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.      3.  <xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following occurs when this method is called:      1.  If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address. <xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.      2.  <xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>. If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.      3.  <xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.","pos":[0,958],"nodes":[{"content":"The following occurs when this method is called:      1.","pos":[0,56]},{"content":"If &lt;xref:System.ServiceModel.Web.WebServiceHost&gt; finds no endpoints in the service description, it creates a default endpoint at the service's base address.","pos":[58,214],"source":"  If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address."},{"content":"&lt;xref:System.ServiceModel.Web.WebServiceHost&gt; automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.","pos":[215,414],"source":" <xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint."},{"content":"2.","pos":[420,422]},{"content":"&lt;xref:System.ServiceModel.Web.WebServiceHost&gt; checks all endpoints that use the &lt;xref:System.ServiceModel.WebHttpBinding&gt; to see if they have the required &lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;.","pos":[424,634],"source":"  <xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>."},{"content":"If not present, &lt;xref:System.ServiceModel.Web.WebServiceHost&gt; adds the &lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt; for the endpoint.","pos":[635,778],"source":" If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint."},{"content":"3.","pos":[784,786]},{"content":"&lt;xref:System.ServiceModel.Web.WebServiceHost&gt; configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.","pos":[788,958],"source":"  <xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Web.WebServiceHost\n  id: WebServiceHost\n  children:\n  - System.ServiceModel.Web.WebServiceHost.#ctor\n  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])\n  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])\n  - System.ServiceModel.Web.WebServiceHost.OnOpening\n  langs:\n  - csharp\n  name: WebServiceHost\n  nameWithType: WebServiceHost\n  fullName: System.ServiceModel.Web.WebServiceHost\n  type: Class\n  summary: A <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class that compliments the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] REST programming model.\n  remarks: \"If WebServiceHost finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses. It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address. WebServiceHost automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.  \\n  \\n When creating a default HTTP endpoint, the WebServiceHost also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.  \\n  \\n In addition, the WebServiceHost class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>. If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the WebServiceHost automatically configures the appropriate content type mapper for the binding.\"\n  example:\n  - \"The following example shows how to use the WebServiceHost class to host a service that makes use of the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] REST programming model.  \\n  \\n [!code-cs[WebServiceHost#0](~/add/codesnippet/csharp/t-system.servicemodel.we_0_1.cs)]\\n [!code-vb[WebServiceHost#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_0_1.vb)]\"\n  syntax:\n    content: 'public class WebServiceHost : System.ServiceModel.ServiceHost'\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  - System.ServiceModel.ServiceHost\n  implements: []\n  inheritedMembers:\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHost.ApplyConfiguration\n  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.OnClosed\n  - System.ServiceModel.ServiceHost.SingletonInstance\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  platform:\n  - net462\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Web.WebServiceHost\n  langs:\n  - csharp\n  name: WebServiceHost()\n  nameWithType: WebServiceHost.WebServiceHost()\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class.\n  syntax:\n    content: public WebServiceHost ();\n    parameters: []\n  overload: System.ServiceModel.Web.WebServiceHost.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])\n  id: '#ctor(System.Object,System.Uri[])'\n  parent: System.ServiceModel.Web.WebServiceHost\n  langs:\n  - csharp\n  name: WebServiceHost(Object,Uri[])\n  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class with the specified singleton server instance and base address.\n  remarks: The `baseAddresses` parameter can consist of one or more base addresses.\n  example:\n  - \"The following example shows how to call this constructor.  \\n  \\n [!code-cs[WebServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.we_1_1.cs)]\\n [!code-vb[WebServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.we_1_1.vb)]\"\n  syntax:\n    content: public WebServiceHost (object singletonInstance, Uri[] baseAddresses);\n    parameters:\n    - id: singletonInstance\n      type: System.Object\n      description: A service instance to be used as the singleton instance.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The base address of the service.\n  overload: System.ServiceModel.Web.WebServiceHost.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.ServiceModel.Web.WebServiceHost\n  langs:\n  - csharp\n  name: WebServiceHost(Type,Uri[])\n  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> class with the specified service type and base address.\n  remarks: The `baseAddresses` parameter can consist of one or more base addresses.\n  example:\n  - \"The following example shows how to call this constructor.  \\n  \\n [!code-cs[WebServiceHost#2](~/add/codesnippet/csharp/m-system.servicemodel.we_0_1.cs)]\\n [!code-vb[WebServiceHost#2](~/add/codesnippet/visualbasic/m-system.servicemodel.we_0_1.vb)]\"\n  syntax:\n    content: public WebServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The service type.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The base address of the service.\n  overload: System.ServiceModel.Web.WebServiceHost.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Web.WebServiceHost.OnOpening\n  id: OnOpening\n  parent: System.ServiceModel.Web.WebServiceHost\n  langs:\n  - csharp\n  name: OnOpening()\n  nameWithType: WebServiceHost.OnOpening()\n  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Called when the <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> instance opens.\n  remarks: \"The following occurs when this method is called:  \\n  \\n1.  If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address. <xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.  \\n  \\n2.  <xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>. If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.  \\n  \\n3.  <xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.\"\n  syntax:\n    content: protected override void OnOpening ();\n    parameters: []\n  overload: System.ServiceModel.Web.WebServiceHost.OnOpening*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: System.ServiceModel.ServiceHost\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: WebServiceHost()\n  nameWithType: WebServiceHost.WebServiceHost()\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: WebServiceHost(Object,Uri[])\n  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: WebServiceHost(Type,Uri[])\n  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Web.WebServiceHost.OnOpening\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: OnOpening()\n  nameWithType: WebServiceHost.OnOpening()\n  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()\n- uid: System.ServiceModel.Web.WebServiceHost.#ctor*\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: WebServiceHost\n  nameWithType: WebServiceHost.WebServiceHost\n- uid: System.ServiceModel.Web.WebServiceHost.OnOpening*\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: OnOpening\n  nameWithType: WebServiceHost.OnOpening\n"}