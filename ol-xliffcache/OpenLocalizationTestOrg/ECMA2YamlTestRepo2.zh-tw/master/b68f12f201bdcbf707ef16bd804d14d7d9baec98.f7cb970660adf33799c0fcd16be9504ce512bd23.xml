{"nodes":[{"pos":[708,759],"content":"Provides information about the current Web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about the current Web request.","pos":[0,51]}]},{"pos":[772,1979],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       Instances of the WebRequestInformation class contain information that is obtained using the <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, or <xref:System.Web.Management.WebRequestErrorEvent> types.       Your application needs the appropriate permissions to access protected information provided by this type.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The &lt;xref:System.Web.Management&gt; namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]},{"content":"Instances of the WebRequestInformation class contain information that is obtained using the &lt;xref:System.Web.Management.WebRequestEvent&gt;, &lt;xref:System.Web.Management.WebAuditEvent&gt;, &lt;xref:System.Web.Management.WebErrorEvent&gt;, or &lt;xref:System.Web.Management.WebRequestErrorEvent&gt; types.","pos":[385,670],"source":"       Instances of the WebRequestInformation class contain information that is obtained using the <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, or <xref:System.Web.Management.WebRequestErrorEvent> types."},{"content":"Your application needs the appropriate permissions to access protected information provided by this type.","pos":[677,782]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[788,1010],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[1011,1111]},{"content":"For an example of creating a custom event class, see the example provided in this topic.","pos":[1112,1200]}]},{"pos":[4094,4130],"content":"Formats the Web-request information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Formats the Web-request information.","pos":[0,36]}]},{"pos":[4142,4422],"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","pos":[0,280],"nodes":[{"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.","pos":[0,156]},{"content":"It is called internally when the provider invokes one of the &lt;xref:System.Web.Management.WebBaseEvent.ToString%2A&gt; methods.","pos":[157,280],"source":" It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods."}]}]},{"pos":[4960,5120],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the tab and indentation settings used to format the Web health event information.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information."},{"pos":[5608,5688],"content":"Gets the instance of the managed-code principal associated with the Web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the instance of the managed-code principal associated with the Web request.","pos":[0,80]}]},{"pos":[5700,5777],"content":"The principal refers to the authenticated entity that issued the Web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The principal refers to the authenticated entity that issued the Web request.","pos":[0,77]}]},{"pos":[6301,6400],"content":"The <xref:System.Security.Principal.IPrincipal> instance that is associated with the request event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Principal.IPrincipal&gt; instance that is associated with the request event.","pos":[0,99],"source":"The <xref:System.Security.Principal.IPrincipal> instance that is associated with the request event."}]},{"pos":[6893,6935],"content":"Gets the physical path of the Web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the physical path of the Web request.","pos":[0,42]}]},{"pos":[7395,7428],"content":"The physical path of the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the request.","pos":[0,33]}]},{"pos":[7918,7955],"content":"Gets the logical path of the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the logical path of the request.","pos":[0,37]}]},{"pos":[7968,8290],"content":"The following code example shows how to get the Web-request logical path.       [!code-cs[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/csharp/p-system.web.management._10_1.cs)]  [!code-vb[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._10_1.vb)]","needQuote":false,"needEscape":true,"nodes":[{"content":"The following code example shows how to get the Web-request logical path.","pos":[0,73]},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Web.Management.WebRequestInformation#6<ept id=\"p2\">](~/add/codesnippet/csharp/p-system.web.management._10_1.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Web.Management.WebRequestInformation#6<ept id=\"p4\">](~/add/codesnippet/visualbasic/p-system.web.management._10_1.vb)</ept><ept id=\"p3\">]</ept>","pos":[80,319],"source":"[!code-cs[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/csharp/p-system.web.management._10_1.cs)]  [!code-vb[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._10_1.vb)]"}]},{"pos":[8406,8438],"content":"The logical path of the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logical path of the request.","pos":[0,32]}]},{"pos":[8962,9065],"content":"Gets a string that represents the Windows logon name of the user on whose behalf the code is being run.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that represents the Windows logon name of the user on whose behalf the code is being run.","pos":[0,103]}]},{"pos":[9077,9257],"content":"The value of this property is determined by the current <xref:System.Security.Principal.WindowsIdentity> object's <xref:System.Security.Principal.WindowsIdentity.Name%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this property is determined by the current &lt;xref:System.Security.Principal.WindowsIdentity&gt; object's &lt;xref:System.Security.Principal.WindowsIdentity.Name%2A&gt; property.","pos":[0,180],"source":"The value of this property is determined by the current <xref:System.Security.Principal.WindowsIdentity> object's <xref:System.Security.Principal.WindowsIdentity.Name%2A> property."}]},{"pos":[9379,9452],"content":"The Windows logon name of the user on whose behalf the code is being run.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Windows logon name of the user on whose behalf the code is being run.","pos":[0,73]}]},{"pos":[9973,10000],"content":"Gets the user host address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the user host address.","pos":[0,27]}]},{"pos":[10013,10326],"content":"The following code example shows how to get the user host address.       [!code-cs[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/csharp/p-system.web.management._4_1.cs)]  [!code-vb[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._4_1.vb)]","needQuote":false,"needEscape":true,"nodes":[{"content":"The following code example shows how to get the user host address.","pos":[0,66]},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Web.Management.WebRequestInformation#7<ept id=\"p2\">](~/add/codesnippet/csharp/p-system.web.management._4_1.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Web.Management.WebRequestInformation#7<ept id=\"p4\">](~/add/codesnippet/visualbasic/p-system.web.management._4_1.vb)</ept><ept id=\"p3\">]</ept>","pos":[73,310],"source":"[!code-cs[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/csharp/p-system.web.management._4_1.cs)]  [!code-vb[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._4_1.vb)]"}]},{"pos":[10447,10469],"content":"The user host address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user host address.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebRequestInformation\n  id: WebRequestInformation\n  children:\n  - System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebRequestInformation.Principal\n  - System.Web.Management.WebRequestInformation.RequestPath\n  - System.Web.Management.WebRequestInformation.RequestUrl\n  - System.Web.Management.WebRequestInformation.ThreadAccountName\n  - System.Web.Management.WebRequestInformation.UserHostAddress\n  langs:\n  - csharp\n  name: WebRequestInformation\n  nameWithType: WebRequestInformation\n  fullName: System.Web.Management.WebRequestInformation\n  type: Class\n  summary: Provides information about the current Web request.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n Instances of the WebRequestInformation class contain information that is obtained using the <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, or <xref:System.Web.Management.WebRequestErrorEvent> types.  \\n  \\n Your application needs the appropriate permissions to access protected information provided by this type.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.\"\n  example:\n  - \"The following code example shows how to implement a custom event that uses the WebRequestInformation type.  \\n  \\n Also shown is an excerpt of the configuration file that enables ASP.NET to use this custom event.  \\n  \\n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \\n  \\n```  \\n<healthMonitoring  \\n  heartBeatInterval=\\\"0\\\" enabled=\\\"true\\\">  \\n  \\n  <profiles>  \\n    <add name=\\\"Custom\\\"   \\n      minInstances=\\\"1\\\"   \\n      maxLimit=\\\"Infinite\\\"   \\n      minInterval=\\\"00:00:00\\\" />  \\n  </profiles>  \\n  \\n  <eventMappings>  \\n  \\n    <add   \\n      name=\\\"SampleWebRequestInformation\\\"   \\n      type=\\\"SamplesAspNet.SampleWebRequestInformation,webrequestinformation,Version=1.0.1782.28745, Culture=neutral, PublicKeyToken=79955d9b8521c250,processorArchitecture=MSIL\\\" />  \\n  \\n  </eventMappings>  \\n  \\n  <rules>  \\n  \\n    <add name=\\\"Custom Web Request Info Event\\\"   \\n      eventName=\\\"SampleWebRequestInformation\\\"   \\n      provider=\\\"EventLogProvider\\\"  \\n      profile=\\\"Custom\\\" />  \\n  \\n  </rules>  \\n  \\n</healthMonitoring>  \\n```  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#1](~/add/codesnippet/csharp/t-system.web.management._11_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._11_1.vb)]\"\n  syntax:\n    content: public sealed class WebRequestInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  id: FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebRequestInformation.FormatToString(WebEventFormatter)\n  fullName: System.Web.Management.WebRequestInformation.FormatToString(WebEventFormatter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Formats the Web-request information.\n  remarks: The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.\n  example:\n  - \"The following code example shows how to format custom information.  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#9](~/add/codesnippet/csharp/ca29f60b-9b94-4c78-a2ae-_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#9](~/add/codesnippet/visualbasic/ca29f60b-9b94-4c78-a2ae-_1.vb)]\"\n  syntax:\n    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);\n    parameters:\n    - id: formatter\n      type: System.Web.Management.WebEventFormatter\n      description: The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information.\n  overload: System.Web.Management.WebRequestInformation.FormatToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.Principal\n  id: Principal\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: Principal\n  nameWithType: WebRequestInformation.Principal\n  fullName: System.Web.Management.WebRequestInformation.Principal\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the instance of the managed-code principal associated with the Web request.\n  remarks: The principal refers to the authenticated entity that issued the Web request.\n  example:\n  - \"The following code example shows how to use the principal associated with the Web request.  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#8](~/add/codesnippet/csharp/p-system.web.management._39_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#8](~/add/codesnippet/visualbasic/p-system.web.management._39_1.vb)]\"\n  syntax:\n    content: public System.Security.Principal.IPrincipal Principal { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: The <xref:System.Security.Principal.IPrincipal> instance that is associated with the request event.\n  overload: System.Web.Management.WebRequestInformation.Principal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.RequestPath\n  id: RequestPath\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: RequestPath\n  nameWithType: WebRequestInformation.RequestPath\n  fullName: System.Web.Management.WebRequestInformation.RequestPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the physical path of the Web request.\n  remarks: ''\n  example:\n  - \"The following code example shows how to get the Web-request path.  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#5](~/add/codesnippet/csharp/p-system.web.management._0_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._0_1.vb)]\"\n  syntax:\n    content: public string RequestPath { get; }\n    return:\n      type: System.String\n      description: The physical path of the request.\n  overload: System.Web.Management.WebRequestInformation.RequestPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.RequestUrl\n  id: RequestUrl\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: RequestUrl\n  nameWithType: WebRequestInformation.RequestUrl\n  fullName: System.Web.Management.WebRequestInformation.RequestUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the logical path of the request.\n  remarks: \"The following code example shows how to get the Web-request logical path.  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/csharp/p-system.web.management._10_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._10_1.vb)]\"\n  syntax:\n    content: public string RequestUrl { get; }\n    return:\n      type: System.String\n      description: The logical path of the request.\n  overload: System.Web.Management.WebRequestInformation.RequestUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.ThreadAccountName\n  id: ThreadAccountName\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: ThreadAccountName\n  nameWithType: WebRequestInformation.ThreadAccountName\n  fullName: System.Web.Management.WebRequestInformation.ThreadAccountName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets a string that represents the Windows logon name of the user on whose behalf the code is being run.\n  remarks: The value of this property is determined by the current <xref:System.Security.Principal.WindowsIdentity> object's <xref:System.Security.Principal.WindowsIdentity.Name%2A> property.\n  syntax:\n    content: public string ThreadAccountName { get; }\n    return:\n      type: System.String\n      description: The Windows logon name of the user on whose behalf the code is being run.\n  overload: System.Web.Management.WebRequestInformation.ThreadAccountName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebRequestInformation.UserHostAddress\n  id: UserHostAddress\n  parent: System.Web.Management.WebRequestInformation\n  langs:\n  - csharp\n  name: UserHostAddress\n  nameWithType: WebRequestInformation.UserHostAddress\n  fullName: System.Web.Management.WebRequestInformation.UserHostAddress\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the user host address.\n  remarks: \"The following code example shows how to get the user host address.  \\n  \\n [!code-cs[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/csharp/p-system.web.management._4_1.cs)]\\n [!code-vb[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._4_1.vb)]\"\n  syntax:\n    content: public string UserHostAddress { get; }\n    return:\n      type: System.String\n      description: The user host address.\n  overload: System.Web.Management.WebRequestInformation.UserHostAddress*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebRequestInformation.FormatToString(WebEventFormatter)\n  fullName: System.Web.Management.WebRequestInformation.FormatToString(WebEventFormatter)\n- uid: System.Web.Management.WebEventFormatter\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventFormatter\n  nameWithType: WebEventFormatter\n  fullName: System.Web.Management.WebEventFormatter\n- uid: System.Web.Management.WebRequestInformation.Principal\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: Principal\n  nameWithType: WebRequestInformation.Principal\n  fullName: System.Web.Management.WebRequestInformation.Principal\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.Management.WebRequestInformation.RequestPath\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: RequestPath\n  nameWithType: WebRequestInformation.RequestPath\n  fullName: System.Web.Management.WebRequestInformation.RequestPath\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Management.WebRequestInformation.RequestUrl\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: RequestUrl\n  nameWithType: WebRequestInformation.RequestUrl\n  fullName: System.Web.Management.WebRequestInformation.RequestUrl\n- uid: System.Web.Management.WebRequestInformation.ThreadAccountName\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: ThreadAccountName\n  nameWithType: WebRequestInformation.ThreadAccountName\n  fullName: System.Web.Management.WebRequestInformation.ThreadAccountName\n- uid: System.Web.Management.WebRequestInformation.UserHostAddress\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: UserHostAddress\n  nameWithType: WebRequestInformation.UserHostAddress\n  fullName: System.Web.Management.WebRequestInformation.UserHostAddress\n- uid: System.Web.Management.WebRequestInformation.FormatToString*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: FormatToString\n  nameWithType: WebRequestInformation.FormatToString\n- uid: System.Web.Management.WebRequestInformation.Principal*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: Principal\n  nameWithType: WebRequestInformation.Principal\n- uid: System.Web.Management.WebRequestInformation.RequestPath*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: RequestPath\n  nameWithType: WebRequestInformation.RequestPath\n- uid: System.Web.Management.WebRequestInformation.RequestUrl*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: RequestUrl\n  nameWithType: WebRequestInformation.RequestUrl\n- uid: System.Web.Management.WebRequestInformation.ThreadAccountName*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: ThreadAccountName\n  nameWithType: WebRequestInformation.ThreadAccountName\n- uid: System.Web.Management.WebRequestInformation.UserHostAddress*\n  parent: System.Web.Management.WebRequestInformation\n  isExternal: false\n  name: UserHostAddress\n  nameWithType: WebRequestInformation.UserHostAddress\n"}