{"nodes":[{"pos":[2007,2289],"content":"A system-provided <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation used to create a <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance that uses a SQL database to store persisted service state data.","needQuote":true,"needEscape":true,"source":"A system-provided <xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"></xref> implementation used to create a <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database to store persisted service state data."},{"pos":[2302,3874],"content":"The SqlPersistenceProviderFactory class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service.       In addition to persistence, the provider created by the SqlPersistenceProviderFactory class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.      > [!NOTE] >  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by SqlPersistenceProviderFactory do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.      > [!NOTE] >  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SqlPersistenceProviderFactory class represents a factory class for a fully-functional, durable service persistence provider.","pos":[0,128]},{"content":"You can use this system-provided provider to persist and retrieve state information about a durable <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> service.","pos":[129,296],"source":" You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service."},{"content":"In addition to persistence, the provider created by the SqlPersistenceProviderFactory class implements locking of service state data records by inheriting from the abstract &lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt; class.","pos":[303,548],"source":"       In addition to persistence, the provider created by the SqlPersistenceProviderFactory class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class."},{"content":"Methods that interact with persisted data (such as &lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt; or &lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;) have an optional parameter (<ph id=\"ph1\">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.","pos":[550,879],"source":"  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  &lt;xref:System.ServiceModel.Persistence.PersistenceException&gt; exceptions thrown by SqlPersistenceProviderFactory do not have their exception details hidden by default.","pos":[885,1063],"source":"      > [!NOTE] >  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by SqlPersistenceProviderFactory do not have their exception details hidden by default."},{"content":"To protect against security vulnerabilities, these details can be hidden by setting &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt; to <ph id=\"ph1\">`false`</ph>.","pos":[1064,1253],"source":" To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The SQL Persistence Provider stores and retrieves data from a SQL Server database.","pos":[1259,1354],"source":"      > [!NOTE] >  The SQL Persistence Provider stores and retrieves data from a SQL Server database."},{"content":"The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","pos":[1355,1564]}]},{"pos":[5012,5187],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, configured with the specified parameter collection.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified parameter collection."},{"pos":[5199,5515],"content":"This constructor can be used to arbitrarily specify <ph id=\"ph1\">`lockTimeout`</ph>, <ph id=\"ph2\">`connectionString`</ph>, and <ph id=\"ph3\">`serializeAsText`</ph> without specifying the other parameters as required by the other constructors (for example, to specify the <ph id=\"ph4\">`connectionString`</ph> and <ph id=\"ph5\">`lockTimeout`</ph> parameters without specifying the <ph id=\"ph6\">`serializeAsText`</ph> parameter.)","needQuote":true,"needEscape":true,"source":"This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)"},{"pos":[6095,6452],"content":"The collection of parameters used by the new persistence provider factory. Valid parameters include <xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"></xref>, <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref>, and <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameters used by the new persistence provider factory.","pos":[0,74]},{"content":"Valid parameters include <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[75,357],"source":" Valid parameters include <xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"></xref>, <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref>, and <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref>."}]},{"pos":[7145,7317],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, configured with the specified connection string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string."},{"pos":[7838,7906],"content":"The connection parameters for the new persistence provider instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection parameters for the new persistence provider instance.","pos":[0,68]}]},{"pos":[8653,8923],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, configured with the specified connection string and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string and <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref> parameters."},{"pos":[8935,9061],"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","needQuote":true,"needEscape":true,"source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."},{"pos":[9564,9632],"content":"The connection parameters for the new persistence provider instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection parameters for the new persistence provider instance.","pos":[0,68]}]},{"pos":[9705,9769],"content":"Specifies whether data is serialized as text rather than binary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether data is serialized as text rather than binary.","pos":[0,64]}]},{"pos":[10575,10922],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, configured with the specified connection string, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string, <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref>, and <xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"></xref> parameters."},{"pos":[10935,11239],"content":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.       The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","pos":[0,126],"source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."},{"content":"The default value for <ph id=\"ph1\">`lockTimeout`</ph> is <ph id=\"ph2\">`TimeSpan.Zero`</ph>, which indicates that locking is not used.","pos":[133,230],"source":"       The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used."},{"content":"If <ph id=\"ph1\">`TimeSpan.MaxValue`</ph> is used, then locks are maintained indefinitely.","pos":[231,302],"source":" If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely."}]},{"pos":[11765,11841],"content":"The connection parameters for the new persistence provider factory instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection parameters for the new persistence provider factory instance.","pos":[0,76]}]},{"pos":[11914,11978],"content":"Specifies whether data is serialized as text rather than binary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether data is serialized as text rather than binary.","pos":[0,64]}]},{"pos":[12048,12276],"content":"The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of <xref uid=\"langword_csharp_TimeSpan.Zero\" name=\"TimeSpan.Zero\" href=\"\"></xref> specifies that no locking is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out for lock ownership.","pos":[0,32]},{"content":"Locked instances are automatically unlocked after this time period.","pos":[33,100]},{"content":"A time-out of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_TimeSpan.Zero\" name=\"TimeSpan.Zero\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specifies that no locking is used.","pos":[101,228],"source":" A time-out of <xref uid=\"langword_csharp_TimeSpan.Zero\" name=\"TimeSpan.Zero\" href=\"\"></xref> specifies that no locking is used."}]},{"pos":[12893,12985],"content":"Gets the connection parameters for persistence provider instances created with this factory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the connection parameters for persistence provider instances created with this factory.","pos":[0,92]}]},{"pos":[13373,13460],"content":"The connection parameters for persistence provider instances created with this factory.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection parameters for persistence provider instances created with this factory.","pos":[0,87]}]},{"pos":[14120,14277],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that uses a SQL database as its persistence store.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database as its persistence store."},{"pos":[14289,14735],"content":"The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialized persistence provider uses the current parameters of the creating factory (&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;, &lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;, and &lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;), even if the factory's parameters are changed after the persistence provider is created.","pos":[0,446],"source":"The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created."}]},{"pos":[15288,15352],"content":"The unique identifier of the persistence provider being created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier of the persistence provider being created.","pos":[0,64]}]},{"pos":[15448,15537],"content":"A newly-created <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A newly-created <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref>."},{"pos":[16178,16279],"content":"Gets the default time-out value used when persistence providers created with this factory are closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default time-out value used when persistence providers created with this factory are closed.","pos":[0,101]}]},{"pos":[16291,16342],"content":"The default value for close time-out is 15 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value for close time-out is 15 seconds.","pos":[0,51]}]},{"pos":[16482,16509],"content":"The default time-out value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default time-out value.","pos":[0,27]}]},{"pos":[17150,17223],"content":"Gets the default time-out value used when persistence provider is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default time-out value used when persistence provider is opened.","pos":[0,73]}]},{"pos":[17235,17285],"content":"The default value for open time-out is 15 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value for open time-out is 15 seconds.","pos":[0,50]}]},{"pos":[17424,17451],"content":"The default time-out value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default time-out value.","pos":[0,27]}]},{"pos":[18056,18220],"content":"The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.","pos":[0,164],"nodes":[{"content":"The time-out for lock ownership used by persistence provider instances created by this instance.","pos":[0,96]},{"content":"Locked instances are automatically unlocked after this time period.","pos":[97,164]}]}]},{"pos":[18232,18296],"content":"A time-out of <ph id=\"ph1\">`TimeSpan.Zero`</ph> specifies that no locking is used.","needQuote":true,"needEscape":true,"source":"A time-out of `TimeSpan.Zero` specifies that no locking is used."},{"pos":[18656,18694],"content":"The time-out value for lock ownership.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time-out value for lock ownership.","pos":[0,38]}]},{"pos":[19276,19303],"content":"Represents the Abort phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the Abort phase.","pos":[0,27]}]},{"pos":[19316,19431],"content":"<ph id=\"ph1\">`OnAbort`</ph> fires when the service host shuts down abruptly and active commands currently being processed are closed.","needQuote":false,"needEscape":true,"source":"`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed."},{"pos":[20304,20348],"content":"Represents the beginning of the Close phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the beginning of the Close phase.","pos":[0,44]}]},{"pos":[20360,20410],"content":"The Close phase occurs when the service is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]},{"pos":[20618,20691],"content":"The time period after which the persistence provider aborts this attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]},{"pos":[20763,20819],"content":"The method to be called when the operation is completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]},{"pos":[20881,20984],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]},{"pos":[21048,21103],"content":"The state of the OnBeginClose asynchronous method call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state of the OnBeginClose asynchronous method call.","pos":[0,55]}]},{"pos":[21897,21940],"content":"Represents the beginning of the Open phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the beginning of the Open phase.","pos":[0,43]}]},{"pos":[21952,22001],"content":"The Open phase occurs when the service is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]},{"pos":[22208,22281],"content":"The time period after which the persistence provider aborts this attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]},{"pos":[22353,22409],"content":"The method to be called when the operation is completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]},{"pos":[22471,22574],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]},{"pos":[22638,22692],"content":"The state of the OnBeginOpen asynchronous method call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state of the OnBeginOpen asynchronous method call.","pos":[0,54]}]},{"pos":[23332,23359],"content":"Represents the Close phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the Close phase.","pos":[0,27]}]},{"pos":[23371,23421],"content":"The Close phase occurs when the service is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]},{"pos":[23578,23651],"content":"The time period after which the persistence provider aborts this attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]},{"pos":[24322,24360],"content":"Represents the end of the Close phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the end of the Close phase.","pos":[0,38]}]},{"pos":[24372,24422],"content":"The Close phase occurs when the service is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]},{"pos":[24588,24631],"content":"A reference to the result of the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the result of the operation.","pos":[0,43]}]},{"pos":[25300,25337],"content":"Represents the end of the Open phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the end of the Open phase.","pos":[0,37]}]},{"pos":[25349,25398],"content":"The Open phase occurs when the service is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]},{"pos":[25563,25606],"content":"A reference to the result of the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the result of the operation.","pos":[0,43]}]},{"pos":[26239,26265],"content":"Represents the Open phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the Open phase.","pos":[0,26]}]},{"pos":[26277,26326],"content":"The Open phase occurs when the service is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]},{"pos":[26482,26555],"content":"The time period after which the persistence provider aborts this attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]},{"pos":[27168,27283],"content":"Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.","pos":[0,115]}]},{"pos":[27295,27421],"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","needQuote":true,"needEscape":true,"source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."},{"pos":[27784,27969],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service information is serialized as text; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service information is serialized as text; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  id: SqlPersistenceProviderFactory\n  children:\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory\n  nameWithType: SqlPersistenceProviderFactory\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  type: Class\n  summary: A system-provided <xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"></xref> implementation used to create a <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database to store persisted service state data.\n  remarks: \"The SqlPersistenceProviderFactory class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service.  \\n  \\n In addition to persistence, the provider created by the SqlPersistenceProviderFactory class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.  \\n  \\n> [!NOTE]\\n>  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by SqlPersistenceProviderFactory do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.  \\n  \\n> [!NOTE]\\n>  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Persistence.PersistenceProviderFactory\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  id: '#ctor(System.Collections.Specialized.NameValueCollection)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(NameValueCollection)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified parameter collection.\n  remarks: This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#3](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#3)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.Collections.Specialized.NameValueCollection\n      description: The collection of parameters used by the new persistence provider factory. Valid parameters include <xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"></xref>, <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref>, and <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref>.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#2](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#2)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider instance.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String,Boolean)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string and <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref> parameters.\n  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#1](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#1)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider instance.\n    - id: serializeAsText\n      type: System.Boolean\n      description: Specifies whether data is serialized as text rather than binary.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string, <xref uid=\"langword_csharp_serializeAsText\" name=\"serializeAsText\" href=\"\"></xref>, and <xref uid=\"langword_csharp_lockTimeout\" name=\"lockTimeout\" href=\"\"></xref> parameters.\n  remarks: \"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.  \\n  \\n The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.\"\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#0](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#0)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider factory instance.\n    - id: serializeAsText\n      type: System.Boolean\n      description: Specifies whether data is serialized as text rather than binary.\n    - id: lockTimeout\n      type: System.TimeSpan\n      description: The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of <xref uid=\"langword_csharp_TimeSpan.Zero\" name=\"TimeSpan.Zero\" href=\"\"></xref> specifies that no locking is used.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  id: ConnectionString\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the connection parameters for persistence provider instances created with this factory.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set and access the `ConnectionString` property.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#4](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#4)]\"\n  syntax:\n    content: public string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The connection parameters for persistence provider instances created with this factory.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  id: CreateProvider(System.Guid)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: CreateProvider(Guid)\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database as its persistence store.\n  remarks: The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.\n  example:\n  - \"The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#7](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#7)]\"\n  syntax:\n    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: The unique identifier of the persistence provider being created.\n    return:\n      type: System.ServiceModel.Persistence.PersistenceProvider\n      description: A newly-created <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref>.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the default time-out value used when persistence providers created with this factory are closed.\n  remarks: The default value for close time-out is 15 seconds.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default time-out value.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the default time-out value used when persistence provider is opened.\n  remarks: The default value for open time-out is 15 seconds.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default time-out value.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  id: LockTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.\n  remarks: A time-out of `TimeSpan.Zero` specifies that no locking is used.\n  example:\n  - \"The following code example shows how to access the `LockTimeout` property.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#5](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#5)]\"\n  syntax:\n    content: public TimeSpan LockTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time-out value for lock ownership.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  id: OnAbort\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnAbort()\n  nameWithType: SqlPersistenceProviderFactory.OnAbort()\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Abort phase.\n  remarks: '`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.'\n  syntax:\n    content: protected override void OnAbort ();\n    parameters: []\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnBeginClose(TimeSpan,AsyncCallback,Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the beginning of the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The state of the OnBeginClose asynchronous method call.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the beginning of the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The state of the OnBeginOpen asynchronous method call.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  id: OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnClose(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override void OnClose (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  id: OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnEndClose(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the end of the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override void OnEndClose (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: A reference to the result of the operation.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  id: OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the end of the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override void OnEndOpen (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: A reference to the result of the operation.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  id: OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnOpen(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override void OnOpen (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  id: SerializeAsText\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.\n  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.\n  example:\n  - \"The following code example shows how to access the `SerializeAsText` property.  \\n  \\n [!code-cs[SqlPersistenceProviderFactory#6](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#6)]\"\n  syntax:\n    content: public bool SerializeAsText { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service information is serialized as text; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Persistence.PersistenceProviderFactory\n  isExternal: false\n  name: System.ServiceModel.Persistence.PersistenceProviderFactory\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(NameValueCollection)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String,Boolean)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: CreateProvider(Guid)\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)\n- uid: System.ServiceModel.Persistence.PersistenceProvider\n  parent: System.ServiceModel.Persistence\n  isExternal: false\n  name: PersistenceProvider\n  nameWithType: PersistenceProvider\n  fullName: System.ServiceModel.Persistence.PersistenceProvider\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: SqlPersistenceProviderFactory.OnAbort()\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan,AsyncCallback,Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: CreateProvider\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnAbort\n  nameWithType: SqlPersistenceProviderFactory.OnAbort\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginClose\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginOpen\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnClose\n  nameWithType: SqlPersistenceProviderFactory.OnClose\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndClose\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndOpen\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnOpen\n  nameWithType: SqlPersistenceProviderFactory.OnOpen\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n"}