{"nodes":[{"pos":[834,945],"content":"Specifies that this property can be combined with properties belonging to other objects in a Properties window.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that this property can be combined with properties belonging to other objects in a Properties window.","pos":[0,111]}]},{"pos":[958,1982],"content":"Properties that are marked with the MergablePropertyAttribute set to `true` can be combined with properties belonging to other objects in a Properties window. Properties that are marked with the MergablePropertyAttribute set to `false` must be displayed separately. The default is `true`.      > [!NOTE] >  When you mark a property with the MergablePropertyAttribute set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute.Yes>. For a property marked with the MergablePropertyAttribute property set to `false`, the value is <xref:System.ComponentModel.MergablePropertyAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName>.       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Properties that are marked with the MergablePropertyAttribute set to <ph id=\"ph1\">`true`</ph> can be combined with properties belonging to other objects in a Properties window.","pos":[0,158],"source":"Properties that are marked with the MergablePropertyAttribute set to `true` can be combined with properties belonging to other objects in a Properties window."},{"content":"Properties that are marked with the MergablePropertyAttribute set to <ph id=\"ph1\">`false`</ph> must be displayed separately.","pos":[159,265],"source":" Properties that are marked with the MergablePropertyAttribute set to `false` must be displayed separately."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[266,288],"source":" The default is `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you mark a property with the MergablePropertyAttribute set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member &lt;xref:System.ComponentModel.MergablePropertyAttribute.Yes&gt;.","pos":[294,499],"source":"      > [!NOTE] >  When you mark a property with the MergablePropertyAttribute set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute.Yes>."},{"content":"For a property marked with the MergablePropertyAttribute property set to <ph id=\"ph1\">`false`</ph>, the value is &lt;xref:System.ComponentModel.MergablePropertyAttribute.No&gt;.","pos":[500,653],"source":" For a property marked with the MergablePropertyAttribute property set to `false`, the value is <xref:System.ComponentModel.MergablePropertyAttribute.No>."},{"content":"Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as &lt;xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName&gt; or &lt;xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName&gt;.","pos":[654,934],"source":" Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[941,1019],"source":"       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4823,4932],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MergablePropertyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\"></xref> class."},{"pos":[5838,6073],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6573,6701],"content":"Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.","pos":[0,128]}]},{"pos":[7913,8148],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8635,8938],"content":"Specifies the default value, which is <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\"></xref>, that is a property can be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the default value, which is <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, that is a property can be combined with properties belonging to other objects in a Properties window.","pos":[0,213],"source":"Specifies the default value, which is <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\"></xref>, that is a property can be combined with properties belonging to other objects in a Properties window."},{"content":"This <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field is read-only.","pos":[214,303],"source":" This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only."}]},{"pos":[8950,9298],"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>.","pos":[0,348],"nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member &lt;xref:System.ComponentModel.MergablePropertyAttribute&gt;.","pos":[0,142],"source":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as &lt;xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName&gt;.","pos":[143,348],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>."}]}]},{"pos":[9493,9505],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9970,10035],"content":"Indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]},{"pos":[10176,10205],"content":"Another object to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another object to compare to.","pos":[0,29]}]},{"pos":[10264,10446],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10956,10996],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[11131,11228],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MergablePropertyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.ComponentModel.MergablePropertyAttribute\"></xref>."},{"pos":[11778,11822],"content":"Determines if this attribute is the default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if this attribute is the default.","pos":[0,44]}]},{"pos":[11967,12166],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the attribute is the default value for this attribute class; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is the default value for this attribute class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12636,12837],"content":"Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that a property cannot be combined with properties belonging to other objects in a Properties window.","pos":[0,111]},{"content":"This <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field is read-only.","pos":[112,201],"source":" This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only."}]},{"pos":[12849,13144],"content":"When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `false`, the value of this attribute is set to the constant member No. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as No.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you mark a property with the &lt;xref:System.ComponentModel.MergablePropertyAttribute&gt; set to <ph id=\"ph1\">`false`</ph>, the value of this attribute is set to the constant member No.","pos":[0,166],"source":"When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `false`, the value of this attribute is set to the constant member No."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as No.","pos":[167,295]}]},{"pos":[13334,13346],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13741,13939],"content":"Specifies that a property can be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that a property can be combined with properties belonging to other objects in a Properties window.","pos":[0,108]},{"content":"This <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field is read-only.","pos":[109,198],"source":" This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only."}]},{"pos":[13952,14310],"content":"This field is the default setting for this attribute.       When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `true`, the value of this attribute is set to the constant member Yes. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This field is the default setting for this attribute.","pos":[0,53]},{"content":"When you mark a property with the &lt;xref:System.ComponentModel.MergablePropertyAttribute&gt; set to <ph id=\"ph1\">`true`</ph>, the value of this attribute is set to the constant member Yes.","pos":[60,226],"source":"       When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `true`, the value of this attribute is set to the constant member Yes."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.","pos":[227,356]}]},{"pos":[14502,14514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.MergablePropertyAttribute\n  id: MergablePropertyAttribute\n  children:\n  - System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.MergablePropertyAttribute.AllowMerge\n  - System.ComponentModel.MergablePropertyAttribute.Default\n  - System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)\n  - System.ComponentModel.MergablePropertyAttribute.GetHashCode\n  - System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute\n  - System.ComponentModel.MergablePropertyAttribute.No\n  - System.ComponentModel.MergablePropertyAttribute.Yes\n  langs:\n  - csharp\n  name: MergablePropertyAttribute\n  nameWithType: MergablePropertyAttribute\n  fullName: System.ComponentModel.MergablePropertyAttribute\n  type: Class\n  summary: Specifies that this property can be combined with properties belonging to other objects in a Properties window.\n  remarks: \"Properties that are marked with the MergablePropertyAttribute set to `true` can be combined with properties belonging to other objects in a Properties window. Properties that are marked with the MergablePropertyAttribute set to `false` must be displayed separately. The default is `true`.  \\n  \\n> [!NOTE]\\n>  When you mark a property with the MergablePropertyAttribute set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute.Yes>. For a property marked with the MergablePropertyAttribute property set to `false`, the value is <xref:System.ComponentModel.MergablePropertyAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName>.  \\n  \\n For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example marks a property as appropriate to merge.  \\n  \\n [!code-cpp[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._138_1.cpp)]\\n [!code-cs[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._138_1.cs)]\\n [!code-vb[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._138_1.vb)]  \\n  \\n The next example shows how to check the value of the MergablePropertyAttribute for `MyProperty`. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \\n  \\n The example presents two different ways of checking the value of the MergablePropertyAttribute. In the second code fragment, the example calls the <xref:System.ComponentModel.MergablePropertyAttribute.Equals%2A> method with a `static` value. In the last code fragment, the example uses the <xref:System.ComponentModel.MergablePropertyAttribute.AllowMerge%2A> property to check the value.  \\n  \\n [!code-cpp[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._138_2.cpp)]\\n [!code-cs[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._138_2.cs)]\\n [!code-vb[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._138_2.vb)]  \\n  \\n If you marked a class with the MergablePropertyAttribute, use the following code to check the value.  \\n  \\n [!code-cpp[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._138_3.cpp)]\\n [!code-cs[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._138_3.cs)]\\n [!code-vb[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._138_3.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class MergablePropertyAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: MergablePropertyAttribute(Boolean)\n  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)\n  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MergablePropertyAttribute\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example marks a property as appropriate to merge. This code creates a new <xref:System.ComponentModel.MergablePropertyAttribute>, sets its value to <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \\n  \\n [!code-cpp[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._30_1.cpp)]\\n [!code-cs[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._30_1.cs)]\\n [!code-vb[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._30_1.vb)]\"\n  syntax:\n    content: public MergablePropertyAttribute (bool allowMerge);\n    parameters:\n    - id: allowMerge\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.MergablePropertyAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge\n  id: AllowMerge\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: AllowMerge\n  nameWithType: MergablePropertyAttribute.AllowMerge\n  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.\n  remarks: ''\n  example:\n  - \"The following example checks to see whether `MyProperty` is appropriate to merge. First the code gets the attributes for `MyProperty` by:  \\n  \\n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \\n  \\n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \\n  \\n-   Saving the attributes for this property in the attributes variable.  \\n  \\n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.MergablePropertyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is appropriate to merge.  \\n  \\n [!code-cs[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/csharp/p-system.componentmodel._6_1.cs)]\\n [!code-vb[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._6_1.vb)]\\n [!code-cpp[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/cpp/p-system.componentmodel._6_1.cpp)]\"\n  syntax:\n    content: public bool AllowMerge { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be combined with properties belonging to other objects in a Properties window; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.MergablePropertyAttribute.AllowMerge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.Default\n  id: Default\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: MergablePropertyAttribute.Default\n  fullName: System.ComponentModel.MergablePropertyAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies the default value, which is <xref href=\"System.ComponentModel.MergablePropertyAttribute.Yes\"></xref>, that is a property can be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.\n  remarks: When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.MergablePropertyAttribute Default;\n    return:\n      type: System.ComponentModel.MergablePropertyAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MergablePropertyAttribute.Equals(Object)\n  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.MergablePropertyAttribute.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MergablePropertyAttribute.GetHashCode()\n  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.MergablePropertyAttribute\"></xref>.\n  overload: System.ComponentModel.MergablePropertyAttribute.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()\n  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Determines if this attribute is the default.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is the default value for this attribute class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.No\n  id: No\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: MergablePropertyAttribute.No\n  fullName: System.ComponentModel.MergablePropertyAttribute.No\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.\n  remarks: When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `false`, the value of this attribute is set to the constant member No. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as No.\n  syntax:\n    content: public static readonly System.ComponentModel.MergablePropertyAttribute No;\n    return:\n      type: System.ComponentModel.MergablePropertyAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MergablePropertyAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.MergablePropertyAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: MergablePropertyAttribute.Yes\n  fullName: System.ComponentModel.MergablePropertyAttribute.Yes\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies that a property can be combined with properties belonging to other objects in a Properties window. This <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> field is read-only.\n  remarks: \"This field is the default setting for this attribute.  \\n  \\n When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `true`, the value of this attribute is set to the constant member Yes. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.\"\n  syntax:\n    content: public static readonly System.ComponentModel.MergablePropertyAttribute Yes;\n    return:\n      type: System.ComponentModel.MergablePropertyAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: MergablePropertyAttribute(Boolean)\n  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)\n  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: AllowMerge\n  nameWithType: MergablePropertyAttribute.AllowMerge\n  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge\n- uid: System.ComponentModel.MergablePropertyAttribute.Default\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: Default\n  nameWithType: MergablePropertyAttribute.Default\n  fullName: System.ComponentModel.MergablePropertyAttribute.Default\n- uid: System.ComponentModel.MergablePropertyAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: MergablePropertyAttribute\n  nameWithType: MergablePropertyAttribute\n  fullName: System.ComponentModel.MergablePropertyAttribute\n- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MergablePropertyAttribute.Equals(Object)\n  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MergablePropertyAttribute.GetHashCode()\n  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()\n  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.MergablePropertyAttribute.No\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: No\n  nameWithType: MergablePropertyAttribute.No\n  fullName: System.ComponentModel.MergablePropertyAttribute.No\n- uid: System.ComponentModel.MergablePropertyAttribute.Yes\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: MergablePropertyAttribute.Yes\n  fullName: System.ComponentModel.MergablePropertyAttribute.Yes\n- uid: System.ComponentModel.MergablePropertyAttribute.#ctor*\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: MergablePropertyAttribute\n  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute\n- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge*\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: AllowMerge\n  nameWithType: MergablePropertyAttribute.AllowMerge\n- uid: System.ComponentModel.MergablePropertyAttribute.Equals*\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: MergablePropertyAttribute.Equals\n- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode*\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: MergablePropertyAttribute.GetHashCode\n- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.MergablePropertyAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: MergablePropertyAttribute.IsDefaultAttribute\n"}