<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e604353da92347c8a8213363649d16c7cffc1edc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Description.MetadataImporter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e23297cfc87ac66f7fa70766000d97d72d8c0202</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee4f49b5cfae08f4825f3f2c748c2db10afc5116</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Imports metadata into <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use an implementation of the MetadataImporter abstract class to import service metadata.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Types that derive from the MetadataImporter class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A MetadataImporter implementation collects the policy expressions attached to the service metadata in a &lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName&gt; object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The MetadataImporter then processes the policies as part of importing the metadata by calling the implementations of the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt; interface in the &lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt; property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can add support for importing new policy assertions to a MetadataImporter by adding your own implementation of the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt; interface to the &lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt; property on a MetadataImporter instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Alternatively, you can register your policy import extension in your application configuration file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; type is the implementation of the MetadataImporter abstract class included with <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; type imports WSDL metadata with attached policies that are bundled in a &lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt; object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can add support for importing WSDL extensions by implementing the &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; interface and then adding your implementation to the &lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName&gt; property on your &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; instance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; can also load implementations of the &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; interface registered in your application configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because the MetadataImporter constructor is internal, you cannot derive from MetadataImporter in this version.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there were errors importing the metadata.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Always check the Errors property after importing metadata and before using the metadata.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataConversionError"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a collection of contracts imported from the metadata.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The contracts imported from the metadata.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns all endpoints in the metadata.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implement the ImportAllEndpoints method to return all endpoints in the imported metadata.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new &lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName&gt; object using &lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects that are published by a service.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a dictionary of contracts by name that the importer knows about.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the KnownContracts property to add or remove contract descriptions and their associated XML names that the importer can reference.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A dictionary of contracts listed by XML qualified name.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets a collection of policy importers that the importer calls to process policy assertions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the PolicyImportExtensions property to add or remove policy importers that are invoked to process policy assertions in the metadata.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A collection of policy importers that the <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to process policy assertions.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of objects used in the importing of metadata.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`State`</ph> property to add or remove objects used in the importing of metadata.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A dictionary of objects keyed by type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>