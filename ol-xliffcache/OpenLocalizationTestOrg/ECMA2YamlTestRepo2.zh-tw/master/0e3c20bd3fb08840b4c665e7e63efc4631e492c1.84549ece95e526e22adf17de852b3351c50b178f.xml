{"nodes":[{"pos":[740,837],"content":"Represents the cryptographic key and encrypting algorithm that are used to encrypt the proof key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the cryptographic key and encrypting algorithm that are used to encrypt the proof key.","pos":[0,97]}]},{"pos":[849,1025],"content":"This class defines the encrypting credentials which can be used to encrypt the proof key. It is very similar to the <xref:System.IdentityModel.Tokens.SigningCredentials> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class defines the encrypting credentials which can be used to encrypt the proof key. It is very similar to the <xref:System.IdentityModel.Tokens.SigningCredentials> class.","pos":[0,176],"nodes":[{"content":"This class defines the encrypting credentials which can be used to encrypt the proof key.","pos":[0,89]},{"content":"It is very similar to the &lt;xref:System.IdentityModel.Tokens.SigningCredentials&gt; class.","pos":[90,176],"source":" It is very similar to the <xref:System.IdentityModel.Tokens.SigningCredentials> class."}]}]},{"pos":[1628,1739],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> class."},{"pos":[2702,2892],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified cryptographic key, key identifier, and encryption algorithm.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> class with the specified cryptographic key, key identifier, and encryption algorithm."},{"pos":[3176,3303],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cryptographic key that is used for encryption.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used for encryption."},{"pos":[3409,3564],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the identifier that represents the key that is used for encryption.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used for encryption."},{"pos":[3630,3708],"content":"A URI that represents the cryptographic algorithm that is used for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used for encryption.","pos":[0,78]}]},{"pos":[3895,4216],"content":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>algorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,81],"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[88,190],"source":"       -or-       <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,295],"source":"       -or-       <code>algorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[4650,4688],"content":"Gets or sets the encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encryption algorithm.","pos":[0,38]}]},{"pos":[4807,4895],"content":"A URI that represents the cryptographic algorithm that is used to encrypt the proof key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to encrypt the proof key.","pos":[0,88]}]},{"pos":[5077,5202],"content":"An attempt is made to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or to an empty string.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or to an empty string."},{"pos":[5645,5686],"content":"Gets or sets the encryption key material.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encryption key material.","pos":[0,41]}]},{"pos":[5866,6003],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cryptographic key that is used to encrypt the proof key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to encrypt the proof key."},{"pos":[6195,6298],"content":"An attempt is made to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6791,6861],"content":"Gets or sets the identifier that identifies the encrypting credential.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the identifier that identifies the encrypting credential.","pos":[0,70]}]},{"pos":[7071,7206],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that identifies the key that is used to encrypt the proof key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that identifies the key that is used to encrypt the proof key."},{"pos":[7408,7511],"content":"An attempt is made to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  id: EncryptingCredentials\n  children:\n  - System.IdentityModel.Tokens.EncryptingCredentials.#ctor\n  - System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  - System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n  type: Class\n  summary: Represents the cryptographic key and encrypting algorithm that are used to encrypt the proof key.\n  remarks: This class defines the encrypting credentials which can be used to encrypt the proof key. It is very similar to the <xref:System.IdentityModel.Tokens.SigningCredentials> class.\n  syntax:\n    content: public class EncryptingCredentials\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  langs:\n  - csharp\n  name: EncryptingCredentials()\n  nameWithType: EncryptingCredentials.EncryptingCredentials()\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> class.\n  syntax:\n    content: public EncryptingCredentials ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.EncryptingCredentials.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  langs:\n  - csharp\n  name: EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n  nameWithType: EncryptingCredentials.EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> class with the specified cryptographic key, key identifier, and encryption algorithm.\n  syntax:\n    content: public EncryptingCredentials (System.IdentityModel.Tokens.SecurityKey key, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, string algorithm);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used for encryption.\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used for encryption.\n    - id: algorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used for encryption.\n  overload: System.IdentityModel.Tokens.EncryptingCredentials.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>key</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>keyIdentifier</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  id: Algorithm\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  langs:\n  - csharp\n  name: Algorithm\n  nameWithType: EncryptingCredentials.Algorithm\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the encryption algorithm.\n  syntax:\n    content: public string Algorithm { get; set; }\n    return:\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to encrypt the proof key.\n  overload: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or to an empty string.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  id: SecurityKey\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  langs:\n  - csharp\n  name: SecurityKey\n  nameWithType: EncryptingCredentials.SecurityKey\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the encryption key material.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKey SecurityKey { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to encrypt the proof key.\n  overload: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  id: SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  langs:\n  - csharp\n  name: SecurityKeyIdentifier\n  nameWithType: EncryptingCredentials.SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the identifier that identifies the encrypting credential.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that identifies the key that is used to encrypt the proof key.\n  overload: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.#ctor\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: EncryptingCredentials()\n  nameWithType: EncryptingCredentials.EncryptingCredentials()\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials()\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n  nameWithType: EncryptingCredentials.EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.EncryptingCredentials(SecurityKey,SecurityKeyIdentifier,String)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: Algorithm\n  nameWithType: EncryptingCredentials.Algorithm\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKey\n  nameWithType: EncryptingCredentials.SecurityKey\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: EncryptingCredentials.SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials.EncryptingCredentials\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.Algorithm*\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: Algorithm\n  nameWithType: EncryptingCredentials.Algorithm\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey*\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKey\n  nameWithType: EncryptingCredentials.SecurityKey\n- uid: System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier*\n  parent: System.IdentityModel.Tokens.EncryptingCredentials\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: EncryptingCredentials.SecurityKeyIdentifier\n"}