{"nodes":[{"pos":[905,966],"content":"Represents the contents of a wst:RequestedProofToken element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the contents of a wst:RequestedProofToken element.","pos":[0,61]}]},{"pos":[979,1726],"content":"The content of a wst:RequestedProofToken element can be either an encrypted key or a key in clear text. In either of these cases, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> property contains the key. If the security token is a regular token, such as a SCT, then its session key will be the material which gets encrypted. When the wst:RequestedProofToken contains only a wst:ComputedKey element as in the case of combined entropy, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> property holds its contents.       For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","needQuote":false,"needEscape":true,"nodes":[{"content":"The content of a wst:RequestedProofToken element can be either an encrypted key or a key in clear text. In either of these cases, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> property contains the key. If the security token is a regular token, such as a SCT, then its session key will be the material which gets encrypted. When the wst:RequestedProofToken contains only a wst:ComputedKey element as in the case of combined entropy, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> property holds its contents.       For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[0,745],"nodes":[{"content":"The content of a wst:RequestedProofToken element can be either an encrypted key or a key in clear text.","pos":[0,103]},{"content":"In either of these cases, the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A&gt; property contains the key.","pos":[104,242],"source":" In either of these cases, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> property contains the key."},{"content":"If the security token is a regular token, such as a SCT, then its session key will be the material which gets encrypted.","pos":[243,363]},{"content":"When the wst:RequestedProofToken contains only a wst:ComputedKey element as in the case of combined entropy, the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A&gt; property holds its contents.","pos":[364,595],"source":" When the wst:RequestedProofToken contains only a wst:ComputedKey element as in the case of combined entropy, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> property holds its contents."},{"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[602,745]}]}]},{"pos":[2406,2559],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified key material.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified key material."},{"pos":[2571,2619],"content":"Use this constructor when the key is plain text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor when the key is plain text.","pos":[0,48]}]},{"pos":[2765,2827],"content":"An array of <xref:System.Byte> that contains the key material.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the key material.","pos":[0,62],"source":"An array of <xref:System.Byte> that contains the key material."}]},{"pos":[3566,3786],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> object."},{"pos":[4027,4183],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key, which can be either a binary secret or an encrypted key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> that represents the key, which can be either a binary secret or an encrypted key."},{"pos":[4378,4468],"content":"<ph id=\"ph1\">&lt;code&gt;protectedKey&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>protectedKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5018,5181],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified computed key algorithm.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified computed key algorithm."},{"pos":[5193,5305],"content":"Use this constructor in the case of combined entropy to specify the algorithm used to calculate the session key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor in the case of combined entropy to specify the algorithm used to calculate the session key.","pos":[0,112]}]},{"pos":[5479,5598],"content":"A string that contains a URI that indicates the algorithm used to compute the session key in the combined entropy case.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the algorithm used to compute the session key in the combined entropy case.","pos":[0,119]}]},{"pos":[5793,5891],"content":"<ph id=\"ph1\">&lt;code&gt;computedKeyAlgorithm&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>computedKeyAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6607,6787],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified key material and encrypting credentials.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified key material and encrypting credentials."},{"pos":[6799,6846],"content":"Use this constructor when the key is encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor when the key is encrypted.","pos":[0,47]}]},{"pos":[7063,7125],"content":"An array of <xref:System.Byte> that contains the key material.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the key material.","pos":[0,62],"source":"An array of <xref:System.Byte> that contains the key material."}]},{"pos":[7237,7375],"content":"A <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> that represents the credentials used to encrypt the key material.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials&gt; that represents the credentials used to encrypt the key material.","pos":[0,138],"source":"A <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> that represents the credentials used to encrypt the key material."}]},{"pos":[7994,8089],"content":"Gets the computed key algorithm used to calculate the session key in the combined entropy case.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the computed key algorithm used to calculate the session key in the combined entropy case.","pos":[0,95]}]},{"pos":[8101,8353],"content":"Represents the contents of the wst:ComputedKey element. This element contains a URI that indicates the computed key algorithm used when keys must be computed; for example, in the combined entropy case when both the requestor and issuer specify entropy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the contents of the wst:ComputedKey element. This element contains a URI that indicates the computed key algorithm used when keys must be computed; for example, in the combined entropy case when both the requestor and issuer specify entropy.","pos":[0,252],"nodes":[{"content":"Represents the contents of the wst:ComputedKey element.","pos":[0,55]},{"content":"This element contains a URI that indicates the computed key algorithm used when keys must be computed; for example, in the combined entropy case when both the requestor and issuer specify entropy.","pos":[56,252]}]}]},{"pos":[8478,8549],"content":"A string that contains a URI that indicates the computed key algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the computed key algorithm.","pos":[0,71]}]},{"pos":[9143,9224],"content":"Gets the key in the case when the wst:RequestedProofToken element contains a key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the key in the case when the wst:RequestedProofToken element contains a key.","pos":[0,81]}]},{"pos":[9236,9370],"content":"Represents the contents of the wst:RequestedProofToken element when the element contains a key (rather than a wst:ComputedKeyElement).","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the contents of the wst:RequestedProofToken element when the element contains a key (rather than a wst:ComputedKeyElement).","pos":[0,134]}]},{"pos":[9570,9714],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key, which can be either encrypted or clear text.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> that represents the key, which can be either encrypted or clear text."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  id: RequestedProofToken\n  children:\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[])\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.String)\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey\n  langs:\n  - csharp\n  name: RequestedProofToken\n  nameWithType: RequestedProofToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  type: Class\n  summary: Represents the contents of a wst:RequestedProofToken element.\n  remarks: \"The content of a wst:RequestedProofToken element can be either an encrypted key or a key in clear text. In either of these cases, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> property contains the key. If the security token is a regular token, such as a SCT, then its session key will be the material which gets encrypted. When the wst:RequestedProofToken contains only a wst:ComputedKey element as in the case of combined entropy, the <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> property holds its contents.  \\n  \\n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.\"\n  syntax:\n    content: public class RequestedProofToken\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: RequestedProofToken(Byte[])\n  nameWithType: RequestedProofToken.RequestedProofToken(Byte[])\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified key material.\n  remarks: Use this constructor when the key is plain text.\n  syntax:\n    content: public RequestedProofToken (byte[] secret);\n    parameters:\n    - id: secret\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the key material.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)\n  id: '#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: RequestedProofToken(ProtectedKey)\n  nameWithType: RequestedProofToken.RequestedProofToken(ProtectedKey)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(ProtectedKey)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> object.\n  syntax:\n    content: public RequestedProofToken (System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey);\n    parameters:\n    - id: protectedKey\n      type: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> that represents the key, which can be either a binary secret or an encrypted key.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>protectedKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: RequestedProofToken(String)\n  nameWithType: RequestedProofToken.RequestedProofToken(String)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified computed key algorithm.\n  remarks: Use this constructor in the case of combined entropy to specify the algorithm used to calculate the session key.\n  syntax:\n    content: public RequestedProofToken (string computedKeyAlgorithm);\n    parameters:\n    - id: computedKeyAlgorithm\n      type: System.String\n      description: A string that contains a URI that indicates the algorithm used to compute the session key in the combined entropy case.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>computedKeyAlgorithm</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: RequestedProofToken(Byte[],EncryptingCredentials)\n  nameWithType: RequestedProofToken.RequestedProofToken(Byte[],EncryptingCredentials)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(Byte[],EncryptingCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> class using the specified key material and encrypting credentials.\n  remarks: Use this constructor when the key is encrypted.\n  syntax:\n    content: public RequestedProofToken (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);\n    parameters:\n    - id: secret\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the key material.\n    - id: wrappingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: A <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> that represents the credentials used to encrypt the key material.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm\n  id: ComputedKeyAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: ComputedKeyAlgorithm\n  nameWithType: RequestedProofToken.ComputedKeyAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets the computed key algorithm used to calculate the session key in the combined entropy case.\n  remarks: Represents the contents of the wst:ComputedKey element. This element contains a URI that indicates the computed key algorithm used when keys must be computed; for example, in the combined entropy case when both the requestor and issuer specify entropy.\n  syntax:\n    content: public string ComputedKeyAlgorithm { get; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the computed key algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey\n  id: ProtectedKey\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  langs:\n  - csharp\n  name: ProtectedKey\n  nameWithType: RequestedProofToken.ProtectedKey\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets the key in the case when the wst:RequestedProofToken element contains a key.\n  remarks: Represents the contents of the wst:RequestedProofToken element when the element contains a key (rather than a wst:ComputedKeyElement).\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.ProtectedKey ProtectedKey { get; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.ProtectedKey\"></xref> that represents the key, which can be either encrypted or clear text.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[])\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: RequestedProofToken(Byte[])\n  nameWithType: RequestedProofToken.RequestedProofToken(Byte[])\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: RequestedProofToken(ProtectedKey)\n  nameWithType: RequestedProofToken.RequestedProofToken(ProtectedKey)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(ProtectedKey)\n- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: ProtectedKey\n  nameWithType: ProtectedKey\n  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.String)\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: RequestedProofToken(String)\n  nameWithType: RequestedProofToken.RequestedProofToken(String)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: RequestedProofToken(Byte[],EncryptingCredentials)\n  nameWithType: RequestedProofToken.RequestedProofToken(Byte[],EncryptingCredentials)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.RequestedProofToken(Byte[],EncryptingCredentials)\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: ComputedKeyAlgorithm\n  nameWithType: RequestedProofToken.ComputedKeyAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: ProtectedKey\n  nameWithType: RequestedProofToken.ProtectedKey\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: RequestedProofToken\n  nameWithType: RequestedProofToken.RequestedProofToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: ComputedKeyAlgorithm\n  nameWithType: RequestedProofToken.ComputedKeyAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  isExternal: false\n  name: ProtectedKey\n  nameWithType: RequestedProofToken.ProtectedKey\n"}