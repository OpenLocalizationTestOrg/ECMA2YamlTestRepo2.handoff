{"nodes":[{"pos":[616,784],"content":"Contains information about a logger as a collection of values that can be used to instantiate the logger and can be serialized to be passed between different processes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains information about a logger as a collection of values that can be used to instantiate the logger and can be serialized to be passed between different processes.","pos":[0,168]}]},{"pos":[1661,1710],"content":"Creates a logger description from the given data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a logger description from the given data.","pos":[0,49]}]},{"pos":[2010,2039],"content":"The class name of the logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class name of the logger.","pos":[0,29]}]},{"pos":[2114,2159],"content":"The assembly name that implements the logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly name that implements the logger.","pos":[0,45]}]},{"pos":[2234,2279],"content":"The assembly file that implements the logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly file that implements the logger.","pos":[0,45]}]},{"pos":[2358,2391],"content":"Switch parameters for the logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Switch parameters for the logger.","pos":[0,33]}]},{"pos":[2485,2505],"content":"The verbosity level.","needQuote":true,"needEscape":true,"nodes":[{"content":"The verbosity level.","pos":[0,20]}]},{"pos":[2998,3060],"content":"Creates an ILogger instance from the data in this description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an ILogger instance from the data in this description.","pos":[0,62]}]},{"pos":[3072,3229],"content":"This method may throw a variety of reflection exceptions if the data is invalid. It is the resposibility of the caller to handle these exceptions if desired.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method may throw a variety of reflection exceptions if the data is invalid. It is the resposibility of the caller to handle these exceptions if desired.","pos":[0,157],"nodes":[{"content":"This method may throw a variety of reflection exceptions if the data is invalid.","pos":[0,80]},{"content":"It is the resposibility of the caller to handle these exceptions if desired.","pos":[81,157]}]}]},{"pos":[3407,3469],"content":"Returns an ILogger instance from the data in this description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an ILogger instance from the data in this description.","pos":[0,62]}]},{"pos":[4015,4052],"content":"Gets the string of logger parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the string of logger parameters.","pos":[0,37]}]},{"pos":[4179,4261],"content":"Returns the string of logger parameters.  Returns null if there are no parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the string of logger parameters.  Returns null if there are no parameters.","pos":[0,82],"nodes":[{"content":"Returns the string of logger parameters.","pos":[0,40]},{"content":"Returns null if there are no parameters.","pos":[42,82]}]}]},{"pos":[4752,4796],"content":"Returns the verbosity level for this logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the verbosity level for this logger.","pos":[0,44]}]},{"pos":[4808,4875],"content":"For command line display, all loggers get the same verbosity level.","needQuote":true,"needEscape":true,"nodes":[{"content":"For command line display, all loggers get the same verbosity level.","pos":[0,67]}]},{"pos":[5052,5064],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Logging.LoggerDescription\n  id: LoggerDescription\n  children:\n  - Microsoft.Build.Logging.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)\n  - Microsoft.Build.Logging.LoggerDescription.CreateLogger\n  - Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters\n  - Microsoft.Build.Logging.LoggerDescription.Verbosity\n  langs:\n  - csharp\n  name: LoggerDescription\n  nameWithType: LoggerDescription\n  fullName: Microsoft.Build.Logging.LoggerDescription\n  type: Class\n  summary: Contains information about a logger as a collection of values that can be used to instantiate the logger and can be serialized to be passed between different processes.\n  syntax:\n    content: public class LoggerDescription\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)\n  id: '#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)'\n  parent: Microsoft.Build.Logging.LoggerDescription\n  langs:\n  - csharp\n  name: LoggerDescription(String,String,String,String,LoggerVerbosity)\n  nameWithType: LoggerDescription.LoggerDescription(String,String,String,String,LoggerVerbosity)\n  fullName: Microsoft.Build.Logging.LoggerDescription.LoggerDescription(String,String,String,String,LoggerVerbosity)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Creates a logger description from the given data.\n  syntax:\n    content: public LoggerDescription (string loggerClassName, string loggerAssemblyName, string loggerAssemblyFile, string loggerSwitchParameters, Microsoft.Build.Framework.LoggerVerbosity verbosity);\n    parameters:\n    - id: loggerClassName\n      type: System.String\n      description: The class name of the logger.\n    - id: loggerAssemblyName\n      type: System.String\n      description: The assembly name that implements the logger.\n    - id: loggerAssemblyFile\n      type: System.String\n      description: The assembly file that implements the logger.\n    - id: loggerSwitchParameters\n      type: System.String\n      description: Switch parameters for the logger.\n    - id: verbosity\n      type: Microsoft.Build.Framework.LoggerVerbosity\n      description: The verbosity level.\n  overload: Microsoft.Build.Logging.LoggerDescription.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.LoggerDescription.CreateLogger\n  id: CreateLogger\n  parent: Microsoft.Build.Logging.LoggerDescription\n  langs:\n  - csharp\n  name: CreateLogger()\n  nameWithType: LoggerDescription.CreateLogger()\n  fullName: Microsoft.Build.Logging.LoggerDescription.CreateLogger()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Creates an ILogger instance from the data in this description.\n  remarks: This method may throw a variety of reflection exceptions if the data is invalid. It is the resposibility of the caller to handle these exceptions if desired.\n  syntax:\n    content: public Microsoft.Build.Framework.ILogger CreateLogger ();\n    parameters: []\n    return:\n      type: Microsoft.Build.Framework.ILogger\n      description: Returns an ILogger instance from the data in this description.\n  overload: Microsoft.Build.Logging.LoggerDescription.CreateLogger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters\n  id: LoggerSwitchParameters\n  parent: Microsoft.Build.Logging.LoggerDescription\n  langs:\n  - csharp\n  name: LoggerSwitchParameters\n  nameWithType: LoggerDescription.LoggerSwitchParameters\n  fullName: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Gets the string of logger parameters.\n  syntax:\n    content: public string LoggerSwitchParameters { get; }\n    return:\n      type: System.String\n      description: Returns the string of logger parameters.  Returns null if there are no parameters.\n  overload: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.LoggerDescription.Verbosity\n  id: Verbosity\n  parent: Microsoft.Build.Logging.LoggerDescription\n  langs:\n  - csharp\n  name: Verbosity\n  nameWithType: LoggerDescription.Verbosity\n  fullName: Microsoft.Build.Logging.LoggerDescription.Verbosity\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Returns the verbosity level for this logger.\n  remarks: For command line display, all loggers get the same verbosity level.\n  syntax:\n    content: public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; }\n    return:\n      type: Microsoft.Build.Framework.LoggerVerbosity\n      description: To be added.\n  overload: Microsoft.Build.Logging.LoggerDescription.Verbosity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Logging.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: LoggerDescription(String,String,String,String,LoggerVerbosity)\n  nameWithType: LoggerDescription.LoggerDescription(String,String,String,String,LoggerVerbosity)\n  fullName: Microsoft.Build.Logging.LoggerDescription.LoggerDescription(String,String,String,String,LoggerVerbosity)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.LoggerVerbosity\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: LoggerVerbosity\n  nameWithType: LoggerVerbosity\n  fullName: Microsoft.Build.Framework.LoggerVerbosity\n- uid: Microsoft.Build.Logging.LoggerDescription.CreateLogger\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: CreateLogger()\n  nameWithType: LoggerDescription.CreateLogger()\n  fullName: Microsoft.Build.Logging.LoggerDescription.CreateLogger()\n- uid: Microsoft.Build.Framework.ILogger\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ILogger\n  nameWithType: ILogger\n  fullName: Microsoft.Build.Framework.ILogger\n- uid: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: LoggerSwitchParameters\n  nameWithType: LoggerDescription.LoggerSwitchParameters\n  fullName: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters\n- uid: Microsoft.Build.Logging.LoggerDescription.Verbosity\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: Verbosity\n  nameWithType: LoggerDescription.Verbosity\n  fullName: Microsoft.Build.Logging.LoggerDescription.Verbosity\n- uid: Microsoft.Build.Logging.LoggerDescription.#ctor*\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: LoggerDescription\n  nameWithType: LoggerDescription.LoggerDescription\n- uid: Microsoft.Build.Logging.LoggerDescription.CreateLogger*\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: CreateLogger\n  nameWithType: LoggerDescription.CreateLogger\n- uid: Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters*\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: LoggerSwitchParameters\n  nameWithType: LoggerDescription.LoggerSwitchParameters\n- uid: Microsoft.Build.Logging.LoggerDescription.Verbosity*\n  parent: Microsoft.Build.Logging.LoggerDescription\n  isExternal: false\n  name: Verbosity\n  nameWithType: LoggerDescription.Verbosity\n"}