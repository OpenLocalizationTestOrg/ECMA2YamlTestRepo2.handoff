{"nodes":[{"pos":[276,350],"content":"Defines the interface a control implements to get or set its text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface a control implements to get or set its text content.","pos":[0,74]}]},{"pos":[363,1151],"content":"The ITextControl interface defines the <xref:System.Web.UI.ITextControl.Text%2A> property a control implements to allow the getting or setting of its text content. The <xref:System.Web.UI.ITextControl.Text%2A> property can be set programmatically or through user input.      > [!CAUTION] >  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).","needQuote":false,"needEscape":true,"nodes":[{"content":"The ITextControl interface defines the &lt;xref:System.Web.UI.ITextControl.Text%2A&gt; property a control implements to allow the getting or setting of its text content.","pos":[0,163],"source":"The ITextControl interface defines the <xref:System.Web.UI.ITextControl.Text%2A> property a control implements to allow the getting or setting of its text content."},{"content":"The &lt;xref:System.Web.UI.ITextControl.Text%2A&gt; property can be set programmatically or through user input.","pos":[164,269],"source":" The <xref:System.Web.UI.ITextControl.Text%2A> property can be set programmatically or through user input."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  A control implementing this interface can be used to display user input.","pos":[275,363],"source":"      > [!CAUTION] >  A control implementing this interface can be used to display user input."},{"content":"Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements.","pos":[364,493]},{"content":"ASP.NET provides an input request validation feature to block script and HTML in user input.","pos":[494,586]},{"content":"Validation server controls are also provided to assess user input.","pos":[587,653]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Validation Server Control Syntax<ept id=\"p1\">](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)</ept>.","pos":[654,785],"source":" For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."}]},{"pos":[1971,2014],"content":"Gets or sets the text content of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text content of a control.","pos":[0,43]}]},{"pos":[2027,2614],"content":"The Text property can be set programmatically or through user input.      > [!CAUTION] >  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).","needQuote":false,"needEscape":true,"nodes":[{"content":"The Text property can be set programmatically or through user input.","pos":[0,68]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  A control implementing this interface can be used to display user input.","pos":[74,162],"source":"      > [!CAUTION] >  A control implementing this interface can be used to display user input."},{"content":"Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements.","pos":[163,292]},{"content":"ASP.NET provides an input request validation feature to block script and HTML in user input.","pos":[293,385]},{"content":"Validation server controls are also provided to assess user input.","pos":[386,452]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Validation Server Control Syntax<ept id=\"p1\">](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)</ept>.","pos":[453,584],"source":" For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."}]},{"pos":[3156,3186],"content":"The text content of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text content of a control.","pos":[0,30]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ITextControl\n  id: ITextControl\n  children:\n  - System.Web.UI.ITextControl.Text\n  langs:\n  - csharp\n  name: ITextControl\n  nameWithType: ITextControl\n  fullName: System.Web.UI.ITextControl\n  type: Interface\n  summary: Defines the interface a control implements to get or set its text content.\n  remarks: \"The ITextControl interface defines the <xref:System.Web.UI.ITextControl.Text%2A> property a control implements to allow the getting or setting of its text content. The <xref:System.Web.UI.ITextControl.Text%2A> property can be set programmatically or through user input.  \\n  \\n> [!CAUTION]\\n>  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).\"\n  example:\n  - \"The following code example shows a custom control that implements the ITextControl interface. A default value is assigned to the <xref:System.Web.UI.ITextControl.Text%2A> property if `null` is passed to the property.  \\n  \\n [!code-cs[System.Web.UI.ITextControl#1](~/add/codesnippet/csharp/t-system.web.ui.itextcon_1.cs)]\\n [!code-vb[System.Web.UI.ITextControl#1](~/add/codesnippet/visualbasic/t-system.web.ui.itextcon_1.vb)]\"\n  syntax:\n    content: public interface ITextControl\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.UI.ITextControl.Text\n  id: Text\n  parent: System.Web.UI.ITextControl\n  langs:\n  - csharp\n  name: Text\n  nameWithType: ITextControl.Text\n  fullName: System.Web.UI.ITextControl.Text\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the text content of a control.\n  remarks: \"The Text property can be set programmatically or through user input.  \\n  \\n> [!CAUTION]\\n>  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).\"\n  example:\n  - \"The following code example shows a custom control that implements the <xref:System.Web.UI.ITextControl> interface. A default value is assigned to the Text property if `null` is passed to the property.  \\n  \\n [!code-cs[System.Web.UI.ITextControl#1](~/add/codesnippet/csharp/p-system.web.ui.itextcon_1.cs)]\\n [!code-vb[System.Web.UI.ITextControl#1](~/add/codesnippet/visualbasic/p-system.web.ui.itextcon_1.vb)]\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text content of a control.\n  overload: System.Web.UI.ITextControl.Text*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.ITextControl.Text\n  parent: System.Web.UI.ITextControl\n  isExternal: false\n  name: Text\n  nameWithType: ITextControl.Text\n  fullName: System.Web.UI.ITextControl.Text\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ITextControl.Text*\n  parent: System.Web.UI.ITextControl\n  isExternal: false\n  name: Text\n  nameWithType: ITextControl.Text\n"}