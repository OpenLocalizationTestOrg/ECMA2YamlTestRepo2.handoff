{"nodes":[{"pos":[1264,1395],"content":"Specifies SQL Server-specific data type of a field, property, for use in a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Specifies SQL Server-specific data type of a field, property, for use in a <xref href=\"System.Data.SqlClient.SqlParameter\"></xref>."},{"pos":[1407,1580],"content":"When setting command parameters, the SqlDbType and <xref:System.Data.DbType> are linked. Therefore, setting the `DbType` changes the `SqlDbType` to a supporting `SqlDbType`.","needQuote":true,"needEscape":true,"nodes":[{"content":"When setting command parameters, the SqlDbType and &lt;xref:System.Data.DbType&gt; are linked.","pos":[0,88],"source":"When setting command parameters, the SqlDbType and <xref:System.Data.DbType> are linked."},{"content":"Therefore, setting the <ph id=\"ph1\">`DbType`</ph> changes the <ph id=\"ph2\">`SqlDbType`</ph> to a supporting <ph id=\"ph3\">`SqlDbType`</ph>.","pos":[89,173],"source":" Therefore, setting the `DbType` changes the `SqlDbType` to a supporting `SqlDbType`."}]},{"pos":[1950,1995],"content":"<xref:System.Int64>. A 64-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Int64>. A 64-bit signed integer.","pos":[0,45],"nodes":[{"content":"&lt;xref:System.Int64&gt;.","pos":[0,20],"source":"<xref:System.Int64>."},{"content":"A 64-bit signed integer.","pos":[21,45]}]}]},{"pos":[2091,2103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2414,2533],"content":"<xref:System.Array> of type <xref:System.Byte>. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Array> of type <xref:System.Byte>. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.","pos":[0,119],"nodes":[{"content":"&lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.","pos":[0,47],"source":"<xref:System.Array> of type <xref:System.Byte>."},{"content":"A fixed-length stream of binary data ranging between 1 and 8,000 bytes.","pos":[48,119]}]}]},{"pos":[2629,2641],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2937,3068],"content":"<xref:System.Boolean>. An unsigned numeric value that can be 0, 1, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Boolean&gt;.","pos":[0,22],"source":"<xref:System.Boolean>."},{"content":"An unsigned numeric value that can be 0, 1, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[23,131],"source":" An unsigned numeric value that can be 0, 1, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[3161,3173],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3474,3583],"content":"<xref:System.String>. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.String>. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.","pos":[0,109],"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.","pos":[22,109]}]}]},{"pos":[3677,3689],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3990,4066],"content":"Date data ranging in value from January 1,1 AD through December 31, 9999 AD.","needQuote":true,"needEscape":true,"nodes":[{"content":"Date data ranging in value from January 1,1 AD through December 31, 9999 AD.","pos":[0,76]}]},{"pos":[4160,4172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4493,4631],"content":"<xref:System.DateTime>. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.DateTime>. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.","pos":[0,138],"nodes":[{"content":"&lt;xref:System.DateTime&gt;.","pos":[0,23],"source":"<xref:System.DateTime>."},{"content":"Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.","pos":[24,138]}]}]},{"pos":[4729,4741],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5067,5247],"content":"Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.","pos":[0,180],"nodes":[{"content":"Date and time data.","pos":[0,19]},{"content":"Date value range is from January 1,1 AD through December 31, 9999 AD.","pos":[20,89]},{"content":"Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.","pos":[90,180]}]}]},{"pos":[5346,5358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5709,5962],"content":"Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.","needQuote":true,"needEscape":true,"nodes":[{"content":"Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.","pos":[0,253],"nodes":[{"content":"Date and time data with time zone awareness.","pos":[0,44]},{"content":"Date value range is from January 1,1 AD through December 31, 9999 AD.","pos":[45,114]},{"content":"Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.","pos":[115,205]},{"content":"Time zone value range is -14:00 through +14:00.","pos":[206,253]}]}]},{"pos":[6066,6078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6394,6512],"content":"<xref:System.Decimal>. A fixed precision and scale numeric value between -10 <sup>38</sup> -1 and 10 <sup>38</sup> -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Decimal&gt;.","pos":[0,22],"source":"<xref:System.Decimal>."},{"content":"A fixed precision and scale numeric value between -10 <bpt id=\"p1\">&lt;sup&gt;</bpt>38<ept id=\"p1\">&lt;/sup&gt;</ept> -1 and 10 <bpt id=\"p2\">&lt;sup&gt;</bpt>38<ept id=\"p2\">&lt;/sup&gt;</ept> -1.","pos":[23,118],"source":" A fixed precision and scale numeric value between -10 <sup>38</sup> -1 and 10 <sup>38</sup> -1."}]},{"pos":[6609,6621],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6927,7024],"content":"<xref:System.Double>. A floating point number within the range of -1.79E +308 through 1.79E +308.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Double>. A floating point number within the range of -1.79E +308 through 1.79E +308.","pos":[0,97],"nodes":[{"content":"&lt;xref:System.Double&gt;.","pos":[0,21],"source":"<xref:System.Double>."},{"content":"A floating point number within the range of -1.79E +308 through 1.79E +308.","pos":[22,97]}]}]},{"pos":[7119,7131],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7437,7587],"content":"<xref:System.Array> of type <xref:System.Byte>. A variable-length stream of binary data ranging from 0 to 2 <sup>31</sup> -1 (or 2,147,483,647) bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.","pos":[0,47],"source":"<xref:System.Array> of type <xref:System.Byte>."},{"content":"A variable-length stream of binary data ranging from 0 to 2 <bpt id=\"p1\">&lt;sup&gt;</bpt>31<ept id=\"p1\">&lt;/sup&gt;</ept> -1 (or 2,147,483,647) bytes.","pos":[48,150],"source":" A variable-length stream of binary data ranging from 0 to 2 <sup>31</sup> -1 (or 2,147,483,647) bytes."}]},{"pos":[7682,7694],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7990,8035],"content":"<xref:System.Int32>. A 32-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Int32>. A 32-bit signed integer.","pos":[0,45],"nodes":[{"content":"&lt;xref:System.Int32&gt;.","pos":[0,20],"source":"<xref:System.Int32>."},{"content":"A 32-bit signed integer.","pos":[21,45]}]}]},{"pos":[8128,8140],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8446,8658],"content":"<xref:System.Decimal>. A currency value ranging from -2 <sup>63</sup> (or -9,223,372,036,854,775,808) to 2 <sup>63</sup> -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Decimal&gt;.","pos":[0,22],"source":"<xref:System.Decimal>."},{"content":"A currency value ranging from -2 <bpt id=\"p1\">&lt;sup&gt;</bpt>63<ept id=\"p1\">&lt;/sup&gt;</ept> (or -9,223,372,036,854,775,808) to 2 <bpt id=\"p2\">&lt;sup&gt;</bpt>63<ept id=\"p2\">&lt;/sup&gt;</ept> -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.","pos":[23,212],"source":" A currency value ranging from -2 <sup>63</sup> (or -9,223,372,036,854,775,808) to 2 <sup>63</sup> -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit."}]},{"pos":[8753,8765],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9071,9176],"content":"<xref:System.String>. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.String>. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.","pos":[0,105],"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.","pos":[22,105]}]}]},{"pos":[9271,9283],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9589,9727],"content":"<xref:System.String>. A variable-length stream of Unicode data with a maximum length of 2 <sup>30</sup> - 1 (or 1,073,741,823) characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A variable-length stream of Unicode data with a maximum length of 2 <bpt id=\"p1\">&lt;sup&gt;</bpt>30<ept id=\"p1\">&lt;/sup&gt;</ept> - 1 (or 1,073,741,823) characters.","pos":[22,138],"source":" A variable-length stream of Unicode data with a maximum length of 2 <sup>30</sup> - 1 (or 1,073,741,823) characters."}]},{"pos":[9822,9834],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10155,10540],"content":"<xref:System.String>. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use NVarChar when the database column is <xref uid=\"langword_csharp_nvarchar(max)\" name=\"nvarchar(max)\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A variable-length stream of Unicode characters ranging between 1 and 4,000 characters.","pos":[22,108]},{"content":"Implicit conversion fails if the string is greater than 4,000 characters.","pos":[109,182]},{"content":"Explicitly set the object when working with strings longer than 4,000 characters.","pos":[183,264]},{"content":"Use NVarChar when the database column is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_nvarchar(max)\" name=\"nvarchar(max)\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[265,385],"source":" Use NVarChar when the database column is <xref uid=\"langword_csharp_nvarchar(max)\" name=\"nvarchar(max)\" href=\"\"></xref>."}]},{"pos":[10638,10650],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10951,11046],"content":"<xref:System.Single>. A floating point number within the range of -3.40E +38 through 3.40E +38.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Single>. A floating point number within the range of -3.40E +38 through 3.40E +38.","pos":[0,95],"nodes":[{"content":"&lt;xref:System.Single&gt;.","pos":[0,21],"source":"<xref:System.Single>."},{"content":"A floating point number within the range of -3.40E +38 through 3.40E +38.","pos":[22,95]}]}]},{"pos":[11140,11152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11498,11624],"content":"<xref:System.DateTime>. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.DateTime>. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.","pos":[0,126],"nodes":[{"content":"&lt;xref:System.DateTime&gt;.","pos":[0,23],"source":"<xref:System.DateTime>."},{"content":"Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.","pos":[24,126]}]}]},{"pos":[11727,11739],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12060,12105],"content":"<xref:System.Int16>. A 16-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Int16>. A 16-bit signed integer.","pos":[0,45],"nodes":[{"content":"&lt;xref:System.Int16&gt;.","pos":[0,20],"source":"<xref:System.Int16>."},{"content":"A 16-bit signed integer.","pos":[21,45]}]}]},{"pos":[12203,12215],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12546,12686],"content":"<xref:System.Decimal>. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Decimal>. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.","pos":[0,140],"nodes":[{"content":"&lt;xref:System.Decimal&gt;.","pos":[0,22],"source":"<xref:System.Decimal>."},{"content":"A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.","pos":[23,140]}]}]},{"pos":[12786,12798],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13129,13217],"content":"A special data type for specifying structured data contained in table-valued parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A special data type for specifying structured data contained in table-valued parameters.","pos":[0,88]}]},{"pos":[13317,13329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13630,13771],"content":"<xref:System.String>. A variable-length stream of non-Unicode data with a maximum length of 2 <sup>31</sup> -1 (or 2,147,483,647) characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A variable-length stream of non-Unicode data with a maximum length of 2 <bpt id=\"p1\">&lt;sup&gt;</bpt>31<ept id=\"p1\">&lt;/sup&gt;</ept> -1 (or 2,147,483,647) characters.","pos":[22,141],"source":" A variable-length stream of non-Unicode data with a maximum length of 2 <sup>31</sup> -1 (or 2,147,483,647) characters."}]},{"pos":[13865,13877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14178,14400],"content":"Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server <xref uid=\"langword_csharp_time\" name=\"time\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Time data based on a 24-hour clock.","pos":[0,35]},{"content":"Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.","pos":[36,126]},{"content":"Corresponds to a SQL Server <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_time\" name=\"time\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[127,222],"source":" Corresponds to a SQL Server <xref uid=\"langword_csharp_time\" name=\"time\" href=\"\"></xref> value."}]},{"pos":[14494,14506],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14832,15138],"content":"<xref:System.Array> of type <xref:System.Byte>. Automatically generated binary numbers, which are guaranteed to be unique within a database. <xref uid=\"langword_csharp_timestamp\" name=\"timestamp\" href=\"\"></xref> is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.","pos":[0,47],"source":"<xref:System.Array> of type <xref:System.Byte>."},{"content":"Automatically generated binary numbers, which are guaranteed to be unique within a database.","pos":[48,140]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_timestamp\" name=\"timestamp\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is used typically as a mechanism for version-stamping table rows.","pos":[141,277],"source":"<xref uid=\"langword_csharp_timestamp\" name=\"timestamp\" href=\"\"></xref> is used typically as a mechanism for version-stamping table rows."},{"content":"The storage size is 8 bytes.","pos":[278,306]}]},{"pos":[15237,15249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15565,15611],"content":"<xref:System.Byte>. An 8-bit unsigned integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Byte>. An 8-bit unsigned integer.","pos":[0,46],"nodes":[{"content":"&lt;xref:System.Byte&gt;.","pos":[0,19],"source":"<xref:System.Byte>."},{"content":"An 8-bit unsigned integer.","pos":[20,46]}]}]},{"pos":[15708,15720],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16016,16100],"content":"A <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> user-defined type (UDT).","needQuote":true,"needEscape":true,"source":"A [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] user-defined type (UDT)."},{"pos":[16193,16205],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16566,16625],"content":"<xref:System.Guid>. A globally unique identifier (or GUID).","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Guid>. A globally unique identifier (or GUID).","pos":[0,59],"nodes":[{"content":"&lt;xref:System.Guid&gt;.","pos":[0,19],"source":"<xref:System.Guid>."},{"content":"A globally unique identifier (or GUID).","pos":[20,59]}]}]},{"pos":[16731,16743],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17069,17345],"content":"<xref:System.Array> of type <xref:System.Byte>. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Array> of type <xref:System.Byte>. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.","pos":[0,276],"nodes":[{"content":"&lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.","pos":[0,47],"source":"<xref:System.Array> of type <xref:System.Byte>."},{"content":"A variable-length stream of binary data ranging between 1 and 8,000 bytes.","pos":[48,122]},{"content":"Implicit conversion fails if the byte array is greater than 8,000 bytes.","pos":[123,195]},{"content":"Explicitly set the object when working with byte arrays larger than 8,000 bytes.","pos":[196,276]}]}]},{"pos":[17444,17456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17772,18002],"content":"<xref:System.String>. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use VarChar when the database column is <xref uid=\"langword_csharp_varchar(max)\" name=\"varchar(max)\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.","pos":[22,112]},{"content":"Use VarChar when the database column is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_varchar(max)\" name=\"varchar(max)\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[113,230],"source":" Use VarChar when the database column is <xref uid=\"langword_csharp_varchar(max)\" name=\"varchar(max)\" href=\"\"></xref>."}]},{"pos":[18099,18111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18427,18619],"content":"<xref:System.Object>. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Object>. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.","pos":[0,192],"nodes":[{"content":"&lt;xref:System.Object&gt;.","pos":[0,21],"source":"<xref:System.Object>."},{"content":"A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.","pos":[22,192]}]}]},{"pos":[18716,18728],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19024,19298],"content":"An XML value. Obtain the XML as a string using the <xref:System.Data.SqlClient.SqlDataReader.GetValue*> method or <xref:System.Data.SqlTypes.SqlXml.Value*> property, or as an <xref:System.Xml.XmlReader> by calling the <xref:System.Data.SqlTypes.SqlXml.CreateReader*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML value.","pos":[0,13]},{"content":"Obtain the XML as a string using the &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue<bpt id=\"p1\">*</bpt>&gt; method or &lt;xref:System.Data.SqlTypes.SqlXml.Value<ept id=\"p1\">*</ept>&gt; property, or as an &lt;xref:System.Xml.XmlReader&gt; by calling the &lt;xref:System.Data.SqlTypes.SqlXml.CreateReader*&gt; method.","pos":[14,274],"source":" Obtain the XML as a string using the <xref:System.Data.SqlClient.SqlDataReader.GetValue*> method or <xref:System.Data.SqlTypes.SqlXml.Value*> property, or as an <xref:System.Xml.XmlReader> by calling the <xref:System.Data.SqlTypes.SqlXml.CreateReader*> method."}]},{"pos":[19391,19403],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlDbType\n  id: SqlDbType\n  children:\n  - System.Data.SqlDbType.BigInt\n  - System.Data.SqlDbType.Binary\n  - System.Data.SqlDbType.Bit\n  - System.Data.SqlDbType.Char\n  - System.Data.SqlDbType.Date\n  - System.Data.SqlDbType.DateTime\n  - System.Data.SqlDbType.DateTime2\n  - System.Data.SqlDbType.DateTimeOffset\n  - System.Data.SqlDbType.Decimal\n  - System.Data.SqlDbType.Float\n  - System.Data.SqlDbType.Image\n  - System.Data.SqlDbType.Int\n  - System.Data.SqlDbType.Money\n  - System.Data.SqlDbType.NChar\n  - System.Data.SqlDbType.NText\n  - System.Data.SqlDbType.NVarChar\n  - System.Data.SqlDbType.Real\n  - System.Data.SqlDbType.SmallDateTime\n  - System.Data.SqlDbType.SmallInt\n  - System.Data.SqlDbType.SmallMoney\n  - System.Data.SqlDbType.Structured\n  - System.Data.SqlDbType.Text\n  - System.Data.SqlDbType.Time\n  - System.Data.SqlDbType.Timestamp\n  - System.Data.SqlDbType.TinyInt\n  - System.Data.SqlDbType.Udt\n  - System.Data.SqlDbType.UniqueIdentifier\n  - System.Data.SqlDbType.VarBinary\n  - System.Data.SqlDbType.VarChar\n  - System.Data.SqlDbType.Variant\n  - System.Data.SqlDbType.Xml\n  langs:\n  - csharp\n  name: SqlDbType\n  nameWithType: SqlDbType\n  fullName: System.Data.SqlDbType\n  type: Enum\n  summary: Specifies SQL Server-specific data type of a field, property, for use in a <xref href=\"System.Data.SqlClient.SqlParameter\"></xref>.\n  remarks: When setting command parameters, the SqlDbType and <xref:System.Data.DbType> are linked. Therefore, setting the `DbType` changes the `SqlDbType` to a supporting `SqlDbType`.\n  syntax:\n    content: public enum SqlDbType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.BigInt\n  id: BigInt\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: BigInt\n  nameWithType: SqlDbType.BigInt\n  fullName: System.Data.SqlDbType.BigInt\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Int64>. A 64-bit signed integer.\n  syntax:\n    content: BigInt\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Binary\n  id: Binary\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Binary\n  nameWithType: SqlDbType.Binary\n  fullName: System.Data.SqlDbType.Binary\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Array> of type <xref:System.Byte>. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.\n  syntax:\n    content: Binary\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Bit\n  id: Bit\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Bit\n  nameWithType: SqlDbType.Bit\n  fullName: System.Data.SqlDbType.Bit\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Boolean>. An unsigned numeric value that can be 0, 1, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  syntax:\n    content: Bit\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Char\n  id: Char\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Char\n  nameWithType: SqlDbType.Char\n  fullName: System.Data.SqlDbType.Char\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.\n  syntax:\n    content: Char\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Date\n  id: Date\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Date\n  nameWithType: SqlDbType.Date\n  fullName: System.Data.SqlDbType.Date\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Date data ranging in value from January 1,1 AD through December 31, 9999 AD.\n  syntax:\n    content: Date\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.DateTime\n  id: DateTime\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: DateTime\n  nameWithType: SqlDbType.DateTime\n  fullName: System.Data.SqlDbType.DateTime\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.DateTime>. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.\n  syntax:\n    content: DateTime\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.DateTime2\n  id: DateTime2\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: DateTime2\n  nameWithType: SqlDbType.DateTime2\n  fullName: System.Data.SqlDbType.DateTime2\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.\n  syntax:\n    content: DateTime2\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.DateTimeOffset\n  id: DateTimeOffset\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: DateTimeOffset\n  nameWithType: SqlDbType.DateTimeOffset\n  fullName: System.Data.SqlDbType.DateTimeOffset\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.\n  syntax:\n    content: DateTimeOffset\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Decimal\n  id: Decimal\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Decimal\n  nameWithType: SqlDbType.Decimal\n  fullName: System.Data.SqlDbType.Decimal\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Decimal>. A fixed precision and scale numeric value between -10 <sup>38</sup> -1 and 10 <sup>38</sup> -1.\n  syntax:\n    content: Decimal\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Float\n  id: Float\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Float\n  nameWithType: SqlDbType.Float\n  fullName: System.Data.SqlDbType.Float\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Double>. A floating point number within the range of -1.79E +308 through 1.79E +308.\n  syntax:\n    content: Float\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Image\n  id: Image\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Image\n  nameWithType: SqlDbType.Image\n  fullName: System.Data.SqlDbType.Image\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Array> of type <xref:System.Byte>. A variable-length stream of binary data ranging from 0 to 2 <sup>31</sup> -1 (or 2,147,483,647) bytes.\n  syntax:\n    content: Image\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Int\n  id: Int\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Int\n  nameWithType: SqlDbType.Int\n  fullName: System.Data.SqlDbType.Int\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Int32>. A 32-bit signed integer.\n  syntax:\n    content: Int\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Money\n  id: Money\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Money\n  nameWithType: SqlDbType.Money\n  fullName: System.Data.SqlDbType.Money\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Decimal>. A currency value ranging from -2 <sup>63</sup> (or -9,223,372,036,854,775,808) to 2 <sup>63</sup> -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.\n  syntax:\n    content: Money\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.NChar\n  id: NChar\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: NChar\n  nameWithType: SqlDbType.NChar\n  fullName: System.Data.SqlDbType.NChar\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.\n  syntax:\n    content: NChar\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.NText\n  id: NText\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: NText\n  nameWithType: SqlDbType.NText\n  fullName: System.Data.SqlDbType.NText\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A variable-length stream of Unicode data with a maximum length of 2 <sup>30</sup> - 1 (or 1,073,741,823) characters.\n  syntax:\n    content: NText\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.NVarChar\n  id: NVarChar\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: NVarChar\n  nameWithType: SqlDbType.NVarChar\n  fullName: System.Data.SqlDbType.NVarChar\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use NVarChar when the database column is <xref uid=\"langword_csharp_nvarchar(max)\" name=\"nvarchar(max)\" href=\"\"></xref>.\n  syntax:\n    content: NVarChar\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Real\n  id: Real\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Real\n  nameWithType: SqlDbType.Real\n  fullName: System.Data.SqlDbType.Real\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Single>. A floating point number within the range of -3.40E +38 through 3.40E +38.\n  syntax:\n    content: Real\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.SmallDateTime\n  id: SmallDateTime\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: SmallDateTime\n  nameWithType: SqlDbType.SmallDateTime\n  fullName: System.Data.SqlDbType.SmallDateTime\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.DateTime>. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.\n  syntax:\n    content: SmallDateTime\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.SmallInt\n  id: SmallInt\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: SmallInt\n  nameWithType: SqlDbType.SmallInt\n  fullName: System.Data.SqlDbType.SmallInt\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Int16>. A 16-bit signed integer.\n  syntax:\n    content: SmallInt\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.SmallMoney\n  id: SmallMoney\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: SmallMoney\n  nameWithType: SqlDbType.SmallMoney\n  fullName: System.Data.SqlDbType.SmallMoney\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Decimal>. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.\n  syntax:\n    content: SmallMoney\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Structured\n  id: Structured\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Structured\n  nameWithType: SqlDbType.Structured\n  fullName: System.Data.SqlDbType.Structured\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: A special data type for specifying structured data contained in table-valued parameters.\n  syntax:\n    content: Structured\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Text\n  id: Text\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Text\n  nameWithType: SqlDbType.Text\n  fullName: System.Data.SqlDbType.Text\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A variable-length stream of non-Unicode data with a maximum length of 2 <sup>31</sup> -1 (or 2,147,483,647) characters.\n  syntax:\n    content: Text\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Time\n  id: Time\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Time\n  nameWithType: SqlDbType.Time\n  fullName: System.Data.SqlDbType.Time\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server <xref uid=\"langword_csharp_time\" name=\"time\" href=\"\"></xref> value.\n  syntax:\n    content: Time\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Timestamp\n  id: Timestamp\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Timestamp\n  nameWithType: SqlDbType.Timestamp\n  fullName: System.Data.SqlDbType.Timestamp\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Array> of type <xref:System.Byte>. Automatically generated binary numbers, which are guaranteed to be unique within a database. <xref uid=\"langword_csharp_timestamp\" name=\"timestamp\" href=\"\"></xref> is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.\n  syntax:\n    content: Timestamp\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.TinyInt\n  id: TinyInt\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: TinyInt\n  nameWithType: SqlDbType.TinyInt\n  fullName: System.Data.SqlDbType.TinyInt\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Byte>. An 8-bit unsigned integer.\n  syntax:\n    content: TinyInt\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Udt\n  id: Udt\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Udt\n  nameWithType: SqlDbType.Udt\n  fullName: System.Data.SqlDbType.Udt\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: A [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] user-defined type (UDT).\n  syntax:\n    content: Udt\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.UniqueIdentifier\n  id: UniqueIdentifier\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: UniqueIdentifier\n  nameWithType: SqlDbType.UniqueIdentifier\n  fullName: System.Data.SqlDbType.UniqueIdentifier\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Guid>. A globally unique identifier (or GUID).\n  syntax:\n    content: UniqueIdentifier\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.VarBinary\n  id: VarBinary\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: VarBinary\n  nameWithType: SqlDbType.VarBinary\n  fullName: System.Data.SqlDbType.VarBinary\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Array> of type <xref:System.Byte>. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.\n  syntax:\n    content: VarBinary\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.VarChar\n  id: VarChar\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: VarChar\n  nameWithType: SqlDbType.VarChar\n  fullName: System.Data.SqlDbType.VarChar\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.String>. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use VarChar when the database column is <xref uid=\"langword_csharp_varchar(max)\" name=\"varchar(max)\" href=\"\"></xref>.\n  syntax:\n    content: VarChar\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Variant\n  id: Variant\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Variant\n  nameWithType: SqlDbType.Variant\n  fullName: System.Data.SqlDbType.Variant\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: <xref:System.Object>. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.\n  syntax:\n    content: Variant\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlDbType.Xml\n  id: Xml\n  parent: System.Data.SqlDbType\n  langs:\n  - csharp\n  name: Xml\n  nameWithType: SqlDbType.Xml\n  fullName: System.Data.SqlDbType.Xml\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: An XML value. Obtain the XML as a string using the <xref:System.Data.SqlClient.SqlDataReader.GetValue*> method or <xref:System.Data.SqlTypes.SqlXml.Value*> property, or as an <xref:System.Xml.XmlReader> by calling the <xref:System.Data.SqlTypes.SqlXml.CreateReader*> method.\n  syntax:\n    content: Xml\n    return:\n      type: System.Data.SqlDbType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Data.SqlDbType.BigInt\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: BigInt\n  nameWithType: SqlDbType.BigInt\n  fullName: System.Data.SqlDbType.BigInt\n- uid: System.Data.SqlDbType\n  parent: System.Data\n  isExternal: false\n  name: SqlDbType\n  nameWithType: SqlDbType\n  fullName: System.Data.SqlDbType\n- uid: System.Data.SqlDbType.Binary\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Binary\n  nameWithType: SqlDbType.Binary\n  fullName: System.Data.SqlDbType.Binary\n- uid: System.Data.SqlDbType.Bit\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Bit\n  nameWithType: SqlDbType.Bit\n  fullName: System.Data.SqlDbType.Bit\n- uid: System.Data.SqlDbType.Char\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Char\n  nameWithType: SqlDbType.Char\n  fullName: System.Data.SqlDbType.Char\n- uid: System.Data.SqlDbType.Date\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Date\n  nameWithType: SqlDbType.Date\n  fullName: System.Data.SqlDbType.Date\n- uid: System.Data.SqlDbType.DateTime\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: DateTime\n  nameWithType: SqlDbType.DateTime\n  fullName: System.Data.SqlDbType.DateTime\n- uid: System.Data.SqlDbType.DateTime2\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: DateTime2\n  nameWithType: SqlDbType.DateTime2\n  fullName: System.Data.SqlDbType.DateTime2\n- uid: System.Data.SqlDbType.DateTimeOffset\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: SqlDbType.DateTimeOffset\n  fullName: System.Data.SqlDbType.DateTimeOffset\n- uid: System.Data.SqlDbType.Decimal\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Decimal\n  nameWithType: SqlDbType.Decimal\n  fullName: System.Data.SqlDbType.Decimal\n- uid: System.Data.SqlDbType.Float\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Float\n  nameWithType: SqlDbType.Float\n  fullName: System.Data.SqlDbType.Float\n- uid: System.Data.SqlDbType.Image\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Image\n  nameWithType: SqlDbType.Image\n  fullName: System.Data.SqlDbType.Image\n- uid: System.Data.SqlDbType.Int\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Int\n  nameWithType: SqlDbType.Int\n  fullName: System.Data.SqlDbType.Int\n- uid: System.Data.SqlDbType.Money\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Money\n  nameWithType: SqlDbType.Money\n  fullName: System.Data.SqlDbType.Money\n- uid: System.Data.SqlDbType.NChar\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: NChar\n  nameWithType: SqlDbType.NChar\n  fullName: System.Data.SqlDbType.NChar\n- uid: System.Data.SqlDbType.NText\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: NText\n  nameWithType: SqlDbType.NText\n  fullName: System.Data.SqlDbType.NText\n- uid: System.Data.SqlDbType.NVarChar\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: NVarChar\n  nameWithType: SqlDbType.NVarChar\n  fullName: System.Data.SqlDbType.NVarChar\n- uid: System.Data.SqlDbType.Real\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Real\n  nameWithType: SqlDbType.Real\n  fullName: System.Data.SqlDbType.Real\n- uid: System.Data.SqlDbType.SmallDateTime\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: SmallDateTime\n  nameWithType: SqlDbType.SmallDateTime\n  fullName: System.Data.SqlDbType.SmallDateTime\n- uid: System.Data.SqlDbType.SmallInt\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: SmallInt\n  nameWithType: SqlDbType.SmallInt\n  fullName: System.Data.SqlDbType.SmallInt\n- uid: System.Data.SqlDbType.SmallMoney\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: SmallMoney\n  nameWithType: SqlDbType.SmallMoney\n  fullName: System.Data.SqlDbType.SmallMoney\n- uid: System.Data.SqlDbType.Structured\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Structured\n  nameWithType: SqlDbType.Structured\n  fullName: System.Data.SqlDbType.Structured\n- uid: System.Data.SqlDbType.Text\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Text\n  nameWithType: SqlDbType.Text\n  fullName: System.Data.SqlDbType.Text\n- uid: System.Data.SqlDbType.Time\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Time\n  nameWithType: SqlDbType.Time\n  fullName: System.Data.SqlDbType.Time\n- uid: System.Data.SqlDbType.Timestamp\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Timestamp\n  nameWithType: SqlDbType.Timestamp\n  fullName: System.Data.SqlDbType.Timestamp\n- uid: System.Data.SqlDbType.TinyInt\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: TinyInt\n  nameWithType: SqlDbType.TinyInt\n  fullName: System.Data.SqlDbType.TinyInt\n- uid: System.Data.SqlDbType.Udt\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Udt\n  nameWithType: SqlDbType.Udt\n  fullName: System.Data.SqlDbType.Udt\n- uid: System.Data.SqlDbType.UniqueIdentifier\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: UniqueIdentifier\n  nameWithType: SqlDbType.UniqueIdentifier\n  fullName: System.Data.SqlDbType.UniqueIdentifier\n- uid: System.Data.SqlDbType.VarBinary\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: VarBinary\n  nameWithType: SqlDbType.VarBinary\n  fullName: System.Data.SqlDbType.VarBinary\n- uid: System.Data.SqlDbType.VarChar\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: VarChar\n  nameWithType: SqlDbType.VarChar\n  fullName: System.Data.SqlDbType.VarChar\n- uid: System.Data.SqlDbType.Variant\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Variant\n  nameWithType: SqlDbType.Variant\n  fullName: System.Data.SqlDbType.Variant\n- uid: System.Data.SqlDbType.Xml\n  parent: System.Data.SqlDbType\n  isExternal: false\n  name: Xml\n  nameWithType: SqlDbType.Xml\n  fullName: System.Data.SqlDbType.Xml\n"}