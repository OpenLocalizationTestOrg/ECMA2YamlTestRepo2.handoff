{"nodes":[{"pos":[417,486],"content":"Defines those health-monitoring events raised at a periodic interval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines those health-monitoring events raised at a periodic interval.","pos":[0,69]}]},{"pos":[499,1558],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       The heartbeat health-monitoring events serve as a timer for the ASP.NET health-monitoring system. They are raised at an interval defined by the `heartBeatInterval` attribute of the `healthMonitoring` configuration section. The WebHeartbeatEvent uses the <xref:System.Web.Management.WebProcessStatistics> class to obtain process information.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The &lt;xref:System.Web.Management&gt; namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]},{"content":"The heartbeat health-monitoring events serve as a timer for the ASP.NET health-monitoring system.","pos":[385,482]},{"content":"They are raised at an interval defined by the <ph id=\"ph1\">`heartBeatInterval`</ph> attribute of the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[483,607],"source":" They are raised at an interval defined by the `heartBeatInterval` attribute of the `healthMonitoring` configuration section."},{"content":"The WebHeartbeatEvent uses the &lt;xref:System.Web.Management.WebProcessStatistics&gt; class to obtain process information.","pos":[608,725],"source":" The WebHeartbeatEvent uses the <xref:System.Web.Management.WebProcessStatistics> class to obtain process information."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[731,953],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[954,1054]}]},{"pos":[4127,4266],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebHeartbeatEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the given message and event code.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebHeartbeatEvent\"></xref> class with the given message and event code."},{"pos":[4430,4459],"content":"The description of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the event.","pos":[0,29]}]},{"pos":[4524,4704],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[5203,5254],"content":"Provides key information about the running process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides key information about the running process.","pos":[0,51]}]},{"pos":[5441,5533],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebProcessStatistics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the running process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebProcessStatistics\"></xref> for the running process."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebHeartbeatEvent\n  id: WebHeartbeatEvent\n  children:\n  - System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)\n  - System.Web.Management.WebHeartbeatEvent.ProcessStatistics\n  langs:\n  - csharp\n  name: WebHeartbeatEvent\n  nameWithType: WebHeartbeatEvent\n  fullName: System.Web.Management.WebHeartbeatEvent\n  type: Class\n  summary: Defines those health-monitoring events raised at a periodic interval.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n The heartbeat health-monitoring events serve as a timer for the ASP.NET health-monitoring system. They are raised at an interval defined by the `heartBeatInterval` attribute of the `healthMonitoring` configuration section. The WebHeartbeatEvent uses the <xref:System.Web.Management.WebProcessStatistics> class to obtain process information.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers.\"\n  example:\n  - \"The following configuration file excerpt shows the configuration for the <xref:System.Web.Management.EventLogWebEventProvider> so it can handle heartbeat health events.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.Management.EventLogWebEventProvider> and the heartbeat health event types to monitor are configured by default. The only thing you need to do is to define the rule to monitor the heartbeat health events. Remember that by default only the failure audits are logged.  \\n  \\n```  \\n<healthMonitoring   \\n  enabled=\\\"true\\\" heartbeatInterval=\\\"100\\\">  \\n  <rules>  \\n    <add name=\\\"Heart Beat Events\\\"  \\n      eventName=\\\"Heartbeats\\\"  \\n      provider=\\\"EventLogProvider\\\"  \\n      profile=\\\"Default\\\"  \\n      minInterval=\\\"00:01:00\\\" />  \\n  </rules>  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public class WebHeartbeatEvent : System.Web.Management.WebManagementEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  implements: []\n  inheritedMembers:\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.IncrementPerfCounters\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  platform:\n  - net462\n- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Web.Management.WebHeartbeatEvent\n  langs:\n  - csharp\n  name: WebHeartbeatEvent(String,Int32)\n  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)\n  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebHeartbeatEvent\"></xref> class with the given message and event code.\n  syntax:\n    content: protected WebHeartbeatEvent (string message, int eventCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The description of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n  overload: System.Web.Management.WebHeartbeatEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics\n  id: ProcessStatistics\n  parent: System.Web.Management.WebHeartbeatEvent\n  langs:\n  - csharp\n  name: ProcessStatistics\n  nameWithType: WebHeartbeatEvent.ProcessStatistics\n  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Provides key information about the running process.\n  syntax:\n    content: public System.Web.Management.WebProcessStatistics ProcessStatistics { get; }\n    return:\n      type: System.Web.Management.WebProcessStatistics\n      description: The <xref href=\"System.Web.Management.WebProcessStatistics\"></xref> for the running process.\n  overload: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.WebManagementEvent\n  isExternal: false\n  name: System.Web.Management.WebManagementEvent\n- uid: System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)\n  parent: System.Web.Management.WebHeartbeatEvent\n  isExternal: false\n  name: WebHeartbeatEvent(String,Int32)\n  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)\n  fullName: System.Web.Management.WebHeartbeatEvent.WebHeartbeatEvent(String,Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics\n  parent: System.Web.Management.WebHeartbeatEvent\n  isExternal: false\n  name: ProcessStatistics\n  nameWithType: WebHeartbeatEvent.ProcessStatistics\n  fullName: System.Web.Management.WebHeartbeatEvent.ProcessStatistics\n- uid: System.Web.Management.WebProcessStatistics\n  parent: System.Web.Management\n  isExternal: false\n  name: WebProcessStatistics\n  nameWithType: WebProcessStatistics\n  fullName: System.Web.Management.WebProcessStatistics\n- uid: System.Web.Management.WebHeartbeatEvent.#ctor*\n  parent: System.Web.Management.WebHeartbeatEvent\n  isExternal: false\n  name: WebHeartbeatEvent\n  nameWithType: WebHeartbeatEvent.WebHeartbeatEvent\n- uid: System.Web.Management.WebHeartbeatEvent.ProcessStatistics*\n  parent: System.Web.Management.WebHeartbeatEvent\n  isExternal: false\n  name: ProcessStatistics\n  nameWithType: WebHeartbeatEvent.ProcessStatistics\n"}