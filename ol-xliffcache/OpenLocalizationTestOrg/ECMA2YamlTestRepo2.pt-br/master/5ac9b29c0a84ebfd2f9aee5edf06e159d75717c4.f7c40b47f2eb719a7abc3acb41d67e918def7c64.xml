{"nodes":[{"pos":[1147,1207],"content":"Specifies information about a workflow application instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies information about a workflow application instance.","pos":[0,60]}]},{"pos":[1220,2892],"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.       [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].       [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.       [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.       [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint.       [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.       [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.","pos":[0,99]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> workflow versioning, workflow identity, and dynamic update, see the following topics.","pos":[100,244],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics."},{"content":"<bpt id=\"p1\">[</bpt>Workflow Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=271561)</ept>    Describes the workflow versioning functionality introduced in <ph id=\"ph1\">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[251,444],"source":"[Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]."},{"content":"<bpt id=\"p1\">[</bpt>Dynamic Update<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271563)</ept>    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.","pos":[451,623],"source":"[Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update."},{"content":"<bpt id=\"p1\">[</bpt>Using WorkflowApplication Identity and Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271564)</ept>    Describes how to use &lt;xref:System.Activities.WorkflowIdentity&gt; to host multiple versions of a workflow side-by-side.","pos":[630,848],"source":"[Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side."},{"content":"<bpt id=\"p1\">[</bpt>Side by Side Versioning in WorkflowServiceHost<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271565)</ept>    Describes how to host multiple versions of a workflow on a single endpoint.","pos":[855,1029],"source":"[Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint."},{"content":"<bpt id=\"p1\">[</bpt>How to: Host Multiple Versions of a Workflow Side-by-Side<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271566)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.","pos":[1036,1359],"source":"[How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time."},{"content":"<bpt id=\"p1\">[</bpt>How to: Update the Definition of a Running Workflow Instance<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271567)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating persisted workflow instances to use a new workflow definition.","pos":[1366,1654],"source":"[How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."}]},{"pos":[3438,3500],"content":"Causes the state machine to transition to the abandoned state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the state machine to transition to the abandoned state.","pos":[0,62]}]},{"pos":[4116,4211],"content":"Causes the state machine to transition to the abandoned state with the specified timeout value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the state machine to transition to the abandoned state with the specified timeout value.","pos":[0,95]}]},{"pos":[4356,4403],"content":"The timeout for the abandon operation complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The timeout for the abandon operation complete.","pos":[0,47]}]},{"pos":[5052,5093],"content":"Begins an asynchronous abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous abandon operation.","pos":[0,41]}]},{"pos":[5277,5384],"content":"The asynchronous callback delegate that receives the notification of the asynchronous operation completion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate that receives the notification of the asynchronous operation completion.","pos":[0,107]}]},{"pos":[5446,5474],"content":"The user-defined state data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined state data.","pos":[0,28]}]},{"pos":[5538,5572],"content":"An asynchronous abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous abandon operation.","pos":[0,34]}]},{"pos":[6285,6326],"content":"Begins an asynchronous abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous abandon operation.","pos":[0,41]}]},{"pos":[6522,6585],"content":"The timeout that contains the reason for the abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The timeout that contains the reason for the abandon operation.","pos":[0,63]}]},{"pos":[6657,6764],"content":"The asynchronous callback delegate that receives the notification of the asynchronous operation completion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate that receives the notification of the asynchronous operation completion.","pos":[0,107]}]},{"pos":[6826,6854],"content":"The user-defined state data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined state data.","pos":[0,28]}]},{"pos":[6918,6952],"content":"An asynchronous abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous abandon operation.","pos":[0,34]}]},{"pos":[7902,7990],"content":"Returns a value that indicates whether the WorkflowApplicationInstance can apply update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the WorkflowApplicationInstance can apply update.","pos":[0,88]}]},{"pos":[8338,8352],"content":"Updates a map.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates a map.","pos":[0,14]}]},{"pos":[8508,8539],"content":"The activities blocking update.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activities blocking update.","pos":[0,31]}]},{"pos":[8598,8786],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the WorkflowApplicationInstance can apply update; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the WorkflowApplicationInstance can apply update; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9336,9389],"content":"Gets or sets the definition identity of the workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the definition identity of the workflow.","pos":[0,53]}]},{"pos":[9561,9601],"content":"The definition identity of the workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The definition identity of the workflow.","pos":[0,40]}]},{"pos":[10197,10241],"content":"Completes an asynchronous abandon operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous abandon operation.","pos":[0,44]}]},{"pos":[10405,10476],"content":"The IAsyncResult returned by a call to one of the BeginAbandon methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IAsyncResult returned by a call to one of the BeginAbandon methods.","pos":[0,71]}]},{"pos":[10982,11034],"content":"Gets the unique identifier of the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier of the workflow instance.","pos":[0,52]}]},{"pos":[11145,11192],"content":"The unique identifier of the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier of the workflow instance.","pos":[0,47]}]},{"pos":[11713,11832],"content":"Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.","pos":[0,119]}]},{"pos":[12023,12129],"content":"An object that provides access to the persisted state of the current instance of the workflow application.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides access to the persisted state of the current instance of the workflow application.","pos":[0,106]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.WorkflowApplicationInstance\n  id: WorkflowApplicationInstance\n  children:\n  - System.Activities.WorkflowApplicationInstance.Abandon\n  - System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)\n  - System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)\n  - System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)\n  - System.Activities.WorkflowApplicationInstance.DefinitionIdentity\n  - System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)\n  - System.Activities.WorkflowApplicationInstance.InstanceId\n  - System.Activities.WorkflowApplicationInstance.InstanceStore\n  langs:\n  - csharp\n  name: WorkflowApplicationInstance\n  nameWithType: WorkflowApplicationInstance\n  fullName: System.Activities.WorkflowApplicationInstance\n  type: Class\n  summary: Specifies information about a workflow application instance.\n  remarks: \"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.  \\n  \\n [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \\n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \\n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.  \\n  \\n [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \\n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.  \\n  \\n [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \\n Describes how to host multiple versions of a workflow on a single endpoint.  \\n  \\n [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.  \\n  \\n [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.\"\n  syntax:\n    content: public class WorkflowApplicationInstance\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.Abandon\n  id: Abandon\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: Abandon()\n  nameWithType: WorkflowApplicationInstance.Abandon()\n  fullName: System.Activities.WorkflowApplicationInstance.Abandon()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Causes the state machine to transition to the abandoned state.\n  syntax:\n    content: public void Abandon ();\n    parameters: []\n  overload: System.Activities.WorkflowApplicationInstance.Abandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)\n  id: Abandon(System.TimeSpan)\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: Abandon(TimeSpan)\n  nameWithType: WorkflowApplicationInstance.Abandon(TimeSpan)\n  fullName: System.Activities.WorkflowApplicationInstance.Abandon(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Causes the state machine to transition to the abandoned state with the specified timeout value.\n  syntax:\n    content: public void Abandon (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The timeout for the abandon operation complete.\n  overload: System.Activities.WorkflowApplicationInstance.Abandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)\n  id: BeginAbandon(System.AsyncCallback,System.Object)\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: BeginAbandon(AsyncCallback,Object)\n  nameWithType: WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)\n  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Begins an asynchronous abandon operation.\n  syntax:\n    content: public IAsyncResult BeginAbandon (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate that receives the notification of the asynchronous operation completion.\n    - id: state\n      type: System.Object\n      description: The user-defined state data.\n    return:\n      type: System.IAsyncResult\n      description: An asynchronous abandon operation.\n  overload: System.Activities.WorkflowApplicationInstance.BeginAbandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: BeginAbandon(TimeSpan,AsyncCallback,Object)\n  nameWithType: WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)\n  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Begins an asynchronous abandon operation.\n  syntax:\n    content: public IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The timeout that contains the reason for the abandon operation.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate that receives the notification of the asynchronous operation completion.\n    - id: state\n      type: System.Object\n      description: The user-defined state data.\n    return:\n      type: System.IAsyncResult\n      description: An asynchronous abandon operation.\n  overload: System.Activities.WorkflowApplicationInstance.BeginAbandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)\n  id: CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n  nameWithType: WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n  fullName: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the WorkflowApplicationInstance can apply update.\n  syntax:\n    content: public bool CanApplyUpdate (System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, out System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> activitiesBlockingUpdate);\n    parameters:\n    - id: updateMap\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: Updates a map.\n    - id: activitiesBlockingUpdate\n      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}\n      description: The activities blocking update.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the WorkflowApplicationInstance can apply update; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.WorkflowApplicationInstance.CanApplyUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity\n  id: DefinitionIdentity\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: DefinitionIdentity\n  nameWithType: WorkflowApplicationInstance.DefinitionIdentity\n  fullName: System.Activities.WorkflowApplicationInstance.DefinitionIdentity\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the definition identity of the workflow.\n  syntax:\n    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }\n    return:\n      type: System.Activities.WorkflowIdentity\n      description: The definition identity of the workflow.\n  overload: System.Activities.WorkflowApplicationInstance.DefinitionIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)\n  id: EndAbandon(System.IAsyncResult)\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: EndAbandon(IAsyncResult)\n  nameWithType: WorkflowApplicationInstance.EndAbandon(IAsyncResult)\n  fullName: System.Activities.WorkflowApplicationInstance.EndAbandon(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Completes an asynchronous abandon operation.\n  syntax:\n    content: public void EndAbandon (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The IAsyncResult returned by a call to one of the BeginAbandon methods.\n  overload: System.Activities.WorkflowApplicationInstance.EndAbandon*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.InstanceId\n  id: InstanceId\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: InstanceId\n  nameWithType: WorkflowApplicationInstance.InstanceId\n  fullName: System.Activities.WorkflowApplicationInstance.InstanceId\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the unique identifier of the workflow instance.\n  syntax:\n    content: public Guid InstanceId { get; }\n    return:\n      type: System.Guid\n      description: The unique identifier of the workflow instance.\n  overload: System.Activities.WorkflowApplicationInstance.InstanceId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationInstance.InstanceStore\n  id: InstanceStore\n  parent: System.Activities.WorkflowApplicationInstance\n  langs:\n  - csharp\n  name: InstanceStore\n  nameWithType: WorkflowApplicationInstance.InstanceStore\n  fullName: System.Activities.WorkflowApplicationInstance.InstanceStore\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceStore\n      description: An object that provides access to the persisted state of the current instance of the workflow application.\n  overload: System.Activities.WorkflowApplicationInstance.InstanceStore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.WorkflowApplicationInstance.Abandon\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: Abandon()\n  nameWithType: WorkflowApplicationInstance.Abandon()\n  fullName: System.Activities.WorkflowApplicationInstance.Abandon()\n- uid: System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: Abandon(TimeSpan)\n  nameWithType: WorkflowApplicationInstance.Abandon(TimeSpan)\n  fullName: System.Activities.WorkflowApplicationInstance.Abandon(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: BeginAbandon(AsyncCallback,Object)\n  nameWithType: WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)\n  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: BeginAbandon(TimeSpan,AsyncCallback,Object)\n  nameWithType: WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)\n  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)\n- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n  nameWithType: WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n  fullName: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: DynamicUpdateMap\n  nameWithType: DynamicUpdateMap\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap\n- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<ActivityBlockingUpdate>\n  nameWithType: IList<ActivityBlockingUpdate>\n  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate\n    name: ActivityBlockingUpdate\n    nameWithType: ActivityBlockingUpdate\n    fullName: ActivityBlockingUpdate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: DefinitionIdentity\n  nameWithType: WorkflowApplicationInstance.DefinitionIdentity\n  fullName: System.Activities.WorkflowApplicationInstance.DefinitionIdentity\n- uid: System.Activities.WorkflowIdentity\n  parent: System.Activities\n  isExternal: false\n  name: WorkflowIdentity\n  nameWithType: WorkflowIdentity\n  fullName: System.Activities.WorkflowIdentity\n- uid: System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: EndAbandon(IAsyncResult)\n  nameWithType: WorkflowApplicationInstance.EndAbandon(IAsyncResult)\n  fullName: System.Activities.WorkflowApplicationInstance.EndAbandon(IAsyncResult)\n- uid: System.Activities.WorkflowApplicationInstance.InstanceId\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: InstanceId\n  nameWithType: WorkflowApplicationInstance.InstanceId\n  fullName: System.Activities.WorkflowApplicationInstance.InstanceId\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Activities.WorkflowApplicationInstance.InstanceStore\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: InstanceStore\n  nameWithType: WorkflowApplicationInstance.InstanceStore\n  fullName: System.Activities.WorkflowApplicationInstance.InstanceStore\n- uid: System.Runtime.DurableInstancing.InstanceStore\n  parent: System.Runtime.DurableInstancing\n  isExternal: false\n  name: InstanceStore\n  nameWithType: InstanceStore\n  fullName: System.Runtime.DurableInstancing.InstanceStore\n- uid: System.Activities.WorkflowApplicationInstance.Abandon*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: Abandon\n  nameWithType: WorkflowApplicationInstance.Abandon\n- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: BeginAbandon\n  nameWithType: WorkflowApplicationInstance.BeginAbandon\n- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: CanApplyUpdate\n  nameWithType: WorkflowApplicationInstance.CanApplyUpdate\n- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: DefinitionIdentity\n  nameWithType: WorkflowApplicationInstance.DefinitionIdentity\n- uid: System.Activities.WorkflowApplicationInstance.EndAbandon*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: EndAbandon\n  nameWithType: WorkflowApplicationInstance.EndAbandon\n- uid: System.Activities.WorkflowApplicationInstance.InstanceId*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: InstanceId\n  nameWithType: WorkflowApplicationInstance.InstanceId\n- uid: System.Activities.WorkflowApplicationInstance.InstanceStore*\n  parent: System.Activities.WorkflowApplicationInstance\n  isExternal: false\n  name: InstanceStore\n  nameWithType: WorkflowApplicationInstance.InstanceStore\n"}