{"nodes":[{"pos":[1568,1580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4351,4363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5043,5055],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5827,5839],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5892,5904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6810,6822],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6884,6896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6960,6972],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7954,7966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8038,8050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8112,8124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8188,8200],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9021,9033],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9086,9098],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9897,9909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9962,9974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10977,10989],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11061,11073],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11135,11147],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11211,11223],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12070,12082],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12135,12147],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1\n  id: ChannelListenerBase`1\n  children:\n  - System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  - System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  - System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  langs:\n  - csharp\n  name: ChannelListenerBase<TChannel>\n  nameWithType: ChannelListenerBase<TChannel>\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>\n  type: Class\n  syntax:\n    content: 'public abstract class ChannelListenerBase<TChannel> : System.ServiceModel.Channels.ChannelListenerBase, System.ServiceModel.Channels.IChannelListener<TChannel> where TChannel : class, IChannel'\n    typeParameters:\n    - id: TChannel\n      description: To be added.\n  inheritance:\n  - System.ServiceModel.Channels.ChannelManagerBase\n  - System.ServiceModel.Channels.ChannelListenerBase\n  implements:\n  - System.ServiceModel.Channels.IChannelListener<TChannel>\n  inheritedMembers:\n  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase.Uri\n  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.ChannelListenerBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: protected ChannelListenerBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  id: AcceptChannel\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: AcceptChannel()\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.AcceptChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel AcceptChannel ();\n    parameters: []\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  id: AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: AcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel AcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  id: EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel EndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  id: OnAcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnAcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: protected abstract TChannel OnAcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: protected abstract IAsyncResult OnBeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  id: OnEndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnEndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: protected abstract TChannel OnEndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: System.ServiceModel.Channels.ChannelListenerBase\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.ChannelListenerBase()\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.ChannelListenerBase(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: true\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel()\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.AcceptChannel()\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel(AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnAcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnEndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase<TChannel>\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: EndAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnBeginAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnEndAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel\n"}