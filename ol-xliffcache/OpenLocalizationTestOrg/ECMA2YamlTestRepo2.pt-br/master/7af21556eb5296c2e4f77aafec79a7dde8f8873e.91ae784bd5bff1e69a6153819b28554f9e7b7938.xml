{"nodes":[{"pos":[407,470],"content":"Represents a declaration for an instance constructor of a type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a declaration for an instance constructor of a type.","pos":[0,63]}]},{"pos":[483,1080],"content":"CodeConstructor can be used to represent a declaration of an instance constructor for a type. Use <xref:System.CodeDom.CodeTypeConstructor> to declare a static constructor for a type.       If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the <xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A> property. If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the <xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeConstructor can be used to represent a declaration of an instance constructor for a type. Use <xref:System.CodeDom.CodeTypeConstructor> to declare a static constructor for a type.       If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the <xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A> property. If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the <xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A> property.","pos":[0,595],"nodes":[{"content":"CodeConstructor can be used to represent a declaration of an instance constructor for a type.","pos":[0,93]},{"content":"Use &lt;xref:System.CodeDom.CodeTypeConstructor&gt; to declare a static constructor for a type.","pos":[94,183],"source":" Use <xref:System.CodeDom.CodeTypeConstructor> to declare a static constructor for a type."},{"content":"If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the &lt;xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A&gt; property.","pos":[190,379],"source":"       If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the <xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A> property."},{"content":"If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the &lt;xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A&gt; property.","pos":[380,595],"source":" If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the <xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A> property."}]}]},{"pos":[3203,3295],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeConstructor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeConstructor\"></xref> class."},{"pos":[3824,3874],"content":"Gets the collection of base constructor arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of base constructor arguments.","pos":[0,50]}]},{"pos":[3886,4198],"content":"When the <xref:System.CodeDom.CodeConstructor> overloads a base class constructor, this collection contains any arguments to pass to a base class constructor. To call a base class constructor with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the <xref:System.CodeDom.CodeConstructor> overloads a base class constructor, this collection contains any arguments to pass to a base class constructor. To call a base class constructor with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.","pos":[0,312],"nodes":[{"content":"When the &lt;xref:System.CodeDom.CodeConstructor&gt; overloads a base class constructor, this collection contains any arguments to pass to a base class constructor.","pos":[0,158],"source":"When the <xref:System.CodeDom.CodeConstructor> overloads a base class constructor, this collection contains any arguments to pass to a base class constructor."},{"content":"To call a base class constructor with no arguments, set a &lt;xref:System.CodeDom.CodeSnippetExpression&gt; containing an empty string (\"\") to this collection.","pos":[159,312],"source":" To call a base class constructor with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection."}]}]},{"pos":[4381,4489],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpressionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the base constructor arguments.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpressionCollection\"></xref> that contains the base constructor arguments."},{"pos":[4978,5031],"content":"Gets the collection of chained constructor arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of chained constructor arguments.","pos":[0,53]}]},{"pos":[5043,5384],"content":"When the <xref:System.CodeDom.CodeConstructor> overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor. To call a constructor for the current type with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the <xref:System.CodeDom.CodeConstructor> overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor. To call a constructor for the current type with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.","pos":[0,341],"nodes":[{"content":"When the &lt;xref:System.CodeDom.CodeConstructor&gt; overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor.","pos":[0,177],"source":"When the <xref:System.CodeDom.CodeConstructor> overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor."},{"content":"To call a constructor for the current type with no arguments, set a &lt;xref:System.CodeDom.CodeSnippetExpression&gt; containing an empty string (\"\") to this collection.","pos":[178,341],"source":" To call a constructor for the current type with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection."}]}]},{"pos":[5570,5681],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpressionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the chained constructor arguments.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpressionCollection\"></xref> that contains the chained constructor arguments."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeConstructor\n  id: CodeConstructor\n  children:\n  - System.CodeDom.CodeConstructor.#ctor\n  - System.CodeDom.CodeConstructor.BaseConstructorArgs\n  - System.CodeDom.CodeConstructor.ChainedConstructorArgs\n  langs:\n  - csharp\n  name: CodeConstructor\n  nameWithType: CodeConstructor\n  fullName: System.CodeDom.CodeConstructor\n  type: Class\n  summary: Represents a declaration for an instance constructor of a type.\n  remarks: \"CodeConstructor can be used to represent a declaration of an instance constructor for a type. Use <xref:System.CodeDom.CodeTypeConstructor> to declare a static constructor for a type.  \\n  \\n If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the <xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A> property. If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the <xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A> property.\"\n  example:\n  - \"This example demonstrates using a CodeConstructor to declare several types of constructors.  \\n  \\n [!code-cs[CodeConstructorExample#2](~/add/codesnippet/csharp/t-system.codedom.codecon_0_1.cs)]\\n [!code-cpp[CodeConstructorExample#2](~/add/codesnippet/cpp/t-system.codedom.codecon_0_1.cpp)]\\n [!code-vb[CodeConstructorExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecon_0_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeConstructor : System.CodeDom.CodeMemberMethod\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeTypeMember\n  - System.CodeDom.CodeMemberMethod\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeMemberMethod.ImplementationTypes\n  - System.CodeDom.CodeMemberMethod.Parameters\n  - System.CodeDom.CodeMemberMethod.PopulateImplementationTypes\n  - System.CodeDom.CodeMemberMethod.PopulateParameters\n  - System.CodeDom.CodeMemberMethod.PopulateStatements\n  - System.CodeDom.CodeMemberMethod.PrivateImplementationType\n  - System.CodeDom.CodeMemberMethod.ReturnType\n  - System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes\n  - System.CodeDom.CodeMemberMethod.Statements\n  - System.CodeDom.CodeMemberMethod.TypeParameters\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeTypeMember.Attributes\n  - System.CodeDom.CodeTypeMember.Comments\n  - System.CodeDom.CodeTypeMember.CustomAttributes\n  - System.CodeDom.CodeTypeMember.EndDirectives\n  - System.CodeDom.CodeTypeMember.LinePragma\n  - System.CodeDom.CodeTypeMember.Name\n  - System.CodeDom.CodeTypeMember.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeConstructor.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeConstructor\n  langs:\n  - csharp\n  name: CodeConstructor()\n  nameWithType: CodeConstructor.CodeConstructor()\n  fullName: System.CodeDom.CodeConstructor.CodeConstructor()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeConstructor\"></xref> class.\n  syntax:\n    content: public CodeConstructor ();\n    parameters: []\n  overload: System.CodeDom.CodeConstructor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeConstructor.BaseConstructorArgs\n  id: BaseConstructorArgs\n  parent: System.CodeDom.CodeConstructor\n  langs:\n  - csharp\n  name: BaseConstructorArgs\n  nameWithType: CodeConstructor.BaseConstructorArgs\n  fullName: System.CodeDom.CodeConstructor.BaseConstructorArgs\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the collection of base constructor arguments.\n  remarks: When the <xref:System.CodeDom.CodeConstructor> overloads a base class constructor, this collection contains any arguments to pass to a base class constructor. To call a base class constructor with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.\n  syntax:\n    content: public System.CodeDom.CodeExpressionCollection BaseConstructorArgs { get; }\n    return:\n      type: System.CodeDom.CodeExpressionCollection\n      description: A <xref href=\"System.CodeDom.CodeExpressionCollection\"></xref> that contains the base constructor arguments.\n  overload: System.CodeDom.CodeConstructor.BaseConstructorArgs*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeConstructor.ChainedConstructorArgs\n  id: ChainedConstructorArgs\n  parent: System.CodeDom.CodeConstructor\n  langs:\n  - csharp\n  name: ChainedConstructorArgs\n  nameWithType: CodeConstructor.ChainedConstructorArgs\n  fullName: System.CodeDom.CodeConstructor.ChainedConstructorArgs\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the collection of chained constructor arguments.\n  remarks: When the <xref:System.CodeDom.CodeConstructor> overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor. To call a constructor for the current type with no arguments, set a <xref:System.CodeDom.CodeSnippetExpression> containing an empty string (\"\") to this collection.\n  syntax:\n    content: public System.CodeDom.CodeExpressionCollection ChainedConstructorArgs { get; }\n    return:\n      type: System.CodeDom.CodeExpressionCollection\n      description: A <xref href=\"System.CodeDom.CodeExpressionCollection\"></xref> that contains the chained constructor arguments.\n  overload: System.CodeDom.CodeConstructor.ChainedConstructorArgs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeMemberMethod\n  isExternal: false\n  name: System.CodeDom.CodeMemberMethod\n- uid: System.CodeDom.CodeConstructor.#ctor\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: CodeConstructor()\n  nameWithType: CodeConstructor.CodeConstructor()\n  fullName: System.CodeDom.CodeConstructor.CodeConstructor()\n- uid: System.CodeDom.CodeConstructor.BaseConstructorArgs\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: BaseConstructorArgs\n  nameWithType: CodeConstructor.BaseConstructorArgs\n  fullName: System.CodeDom.CodeConstructor.BaseConstructorArgs\n- uid: System.CodeDom.CodeExpressionCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpressionCollection\n  nameWithType: CodeExpressionCollection\n  fullName: System.CodeDom.CodeExpressionCollection\n- uid: System.CodeDom.CodeConstructor.ChainedConstructorArgs\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: ChainedConstructorArgs\n  nameWithType: CodeConstructor.ChainedConstructorArgs\n  fullName: System.CodeDom.CodeConstructor.ChainedConstructorArgs\n- uid: System.CodeDom.CodeConstructor.#ctor*\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: CodeConstructor\n  nameWithType: CodeConstructor.CodeConstructor\n- uid: System.CodeDom.CodeConstructor.BaseConstructorArgs*\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: BaseConstructorArgs\n  nameWithType: CodeConstructor.BaseConstructorArgs\n- uid: System.CodeDom.CodeConstructor.ChainedConstructorArgs*\n  parent: System.CodeDom.CodeConstructor\n  isExternal: false\n  name: ChainedConstructorArgs\n  nameWithType: CodeConstructor.ChainedConstructorArgs\n"}