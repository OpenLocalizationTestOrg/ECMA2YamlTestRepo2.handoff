{"nodes":[{"pos":[1189,1238],"content":"Writes records of transactional actions to a log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes records of transactional actions to a log.","pos":[0,49]}]},{"pos":[1250,1382],"content":"Each clerk is associated with a compensator, which is called back to perform actions during the two-phase commit of the transaction.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each clerk is associated with a compensator, which is called back to perform actions during the two-phase commit of the transaction.","pos":[0,132]}]},{"pos":[3113,3234],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> class."},{"pos":[3476,3504],"content":"The name of the compensator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the compensator.","pos":[0,28]}]},{"pos":[3572,3607],"content":"The description of the compensator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the compensator.","pos":[0,35]}]},{"pos":[3728,3858],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"></xref> values."},{"pos":[4713,4834],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> class."},{"pos":[5470,5509],"content":"A type that represents the compensator.","needQuote":true,"needEscape":true,"nodes":[{"content":"A type that represents the compensator.","pos":[0,39]}]},{"pos":[5577,5612],"content":"The description of the compensator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the compensator.","pos":[0,35]}]},{"pos":[5733,5863],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"></xref> values."},{"pos":[6436,6525],"content":"Frees the resources of the current Clerk before it is reclaimed by the garbage collector.","needQuote":true,"needEscape":true,"nodes":[{"content":"Frees the resources of the current Clerk before it is reclaimed by the garbage collector.","pos":[0,89]}]},{"pos":[7154,7185],"content":"Forces all log records to disk.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces all log records to disk.","pos":[0,31]}]},{"pos":[7197,7472],"content":"The Compensating Resource Manager (CRM) Worker and CRM Compensator use this method to write records lazily to the log, which means they are not made durable until they have been forced to the log. Calling ForceLog makes all log records that have been written durable on disk.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Compensating Resource Manager (CRM) Worker and CRM Compensator use this method to write records lazily to the log, which means they are not made durable until they have been forced to the log. Calling ForceLog makes all log records that have been written durable on disk.","pos":[0,275],"nodes":[{"content":"The Compensating Resource Manager (CRM) Worker and CRM Compensator use this method to write records lazily to the log, which means they are not made durable until they have been forced to the log.","pos":[0,196]},{"content":"Calling ForceLog makes all log records that have been written durable on disk.","pos":[197,275]}]}]},{"pos":[8575,8627],"content":"Performs an immediate abort call on the transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs an immediate abort call on the transaction.","pos":[0,52]}]},{"pos":[9335,9424],"content":"Does not deliver the last log record that was written by this instance of this interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Does not deliver the last log record that was written by this instance of this interface.","pos":[0,89]}]},{"pos":[9436,9760],"content":"This can only be used to forget the last record, there is no concept of nesting; that is, \"Write, Forget, Write, Forget\" is valid, but \"Write, Write, Forget, Forget\" is not. A log record that has been forgotten is not delivered to the Compensating Resource Manager (CRM) Compensator during transaction outcome notifications.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This can only be used to forget the last record, there is no concept of nesting; that is, \"Write, Forget, Write, Forget\" is valid, but \"Write, Write, Forget, Forget\" is not. A log record that has been forgotten is not delivered to the Compensating Resource Manager (CRM) Compensator during transaction outcome notifications.","pos":[0,324],"nodes":[{"content":"This can only be used to forget the last record, there is no concept of nesting; that is, \"Write, Forget, Write, Forget\" is valid, but \"Write, Write, Forget, Forget\" is not.","pos":[0,173]},{"content":"A log record that has been forgotten is not delivered to the Compensating Resource Manager (CRM) Compensator during transaction outcome notifications.","pos":[174,324]}]}]},{"pos":[10443,10474],"content":"Gets the number of log records.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of log records.","pos":[0,31]}]},{"pos":[10589,10615],"content":"The number of log records.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of log records.","pos":[0,26]}]},{"pos":[11223,11284],"content":"Gets a value representing the transaction unit of work (UOW).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value representing the transaction unit of work (UOW).","pos":[0,61]}]},{"pos":[11403,11431],"content":"A GUID representing the UOW.","needQuote":true,"needEscape":true,"nodes":[{"content":"A GUID representing the UOW.","pos":[0,28]}]},{"pos":[12091,12134],"content":"Writes unstructured log records to the log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes unstructured log records to the log.","pos":[0,43]}]},{"pos":[12678,12713],"content":"The log record to write to the log.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log record to write to the log.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  id: Clerk\n  children:\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW\n  - System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)\n  langs:\n  - csharp\n  name: Clerk\n  nameWithType: Clerk\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  type: Class\n  summary: Writes records of transactional actions to a log.\n  remarks: Each clerk is associated with a compensator, which is called back to perform actions during the two-phase commit of the transaction.\n  example:\n  - \"The following code example demonstrates the use of this class.  \\n  \\n [!code-vb[EnterpriseServices_Crm#10](~/add/codesnippet/visualbasic/t-system.enterpriseservi_35_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#10](~/add/codesnippet/cpp/t-system.enterpriseservi_35_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#10](~/add/codesnippet/csharp/t-system.enterpriseservi_35_1.cs)]  \\n  \\n The following code example demonstrates the corresponding <xref:System.EnterpriseServices.CompensatingResourceManager.Compensator> class.  \\n  \\n [!code-cpp[EnterpriseServices_Crm#30](~/add/codesnippet/cpp/t-system.enterpriseservi_35_2.cpp)]\\n [!code-cs[EnterpriseServices_Crm#30](~/add/codesnippet/csharp/t-system.enterpriseservi_35_2.cs)]\\n [!code-vb[EnterpriseServices_Crm#30](~/add/codesnippet/visualbasic/t-system.enterpriseservi_35_2.vb)]\"\n  syntax:\n    content: public sealed class Clerk\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  id: '#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)'\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: Clerk(String,String,CompensatorOptions)\n  nameWithType: Clerk.Clerk(String,String,CompensatorOptions)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Clerk(String,String,CompensatorOptions)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> class.\n  syntax:\n    content: public Clerk (string compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);\n    parameters:\n    - id: compensator\n      type: System.String\n      description: The name of the compensator.\n    - id: description\n      type: System.String\n      description: The description of the compensator.\n    - id: flags\n      type: System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\n      description: A bitwise combination of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"></xref> values.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  id: '#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)'\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: Clerk(Type,String,CompensatorOptions)\n  nameWithType: Clerk.Clerk(Type,String,CompensatorOptions)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Clerk(Type,String,CompensatorOptions)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this constructor.  \\n  \\n [!code-vb[EnterpriseServices_Crm#11](~/add/codesnippet/visualbasic/e02d2df0-8c9d-4e03-b049-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#11](~/add/codesnippet/cpp/e02d2df0-8c9d-4e03-b049-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#11](~/add/codesnippet/csharp/e02d2df0-8c9d-4e03-b049-_1.cs)]\"\n  syntax:\n    content: public Clerk (Type compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);\n    parameters:\n    - id: compensator\n      type: System.Type\n      description: A type that represents the compensator.\n    - id: description\n      type: System.String\n      description: The description of the compensator.\n    - id: flags\n      type: System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\n      description: A bitwise combination of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\"></xref> values.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize\n  id: Finalize\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: Clerk.Finalize()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Frees the resources of the current Clerk before it is reclaimed by the garbage collector.\n  syntax:\n    content: ~Clerk ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog\n  id: ForceLog\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: ForceLog()\n  nameWithType: Clerk.ForceLog()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Forces all log records to disk.\n  remarks: The Compensating Resource Manager (CRM) Worker and CRM Compensator use this method to write records lazily to the log, which means they are not made durable until they have been forced to the log. Calling ForceLog makes all log records that have been written durable on disk.\n  example:\n  - \"The following code example demonstrates the use of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#12](~/add/codesnippet/visualbasic/m-system.enterpriseservi_1_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#12](~/add/codesnippet/cpp/m-system.enterpriseservi_1_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#12](~/add/codesnippet/csharp/m-system.enterpriseservi_1_1.cs)]\"\n  syntax:\n    content: public void ForceLog ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort\n  id: ForceTransactionToAbort\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: ForceTransactionToAbort()\n  nameWithType: Clerk.ForceTransactionToAbort()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Performs an immediate abort call on the transaction.\n  syntax:\n    content: public void ForceTransactionToAbort ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord\n  id: ForgetLogRecord\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: ForgetLogRecord()\n  nameWithType: Clerk.ForgetLogRecord()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Does not deliver the last log record that was written by this instance of this interface.\n  remarks: This can only be used to forget the last record, there is no concept of nesting; that is, \"Write, Forget, Write, Forget\" is valid, but \"Write, Write, Forget, Forget\" is not. A log record that has been forgotten is not delivered to the Compensating Resource Manager (CRM) Compensator during transaction outcome notifications.\n  syntax:\n    content: public void ForgetLogRecord ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount\n  id: LogRecordCount\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: LogRecordCount\n  nameWithType: Clerk.LogRecordCount\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Gets the number of log records.\n  syntax:\n    content: public int LogRecordCount { get; }\n    return:\n      type: System.Int32\n      description: The number of log records.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW\n  id: TransactionUOW\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: TransactionUOW\n  nameWithType: Clerk.TransactionUOW\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Gets a value representing the transaction unit of work (UOW).\n  syntax:\n    content: public string TransactionUOW { get; }\n    return:\n      type: System.String\n      description: A GUID representing the UOW.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)\n  id: WriteLogRecord(System.Object)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  langs:\n  - csharp\n  name: WriteLogRecord(Object)\n  nameWithType: Clerk.WriteLogRecord(Object)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Writes unstructured log records to the log.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this constructor.  \\n  \\n [!code-vb[EnterpriseServices_Crm#11](~/add/codesnippet/visualbasic/ed52b593-0019-42fa-8162-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#11](~/add/codesnippet/cpp/ed52b593-0019-42fa-8162-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#11](~/add/codesnippet/csharp/ed52b593-0019-42fa-8162-_1.cs)]\"\n  syntax:\n    content: public void WriteLogRecord (object record);\n    parameters:\n    - id: record\n      type: System.Object\n      description: The log record to write to the log.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: Clerk(String,String,CompensatorOptions)\n  nameWithType: Clerk.Clerk(String,String,CompensatorOptions)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Clerk(String,String,CompensatorOptions)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\n  parent: System.EnterpriseServices.CompensatingResourceManager\n  isExternal: false\n  name: CompensatorOptions\n  nameWithType: CompensatorOptions\n  fullName: System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: Clerk(Type,String,CompensatorOptions)\n  nameWithType: Clerk.Clerk(Type,String,CompensatorOptions)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Clerk(Type,String,CompensatorOptions)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: Finalize()\n  nameWithType: Clerk.Finalize()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForceLog()\n  nameWithType: Clerk.ForceLog()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForceTransactionToAbort()\n  nameWithType: Clerk.ForceTransactionToAbort()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForgetLogRecord()\n  nameWithType: Clerk.ForgetLogRecord()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: LogRecordCount\n  nameWithType: Clerk.LogRecordCount\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: TransactionUOW\n  nameWithType: Clerk.TransactionUOW\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: WriteLogRecord(Object)\n  nameWithType: Clerk.WriteLogRecord(Object)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(Object)\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: Clerk\n  nameWithType: Clerk.Clerk\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: Finalize\n  nameWithType: Clerk.Finalize\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForceLog\n  nameWithType: Clerk.ForceLog\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForceTransactionToAbort\n  nameWithType: Clerk.ForceTransactionToAbort\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: ForgetLogRecord\n  nameWithType: Clerk.ForgetLogRecord\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: LogRecordCount\n  nameWithType: Clerk.LogRecordCount\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: TransactionUOW\n  nameWithType: Clerk.TransactionUOW\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  isExternal: false\n  name: WriteLogRecord\n  nameWithType: Clerk.WriteLogRecord\n"}