{"nodes":[{"pos":[500,836],"content":"Creates instances of classes that inherit from the <xref href=\"System.Web.UI.Page\"></xref> class and implement the <xref href=\"System.Web.IHttpHandler\"></xref> interface. Instances are created dynamically to handle requests for ASP.NET files. The PageHandlerFactory class is the default handler factory implementation for ASP.NET pages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates instances of classes that inherit from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and implement the <bpt id=\"p2\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","pos":[0,170],"source":"Creates instances of classes that inherit from the <xref href=\"System.Web.UI.Page\"></xref> class and implement the <xref href=\"System.Web.IHttpHandler\"></xref> interface."},{"content":"Instances are created dynamically to handle requests for ASP.NET files.","pos":[171,242]},{"content":"The PageHandlerFactory class is the default handler factory implementation for ASP.NET pages.","pos":[243,336]}]},{"pos":[849,1642],"content":"The PageHandlerFactory class implements the <xref:System.Web.IHttpHandlerFactory> interface to provide the default HTTP handler for ASP.NET files. The PageHandlerFactory calls the ASP.NET compilation system to compile, if necessary, and return the exact type corresponding to the URL, and then creates an instance of that type. The page type inherits from the <xref:System.Web.UI.Page> class and implements the <xref:System.Web.IHttpHandler> interface.       To build a custom page handler factory, implement the <xref:System.Web.IHttpHandlerFactory> and register the custom PageHandlerFactory class in the Web.config file for the application in the [httpHandlers Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) configuration section.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PageHandlerFactory class implements the &lt;xref:System.Web.IHttpHandlerFactory&gt; interface to provide the default HTTP handler for ASP.NET files.","pos":[0,146],"source":"The PageHandlerFactory class implements the <xref:System.Web.IHttpHandlerFactory> interface to provide the default HTTP handler for ASP.NET files."},{"content":"The PageHandlerFactory calls the ASP.NET compilation system to compile, if necessary, and return the exact type corresponding to the URL, and then creates an instance of that type.","pos":[147,327]},{"content":"The page type inherits from the &lt;xref:System.Web.UI.Page&gt; class and implements the &lt;xref:System.Web.IHttpHandler&gt; interface.","pos":[328,452],"source":" The page type inherits from the <xref:System.Web.UI.Page> class and implements the <xref:System.Web.IHttpHandler> interface."},{"content":"To build a custom page handler factory, implement the &lt;xref:System.Web.IHttpHandlerFactory&gt; and register the custom PageHandlerFactory class in the Web.config file for the application in the <bpt id=\"p1\">[</bpt>httpHandlers Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2)</ept> configuration section.","pos":[459,791],"source":"       To build a custom page handler factory, implement the <xref:System.Web.IHttpHandlerFactory> and register the custom PageHandlerFactory class in the Web.config file for the application in the [httpHandlers Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) configuration section."}]},{"pos":[2156,2250],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PageHandlerFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.PageHandlerFactory\"></xref> class."},{"pos":[2262,2375],"content":"The PageHandlerFactory constructor is the default constructor and initializes any fields to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PageHandlerFactory constructor is the default constructor and initializes any fields to their default values.","pos":[0,113]}]},{"pos":[3111,3227],"content":"Returns an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface to process the requested resource.","needQuote":true,"needEscape":true,"source":"Returns an instance of the <xref href=\"System.Web.IHttpHandler\"></xref> interface to process the requested resource."},{"pos":[3239,3389],"content":"The GetHandler method is called by the ASP.NET run time and returns either a valid instance of the &lt;xref:System.Web.IHttpHandler&gt; interface or <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The GetHandler method is called by the ASP.NET run time and returns either a valid instance of the <xref:System.Web.IHttpHandler> interface or `null`."},{"pos":[3638,3844],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Web.HttpContext\"></xref> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests."},{"pos":[3912,3977],"content":"The HTTP data transfer method (GET or POST) that the client uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP data transfer method (GET or POST) that the client uses.","pos":[0,65]}]},{"pos":[4045,4088],"content":"The virtual path to the requested resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to the requested resource.","pos":[0,43]}]},{"pos":[4149,4243],"content":"The <xref:System.Web.HttpRequest.PhysicalApplicationPath*> property to the requested resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.HttpRequest.PhysicalApplicationPath*&gt; property to the requested resource.","pos":[0,94],"source":"The <xref:System.Web.HttpRequest.PhysicalApplicationPath*> property to the requested resource."}]},{"pos":[4311,4462],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that processes the request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Web.IHttpHandler\"></xref> that processes the request; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5006,5067],"content":"Enables a factory to reuse an existing instance of a handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables a factory to reuse an existing instance of a handler.","pos":[0,61]}]},{"pos":[5250,5308],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to reuse.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.IHttpHandler\"></xref> to reuse."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.PageHandlerFactory\n  id: PageHandlerFactory\n  children:\n  - System.Web.UI.PageHandlerFactory.#ctor\n  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)\n  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)\n  langs:\n  - csharp\n  name: PageHandlerFactory\n  nameWithType: PageHandlerFactory\n  fullName: System.Web.UI.PageHandlerFactory\n  type: Class\n  summary: Creates instances of classes that inherit from the <xref href=\"System.Web.UI.Page\"></xref> class and implement the <xref href=\"System.Web.IHttpHandler\"></xref> interface. Instances are created dynamically to handle requests for ASP.NET files. The PageHandlerFactory class is the default handler factory implementation for ASP.NET pages.\n  remarks: \"The PageHandlerFactory class implements the <xref:System.Web.IHttpHandlerFactory> interface to provide the default HTTP handler for ASP.NET files. The PageHandlerFactory calls the ASP.NET compilation system to compile, if necessary, and return the exact type corresponding to the URL, and then creates an instance of that type. The page type inherits from the <xref:System.Web.UI.Page> class and implements the <xref:System.Web.IHttpHandler> interface.  \\n  \\n To build a custom page handler factory, implement the <xref:System.Web.IHttpHandlerFactory> and register the custom PageHandlerFactory class in the Web.config file for the application in the [httpHandlers Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) configuration section.\"\n  syntax:\n    content: public class PageHandlerFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.PageHandlerFactory.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.PageHandlerFactory\n  langs:\n  - csharp\n  name: PageHandlerFactory()\n  nameWithType: PageHandlerFactory.PageHandlerFactory()\n  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.PageHandlerFactory\"></xref> class.\n  remarks: The PageHandlerFactory constructor is the default constructor and initializes any fields to their default values.\n  syntax:\n    content: protected PageHandlerFactory ();\n    parameters: []\n  overload: System.Web.UI.PageHandlerFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)\n  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)\n  parent: System.Web.UI.PageHandlerFactory\n  langs:\n  - csharp\n  name: GetHandler(HttpContext,String,String,String)\n  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)\n  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns an instance of the <xref href=\"System.Web.IHttpHandler\"></xref> interface to process the requested resource.\n  remarks: The GetHandler method is called by the ASP.NET run time and returns either a valid instance of the <xref:System.Web.IHttpHandler> interface or `null`.\n  syntax:\n    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An instance of the <xref href=\"System.Web.HttpContext\"></xref> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.\n    - id: requestType\n      type: System.String\n      description: The HTTP data transfer method (GET or POST) that the client uses.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the requested resource.\n    - id: path\n      type: System.String\n      description: The <xref:System.Web.HttpRequest.PhysicalApplicationPath*> property to the requested resource.\n    return:\n      type: System.Web.IHttpHandler\n      description: A new <xref href=\"System.Web.IHttpHandler\"></xref> that processes the request; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.PageHandlerFactory.GetHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)\n  id: ReleaseHandler(System.Web.IHttpHandler)\n  parent: System.Web.UI.PageHandlerFactory\n  langs:\n  - csharp\n  name: ReleaseHandler(IHttpHandler)\n  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)\n  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Enables a factory to reuse an existing instance of a handler.\n  syntax:\n    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);\n    parameters:\n    - id: handler\n      type: System.Web.IHttpHandler\n      description: The <xref href=\"System.Web.IHttpHandler\"></xref> to reuse.\n  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.PageHandlerFactory.#ctor\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: PageHandlerFactory()\n  nameWithType: PageHandlerFactory.PageHandlerFactory()\n  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()\n- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: GetHandler(HttpContext,String,String,String)\n  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)\n  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)\n- uid: System.Web.IHttpHandler\n  parent: System.Web\n  isExternal: false\n  name: IHttpHandler\n  nameWithType: IHttpHandler\n  fullName: System.Web.IHttpHandler\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: ReleaseHandler(IHttpHandler)\n  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)\n  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)\n- uid: System.Web.UI.PageHandlerFactory.#ctor*\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: PageHandlerFactory\n  nameWithType: PageHandlerFactory.PageHandlerFactory\n- uid: System.Web.UI.PageHandlerFactory.GetHandler*\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: GetHandler\n  nameWithType: PageHandlerFactory.GetHandler\n- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*\n  parent: System.Web.UI.PageHandlerFactory\n  isExternal: false\n  name: ReleaseHandler\n  nameWithType: PageHandlerFactory.ReleaseHandler\n"}