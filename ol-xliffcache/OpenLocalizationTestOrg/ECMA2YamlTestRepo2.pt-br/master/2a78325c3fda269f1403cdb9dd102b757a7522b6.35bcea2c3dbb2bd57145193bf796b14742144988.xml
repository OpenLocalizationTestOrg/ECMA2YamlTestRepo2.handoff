{"nodes":[{"pos":[888,952],"content":"Enables access to ASP.NET forms authentication as a Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables access to ASP.NET forms authentication as a Web service.","pos":[0,64]}]},{"pos":[965,4207],"content":"The AuthenticationService object enables you to authenticate users through a [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] service. You use the WCF authentication service when you must authenticate users through ASP.NET membership from an application that is outside the Web application that stores the user credentials. The application must be able to send and consume message in the SOAP format. Through the AuthenticationService class, you can log users in, log users out, validate credentials, check authentication status, customize authentication, and set the authentication cookie.       The AuthenticationService class contains four methods that you should access only through a WCF service: the <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, and <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> methods. To call these methods, you enable the authentication service on a Web server and then connect a WCF-compatible client application to the Web service. For information about how to configure the authentication service, see [How to: Enable the WCF Authentication Service](~/add/includes/ajax-current-ext-md.md).       To log users on, you pass the user credentials to the <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> method. If the credentials are valid, the AuthenticationService class creates an authentication cookie. If the authentication cookie has not expired, you know that the user's credentials have been authenticated and you do not have to validate the credentials again. (Cookie-less authentication is not available through the AuthenticationService class.)       The AuthenticationService can raise two events: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> and <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. The <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event occurs when the user credentials are being validated. Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event to customize how user credentials are validated. The <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event occurs when the authentication cookie is being set after user credentials have been validated. Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event to customize the authentication cookie.       The <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> method checks user credentials for authentication, but it does not return an authentication ticket. Use <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> when a user has previously logged in and you must check that the credentials are still valid at the start of a new application session.       For an example of using the WCF authentication service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AuthenticationService object enables you to authenticate users through a <ph id=\"ph1\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> service.","pos":[0,137],"source":"The AuthenticationService object enables you to authenticate users through a [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] service."},{"content":"You use the WCF authentication service when you must authenticate users through ASP.NET membership from an application that is outside the Web application that stores the user credentials.","pos":[138,326]},{"content":"The application must be able to send and consume message in the SOAP format.","pos":[327,403]},{"content":"Through the AuthenticationService class, you can log users in, log users out, validate credentials, check authentication status, customize authentication, and set the authentication cookie.","pos":[404,593]},{"content":"The AuthenticationService class contains four methods that you should access only through a WCF service: the &lt;xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A&gt;, &lt;xref:System.Web.ApplicationServices.AuthenticationService.Login%2A&gt;, &lt;xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A&gt;, and &lt;xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A&gt; methods.","pos":[600,1013],"source":"       The AuthenticationService class contains four methods that you should access only through a WCF service: the <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, and <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> methods."},{"content":"To call these methods, you enable the authentication service on a Web server and then connect a WCF-compatible client application to the Web service.","pos":[1014,1163]},{"content":"For information about how to configure the authentication service, see <bpt id=\"p1\">[</bpt>How to: Enable the WCF Authentication Service<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1164,1322],"source":" For information about how to configure the authentication service, see [How to: Enable the WCF Authentication Service](~/add/includes/ajax-current-ext-md.md)."},{"content":"To log users on, you pass the user credentials to the &lt;xref:System.Web.ApplicationServices.AuthenticationService.Login%2A&gt; method.","pos":[1329,1459],"source":"       To log users on, you pass the user credentials to the <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> method."},{"content":"If the credentials are valid, the AuthenticationService class creates an authentication cookie.","pos":[1460,1555]},{"content":"If the authentication cookie has not expired, you know that the user's credentials have been authenticated and you do not have to validate the credentials again.","pos":[1556,1717]},{"content":"(Cookie-less authentication is not available through the AuthenticationService class.)       The AuthenticationService can raise two events: &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; and &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt;.","pos":[1718,2013],"source":" (Cookie-less authentication is not available through the AuthenticationService class.)       The AuthenticationService can raise two events: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> and <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>."},{"content":"The &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; event occurs when the user credentials are being validated.","pos":[2014,2152],"source":" The <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event occurs when the user credentials are being validated."},{"content":"Create an event handler for the &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; event to customize how user credentials are validated.","pos":[2153,2314],"source":" Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event to customize how user credentials are validated."},{"content":"The &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt; event occurs when the authentication cookie is being set after user credentials have been validated.","pos":[2315,2494],"source":" The <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event occurs when the authentication cookie is being set after user credentials have been validated."},{"content":"Create an event handler for the &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt; event to customize the authentication cookie.","pos":[2495,2647],"source":" Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event to customize the authentication cookie."},{"content":"The &lt;xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A&gt; method checks user credentials for authentication, but it does not return an authentication ticket.","pos":[2654,2833],"source":"       The <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> method checks user credentials for authentication, but it does not return an authentication ticket."},{"content":"Use &lt;xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A&gt; when a user has previously logged in and you must check that the credentials are still valid at the start of a new application session.","pos":[2834,3049],"source":" Use <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> when a user has previously logged in and you must check that the credentials are still valid at the start of a new application session."},{"content":"For an example of using the WCF authentication service from a console application, see <bpt id=\"p1\">[</bpt>Walkthrough: Using ASP.NET Application Services<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3056,3232],"source":"       For an example of using the WCF authentication service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5325,5439],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ApplicationServices.AuthenticationService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ApplicationServices.AuthenticationService\"></xref> class."},{"pos":[6071,6120],"content":"Occurs when user credentials are being validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when user credentials are being validated.","pos":[0,49]}]},{"pos":[6132,6311],"content":"The Authenticating event is raised when user credentials are being validated. Create an event handler for the Authenticating event to customize how user credentials are validated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Authenticating event is raised when user credentials are being validated. Create an event handler for the Authenticating event to customize how user credentials are validated.","pos":[0,179],"nodes":[{"content":"The Authenticating event is raised when user credentials are being validated.","pos":[0,77]},{"content":"Create an event handler for the Authenticating event to customize how user credentials are validated.","pos":[78,179]}]}]},{"pos":[7637,7649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8134,8185],"content":"Occurs when the authentication cookie is being set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the authentication cookie is being set.","pos":[0,51]}]},{"pos":[8197,8412],"content":"The CreatingCookie event is raised when the authentication cookie is being set after user credentials have been validated. Create an event handler for the CreatingCookie event to customize the authentication cookie.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreatingCookie event is raised when the authentication cookie is being set after user credentials have been validated. Create an event handler for the CreatingCookie event to customize the authentication cookie.","pos":[0,215],"nodes":[{"content":"The CreatingCookie event is raised when the authentication cookie is being set after user credentials have been validated.","pos":[0,122]},{"content":"Create an event handler for the CreatingCookie event to customize the authentication cookie.","pos":[123,215]}]}]},{"pos":[9968,9980],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10452,10505],"content":"Determines whether the current user is authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current user is authenticated.","pos":[0,53]}]},{"pos":[10518,10840],"content":"The IsLoggedIn method checks whether the current user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.      > [!NOTE] >  Do not call the IsLoggedIn method from code that is executing on the Web server. You call the IsLoggedIn method only as part of a WCF service.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsLoggedIn method checks whether the current user is authenticated by checking the &lt;xref:System.Security.Principal.IIdentity.IsAuthenticated%2A&gt;.property.","pos":[0,158],"source":"The IsLoggedIn method checks whether the current user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call the IsLoggedIn method from code that is executing on the Web server.","pos":[164,257],"source":"      > [!NOTE] >  Do not call the IsLoggedIn method from code that is executing on the Web server."},{"content":"You call the IsLoggedIn method only as part of a WCF service.","pos":[258,319]}]},{"pos":[10969,11140],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user has been authenticated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user has been authenticated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11864,11963],"content":"Checks user credentials and creates an authentication ticket (cookie) if the credentials are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks user credentials and creates an authentication ticket (cookie) if the credentials are valid.","pos":[0,99]}]},{"pos":[11976,13772],"content":"The Login method validates user credentials through a membership provider. You can use the default membership provider or specify a custom membership provider at run time. The <xref:System.Web.ApplicationServices.AuthenticationService> class passes `userName` and `password` to the membership provider's <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method, but does not pass `customCredential`. If <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true`, <xref:System.Web.ApplicationServices.AuthenticationService> creates an authentication ticket as a cookie. Set the `isPersistent` parameter to `true` to create an authentication ticket that lasts beyond the current session.      > [!NOTE] >  Always use the authentication service together with the secure sockets layer (SSL, by using HTTPS) to protect sensitive data.       The Login method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event and the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event. Create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> to customize authentication, such as checking the values in `customCredential` or validating credentials through a non-default membership provider. The values in `customCredential` are not validated by the default membership provider. To customize the authentication cookie, create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.      > [!NOTE] >  Do not call the Login method from code that is executing on the Web server. You call the Login method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Login method validates user credentials through a membership provider.","pos":[0,74]},{"content":"You can use the default membership provider or specify a custom membership provider at run time.","pos":[75,171]},{"content":"The &lt;xref:System.Web.ApplicationServices.AuthenticationService&gt; class passes <ph id=\"ph1\">`userName`</ph> and <ph id=\"ph2\">`password`</ph> to the membership provider's &lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt; method, but does not pass <ph id=\"ph3\">`customCredential`</ph>.","pos":[172,411],"source":" The <xref:System.Web.ApplicationServices.AuthenticationService> class passes `userName` and `password` to the membership provider's <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method, but does not pass `customCredential`."},{"content":"If &lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt; returns <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Web.ApplicationServices.AuthenticationService&gt; creates an authentication ticket as a cookie.","pos":[412,598],"source":" If <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true`, <xref:System.Web.ApplicationServices.AuthenticationService> creates an authentication ticket as a cookie."},{"content":"Set the <ph id=\"ph1\">`isPersistent`</ph> parameter to <ph id=\"ph2\">`true`</ph> to create an authentication ticket that lasts beyond the current session.","pos":[599,715],"source":" Set the `isPersistent` parameter to `true` to create an authentication ticket that lasts beyond the current session."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always use the authentication service together with the secure sockets layer (SSL, by using HTTPS) to protect sensitive data.","pos":[721,859],"source":"      > [!NOTE] >  Always use the authentication service together with the secure sockets layer (SSL, by using HTTPS) to protect sensitive data."},{"content":"The Login method raises the &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; event and the &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt; event.","pos":[866,1064],"source":"       The Login method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event and the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event."},{"content":"Create an event handler for &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; to customize authentication, such as checking the values in <ph id=\"ph1\">`customCredential`</ph> or validating credentials through a non-default membership provider.","pos":[1065,1315],"source":" Create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> to customize authentication, such as checking the values in `customCredential` or validating credentials through a non-default membership provider."},{"content":"The values in <ph id=\"ph1\">`customCredential`</ph> are not validated by the default membership provider.","pos":[1316,1402],"source":" The values in `customCredential` are not validated by the default membership provider."},{"content":"To customize the authentication cookie, create an event handler for &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt;.","pos":[1403,1546],"source":" To customize the authentication cookie, create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call the Login method from code that is executing on the Web server.","pos":[1552,1640],"source":"      > [!NOTE] >  Do not call the Login method from code that is executing on the Web server."},{"content":"You call the Login method only as part of a WCF service.","pos":[1641,1697]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Authentication<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1698,1788],"source":" For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[13975,14005],"content":"The user name to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to be validated.","pos":[0,30]}]},{"pos":[14070,14106],"content":"The password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user.","pos":[0,36]}]},{"pos":[14179,14260],"content":"The value or values to validate in addition to <ph id=\"ph1\">`userName`</ph> and <ph id=\"ph2\">`password`</ph>, if any.","needQuote":true,"needEscape":true,"source":"The value or values to validate in addition to `userName` and `password`, if any."},{"pos":[14330,14417],"content":"A value that indicates whether the authentication ticket remains valid across sessions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the authentication ticket remains valid across sessions.","pos":[0,87]}]},{"pos":[14476,14642],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if user credentials are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if user credentials are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14831,14942],"content":"<ph id=\"ph1\">&lt;code&gt;userName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;password&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>userName</code> or <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15377,15434],"content":"Clears the authentication ticket (cookie) in the browser.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the authentication ticket (cookie) in the browser.","pos":[0,57]}]},{"pos":[15447,16003],"content":"The Logout method clears the authentication cookie from the browser's cookie collection. The user must log in again to be authenticated.       The <xref:System.Web.ApplicationServices.AuthenticationService> class does not store information on the server about which authentication tickets have been cleared.      > [!NOTE] >  Do not call the Logout method from code that is executing on the Web server. You call the Logout method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Logout method clears the authentication cookie from the browser's cookie collection.","pos":[0,88]},{"content":"The user must log in again to be authenticated.","pos":[89,136]},{"content":"The &lt;xref:System.Web.ApplicationServices.AuthenticationService&gt; class does not store information on the server about which authentication tickets have been cleared.","pos":[143,307],"source":"       The <xref:System.Web.ApplicationServices.AuthenticationService> class does not store information on the server about which authentication tickets have been cleared."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call the Logout method from code that is executing on the Web server.","pos":[313,402],"source":"      > [!NOTE] >  Do not call the Logout method from code that is executing on the Web server."},{"content":"You call the Logout method only as part of a WCF service.","pos":[403,460]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Authentication<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[461,551],"source":" For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[16770,16842],"content":"Authenticates user credentials without issuing an authentication ticket.","needQuote":true,"needEscape":true,"nodes":[{"content":"Authenticates user credentials without issuing an authentication ticket.","pos":[0,72]}]},{"pos":[16855,17879],"content":"The ValidateUser method authenticates the user credentials but does not set an authentication cookie. Without an authentication cookie, the user will not be logged in even if the credentials are valid.       Use the ValidateUser method when you must check whether a user's credentials are valid without receiving an authentication cookie. For example, you might do this if the authentication cookie is already stored in a client application but you want to verify that the user's credentials are still valid when a new session starts.       TheValidateUser method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event, but does not raise the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event.      > [!NOTE] >  Do not call the ValidateUser method from code that is executing on the Web server. You call the ValidateUser method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ValidateUser method authenticates the user credentials but does not set an authentication cookie.","pos":[0,101]},{"content":"Without an authentication cookie, the user will not be logged in even if the credentials are valid.","pos":[102,201]},{"content":"Use the ValidateUser method when you must check whether a user's credentials are valid without receiving an authentication cookie.","pos":[208,338]},{"content":"For example, you might do this if the authentication cookie is already stored in a client application but you want to verify that the user's credentials are still valid when a new session starts.","pos":[339,534]},{"content":"TheValidateUser method raises the &lt;xref:System.Web.ApplicationServices.AuthenticationService.Authenticating&gt; event, but does not raise the &lt;xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie&gt; event.","pos":[541,761],"source":"       TheValidateUser method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event, but does not raise the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call the ValidateUser method from code that is executing on the Web server.","pos":[767,862],"source":"      > [!NOTE] >  Do not call the ValidateUser method from code that is executing on the Web server."},{"content":"You call the ValidateUser method only as part of a WCF service.","pos":[863,926]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Authentication<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[927,1017],"source":" For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[18070,18100],"content":"The user name to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to be validated.","pos":[0,30]}]},{"pos":[18165,18201],"content":"The password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user.","pos":[0,36]}]},{"pos":[18274,18355],"content":"The value or values to validate in addition to <ph id=\"ph1\">`userName`</ph> and <ph id=\"ph2\">`password`</ph>, if any.","needQuote":true,"needEscape":true,"source":"The value or values to validate in addition to `userName` and `password`, if any."},{"pos":[18414,18584],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user credentials are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user credentials are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18780,18891],"content":"<ph id=\"ph1\">&lt;code&gt;userName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;password&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>userName</code> or <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ApplicationServices.AuthenticationService\n  id: AuthenticationService\n  children:\n  - System.Web.ApplicationServices.AuthenticationService.#ctor\n  - System.Web.ApplicationServices.AuthenticationService.Authenticating\n  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie\n  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn\n  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)\n  - System.Web.ApplicationServices.AuthenticationService.Logout\n  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)\n  langs:\n  - csharp\n  name: AuthenticationService\n  nameWithType: AuthenticationService\n  fullName: System.Web.ApplicationServices.AuthenticationService\n  type: Class\n  summary: Enables access to ASP.NET forms authentication as a Web service.\n  remarks: \"The AuthenticationService object enables you to authenticate users through a [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] service. You use the WCF authentication service when you must authenticate users through ASP.NET membership from an application that is outside the Web application that stores the user credentials. The application must be able to send and consume message in the SOAP format. Through the AuthenticationService class, you can log users in, log users out, validate credentials, check authentication status, customize authentication, and set the authentication cookie.  \\n  \\n The AuthenticationService class contains four methods that you should access only through a WCF service: the <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, and <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> methods. To call these methods, you enable the authentication service on a Web server and then connect a WCF-compatible client application to the Web service. For information about how to configure the authentication service, see [How to: Enable the WCF Authentication Service](~/add/includes/ajax-current-ext-md.md).  \\n  \\n To log users on, you pass the user credentials to the <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> method. If the credentials are valid, the AuthenticationService class creates an authentication cookie. If the authentication cookie has not expired, you know that the user's credentials have been authenticated and you do not have to validate the credentials again. (Cookie-less authentication is not available through the AuthenticationService class.)  \\n  \\n The AuthenticationService can raise two events: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> and <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. The <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event occurs when the user credentials are being validated. Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event to customize how user credentials are validated. The <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event occurs when the authentication cookie is being set after user credentials have been validated. Create an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event to customize the authentication cookie.  \\n  \\n The <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> method checks user credentials for authentication, but it does not return an authentication ticket. Use <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> when a user has previously logged in and you must check that the credentials are still valid at the start of a new application session.  \\n  \\n For an example of using the WCF authentication service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: >-\n      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]\n\n      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace=\"http://asp.net/ApplicationServices/v200\")]\n\n      [System.ServiceModel.ServiceContract(Namespace=\"http://asp.net/ApplicationServices/v200\")]\n\n      public class AuthenticationService\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.#ctor\n  id: '#ctor'\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: AuthenticationService()\n  nameWithType: AuthenticationService.AuthenticationService()\n  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Initializes a new instance of the <xref href=\"System.Web.ApplicationServices.AuthenticationService\"></xref> class.\n  syntax:\n    content: public AuthenticationService ();\n    parameters: []\n  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating\n  id: Authenticating\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: Authenticating\n  nameWithType: AuthenticationService.Authenticating\n  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Occurs when user credentials are being validated.\n  remarks: The Authenticating event is raised when user credentials are being validated. Create an event handler for the Authenticating event to customize how user credentials are validated.\n  example:\n  - \"The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \\n  \\n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \\n  \\n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \\n  \\n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]\"\n  syntax:\n    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;\n    return:\n      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie\n  id: CreatingCookie\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: CreatingCookie\n  nameWithType: AuthenticationService.CreatingCookie\n  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Occurs when the authentication cookie is being set.\n  remarks: The CreatingCookie event is raised when the authentication cookie is being set after user credentials have been validated. Create an event handler for the CreatingCookie event to customize the authentication cookie.\n  example:\n  - \"The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \\n  \\n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \\n  \\n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \\n  \\n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]\"\n  syntax:\n    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;\n    return:\n      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn\n  id: IsLoggedIn\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: IsLoggedIn()\n  nameWithType: AuthenticationService.IsLoggedIn()\n  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Determines whether the current user is authenticated.\n  remarks: \"The IsLoggedIn method checks whether the current user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.  \\n  \\n> [!NOTE]\\n>  Do not call the IsLoggedIn method from code that is executing on the Web server. You call the IsLoggedIn method only as part of a WCF service.\"\n  syntax:\n    content: public bool IsLoggedIn ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user has been authenticated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)\n  id: Login(System.String,System.String,System.String,System.Boolean)\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: Login(String,String,String,Boolean)\n  nameWithType: AuthenticationService.Login(String,String,String,Boolean)\n  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Checks user credentials and creates an authentication ticket (cookie) if the credentials are valid.\n  remarks: \"The Login method validates user credentials through a membership provider. You can use the default membership provider or specify a custom membership provider at run time. The <xref:System.Web.ApplicationServices.AuthenticationService> class passes `userName` and `password` to the membership provider's <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method, but does not pass `customCredential`. If <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true`, <xref:System.Web.ApplicationServices.AuthenticationService> creates an authentication ticket as a cookie. Set the `isPersistent` parameter to `true` to create an authentication ticket that lasts beyond the current session.  \\n  \\n> [!NOTE]\\n>  Always use the authentication service together with the secure sockets layer (SSL, by using HTTPS) to protect sensitive data.  \\n  \\n The Login method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event and the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event. Create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> to customize authentication, such as checking the values in `customCredential` or validating credentials through a non-default membership provider. The values in `customCredential` are not validated by the default membership provider. To customize the authentication cookie, create an event handler for <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.  \\n  \\n> [!NOTE]\\n>  Do not call the Login method from code that is executing on the Web server. You call the Login method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool Login (string username, string password, string customCredential, bool isPersistent);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name to be validated.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    - id: customCredential\n      type: System.String\n      description: The value or values to validate in addition to `userName` and `password`, if any.\n    - id: isPersistent\n      type: System.Boolean\n      description: A value that indicates whether the authentication ticket remains valid across sessions.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if user credentials are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ApplicationServices.AuthenticationService.Login*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>userName</code> or <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.Logout\n  id: Logout\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: Logout()\n  nameWithType: AuthenticationService.Logout()\n  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Clears the authentication ticket (cookie) in the browser.\n  remarks: \"The Logout method clears the authentication cookie from the browser's cookie collection. The user must log in again to be authenticated.  \\n  \\n The <xref:System.Web.ApplicationServices.AuthenticationService> class does not store information on the server about which authentication tickets have been cleared.  \\n  \\n> [!NOTE]\\n>  Do not call the Logout method from code that is executing on the Web server. You call the Logout method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void Logout ();\n    parameters: []\n  overload: System.Web.ApplicationServices.AuthenticationService.Logout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)\n  id: ValidateUser(System.String,System.String,System.String)\n  parent: System.Web.ApplicationServices.AuthenticationService\n  langs:\n  - csharp\n  name: ValidateUser(String,String,String)\n  nameWithType: AuthenticationService.ValidateUser(String,String,String)\n  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Authenticates user credentials without issuing an authentication ticket.\n  remarks: \"The ValidateUser method authenticates the user credentials but does not set an authentication cookie. Without an authentication cookie, the user will not be logged in even if the credentials are valid.  \\n  \\n Use the ValidateUser method when you must check whether a user's credentials are valid without receiving an authentication cookie. For example, you might do this if the authentication cookie is already stored in a client application but you want to verify that the user's credentials are still valid when a new session starts.  \\n  \\n TheValidateUser method raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event, but does not raise the <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> event.  \\n  \\n> [!NOTE]\\n>  Do not call the ValidateUser method from code that is executing on the Web server. You call the ValidateUser method only as part of a WCF service. For more information, see [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool ValidateUser (string username, string password, string customCredential);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name to be validated.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    - id: customCredential\n      type: System.String\n      description: The value or values to validate in addition to `userName` and `password`, if any.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user credentials are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>userName</code> or <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.ApplicationServices.AuthenticationService.#ctor\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: AuthenticationService()\n  nameWithType: AuthenticationService.AuthenticationService()\n  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()\n- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: Authenticating\n  nameWithType: AuthenticationService.Authenticating\n  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating\n- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<AuthenticatingEventArgs>\n  nameWithType: EventHandler<AuthenticatingEventArgs>\n  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs\n    name: AuthenticatingEventArgs\n    nameWithType: AuthenticatingEventArgs\n    fullName: AuthenticatingEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: CreatingCookie\n  nameWithType: AuthenticationService.CreatingCookie\n  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie\n- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<CreatingCookieEventArgs>\n  nameWithType: EventHandler<CreatingCookieEventArgs>\n  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs\n    name: CreatingCookieEventArgs\n    nameWithType: CreatingCookieEventArgs\n    fullName: CreatingCookieEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: IsLoggedIn()\n  nameWithType: AuthenticationService.IsLoggedIn()\n  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: Login(String,String,String,Boolean)\n  nameWithType: AuthenticationService.Login(String,String,String,Boolean)\n  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.ApplicationServices.AuthenticationService.Logout\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: Logout()\n  nameWithType: AuthenticationService.Logout()\n  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()\n- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: ValidateUser(String,String,String)\n  nameWithType: AuthenticationService.ValidateUser(String,String,String)\n  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)\n- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: AuthenticationService\n  nameWithType: AuthenticationService.AuthenticationService\n- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: IsLoggedIn\n  nameWithType: AuthenticationService.IsLoggedIn\n- uid: System.Web.ApplicationServices.AuthenticationService.Login*\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: Login\n  nameWithType: AuthenticationService.Login\n- uid: System.Web.ApplicationServices.AuthenticationService.Logout*\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: Logout\n  nameWithType: AuthenticationService.Logout\n- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*\n  parent: System.Web.ApplicationServices.AuthenticationService\n  isExternal: false\n  name: ValidateUser\n  nameWithType: AuthenticationService.ValidateUser\n"}