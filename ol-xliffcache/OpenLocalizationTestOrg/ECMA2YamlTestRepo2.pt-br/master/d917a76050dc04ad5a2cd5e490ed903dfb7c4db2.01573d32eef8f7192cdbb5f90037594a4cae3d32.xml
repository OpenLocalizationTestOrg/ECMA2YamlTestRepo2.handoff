{"nodes":[{"pos":[1286,1435],"content":"Represents the measurements for the &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the measurements for the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property.","pos":[0,149],"source":"Represents the measurements for the &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; attached property."}]},{"pos":[1447,2138],"content":"The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).  You can specify uniform cache length my creating a VirtualizationCacheLength by using the constructor that takes a single parameter.  You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).  You can specify uniform cache length my creating a VirtualizationCacheLength by using the constructor that takes a single parameter.  You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.","pos":[0,691],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; attached property specifies the amount of space in which a &lt;xref:System.Windows.Controls.VirtualizingPanel&gt; virtualizes the items before or after the view port (the area in which items are visible).","pos":[0,291],"source":"The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible)."},{"content":"You can specify uniform cache length my creating a VirtualizationCacheLength by using the constructor that takes a single parameter.","pos":[293,425]},{"content":"You can use the constructor that takes two parameters to specify different values for the &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; and &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; properties.","pos":[427,691],"source":"  You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties."}]}]},{"pos":[3043,3208],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a uniform cache length for each side of the viewport.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> class with a uniform cache length for each side of the viewport."},{"pos":[3402,3454],"content":"The size of the cache before and after the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the cache before and after the viewport.","pos":[0,52]}]},{"pos":[4122,4292],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified cache lengths for each side of the viewport.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> class with the specified cache lengths for each side of the viewport."},{"pos":[4497,4539],"content":"The size of the cache before the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the cache before the viewport.","pos":[0,42]}]},{"pos":[4614,4655],"content":"The size of the cache after the viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the cache after the viewport.","pos":[0,41]}]},{"pos":[5220,5355],"content":"Gets the size of the cache before the viewport when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is virtualizing.","needQuote":true,"needEscape":true,"source":"Gets the size of the cache before the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing."},{"pos":[5367,5740],"content":"In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen. Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In this context, \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.","pos":[0,238],"source":"In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen."},{"content":"Use a cache to avoid generating <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements as they’re scrolled into view.","pos":[239,373],"source":" Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view."}]},{"pos":[5863,5992],"content":"The size of the cache after the viewport when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is virtualizing.","needQuote":true,"needEscape":true,"source":"The size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing."},{"pos":[6575,6709],"content":"Gets the size of the cache after the viewport when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is virtualizing.","needQuote":true,"needEscape":true,"source":"Gets the size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing."},{"pos":[6721,7094],"content":"In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen. Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In this context, \"virtualize\" refers to a technique by which a subset of <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on the screen.","pos":[0,238],"source":"In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen."},{"content":"Use a cache to avoid generating <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements as they’re scrolled into view.","pos":[239,373],"source":" Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view."}]},{"pos":[7218,7347],"content":"The size of the cache after the viewport when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizingPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is virtualizing.","needQuote":true,"needEscape":true,"source":"The size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing."},{"pos":[7918,8053],"content":"Determines whether the specified object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[8065,8419],"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","pos":[0,354],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt; checks for value equality.","pos":[0,87],"source":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality."},{"content":"That is, the two objects are equal if their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; property values are equal and their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; property values are equal.","pos":[89,354],"source":"  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal."}]}]},{"pos":[8570,8680],"content":"The object to compare with the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare with the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[8739,8994],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9681,9880],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[9892,10246],"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","pos":[0,354],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt; checks for value equality.","pos":[0,87],"source":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality."},{"content":"That is, the two objects are equal if their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; property values are equal and their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; property values are equal.","pos":[89,354],"source":"  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal."}]}]},{"pos":[10473,10583],"content":"The object to compare with the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare with the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[10642,10897],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11432,11536],"content":"Gets a hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a hash code for the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[11671,11770],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[12667,12793],"content":"Determines whether the two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether the two specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> objects are equal."},{"pos":[12805,13159],"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","pos":[0,354],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt; checks for value equality.","pos":[0,87],"source":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality."},{"content":"That is, the two objects are equal if their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; property values are equal and their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; property values are equal.","pos":[89,354],"source":"  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal."}]}]},{"pos":[13437,13465],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[13561,13590],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[13649,13883],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14790,14916],"content":"Determines whether the two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether the two specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> objects are equal."},{"pos":[14928,15282],"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.","pos":[0,354],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.VirtualizationCacheLength&gt; checks for value equality.","pos":[0,87],"source":"The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality."},{"content":"That is, the two objects are equal if their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; property values are equal and their &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; property values are equal.","pos":[89,354],"source":"  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal."}]}]},{"pos":[15562,15590],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[15686,15715],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[15774,16008],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16535,16651],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."},{"pos":[16663,16906],"content":"The ToString method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ToString method returns a string that displays the values of the &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A&gt; and &lt;xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A&gt; properties.","pos":[0,243],"source":"The ToString method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties."}]},{"pos":[17042,17150],"content":"A string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.VirtualizationCacheLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string that represents the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.VirtualizationCacheLength\n  id: VirtualizationCacheLength\n  children:\n  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)\n  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)\n  - System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport\n  - System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport\n  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)\n  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)\n  - System.Windows.Controls.VirtualizationCacheLength.GetHashCode\n  - System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  - System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  - System.Windows.Controls.VirtualizationCacheLength.ToString\n  langs:\n  - csharp\n  name: VirtualizationCacheLength\n  nameWithType: VirtualizationCacheLength\n  fullName: System.Windows.Controls.VirtualizationCacheLength\n  type: Struct\n  summary: Represents the measurements for the &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; attached property.\n  remarks: The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).  You can specify uniform cache length my creating a VirtualizationCacheLength by using the constructor that takes a single parameter.  You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))]\n\n      public struct VirtualizationCacheLength : IEquatable<System.Windows.Controls.VirtualizationCacheLength>\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Controls.VirtualizationCacheLength>\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: VirtualizationCacheLength(Double)\n  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates a new instance of the <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> class with a uniform cache length for each side of the viewport.\n  syntax:\n    content: public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);\n    parameters:\n    - id: cacheBeforeAndAfterViewport\n      type: System.Double\n      description: The size of the cache before and after the viewport.\n  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: VirtualizationCacheLength(Double,Double)\n  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates a new instance of the <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> class with the specified cache lengths for each side of the viewport.\n  syntax:\n    content: public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);\n    parameters:\n    - id: cacheBeforeViewport\n      type: System.Double\n      description: The size of the cache before the viewport.\n    - id: cacheAfterViewport\n      type: System.Double\n      description: The size of the cache after the viewport.\n  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport\n  id: CacheAfterViewport\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: CacheAfterViewport\n  nameWithType: VirtualizationCacheLength.CacheAfterViewport\n  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the size of the cache before the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing.\n  remarks: In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen. Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view.\n  syntax:\n    content: public double CacheAfterViewport { get; }\n    return:\n      type: System.Double\n      description: The size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing.\n  overload: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport\n  id: CacheBeforeViewport\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: CacheBeforeViewport\n  nameWithType: VirtualizationCacheLength.CacheBeforeViewport\n  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing.\n  remarks: In this context, \"virtualize\" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen. Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elements as they’re scrolled into view.\n  syntax:\n    content: public double CacheBeforeViewport { get; }\n    return:\n      type: System.Double\n      description: The size of the cache after the viewport when the <xref href=\"System.Windows.Controls.VirtualizingPanel\"></xref> is virtualizing.\n  overload: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: VirtualizationCacheLength.Equals(Object)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  remarks: The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.\n  syntax:\n    content: public override bool Equals (object oCompare);\n    parameters:\n    - id: oCompare\n      type: System.Object\n      description: The object to compare with the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)\n  id: Equals(System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: Equals(VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  remarks: The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.\n  syntax:\n    content: public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);\n    parameters:\n    - id: cacheLength\n      type: System.Windows.Controls.VirtualizationCacheLength\n      description: The object to compare with the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: VirtualizationCacheLength.GetHashCode()\n  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a hash code for the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  id: op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether the two specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> objects are equal.\n  remarks: The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);\n    parameters:\n    - id: cl1\n      type: System.Windows.Controls.VirtualizationCacheLength\n      description: The first object to compare.\n    - id: cl2\n      type: System.Windows.Controls.VirtualizationCacheLength\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  id: op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether the two specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> objects are equal.\n  remarks: The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.  That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);\n    parameters:\n    - id: cl1\n      type: System.Windows.Controls.VirtualizationCacheLength\n      description: The first object to compare.\n    - id: cl2\n      type: System.Windows.Controls.VirtualizationCacheLength\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.VirtualizationCacheLength.ToString\n  id: ToString\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: VirtualizationCacheLength.ToString()\n  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a string that represents the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  remarks: The ToString method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Windows.Controls.VirtualizationCacheLength\"></xref>.\n  overload: System.Windows.Controls.VirtualizationCacheLength.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: VirtualizationCacheLength(Double)\n  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: VirtualizationCacheLength(Double,Double)\n  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: CacheAfterViewport\n  nameWithType: VirtualizationCacheLength.CacheAfterViewport\n  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: CacheBeforeViewport\n  nameWithType: VirtualizationCacheLength.CacheBeforeViewport\n  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport\n- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: VirtualizationCacheLength.Equals(Object)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: Equals(VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)\n- uid: System.Windows.Controls.VirtualizationCacheLength\n  parent: System.Windows.Controls\n  isExternal: false\n  name: VirtualizationCacheLength\n  nameWithType: VirtualizationCacheLength\n  fullName: System.Windows.Controls.VirtualizationCacheLength\n- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: VirtualizationCacheLength.GetHashCode()\n  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)\n- uid: System.Windows.Controls.VirtualizationCacheLength.ToString\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: ToString()\n  nameWithType: VirtualizationCacheLength.ToString()\n  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: VirtualizationCacheLength\n  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: CacheAfterViewport\n  nameWithType: VirtualizationCacheLength.CacheAfterViewport\n- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: CacheBeforeViewport\n  nameWithType: VirtualizationCacheLength.CacheBeforeViewport\n- uid: System.Windows.Controls.VirtualizationCacheLength.Equals*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: Equals\n  nameWithType: VirtualizationCacheLength.Equals\n- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: GetHashCode\n  nameWithType: VirtualizationCacheLength.GetHashCode\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: op_Equality\n  nameWithType: VirtualizationCacheLength.op_Equality\n- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: op_Inequality\n  nameWithType: VirtualizationCacheLength.op_Inequality\n- uid: System.Windows.Controls.VirtualizationCacheLength.ToString*\n  parent: System.Windows.Controls.VirtualizationCacheLength\n  isExternal: false\n  name: ToString\n  nameWithType: VirtualizationCacheLength.ToString\n"}