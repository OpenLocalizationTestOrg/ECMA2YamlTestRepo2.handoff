{"nodes":[{"pos":[859,962],"content":"Represents a condition that must be taken into account when assessing the validity of a SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a condition that must be taken into account when assessing the validity of a SAML assertion.","pos":[0,103]}]},{"pos":[975,1789],"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion. The SamlCondition class represents a single condition. An example of a condition is whether the SAML assertion must not be cached, which is represented by the <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> class.       The SAML specification defines two conditions and it allows for the set of conditions to be extended. The two conditions defined by the SAML specification are <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>. To define a new condition, derive a class from the SamlCondition class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion. The SamlCondition class represents a single condition. An example of a condition is whether the SAML assertion must not be cached, which is represented by the <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> class.       The SAML specification defines two conditions and it allows for the set of conditions to be extended. The two conditions defined by the SAML specification are <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>. To define a new condition, derive a class from the SamlCondition class.","pos":[0,812],"nodes":[{"content":"&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion.","pos":[0,218],"source":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion."},{"content":"The SamlCondition class represents a single condition.","pos":[219,273]},{"content":"An example of a condition is whether the SAML assertion must not be cached, which is represented by the &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt; class.","pos":[274,443],"source":" An example of a condition is whether the SAML assertion must not be cached, which is represented by the <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> class."},{"content":"The SAML specification defines two conditions and it allows for the set of conditions to be extended.","pos":[450,551]},{"content":"The two conditions defined by the SAML specification are &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt; and &lt;xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition&gt;.","pos":[552,740],"source":" The two conditions defined by the SAML specification are <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>."},{"content":"To define a new condition, derive a class from the SamlCondition class.","pos":[741,812]}]}]},{"pos":[2338,2441],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlCondition\"></xref> class."},{"pos":[2995,3109],"content":"When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only.","pos":[0,114]}]},{"pos":[3121,3297],"content":"To make this instance of the <xref:System.IdentityModel.Tokens.SamlCondition> class read-only, call the <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To make this instance of the &lt;xref:System.IdentityModel.Tokens.SamlCondition&gt; class read-only, call the &lt;xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A&gt; method.","pos":[0,176],"source":"To make this instance of the <xref:System.IdentityModel.Tokens.SamlCondition> class read-only, call the <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A> method."}]},{"pos":[3420,3684],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the properties of this instance are read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,264],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4187,4260],"content":"When overridden in a derived class, causes this instance to be read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, causes this instance to be read-only.","pos":[0,73]}]},{"pos":[4272,4458],"content":"When the MakeReadOnly method is called, the &lt;xref:System.IdentityModel.Tokens.SamlCondition.IsReadOnly%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and properties of this instance can no longer be set.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlCondition.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set."},{"pos":[5624,5710],"content":"When overridden in a derived class, reads the condition from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, reads the condition from the specified XML reader.","pos":[0,86]}]},{"pos":[6109,6171],"content":"A <xref:System.Xml.XmlDictionaryReader> to read the condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the condition.","pos":[0,62],"source":"A <xref:System.Xml.XmlDictionaryReader> to read the condition."}]},{"pos":[6271,6455],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification."},{"pos":[6570,6762],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[6880,7026],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[7940,8031],"content":"When overridden in a derived class, writes the condition into the specified XML serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, writes the condition into the specified XML serializer.","pos":[0,91]}]},{"pos":[8354,8417],"content":"A <xref:System.Xml.XmlDictionaryWriter> to write the condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlDictionaryWriter&gt; to write the condition.","pos":[0,63],"source":"A <xref:System.Xml.XmlDictionaryWriter> to write the condition."}]},{"pos":[8517,8643],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of writing XML elements in a SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of writing XML elements in a SAML assertion."},{"pos":[8758,8938],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of writing <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clauses.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SamlCondition\n  id: SamlCondition\n  children:\n  - System.IdentityModel.Tokens.SamlCondition.#ctor\n  - System.IdentityModel.Tokens.SamlCondition.IsReadOnly\n  - System.IdentityModel.Tokens.SamlCondition.MakeReadOnly\n  - System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  langs:\n  - csharp\n  name: SamlCondition\n  nameWithType: SamlCondition\n  fullName: System.IdentityModel.Tokens.SamlCondition\n  type: Class\n  summary: Represents a condition that must be taken into account when assessing the validity of a SAML assertion.\n  remarks: \"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion. The SamlCondition class represents a single condition. An example of a condition is whether the SAML assertion must not be cached, which is represented by the <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> class.  \\n  \\n The SAML specification defines two conditions and it allows for the set of conditions to be extended. The two conditions defined by the SAML specification are <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>. To define a new condition, derive a class from the SamlCondition class.\"\n  syntax:\n    content: public abstract class SamlCondition\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlCondition.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SamlCondition\n  langs:\n  - csharp\n  name: SamlCondition()\n  nameWithType: SamlCondition.SamlCondition()\n  fullName: System.IdentityModel.Tokens.SamlCondition.SamlCondition()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlCondition\"></xref> class.\n  syntax:\n    content: protected SamlCondition ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SamlCondition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly\n  id: IsReadOnly\n  parent: System.IdentityModel.Tokens.SamlCondition\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: SamlCondition.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SamlCondition.IsReadOnly\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only.\n  remarks: To make this instance of the <xref:System.IdentityModel.Tokens.SamlCondition> class read-only, call the <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A> method.\n  syntax:\n    content: public abstract bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SamlCondition.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly\n  id: MakeReadOnly\n  parent: System.IdentityModel.Tokens.SamlCondition\n  langs:\n  - csharp\n  name: MakeReadOnly()\n  nameWithType: SamlCondition.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, causes this instance to be read-only.\n  remarks: When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlCondition.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set.\n  syntax:\n    content: public abstract void MakeReadOnly ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlCondition\n  langs:\n  - csharp\n  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, reads the condition from the specified XML reader.\n  syntax:\n    content: public abstract void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: A <xref:System.Xml.XmlDictionaryReader> to read the condition.\n    - id: samlSerializer\n      type: System.IdentityModel.Tokens.SamlSerializer\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n  overload: System.IdentityModel.Tokens.SamlCondition.ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlCondition\n  langs:\n  - csharp\n  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  nameWithType: SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, writes the condition into the specified XML serializer.\n  syntax:\n    content: public abstract void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: A <xref:System.Xml.XmlDictionaryWriter> to write the condition.\n    - id: samlSerializer\n      type: System.IdentityModel.Tokens.SamlSerializer\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is capable of writing XML elements in a SAML assertion.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses.\n  overload: System.IdentityModel.Tokens.SamlCondition.WriteXml*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.SamlCondition.#ctor\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: SamlCondition()\n  nameWithType: SamlCondition.SamlCondition()\n  fullName: System.IdentityModel.Tokens.SamlCondition.SamlCondition()\n- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SamlCondition.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SamlCondition.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: MakeReadOnly()\n  nameWithType: SamlCondition.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly()\n- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n- uid: System.IdentityModel.Tokens.SamlSerializer\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlSerializer\n  nameWithType: SamlSerializer\n  fullName: System.IdentityModel.Tokens.SamlSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  nameWithType: SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)\n- uid: System.Xml.XmlDictionaryWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryWriter\n  nameWithType: XmlDictionaryWriter\n  fullName: System.Xml.XmlDictionaryWriter\n- uid: System.IdentityModel.Tokens.SamlCondition.#ctor*\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: SamlCondition\n  nameWithType: SamlCondition.SamlCondition\n- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly*\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SamlCondition.IsReadOnly\n- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly*\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: MakeReadOnly\n  nameWithType: SamlCondition.MakeReadOnly\n- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml*\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: ReadXml\n  nameWithType: SamlCondition.ReadXml\n- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml*\n  parent: System.IdentityModel.Tokens.SamlCondition\n  isExternal: false\n  name: WriteXml\n  nameWithType: SamlCondition.WriteXml\n"}