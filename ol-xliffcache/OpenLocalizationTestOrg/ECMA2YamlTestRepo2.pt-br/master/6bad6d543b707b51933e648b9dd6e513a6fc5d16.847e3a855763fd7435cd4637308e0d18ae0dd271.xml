{"nodes":[{"pos":[474,609],"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PnrpPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","needQuote":true,"needEscape":true,"source":"Allows security actions for <xref href=\"System.Net.PeerToPeer.PnrpPermission\"></xref> to be applied to code using declarative security."},{"pos":[622,1038],"content":"The scope of the security declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The scope of the security declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.","pos":[0,414],"nodes":[{"content":"The scope of the security declaration that is allowed depends on the &lt;xref:System.Security.Permissions.SecurityAction&gt; that is used.","pos":[0,132],"source":"The scope of the security declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used."},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[139,289]},{"content":"Security attributes are used only for declarative security.","pos":[290,349]},{"content":"For imperative security, use the corresponding permission class.","pos":[350,414]}]}]},{"pos":[2296,2486],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PnrpPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PnrpPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[2498,2695],"content":"<xref:System.Net.PeerToPeer.PnrpPermissionAttribute> works with <xref:System.Net.PeerToPeer.PnrpPermission> to allow or deny actions by the peer granted the permission and the permission attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Net.PeerToPeer.PnrpPermissionAttribute&gt; works with &lt;xref:System.Net.PeerToPeer.PnrpPermission&gt; to allow or deny actions by the peer granted the permission and the permission attribute.","pos":[0,197],"source":"<xref:System.Net.PeerToPeer.PnrpPermissionAttribute> works with <xref:System.Net.PeerToPeer.PnrpPermission> to allow or deny actions by the peer granted the permission and the permission attribute."}]},{"pos":[2910,2992],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[3520,3595],"content":"Creates and returns a new <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new <xref href=\"System.Security.IPermission\"></xref>."},{"pos":[3774,3836],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Security.IPermission\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute\n  id: PnrpPermissionAttribute\n  children:\n  - System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission\n  langs:\n  - csharp\n  name: PnrpPermissionAttribute\n  nameWithType: PnrpPermissionAttribute\n  fullName: System.Net.PeerToPeer.PnrpPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Net.PeerToPeer.PnrpPermission\"></xref> to be applied to code using declarative security.\n  remarks: \"The scope of the security declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public sealed class PnrpPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  langs:\n  - csharp\n  name: PnrpPermissionAttribute(SecurityAction)\n  nameWithType: PnrpPermissionAttribute.PnrpPermissionAttribute(SecurityAction)\n  fullName: System.Net.PeerToPeer.PnrpPermissionAttribute.PnrpPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PnrpPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  remarks: <xref:System.Net.PeerToPeer.PnrpPermissionAttribute> works with <xref:System.Net.PeerToPeer.PnrpPermission> to allow or deny actions by the peer granted the permission and the permission attribute.\n  syntax:\n    content: public PnrpPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: PnrpPermissionAttribute.CreatePermission()\n  fullName: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Creates and returns a new <xref href=\"System.Security.IPermission\"></xref>.\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A new <xref href=\"System.Security.IPermission\"></xref> object.\n  overload: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  isExternal: false\n  name: PnrpPermissionAttribute(SecurityAction)\n  nameWithType: PnrpPermissionAttribute.PnrpPermissionAttribute(SecurityAction)\n  fullName: System.Net.PeerToPeer.PnrpPermissionAttribute.PnrpPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: PnrpPermissionAttribute.CreatePermission()\n  fullName: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor*\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  isExternal: false\n  name: PnrpPermissionAttribute\n  nameWithType: PnrpPermissionAttribute.PnrpPermissionAttribute\n- uid: System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission*\n  parent: System.Net.PeerToPeer.PnrpPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: PnrpPermissionAttribute.CreatePermission\n"}