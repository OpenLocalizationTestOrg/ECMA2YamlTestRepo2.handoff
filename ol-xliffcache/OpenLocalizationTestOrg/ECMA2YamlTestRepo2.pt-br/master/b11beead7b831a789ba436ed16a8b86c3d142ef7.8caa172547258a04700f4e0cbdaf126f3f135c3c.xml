{"nodes":[{"pos":[1685,1845],"content":"Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.","pos":[0,160],"nodes":[{"content":"Represents a geographical location that is determined by latitude and longitude coordinates.","pos":[0,92]},{"content":"May also include altitude, accuracy, speed, and course information.","pos":[93,160]}]}]},{"pos":[2467,2583],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has no data fields set.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Device.Location.GeoCoordinate\"></xref> that has no data fields set."},{"pos":[2596,2842],"content":"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.       This constructor should be used for serialization.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.       This constructor should be used for serialization.","pos":[0,244],"nodes":[{"content":"All data fields are set to &lt;xref:System.Double.NaN&gt;.","pos":[0,52],"source":"All data fields are set to <xref:System.Double.NaN>."},{"content":"The new instance of &lt;xref:System.Device.Location.GeoCoordinate&gt; is equivalent to &lt;xref:System.Device.Location.GeoCoordinate.Unknown&gt;.","pos":[54,187],"source":"  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>."},{"content":"This constructor should be used for serialization.","pos":[194,244]}]}]},{"pos":[3469,3600],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from latitude and longitude data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude and longitude data."},{"pos":[3612,3697],"content":"The latitude and longitude values must correspond to an actual location on the globe.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The latitude and longitude values must correspond to an actual location on the globe.","pos":[0,85]}]},{"pos":[3859,3918],"content":"The latitude of the location. May range from -90.0 to 90.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The latitude of the location. May range from -90.0 to 90.0.","pos":[0,59],"nodes":[{"content":"The latitude of the location.","pos":[0,29]},{"content":"May range from -90.0 to 90.0.","pos":[30,59]}]}]},{"pos":[3984,4046],"content":"The longitude of the location. May range from -180.0 to 180.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The longitude of the location. May range from -180.0 to 180.0.","pos":[0,62],"nodes":[{"content":"The longitude of the location.","pos":[0,30]},{"content":"May range from -180.0 to 180.0.","pos":[31,62]}]}]},{"pos":[4231,4269],"content":"Latitude or longitude is out of range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude or longitude is out of range.","pos":[0,38]}]},{"pos":[4804,4946],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from latitude, longitude, and altitude data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, and altitude data."},{"pos":[4958,5043],"content":"The latitude and longitude values must correspond to an actual location on the globe.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The latitude and longitude values must correspond to an actual location on the globe.","pos":[0,85]}]},{"pos":[5222,5261],"content":"Latitude. May range from -90.0 to 90.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude. May range from -90.0 to 90.0.","pos":[0,39],"nodes":[{"content":"Latitude.","pos":[0,9]},{"content":"May range from -90.0 to 90.0.","pos":[10,39]}]}]},{"pos":[5327,5368],"content":"Longitude. May range from -180.0 to 180.0","needQuote":true,"needEscape":true,"nodes":[{"content":"Longitude. May range from -180.0 to 180.0","pos":[0,41],"nodes":[{"content":"Longitude.","pos":[0,10]},{"content":"May range from -180.0 to 180.0","pos":[11,41]}]}]},{"pos":[5433,5523],"content":"The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.","pos":[0,90],"nodes":[{"content":"The altitude in meters.","pos":[0,23]},{"content":"May be negative, 0, positive, or &lt;xref:System.Double&gt;, if unknown.","pos":[24,90],"source":" May be negative, 0, positive, or <xref:System.Double>, if unknown."}]}]},{"pos":[5708,5796],"content":"<ph id=\"ph1\">&lt;code&gt;latitude&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;longitude&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;altitude&lt;/code&gt;</ph> is out of range.","needQuote":true,"needEscape":true,"source":"<code>latitude</code>, <code>longitude</code>, or <code>altitude</code> is out of range."},{"pos":[6527,6719],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course."},{"pos":[6979,7038],"content":"The latitude of the location. May range from -90.0 to 90.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The latitude of the location. May range from -90.0 to 90.0.","pos":[0,59],"nodes":[{"content":"The latitude of the location.","pos":[0,29]},{"content":"May range from -90.0 to 90.0.","pos":[30,59]}]}]},{"pos":[7104,7166],"content":"The longitude of the location. May range from -180.0 to 180.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The longitude of the location. May range from -180.0 to 180.0.","pos":[0,62],"nodes":[{"content":"The longitude of the location.","pos":[0,30]},{"content":"May range from -180.0 to 180.0.","pos":[31,62]}]}]},{"pos":[7231,7321],"content":"The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.","pos":[0,90],"nodes":[{"content":"The altitude in meters.","pos":[0,23]},{"content":"May be negative, 0, positive, or &lt;xref:System.Double&gt;, if unknown.","pos":[24,90],"source":" May be negative, 0, positive, or <xref:System.Double>, if unknown."}]}]},{"pos":[7396,7665],"content":"The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*> property will be set to <xref:System.Double.NaN>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*> property will be set to <xref:System.Double.NaN>.","pos":[0,269],"nodes":[{"content":"The accuracy of the latitude and longitude coordinates, in meters.","pos":[0,66]},{"content":"Must be greater than or equal to 0.","pos":[67,102]},{"content":"If a value of 0 is supplied to this constructor, the &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*&gt; property will be set to &lt;xref:System.Double.NaN&gt;.","pos":[103,269],"source":" If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*> property will be set to <xref:System.Double.NaN>."}]}]},{"pos":[7738,7979],"content":"The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*> property will be set to <xref:System.Double.NaN>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*> property will be set to <xref:System.Double.NaN>.","pos":[0,241],"nodes":[{"content":"The accuracy of the altitude, in meters.","pos":[0,40]},{"content":"Must be greater than or equal to 0.","pos":[41,76]},{"content":"If a value of 0 is supplied to this constructor, the &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*&gt; property will be set to &lt;xref:System.Double.NaN&gt;.","pos":[77,241],"source":" If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*> property will be set to <xref:System.Double.NaN>."}]}]},{"pos":[8041,8198],"content":"The speed measured in meters per second. May be negative, 0, positive, or <xref:System.Double>, if unknown.  A negative speed can indicate moving in reverse.","needQuote":true,"needEscape":true,"nodes":[{"content":"The speed measured in meters per second. May be negative, 0, positive, or <xref:System.Double>, if unknown.  A negative speed can indicate moving in reverse.","pos":[0,157],"nodes":[{"content":"The speed measured in meters per second.","pos":[0,40]},{"content":"May be negative, 0, positive, or &lt;xref:System.Double&gt;, if unknown.","pos":[41,107],"source":" May be negative, 0, positive, or <xref:System.Double>, if unknown."},{"content":"A negative speed can indicate moving in reverse.","pos":[109,157]}]}]},{"pos":[8261,8428],"content":"The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref:System.Double>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref:System.Double>.","pos":[0,167],"nodes":[{"content":"The direction of travel, rather than orientation.","pos":[0,49]},{"content":"This parameter is measured in degrees relative to true north.","pos":[50,111]},{"content":"Must range from 0 to 360.0, or be &lt;xref:System.Double&gt;.","pos":[112,167],"source":" Must range from 0 to 360.0, or be <xref:System.Double>."}]}]},{"pos":[8613,8763],"content":"<ph id=\"ph1\">&lt;code&gt;latitude&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;longitude&lt;/code&gt;</ph>, <ph id=\"ph3\">&lt;code&gt;horizontalAccuracy&lt;/code&gt;</ph>, <ph id=\"ph4\">&lt;code&gt;verticalAccuracy,&lt;/code&gt;</ph> or <ph id=\"ph5\">&lt;code&gt;course&lt;/code&gt;</ph> is out of range.","needQuote":true,"needEscape":true,"source":"<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range."},{"pos":[9132,9226],"content":"Gets the altitude of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in meters.","needQuote":true,"needEscape":true,"source":"Gets the altitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."},{"pos":[9238,9282],"content":"The altitude is given relative to sea level.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The altitude is given relative to sea level.","pos":[0,44]}]},{"pos":[9400,9424],"content":"The altitude, in meters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The altitude, in meters.","pos":[0,24]}]},{"pos":[9859,9919],"content":"Gets or sets the heading in degrees, relative to true north.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the heading in degrees, relative to true north.","pos":[0,60]}]},{"pos":[9931,10029],"content":"The valid range includes values from 0.0 to 360.0, and <ph id=\"ph1\">`Double.NaN`</ph> if the heading is not defined.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The valid range includes values from 0.0 to 360.0, and `Double.NaN` if the heading is not defined."},{"pos":[10582,10629],"content":"The heading in degrees, relative to true north.","needQuote":true,"needEscape":true,"nodes":[{"content":"The heading in degrees, relative to true north.","pos":[0,47]}]},{"pos":[10815,10853],"content":"Course is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Course is set outside the valid range.","pos":[0,38]}]},{"pos":[11331,11485],"content":"Determines if the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equivalent to the parameter, based solely on latitude and longitude.","needQuote":true,"needEscape":true,"source":"Determines if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object is equivalent to the parameter, based solely on latitude and longitude."},{"pos":[11497,11948],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent &lt;xref:System.Device.Location.GeoCoordinate&gt; objects have the same &lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt; and &lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt; properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;, &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;, and &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt; properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]},{"pos":[12137,12239],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare to the calling object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object to compare to the calling object."},{"pos":[12298,12517],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13002,13208],"content":"Determines if a specified <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, based solely on latitude and longitude.","needQuote":true,"needEscape":true,"source":"Determines if a specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref> is equal to the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, based solely on latitude and longitude."},{"pos":[13220,13671],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent &lt;xref:System.Device.Location.GeoCoordinate&gt; objects have the same &lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt; and &lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt; properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;, &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;, and &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt; properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]},{"pos":[13812,13899],"content":"The object to compare the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to.","needQuote":true,"needEscape":true,"source":"The object to compare the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to."},{"pos":[13958,14179],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are equal; otherwise,<bpt id=\"p3\">&lt;xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>."},{"pos":[14766,14999],"content":"Returns the distance between the latitude and longitude coordinates that are specified by this <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and another specified <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the distance between the latitude and longitude coordinates that are specified by this <xref href=\"System.Device.Location.GeoCoordinate\"></xref> and another specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."},{"pos":[15012,15332],"content":"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.       Altitude is not used to calculate the distance.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.       Altitude is not used to calculate the distance.","pos":[0,318],"nodes":[{"content":"The Haversine formula is used to calculate the distance.","pos":[0,56]},{"content":"The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid.","pos":[58,176]},{"content":"For long distances, the Haversine formula introduces an error of less than 0.1 percent.","pos":[177,264]},{"content":"Altitude is not used to calculate the distance.","pos":[271,318]}]}]},{"pos":[15531,15639],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the location to calculate the distance to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> for the location to calculate the distance to."},{"pos":[15697,15749],"content":"The distance between the two coordinates, in meters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance between the two coordinates, in meters.","pos":[0,52]}]},{"pos":[16218,16310],"content":"Serves as a hash function for the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Serves as a hash function for the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."},{"pos":[16322,16870],"content":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,548],"nodes":[{"content":"&lt;xref:System.Device.Location.GeoCoordinate&gt; objects that are equivalent have the same hash code.","pos":[0,96],"source":"<xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code."},{"content":"Equivalent &lt;xref:System.Device.Location.GeoCoordinate&gt; objects have the same &lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt; and &lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt; properties.","pos":[97,302],"source":" Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;, &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;, and &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt; properties are not used to determine equivalency.","pos":[303,548],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]},{"pos":[17005,17091],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."},{"pos":[17589,17735],"content":"Gets or sets the accuracy of the latitude and longitude that is given by the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in meters.","needQuote":true,"needEscape":true,"source":"Gets or sets the accuracy of the latitude and longitude that is given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."},{"pos":[17747,17988],"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","pos":[0,241],"nodes":[{"content":"The accuracy can be considered the radius of certainty of the latitude and longitude data.","pos":[0,90]},{"content":"A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.","pos":[92,241]}]}]},{"pos":[18116,18170],"content":"The accuracy of the latitude and longitude, in meters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accuracy of the latitude and longitude, in meters.","pos":[0,54]}]},{"pos":[18368,18418],"content":"HorizontalAccuracy is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"HorizontalAccuracy is set outside the valid range.","pos":[0,50]}]},{"pos":[18792,18934],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> does not contain latitude or longitude data.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data."},{"pos":[18946,19105],"content":"A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Device.Location.GeoCoordinate&gt; that does not contain latitude or longitude data is equal to &lt;xref:System.Device.Location.GeoCoordinate.Unknown&gt;.","pos":[0,159],"source":"A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>."}]},{"pos":[19833,20078],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> does not contain latitude or longitude data; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20524,20615],"content":"Gets or sets the latitude of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the latitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."},{"pos":[20627,20817],"content":"Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.","pos":[0,190],"nodes":[{"content":"Latitude can range from -90.0 to 90.0.","pos":[0,38]},{"content":"Latitude is measured in degrees north or south from the equator.","pos":[39,103]},{"content":"Positive values are north of the equator and negative values are south of the equator.","pos":[104,190]}]}]},{"pos":[21322,21347],"content":"Latitude of the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude of the location.","pos":[0,25]}]},{"pos":[21535,21575],"content":"Latitude is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude is set outside the valid range.","pos":[0,40]}]},{"pos":[21949,22041],"content":"Gets or sets the longitude of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the longitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>."},{"pos":[22053,22267],"content":"The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.","pos":[0,214],"nodes":[{"content":"The longitude can range from -180.0 to 180.0.","pos":[0,45]},{"content":"Longitude is measured in degrees east or west of the prime meridian.","pos":[46,114]},{"content":"Negative values are west of the prime meridian, and positive values are east of the prime meridian.","pos":[115,214]}]}]},{"pos":[22773,22787],"content":"The longitude.","needQuote":true,"needEscape":true,"nodes":[{"content":"The longitude.","pos":[0,14]}]},{"pos":[22976,23017],"content":"Longitude is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Longitude is set outside the valid range.","pos":[0,41]}]},{"pos":[23638,23754],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects refer to the same location.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects refer to the same location."},{"pos":[23766,24217],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent &lt;xref:System.Device.Location.GeoCoordinate&gt; objects have the same &lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt; and &lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt; properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;, &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;, and &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt; properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]},{"pos":[24460,24539],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."},{"pos":[24624,24704],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."},{"pos":[24763,25005],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are determined to be equivalent; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25715,25838],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects correspond to different locations.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects correspond to different locations."},{"pos":[25850,26301],"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.","pos":[0,451],"nodes":[{"content":"Equivalent &lt;xref:System.Device.Location.GeoCoordinate&gt; objects have the same &lt;xref:System.Device.Location.GeoCoordinate.Latitude%2A&gt; and &lt;xref:System.Device.Location.GeoCoordinate.Longitude%2A&gt; properties.","pos":[0,205],"source":"Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties."},{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.Altitude%2A&gt;, &lt;xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A&gt;, and &lt;xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A&gt; properties are not used to determine equivalency.","pos":[206,451],"source":" The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency."}]}]},{"pos":[26546,26625],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."},{"pos":[26710,26790],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare."},{"pos":[26849,27090],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the <bpt id=\"p2\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are determined to be different; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be different; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27525,27569],"content":"Gets or sets the speed in meters per second.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the speed in meters per second.","pos":[0,44]}]},{"pos":[28135,28240],"content":"The speed in meters per second. The speed must be greater than or equal to zero, or <xref:System.Double>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The speed in meters per second. The speed must be greater than or equal to zero, or <xref:System.Double>.","pos":[0,105],"nodes":[{"content":"The speed in meters per second.","pos":[0,31]},{"content":"The speed must be greater than or equal to zero, or &lt;xref:System.Double&gt;.","pos":[32,105],"source":" The speed must be greater than or equal to zero, or <xref:System.Double>."}]}]},{"pos":[28423,28460],"content":"Speed is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Speed is set outside the valid range.","pos":[0,37]}]},{"pos":[28833,28891],"content":"Returns a string that contains the latitude and longitude.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that contains the latitude and longitude.","pos":[0,58]}]},{"pos":[28903,29075],"content":"The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.","pos":[0,172],"nodes":[{"content":"The string representation returned by this method is intended only for debugging use.","pos":[0,85]},{"content":"This method does not return any locale-specific formatting for latitude and longitude.","pos":[86,172]}]}]},{"pos":[29211,29283],"content":"A string that contains the latitude and longitude, separated by a comma.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the latitude and longitude, separated by a comma.","pos":[0,72]}]},{"pos":[29720,29845],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has unknown latitude and longitude fields.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object that has unknown latitude and longitude fields."},{"pos":[29857,30020],"content":"The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Device.Location.GeoCoordinate.IsUnknown%2A&gt; property can be used to verify whether a &lt;xref:System.Device.Location.GeoCoordinate&gt; contains no data.","pos":[0,163],"source":"The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data."}]},{"pos":[30763,30775],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31201,31325],"content":"Gets or sets the accuracy of the altitude given by the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in meters.","needQuote":true,"needEscape":true,"source":"Gets or sets the accuracy of the altitude given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters."},{"pos":[31451,31491],"content":"The accuracy of the altitude, in meters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The accuracy of the altitude, in meters.","pos":[0,40]}]},{"pos":[31687,31735],"content":"VerticalAccuracy is set outside the valid range.","needQuote":true,"needEscape":true,"nodes":[{"content":"VerticalAccuracy is set outside the valid range.","pos":[0,48]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.GeoCoordinate\n  id: GeoCoordinate\n  children:\n  - System.Device.Location.GeoCoordinate.#ctor\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  - System.Device.Location.GeoCoordinate.Altitude\n  - System.Device.Location.GeoCoordinate.Course\n  - System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.Equals(System.Object)\n  - System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.GetHashCode\n  - System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  - System.Device.Location.GeoCoordinate.IsUnknown\n  - System.Device.Location.GeoCoordinate.Latitude\n  - System.Device.Location.GeoCoordinate.Longitude\n  - System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  - System.Device.Location.GeoCoordinate.Speed\n  - System.Device.Location.GeoCoordinate.ToString\n  - System.Device.Location.GeoCoordinate.Unknown\n  - System.Device.Location.GeoCoordinate.VerticalAccuracy\n  langs:\n  - csharp\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n  type: Class\n  summary: Represents a geographical location that is determined by latitude and longitude coordinates. May also include altitude, accuracy, speed, and course information.\n  syntax:\n    content: 'public class GeoCoordinate : IEquatable<System.Device.Location.GeoCoordinate>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Device.Location.GeoCoordinate>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.#ctor\n  id: '#ctor'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate()\n  nameWithType: GeoCoordinate.GeoCoordinate()\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of <xref href=\"System.Device.Location.GeoCoordinate\"></xref> that has no data fields set.\n  remarks: \"All data fields are set to <xref:System.Double.NaN>.  The new instance of <xref:System.Device.Location.GeoCoordinate> is equivalent to <xref:System.Device.Location.GeoCoordinate.Unknown>.  \\n  \\n This constructor should be used for serialization.\"\n  syntax:\n    content: public GeoCoordinate ();\n    parameters: []\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude and longitude data.\n  remarks: The latitude and longitude values must correspond to an actual location on the globe.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: The latitude of the location. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: The longitude of the location. May range from -180.0 to 180.0.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Latitude or longitude is out of range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double,Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, and altitude data.\n  remarks: The latitude and longitude values must correspond to an actual location on the globe.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude, double altitude);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: Latitude. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: Longitude. May range from -180.0 to 180.0\n    - id: altitude\n      type: System.Double\n      description: The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>latitude</code>, <code>longitude</code>, or <code>altitude</code> is out of range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed, and course.\n  syntax:\n    content: public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);\n    parameters:\n    - id: latitude\n      type: System.Double\n      description: The latitude of the location. May range from -90.0 to 90.0.\n    - id: longitude\n      type: System.Double\n      description: The longitude of the location. May range from -180.0 to 180.0.\n    - id: altitude\n      type: System.Double\n      description: The altitude in meters. May be negative, 0, positive, or <xref:System.Double>, if unknown.\n    - id: horizontalAccuracy\n      type: System.Double\n      description: The accuracy of the latitude and longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*> property will be set to <xref:System.Double.NaN>.\n    - id: verticalAccuracy\n      type: System.Double\n      description: The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*> property will be set to <xref:System.Double.NaN>.\n    - id: speed\n      type: System.Double\n      description: The speed measured in meters per second. May be negative, 0, positive, or <xref:System.Double>, if unknown.  A negative speed can indicate moving in reverse.\n    - id: course\n      type: System.Double\n      description: The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <xref:System.Double>.\n  overload: System.Device.Location.GeoCoordinate.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Altitude\n  id: Altitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n  fullName: System.Device.Location.GeoCoordinate.Altitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets the altitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  remarks: The altitude is given relative to sea level.\n  syntax:\n    content: public double Altitude { get; set; }\n    return:\n      type: System.Double\n      description: The altitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.Altitude*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Course\n  id: Course\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Course\n  nameWithType: GeoCoordinate.Course\n  fullName: System.Device.Location.GeoCoordinate.Course\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the heading in degrees, relative to true north.\n  remarks: The valid range includes values from 0.0 to 360.0, and `Double.NaN` if the heading is not defined.\n  example:\n  - \"The following example prints the Course and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]\"\n  syntax:\n    content: public double Course { get; set; }\n    return:\n      type: System.Double\n      description: The heading in degrees, relative to true north.\n  overload: System.Device.Location.GeoCoordinate.Course*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Course is set outside the valid range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  id: Equals(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Equals(GeoCoordinate)\n  nameWithType: GeoCoordinate.Equals(GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object is equivalent to the parameter, based solely on latitude and longitude.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public bool Equals (System.Device.Location.GeoCoordinate other);\n    parameters:\n    - id: other\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object to compare to the calling object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: GeoCoordinate.Equals(Object)\n  fullName: System.Device.Location.GeoCoordinate.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines if a specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref> is equal to the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, based solely on latitude and longitude.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are equal; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  id: GetDistanceTo(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GetDistanceTo(GeoCoordinate)\n  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Returns the distance between the latitude and longitude coordinates that are specified by this <xref href=\"System.Device.Location.GeoCoordinate\"></xref> and another specified <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: \"The Haversine formula is used to calculate the distance.  The Haversine formula accounts for the curvature of the earth, but assumes a spherical earth rather than an ellipsoid. For long distances, the Haversine formula introduces an error of less than 0.1 percent.  \\n  \\n Altitude is not used to calculate the distance.\"\n  syntax:\n    content: public double GetDistanceTo (System.Device.Location.GeoCoordinate other);\n    parameters:\n    - id: other\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> for the location to calculate the distance to.\n    return:\n      type: System.Double\n      description: The distance between the two coordinates, in meters.\n  overload: System.Device.Location.GeoCoordinate.GetDistanceTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.GetHashCode\n  id: GetHashCode\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: GeoCoordinate.GetHashCode()\n  fullName: System.Device.Location.GeoCoordinate.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Serves as a hash function for the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: <xref:System.Device.Location.GeoCoordinate> objects that are equivalent have the same hash code. Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  id: HorizontalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the accuracy of the latitude and longitude that is given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  remarks: The accuracy can be considered the radius of certainty of the latitude and longitude data.  A circular area that is formed with the accuracy as the radius and the latitude and longitude coordinates as the center contains the actual location.\n  syntax:\n    content: public double HorizontalAccuracy { get; set; }\n    return:\n      type: System.Double\n      description: The accuracy of the latitude and longitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.HorizontalAccuracy*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: HorizontalAccuracy is set outside the valid range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.IsUnknown\n  id: IsUnknown\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n  fullName: System.Device.Location.GeoCoordinate.IsUnknown\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets a value that indicates whether the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data.\n  remarks: A <xref:System.Device.Location.GeoCoordinate> that does not contain latitude or longitude data is equal to <xref:System.Device.Location.GeoCoordinate.Unknown>.\n  example:\n  - \"The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printing out its latitude and longitude.  \\n  \\n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> does not contain latitude or longitude data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.IsUnknown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Latitude\n  id: Latitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n  fullName: System.Device.Location.GeoCoordinate.Latitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the latitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: Latitude can range from -90.0 to 90.0. Latitude is measured in degrees north or south from the equator. Positive values are north of the equator and negative values are south of the equator.\n  example:\n  - \"The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]\"\n  syntax:\n    content: public double Latitude { get; set; }\n    return:\n      type: System.Double\n      description: Latitude of the location.\n  overload: System.Device.Location.GeoCoordinate.Latitude*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Latitude is set outside the valid range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Longitude\n  id: Longitude\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n  fullName: System.Device.Location.GeoCoordinate.Longitude\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the longitude of the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>.\n  remarks: The longitude can range from -180.0 to 180.0. Longitude is measured in degrees east or west of the prime meridian. Negative values are west of the prime meridian, and positive values are east of the prime meridian.\n  example:\n  - \"The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]\"\n  syntax:\n    content: public double Longitude { get; set; }\n    return:\n      type: System.Double\n      description: The longitude.\n  overload: System.Device.Location.GeoCoordinate.Longitude*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Longitude is set outside the valid range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  id: op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: op_Equality(GeoCoordinate,GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)\n  type: Operator\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects refer to the same location.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public static bool op_Equality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);\n    parameters:\n    - id: left\n      type: System.Device.Location.GeoCoordinate\n      description: The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    - id: right\n      type: System.Device.Location.GeoCoordinate\n      description: The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  id: op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: op_Inequality(GeoCoordinate,GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)\n  type: Operator\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Determines whether two <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects correspond to different locations.\n  remarks: Equivalent <xref:System.Device.Location.GeoCoordinate> objects have the same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> and <xref:System.Device.Location.GeoCoordinate.Longitude%2A> properties. The <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, and <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> properties are not used to determine equivalency.\n  syntax:\n    content: public static bool op_Inequality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);\n    parameters:\n    - id: left\n      type: System.Device.Location.GeoCoordinate\n      description: The first <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    - id: right\n      type: System.Device.Location.GeoCoordinate\n      description: The second <xref href=\"System.Device.Location.GeoCoordinate\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref href=\"System.Device.Location.GeoCoordinate\"></xref> objects are determined to be different; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Device.Location.GeoCoordinate.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Speed\n  id: Speed\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n  fullName: System.Device.Location.GeoCoordinate.Speed\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the speed in meters per second.\n  remarks: ''\n  example:\n  - \"The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and Speed properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \\n  \\n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]\"\n  syntax:\n    content: public double Speed { get; set; }\n    return:\n      type: System.Double\n      description: The speed in meters per second. The speed must be greater than or equal to zero, or <xref:System.Double>.\n  overload: System.Device.Location.GeoCoordinate.Speed*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: System.ArgumentOutOfRangeException\n    description: Speed is set outside the valid range.\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.ToString\n  id: ToString\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: GeoCoordinate.ToString()\n  fullName: System.Device.Location.GeoCoordinate.ToString()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Returns a string that contains the latitude and longitude.\n  remarks: The string representation returned by this method is intended only for debugging use. This method does not return any locale-specific formatting for latitude and longitude.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the latitude and longitude, separated by a comma.\n  overload: System.Device.Location.GeoCoordinate.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.Unknown\n  id: Unknown\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: GeoCoordinate.Unknown\n  fullName: System.Device.Location.GeoCoordinate.Unknown\n  type: Field\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a <xref href=\"System.Device.Location.GeoCoordinate\"></xref> object that has unknown latitude and longitude fields.\n  remarks: The <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> property can be used to verify whether a <xref:System.Device.Location.GeoCoordinate> contains no data.\n  example:\n  - \"The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is Unknown before printingout its latitude and longitude.  \\n  \\n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]\"\n  syntax:\n    content: public static readonly System.Device.Location.GeoCoordinate Unknown;\n    return:\n      type: System.Device.Location.GeoCoordinate\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy\n  id: VerticalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  langs:\n  - csharp\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the accuracy of the altitude given by the <xref href=\"System.Device.Location.GeoCoordinate\"></xref>, in meters.\n  syntax:\n    content: public double VerticalAccuracy { get; set; }\n    return:\n      type: System.Double\n      description: The accuracy of the altitude, in meters.\n  overload: System.Device.Location.GeoCoordinate.VerticalAccuracy*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: VerticalAccuracy is set outside the valid range.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Device.Location.GeoCoordinate.#ctor\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate()\n  nameWithType: GeoCoordinate.GeoCoordinate()\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double,Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)\n- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)\n- uid: System.Device.Location.GeoCoordinate.Altitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n  fullName: System.Device.Location.GeoCoordinate.Altitude\n- uid: System.Device.Location.GeoCoordinate.Course\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Course\n  nameWithType: GeoCoordinate.Course\n  fullName: System.Device.Location.GeoCoordinate.Course\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals(GeoCoordinate)\n  nameWithType: GeoCoordinate.Equals(GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.GeoCoordinate\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GeoCoordinate.Equals(Object)\n  fullName: System.Device.Location.GeoCoordinate.Equals(Object)\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetDistanceTo(GeoCoordinate)\n  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.GetHashCode\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GeoCoordinate.GetHashCode()\n  fullName: System.Device.Location.GeoCoordinate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy\n- uid: System.Device.Location.GeoCoordinate.IsUnknown\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n  fullName: System.Device.Location.GeoCoordinate.IsUnknown\n- uid: System.Device.Location.GeoCoordinate.Latitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n  fullName: System.Device.Location.GeoCoordinate.Latitude\n- uid: System.Device.Location.GeoCoordinate.Longitude\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n  fullName: System.Device.Location.GeoCoordinate.Longitude\n- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Equality(GeoCoordinate,GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Inequality(GeoCoordinate,GeoCoordinate)\n  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)\n  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)\n- uid: System.Device.Location.GeoCoordinate.Speed\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n  fullName: System.Device.Location.GeoCoordinate.Speed\n- uid: System.Device.Location.GeoCoordinate.ToString\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: ToString()\n  nameWithType: GeoCoordinate.ToString()\n  fullName: System.Device.Location.GeoCoordinate.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Device.Location.GeoCoordinate.Unknown\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Unknown\n  nameWithType: GeoCoordinate.Unknown\n  fullName: System.Device.Location.GeoCoordinate.Unknown\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy\n- uid: System.Device.Location.GeoCoordinate.#ctor*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate.GeoCoordinate\n- uid: System.Device.Location.GeoCoordinate.Altitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Altitude\n  nameWithType: GeoCoordinate.Altitude\n- uid: System.Device.Location.GeoCoordinate.Course*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Course\n  nameWithType: GeoCoordinate.Course\n- uid: System.Device.Location.GeoCoordinate.Equals*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Equals\n  nameWithType: GeoCoordinate.Equals\n- uid: System.Device.Location.GeoCoordinate.GetDistanceTo*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetDistanceTo\n  nameWithType: GeoCoordinate.GetDistanceTo\n- uid: System.Device.Location.GeoCoordinate.GetHashCode*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: GetHashCode\n  nameWithType: GeoCoordinate.GetHashCode\n- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: HorizontalAccuracy\n  nameWithType: GeoCoordinate.HorizontalAccuracy\n- uid: System.Device.Location.GeoCoordinate.IsUnknown*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: IsUnknown\n  nameWithType: GeoCoordinate.IsUnknown\n- uid: System.Device.Location.GeoCoordinate.Latitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Latitude\n  nameWithType: GeoCoordinate.Latitude\n- uid: System.Device.Location.GeoCoordinate.Longitude*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Longitude\n  nameWithType: GeoCoordinate.Longitude\n- uid: System.Device.Location.GeoCoordinate.op_Equality*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Equality\n  nameWithType: GeoCoordinate.op_Equality\n- uid: System.Device.Location.GeoCoordinate.op_Inequality*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: op_Inequality\n  nameWithType: GeoCoordinate.op_Inequality\n- uid: System.Device.Location.GeoCoordinate.Speed*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: Speed\n  nameWithType: GeoCoordinate.Speed\n- uid: System.Device.Location.GeoCoordinate.ToString*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: ToString\n  nameWithType: GeoCoordinate.ToString\n- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy*\n  parent: System.Device.Location.GeoCoordinate\n  isExternal: false\n  name: VerticalAccuracy\n  nameWithType: GeoCoordinate.VerticalAccuracy\n"}