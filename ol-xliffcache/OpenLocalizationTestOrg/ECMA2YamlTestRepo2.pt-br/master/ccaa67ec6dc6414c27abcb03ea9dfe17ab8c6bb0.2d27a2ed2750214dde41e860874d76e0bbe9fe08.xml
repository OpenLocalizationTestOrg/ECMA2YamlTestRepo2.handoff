{"nodes":[{"pos":[463,562],"content":"Specifies what should be done when a directory that is to be deleted contains files or directories.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies what should be done when a directory that is to be deleted contains files or directories.","pos":[0,99]}]},{"pos":[574,690],"content":"This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This enumeration is used with the &lt;xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A&gt; method.","pos":[0,116],"source":"This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method."}]},{"pos":[1253,1324],"content":"Delete the contents of the directory along with the directory. Default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Delete the contents of the directory along with the directory. Default.","pos":[0,71],"nodes":[{"content":"Delete the contents of the directory along with the directory.","pos":[0,62]},{"content":"Default.","pos":[63,71]}]}]},{"pos":[1460,1472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1999,2203],"content":"Throw an <xref:System.IO.IOException> if the directory is not empty. The <xref uid=\"langword_csharp_Data\" name=\"Data\" href=\"\"></xref> property of the exception lists the file(s) that could not be deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throw an &lt;xref:System.IO.IOException&gt; if the directory is not empty.","pos":[0,68],"source":"Throw an <xref:System.IO.IOException> if the directory is not empty."},{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Data\" name=\"Data\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the exception lists the file(s) that could not be deleted.","pos":[69,204],"source":" The <xref uid=\"langword_csharp_Data\" name=\"Data\" href=\"\"></xref> property of the exception lists the file(s) that could not be deleted."}]},{"pos":[2346,2358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  id: DeleteDirectoryOption\n  children:\n  - Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  - Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  langs:\n  - csharp\n  name: DeleteDirectoryOption\n  nameWithType: DeleteDirectoryOption\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  type: Enum\n  summary: Specifies what should be done when a directory that is to be deleted contains files or directories.\n  remarks: This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.\n  syntax:\n    content: public enum DeleteDirectoryOption\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  id: DeleteAllContents\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  langs:\n  - csharp\n  name: DeleteAllContents\n  nameWithType: DeleteDirectoryOption.DeleteAllContents\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  type: Field\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Delete the contents of the directory along with the directory. Default.\n  syntax:\n    content: DeleteAllContents\n    return:\n      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  id: ThrowIfDirectoryNonEmpty\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  langs:\n  - csharp\n  name: ThrowIfDirectoryNonEmpty\n  nameWithType: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  type: Field\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Throw an <xref:System.IO.IOException> if the directory is not empty. The <xref uid=\"langword_csharp_Data\" name=\"Data\" href=\"\"></xref> property of the exception lists the file(s) that could not be deleted.\n  syntax:\n    content: ThrowIfDirectoryNonEmpty\n    return:\n      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  isExternal: false\n  name: DeleteAllContents\n  nameWithType: DeleteDirectoryOption.DeleteAllContents\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  parent: Microsoft.VisualBasic.FileIO\n  isExternal: false\n  name: DeleteDirectoryOption\n  nameWithType: DeleteDirectoryOption\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  isExternal: false\n  name: ThrowIfDirectoryNonEmpty\n  nameWithType: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n"}