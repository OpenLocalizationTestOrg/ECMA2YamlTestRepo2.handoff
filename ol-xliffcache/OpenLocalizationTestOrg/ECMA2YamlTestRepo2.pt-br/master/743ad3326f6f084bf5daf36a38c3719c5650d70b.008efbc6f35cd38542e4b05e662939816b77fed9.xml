{"nodes":[{"pos":[3001,3098],"content":"Retrieves and imports metadata as <xref:System.ServiceModel.Description.ServiceEndpoint> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves and imports metadata as &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects.","pos":[0,97],"source":"Retrieves and imports metadata as <xref:System.ServiceModel.Description.ServiceEndpoint> objects."}]},{"pos":[3110,3533],"content":"Use the MetadataResolver class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the MetadataResolver class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.","pos":[0,423],"nodes":[{"content":"Use the MetadataResolver class to quickly import endpoints for a service from metadata.","pos":[0,87]},{"content":"This class downloads and converts metadata into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects.","pos":[88,199],"source":" This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects."},{"content":"To download metadata and process that information as a &lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt;, see &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;.","pos":[200,423],"source":" To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>."}]}]},{"pos":[5330,5556],"content":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address and asynchronous state and delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts, using the specified address and asynchronous state and delegate.","pos":[0,226],"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address and asynchronous state and delegate."}]},{"pos":[5569,6342],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata and the default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[357,583],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[589,704],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[705,768]}]},{"pos":[6759,6816],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[6902,6923],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[6995,7064],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[7131,7179],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[7243,7325],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[7517,7616],"content":"The address, contract, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7711,7946],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[8684,8908],"content":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and asynchronous state and delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract using the specified address and asynchronous state and delegate.","pos":[0,224],"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and asynchronous state and delegate."}]},{"pos":[8921,10916],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.       This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata and the default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[357,583],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[589,704],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[705,768]},{"content":"This method requires that you specify a contract type.","pos":[775,829]},{"content":"You can specify the contract by declaring the service interface in the client code or by using a <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client generated by Svcutil.exe.","pos":[830,1018],"source":" You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe."},{"content":"If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client.","pos":[1019,1215],"source":" If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client."},{"content":"If you do not, an exception is thrown.","pos":[1216,1254]},{"content":"For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().","pos":[1255,1386]},{"content":"You create a client application and generate <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client.","pos":[1387,1498],"source":" You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client."},{"content":"You then add a method to ICalculator called Echo().","pos":[1499,1550]},{"content":"If you then write an application that calls &lt;xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29&gt; without generating a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client you get the following exception.","pos":[1551,1837],"source":" If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception."},{"content":"<ph id=\"ph1\">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`</ph>.","pos":[1844,1986],"source":"`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."}]},{"pos":[11164,11220],"content":"The contract for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]},{"pos":[11306,11327],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[11399,11468],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[11535,11583],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[11647,11729],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[11921,12020],"content":"The address, contract, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13181,13481],"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts, using the specified address, <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, asynchronous state and delegate.","needQuote":true,"needEscape":true,"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, asynchronous state and delegate."},{"pos":[13494,14114],"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[0,197],"source":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[204,430],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[436,551],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[552,615]}]},{"pos":[14594,14651],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[14737,14758],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[14862,14972],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to retrieve the metadata.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."},{"pos":[15044,15113],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[15180,15228],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[15292,15374],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[15566,15673],"content":"The address, contract, client, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, client, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15768,15947],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[17042,17352],"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts, using the specified address, <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value, asynchronous state and delegate.","needQuote":true,"needEscape":true,"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref> value, asynchronous state and delegate."},{"pos":[17365,17937],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[156,382],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[388,503],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[504,567]}]},{"pos":[18387,18444],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[18505,18526],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[18632,18654],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[18726,18795],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[18862,18910],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[18974,19056],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[19248,19347],"content":"The address, contract, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19442,19621],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[20472,20775],"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract, using the specified address, <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, asynchronous state and delegate.","needQuote":true,"needEscape":true,"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state and delegate."},{"pos":[20788,21360],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[156,382],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[388,503],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[504,567]}]},{"pos":[21641,21697],"content":"The contract for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]},{"pos":[21758,21779],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[21885,21907],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[21979,22048],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[22115,22163],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[22227,22309],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[22501,22600],"content":"The address, contract, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23874,24256],"content":"Begins an asynchronous call that resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts, using the specified address, <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, asynchronous state, and delegate.","needQuote":true,"needEscape":true,"source":"Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state, and delegate."},{"pos":[24269,24683],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[232,347],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[348,411]}]},{"pos":[25196,25253],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[25314,25335],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[25441,25463],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[25567,25677],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to retrieve the metadata.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."},{"pos":[25749,25818],"content":"The asynchronous callback delegate invoked when the call is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]},{"pos":[25885,25933],"content":"The state associated with the asynchronous call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]},{"pos":[25997,26079],"content":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous resolve operation.","pos":[0,82],"source":"The <xref:System.IAsyncResult> that references the asynchronous resolve operation."}]},{"pos":[26271,26370],"content":"The address, contract, or callback is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26465,26644],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[27159,27241],"content":"Completes an asynchronous call to resolve metadata into a collection of endpoints.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous call to resolve metadata into a collection of endpoints.","pos":[0,82]}]},{"pos":[27253,27373],"content":"Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Ends an asynchronous call to one of the &lt;xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A&gt; methods.","pos":[0,120],"source":"Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods."}]},{"pos":[27587,27739],"content":"The <xref:System.IAsyncResult> object that was received from a call to the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; object that was received from a call to the &lt;xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*&gt; method.","pos":[0,152],"source":"The <xref:System.IAsyncResult> object that was received from a call to the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> method."}]},{"pos":[27841,27964],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the endpoints contained in the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the endpoints contained in the metadata.","pos":[0,123],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the endpoints contained in the metadata."}]},{"pos":[28878,29043],"content":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts using the specified metadata address.","pos":[0,165],"source":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified metadata address."}]},{"pos":[29056,29829],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata and the default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[357,583],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[589,704],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[705,768]}]},{"pos":[30243,30300],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[30386,30407],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[30509,30615],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[30802,30902],"content":"The address or contracts collection is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address or contracts collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30997,31176],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[31756,31930],"content":"Downloads and resolves a metadata address into a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for a specified contract at a specified address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Downloads and resolves a metadata address into a collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for a specified contract at a specified address.","pos":[0,174],"source":"Downloads and resolves a metadata address into a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for a specified contract at a specified address."}]},{"pos":[31943,33955],"content":"Use the Resolve method to specify the contract and the metadata address to use when downloading and resolving metadata.       The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.       This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls Resolve without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Resolve method to specify the contract and the metadata address to use when downloading and resolving metadata.","pos":[0,119]},{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata and the default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[126,476],"source":"       The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[483,709],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[715,830],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[831,894]},{"content":"This method requires that you specify a contract type.","pos":[901,955]},{"content":"You can specify the contract by declaring the service interface in the client code or by using a <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client generated by Svcutil.exe.","pos":[956,1144],"source":" You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe."},{"content":"If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client.","pos":[1145,1341],"source":" If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client."},{"content":"If you do not, an exception is thrown.","pos":[1342,1380]},{"content":"For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().","pos":[1381,1512]},{"content":"You create a client application and generate <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client.","pos":[1513,1624],"source":" You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client."},{"content":"You then add a method to ICalculator called Echo().","pos":[1625,1676]},{"content":"If you then write an application that calls Resolve without generating a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> client you get the following exception.","pos":[1677,1852],"source":" If you then write an application that calls Resolve without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception."},{"content":"<ph id=\"ph1\">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`</ph>.","pos":[1859,2001],"source":"`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."}]},{"pos":[34582,34639],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[34725,34746],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[34848,34954],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[35141,35233],"content":"The address or the contract is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address or the contract is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36236,36481],"content":"Resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts using the specified metadata address and <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified metadata address and <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>."},{"pos":[36494,37114],"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt; is &lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;.","pos":[0,197],"source":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[204,430],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[436,551],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[552,615]}]},{"pos":[37591,37648],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[37734,37755],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[37859,37969],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to retrieve the metadata.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."},{"pos":[38071,38177],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[38364,38473],"content":"The address, contracts collection, or client is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contracts collection, or client is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38568,38747],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[39684,39858],"content":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address and transfer mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts using the specified address and transfer mode.","pos":[0,174],"source":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address and transfer mode."}]},{"pos":[39871,40443],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[156,382],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[388,503],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[504,567]}]},{"pos":[40890,40947],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[41008,41029],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[41135,41157],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[41259,41365],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[41552,41652],"content":"The address or contracts collection is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address or contracts collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[41747,41926],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."},{"pos":[42619,42792],"content":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and transfer mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract using the specified address and transfer mode.","pos":[0,173],"source":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and transfer mode."}]},{"pos":[42805,43479],"content":"Use the Resolve method to specify a contract, and address, and the download mechanism to use.       The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Resolve method to specify a contract, and address, and the download mechanism to use.","pos":[0,93]},{"content":"The default settings on the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; are used to retrieve the metadata.","pos":[100,249],"source":"       The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."},{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[256,482],"source":"       To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[488,603],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[604,667]}]},{"pos":[44144,44200],"content":"The contract for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]},{"pos":[44261,44282],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[44388,44410],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[44512,44618],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[44805,44893],"content":"The address or contract is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address or contract is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[46009,46201],"content":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address, transfer mode, and transfer client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves a metadata address into the &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contracts using the specified address, transfer mode, and transfer client.","pos":[0,192],"source":"Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address, transfer mode, and transfer client."}]},{"pos":[46214,46628],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To download metadata but not resolve the information into &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects, use the &lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt; directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[232,347],"source":"      > [!NOTE] >  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract."},{"content":"If an empty collection is returned, a warning trace is written.","pos":[348,411]}]},{"pos":[47138,47195],"content":"The contracts for which to download and resolve metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]},{"pos":[47256,47277],"content":"The metadata address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata address.","pos":[0,21]}]},{"pos":[47383,47405],"content":"The mode of retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]},{"pos":[47509,47619],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to retrieve the metadata.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."},{"pos":[47721,47827],"content":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; objects for the specified contract.","pos":[0,106],"source":"A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract."}]},{"pos":[48014,48123],"content":"The address, contracts collection, or client is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The address, contracts collection, or client is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[48218,48397],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","needQuote":true,"needEscape":true,"source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.MetadataResolver\n  id: MetadataResolver\n  children:\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  langs:\n  - csharp\n  name: MetadataResolver\n  nameWithType: MetadataResolver\n  fullName: System.ServiceModel.Description.MetadataResolver\n  type: Class\n  summary: Retrieves and imports metadata as <xref:System.ServiceModel.Description.ServiceEndpoint> objects.\n  remarks: Use the MetadataResolver class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.\n  example:\n  - \"The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \\n  \\n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \\n  \\n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \\n  \\n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]\"\n  syntax:\n    content: public static class MetadataResolver\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address and asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \\n  \\n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception.  \\n  \\n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, asynchronous state and delegate.\n  remarks: \"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, client, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref> value, asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state, and delegate.\n  remarks: \"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  id: EndResolve(System.IAsyncResult)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: EndResolve(IAsyncResult)\n  nameWithType: MetadataResolver.EndResolve(IAsyncResult)\n  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Completes an asynchronous call to resolve metadata into a collection of endpoints.\n  remarks: Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> object that was received from a call to the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> method.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the endpoints contained in the metadata.\n  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified metadata address.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contracts collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(Type,EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Downloads and resolves a metadata address into a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for a specified contract at a specified address.\n  remarks: \"Use the Resolve method to specify the contract and the metadata address to use when downloading and resolving metadata.  \\n  \\n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \\n  \\n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls Resolve without generating a new [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client you get the following exception.  \\n  \\n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \\n  \\n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or the contract is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified metadata address and <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>.\n  remarks: \"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contracts collection, or client is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address and transfer mode.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contracts collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(Type,Uri,MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract using the specified address and transfer mode.\n  remarks: \"Use the Resolve method to specify a contract, and address, and the download mechanism to use.  \\n  \\n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \\n  \\n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contract is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contracts using the specified address, transfer mode, and transfer client.\n  remarks: \"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contracts collection, or client is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ContractDescription>\n  nameWithType: IEnumerable<ContractDescription>\n  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)\n- uid: System.ServiceModel.Description.MetadataExchangeClient\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExchangeClient\n  nameWithType: MetadataExchangeClient\n  fullName: System.ServiceModel.Description.MetadataExchangeClient\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Description.MetadataExchangeClientMode\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExchangeClientMode\n  nameWithType: MetadataExchangeClientMode\n  fullName: System.ServiceModel.Description.MetadataExchangeClientMode\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: EndResolve(IAsyncResult)\n  nameWithType: MetadataResolver.EndResolve(IAsyncResult)\n  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)\n- uid: System.ServiceModel.Description.ServiceEndpointCollection\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpointCollection\n  nameWithType: ServiceEndpointCollection\n  fullName: System.ServiceModel.Description.ServiceEndpointCollection\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(Type,EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(Type,Uri,MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve\n  nameWithType: MetadataResolver.BeginResolve\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: EndResolve\n  nameWithType: MetadataResolver.EndResolve\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve\n  nameWithType: MetadataResolver.Resolve\n"}