{"nodes":[{"pos":[960,1029],"content":"Provides the stack functionality for a stack of server channel sinks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the stack functionality for a stack of server channel sinks.","pos":[0,69]}]},{"pos":[1892,2002],"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","pos":[0,110]}]},{"pos":[2218,2268],"content":"The sink to remove and return from the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to remove and return from the sink stack.","pos":[0,50]}]},{"pos":[2326,2407],"content":"Information generated on the request side and associated with the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side and associated with the specified sink.","pos":[0,81]}]},{"pos":[2608,2669],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[3306,3387],"content":"Pushes the specified sink and information associated with it onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pushes the specified sink and information associated with it onto the sink stack.","pos":[0,81]}]},{"pos":[3399,3644],"content":"The information generated on the request side and specified in the <ph id=\"ph1\">`state`</ph> parameter is returned in the <ph id=\"ph2\">`state`</ph> parameter of the &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A&gt; method on the corresponding sink.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink."},{"pos":[3873,3910],"content":"The sink to push onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to push onto the sink stack.","pos":[0,37]}]},{"pos":[3972,4050],"content":"Information generated on the request side that is needed on the response side.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side that is needed on the response side.","pos":[0,78]}]},{"pos":[4252,4313],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[4869,4970],"content":"Presents a callback delegate to handle a callback after a message has been dispatched asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Presents a callback delegate to handle a callback after a message has been dispatched asynchronously.","pos":[0,101]}]},{"pos":[4983,5164],"content":"The dispatched message represents a request method call on a remote object.       The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The dispatched message represents a request method call on a remote object.       The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,179],"nodes":[{"content":"The dispatched message represents a request method call on a remote object.","pos":[0,75]},{"content":"The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure.","pos":[82,179]}]}]},{"pos":[5315,5384],"content":"The status and state of an asynchronous operation on a remote object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status and state of an asynchronous operation on a remote object.","pos":[0,69]}]},{"pos":[6128,6209],"content":"Stores a message sink and its associated state for later asynchronous processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores a message sink and its associated state for later asynchronous processing.","pos":[0,81]}]},{"pos":[6221,6309],"content":"The Store method is intended for use only by the .NET Framework remoting infrastructure.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Store method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,88]}]},{"pos":[6539,6561],"content":"A server channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A server channel sink.","pos":[0,22]}]},{"pos":[6623,6656],"content":"The state associated with <ph id=\"ph1\">`sink`</ph>.","needQuote":true,"needEscape":true,"source":"The state associated with `sink`."},{"pos":[7446,7594],"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","pos":[0,148]}]},{"pos":[7607,7811],"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure.       Also, the method should only be called by a transport sink to complete an asynchronous dispatch.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure.       Also, the method should only be called by a transport sink to complete an asynchronous dispatch.","pos":[0,202],"nodes":[{"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,99]},{"content":"Also, the method should only be called by a transport sink to complete an asynchronous dispatch.","pos":[106,202]}]}]},{"pos":[8053,8075],"content":"A server channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A server channel sink.","pos":[0,22]}]},{"pos":[8137,8170],"content":"The state associated with <ph id=\"ph1\">`sink`</ph>.","needQuote":true,"needEscape":true,"source":"The state associated with `sink`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  id: IServerChannelSinkStack\n  children:\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  langs:\n  - csharp\n  name: IServerChannelSinkStack\n  nameWithType: IServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  type: Interface\n  summary: Provides the stack functionality for a stack of server channel sinks.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IServerChannelSinkStack : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n  implements:\n  - System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  id: Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  langs:\n  - csharp\n  name: Pop(IServerChannelSink)\n  nameWithType: IServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(IServerChannelSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pops the information associated with all the sinks from the sink stack up to and including the specified sink.\n  syntax:\n    content: public object Pop (System.Runtime.Remoting.Channels.IServerChannelSink sink);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to remove and return from the sink stack.\n    return:\n      type: System.Object\n      description: Information generated on the request side and associated with the specified sink.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  langs:\n  - csharp\n  name: Push(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.Push(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pushes the specified sink and information associated with it onto the sink stack.\n  remarks: The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink.\n  syntax:\n    content: public void Push (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to push onto the sink stack.\n    - id: state\n      type: System.Object\n      description: Information generated on the request side that is needed on the response side.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  id: ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  langs:\n  - csharp\n  name: ServerCallback(IAsyncResult)\n  nameWithType: IServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Presents a callback delegate to handle a callback after a message has been dispatched asynchronously.\n  remarks: \"The dispatched message represents a request method call on a remote object.  \\n  \\n The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure.\"\n  syntax:\n    content: public void ServerCallback (IAsyncResult ar);\n    parameters:\n    - id: ar\n      type: System.IAsyncResult\n      description: The status and state of an asynchronous operation on a remote object.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  langs:\n  - csharp\n  name: Store(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.Store(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state for later asynchronous processing.\n  remarks: The Store method is intended for use only by the .NET Framework remoting infrastructure.\n  syntax:\n    content: public void Store (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with `sink`.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  langs:\n  - csharp\n  name: StoreAndDispatch(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.\n  remarks: \"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure.  \\n  \\n Also, the method should only be called by a transport sink to complete an asynchronous dispatch.\"\n  syntax:\n    content: public void StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with `sink`.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Pop(IServerChannelSink)\n  nameWithType: IServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(IServerChannelSink)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Push(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.Push(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback(IAsyncResult)\n  nameWithType: IServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Store(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.Store(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch(IServerChannelSink,Object)\n  nameWithType: IServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Pop\n  nameWithType: IServerChannelSinkStack.Pop\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Push\n  nameWithType: IServerChannelSinkStack.Push\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback\n  nameWithType: IServerChannelSinkStack.ServerCallback\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: Store\n  nameWithType: IServerChannelSinkStack.Store\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch\n  nameWithType: IServerChannelSinkStack.StoreAndDispatch\n"}