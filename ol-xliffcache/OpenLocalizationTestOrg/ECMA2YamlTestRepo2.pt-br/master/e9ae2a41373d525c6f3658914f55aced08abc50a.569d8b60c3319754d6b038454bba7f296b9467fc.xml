{"nodes":[{"pos":[459,647],"content":"Represents a collection of application-specific <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances used in combination with <bpt id=\"p2\">&lt;xref href=\"System.IO.Packaging.PackWebRequest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents a collection of application-specific <xref href=\"System.IO.Packaging.Package\"></xref> instances used in combination with <xref href=\"System.IO.Packaging.PackWebRequest\"></xref>."},{"pos":[660,3503],"content":"The PackageStore defines a reference collections of package that are open and active in the application.  Packages added to the PackageStore are accessed is by their key URI value.  The PackageStore supports three common uses:      1.  Accessing <xref:System.IO.Packaging.PackagePart> data through <xref:System.IO.Packaging.PackWebRequest>.      2.  The application obtaining an instance of a <xref:System.IO.Packaging.Package> given the package's URI.      3.  Accessing packages that are created and stored in a <xref:System.IO.MemoryStream>.       To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by <xref:System.IO.Packaging.PackWebRequest> and directly by the application.  When accessing data in a package, the <xref:System.IO.Packaging.Package> address of a requested <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> is first checked to see if the package is already defined and open in the PackageStore.  If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.       If your application opens a package with <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> can be called to add the package to the PackageStore.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> should later be called to remove the package from the PackageStore prior to calling <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.       XPS packages opened with an <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructor are automatically added and removed from the PackageStore when the document is created and disposed.  (You do not need to call <xref:System.IO.Packaging.PackageStore.AddPackage%2A> or <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separately for XPS packages opened with <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructors.)       The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.  The PackageStore only provides references to the packages that have been added the store.  It is up to the application to correctly open, update, and close each package.       Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser such as <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.  When operating in a multithreaded environment, the application must lock the package before access.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PackageStore defines a reference collections of package that are open and active in the application.","pos":[0,104]},{"content":"Packages added to the PackageStore are accessed is by their key URI value.","pos":[106,180]},{"content":"The PackageStore supports three common uses:      1.","pos":[182,234]},{"content":"Accessing &lt;xref:System.IO.Packaging.PackagePart&gt; data through &lt;xref:System.IO.Packaging.PackWebRequest&gt;.","pos":[236,340],"source":"  Accessing <xref:System.IO.Packaging.PackagePart> data through <xref:System.IO.Packaging.PackWebRequest>."},{"content":"2.","pos":[346,348]},{"content":"The application obtaining an instance of a &lt;xref:System.IO.Packaging.Package&gt; given the package's URI.","pos":[350,452],"source":"  The application obtaining an instance of a <xref:System.IO.Packaging.Package> given the package's URI."},{"content":"3.","pos":[458,460]},{"content":"Accessing packages that are created and stored in a &lt;xref:System.IO.MemoryStream&gt;.","pos":[462,544],"source":"  Accessing packages that are created and stored in a <xref:System.IO.MemoryStream>."},{"content":"To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by &lt;xref:System.IO.Packaging.PackWebRequest&gt; and directly by the application.","pos":[551,783],"source":"       To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by <xref:System.IO.Packaging.PackWebRequest> and directly by the application."},{"content":"When accessing data in a package, the &lt;xref:System.IO.Packaging.Package&gt; address of a requested &lt;xref:System.IO.Packaging.PackagePart&gt; &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; is first checked to see if the package is already defined and open in the PackageStore.","pos":[785,1053],"source":"  When accessing data in a package, the <xref:System.IO.Packaging.Package> address of a requested <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> is first checked to see if the package is already defined and open in the PackageStore."},{"content":"If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.","pos":[1055,1220]},{"content":"If your application opens a package with &lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;, &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; can be called to add the package to the PackageStore.","pos":[1227,1444],"source":"       If your application opens a package with <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> can be called to add the package to the PackageStore."},{"content":"&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; should later be called to remove the package from the PackageStore prior to calling &lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;.","pos":[1446,1656],"source":"  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> should later be called to remove the package from the PackageStore prior to calling <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>."},{"content":"XPS packages opened with an &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructor are automatically added and removed from the PackageStore when the document is created and disposed.","pos":[1663,1862],"source":"       XPS packages opened with an <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructor are automatically added and removed from the PackageStore when the document is created and disposed."},{"content":"(You do not need to call &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; or &lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; separately for XPS packages opened with &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructors.)       The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.","pos":[1864,2272],"source":"  (You do not need to call <xref:System.IO.Packaging.PackageStore.AddPackage%2A> or <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separately for XPS packages opened with <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructors.)       The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened."},{"content":"The PackageStore only provides references to the packages that have been added the store.","pos":[2274,2363]},{"content":"It is up to the application to correctly open, update, and close each package.","pos":[2365,2443]},{"content":"Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> parser such as &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;.","pos":[2450,2726],"source":"       Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser such as <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>."},{"content":"When operating in a multithreaded environment, the application must lock the package before access.","pos":[2728,2827]}]},{"pos":[4217,4286],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the store.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.IO.Packaging.Package\"></xref> to the store."},{"pos":[4299,5174],"content":"`packageUri` defines the package's key URI that is compared when you call <xref:System.IO.Packaging.PackWebRequest>.       If the `packageUri` matches the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package defined in the <xref:System.IO.Packaging.PackageStore> is used to access the requested part.       If the `packageUri` does not match the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package with the specified URI is opened to access the requested part.       **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`packageUri`</ph> defines the package's key URI that is compared when you call &lt;xref:System.IO.Packaging.PackWebRequest&gt;.","pos":[0,116],"source":"`packageUri` defines the package's key URI that is compared when you call <xref:System.IO.Packaging.PackWebRequest>."},{"content":"If the <ph id=\"ph1\">`packageUri`</ph> matches the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package defined in the &lt;xref:System.IO.Packaging.PackageStore&gt; is used to access the requested part.","pos":[123,403],"source":"       If the `packageUri` matches the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package defined in the <xref:System.IO.Packaging.PackageStore> is used to access the requested part."},{"content":"If the <ph id=\"ph1\">`packageUri`</ph> does not match the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package with the specified URI is opened to access the requested part.","pos":[410,667],"source":"       If the `packageUri` does not match the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package with the specified URI is opened to access the requested part."},{"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.","pos":[674,869],"source":"**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types."}]},{"pos":[5705,5866],"content":"The key <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> of the <ph id=\"ph2\">`package`</ph> to compare in a <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackWebRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the `package` to compare in a <xref href=\"System.IO.Packaging.PackWebRequest\"></xref>."},{"pos":[5944,5976],"content":"The package to add to the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The package to add to the store.","pos":[0,32]}]},{"pos":[6150,6235],"content":"<ph id=\"ph1\">&lt;code&gt;package&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>package</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6330,6440],"content":"<ph id=\"ph1\">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id=\"ph2\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"<code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."},{"pos":[6551,6628],"content":"A package with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">packageUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already in the store.","needQuote":true,"needEscape":true,"source":"A package with the specified <code>packageUri</code> is already in the store."},{"pos":[7031,7188],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a specified <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.IO.Packaging.Package\"></xref> with a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from the store."},{"pos":[7201,7524],"content":"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.       **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.","pos":[0,119],"source":"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call."},{"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.","pos":[126,321],"source":"**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types."}]},{"pos":[8041,8132],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to return.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] of the package to return."},{"pos":[8204,8399],"content":"The package with a specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">packageUri</ph><ept id=\"p1\">&lt;/code&gt;</ept>; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if a package with the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">packageUri</ph><ept id=\"p3\">&lt;/code&gt;</ept> is not in the store.","needQuote":true,"needEscape":true,"source":"The package with a specified <code>packageUri</code>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if a package with the specified <code>packageUri</code> is not in the store."},{"pos":[8573,8661],"content":"<ph id=\"ph1\">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>packageUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8756,8866],"content":"<ph id=\"ph1\">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id=\"ph2\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"<code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."},{"pos":[9284,9441],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a specified <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.IO.Packaging.Package\"></xref> with a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from the store."},{"pos":[9454,9777],"content":"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.       **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.","pos":[0,119],"source":"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call."},{"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.","pos":[126,321],"source":"**Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types."}]},{"pos":[10281,10372],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to remove.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] of the package to remove."},{"pos":[10549,10637],"content":"<ph id=\"ph1\">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>packageUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10732,10842],"content":"<ph id=\"ph1\">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id=\"ph2\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"<code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.PackageStore\n  id: PackageStore\n  children:\n  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)\n  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)\n  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)\n  langs:\n  - csharp\n  name: PackageStore\n  nameWithType: PackageStore\n  fullName: System.IO.Packaging.PackageStore\n  type: Class\n  summary: Represents a collection of application-specific <xref href=\"System.IO.Packaging.Package\"></xref> instances used in combination with <xref href=\"System.IO.Packaging.PackWebRequest\"></xref>.\n  remarks: \"The PackageStore defines a reference collections of package that are open and active in the application.  Packages added to the PackageStore are accessed is by their key URI value.  The PackageStore supports three common uses:  \\n  \\n1.  Accessing <xref:System.IO.Packaging.PackagePart> data through <xref:System.IO.Packaging.PackWebRequest>.  \\n  \\n2.  The application obtaining an instance of a <xref:System.IO.Packaging.Package> given the package's URI.  \\n  \\n3.  Accessing packages that are created and stored in a <xref:System.IO.MemoryStream>.  \\n  \\n To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by <xref:System.IO.Packaging.PackWebRequest> and directly by the application.  When accessing data in a package, the <xref:System.IO.Packaging.Package> address of a requested <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> is first checked to see if the package is already defined and open in the PackageStore.  If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.  \\n  \\n If your application opens a package with <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> can be called to add the package to the PackageStore.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> should later be called to remove the package from the PackageStore prior to calling <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.  \\n  \\n XPS packages opened with an <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructor are automatically added and removed from the PackageStore when the document is created and disposed.  (You do not need to call <xref:System.IO.Packaging.PackageStore.AddPackage%2A> or <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separately for XPS packages opened with <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> constructors.)  \\n  \\n The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.  The PackageStore only provides references to the packages that have been added the store.  It is up to the application to correctly open, update, and close each package.  \\n  \\n Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser such as <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.  When operating in a multithreaded environment, the application must lock the package before access.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public static class PackageStore\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)\n  id: AddPackage(System.Uri,System.IO.Packaging.Package)\n  parent: System.IO.Packaging.PackageStore\n  langs:\n  - csharp\n  name: AddPackage(Uri,Package)\n  nameWithType: PackageStore.AddPackage(Uri,Package)\n  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.IO.Packaging\n  summary: Adds a <xref href=\"System.IO.Packaging.Package\"></xref> to the store.\n  remarks: \"`packageUri` defines the package's key URI that is compared when you call <xref:System.IO.Packaging.PackWebRequest>.  \\n  \\n If the `packageUri` matches the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package defined in the <xref:System.IO.Packaging.PackageStore> is used to access the requested part.  \\n  \\n If the `packageUri` does not match the <xref:System.IO.Packaging.PackagePart.Uri%2A> for a <xref:System.IO.Packaging.PackagePart> in a <xref:System.IO.Packaging.PackWebRequest> call, the package with the specified URI is opened to access the requested part.  \\n  \\n **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.\"\n  example:\n  - \"The following example shows how to use the AddPackage method.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]\"\n  syntax:\n    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The key [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the `package` to compare in a <xref href=\"System.IO.Packaging.PackWebRequest\"></xref>.\n    - id: package\n      type: System.IO.Packaging.Package\n      description: The package to add to the store.\n  overload: System.IO.Packaging.PackageStore.AddPackage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>package</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A package with the specified <code>packageUri</code> is already in the store.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)\n  id: GetPackage(System.Uri)\n  parent: System.IO.Packaging.PackageStore\n  langs:\n  - csharp\n  name: GetPackage(Uri)\n  nameWithType: PackageStore.GetPackage(Uri)\n  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.IO.Packaging\n  summary: Returns the <xref href=\"System.IO.Packaging.Package\"></xref> with a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from the store.\n  remarks: \"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.  \\n  \\n **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.\"\n  example:\n  - \"The following example shows how to use the GetPackage method.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]\"\n  syntax:\n    content: public static System.IO.Packaging.Package GetPackage (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] of the package to return.\n    return:\n      type: System.IO.Packaging.Package\n      description: The package with a specified <code>packageUri</code>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if a package with the specified <code>packageUri</code> is not in the store.\n  overload: System.IO.Packaging.PackageStore.GetPackage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>packageUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)\n  id: RemovePackage(System.Uri)\n  parent: System.IO.Packaging.PackageStore\n  langs:\n  - csharp\n  name: RemovePackage(Uri)\n  nameWithType: PackageStore.RemovePackage(Uri)\n  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.IO.Packaging\n  summary: Removes the <xref href=\"System.IO.Packaging.Package\"></xref> with a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from the store.\n  remarks: \"`packageUri` is matched to the URIs specified in the <xref:System.IO.Packaging.PackageStore.AddPackage%2A> method call.  \\n  \\n **Security Note** This method demands <xref:System.Security.Permissions.EnvironmentPermission> for all custom <xref:System.IO.Packaging.Package> (non-<xref:System.IO.Packaging.ZipPackage>) types.\"\n  example:\n  - \"The following example shows how to use the RemovePackage method.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]\"\n  syntax:\n    content: public static void RemovePackage (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] of the package to remove.\n  overload: System.IO.Packaging.PackageStore.RemovePackage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>packageUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>packageUri</code> is an invalid package [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: AddPackage(Uri,Package)\n  nameWithType: PackageStore.AddPackage(Uri,Package)\n  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  nameWithType: Package\n  fullName: System.IO.Packaging.Package\n- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: GetPackage(Uri)\n  nameWithType: PackageStore.GetPackage(Uri)\n  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)\n- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: RemovePackage(Uri)\n  nameWithType: PackageStore.RemovePackage(Uri)\n  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)\n- uid: System.IO.Packaging.PackageStore.AddPackage*\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: AddPackage\n  nameWithType: PackageStore.AddPackage\n- uid: System.IO.Packaging.PackageStore.GetPackage*\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: GetPackage\n  nameWithType: PackageStore.GetPackage\n- uid: System.IO.Packaging.PackageStore.RemovePackage*\n  parent: System.IO.Packaging.PackageStore\n  isExternal: false\n  name: RemovePackage\n  nameWithType: PackageStore.RemovePackage\n"}