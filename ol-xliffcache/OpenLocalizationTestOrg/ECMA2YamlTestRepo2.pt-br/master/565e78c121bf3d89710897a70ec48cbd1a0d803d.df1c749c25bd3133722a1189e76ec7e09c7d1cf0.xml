{"nodes":[{"pos":[1329,1341],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4320,4332],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4404,4416],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4478,4490],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4554,4566],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5448,5460],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6454,6466],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6535,6547],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6599,6611],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7371,7383],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8016,8028],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8765,8777],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9441,9453],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10132,10144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10765,10777],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.InvokeMethod`1\n  id: InvokeMethod`1\n  children:\n  - System.Activities.Expressions.InvokeMethod`1.#ctor\n  - System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  - System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  - System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  - System.Activities.Expressions.InvokeMethod`1.MethodName\n  - System.Activities.Expressions.InvokeMethod`1.Parameters\n  - System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  - System.Activities.Expressions.InvokeMethod`1.TargetObject\n  - System.Activities.Expressions.InvokeMethod`1.TargetType\n  langs:\n  - csharp\n  name: InvokeMethod<TResult>\n  nameWithType: InvokeMethod<TResult>\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Parameters\")]\n\n      public sealed class InvokeMethod<TResult> : System.Activities.AsyncCodeActivity<TResult>\n    typeParameters:\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.AsyncCodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)\n  - System.Activities.AsyncCodeActivity`1.Implementation\n  - System.Activities.AsyncCodeActivity`1.ImplementationVersion\n  - System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: InvokeMethod()\n  nameWithType: InvokeMethod<TResult>.InvokeMethod()\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.InvokeMethod()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public InvokeMethod ();\n    parameters: []\n  overload: System.Activities.Expressions.InvokeMethod`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.BeginExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override TResult EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: To be added.\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: TResult\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.EndExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  id: GenericTypeArguments\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.GenericTypeArguments\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<Type> GenericTypeArguments { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Type}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName\n  id: MethodName\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.MethodName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public string MethodName { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.MethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters\n  id: Parameters\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.Parameters\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Argument> Parameters { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  id: RunAsynchronously\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.RunAsynchronously\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool RunAsynchronously { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject\n  id: TargetObject\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetObject\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument TargetObject { get; set; }\n    return:\n      type: System.Activities.InArgument\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.TargetObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType\n  id: TargetType\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetType\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public Type TargetType { get; set; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeMethod`1.TargetType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: System.Activities.AsyncCodeActivity<TResult>\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: InvokeMethod()\n  nameWithType: InvokeMethod<TResult>.InvokeMethod()\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.InvokeMethod()\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Activities.AsyncCodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.GenericTypeArguments\n- uid: System.Collections.ObjectModel.Collection{System.Type}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Type>\n  nameWithType: Collection<Type>\n  fullName: System.Collections.ObjectModel.Collection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.MethodName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.Parameters\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Argument>\n  nameWithType: Collection<Argument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Argument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Argument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Argument\n    name: Argument\n    nameWithType: Argument\n    fullName: Argument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.RunAsynchronously\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetObject\n- uid: System.Activities.InArgument\n  parent: System.Activities\n  isExternal: false\n  name: InArgument\n  nameWithType: InArgument\n  fullName: System.Activities.InArgument\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: InvokeMethod<TResult>\n  nameWithType: InvokeMethod<TResult>.InvokeMethod<TResult>\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: BeginExecute\n  nameWithType: InvokeMethod<TResult>.BeginExecute\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: InvokeMethod<TResult>.CacheMetadata\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: EndExecute\n  nameWithType: InvokeMethod<TResult>.EndExecute\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n"}