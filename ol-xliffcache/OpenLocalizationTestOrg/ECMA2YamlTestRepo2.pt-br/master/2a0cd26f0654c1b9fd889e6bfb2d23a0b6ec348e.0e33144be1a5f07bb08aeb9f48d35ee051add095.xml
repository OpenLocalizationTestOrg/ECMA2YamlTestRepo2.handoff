{"nodes":[{"pos":[1378,1418],"content":"Holds the stack of server channel sinks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Holds the stack of server channel sinks.","pos":[0,40]}]},{"pos":[1430,1637],"content":"This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class makes a link demand.","pos":[0,31]},{"content":"A security exception is thrown if the immediate caller does not have infrastructure permission.","pos":[32,127]},{"content":"See <bpt id=\"p1\">[</bpt>Link Demands<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.","pos":[128,207],"source":" See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information."}]},{"pos":[2481,2598],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"></xref> class."},{"pos":[3593,3682],"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","pos":[0,89]}]},{"pos":[3694,3911],"content":"This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.","pos":[0,217],"nodes":[{"content":"This method initializes asynchronous processing on the top sink in the current sink stack.","pos":[0,90]},{"content":"For additional information, see the &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A&gt; method.","pos":[91,217],"source":" For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method."}]}]},{"pos":[4207,4262],"content":"The message to be serialized onto the requested stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be serialized onto the requested stream.","pos":[0,55]}]},{"pos":[4363,4417],"content":"The headers retrieved from the server response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers retrieved from the server response stream.","pos":[0,54]}]},{"pos":[4483,4530],"content":"The stream coming back from the transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream coming back from the transport sink.","pos":[0,47]}]},{"pos":[4763,4795],"content":"The current sink stack is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current sink stack is empty.","pos":[0,32]}]},{"pos":[5552,5641],"content":"Returns the <xref:System.IO.Stream> onto which the specified message is to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.IO.Stream&gt; onto which the specified message is to be serialized.","pos":[0,89],"source":"Returns the <xref:System.IO.Stream> onto which the specified message is to be serialized."}]},{"pos":[5653,6045],"content":"This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack. The top sink in the sink stack remains unchanged.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns the stream returned by the &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName&gt; called with the <ph id=\"ph1\">`msg`</ph> and <ph id=\"ph2\">`headers`</ph> parameters (&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A&gt; (<ph id=\"ph3\">`msg`</ph>, <ph id=\"ph4\">`headers`</ph>)) on the top sink in the current sink stack.","pos":[0,342],"source":"This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack."},{"content":"The top sink in the sink stack remains unchanged.","pos":[343,392]}]},{"pos":[6325,6380],"content":"The message to be serialized onto the requested stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be serialized onto the requested stream.","pos":[0,55]}]},{"pos":[6481,6535],"content":"The headers retrieved from the server response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers retrieved from the server response stream.","pos":[0,54]}]},{"pos":[6596,6677],"content":"The <xref:System.IO.Stream> onto which the specified message is to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; onto which the specified message is to be serialized.","pos":[0,81],"source":"The <xref:System.IO.Stream> onto which the specified message is to be serialized."}]},{"pos":[6907,6931],"content":"The sink stack is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink stack is empty.","pos":[0,24]}]},{"pos":[7510,7620],"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","pos":[0,110]}]},{"pos":[7836,7886],"content":"The sink to remove and return from the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to remove and return from the sink stack.","pos":[0,50]}]},{"pos":[7944,8025],"content":"Information generated on the request side and associated with the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side and associated with the specified sink.","pos":[0,81]}]},{"pos":[8241,8336],"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","pos":[0,95]}]},{"pos":[8969,9050],"content":"Pushes the specified sink and information associated with it onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pushes the specified sink and information associated with it onto the sink stack.","pos":[0,81]}]},{"pos":[9062,9307],"content":"The information generated on the request side and specified in the <ph id=\"ph1\">`state`</ph> parameter is returned in the <ph id=\"ph2\">`state`</ph> parameter of the &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A&gt; method on the corresponding sink.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink."},{"pos":[9536,9573],"content":"The sink to push onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to push onto the sink stack.","pos":[0,37]}]},{"pos":[9635,9713],"content":"Information generated on the request side that is needed on the response side.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side that is needed on the response side.","pos":[0,78]}]},{"pos":[10356,10476],"content":"Provides a <xref:System.AsyncCallback> delegate to handle a callback after a message has been dispatched asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a &lt;xref:System.AsyncCallback&gt; delegate to handle a callback after a message has been dispatched asynchronously.","pos":[0,120],"source":"Provides a <xref:System.AsyncCallback> delegate to handle a callback after a message has been dispatched asynchronously."}]},{"pos":[10489,10703],"content":"The dispatched message represents a request method call on a remote object.       The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The dispatched message represents a request method call on a remote object.       The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","pos":[0,212],"nodes":[{"content":"The dispatched message represents a request method call on a remote object.","pos":[0,75]},{"content":"The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure.","pos":[82,179]},{"content":"You should not call it directly.","pos":[180,212]}]}]},{"pos":[10854,10923],"content":"The status and state of an asynchronous operation on a remote object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status and state of an asynchronous operation on a remote object.","pos":[0,69]}]},{"pos":[11662,11743],"content":"Stores a message sink and its associated state for later asynchronous processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores a message sink and its associated state for later asynchronous processing.","pos":[0,81]}]},{"pos":[11755,11876],"content":"The Store method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Store method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","pos":[0,121],"nodes":[{"content":"The Store method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,88]},{"content":"You should not call it directly.","pos":[89,121]}]}]},{"pos":[12106,12128],"content":"A server channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A server channel sink.","pos":[0,22]}]},{"pos":[12190,12223],"content":"The state associated with <ph id=\"ph1\">`sink`</ph>.","needQuote":true,"needEscape":true,"source":"The state associated with `sink`."},{"pos":[12442,12555],"content":"The current sink stack is empty.       -or-       The specified sink was never pushed onto the current stack.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current sink stack is empty.       -or-       The specified sink was never pushed onto the current stack.","pos":[0,109],"nodes":[{"content":"The current sink stack is empty.","pos":[0,32]},{"content":"-or-       The specified sink was never pushed onto the current stack.","pos":[39,109]}]}]},{"pos":[13249,13397],"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","pos":[0,148]}]},{"pos":[13410,13641],"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.       The method should be only called by a transport sink to complete an asynchronous dispatch.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.       The method should be only called by a transport sink to complete an asynchronous dispatch.","pos":[0,229],"nodes":[{"content":"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,99]},{"content":"You should not call it directly.","pos":[100,132]},{"content":"The method should be only called by a transport sink to complete an asynchronous dispatch.","pos":[139,229]}]}]},{"pos":[13883,13905],"content":"A server channel sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"A server channel sink.","pos":[0,22]}]},{"pos":[13967,14000],"content":"The state associated with <ph id=\"ph1\">`sink`</ph>.","needQuote":true,"needEscape":true,"source":"The state associated with `sink`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  id: ServerChannelSinkStack\n  children:\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  langs:\n  - csharp\n  name: ServerChannelSinkStack\n  nameWithType: ServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  type: Class\n  summary: Holds the stack of server channel sinks.\n  remarks: This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Security.SecurityCritical]\n\n      public class ServerChannelSinkStack : System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: ServerChannelSinkStack()\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack()\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerChannelSinkStack()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"></xref> class.\n  syntax:\n    content: public ServerChannelSinkStack ();\n    parameters: []\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests asynchronous processing of a method call on the sinks in the current sink stack.\n  remarks: This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message to be serialized onto the requested stream.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers retrieved from the server response stream.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream coming back from the transport sink.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  id: GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: GetResponseStream(IMessage,ITransportHeaders)\n  nameWithType: ServerChannelSinkStack.GetResponseStream(IMessage,ITransportHeaders)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(IMessage,ITransportHeaders)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the <xref:System.IO.Stream> onto which the specified message is to be serialized.\n  remarks: This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack. The top sink in the sink stack remains unchanged.\n  syntax:\n    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message to be serialized onto the requested stream.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers retrieved from the server response stream.\n    return:\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> onto which the specified message is to be serialized.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The sink stack is empty.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  id: Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Pop(IServerChannelSink)\n  nameWithType: ServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(IServerChannelSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pops the information associated with all the sinks from the sink stack up to and including the specified sink.\n  syntax:\n    content: public object Pop (System.Runtime.Remoting.Channels.IServerChannelSink sink);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to remove and return from the sink stack.\n    return:\n      type: System.Object\n      description: Information generated on the request side and associated with the specified sink.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty, or the specified sink was never pushed onto the current stack.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Push(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.Push(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pushes the specified sink and information associated with it onto the sink stack.\n  remarks: The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink.\n  syntax:\n    content: public void Push (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to push onto the sink stack.\n    - id: state\n      type: System.Object\n      description: Information generated on the request side that is needed on the response side.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  id: ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: ServerCallback(IAsyncResult)\n  nameWithType: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Provides a <xref:System.AsyncCallback> delegate to handle a callback after a message has been dispatched asynchronously.\n  remarks: \"The dispatched message represents a request method call on a remote object.  \\n  \\n The ServerCallback method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.\"\n  syntax:\n    content: public void ServerCallback (IAsyncResult ar);\n    parameters:\n    - id: ar\n      type: System.IAsyncResult\n      description: The status and state of an asynchronous operation on a remote object.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Store(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.Store(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state for later asynchronous processing.\n  remarks: The Store method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.\n  syntax:\n    content: public void Store (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with `sink`.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: \"The current sink stack is empty.  \\n  \\n -or-  \\n  \\n The specified sink was never pushed onto the current stack.\"\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: StoreAndDispatch(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.\n  remarks: \"The StoreAndDispatch method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.  \\n  \\n The method should be only called by a transport sink to complete an asynchronous dispatch.\"\n  syntax:\n    content: public void StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with `sink`.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerChannelSinkStack()\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack()\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerChannelSinkStack()\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(IMessage,ITransportHeaders,Stream)\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: GetResponseStream(IMessage,ITransportHeaders)\n  nameWithType: ServerChannelSinkStack.GetResponseStream(IMessage,ITransportHeaders)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(IMessage,ITransportHeaders)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Pop(IServerChannelSink)\n  nameWithType: ServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(IServerChannelSink)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Push(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.Push(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback(IAsyncResult)\n  nameWithType: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Store(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.Store(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch(IServerChannelSink,Object)\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerChannelSinkStack\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: GetResponseStream\n  nameWithType: ServerChannelSinkStack.GetResponseStream\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Pop\n  nameWithType: ServerChannelSinkStack.Pop\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Push\n  nameWithType: ServerChannelSinkStack.Push\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback\n  nameWithType: ServerChannelSinkStack.ServerCallback\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Store\n  nameWithType: ServerChannelSinkStack.Store\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch\n"}