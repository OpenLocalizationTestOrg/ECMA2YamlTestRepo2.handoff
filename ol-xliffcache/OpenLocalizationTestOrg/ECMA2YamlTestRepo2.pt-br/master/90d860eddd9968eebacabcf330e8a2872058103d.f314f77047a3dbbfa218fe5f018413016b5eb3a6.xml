{"nodes":[{"pos":[1854,1903],"content":"Represents the value of the Cache-Control header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the value of the Cache-Control header.","pos":[0,49]}]},{"pos":[2535,2644],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> class."},{"pos":[3262,3416],"content":"Determines whether the specified &lt;xref:System.Object&gt; is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."},{"pos":[3557,3603],"content":"The object to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]},{"pos":[3662,3867],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4377,4438],"content":"Cache-extension tokens, each with an optional assigned value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cache-extension tokens, each with an optional assigned value.","pos":[0,61]}]},{"pos":[4450,4575],"content":"This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,125]}]},{"pos":[4839,4915],"content":"A collection of cache-extension tokens each with an optional assigned value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of cache-extension tokens each with an optional assigned value.","pos":[0,76]}]},{"pos":[5438,5547],"content":"Serves as a hash function for a  <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Serves as a hash function for a  <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."},{"pos":[5560,5826],"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,264],"nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing.","pos":[0,90]},{"content":"It can also serve as an index for an object in a collection.","pos":[91,151]},{"content":"The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[158,264]}]}]},{"pos":[5962,5997],"content":"A hash code for the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash code for the current object.","pos":[0,35]}]},{"pos":[6492,6584],"content":"The maximum age, specified in seconds, that the HTTP client is willing to accept a response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum age, specified in seconds, that the HTTP client is willing to accept a response.","pos":[0,92]}]},{"pos":[6597,6878],"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.       Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.       Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.","pos":[0,277],"nodes":[{"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,117]},{"content":"Unless the &lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A&gt; property is also set, the client is not willing to accept a stale response.","pos":[124,277],"source":"       Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response."}]}]},{"pos":[7026,7046],"content":"The time in seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds.","pos":[0,20]}]},{"pos":[7546,7639],"content":"Whether an HTTP client is willing to accept a response that has exceeded its expiration time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether an HTTP client is willing to accept a response that has exceeded its expiration time.","pos":[0,93]}]},{"pos":[7651,7767],"content":"This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.","pos":[0,116]}]},{"pos":[7884,8107],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8634,8749],"content":"The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.","pos":[0,115]}]},{"pos":[8762,9222],"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.       If the MaxStaleLimit property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the MaxStaleLimit property, then the client is willing to accept a stale response of any age.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.       If the MaxStaleLimit property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the MaxStaleLimit property, then the client is willing to accept a stale response of any age.","pos":[0,456],"nodes":[{"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.","pos":[0,120]},{"content":"If the MaxStaleLimit property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds.","pos":[127,328]},{"content":"If a value of zero is assigned to the MaxStaleLimit property, then the client is willing to accept a stale response of any age.","pos":[329,456]}]}]},{"pos":[9377,9397],"content":"The time in seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds.","pos":[0,20]}]},{"pos":[9904,9992],"content":"The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.","pos":[0,88]}]},{"pos":[10005,10417],"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.       The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.       The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","pos":[0,408],"nodes":[{"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.","pos":[0,102]},{"content":"The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds.","pos":[109,297]},{"content":"The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","pos":[298,408]}]}]},{"pos":[10567,10587],"content":"The time in seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds.","pos":[0,20]}]},{"pos":[11119,11240],"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.","pos":[0,121]}]},{"pos":[11252,11361],"content":"This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.","pos":[0,109]}]},{"pos":[11484,11731],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12234,12296],"content":"Whether an HTTP client is willing to accept a cached response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether an HTTP client is willing to accept a cached response.","pos":[0,62]}]},{"pos":[12309,12639],"content":"This property represents the \"no-cache\" directive in a cache-control header field on an HTTP request or HTTP response.       When the NoCache property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"no-cache\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,118]},{"content":"When the NoCache property is set to <ph id=\"ph1\">`true`</ph> present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.","pos":[125,326],"source":"       When the NoCache property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested."}]},{"pos":[12756,12950],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the HTTP client is willing to accept a cached response; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP client is willing to accept a cached response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13481,13588],"content":"A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","pos":[0,107]}]},{"pos":[13600,13716],"content":"This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","pos":[0,116]}]},{"pos":[13915,13942],"content":"A collection of fieldnames.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of fieldnames.","pos":[0,27]}]},{"pos":[14445,14537],"content":"Whether a cache must not store any part of either the HTTP request mressage or any response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether a cache must not store any part of either the HTTP request mressage or any response.","pos":[0,92]}]},{"pos":[14550,14893],"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.       The purpose of the NoStore property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.       The purpose of the NoStore property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.","pos":[0,339],"nodes":[{"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,118]},{"content":"The purpose of the NoStore property is to prevent the inadvertent release or retention of sensitive information.","pos":[125,237]},{"content":"This property applies to the entire message, and may be sent either in an HTTP request or a response.","pos":[238,339]}]}]},{"pos":[15010,15233],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a cache must not store any part of either the HTTP request mressage or any response; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache must not store any part of either the HTTP request mressage or any response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15749,15820],"content":"Whether a cache or proxy must not change any aspect of the entity-body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether a cache or proxy must not change any aspect of the entity-body.","pos":[0,71]}]},{"pos":[15833,16502],"content":"This property represents the \"no-transform\" directive in a cache-control header field on an HTTP request or HTTP response.       When the NoTransform is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"no-transform\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,122]},{"content":"When the NoTransform is set to <ph id=\"ph1\">`true`</ph>, intermediate caches or rpoxies must not change any aspect of the entity body.","pos":[129,245],"source":"       When the NoTransform is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body."},{"content":"Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies.","pos":[246,366]},{"content":"A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link.","pos":[367,520]},{"content":"Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.","pos":[521,665]}]},{"pos":[16623,16825],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a cache or proxy must not change any aspect of the entity-body; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache or proxy must not change any aspect of the entity-body; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17350,17523],"content":"Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.","pos":[0,173]}]},{"pos":[17535,17642],"content":"This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.","pos":[0,107]}]},{"pos":[17763,18067],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18610,18712],"content":"Converts a string to an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Converts a string to an <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."},{"pos":[18897,18961],"content":"A string that represents cache-control header value information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents cache-control header value information.","pos":[0,64]}]},{"pos":[19053,19133],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."},{"pos":[19317,19412],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference.","needQuote":true,"needEscape":true,"source":"<code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference."},{"pos":[19503,19574],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is not valid cache-control header value information.","needQuote":true,"needEscape":true,"source":"<code>input</code> is not valid cache-control header value information."},{"pos":[19984,20104],"content":"Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.","pos":[0,120]}]},{"pos":[20116,20217],"content":"This property represents the \"private\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,101]}]},{"pos":[20333,20569],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21100,21203],"content":"A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,103]}]},{"pos":[21215,21330],"content":"This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,115]}]},{"pos":[21529,21556],"content":"A collection of fieldnames.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of fieldnames.","pos":[0,27]}]},{"pos":[22099,22249],"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.","pos":[0,150]}]},{"pos":[22262,22443],"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.       This property does not affect  non-shared user agent caches.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.       This property does not affect  non-shared user agent caches.","pos":[0,177],"nodes":[{"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.","pos":[0,110]},{"content":"This property does not affect  non-shared user agent caches.","pos":[117,177]}]}]},{"pos":[22568,22844],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23343,23484],"content":"Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.","pos":[0,141]}]},{"pos":[23496,23596],"content":"This property represents the \"public\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"public\" directive in a cache-control header field on an HTTP response.","pos":[0,100]}]},{"pos":[23711,23984],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24504,24675],"content":"The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.","pos":[0,171]}]},{"pos":[24687,24790],"content":"This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.","pos":[0,103]}]},{"pos":[24943,24963],"content":"The time in seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds.","pos":[0,20]}]},{"pos":[25562,25691],"content":"Creates a new object that is a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."},{"pos":[25819,25850],"content":"A copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]},{"pos":[26371,26492],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."},{"pos":[26628,26672],"content":"A string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]},{"pos":[27396,27514],"content":"Determines whether a string is valid <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information."},{"pos":[27724,27747],"content":"The string to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to validate.","pos":[0,23]}]},{"pos":[27849,27944],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> version of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> version of the string."},{"pos":[28003,28251],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p2\">&lt;/code&gt;</ept> is valid <bpt id=\"p3\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.CacheControlHeaderValue\n  id: CacheControlHeaderValue\n  children:\n  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.CacheControlHeaderValue.Private\n  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  - System.Net.Http.Headers.CacheControlHeaderValue.Public\n  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  - System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  langs:\n  - csharp\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue\n  type: Class\n  summary: Represents the value of the Cache-Control header.\n  syntax:\n    content: 'public class CacheControlHeaderValue : ICloneable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: CacheControlHeaderValue()\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> class.\n  syntax:\n    content: public CacheControlHeaderValue ();\n    parameters: []\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CacheControlHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  id: Extensions\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Cache-extension tokens, each with an optional assigned value.\n  remarks: This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n      description: A collection of cache-extension tokens each with an optional assigned value.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CacheControlHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Serves as a hash function for a  <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  remarks: \"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.  \\n  \\n The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current object.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  id: MaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: The maximum age, specified in seconds, that the HTTP client is willing to accept a response.\n  remarks: \"This property represents the \\\"max-age\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.\"\n  syntax:\n    content: public Nullable<TimeSpan> MaxAge { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  id: MaxStale\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP client is willing to accept a response that has exceeded its expiration time.\n  remarks: This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.\n  syntax:\n    content: public bool MaxStale { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  id: MaxStaleLimit\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.\n  remarks: \"This property represents the value assigned to \\\"max-stale\\\" directive in a cache-control header field on an HTTP request.  \\n  \\n If the MaxStaleLimit property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the MaxStaleLimit property, then the client is willing to accept a stale response of any age.\"\n  syntax:\n    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  id: MinFresh\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.\n  remarks: \"This property represents the \\\"min-fresh\\\" directive in a cache-control header field on an HTTP request.  \\n  \\n The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.\"\n  syntax:\n    content: public Nullable<TimeSpan> MinFresh { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  id: MustRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.\n  remarks: This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool MustRevalidate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  id: NoCache\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP client is willing to accept a cached response.\n  remarks: \"This property represents the \\\"no-cache\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n When the NoCache property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.\"\n  syntax:\n    content: public bool NoCache { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP client is willing to accept a cached response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  id: NoCacheHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.\n  remarks: This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: A collection of fieldnames.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  id: NoStore\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache must not store any part of either the HTTP request mressage or any response.\n  remarks: \"This property represents the \\\"no-store\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n The purpose of the NoStore property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.\"\n  syntax:\n    content: public bool NoStore { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache must not store any part of either the HTTP request mressage or any response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  id: NoTransform\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache or proxy must not change any aspect of the entity-body.\n  remarks: \"This property represents the \\\"no-transform\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n When the NoTransform is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.\"\n  syntax:\n    content: public bool NoTransform { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache or proxy must not change any aspect of the entity-body; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  id: OnlyIfCached\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.\n  remarks: This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.\n  syntax:\n    content: public bool OnlyIfCached { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: CacheControlHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Converts a string to an <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  syntax:\n    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that represents cache-control header value information.\n    return:\n      type: System.Net.Http.Headers.CacheControlHeaderValue\n      description: A <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>input</code> is not valid cache-control header value information.\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private\n  id: Private\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.\n  remarks: This property represents the \"private\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool Private { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  id: PrivateHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.\n  remarks: This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: A collection of fieldnames.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  id: ProxyRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.\n  remarks: \"This property represents the \\\"proxy-revalidate\\\" directive in a cache-control header field on an HTTP response.  \\n  \\n This property does not affect  non-shared user agent caches.\"\n  syntax:\n    content: public bool ProxyRevalidate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public\n  id: Public\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.\n  remarks: This property represents the \"public\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool Public { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  id: SharedMaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.\n  remarks: This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current instance.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CacheControlHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a string that represents the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: TryParse(String,CacheControlHeaderValue)\n  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether a string is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information.\n  syntax:\n    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);\n    parameters:\n    - id: input\n      type: System.String\n      description: The string to validate.\n    - id: parsedValue\n      type: System.Net.Http.Headers.CacheControlHeaderValue\n      description: The <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> version of the string.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: CacheControlHeaderValue()\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CacheControlHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<NameValueHeaderValue>\n  nameWithType: ICollection<NameValueHeaderValue>\n  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    nameWithType: NameValueHeaderValue\n    fullName: NameValueHeaderValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CacheControlHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: true\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.TimeSpan>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Parse(String)\n  nameWithType: CacheControlHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.CacheControlHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ToString()\n  nameWithType: CacheControlHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: TryParse(String,CacheControlHeaderValue)\n  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Equals\n  nameWithType: CacheControlHeaderValue.Equals\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CacheControlHeaderValue.GetHashCode\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Parse\n  nameWithType: CacheControlHeaderValue.Parse\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ToString\n  nameWithType: CacheControlHeaderValue.ToString\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: TryParse\n  nameWithType: CacheControlHeaderValue.TryParse\n"}