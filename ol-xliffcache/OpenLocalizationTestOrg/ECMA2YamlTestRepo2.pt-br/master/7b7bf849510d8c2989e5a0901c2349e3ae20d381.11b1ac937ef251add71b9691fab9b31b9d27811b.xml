{"nodes":[{"pos":[980,1038],"content":"Provides an interface for a designer to select components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an interface for a designer to select components.","pos":[0,58]}]},{"pos":[1050,1151],"content":"When a component is selected, its viewable or editable properties are shown in the Properties window.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a component is selected, its viewable or editable properties are shown in the Properties window.","pos":[0,101]}]},{"pos":[2363,2441],"content":"Gets a value indicating whether the specified component is currently selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the specified component is currently selected.","pos":[0,78]}]},{"pos":[2453,2636],"content":"This method can be used to check whether a specific component is currently selected. This process is generally quicker than getting and parsing the entire list of selected components.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be used to check whether a specific component is currently selected. This process is generally quicker than getting and parsing the entire list of selected components.","pos":[0,183],"nodes":[{"content":"This method can be used to check whether a specific component is currently selected.","pos":[0,84]},{"content":"This process is generally quicker than getting and parsing the entire list of selected components.","pos":[85,183]}]}]},{"pos":[2794,2816],"content":"The component to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to test.","pos":[0,22]}]},{"pos":[2875,3068],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the component is part of the user's current selection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the component is part of the user's current selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3637,3697],"content":"Gets a collection of components that are currently selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of components that are currently selected.","pos":[0,60]}]},{"pos":[3878,3955],"content":"A collection that represents the current set of components that are selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that represents the current set of components that are selected.","pos":[0,77]}]},{"pos":[4496,4558],"content":"Gets the object that is currently the primary selected object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object that is currently the primary selected object.","pos":[0,62]}]},{"pos":[4570,5204],"content":"When multiple components are selected at design time, one of the objects is the primary selected object. Some operations behave differently depending on which selected component is the primary selected object. The primary selected object is typically the last object that was selected, but the primary object of a multiple component selection can be changed to any of the selected components. The primary selected object has a selection border that is distinct in appearance from the other selected objects. The specific type of visual distinction depends on the development environment's implementation of a selection user interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When multiple components are selected at design time, one of the objects is the primary selected object. Some operations behave differently depending on which selected component is the primary selected object. The primary selected object is typically the last object that was selected, but the primary object of a multiple component selection can be changed to any of the selected components. The primary selected object has a selection border that is distinct in appearance from the other selected objects. The specific type of visual distinction depends on the development environment's implementation of a selection user interface.","pos":[0,634],"nodes":[{"content":"When multiple components are selected at design time, one of the objects is the primary selected object.","pos":[0,104]},{"content":"Some operations behave differently depending on which selected component is the primary selected object.","pos":[105,209]},{"content":"The primary selected object is typically the last object that was selected, but the primary object of a multiple component selection can be changed to any of the selected components.","pos":[210,392]},{"content":"The primary selected object has a selection border that is distinct in appearance from the other selected objects.","pos":[393,507]},{"content":"The specific type of visual distinction depends on the development environment's implementation of a selection user interface.","pos":[508,634]}]}]},{"pos":[5325,5382],"content":"The object that is currently the primary selected object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is currently the primary selected object.","pos":[0,57]}]},{"pos":[5915,5957],"content":"Occurs when the current selection changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the current selection changes.","pos":[0,42]}]},{"pos":[5969,6142],"content":"Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.","pos":[0,173]}]},{"pos":[6928,6940],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7401,7454],"content":"Occurs when the current selection is about to change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the current selection is about to change.","pos":[0,53]}]},{"pos":[7466,7639],"content":"Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.","pos":[0,173]}]},{"pos":[8427,8439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8888,8923],"content":"Gets the count of selected objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the count of selected objects.","pos":[0,35]}]},{"pos":[9038,9069],"content":"The number of selected objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of selected objects.","pos":[0,31]}]},{"pos":[9729,9776],"content":"Selects the specified collection of components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Selects the specified collection of components.","pos":[0,47]}]},{"pos":[9788,9917],"content":"If the array is <ph id=\"ph1\">`null`</ph> or does not contain any components, SetSelectedComponents selects the top-level component in the designer.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the array is `null` or does not contain any components, SetSelectedComponents selects the top-level component in the designer."},{"pos":[10119,10158],"content":"The collection of components to select.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of components to select.","pos":[0,39]}]},{"pos":[10958,11072],"content":"Selects the components from within the specified collection of components that match the specified selection type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Selects the components from within the specified collection of components that match the specified selection type.","pos":[0,114]}]},{"pos":[11084,11270],"content":"If the array is <ph id=\"ph1\">`null`</ph> or does not contain any components, &lt;xref:System.ComponentModel.Design.ISelectionService.SetSelectedComponents%2A&gt; selects the top-level component in the designer.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the array is `null` or does not contain any components, <xref:System.ComponentModel.Design.ISelectionService.SetSelectedComponents%2A> selects the top-level component in the designer."},{"pos":[11531,11570],"content":"The collection of components to select.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of components to select.","pos":[0,39]}]},{"pos":[11670,11845],"content":"A value from the <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.SelectionTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","pos":[0,94],"source":"A value from the <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref> enumeration."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.SelectionTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[95,175],"source":" The default is <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ISelectionService\n  id: ISelectionService\n  children:\n  - System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)\n  - System.ComponentModel.Design.ISelectionService.GetSelectedComponents\n  - System.ComponentModel.Design.ISelectionService.PrimarySelection\n  - System.ComponentModel.Design.ISelectionService.SelectionChanged\n  - System.ComponentModel.Design.ISelectionService.SelectionChanging\n  - System.ComponentModel.Design.ISelectionService.SelectionCount\n  - System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)\n  - System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)\n  langs:\n  - csharp\n  name: ISelectionService\n  nameWithType: ISelectionService\n  fullName: System.ComponentModel.Design.ISelectionService\n  type: Interface\n  summary: Provides an interface for a designer to select components.\n  remarks: When a component is selected, its viewable or editable properties are shown in the Properties window.\n  example:\n  - \"The following example demonstrates use of the ISelectionService to handle the <xref:System.ComponentModel.Design.ISelectionService.SelectionChanged> and <xref:System.ComponentModel.Design.ISelectionService.SelectionChanging> events.  \\n  \\n [!code-vb[ISelectionServiceSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._45_1.vb)]\\n [!code-cpp[ISelectionServiceSample#1](~/add/codesnippet/cpp/t-system.componentmodel._45_1.cpp)]\\n [!code-cs[ISelectionServiceSample#1](~/add/codesnippet/csharp/t-system.componentmodel._45_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISelectionService\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)\n  id: GetComponentSelected(System.Object)\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: GetComponentSelected(Object)\n  nameWithType: ISelectionService.GetComponentSelected(Object)\n  fullName: System.ComponentModel.Design.ISelectionService.GetComponentSelected(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the specified component is currently selected.\n  remarks: This method can be used to check whether a specific component is currently selected. This process is generally quicker than getting and parsing the entire list of selected components.\n  syntax:\n    content: public bool GetComponentSelected (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the component is part of the user's current selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.ISelectionService.GetComponentSelected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.GetSelectedComponents\n  id: GetSelectedComponents\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: GetSelectedComponents()\n  nameWithType: ISelectionService.GetSelectedComponents()\n  fullName: System.ComponentModel.Design.ISelectionService.GetSelectedComponents()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a collection of components that are currently selected.\n  syntax:\n    content: public System.Collections.ICollection GetSelectedComponents ();\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: A collection that represents the current set of components that are selected.\n  overload: System.ComponentModel.Design.ISelectionService.GetSelectedComponents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.PrimarySelection\n  id: PrimarySelection\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: PrimarySelection\n  nameWithType: ISelectionService.PrimarySelection\n  fullName: System.ComponentModel.Design.ISelectionService.PrimarySelection\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the object that is currently the primary selected object.\n  remarks: When multiple components are selected at design time, one of the objects is the primary selected object. Some operations behave differently depending on which selected component is the primary selected object. The primary selected object is typically the last object that was selected, but the primary object of a multiple component selection can be changed to any of the selected components. The primary selected object has a selection border that is distinct in appearance from the other selected objects. The specific type of visual distinction depends on the development environment's implementation of a selection user interface.\n  syntax:\n    content: public object PrimarySelection { get; }\n    return:\n      type: System.Object\n      description: The object that is currently the primary selected object.\n  overload: System.ComponentModel.Design.ISelectionService.PrimarySelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.SelectionChanged\n  id: SelectionChanged\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: SelectionChanged\n  nameWithType: ISelectionService.SelectionChanged\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionChanged\n  type: Event\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the current selection changes.\n  remarks: Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.\n  example:\n  - \"The following example illustrates how to use the SelectionChanged event.  \\n  \\n [!code-cs[ISelectionService#2](~/add/codesnippet/csharp/e-system.componentmodel._0_1.cs)]\\n [!code-cpp[ISelectionService#2](~/add/codesnippet/cpp/e-system.componentmodel._0_1.cpp)]\\n [!code-vb[ISelectionService#2](~/add/codesnippet/visualbasic/e-system.componentmodel._0_1.vb)]  \\n[!code-cs[ISelectionService#3](~/add/codesnippet/csharp/e-system.componentmodel._0_2.cs)]\\n[!code-cpp[ISelectionService#3](~/add/codesnippet/cpp/e-system.componentmodel._0_2.cpp)]\\n[!code-vb[ISelectionService#3](~/add/codesnippet/visualbasic/e-system.componentmodel._0_2.vb)]\"\n  syntax:\n    content: public event EventHandler SelectionChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.SelectionChanging\n  id: SelectionChanging\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: SelectionChanging\n  nameWithType: ISelectionService.SelectionChanging\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionChanging\n  type: Event\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the current selection is about to change.\n  remarks: Minimize processing when handling this event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.\n  example:\n  - \"The following example illustrates how to use the SelectionChanging event.  \\n  \\n [!code-cs[ISelectionService#4](~/add/codesnippet/csharp/e-system.componentmodel._1_1.cs)]\\n [!code-cpp[ISelectionService#4](~/add/codesnippet/cpp/e-system.componentmodel._1_1.cpp)]\\n [!code-vb[ISelectionService#4](~/add/codesnippet/visualbasic/e-system.componentmodel._1_1.vb)]  \\n[!code-cs[ISelectionService#5](~/add/codesnippet/csharp/e-system.componentmodel._1_2.cs)]\\n[!code-cpp[ISelectionService#5](~/add/codesnippet/cpp/e-system.componentmodel._1_2.cpp)]\\n[!code-vb[ISelectionService#5](~/add/codesnippet/visualbasic/e-system.componentmodel._1_2.vb)]\"\n  syntax:\n    content: public event EventHandler SelectionChanging;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.SelectionCount\n  id: SelectionCount\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: SelectionCount\n  nameWithType: ISelectionService.SelectionCount\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionCount\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the count of selected objects.\n  syntax:\n    content: public int SelectionCount { get; }\n    return:\n      type: System.Int32\n      description: The number of selected objects.\n  overload: System.ComponentModel.Design.ISelectionService.SelectionCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)\n  id: SetSelectedComponents(System.Collections.ICollection)\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: SetSelectedComponents(ICollection)\n  nameWithType: ISelectionService.SetSelectedComponents(ICollection)\n  fullName: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Selects the specified collection of components.\n  remarks: If the array is `null` or does not contain any components, SetSelectedComponents selects the top-level component in the designer.\n  syntax:\n    content: public void SetSelectedComponents (System.Collections.ICollection components);\n    parameters:\n    - id: components\n      type: System.Collections.ICollection\n      description: The collection of components to select.\n  overload: System.ComponentModel.Design.ISelectionService.SetSelectedComponents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)\n  id: SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)\n  parent: System.ComponentModel.Design.ISelectionService\n  langs:\n  - csharp\n  name: SetSelectedComponents(ICollection,SelectionTypes)\n  nameWithType: ISelectionService.SetSelectedComponents(ICollection,SelectionTypes)\n  fullName: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection,SelectionTypes)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Selects the components from within the specified collection of components that match the specified selection type.\n  remarks: If the array is `null` or does not contain any components, <xref:System.ComponentModel.Design.ISelectionService.SetSelectedComponents%2A> selects the top-level component in the designer.\n  syntax:\n    content: public void SetSelectedComponents (System.Collections.ICollection components, System.ComponentModel.Design.SelectionTypes selectionType);\n    parameters:\n    - id: components\n      type: System.Collections.ICollection\n      description: The collection of components to select.\n    - id: selectionType\n      type: System.ComponentModel.Design.SelectionTypes\n      description: A value from the <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.Design.SelectionTypes\"></xref>.\n  overload: System.ComponentModel.Design.ISelectionService.SetSelectedComponents*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: GetComponentSelected(Object)\n  nameWithType: ISelectionService.GetComponentSelected(Object)\n  fullName: System.ComponentModel.Design.ISelectionService.GetComponentSelected(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.ISelectionService.GetSelectedComponents\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: GetSelectedComponents()\n  nameWithType: ISelectionService.GetSelectedComponents()\n  fullName: System.ComponentModel.Design.ISelectionService.GetSelectedComponents()\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.ISelectionService.PrimarySelection\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: PrimarySelection\n  nameWithType: ISelectionService.PrimarySelection\n  fullName: System.ComponentModel.Design.ISelectionService.PrimarySelection\n- uid: System.ComponentModel.Design.ISelectionService.SelectionChanged\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SelectionChanged\n  nameWithType: ISelectionService.SelectionChanged\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.ISelectionService.SelectionChanging\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SelectionChanging\n  nameWithType: ISelectionService.SelectionChanging\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionChanging\n- uid: System.ComponentModel.Design.ISelectionService.SelectionCount\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SelectionCount\n  nameWithType: ISelectionService.SelectionCount\n  fullName: System.ComponentModel.Design.ISelectionService.SelectionCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SetSelectedComponents(ICollection)\n  nameWithType: ISelectionService.SetSelectedComponents(ICollection)\n  fullName: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection)\n- uid: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SetSelectedComponents(ICollection,SelectionTypes)\n  nameWithType: ISelectionService.SetSelectedComponents(ICollection,SelectionTypes)\n  fullName: System.ComponentModel.Design.ISelectionService.SetSelectedComponents(ICollection,SelectionTypes)\n- uid: System.ComponentModel.Design.SelectionTypes\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: SelectionTypes\n  nameWithType: SelectionTypes\n  fullName: System.ComponentModel.Design.SelectionTypes\n- uid: System.ComponentModel.Design.ISelectionService.GetComponentSelected*\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: GetComponentSelected\n  nameWithType: ISelectionService.GetComponentSelected\n- uid: System.ComponentModel.Design.ISelectionService.GetSelectedComponents*\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: GetSelectedComponents\n  nameWithType: ISelectionService.GetSelectedComponents\n- uid: System.ComponentModel.Design.ISelectionService.PrimarySelection*\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: PrimarySelection\n  nameWithType: ISelectionService.PrimarySelection\n- uid: System.ComponentModel.Design.ISelectionService.SelectionCount*\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SelectionCount\n  nameWithType: ISelectionService.SelectionCount\n- uid: System.ComponentModel.Design.ISelectionService.SetSelectedComponents*\n  parent: System.ComponentModel.Design.ISelectionService\n  isExternal: false\n  name: SetSelectedComponents\n  nameWithType: ISelectionService.SetSelectedComponents\n"}