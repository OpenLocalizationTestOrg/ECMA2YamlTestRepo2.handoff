{"nodes":[{"pos":[3857,3967],"content":"Defines the collection of configurable properties controlling the behavior of the Windows Identity Foundation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the collection of configurable properties controlling the behavior of the Windows Identity Foundation.","pos":[0,110]}]},{"pos":[4598,4782],"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class. Settings are loaded from the default configuration, if it exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,118],"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class."},{"content":"Settings are loaded from the default configuration, if it exists.","pos":[119,184]}]},{"pos":[4794,4980],"content":"Property values are loaded from the unnamed <ph id=\"ph1\">`&lt;identityConfiguration&gt;`</ph> element in the configuration file, if such an element exists; otherwise, properties are set to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file, if such an element exists; otherwise, properties are set to their default values."},{"pos":[5701,5916],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a value that specifies whether settings should be loaded from the default configuration.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class by using a value that specifies whether settings should be loaded from the default configuration."},{"pos":[5928,6113],"content":"If <ph id=\"ph1\">`loadConfig`</ph> is <ph id=\"ph2\">`true`</ph>, property values are loaded from the unnamed <ph id=\"ph3\">`&lt;identityConfiguration&gt;`</ph> element in the configuration file; otherwise properties are set to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If `loadConfig` is `true`, property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file; otherwise properties are set to their default values."},{"pos":[6268,6448],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to load settings from the configuration file; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to load settings from the configuration file; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6649,6885],"content":"<ph id=\"ph1\">&lt;code&gt;loadConfig&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, but there is no <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;system.identityModel&amp;gt;\" name=\"&amp;lt;system.identityModel&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> configuration element.","needQuote":true,"needEscape":true,"source":"<code>loadConfig</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but there is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element."},{"pos":[7561,7722],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has the specified service certificate.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate."},{"pos":[7734,7920],"content":"Property values are loaded from the unnamed <ph id=\"ph1\">`&lt;identityConfiguration&gt;`</ph> element in the configuration file, if such an element exists; otherwise, properties are set to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file, if such an element exists; otherwise, properties are set to their default values."},{"pos":[8197,8324],"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","pos":[0,127],"nodes":[{"content":"The service certificate.","pos":[0,24]},{"content":"Sets the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*&gt; property.","pos":[25,127],"source":" Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property."}]}]},{"pos":[8965,9133],"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class. Settings are loaded from the named configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,118],"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class."},{"content":"Settings are loaded from the named configuration.","pos":[119,168]}]},{"pos":[9145,9285],"content":"If this constructor is called then a System.IdentityModel configuration section with the provided name must exist in the configuration file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this constructor is called then a System.IdentityModel configuration section with the provided name must exist in the configuration file.","pos":[0,140]}]},{"pos":[9471,9643],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;identityConfiguration&amp;gt;\" name=\"&amp;lt;identityConfiguration&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element from which settings are to be loaded.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element from which settings are to be loaded."},{"pos":[9844,9987],"content":"There is no <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;system.identityModel&amp;gt;\" name=\"&amp;lt;system.identityModel&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> configuration element.","needQuote":true,"needEscape":true,"source":"There is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element."},{"pos":[10717,10937],"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate. Settings are optionally loading the default configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has the specified service certificate.","pos":[0,161],"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate."},{"content":"Settings are optionally loading the default configuration.","pos":[162,220]}]},{"pos":[10949,11134],"content":"If <ph id=\"ph1\">`loadConfig`</ph> is <ph id=\"ph2\">`true`</ph>, property values are loaded from the unnamed <ph id=\"ph3\">`&lt;identityConfiguration&gt;`</ph> element in the configuration file; otherwise properties are set to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If `loadConfig` is `true`, property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file; otherwise properties are set to their default values."},{"pos":[11372,11552],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to load settings from the configuration file; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to load settings from the configuration file; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11676,11803],"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","pos":[0,127],"nodes":[{"content":"The service certificate.","pos":[0,24]},{"content":"Sets the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*&gt; property.","pos":[25,127],"source":" Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property."}]}]},{"pos":[12004,12240],"content":"<ph id=\"ph1\">&lt;code&gt;loadConfig&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, but there is no <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;system.identityModel&amp;gt;\" name=\"&amp;lt;system.identityModel&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> configuration element.","needQuote":true,"needEscape":true,"source":"<code>loadConfig</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but there is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element."},{"pos":[12965,13159],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has the specified service certificate, loading the named configuration.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate, loading the named configuration."},{"pos":[13428,13575],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;service&amp;gt;\" name=\"&amp;lt;service&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element from which configuration is to be loaded","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_&lt;service&gt;\" name=\"&lt;service&gt;\" href=\"\"></xref> element from which configuration is to be loaded"},{"pos":[13699,13826],"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.","pos":[0,127],"nodes":[{"content":"The service certificate.","pos":[0,24]},{"content":"Sets the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*&gt; property.","pos":[25,127],"source":" Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property."}]}]},{"pos":[14027,14169],"content":"There is no <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;System.IdentityModel&amp;gt;\" name=\"&amp;lt;System.IdentityModel&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> configuration element","needQuote":true,"needEscape":true,"source":"There is no <xref uid=\"langword_csharp_&lt;System.IdentityModel&gt;\" name=\"&lt;System.IdentityModel&gt;\" href=\"\"></xref> configuration element"},{"pos":[14680,14777],"content":"Gets or sets the configured <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the configured <xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"></xref>."},{"pos":[14981,15065],"content":"The configured <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The configured <xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"></xref>."},{"pos":[15618,15722],"content":"Gets or sets the configured <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityModelCaches\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the configured <xref href=\"System.IdentityModel.Configuration.IdentityModelCaches\"></xref>."},{"pos":[15734,15894],"content":"The <xref:System.IdentityModel.Configuration.IdentityModelCaches> contains the token replay cache and session token cache that are configured for this instance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Configuration.IdentityModelCaches&gt; contains the token replay cache and session token cache that are configured for this instance.","pos":[0,160],"source":"The <xref:System.IdentityModel.Configuration.IdentityModelCaches> contains the token replay cache and session token cache that are configured for this instance."}]},{"pos":[16099,16121],"content":"The configured caches.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configured caches.","pos":[0,22]}]},{"pos":[16756,16850],"content":"Gets or sets the certificate validation mode used by handlers to validate issuer certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the certificate validation mode used by handlers to validate issuer certificates.","pos":[0,94]}]},{"pos":[17082,17114],"content":"The certificate validation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The certificate validation mode.","pos":[0,32]}]},{"pos":[17743,17831],"content":"Gets or sets the certificate validator used by handlers to validate issuer certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the certificate validator used by handlers to validate issuer certificates.","pos":[0,88]}]},{"pos":[18052,18078],"content":"The certificate validator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The certificate validator.","pos":[0,26]}]},{"pos":[18737,18897],"content":"Gets or sets the claims authentication manager. The default is an instance of the <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the claims authentication manager.","pos":[0,47]},{"content":"The default is an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[48,160],"source":" The default is an instance of the <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> class."}]},{"pos":[19115,19149],"content":"The claims authentication manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claims authentication manager.","pos":[0,34]}]},{"pos":[19364,19466],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[20012,20058],"content":"Gets or sets the claims authorization manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the claims authorization manager.","pos":[0,46]}]},{"pos":[20273,20306],"content":"The claims authorization manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claims authorization manager.","pos":[0,33]}]},{"pos":[20520,20622],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[21195,21339],"content":"The default X.509 certificate validation mode, &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default X.509 certificate validation mode, <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Security.X509CertificateValidationMode?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,144],"source":"The default X.509 certificate validation mode, &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode?displayProperty=fullName&gt;."}]},{"pos":[21581,21593],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22168,22329],"content":"The default issuer name registry type; the &lt;xref:System.Type&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The default issuer name registry type; the <xref:System.Type> of the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"></xref> class."},{"pos":[22467,22479],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23004,23046],"content":"The default maximum clock skew; 5 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default maximum clock skew; 5 minutes.","pos":[0,42]}]},{"pos":[23182,23194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23729,23850],"content":"The default X.509 revocation mode; <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The default X.509 revocation mode; <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\"></xref>."},{"pos":[24093,24105],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24625,24667],"content":"The default service name; an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default service name; an empty string.","pos":[0,42]}]},{"pos":[24788,24800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25365,25499],"content":"The default trusted store location for certificates; <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The default trusted store location for certificates; <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>."},{"pos":[25738,25750],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26283,26403],"content":"Gets or sets a value in the default handler configuration that indicates whether handlers should detect replayed tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value in the default handler configuration that indicates whether handlers should detect replayed tokens.","pos":[0,120]}]},{"pos":[26532,26709],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if handlers should detect replayed tokens; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if handlers should detect replayed tokens; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27287,27757],"content":"Updates properties in the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects contained in the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*&gt; to be consistent with the property values on this <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Updates properties in the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> objects for the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> objects contained in the <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*> to be consistent with the property values on this <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> instance."},{"pos":[27769,28128],"content":"This method should be invoked prior to using the token handlers to process tokens. The <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager%2A> property specifies the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager> that contains the security token handlers configured for this instance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should be invoked prior to using the token handlers to process tokens. The <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager%2A> property specifies the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager> that contains the security token handlers configured for this instance.","pos":[0,359],"nodes":[{"content":"This method should be invoked prior to using the token handlers to process tokens.","pos":[0,82]},{"content":"The &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager%2A&gt; property specifies the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager&gt; that contains the security token handlers configured for this instance.","pos":[83,359],"source":" The <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager%2A> property specifies the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager> that contains the security token handlers configured for this instance."}]}]},{"pos":[28411,28449],"content":"This method is invoked more than once.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is invoked more than once.","pos":[0,38]}]},{"pos":[28930,29077],"content":"Gets or sets a value that indicates whether the <xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*> method has been called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*&gt; method has been called.","pos":[0,147],"source":"Gets or sets a value that indicates whether the <xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*> method has been called."}]},{"pos":[29217,29458],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*&gt; method has been called; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*> method has been called; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30065,30132],"content":"Gets or sets the issuer name registry used to resolve issuer names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the issuer name registry used to resolve issuer names.","pos":[0,67]}]},{"pos":[30333,30358],"content":"The issuer name registry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The issuer name registry.","pos":[0,25]}]},{"pos":[30564,30666],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[31177,31216],"content":"Gets or sets the issuer token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the issuer token resolver.","pos":[0,39]}]},{"pos":[31430,31456],"content":"The issuer token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The issuer token resolver.","pos":[0,26]}]},{"pos":[31663,31765],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[32484,32646],"content":"Loads the settings for this <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance from the application or Web configuration file.","needQuote":true,"needEscape":true,"source":"Loads the settings for this <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> instance from the application or Web configuration file."},{"pos":[32658,32996],"content":"If there is no configuration file, if the named section does not exist, or if `element` is `null`, then no exception is thrown; instead the instance is loaded with a set of default values. This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers%2A> method to load the token handler configuration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is no configuration file, if the named section does not exist, or if <ph id=\"ph1\">`element`</ph> is <ph id=\"ph2\">`null`</ph>, then no exception is thrown; instead the instance is loaded with a set of default values.","pos":[0,188],"source":"If there is no configuration file, if the named section does not exist, or if `element` is `null`, then no exception is thrown; instead the instance is loaded with a set of default values."},{"content":"This method calls the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers%2A&gt; method to load the token handler configuration.","pos":[189,338],"source":" This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers%2A> method to load the token handler configuration."}]},{"pos":[33257,33374],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the configuration file.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"></xref> from the configuration file."},{"pos":[34233,34460],"content":"Loads a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by using the elements directly under the specified <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Loads a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> by using the elements directly under the specified <xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"></xref>."},{"pos":[34785,34964],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;identityConfiguration&amp;gt;\" name=\"&amp;lt;identityConfiguration&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element from the configuration file from which to load settings.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element from the configuration file from which to load settings."},{"pos":[35070,35208],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loaded from the elements in the configuration file.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> loaded from the elements in the configuration file."},{"pos":[36360,36487],"content":"Loads configuration elements pertaining to the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Loads configuration elements pertaining to the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref>."},{"pos":[36913,37042],"content":"The base <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which to inherit default values.","needQuote":true,"needEscape":true,"source":"The base <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> from which to inherit default values."},{"pos":[37168,37297],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the configuration file.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\"></xref> from the configuration file."},{"pos":[37403,37580],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> loaded from the elements in the configuration file and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">baseConfiguration</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> loaded from the elements in the configuration file and the <code>baseConfiguration</code>."},{"pos":[38386,38517],"content":"Loads the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> defined for the specified service.","needQuote":true,"needEscape":true,"source":"Loads the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> defined for the specified service."},{"pos":[38529,38683],"content":"This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration%2A> methods to configure the token handlers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method calls the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration%2A&gt; methods to configure the token handlers.","pos":[0,154],"source":"This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration%2A> methods to configure the token handlers."}]},{"pos":[39014,39169],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;identityConfiguration&amp;gt;\" name=\"&amp;lt;identityConfiguration&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element used to configure this instance.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element used to configure this instance."},{"pos":[39279,39310],"content":"The handler collection manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handler collection manager.","pos":[0,31]}]},{"pos":[39886,40005],"content":"Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.","pos":[0,119]}]},{"pos":[40131,40154],"content":"The maximum clock skew.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum clock skew.","pos":[0,23]}]},{"pos":[40690,40734],"content":"Gets the service name of this configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service name of this configuration.","pos":[0,44]}]},{"pos":[40843,40860],"content":"The service name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service name.","pos":[0,17]}]},{"pos":[41438,41520],"content":"Gets or sets the revocation mode used by handlers to validate issuer certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the revocation mode used by handlers to validate issuer certificates.","pos":[0,82]}]},{"pos":[41753,41773],"content":"The revocation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The revocation mode.","pos":[0,20]}]},{"pos":[42391,42623],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.BootstrapContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is saved in the <bpt id=\"p2\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and Sessions after token validation.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.IdentityModel.Tokens.BootstrapContext\"></xref> object is saved in the <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> and Sessions after token validation."},{"pos":[42752,42918],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if bootstrap context is saved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if bootstrap context is saved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43627,43897],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the set of <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that are used to serialize and validate tokens found in WS-Trust messages.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> containing the set of <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> objects that are used to serialize and validate tokens found in WS-Trust messages."},{"pos":[44150,44181],"content":"The handler collection manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handler collection manager.","pos":[0,31]}]},{"pos":[44827,44993],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects used to serialize and validate tokens found in WS-Trust messages.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> objects used to serialize and validate tokens found in WS-Trust messages."},{"pos":[45005,45067],"content":"To register your own token handler, add it to this collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To register your own token handler, add it to this collection.","pos":[0,62]}]},{"pos":[45290,45323],"content":"The collection of token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of token handlers.","pos":[0,33]}]},{"pos":[45938,45975],"content":"Gets or sets the service certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the service certificate.","pos":[0,37]}]},{"pos":[45987,46295],"content":"This is the service certificate that is used to initialize the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> specified in the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver%2A> property and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the service certificate that is used to initialize the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver&gt; specified in the &lt;xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver%2A&gt; property and the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;.","pos":[0,308],"source":"This is the service certificate that is used to initialize the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> specified in the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver%2A> property and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>."}]},{"pos":[46528,46584],"content":"The X.509 certificate to use as the service certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 certificate to use as the service certificate.","pos":[0,56]}]},{"pos":[47206,47246],"content":"Gets or sets the service token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the service token resolver.","pos":[0,40]}]},{"pos":[47461,47488],"content":"The service token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service token resolver.","pos":[0,27]}]},{"pos":[47696,47798],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[48374,48499],"content":"Gets or sets the expiration period for items placed in the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the expiration period for items placed in the <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>."},{"pos":[48645,48710],"content":"The expiration period for items placed in the token replay cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expiration period for items placed in the token replay cache.","pos":[0,65]}]},{"pos":[49346,49435],"content":"Gets or sets the trusted store location used by handlers to validate issuer certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the trusted store location used by handlers to validate issuer certificates.","pos":[0,89]}]},{"pos":[49664,49691],"content":"The trusted store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The trusted store location.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.IdentityConfiguration\n  id: IdentityConfiguration\n  children:\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean)\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String)\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction\n  - System.IdentityModel.Configuration.IdentityConfiguration.Caches\n  - System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode\n  - System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator\n  - System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager\n  - System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName\n  - System.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation\n  - System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens\n  - System.IdentityModel.Configuration.IdentityConfiguration.Initialize\n  - System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized\n  - System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry\n  - System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver\n  - System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  - System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  - System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration,System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement)\n  - System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  - System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew\n  - System.IdentityModel.Configuration.IdentityConfiguration.Name\n  - System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode\n  - System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext\n  - System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  - System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\n  - System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate\n  - System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver\n  - System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  - System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation\n  langs:\n  - csharp\n  name: IdentityConfiguration\n  nameWithType: IdentityConfiguration\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration\n  type: Class\n  summary: Defines the collection of configurable properties controlling the behavior of the Windows Identity Foundation.\n  syntax:\n    content: public class IdentityConfiguration\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration()\n  nameWithType: IdentityConfiguration.IdentityConfiguration()\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class. Settings are loaded from the default configuration, if it exists.\n  remarks: Property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file, if such an element exists; otherwise, properties are set to their default values.\n  syntax:\n    content: public IdentityConfiguration ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration(Boolean)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(Boolean)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class by using a value that specifies whether settings should be loaded from the default configuration.\n  remarks: If `loadConfig` is `true`, property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file; otherwise properties are set to their default values.\n  syntax:\n    content: public IdentityConfiguration (bool loadConfig);\n    parameters:\n    - id: loadConfig\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to load settings from the configuration file; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>loadConfig</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but there is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration(X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate.\n  remarks: Property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file, if such an element exists; otherwise, properties are set to their default values.\n  syntax:\n    content: public IdentityConfiguration (System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCertificate);\n    parameters:\n    - id: serviceCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration(String)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(String)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class. Settings are loaded from the named configuration.\n  remarks: If this constructor is called then a System.IdentityModel configuration section with the provided name must exist in the configuration file.\n  syntax:\n    content: public IdentityConfiguration (string identityConfigurationName);\n    parameters:\n    - id: identityConfigurationName\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element from which settings are to be loaded.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration(Boolean,X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(Boolean,X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(Boolean,X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate. Settings are optionally loading the default configuration.\n  remarks: If `loadConfig` is `true`, property values are loaded from the unnamed `<identityConfiguration>` element in the configuration file; otherwise properties are set to their default values.\n  syntax:\n    content: public IdentityConfiguration (bool loadConfig, System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCertificate);\n    parameters:\n    - id: loadConfig\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to load settings from the configuration file; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: serviceCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>loadConfig</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but there is no <xref uid=\"langword_csharp_&lt;system.identityModel&gt;\" name=\"&lt;system.identityModel&gt;\" href=\"\"></xref> configuration element.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IdentityConfiguration(String,X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(String,X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(String,X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> class that has the specified service certificate, loading the named configuration.\n  syntax:\n    content: public IdentityConfiguration (string identityConfigurationName, System.Security.Cryptography.X509Certificates.X509Certificate2 serviceCertificate);\n    parameters:\n    - id: identityConfigurationName\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_&lt;service&gt;\" name=\"&lt;service&gt;\" href=\"\"></xref> element from which configuration is to be loaded\n    - id: serviceCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The service certificate. Sets the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*> property.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no <xref uid=\"langword_csharp_&lt;System.IdentityModel&gt;\" name=\"&lt;System.IdentityModel&gt;\" href=\"\"></xref> configuration element\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction\n  id: AudienceRestriction\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: AudienceRestriction\n  nameWithType: IdentityConfiguration.AudienceRestriction\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the configured <xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"></xref>.\n  syntax:\n    content: public System.IdentityModel.Tokens.AudienceRestriction AudienceRestriction { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.AudienceRestriction\n      description: The configured <xref href=\"System.IdentityModel.Tokens.AudienceRestriction\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Caches\n  id: Caches\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: Caches\n  nameWithType: IdentityConfiguration.Caches\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Caches\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the configured <xref href=\"System.IdentityModel.Configuration.IdentityModelCaches\"></xref>.\n  remarks: The <xref:System.IdentityModel.Configuration.IdentityModelCaches> contains the token replay cache and session token cache that are configured for this instance.\n  syntax:\n    content: public System.IdentityModel.Configuration.IdentityModelCaches Caches { get; set; }\n    return:\n      type: System.IdentityModel.Configuration.IdentityModelCaches\n      description: The configured caches.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.Caches*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode\n  id: CertificateValidationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: CertificateValidationMode\n  nameWithType: IdentityConfiguration.CertificateValidationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the certificate validation mode used by handlers to validate issuer certificates.\n  syntax:\n    content: public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }\n    return:\n      type: System.ServiceModel.Security.X509CertificateValidationMode\n      description: The certificate validation mode.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator\n  id: CertificateValidator\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: CertificateValidator\n  nameWithType: IdentityConfiguration.CertificateValidator\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the certificate validator used by handlers to validate issuer certificates.\n  syntax:\n    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The certificate validator.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager\n  id: ClaimsAuthenticationManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: ClaimsAuthenticationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthenticationManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the claims authentication manager. The default is an instance of the <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> class.\n  syntax:\n    content: public System.Security.Claims.ClaimsAuthenticationManager ClaimsAuthenticationManager { get; set; }\n    return:\n      type: System.Security.Claims.ClaimsAuthenticationManager\n      description: The claims authentication manager.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager\n  id: ClaimsAuthorizationManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: ClaimsAuthorizationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthorizationManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the claims authorization manager.\n  syntax:\n    content: public System.Security.Claims.ClaimsAuthorizationManager ClaimsAuthorizationManager { get; set; }\n    return:\n      type: System.Security.Claims.ClaimsAuthorizationManager\n      description: The claims authorization manager.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode\n  id: DefaultCertificateValidationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultCertificateValidationMode\n  nameWithType: IdentityConfiguration.DefaultCertificateValidationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default X.509 certificate validation mode, &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode?displayProperty=fullName&gt;.\n  syntax:\n    content: public static readonly System.ServiceModel.Security.X509CertificateValidationMode DefaultCertificateValidationMode;\n    return:\n      type: System.ServiceModel.Security.X509CertificateValidationMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType\n  id: DefaultIssuerNameRegistryType\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultIssuerNameRegistryType\n  nameWithType: IdentityConfiguration.DefaultIssuerNameRegistryType\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default issuer name registry type; the <xref:System.Type> of the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"></xref> class.\n  syntax:\n    content: public static readonly Type DefaultIssuerNameRegistryType;\n    return:\n      type: System.Type\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew\n  id: DefaultMaxClockSkew\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultMaxClockSkew\n  nameWithType: IdentityConfiguration.DefaultMaxClockSkew\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default maximum clock skew; 5 minutes.\n  syntax:\n    content: public static readonly TimeSpan DefaultMaxClockSkew;\n    return:\n      type: System.TimeSpan\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode\n  id: DefaultRevocationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultRevocationMode\n  nameWithType: IdentityConfiguration.DefaultRevocationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default X.509 revocation mode; <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\"></xref>.\n  syntax:\n    content: public static readonly System.Security.Cryptography.X509Certificates.X509RevocationMode DefaultRevocationMode;\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName\n  id: DefaultServiceName\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultServiceName\n  nameWithType: IdentityConfiguration.DefaultServiceName\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default service name; an empty string.\n  syntax:\n    content: public const string DefaultServiceName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation\n  id: DefaultTrustedStoreLocation\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DefaultTrustedStoreLocation\n  nameWithType: IdentityConfiguration.DefaultTrustedStoreLocation\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: The default trusted store location for certificates; <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>.\n  syntax:\n    content: public static readonly System.Security.Cryptography.X509Certificates.StoreLocation DefaultTrustedStoreLocation;\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens\n  id: DetectReplayedTokens\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: DetectReplayedTokens\n  nameWithType: IdentityConfiguration.DetectReplayedTokens\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets a value in the default handler configuration that indicates whether handlers should detect replayed tokens.\n  syntax:\n    content: public bool DetectReplayedTokens { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if handlers should detect replayed tokens; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Initialize\n  id: Initialize\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: IdentityConfiguration.Initialize()\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Initialize()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Updates properties in the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> objects for the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> objects contained in the <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*> to be consistent with the property values on this <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> instance.\n  remarks: This method should be invoked prior to using the token handlers to process tokens. The <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager%2A> property specifies the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager> that contains the security token handlers configured for this instance.\n  syntax:\n    content: public virtual void Initialize ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.Initialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is invoked more than once.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized\n  id: IsInitialized\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IsInitialized\n  nameWithType: IdentityConfiguration.IsInitialized\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets a value that indicates whether the <xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*> method has been called.\n  syntax:\n    content: public virtual bool IsInitialized { get; protected set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize*> method has been called; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry\n  id: IssuerNameRegistry\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IssuerNameRegistry\n  nameWithType: IdentityConfiguration.IssuerNameRegistry\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the issuer name registry used to resolve issuer names.\n  syntax:\n    content: public System.IdentityModel.Tokens.IssuerNameRegistry IssuerNameRegistry { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.IssuerNameRegistry\n      description: The issuer name registry.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver\n  id: IssuerTokenResolver\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: IssuerTokenResolver\n  nameWithType: IdentityConfiguration.IssuerTokenResolver\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the issuer token resolver.\n  syntax:\n    content: public System.IdentityModel.Selectors.SecurityTokenResolver IssuerTokenResolver { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The issuer token resolver.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  id: LoadConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: LoadConfiguration(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadConfiguration(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration(IdentityConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Loads the settings for this <xref href=\"System.IdentityModel.Configuration.IdentityConfiguration\"></xref> instance from the application or Web configuration file.\n  remarks: If there is no configuration file, if the named section does not exist, or if `element` is `null`, then no exception is thrown; instead the instance is loaded with a set of default values. This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers%2A> method to load the token handler configuration.\n  syntax:\n    content: protected void LoadConfiguration (System.IdentityModel.Configuration.IdentityConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.IdentityModel.Configuration.IdentityConfigurationElement\n      description: The <xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"></xref> from the configuration file.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  id: LoadHandlerConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: LoadHandlerConfiguration(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlerConfiguration(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(IdentityConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Loads a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> by using the elements directly under the specified <xref href=\"System.IdentityModel.Configuration.IdentityConfigurationElement\"></xref>.\n  syntax:\n    content: protected System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration LoadHandlerConfiguration (System.IdentityModel.Configuration.IdentityConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.IdentityModel.Configuration.IdentityConfigurationElement\n      description: The <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element from the configuration file from which to load settings.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> loaded from the elements in the configuration file.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration,System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement)\n  id: LoadHandlerConfiguration(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration,System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Loads configuration elements pertaining to the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref>.\n  syntax:\n    content: protected System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration LoadHandlerConfiguration (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration baseConfiguration, System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement element);\n    parameters:\n    - id: baseConfiguration\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The base <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> from which to inherit default values.\n    - id: element\n      type: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n      description: The <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\"></xref> from the configuration file.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> loaded from the elements in the configuration file and the <code>baseConfiguration</code>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  id: LoadHandlers(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: LoadHandlers(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlers(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers(IdentityConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Loads the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> defined for the specified service.\n  remarks: This method calls the <xref:System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration%2A> methods to configure the token handlers.\n  syntax:\n    content: protected System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager LoadHandlers (System.IdentityModel.Configuration.IdentityConfigurationElement serviceElement);\n    parameters:\n    - id: serviceElement\n      type: System.IdentityModel.Configuration.IdentityConfigurationElement\n      description: The <xref uid=\"langword_csharp_&lt;identityConfiguration&gt;\" name=\"&lt;identityConfiguration&gt;\" href=\"\"></xref> element used to configure this instance.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n      description: The handler collection manager.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew\n  id: MaxClockSkew\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: MaxClockSkew\n  nameWithType: IdentityConfiguration.MaxClockSkew\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.\n  syntax:\n    content: public TimeSpan MaxClockSkew { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The maximum clock skew.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Name\n  id: Name\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: Name\n  nameWithType: IdentityConfiguration.Name\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Name\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets the service name of this configuration.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The service name.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode\n  id: RevocationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: RevocationMode\n  nameWithType: IdentityConfiguration.RevocationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the revocation mode used by handlers to validate issuer certificates.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: The revocation mode.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext\n  id: SaveBootstrapContext\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: SaveBootstrapContext\n  nameWithType: IdentityConfiguration.SaveBootstrapContext\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.IdentityModel.Tokens.BootstrapContext\"></xref> object is saved in the <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> and Sessions after token validation.\n  syntax:\n    content: public bool SaveBootstrapContext { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if bootstrap context is saved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  id: SecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\"></xref> containing the set of <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> objects that are used to serialize and validate tokens found in WS-Trust messages.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager SecurityTokenHandlerCollectionManager { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n      description: The handler collection manager.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\n  id: SecurityTokenHandlers\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: SecurityTokenHandlers\n  nameWithType: IdentityConfiguration.SecurityTokenHandlers\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets the collection of <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> objects used to serialize and validate tokens found in WS-Trust messages.\n  remarks: To register your own token handler, add it to this collection.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandlerCollection SecurityTokenHandlers { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n      description: The collection of token handlers.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate\n  id: ServiceCertificate\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: ServiceCertificate\n  nameWithType: IdentityConfiguration.ServiceCertificate\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the service certificate.\n  remarks: This is the service certificate that is used to initialize the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> specified in the <xref:System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver%2A> property and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 ServiceCertificate { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The X.509 certificate to use as the service certificate.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver\n  id: ServiceTokenResolver\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: ServiceTokenResolver\n  nameWithType: IdentityConfiguration.ServiceTokenResolver\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the service token resolver.\n  syntax:\n    content: public System.IdentityModel.Selectors.SecurityTokenResolver ServiceTokenResolver { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The service token resolver.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  id: TokenReplayCacheExpirationPeriod\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: TokenReplayCacheExpirationPeriod\n  nameWithType: IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the expiration period for items placed in the <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>.\n  syntax:\n    content: public TimeSpan TokenReplayCacheExpirationPeriod { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The expiration period for items placed in the token replay cache.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation\n  id: TrustedStoreLocation\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  langs:\n  - csharp\n  name: TrustedStoreLocation\n  nameWithType: IdentityConfiguration.TrustedStoreLocation\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the trusted store location used by handlers to validate issuer certificates.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: The trusted store location.\n  overload: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration()\n  nameWithType: IdentityConfiguration.IdentityConfiguration()\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration()\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration(Boolean)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(Boolean)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration(X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration(String)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(String)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration(Boolean,X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(Boolean,X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(Boolean,X509Certificate2)\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration(String,X509Certificate2)\n  nameWithType: IdentityConfiguration.IdentityConfiguration(String,X509Certificate2)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IdentityConfiguration(String,X509Certificate2)\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: AudienceRestriction\n  nameWithType: IdentityConfiguration.AudienceRestriction\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction\n- uid: System.IdentityModel.Tokens.AudienceRestriction\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: AudienceRestriction\n  nameWithType: AudienceRestriction\n  fullName: System.IdentityModel.Tokens.AudienceRestriction\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Caches\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Caches\n  nameWithType: IdentityConfiguration.Caches\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Caches\n- uid: System.IdentityModel.Configuration.IdentityModelCaches\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: IdentityModelCaches\n  nameWithType: IdentityModelCaches\n  fullName: System.IdentityModel.Configuration.IdentityModelCaches\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: CertificateValidationMode\n  nameWithType: IdentityConfiguration.CertificateValidationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode\n- uid: System.ServiceModel.Security.X509CertificateValidationMode\n  parent: System.ServiceModel.Security\n  isExternal: true\n  name: X509CertificateValidationMode\n  nameWithType: X509CertificateValidationMode\n  fullName: System.ServiceModel.Security.X509CertificateValidationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: IdentityConfiguration.CertificateValidator\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator\n- uid: System.IdentityModel.Selectors.X509CertificateValidator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: X509CertificateValidator\n  nameWithType: X509CertificateValidator\n  fullName: System.IdentityModel.Selectors.X509CertificateValidator\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ClaimsAuthenticationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthenticationManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager\n- uid: System.Security.Claims.ClaimsAuthenticationManager\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsAuthenticationManager\n  nameWithType: ClaimsAuthenticationManager\n  fullName: System.Security.Claims.ClaimsAuthenticationManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ClaimsAuthorizationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthorizationManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager\n- uid: System.Security.Claims.ClaimsAuthorizationManager\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsAuthorizationManager\n  nameWithType: ClaimsAuthorizationManager\n  fullName: System.Security.Claims.ClaimsAuthorizationManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultCertificateValidationMode\n  nameWithType: IdentityConfiguration.DefaultCertificateValidationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultCertificateValidationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultIssuerNameRegistryType\n  nameWithType: IdentityConfiguration.DefaultIssuerNameRegistryType\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultIssuerNameRegistryType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultMaxClockSkew\n  nameWithType: IdentityConfiguration.DefaultMaxClockSkew\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultMaxClockSkew\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultRevocationMode\n  nameWithType: IdentityConfiguration.DefaultRevocationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultRevocationMode\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationMode\n  nameWithType: X509RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultServiceName\n  nameWithType: IdentityConfiguration.DefaultServiceName\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultServiceName\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DefaultTrustedStoreLocation\n  nameWithType: IdentityConfiguration.DefaultTrustedStoreLocation\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DefaultTrustedStoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DetectReplayedTokens\n  nameWithType: IdentityConfiguration.DetectReplayedTokens\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Initialize\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Initialize()\n  nameWithType: IdentityConfiguration.Initialize()\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Initialize()\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IsInitialized\n  nameWithType: IdentityConfiguration.IsInitialized\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IssuerNameRegistry\n  nameWithType: IdentityConfiguration.IssuerNameRegistry\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: IssuerNameRegistry\n  nameWithType: IssuerNameRegistry\n  fullName: System.IdentityModel.Tokens.IssuerNameRegistry\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IssuerTokenResolver\n  nameWithType: IdentityConfiguration.IssuerTokenResolver\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadConfiguration(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadConfiguration(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration(IdentityConfigurationElement)\n- uid: System.IdentityModel.Configuration.IdentityConfigurationElement\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: IdentityConfigurationElement\n  nameWithType: IdentityConfigurationElement\n  fullName: System.IdentityModel.Configuration.IdentityConfigurationElement\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadHandlerConfiguration(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlerConfiguration(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(IdentityConfigurationElement)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerConfiguration\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration,System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration(SecurityTokenHandlerConfiguration,SecurityTokenHandlerConfigurationElement)\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: SecurityTokenHandlerConfigurationElement\n  nameWithType: SecurityTokenHandlerConfigurationElement\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers(System.IdentityModel.Configuration.IdentityConfigurationElement)\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadHandlers(IdentityConfigurationElement)\n  nameWithType: IdentityConfiguration.LoadHandlers(IdentityConfigurationElement)\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers(IdentityConfigurationElement)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: SecurityTokenHandlerCollectionManager\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: IdentityConfiguration.MaxClockSkew\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Name\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Name\n  nameWithType: IdentityConfiguration.Name\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.Name\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: RevocationMode\n  nameWithType: IdentityConfiguration.RevocationMode\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SaveBootstrapContext\n  nameWithType: IdentityConfiguration.SaveBootstrapContext\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: IdentityConfiguration.SecurityTokenHandlerCollectionManager\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SecurityTokenHandlers\n  nameWithType: IdentityConfiguration.SecurityTokenHandlers\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ServiceCertificate\n  nameWithType: IdentityConfiguration.ServiceCertificate\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ServiceTokenResolver\n  nameWithType: IdentityConfiguration.ServiceTokenResolver\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: TokenReplayCacheExpirationPeriod\n  nameWithType: IdentityConfiguration.TokenReplayCacheExpirationPeriod\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: TrustedStoreLocation\n  nameWithType: IdentityConfiguration.TrustedStoreLocation\n  fullName: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.#ctor*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IdentityConfiguration\n  nameWithType: IdentityConfiguration.IdentityConfiguration\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.AudienceRestriction*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: AudienceRestriction\n  nameWithType: IdentityConfiguration.AudienceRestriction\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Caches*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Caches\n  nameWithType: IdentityConfiguration.Caches\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidationMode*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: CertificateValidationMode\n  nameWithType: IdentityConfiguration.CertificateValidationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.CertificateValidator*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: IdentityConfiguration.CertificateValidator\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthenticationManager*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ClaimsAuthenticationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthenticationManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ClaimsAuthorizationManager*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ClaimsAuthorizationManager\n  nameWithType: IdentityConfiguration.ClaimsAuthorizationManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.DetectReplayedTokens*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: DetectReplayedTokens\n  nameWithType: IdentityConfiguration.DetectReplayedTokens\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Initialize*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Initialize\n  nameWithType: IdentityConfiguration.Initialize\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IsInitialized*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IsInitialized\n  nameWithType: IdentityConfiguration.IsInitialized\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerNameRegistry*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IssuerNameRegistry\n  nameWithType: IdentityConfiguration.IssuerNameRegistry\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.IssuerTokenResolver*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: IssuerTokenResolver\n  nameWithType: IdentityConfiguration.IssuerTokenResolver\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadConfiguration*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadConfiguration\n  nameWithType: IdentityConfiguration.LoadConfiguration\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlerConfiguration*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadHandlerConfiguration\n  nameWithType: IdentityConfiguration.LoadHandlerConfiguration\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.LoadHandlers*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: LoadHandlers\n  nameWithType: IdentityConfiguration.LoadHandlers\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.MaxClockSkew*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: IdentityConfiguration.MaxClockSkew\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.Name*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: Name\n  nameWithType: IdentityConfiguration.Name\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.RevocationMode*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: RevocationMode\n  nameWithType: IdentityConfiguration.RevocationMode\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SaveBootstrapContext*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SaveBootstrapContext\n  nameWithType: IdentityConfiguration.SaveBootstrapContext\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlerCollectionManager*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SecurityTokenHandlerCollectionManager\n  nameWithType: IdentityConfiguration.SecurityTokenHandlerCollectionManager\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: SecurityTokenHandlers\n  nameWithType: IdentityConfiguration.SecurityTokenHandlers\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceCertificate*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ServiceCertificate\n  nameWithType: IdentityConfiguration.ServiceCertificate\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.ServiceTokenResolver*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: ServiceTokenResolver\n  nameWithType: IdentityConfiguration.ServiceTokenResolver\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TokenReplayCacheExpirationPeriod*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: TokenReplayCacheExpirationPeriod\n  nameWithType: IdentityConfiguration.TokenReplayCacheExpirationPeriod\n- uid: System.IdentityModel.Configuration.IdentityConfiguration.TrustedStoreLocation*\n  parent: System.IdentityModel.Configuration.IdentityConfiguration\n  isExternal: false\n  name: TrustedStoreLocation\n  nameWithType: IdentityConfiguration.TrustedStoreLocation\n"}