{"nodes":[{"pos":[2298,2442],"content":"Provides the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> base class for a strongly typed collection of key/value pairs.","needQuote":true,"needEscape":true,"source":"Provides the <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class for a strongly typed collection of key/value pairs."},{"pos":[2455,3111],"content":"The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection. Since each element of the DictionaryBase is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.DictionaryEntry>.       The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.      > [!NOTE] >  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.","pos":[0,132]},{"content":"Since each element of the DictionaryBase is a key/value pair, the element type is not the type of the key or the type of the value.","pos":[133,264]},{"content":"Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.","pos":[265,336],"source":" Instead, the element type is <xref:System.Collections.DictionaryEntry>."},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.","pos":[343,466],"source":"       The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the &lt;xref:System.Type.Equals%2A&gt; method.","pos":[472,651],"source":"      > [!NOTE] >  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method."}]},{"pos":[4319,4414],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.DictionaryBase\"></xref> class."},{"pos":[4426,4464],"content":"This constructor is an O(1) operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]},{"pos":[4946,5037],"content":"Clears the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Clears the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[5050,5306],"content":"<xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Collections.DictionaryBase.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.","pos":[0,148],"source":"<xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released."},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.","pos":[155,254],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>."}]},{"pos":[5874,6013],"content":"Copies the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; at the specified index.","needQuote":true,"needEscape":true,"source":"Copies the <xref href=\"System.Collections.DictionaryBase\"></xref> elements to a one-dimensional <xref:System.Array> at the specified index."},{"pos":[6026,6289],"content":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.DictionaryBase&gt;.","pos":[0,155],"source":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>."},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.DictionaryBase.Count%2A&gt;.","pos":[162,261],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>."}]},{"pos":[6435,6691],"content":"The one-dimensional <xref:System.Array> that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","pos":[0,201],"source":"The one-dimensional <xref:System.Array> that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[202,256],"source":" The <xref:System.Array> must have zero-based indexing."}]},{"pos":[6752,6808],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[6979,7062],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7177,7214],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>index</code> is less than zero."},{"pos":[7310,7574],"content":"<code>array</code> is multidimensional.       -or-       The number of elements in the source <xref href=\"System.Collections.DictionaryBase\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","pos":[0,39],"source":"<code>array</code> is multidimensional."},{"content":"-or-       The number of elements in the source <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is greater than the available space from <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","pos":[46,258],"source":"       -or-       The number of elements in the source <xref href=\"System.Collections.DictionaryBase\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}]},{"pos":[7676,7833],"content":"The type of the source <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of the source <xref href=\"System.Collections.DictionaryBase\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."},{"pos":[8170,8279],"content":"Gets the number of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the number of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[8291,8350],"content":"Retrieving the value of this property is an O(1) operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[8456,8560],"content":"The number of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The number of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[8992,9099],"content":"Gets the list of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[9112,9374],"content":"The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       Retrieving the value of this property is an O(1) operation.","pos":[0,260],"nodes":[{"content":"The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[0,194],"source":"The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[201,260]}]}]},{"pos":[10128,10257],"content":"An &lt;xref:System.Collections.IDictionary&gt; representing the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance itself.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> representing the <xref href=\"System.Collections.DictionaryBase\"></xref> instance itself."},{"pos":[10713,10862],"content":"Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an <xref:System.Collections.IDictionaryEnumerator> that iterates through the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[10875,13458],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[212,332]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[339,422]},{"content":"&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.","pos":[423,519],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[521,601],"source":"  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.","pos":[602,819],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."},{"content":"&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[826,1022],"source":"       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.","pos":[1023,1147],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."},{"content":"If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[1154,1381],"source":"       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id=\"ph1\">`false`</ph>.","pos":[1382,1513],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[1514,1664],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.","pos":[1665,1889],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1896,1968]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[1969,2131]},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[2138,2292]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[2294,2399]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[2401,2529]},{"content":"This method is an O(1) operation.","pos":[2536,2569]}]},{"pos":[14252,14375],"content":"An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[14835,14942],"content":"Gets the list of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[14955,15217],"content":"The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the InnerHashtable property.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the InnerHashtable property.       Retrieving the value of this property is an O(1) operation.","pos":[0,260],"nodes":[{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the InnerHashtable property.","pos":[0,194],"source":"The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the InnerHashtable property."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[201,260]}]}]},{"pos":[15377,15517],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance itself.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Hashtable\"></xref> representing the <xref href=\"System.Collections.DictionaryBase\"></xref> instance itself."},{"pos":[15947,16084],"content":"Performs additional custom processes before clearing the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes before clearing the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[16097,16562],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,461],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.","pos":[0,146]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[153,391],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[398,461]}]}]},{"pos":[17103,17239],"content":"Performs additional custom processes after clearing the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes after clearing the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[17252,17716],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,460],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.","pos":[0,145]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[152,390],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[397,460]}]}]},{"pos":[18320,18441],"content":"Gets the element with the specified key and value in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the element with the specified key and value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[18454,18959],"content":"The default implementation of this method returns `currentValue`. It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method returns <ph id=\"ph1\">`currentValue`</ph>.","pos":[0,65],"source":"The default implementation of this method returns `currentValue`."},{"content":"It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.","pos":[66,186]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[193,431],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[438,501]}]},{"pos":[19125,19155],"content":"The key of the element to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to get.","pos":[0,30]}]},{"pos":[19224,19279],"content":"The current value of the element associated with <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The current value of the element associated with `key`."},{"pos":[19337,19417],"content":"An <xref:System.Object> containing the element with the specified key and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; containing the element with the specified key and value.","pos":[0,80],"source":"An <xref:System.Object> containing the element with the specified key and value."}]},{"pos":[19940,20081],"content":"Performs additional custom processes before inserting a new element into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes before inserting a new element into the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[20094,20567],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,469],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.","pos":[0,154]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[161,399],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[406,469]}]}]},{"pos":[21327,21360],"content":"The key of the element to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to insert.","pos":[0,33]}]},{"pos":[21422,21457],"content":"The value of the element to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to insert.","pos":[0,35]}]},{"pos":[22023,22163],"content":"Performs additional custom processes after inserting a new element into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes after inserting a new element into the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[22176,22648],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,468],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.","pos":[0,153]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[160,398],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[405,468]}]}]},{"pos":[22816,22849],"content":"The key of the element to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to insert.","pos":[0,33]}]},{"pos":[22911,22946],"content":"The value of the element to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to insert.","pos":[0,35]}]},{"pos":[23480,23617],"content":"Performs additional custom processes before removing an element from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes before removing an element from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[23630,24102],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,468],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.","pos":[0,153]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[160,398],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[405,468]}]}]},{"pos":[24862,24895],"content":"The key of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to remove.","pos":[0,33]}]},{"pos":[24957,24992],"content":"The value of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to remove.","pos":[0,35]}]},{"pos":[25558,25694],"content":"Performs additional custom processes after removing an element from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes after removing an element from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[25707,26178],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,467],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.","pos":[0,152]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[159,397],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[404,467]}]}]},{"pos":[26346,26379],"content":"The key of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to remove.","pos":[0,33]}]},{"pos":[26441,26476],"content":"The value of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to remove.","pos":[0,35]}]},{"pos":[27044,27175],"content":"Performs additional custom processes before setting a value in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes before setting a value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[27188,27656],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,464],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.","pos":[0,149]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[156,394],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[401,464]}]}]},{"pos":[28427,28460],"content":"The key of the element to locate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to locate.","pos":[0,33]}]},{"pos":[28525,28576],"content":"The old value of the element associated with <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The old value of the element associated with `key`."},{"pos":[28641,28692],"content":"The new value of the element associated with <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element associated with `key`."},{"pos":[29289,29419],"content":"Performs additional custom processes after setting a value in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Performs additional custom processes after setting a value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance."},{"pos":[29432,29899],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,463],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.","pos":[0,148]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[155,393],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[400,463]}]}]},{"pos":[30084,30117],"content":"The key of the element to locate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to locate.","pos":[0,33]}]},{"pos":[30182,30233],"content":"The old value of the element associated with <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The old value of the element associated with `key`."},{"pos":[30298,30349],"content":"The new value of the element associated with <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element associated with `key`."},{"pos":[30890,30988],"content":"Performs additional custom processes when validating the element with the specified key and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes when validating the element with the specified key and value.","pos":[0,98]}]},{"pos":[31001,31473],"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.       The default implementation of this method is an O(1) operation.","pos":[0,468],"nodes":[{"content":"The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.","pos":[0,153]},{"content":"The On* methods are invoked only on the instance returned by the &lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt; property, but not on the instance returned by the &lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt; property.","pos":[160,398],"source":"       The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property."},{"content":"The default implementation of this method is an O(1) operation.","pos":[405,468]}]}]},{"pos":[32235,32270],"content":"The key of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to validate.","pos":[0,35]}]},{"pos":[32332,32369],"content":"The value of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to validate.","pos":[0,37]}]},{"pos":[32995,33131],"content":"Gets a value indicating whether access to a <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is synchronized (thread safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether access to a <xref href=\"System.Collections.DictionaryBase\"></xref> object is synchronized (thread safe)."},{"pos":[33144,33796],"content":"A <xref:System.Collections.DictionaryBase> object is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Collections.DictionaryBase> object is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,650],"nodes":[{"content":"A &lt;xref:System.Collections.DictionaryBase&gt; object is not synchronized.","pos":[0,70],"source":"A <xref:System.Collections.DictionaryBase> object is not synchronized."},{"content":"Derived classes can provide a synchronized version of the &lt;xref:System.Collections.DictionaryBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.","pos":[71,245],"source":" Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[252,330]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[331,468]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[469,650]}]}]},{"pos":[34512,34836],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.DictionaryBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,245],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.DictionaryBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[246,324],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[35467,35588],"content":"Gets an object that can be used to synchronize access to a <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to a <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[35601,36671],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,1068],"nodes":[{"content":"Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.DictionaryBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.","pos":[0,182],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property of the &lt;xref:System.Collections.DictionaryBase&gt; object, not directly on the &lt;xref:System.Collections.DictionaryBase&gt; object.","pos":[183,420],"source":" The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[421,502]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.DictionaryBase&gt; object.","pos":[503,663],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[670,748]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[749,886]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[887,1068]}]}]},{"pos":[37382,37500],"content":"An object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[38201,38314],"content":"Adds an element with the specified key and value into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds an element with the specified key and value into the <xref href=\"System.Collections.DictionaryBase\"></xref>."},{"pos":[38327,39156],"content":"An object that has no correlation between its state and its hash code value should typically not be used as the key. For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.       You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\"myNonexistentKey\"] = myValue`. However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value. In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An object that has no correlation between its state and its hash code value should typically not be used as the key.","pos":[0,116]},{"content":"For example, &lt;xref:System.String&gt; objects are better than &lt;xref:System.Text.StringBuilder&gt; objects for use as keys.","pos":[117,232],"source":" For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys."},{"content":"You can also use the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.DictionaryBase&gt;; for example, <ph id=\"ph1\">`myCollection[\"myNonexistentKey\"] = myValue`</ph>.","pos":[239,492],"source":"       You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\"myNonexistentKey\"] = myValue`."},{"content":"However, if the specified key already exists in the &lt;xref:System.Collections.DictionaryBase&gt;, setting the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property overwrites the old value.","pos":[493,679],"source":" However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value."},{"content":"In contrast, the &lt;xref:System.Collections.IDictionary.Add%2A&gt; method does not modify existing elements.","pos":[680,783],"source":" In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements."},{"content":"This method is an O(1) operation.","pos":[790,823]}]},{"pos":[39899,39929],"content":"The key of the element to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to add.","pos":[0,30]}]},{"pos":[39991,40023],"content":"The value of the element to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the element to add.","pos":[0,32]}]},{"pos":[40222,40303],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[40398,40504],"content":"An element with the same key already exists in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An element with the same key already exists in the <xref href=\"System.Collections.DictionaryBase\"></xref>."},{"pos":[40608,40782],"content":"The <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only.       -or-       The <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","pos":[0,72],"source":"The <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has a fixed size.","pos":[79,166],"source":"       -or-       The <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size."}]},{"pos":[41356,41458],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a specific key.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Collections.DictionaryBase\"></xref> contains a specific key."},{"pos":[41471,41947],"content":"This method is an O(1) operation.       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]},{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id=\"ph1\">`key`</ph> to determine whether <ph id=\"ph2\">`item`</ph> exists.","pos":[40,247],"source":"       Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id=\"ph1\">`key`</ph> parameter on the objects in the collection.","pos":[248,474],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection."}]},{"pos":[42681,42761],"content":"The key to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The key to locate in the <xref href=\"System.Collections.DictionaryBase\"></xref>."},{"pos":[42820,43061],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> contains an element with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43265,43346],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[43882,43995],"content":"Gets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has a fixed size.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether a <xref href=\"System.Collections.DictionaryBase\"></xref> object has a fixed size."},{"pos":[44008,44523],"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.       A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.       A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","pos":[0,511],"nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.","pos":[0,168]},{"content":"A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.","pos":[175,445]},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[452,511]}]}]},{"pos":[44663,44964],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object has a fixed size; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,222],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[223,301],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[45602,45711],"content":"Gets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is read-only.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether a <xref href=\"System.Collections.DictionaryBase\"></xref> object is read-only."},{"pos":[45724,46148],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","pos":[0,420],"nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]},{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[136,354]},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[361,420]}]}]},{"pos":[46287,46584],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is read-only; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,218],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[219,297],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[47245,47302],"content":"Gets or sets the value associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value associated with the specified key.","pos":[0,57]}]},{"pos":[47315,48119],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.       You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\"myNonexistentKey\"] = myValue`. However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value. In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.       Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[key]`</ph>.","pos":[0,133],"source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`."},{"content":"You can also use the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.DictionaryBase&gt;; for example, <ph id=\"ph1\">`myCollection[\"myNonexistentKey\"] = myValue`</ph>.","pos":[140,393],"source":"       You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\"myNonexistentKey\"] = myValue`."},{"content":"However, if the specified key already exists in the &lt;xref:System.Collections.DictionaryBase&gt;, setting the &lt;xref:System.Collections.IDictionary.Item%2A&gt; property overwrites the old value.","pos":[394,580],"source":" However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value."},{"content":"In contrast, the &lt;xref:System.Collections.IDictionary.Add%2A&gt; method does not modify existing elements.","pos":[581,684],"source":" In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements."},{"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","pos":[691,798]}]},{"pos":[48882,48916],"content":"The key whose value to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key whose value to get or set.","pos":[0,34]}]},{"pos":[48974,49216],"content":"The value associated with the specified key. If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value associated with the specified key.","pos":[0,44]},{"content":"If the specified key is not found, attempting to get it returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.","pos":[45,242],"source":" If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key."}]},{"pos":[49416,49497],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49601,49875],"content":"The property is set and the <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only.       -or-       The property is set, <code>key</code> does not exist in the collection, and the <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size.","needQuote":false,"needEscape":true,"nodes":[{"content":"The property is set and the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","pos":[0,96],"source":"The property is set and the <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only."},{"content":"-or-       The property is set, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id=\"p2\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has a fixed size.","pos":[103,266],"source":"       -or-       The property is set, <code>key</code> does not exist in the collection, and the <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size."}]},{"pos":[50377,50519],"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[50532,51230],"content":"The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","pos":[0,694],"nodes":[{"content":"The order of the keys in the &lt;xref:System.Collections.ICollection&gt; object is unspecified, but is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; object returned by the &lt;xref:System.Collections.IDictionary.Values%2A&gt; property.","pos":[0,262],"source":"The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property."},{"content":"The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.DictionaryBase&gt; object.","pos":[269,481],"source":"       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object."},{"content":"Therefore, changes to the &lt;xref:System.Collections.DictionaryBase&gt; continue to be reflected in the returned &lt;xref:System.Collections.ICollection&gt;.","pos":[482,628],"source":" Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[635,694]}]}]},{"pos":[52008,52145],"content":"An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[52808,52915],"content":"Removes the element with the specified key from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the element with the specified key from the <xref href=\"System.Collections.DictionaryBase\"></xref>."},{"pos":[52928,53157],"content":"If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged. No exception is thrown.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged. No exception is thrown.       This method is an O(1) operation.","pos":[0,227],"nodes":[{"content":"If the &lt;xref:System.Collections.DictionaryBase&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.DictionaryBase&gt; remains unchanged.","pos":[0,163],"source":"If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged."},{"content":"No exception is thrown.","pos":[164,187]},{"content":"This method is an O(1) operation.","pos":[194,227]}]}]},{"pos":[53889,53922],"content":"The key of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to remove.","pos":[0,33]}]},{"pos":[54124,54205],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[54309,54483],"content":"The <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only.       -or-       The <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","pos":[0,72],"source":"The <xref href=\"System.Collections.DictionaryBase\"></xref> is read-only."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has a fixed size.","pos":[79,166],"source":"       -or-       The <xref href=\"System.Collections.DictionaryBase\"></xref> has a fixed size."}]},{"pos":[54995,55139],"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[55152,55850],"content":"The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.       Retrieving the value of this property is an O(1) operation.","pos":[0,694],"nodes":[{"content":"The order of the values in the &lt;xref:System.Collections.ICollection&gt; object is unspecified, but is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; object returned by the &lt;xref:System.Collections.IDictionary.Keys%2A&gt; property.","pos":[0,260],"source":"The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property."},{"content":"The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.DictionaryBase&gt; object.","pos":[267,481],"source":"       The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object."},{"content":"Therefore, changes to the &lt;xref:System.Collections.DictionaryBase&gt; continue to be reflected in the returned &lt;xref:System.Collections.ICollection&gt;.","pos":[482,628],"source":" Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>."},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[635,694]}]}]},{"pos":[56630,56769],"content":"An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.DictionaryBase\"></xref> object."},{"pos":[57421,57551],"content":"Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an <xref:System.Collections.IEnumerator> that iterates through the <xref href=\"System.Collections.DictionaryBase\"></xref>."},{"pos":[57564,60676],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[113,204],"source":" Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[211,331]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[338,421]},{"content":"&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.","pos":[422,518],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.","pos":[519,614],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.","pos":[615,832],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."},{"content":"&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[839,1035],"source":"       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.","pos":[1036,1160],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."},{"content":"If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[1167,1394],"source":"       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id=\"ph1\">`false`</ph>.","pos":[1395,1526],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.","pos":[1527,1692],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.","pos":[1693,1917],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1924,1996]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[1997,2300],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>."},{"content":"If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.","pos":[2301,2577],"source":" If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated."},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[2584,2738]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[2739,2876]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[2877,3058]},{"content":"This method is an O(1) operation.","pos":[3065,3098]}]},{"pos":[60855,60959],"content":"An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id=\"p1\">&lt;xref href=\"System.Collections.DictionaryBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IEnumerator> for the <xref href=\"System.Collections.DictionaryBase\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.DictionaryBase\n  id: DictionaryBase\n  children:\n  - System.Collections.DictionaryBase.#ctor\n  - System.Collections.DictionaryBase.Clear\n  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  - System.Collections.DictionaryBase.Count\n  - System.Collections.DictionaryBase.Dictionary\n  - System.Collections.DictionaryBase.GetEnumerator\n  - System.Collections.DictionaryBase.InnerHashtable\n  - System.Collections.DictionaryBase.OnClear\n  - System.Collections.DictionaryBase.OnClearComplete\n  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: DictionaryBase\n  nameWithType: DictionaryBase\n  fullName: System.Collections.DictionaryBase\n  type: Class\n  summary: Provides the <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class for a strongly typed collection of key/value pairs.\n  remarks: \"The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection. Since each element of the DictionaryBase is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.DictionaryEntry>.  \\n  \\n The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.  \\n  \\n> [!NOTE]\\n>  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.\"\n  example:\n  - \"The following code example implements the DictionaryBase class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/t-system.collections.dic_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/t-system.collections.dic_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/t-system.collections.dic_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class DictionaryBase : System.Collections.IDictionary\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IDictionary\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.#ctor\n  id: '#ctor'\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: DictionaryBase()\n  nameWithType: DictionaryBase.DictionaryBase()\n  fullName: System.Collections.DictionaryBase.DictionaryBase()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Initializes a new instance of the <xref href=\"System.Collections.DictionaryBase\"></xref> class.\n  remarks: This constructor is an O(1) operation.\n  syntax:\n    content: protected DictionaryBase ();\n    parameters: []\n  overload: System.Collections.DictionaryBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.Clear\n  id: Clear\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DictionaryBase.Clear()\n  fullName: System.Collections.DictionaryBase.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Clears the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"<xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Collections.DictionaryBase.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: DictionaryBase.CopyTo(Array,Int32)\n  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Copies the <xref href=\"System.Collections.DictionaryBase\"></xref> elements to a one-dimensional <xref:System.Array> at the specified index.\n  remarks: \"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.\"\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the <xref:System.Collections.DictionaryEntry> objects copied from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Collections.DictionaryBase.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.DictionaryBase\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.Count\n  id: Count\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: Count\n  nameWithType: DictionaryBase.Count\n  fullName: System.Collections.DictionaryBase.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets the number of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  overload: System.Collections.DictionaryBase.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.Dictionary\n  id: Dictionary\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: Dictionary\n  nameWithType: DictionaryBase.Dictionary\n  fullName: System.Collections.DictionaryBase.Dictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The On* methods are invoked only on the instance returned by the Dictionary property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/p-system.collections.dic_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/p-system.collections.dic_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/p-system.collections.dic_1.vb)]\"\n  syntax:\n    content: protected System.Collections.IDictionary Dictionary { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> representing the <xref href=\"System.Collections.DictionaryBase\"></xref> instance itself.\n  overload: System.Collections.DictionaryBase.Dictionary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DictionaryBase.GetEnumerator()\n  fullName: System.Collections.DictionaryBase.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Returns an <xref:System.Collections.IDictionaryEnumerator> that iterates through the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_3_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_3_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_3_1.vb)]\"\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  overload: System.Collections.DictionaryBase.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.InnerHashtable\n  id: InnerHashtable\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: InnerHashtable\n  nameWithType: DictionaryBase.InnerHashtable\n  fullName: System.Collections.DictionaryBase.InnerHashtable\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the InnerHashtable property.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: protected System.Collections.Hashtable InnerHashtable { get; }\n    return:\n      type: System.Collections.Hashtable\n      description: A <xref href=\"System.Collections.Hashtable\"></xref> representing the <xref href=\"System.Collections.DictionaryBase\"></xref> instance itself.\n  overload: System.Collections.DictionaryBase.InnerHashtable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnClear\n  id: OnClear\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: DictionaryBase.OnClear()\n  fullName: System.Collections.DictionaryBase.OnClear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes before clearing the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual void OnClear ();\n    parameters: []\n  overload: System.Collections.DictionaryBase.OnClear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnClearComplete\n  id: OnClearComplete\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: DictionaryBase.OnClearComplete()\n  fullName: System.Collections.DictionaryBase.OnClearComplete()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes after clearing the contents of the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual void OnClearComplete ();\n    parameters: []\n  overload: System.Collections.DictionaryBase.OnClearComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  id: OnGet(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnGet(Object,Object)\n  nameWithType: DictionaryBase.OnGet(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets the element with the specified key and value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method returns `currentValue`. It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual object OnGet (object key, object currentValue);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to get.\n    - id: currentValue\n      type: System.Object\n      description: The current value of the element associated with `key`.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> containing the element with the specified key and value.\n  overload: System.Collections.DictionaryBase.OnGet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  id: OnInsert(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnInsert(Object,Object)\n  nameWithType: DictionaryBase.OnInsert(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes before inserting a new element into the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_0_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_0_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_0_1.vb)]\"\n  syntax:\n    content: protected virtual void OnInsert (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to insert.\n    - id: value\n      type: System.Object\n      description: The value of the element to insert.\n  overload: System.Collections.DictionaryBase.OnInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  id: OnInsertComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnInsertComplete(Object,Object)\n  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes after inserting a new element into the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual void OnInsertComplete (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to insert.\n    - id: value\n      type: System.Object\n      description: The value of the element to insert.\n  overload: System.Collections.DictionaryBase.OnInsertComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  id: OnRemove(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnRemove(Object,Object)\n  nameWithType: DictionaryBase.OnRemove(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes before removing an element from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_1_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_1_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_1_1.vb)]\"\n  syntax:\n    content: protected virtual void OnRemove (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to remove.\n    - id: value\n      type: System.Object\n      description: The value of the element to remove.\n  overload: System.Collections.DictionaryBase.OnRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  id: OnRemoveComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnRemoveComplete(Object,Object)\n  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes after removing an element from the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual void OnRemoveComplete (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to remove.\n    - id: value\n      type: System.Object\n      description: The value of the element to remove.\n  overload: System.Collections.DictionaryBase.OnRemoveComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  id: OnSet(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnSet(Object,Object,Object)\n  nameWithType: DictionaryBase.OnSet(Object,Object,Object)\n  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes before setting a value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/576c3070-5898-49fc-92c2-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/576c3070-5898-49fc-92c2-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/576c3070-5898-49fc-92c2-_1.vb)]\"\n  syntax:\n    content: protected virtual void OnSet (object key, object oldValue, object newValue);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to locate.\n    - id: oldValue\n      type: System.Object\n      description: The old value of the element associated with `key`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the element associated with `key`.\n  overload: System.Collections.DictionaryBase.OnSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  id: OnSetComplete(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnSetComplete(Object,Object,Object)\n  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)\n  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes after setting a value in the <xref href=\"System.Collections.DictionaryBase\"></xref> instance.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  syntax:\n    content: protected virtual void OnSetComplete (object key, object oldValue, object newValue);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to locate.\n    - id: oldValue\n      type: System.Object\n      description: The old value of the element associated with `key`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the element associated with `key`.\n  overload: System.Collections.DictionaryBase.OnSetComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  id: OnValidate(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: OnValidate(Object,Object)\n  nameWithType: DictionaryBase.OnValidate(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Performs additional custom processes when validating the element with the specified key and value.\n  remarks: \"The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.  \\n  \\n The On* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.  \\n  \\n The default implementation of this method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_2_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_2_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_2_1.vb)]\"\n  syntax:\n    content: protected virtual void OnValidate (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to validate.\n    - id: value\n      type: System.Object\n      description: The value of the element to validate.\n  overload: System.Collections.DictionaryBase.OnValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets a value indicating whether access to a <xref href=\"System.Collections.DictionaryBase\"></xref> object is synchronized (thread safe).\n  remarks: \"A <xref:System.Collections.DictionaryBase> object is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \\n  \\n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/f850b608-c07e-40f9-af58-_1.cs)]\\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/f850b608-c07e-40f9-af58-_1.cpp)]\\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/f850b608-c07e-40f9-af58-_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.DictionaryBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets an object that can be used to synchronize access to a <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \\n  \\n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/86708232-6546-45cc-abc0-_1.cs)]\\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/86708232-6546-45cc-abc0-_1.cpp)]\\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/86708232-6546-45cc-abc0-_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  overload: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Adds an element with the specified key and value into the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n  remarks: \"An object that has no correlation between its state and its hash code value should typically not be used as the key. For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.  \\n  \\n You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\\\"myNonexistentKey\\\"] = myValue`. However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value. In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c65f1d46-c6ba-40bd-bf67-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c65f1d46-c6ba-40bd-bf67-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c65f1d46-c6ba-40bd-bf67-_1.vb)]\"\n  syntax:\n    content: void IDictionary.Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to add.\n    - id: value\n      type: System.Object\n      description: The value of the element to add.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An element with the same key already exists in the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> has a fixed size.\"\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Determines whether the <xref href=\"System.Collections.DictionaryBase\"></xref> contains a specific key.\n  remarks: \"This method is an O(1) operation.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c59cd535-1a58-4e00-98b8-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c59cd535-1a58-4e00-98b8-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c59cd535-1a58-4e00-98b8-_1.vb)]\"\n  syntax:\n    content: bool IDictionary.Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to locate in the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> contains an element with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets a value indicating whether a <xref href=\"System.Collections.DictionaryBase\"></xref> object has a fixed size.\n  remarks: \"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.  \\n  \\n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets a value indicating whether a <xref href=\"System.Collections.DictionaryBase\"></xref> object is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.IDictionary.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.DictionaryBase\"></xref> object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets or sets the value associated with the specified key.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.  \\n  \\n You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection[\\\"myNonexistentKey\\\"] = myValue`. However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value. In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.  \\n  \\n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/24404b11-3020-40f8-8aa1-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/24404b11-3020-40f8-8aa1-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/24404b11-3020-40f8-8aa1-_1.vb)]\"\n  syntax:\n    content: object System.Collections.IDictionary.Item[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key whose value to get or set.\n    return:\n      type: System.Object\n      description: The value associated with the specified key. If the specified key is not found, attempting to get it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, and attempting to set it creates a new element using the specified key.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The property is set and the <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The property is set, <code>key</code> does not exist in the collection, and the <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> has a fixed size.\"\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Keys\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets an <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  remarks: \"The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.  \\n  \\n The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/55fc7d60-7b22-451a-9b28-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/55fc7d60-7b22-451a-9b28-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/55fc7d60-7b22-451a-9b28-_1.vb)]\"\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing the keys in the <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Removes the element with the specified key from the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n  remarks: \"If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged. No exception is thrown.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/ce3b6ffc-125d-4340-aa5a-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/ce3b6ffc-125d-4340-aa5a-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/ce3b6ffc-125d-4340-aa5a-_1.vb)]\"\n  syntax:\n    content: void IDictionary.Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to remove.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.DictionaryBase\\\"></xref> has a fixed size.\"\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Values\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Values\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Gets an <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  remarks: \"The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.  \\n  \\n The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object. Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \\n  \\n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/48c1eb68-69bc-40ec-afd8-_1.cpp)]\\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/48c1eb68-69bc-40ec-afd8-_1.cs)]\\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/48c1eb68-69bc-40ec-afd8-_1.vb)]\"\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing the values in the <xref href=\"System.Collections.DictionaryBase\"></xref> object.\n  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.DictionaryBase\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  summary: Returns an <xref:System.Collections.IEnumerator> that iterates through the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n  remarks: \"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> for the <xref href=\"System.Collections.DictionaryBase\"></xref>.\n  overload: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: true\n  name: System.InvalidCastException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Collections.DictionaryBase.#ctor\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: DictionaryBase()\n  nameWithType: DictionaryBase.DictionaryBase()\n  fullName: System.Collections.DictionaryBase.DictionaryBase()\n- uid: System.Collections.DictionaryBase.Clear\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Clear()\n  nameWithType: DictionaryBase.Clear()\n  fullName: System.Collections.DictionaryBase.Clear()\n- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: DictionaryBase.CopyTo(Array,Int32)\n  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.DictionaryBase.Count\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Count\n  nameWithType: DictionaryBase.Count\n  fullName: System.Collections.DictionaryBase.Count\n- uid: System.Collections.DictionaryBase.Dictionary\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Dictionary\n  nameWithType: DictionaryBase.Dictionary\n  fullName: System.Collections.DictionaryBase.Dictionary\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Collections.DictionaryBase.GetEnumerator\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DictionaryBase.GetEnumerator()\n  fullName: System.Collections.DictionaryBase.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Collections.DictionaryBase.InnerHashtable\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: InnerHashtable\n  nameWithType: DictionaryBase.InnerHashtable\n  fullName: System.Collections.DictionaryBase.InnerHashtable\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  nameWithType: Hashtable\n  fullName: System.Collections.Hashtable\n- uid: System.Collections.DictionaryBase.OnClear\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClear()\n  nameWithType: DictionaryBase.OnClear()\n  fullName: System.Collections.DictionaryBase.OnClear()\n- uid: System.Collections.DictionaryBase.OnClearComplete\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: DictionaryBase.OnClearComplete()\n  fullName: System.Collections.DictionaryBase.OnClearComplete()\n- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnGet(Object,Object)\n  nameWithType: DictionaryBase.OnGet(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)\n- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsert(Object,Object)\n  nameWithType: DictionaryBase.OnInsert(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)\n- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsertComplete(Object,Object)\n  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)\n- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemove(Object,Object)\n  nameWithType: DictionaryBase.OnRemove(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)\n- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemoveComplete(Object,Object)\n  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)\n- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSet(Object,Object,Object)\n  nameWithType: DictionaryBase.OnSet(Object,Object,Object)\n  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)\n- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSetComplete(Object,Object,Object)\n  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)\n  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)\n- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnValidate(Object,Object)\n  nameWithType: DictionaryBase.OnValidate(Object,Object)\n  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Values\n  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values\n- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.DictionaryBase.#ctor*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: DictionaryBase\n  nameWithType: DictionaryBase.DictionaryBase\n- uid: System.Collections.DictionaryBase.Clear*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Clear\n  nameWithType: DictionaryBase.Clear\n- uid: System.Collections.DictionaryBase.CopyTo*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: CopyTo\n  nameWithType: DictionaryBase.CopyTo\n- uid: System.Collections.DictionaryBase.Count*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Count\n  nameWithType: DictionaryBase.Count\n- uid: System.Collections.DictionaryBase.Dictionary*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Dictionary\n  nameWithType: DictionaryBase.Dictionary\n- uid: System.Collections.DictionaryBase.GetEnumerator*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: DictionaryBase.GetEnumerator\n- uid: System.Collections.DictionaryBase.InnerHashtable*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: InnerHashtable\n  nameWithType: DictionaryBase.InnerHashtable\n- uid: System.Collections.DictionaryBase.OnClear*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClear\n  nameWithType: DictionaryBase.OnClear\n- uid: System.Collections.DictionaryBase.OnClearComplete*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClearComplete\n  nameWithType: DictionaryBase.OnClearComplete\n- uid: System.Collections.DictionaryBase.OnGet*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnGet\n  nameWithType: DictionaryBase.OnGet\n- uid: System.Collections.DictionaryBase.OnInsert*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsert\n  nameWithType: DictionaryBase.OnInsert\n- uid: System.Collections.DictionaryBase.OnInsertComplete*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsertComplete\n  nameWithType: DictionaryBase.OnInsertComplete\n- uid: System.Collections.DictionaryBase.OnRemove*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemove\n  nameWithType: DictionaryBase.OnRemove\n- uid: System.Collections.DictionaryBase.OnRemoveComplete*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemoveComplete\n  nameWithType: DictionaryBase.OnRemoveComplete\n- uid: System.Collections.DictionaryBase.OnSet*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSet\n  nameWithType: DictionaryBase.OnSet\n- uid: System.Collections.DictionaryBase.OnSetComplete*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSetComplete\n  nameWithType: DictionaryBase.OnSetComplete\n- uid: System.Collections.DictionaryBase.OnValidate*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnValidate\n  nameWithType: DictionaryBase.OnValidate\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Add\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Add\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Contains\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Item\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Item\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Remove\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: DictionaryBase.System.Collections.IDictionary.Values\n- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator\n"}