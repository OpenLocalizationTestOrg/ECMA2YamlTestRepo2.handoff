{"nodes":[{"pos":[1974,2276],"content":"Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart. The actual calculations are performed in the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart.","pos":[0,164]},{"content":"The actual calculations are performed in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[165,302],"source":" The actual calculations are performed in the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> class."}]},{"pos":[2897,3018],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.DataFormula\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.DataFormula\"></xref> class."},{"pos":[3806,3851],"content":"Copies a series or the specific X or Y value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies a series or the specific X or Y value.","pos":[0,45]}]},{"pos":[4030,4113],"content":"A comma-separated list of input data series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of input data series names and optional X and Y value names.","pos":[0,83]}]},{"pos":[4182,4266],"content":"A comma-separated list of output data series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of output data series names and optional X and Y value names.","pos":[0,84]}]},{"pos":[5132,5218],"content":"Calls a method from a formula module with the specified formula name and input series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name and input series.","pos":[0,86]}]},{"pos":[5505,5537],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[5605,5656],"content":"The input series in which calculation is performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input series in which calculation is performed.","pos":[0,51]}]},{"pos":[6604,6690],"content":"Calls a method from a formula module with the specified formula name and input series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name and input series.","pos":[0,86]}]},{"pos":[7025,7057],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[7166,7244],"content":"A comma-separated list of input series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of input series names and optional X and Y value names.","pos":[0,78]}]},{"pos":[8159,8274],"content":"Calls a method from a formula module with the specified formula name, and the names of the input and output series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name, and the names of the input and output series.","pos":[0,115]}]},{"pos":[8582,8614],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[8682,8733],"content":"The input series in which calculation is performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input series in which calculation is performed.","pos":[0,51]}]},{"pos":[8802,8869],"content":"The output series in which the result of the calculation is stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output series in which the result of the calculation is stored.","pos":[0,67]}]},{"pos":[9948,10042],"content":"Calls a method from a formula module with the specified formula name, input and output series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name, input and output series.","pos":[0,94]}]},{"pos":[10446,10478],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[10587,10665],"content":"A comma-separated list of input series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of input series names and optional X and Y value names.","pos":[0,78]}]},{"pos":[10775,10854],"content":"A comma-separated list of output series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of output series names and optional X and Y value names.","pos":[0,79]}]},{"pos":[11818,11948],"content":"Calls a method from a formula module with the specified formula name and parameters, and the names of the input and output series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name and parameters, and the names of the input and output series.","pos":[0,130]}]},{"pos":[12275,12307],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[12374,12417],"content":"The parameters associated with the formula.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters associated with the formula.","pos":[0,43]}]},{"pos":[12485,12536],"content":"The input series in which calculation is performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input series in which calculation is performed.","pos":[0,51]}]},{"pos":[12605,12672],"content":"The output series in which the result of the calculation is stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output series in which the result of the calculation is stored.","pos":[0,67]}]},{"pos":[13800,13929],"content":"Calls a method from a formula module with the specified formula name and parameters, using the specified input and output series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method from a formula module with the specified formula name and parameters, using the specified input and output series.","pos":[0,129]}]},{"pos":[14352,14384],"content":"The name of the formula to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the formula to call.","pos":[0,32]}]},{"pos":[14451,14494],"content":"The parameters associated with the formula.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters associated with the formula.","pos":[0,43]}]},{"pos":[14603,14681],"content":"A comma-separated list of input series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of input series names and optional X and Y value names.","pos":[0,78]}]},{"pos":[14791,14870],"content":"A comma-separated list of output series names and optional X and Y value names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of output series names and optional X and Y value names.","pos":[0,79]}]},{"pos":[15518,15616],"content":"Gets or sets a flag that indicates whether empty points are ignored while performing calculations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a flag that indicates whether empty points are ignored while performing calculations.","pos":[0,98]}]},{"pos":[15744,15965],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if empty points are ignored while performing calculations; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if empty points are treated as zeroes.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty points are ignored while performing calculations; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if empty points are treated as zeroes."},{"pos":[16601,16698],"content":"Gets or sets a flag that indicates whether to start formulas such as \"rolling average\" from zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a flag that indicates whether to start formulas such as \"rolling average\" from zero.","pos":[0,97]}]},{"pos":[16823,17013],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if formulas such as \"rolling average\" start from zero; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if formulas such as \"rolling average\" start from zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17616,17732],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> class."},{"pos":[17956,18068],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  id: DataFormula\n  children:\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst\n  - System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics\n  langs:\n  - csharp\n  name: DataFormula\n  nameWithType: DataFormula\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  type: Class\n  summary: Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart. The actual calculations are performed in the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> class.\n  syntax:\n    content: public class DataFormula\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: DataFormula()\n  nameWithType: DataFormula.DataFormula()\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.DataFormula()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.DataFormula\"></xref> class.\n  syntax:\n    content: public DataFormula ();\n    parameters: []\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)\n  id: CopySeriesValues(System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: CopySeriesValues(String,String)\n  nameWithType: DataFormula.CopySeriesValues(String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(String,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Copies a series or the specific X or Y value.\n  syntax:\n    content: public void CopySeriesValues (string inputSeries, string outputSeries);\n    parameters:\n    - id: inputSeries\n      type: System.String\n      description: A comma-separated list of input data series names and optional X and Y value names.\n    - id: outputSeries\n      type: System.String\n      description: A comma-separated list of output data series names and optional X and Y value names.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name and input series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: inputSeries\n      type: System.String\n      description: The input series in which calculation is performed.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,Series)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name and input series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: inputSeries\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: A comma-separated list of input series names and optional X and Y value names.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,String,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name, and the names of the input and output series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: inputSeries\n      type: System.String\n      description: The input series in which calculation is performed.\n    - id: outputSeries\n      type: System.String\n      description: The output series in which the result of the calculation is stored.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,Series,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,Series,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,Series,Series)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name, input and output series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: inputSeries\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: A comma-separated list of input series names and optional X and Y value names.\n    - id: outputSeries\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: A comma-separated list of output series names and optional X and Y value names.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,String,String,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,String,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name and parameters, and the names of the input and output series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: parameters\n      type: System.String\n      description: The parameters associated with the formula.\n    - id: inputSeries\n      type: System.String\n      description: The input series in which calculation is performed.\n    - id: outputSeries\n      type: System.String\n      description: The output series in which the result of the calculation is stored.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  id: FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: FinancialFormula(FinancialFormula,String,Series,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,Series,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,Series,Series)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Calls a method from a formula module with the specified formula name and parameters, using the specified input and output series.\n  syntax:\n    content: public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);\n    parameters:\n    - id: formulaName\n      type: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n      description: The name of the formula to call.\n    - id: parameters\n      type: System.String\n      description: The parameters associated with the formula.\n    - id: inputSeries\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: A comma-separated list of input series names and optional X and Y value names.\n    - id: outputSeries\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: A comma-separated list of output series names and optional X and Y value names.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored\n  id: IsEmptyPointIgnored\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: IsEmptyPointIgnored\n  nameWithType: DataFormula.IsEmptyPointIgnored\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a flag that indicates whether empty points are ignored while performing calculations.\n  syntax:\n    content: public bool IsEmptyPointIgnored { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty points are ignored while performing calculations; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if empty points are treated as zeroes.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst\n  id: IsStartFromFirst\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: IsStartFromFirst\n  nameWithType: DataFormula.IsStartFromFirst\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a flag that indicates whether to start formulas such as \"rolling average\" from zero.\n  syntax:\n    content: public bool IsStartFromFirst { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if formulas such as \"rolling average\" start from zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics\n  id: Statistics\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  langs:\n  - csharp\n  name: Statistics\n  nameWithType: DataFormula.Statistics\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets a reference to the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> class.\n  syntax:\n    content: public System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics { get; }\n    return:\n      type: System.Windows.Forms.DataVisualization.Charting.StatisticFormula\n      description: A reference to the <xref href=\"System.Windows.Forms.DataVisualization.Charting.StatisticFormula\"></xref> object.\n  overload: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: DataFormula()\n  nameWithType: DataFormula.DataFormula()\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.DataFormula()\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: CopySeriesValues(String,String)\n  nameWithType: DataFormula.CopySeriesValues(String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String)\n- uid: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: FinancialFormula\n  nameWithType: FinancialFormula\n  fullName: System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,Series)\n- uid: System.Windows.Forms.DataVisualization.Charting.Series\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: Series\n  nameWithType: Series\n  fullName: System.Windows.Forms.DataVisualization.Charting.Series\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,String,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,String)\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,Series,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,Series,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,Series,Series)\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,String,String,String)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,String,String)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,String,String)\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula(FinancialFormula,String,Series,Series)\n  nameWithType: DataFormula.FinancialFormula(FinancialFormula,String,Series,Series)\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(FinancialFormula,String,Series,Series)\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: IsEmptyPointIgnored\n  nameWithType: DataFormula.IsEmptyPointIgnored\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: IsStartFromFirst\n  nameWithType: DataFormula.IsStartFromFirst\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: Statistics\n  nameWithType: DataFormula.Statistics\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics\n- uid: System.Windows.Forms.DataVisualization.Charting.StatisticFormula\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: StatisticFormula\n  nameWithType: StatisticFormula\n  fullName: System.Windows.Forms.DataVisualization.Charting.StatisticFormula\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: DataFormula\n  nameWithType: DataFormula.DataFormula\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: CopySeriesValues\n  nameWithType: DataFormula.CopySeriesValues\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: FinancialFormula\n  nameWithType: DataFormula.FinancialFormula\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: IsEmptyPointIgnored\n  nameWithType: DataFormula.IsEmptyPointIgnored\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: IsStartFromFirst\n  nameWithType: DataFormula.IsStartFromFirst\n- uid: System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics*\n  parent: System.Windows.Forms.DataVisualization.Charting.DataFormula\n  isExternal: false\n  name: Statistics\n  nameWithType: DataFormula.Statistics\n"}