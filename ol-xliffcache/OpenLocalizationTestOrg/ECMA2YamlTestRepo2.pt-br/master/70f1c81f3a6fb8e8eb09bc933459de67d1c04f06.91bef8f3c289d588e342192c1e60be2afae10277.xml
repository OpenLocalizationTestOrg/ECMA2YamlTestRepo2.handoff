{"nodes":[{"pos":[877,944],"content":"Abstract base class for MSBuild construction object model elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract base class for MSBuild construction object model elements.","pos":[0,67]}]},{"pos":[1487,1665],"content":"All parent elements of this element, going up to the ProjectRootElement.       None if this is a ProjectRootElement.       None if this has not been attached to a parent yet.","needQuote":false,"needEscape":true,"nodes":[{"content":"All parent elements of this element, going up to the ProjectRootElement.       None if this is a ProjectRootElement.       None if this has not been attached to a parent yet.","pos":[0,174],"nodes":[{"content":"All parent elements of this element, going up to the ProjectRootElement.","pos":[0,72]},{"content":"None if this is a ProjectRootElement.","pos":[79,116]},{"content":"None if this has not been attached to a parent yet.","pos":[123,174]}]}]},{"pos":[1946,2122],"content":"Returns an enumerator over all parent elements. There are no parents elements if the project element is a ProjectRootElement or if this is not yet attached to a parent element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator over all parent elements. There are no parents elements if the project element is a ProjectRootElement or if this is not yet attached to a parent element.","pos":[0,176],"nodes":[{"content":"Returns an enumerator over all parent elements.","pos":[0,47]},{"content":"There are no parents elements if the project element is a ProjectRootElement or if this is not yet attached to a parent element.","pos":[48,176]}]}]},{"pos":[2612,3054],"content":"Gets or sets the Condition value.       It will return empty string IFF a condition attribute is legal but it’s not present or has no value.       It will return null IFF a Condition attribute is illegal on that element.       Removes the attribute if the value to set is empty.       It is possible for derived classes to throw an <xref:System.InvalidOperationException> if setting the condition is not applicable for those elements.","needQuote":false,"needEscape":true,"nodes":[{"content":"Gets or sets the Condition value.       It will return empty string IFF a condition attribute is legal but it’s not present or has no value.       It will return null IFF a Condition attribute is illegal on that element.       Removes the attribute if the value to set is empty.       It is possible for derived classes to throw an <xref:System.InvalidOperationException> if setting the condition is not applicable for those elements.","pos":[0,434],"nodes":[{"content":"Gets or sets the Condition value.","pos":[0,33]},{"content":"It will return empty string IFF a condition attribute is legal but it’s not present or has no value.","pos":[40,140]},{"content":"It will return null IFF a Condition attribute is illegal on that element.","pos":[147,220]},{"content":"Removes the attribute if the value to set is empty.","pos":[227,278]},{"content":"It is possible for derived classes to throw an &lt;xref:System.InvalidOperationException&gt; if setting the condition is not applicable for those elements.","pos":[285,434],"source":"       It is possible for derived classes to throw an <xref:System.InvalidOperationException> if setting the condition is not applicable for those elements."}]}]},{"pos":[3068,3426],"content":"Removes the Condition attribute if the value to set is set to null or an empty string. If the Condition attribute is not present, returns an empty string instead of throwing an exception because a nonexistent condition is implicitly true       For the \"ProjectExtensions\" element, the getter returns null and the setter throws an exception for any value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Removes the Condition attribute if the value to set is set to null or an empty string. If the Condition attribute is not present, returns an empty string instead of throwing an exception because a nonexistent condition is implicitly true       For the \"ProjectExtensions\" element, the getter returns null and the setter throws an exception for any value.","pos":[0,354],"nodes":[{"content":"Removes the Condition attribute if the value to set is set to null or an empty string.","pos":[0,86]},{"content":"If the Condition attribute is not present, returns an empty string instead of throwing an exception because a nonexistent condition is implicitly true       For the \"ProjectExtensions\" element, the getter returns null and the setter throws an exception for any value.","pos":[87,354]}]}]},{"pos":[3554,3649],"content":"Returns the Condition attribute value. Returns an empty string if the attribute is not present.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Condition attribute value. Returns an empty string if the attribute is not present.","pos":[0,95],"nodes":[{"content":"Returns the Condition attribute value.","pos":[0,38]},{"content":"Returns an empty string if the attribute is not present.","pos":[39,95]}]}]},{"pos":[4178,4295],"content":"Location of the \"Condition\" attribute on this element, if any.       If there is no such attribute, returns null.","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the \"Condition\" attribute on this element, if any.       If there is no such attribute, returns null.","pos":[0,113],"nodes":[{"content":"Location of the \"Condition\" attribute on this element, if any.","pos":[0,62]},{"content":"If there is no such attribute, returns null.","pos":[69,113]}]}]},{"pos":[4495,4569],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[5106,5192],"content":"ProjectRootElement (possibly imported) that contains this Xml.       Cannot be null.","needQuote":false,"needEscape":true,"nodes":[{"content":"ProjectRootElement (possibly imported) that contains this Xml.       Cannot be null.","pos":[0,84],"nodes":[{"content":"ProjectRootElement (possibly imported) that contains this Xml.","pos":[0,62]},{"content":"Cannot be null.","pos":[69,84]}]}]},{"pos":[5390,5452],"content":"Returns the project root container that contains this project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the project root container that contains this project.","pos":[0,62]}]},{"pos":[5929,6069],"content":"Gets or sets the Label value.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","needQuote":false,"needEscape":true,"nodes":[{"content":"Gets or sets the Label value.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","pos":[0,136],"nodes":[{"content":"Gets or sets the Label value.","pos":[0,29]},{"content":"Returns empty string if it is not present.","pos":[36,78]},{"content":"Removes the attribute if the value to set is empty.","pos":[85,136]}]}]},{"pos":[6082,6133],"content":"Removes the attribute if the value to set is empty.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Removes the attribute if the value to set is empty.","pos":[0,51]}]},{"pos":[6248,6314],"content":"Returns the label. Returns an empty string if no label is present.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the label. Returns an empty string if no label is present.","pos":[0,66],"nodes":[{"content":"Returns the label.","pos":[0,18]},{"content":"Returns an empty string if no label is present.","pos":[19,66]}]}]},{"pos":[6819,6932],"content":"Location of the \"Label\" attribute on this element, if any.       If there is no such attribute, returns null;","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the \"Label\" attribute on this element, if any.       If there is no such attribute, returns null;","pos":[0,109],"nodes":[{"content":"Location of the \"Label\" attribute on this element, if any.","pos":[0,58]},{"content":"If there is no such attribute, returns null;","pos":[65,109]}]}]},{"pos":[7120,7194],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[7682,7944],"content":"Location of the corresponding Xml element.       May not be correct if file is not saved, or file has been edited since it was last saved.       In the case of an unsaved edit, the location only contains the path to the file that the element originates from.","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the corresponding Xml element.       May not be correct if file is not saved, or file has been edited since it was last saved.       In the case of an unsaved edit, the location only contains the path to the file that the element originates from.","pos":[0,258],"nodes":[{"content":"Location of the corresponding Xml element.","pos":[0,42]},{"content":"May not be correct if file is not saved, or file has been edited since it was last saved.","pos":[49,138]},{"content":"In the case of an unsaved edit, the location only contains the path to the file that the element originates from.","pos":[145,258]}]}]},{"pos":[8127,8201],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[8699,8741],"content":"Next sibling element.       May be null.","needQuote":false,"needEscape":true,"nodes":[{"content":"Next sibling element.       May be null.","pos":[0,40],"nodes":[{"content":"Next sibling element.","pos":[0,21]},{"content":"May be null.","pos":[28,40]}]}]},{"pos":[8925,9014],"content":"Returns the next sibling of this project element. Returns null if no next sibling exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the next sibling of this project element. Returns null if no next sibling exists.","pos":[0,89],"nodes":[{"content":"Returns the next sibling of this project element.","pos":[0,49]},{"content":"Returns null if no next sibling exists.","pos":[50,89]}]}]},{"pos":[9490,9587],"content":"Null if this is a ProjectRootElement.       Null if this has not been attached to a parent yet.","needQuote":false,"needEscape":true,"nodes":[{"content":"Null if this is a ProjectRootElement.       Null if this has not been attached to a parent yet.","pos":[0,95],"nodes":[{"content":"Null if this is a ProjectRootElement.","pos":[0,37]},{"content":"Null if this has not been attached to a parent yet.","pos":[44,95]}]}]},{"pos":[9600,9653],"content":"Parent should only be set by ProjectElementContainer.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Parent should only be set by ProjectElementContainer.","pos":[0,53]}]},{"pos":[9849,9914],"content":"Returns the project element container that contains this project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the project element container that contains this project.","pos":[0,65]}]},{"pos":[10430,10476],"content":"Previous sibling element.       May be null.","needQuote":false,"needEscape":true,"nodes":[{"content":"Previous sibling element.       May be null.","pos":[0,44],"nodes":[{"content":"Previous sibling element.","pos":[0,25]},{"content":"May be null.","pos":[32,44]}]}]},{"pos":[10664,10761],"content":"Returns the previous sibling of this project element. Returns null if no previous sibling exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the previous sibling of this project element. Returns null if no previous sibling exists.","pos":[0,97],"nodes":[{"content":"Returns the previous sibling of this project element.","pos":[0,53]},{"content":"Returns null if no previous sibling exists.","pos":[54,97]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Construction.ProjectElement\n  id: ProjectElement\n  children:\n  - Microsoft.Build.Construction.ProjectElement.AllParents\n  - Microsoft.Build.Construction.ProjectElement.Condition\n  - Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  - Microsoft.Build.Construction.ProjectElement.ContainingProject\n  - Microsoft.Build.Construction.ProjectElement.Label\n  - Microsoft.Build.Construction.ProjectElement.LabelLocation\n  - Microsoft.Build.Construction.ProjectElement.Location\n  - Microsoft.Build.Construction.ProjectElement.NextSibling\n  - Microsoft.Build.Construction.ProjectElement.Parent\n  - Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  langs:\n  - csharp\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n  type: Class\n  summary: Abstract base class for MSBuild construction object model elements.\n  syntax:\n    content: public abstract class ProjectElement\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.AllParents\n  id: AllParents\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: AllParents\n  nameWithType: ProjectElement.AllParents\n  fullName: Microsoft.Build.Construction.ProjectElement.AllParents\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"All parent elements of this element, going up to the ProjectRootElement.  \\n  \\n None if this is a ProjectRootElement.  \\n  \\n None if this has not been attached to a parent yet.\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer> AllParents { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElementContainer}\n      description: Returns an enumerator over all parent elements. There are no parents elements if the project element is a ProjectRootElement or if this is not yet attached to a parent element.\n  overload: Microsoft.Build.Construction.ProjectElement.AllParents*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.Condition\n  id: Condition\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: ProjectElement.Condition\n  fullName: Microsoft.Build.Construction.ProjectElement.Condition\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Gets or sets the Condition value.  \\n  \\n It will return empty string IFF a condition attribute is legal but it’s not present or has no value.  \\n  \\n It will return null IFF a Condition attribute is illegal on that element.  \\n  \\n Removes the attribute if the value to set is empty.  \\n  \\n It is possible for derived classes to throw an <xref:System.InvalidOperationException> if setting the condition is not applicable for those elements.\"\n  remarks: \"Removes the Condition attribute if the value to set is set to null or an empty string. If the Condition attribute is not present, returns an empty string instead of throwing an exception because a nonexistent condition is implicitly true  \\n  \\n For the \\\"ProjectExtensions\\\" element, the getter returns null and the setter throws an exception for any value.\"\n  syntax:\n    content: public virtual string Condition { get; set; }\n    return:\n      type: System.String\n      description: Returns the Condition attribute value. Returns an empty string if the attribute is not present.\n  overload: Microsoft.Build.Construction.ProjectElement.Condition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  id: ConditionLocation\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: ConditionLocation\n  nameWithType: ProjectElement.ConditionLocation\n  fullName: Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the \\\"Condition\\\" attribute on this element, if any.  \\n  \\n If there is no such attribute, returns null.\"\n  syntax:\n    content: public virtual Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectElement.ConditionLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject\n  id: ContainingProject\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: ContainingProject\n  nameWithType: ProjectElement.ContainingProject\n  fullName: Microsoft.Build.Construction.ProjectElement.ContainingProject\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"ProjectRootElement (possibly imported) that contains this Xml.  \\n  \\n Cannot be null.\"\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectRootElement ContainingProject { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: Returns the project root container that contains this project.\n  overload: Microsoft.Build.Construction.ProjectElement.ContainingProject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.Label\n  id: Label\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: Label\n  nameWithType: ProjectElement.Label\n  fullName: Microsoft.Build.Construction.ProjectElement.Label\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Gets or sets the Label value.  \\n  \\n Returns empty string if it is not present.  \\n  \\n Removes the attribute if the value to set is empty.\"\n  remarks: Removes the attribute if the value to set is empty.\n  syntax:\n    content: public string Label { get; set; }\n    return:\n      type: System.String\n      description: Returns the label. Returns an empty string if no label is present.\n  overload: Microsoft.Build.Construction.ProjectElement.Label*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation\n  id: LabelLocation\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: LabelLocation\n  nameWithType: ProjectElement.LabelLocation\n  fullName: Microsoft.Build.Construction.ProjectElement.LabelLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the \\\"Label\\\" attribute on this element, if any.  \\n  \\n If there is no such attribute, returns null;\"\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation LabelLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectElement.LabelLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.Location\n  id: Location\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: Location\n  nameWithType: ProjectElement.Location\n  fullName: Microsoft.Build.Construction.ProjectElement.Location\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the corresponding Xml element.  \\n  \\n May not be correct if file is not saved, or file has been edited since it was last saved.  \\n  \\n In the case of an unsaved edit, the location only contains the path to the file that the element originates from.\"\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation Location { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectElement.Location*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.NextSibling\n  id: NextSibling\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: NextSibling\n  nameWithType: ProjectElement.NextSibling\n  fullName: Microsoft.Build.Construction.ProjectElement.NextSibling\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Next sibling element.  \\n  \\n May be null.\"\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement NextSibling { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Returns the next sibling of this project element. Returns null if no next sibling exists.\n  overload: Microsoft.Build.Construction.ProjectElement.NextSibling*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.Parent\n  id: Parent\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: ProjectElement.Parent\n  fullName: Microsoft.Build.Construction.ProjectElement.Parent\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Null if this is a ProjectRootElement.  \\n  \\n Null if this has not been attached to a parent yet.\"\n  remarks: Parent should only be set by ProjectElementContainer.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElementContainer Parent { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElementContainer\n      description: Returns the project element container that contains this project.\n  overload: Microsoft.Build.Construction.ProjectElement.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  id: PreviousSibling\n  parent: Microsoft.Build.Construction.ProjectElement\n  langs:\n  - csharp\n  name: PreviousSibling\n  nameWithType: ProjectElement.PreviousSibling\n  fullName: Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Previous sibling element.  \\n  \\n May be null.\"\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement PreviousSibling { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Returns the previous sibling of this project element. Returns null if no previous sibling exists.\n  overload: Microsoft.Build.Construction.ProjectElement.PreviousSibling*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Construction.ProjectElement.AllParents\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: AllParents\n  nameWithType: ProjectElement.AllParents\n  fullName: Microsoft.Build.Construction.ProjectElement.AllParents\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElementContainer}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ProjectElementContainer>\n  nameWithType: IEnumerable<ProjectElementContainer>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Construction.ProjectElementContainer\n    name: ProjectElementContainer\n    nameWithType: ProjectElementContainer\n    fullName: ProjectElementContainer\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectElement.Condition\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Condition\n  nameWithType: ProjectElement.Condition\n  fullName: Microsoft.Build.Construction.ProjectElement.Condition\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: ConditionLocation\n  nameWithType: ProjectElement.ConditionLocation\n  fullName: Microsoft.Build.Construction.ProjectElement.ConditionLocation\n- uid: Microsoft.Build.Construction.ElementLocation\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ElementLocation\n  nameWithType: ElementLocation\n  fullName: Microsoft.Build.Construction.ElementLocation\n- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: ContainingProject\n  nameWithType: ProjectElement.ContainingProject\n  fullName: Microsoft.Build.Construction.ProjectElement.ContainingProject\n- uid: Microsoft.Build.Construction.ProjectRootElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectRootElement\n  nameWithType: ProjectRootElement\n  fullName: Microsoft.Build.Construction.ProjectRootElement\n- uid: Microsoft.Build.Construction.ProjectElement.Label\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Label\n  nameWithType: ProjectElement.Label\n  fullName: Microsoft.Build.Construction.ProjectElement.Label\n- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: LabelLocation\n  nameWithType: ProjectElement.LabelLocation\n  fullName: Microsoft.Build.Construction.ProjectElement.LabelLocation\n- uid: Microsoft.Build.Construction.ProjectElement.Location\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Location\n  nameWithType: ProjectElement.Location\n  fullName: Microsoft.Build.Construction.ProjectElement.Location\n- uid: Microsoft.Build.Construction.ProjectElement.NextSibling\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: ProjectElement.NextSibling\n  fullName: Microsoft.Build.Construction.ProjectElement.NextSibling\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElement.Parent\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Parent\n  nameWithType: ProjectElement.Parent\n  fullName: Microsoft.Build.Construction.ProjectElement.Parent\n- uid: Microsoft.Build.Construction.ProjectElementContainer\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElementContainer\n  nameWithType: ProjectElementContainer\n  fullName: Microsoft.Build.Construction.ProjectElementContainer\n- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: PreviousSibling\n  nameWithType: ProjectElement.PreviousSibling\n  fullName: Microsoft.Build.Construction.ProjectElement.PreviousSibling\n- uid: Microsoft.Build.Construction.ProjectElement.AllParents*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: AllParents\n  nameWithType: ProjectElement.AllParents\n- uid: Microsoft.Build.Construction.ProjectElement.Condition*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Condition\n  nameWithType: ProjectElement.Condition\n- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: ConditionLocation\n  nameWithType: ProjectElement.ConditionLocation\n- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: ContainingProject\n  nameWithType: ProjectElement.ContainingProject\n- uid: Microsoft.Build.Construction.ProjectElement.Label*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Label\n  nameWithType: ProjectElement.Label\n- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: LabelLocation\n  nameWithType: ProjectElement.LabelLocation\n- uid: Microsoft.Build.Construction.ProjectElement.Location*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Location\n  nameWithType: ProjectElement.Location\n- uid: Microsoft.Build.Construction.ProjectElement.NextSibling*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: ProjectElement.NextSibling\n- uid: Microsoft.Build.Construction.ProjectElement.Parent*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Parent\n  nameWithType: ProjectElement.Parent\n- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling*\n  parent: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: PreviousSibling\n  nameWithType: ProjectElement.PreviousSibling\n"}