{"nodes":[{"pos":[7809,7927],"content":"This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.","pos":[0,118]}]},{"pos":[7939,8678],"content":"In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes. Some internal ASP.NET classes extend this class. If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method. In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>. In this case, the derived class should keep a reference to the current HttpWorkerRequest and delegate most of the methods to it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes. Some internal ASP.NET classes extend this class. If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method. In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>. In this case, the derived class should keep a reference to the current HttpWorkerRequest and delegate most of the methods to it.","pos":[0,739],"nodes":[{"content":"In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the &lt;xref:System.Web.HttpRequest&gt; and &lt;xref:System.Web.HttpResponse&gt; classes.","pos":[0,202],"source":"In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes."},{"content":"Some internal ASP.NET classes extend this class.","pos":[203,251]},{"content":"If your code implements its own hosting environment, it will need to extend this class to call the &lt;xref:System.Web.HttpRuntime.ProcessRequest%2A&gt; method.","pos":[252,406],"source":" If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method."},{"content":"In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to &lt;xref:System.Web.HttpRuntime.ProcessRequest%2A&gt;.","pos":[407,610],"source":" In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>."},{"content":"In this case, the derived class should keep a reference to the current HttpWorkerRequest and delegate most of the methods to it.","pos":[611,739]}]}]},{"pos":[9247,9337],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpWorkerRequest\"></xref> class."},{"pos":[9349,9460],"content":"The HttpWorkerRequest constructor is the default constructor for the <xref:System.Web.HttpWorkerRequest> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HttpWorkerRequest constructor is the default constructor for the &lt;xref:System.Web.HttpWorkerRequest&gt; class.","pos":[0,111],"source":"The HttpWorkerRequest constructor is the default constructor for the <xref:System.Web.HttpWorkerRequest> class."}]},{"pos":[10079,10131],"content":"Sends the currently buffered response to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends the currently buffered response to the client.","pos":[0,52]}]},{"pos":[10321,10394],"content":"The method to call when a corresponding asynchronous operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to call when a corresponding asynchronous operation completes.","pos":[0,73]}]},{"pos":[10456,10563],"content":"A user-provided object that distinguishes this particular asynchronous flush operation from other requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous flush operation from other requests.","pos":[0,107]}]},{"pos":[10627,11050],"content":"The worker request buffers the status, headers, and response body until an asynchronous flush operation is initiated. If the underlying <xref href=\"System.Web.HttpWorkerRequest\"></xref> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously. Otherwise, the implementation performs a synchronous flush operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The worker request buffers the status, headers, and response body until an asynchronous flush operation is initiated.","pos":[0,117]},{"content":"If the underlying <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously.","pos":[118,353],"source":" If the underlying <xref href=\"System.Web.HttpWorkerRequest\"></xref> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously."},{"content":"Otherwise, the implementation performs a synchronous flush operation.","pos":[354,423]}]},{"pos":[11732,11797],"content":"Begins an asynchronous read operation of the request entity body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous read operation of the request entity body.","pos":[0,65]}]},{"pos":[12015,12048],"content":"The buffer to read the data into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer to read the data into.","pos":[0,33]}]},{"pos":[12110,12171],"content":"The byte offset in the buffer at which to begin writing data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset in the buffer at which to begin writing data.","pos":[0,61]}]},{"pos":[12232,12268],"content":"The maximum number of bytes to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]},{"pos":[12340,12413],"content":"The method to call when a corresponding asynchronous operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to call when a corresponding asynchronous operation completes.","pos":[0,73]}]},{"pos":[12475,12571],"content":"A user-provided object that distinguishes this particular asynchronous read from other requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous read from other requests.","pos":[0,96]}]},{"pos":[12635,12700],"content":"Begins an asynchronous read operation of the request entity body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous read operation of the request entity body.","pos":[0,65]}]},{"pos":[13142,13184],"content":"Terminates the connection with the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Terminates the connection with the client.","pos":[0,42]}]},{"pos":[13757,13820],"content":"Waits for the pending asynchronous flush operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Waits for the pending asynchronous flush operation to complete.","pos":[0,63]}]},{"pos":[13990,14038],"content":"A reference to the pending asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the pending asynchronous request.","pos":[0,48]}]},{"pos":[14464,14608],"content":"Used by the runtime to notify the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that request processing for the current request is complete.","needQuote":true,"needEscape":true,"source":"Used by the runtime to notify the <xref href=\"System.Web.HttpWorkerRequest\"></xref> that request processing for the current request is complete."},{"pos":[15171,15233],"content":"Waits for the pending asynchronous read operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Waits for the pending asynchronous read operation to complete.","pos":[0,62]}]},{"pos":[15401,15449],"content":"A reference to the pending asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the pending asynchronous request.","pos":[0,48]}]},{"pos":[15506,15562],"content":"The number of bytes that have been read from the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes that have been read from the stream.","pos":[0,56]}]},{"pos":[16045,16091],"content":"Sends all pending response data to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends all pending response data to the client.","pos":[0,46]}]},{"pos":[16252,16443],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this is the last time response data will be flushed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the last time response data will be flushed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16864,16935],"content":"Returns the virtual path to the currently executing server application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the virtual path to the currently executing server application.","pos":[0,71]}]},{"pos":[17072,17116],"content":"The virtual path of the current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the current application.","pos":[0,44]}]},{"pos":[17584,17656],"content":"Returns the physical path to the currently executing server application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path to the currently executing server application.","pos":[0,72]}]},{"pos":[17803,17848],"content":"The physical path of the current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the current application.","pos":[0,45]}]},{"pos":[18286,18374],"content":"When overridden in a derived class, returns the application pool ID for the current URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the application pool ID for the current URL.","pos":[0,88]}]},{"pos":[18513,18533],"content":"Always returns null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns null.","pos":[0,20]}]},{"pos":[18963,19012],"content":"Gets the number of bytes read in from the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of bytes read in from the client.","pos":[0,49]}]},{"pos":[19148,19247],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Long\" name=\"Long\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the number of bytes read.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_Long\" name=\"Long\" href=\"\"></xref> containing the number of bytes read."},{"pos":[19717,19853],"content":"When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client.","pos":[0,136]}]},{"pos":[19865,19972],"content":"If no certificate is sent, the <xref:System.Web.HttpRequest.ClientCertificate%2A> collection returns empty.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If no certificate is sent, the &lt;xref:System.Web.HttpRequest.ClientCertificate%2A&gt; collection returns empty.","pos":[0,107],"source":"If no certificate is sent, the <xref:System.Web.HttpRequest.ClientCertificate%2A> collection returns empty."}]},{"pos":[20119,20188],"content":"A byte array containing the stream of the entire certificate content.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array containing the stream of the entire certificate content.","pos":[0,69]}]},{"pos":[20726,20772],"content":"Gets the certificate issuer, in binary format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the certificate issuer, in binary format.","pos":[0,46]}]},{"pos":[20931,21005],"content":"A byte array containing the certificate issuer expressed in binary format.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array containing the certificate issuer expressed in binary format.","pos":[0,74]}]},{"pos":[21535,21662],"content":"When overridden in a derived class, returns the <xref:System.Text.Encoding> object in which the client certificate was encoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the &lt;xref:System.Text.Encoding&gt; object in which the client certificate was encoded.","pos":[0,127],"source":"When overridden in a derived class, returns the <xref:System.Text.Encoding> object in which the client certificate was encoded."}]},{"pos":[21813,21863],"content":"The certificate encoding, expressed as an integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The certificate encoding, expressed as an integer.","pos":[0,50]}]},{"pos":[22394,22554],"content":"When overridden in a derived class, gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the client certificate.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, gets a <xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"></xref> object associated with the client certificate."},{"pos":[22710,22790],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"></xref> object."},{"pos":[23322,23452],"content":"When overridden in a derived class, gets the date when the certificate becomes valid. The date varies with international settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the date when the certificate becomes valid. The date varies with international settings.","pos":[0,130],"nodes":[{"content":"When overridden in a derived class, gets the date when the certificate becomes valid.","pos":[0,85]},{"content":"The date varies with international settings.","pos":[86,130]}]}]},{"pos":[23612,23692],"content":"A <xref:System.DateTime> object representing when the certificate becomes valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; object representing when the certificate becomes valid.","pos":[0,80],"source":"A <xref:System.DateTime> object representing when the certificate becomes valid."}]},{"pos":[24229,24266],"content":"Gets the certificate expiration date.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the certificate expiration date.","pos":[0,37]}]},{"pos":[24427,24510],"content":"A <xref:System.DateTime> object representing the date that the certificate expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; object representing the date that the certificate expires.","pos":[0,83],"source":"A <xref:System.DateTime> object representing the date that the certificate expires."}]},{"pos":[24973,25050],"content":"When overridden in a derived class, returns the ID of the current connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the ID of the current connection.","pos":[0,77]}]},{"pos":[25189,25206],"content":"Always returns 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns 0.","pos":[0,17]}]},{"pos":[25634,25716],"content":"When overridden in a derived class, returns the virtual path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the virtual path to the requested URI.","pos":[0,82]}]},{"pos":[25854,25884],"content":"The path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the requested URI.","pos":[0,30]}]},{"pos":[26359,26520],"content":"Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")","pos":[0,161]}]},{"pos":[26669,26724],"content":"The translated physical file path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translated physical file path to the requested URI.","pos":[0,55]}]},{"pos":[27178,27229],"content":"Returns the specified member of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the specified member of the request header.","pos":[0,51]}]},{"pos":[27372,27417],"content":"The HTTP verb returned in the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP verb returned in the request header.","pos":[0,45]}]},{"pos":[27860,27937],"content":"Provides access to the HTTP version of the request (for example, \"HTTP/1.1\").","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the HTTP version of the request (for example, \"HTTP/1.1\").","pos":[0,77]}]},{"pos":[28079,28127],"content":"The HTTP version returned in the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP version returned in the request header.","pos":[0,48]}]},{"pos":[28647,28728],"content":"Returns the standard HTTP request header that corresponds to the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the standard HTTP request header that corresponds to the specified index.","pos":[0,81]}]},{"pos":[28885,28995],"content":"The index of the header. For example, the <xref href=\"System.Web.HttpWorkerRequest.HeaderAllow\"></xref> field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the header.","pos":[0,24]},{"content":"For example, the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest.HeaderAllow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field.","pos":[25,110],"source":" For example, the <xref href=\"System.Web.HttpWorkerRequest.HeaderAllow\"></xref> field."}]},{"pos":[29053,29077],"content":"The HTTP request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request header.","pos":[0,24]}]},{"pos":[29634,29696],"content":"Returns the index number of the specified HTTP request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the index number of the specified HTTP request header.","pos":[0,62]}]},{"pos":[29860,29883],"content":"The name of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the header.","pos":[0,23]}]},{"pos":[29940,30031],"content":"The index number of the HTTP request header specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">header</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The index number of the HTTP request header specified in the <code>header</code> parameter."},{"pos":[30583,30637],"content":"Returns the name of the specified HTTP request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the specified HTTP request header.","pos":[0,54]}]},{"pos":[30797,30828],"content":"The index number of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index number of the header.","pos":[0,31]}]},{"pos":[30886,30968],"content":"The name of the HTTP request header specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The name of the HTTP request header specified in the <code>index</code> parameter."},{"pos":[31534,31597],"content":"Returns the index number of the specified HTTP response header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the index number of the specified HTTP response header.","pos":[0,63]}]},{"pos":[31762,31790],"content":"The name of the HTTP header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the HTTP header.","pos":[0,28]}]},{"pos":[31847,31939],"content":"The index number of the HTTP response header specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">header</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The index number of the HTTP response header specified in the <code>header</code> parameter."},{"pos":[32497,32552],"content":"Returns the name of the specified HTTP response header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the specified HTTP response header.","pos":[0,55]}]},{"pos":[32713,32744],"content":"The index number of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index number of the header.","pos":[0,31]}]},{"pos":[32802,32885],"content":"The name of the HTTP response header specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The name of the HTTP response header specified in the <code>index</code> parameter."},{"pos":[33344,33406],"content":"Provides access to the specified member of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the specified member of the request header.","pos":[0,62]}]},{"pos":[33549,33602],"content":"The server IP address returned in the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server IP address returned in the request header.","pos":[0,53]}]},{"pos":[34035,34097],"content":"Provides access to the specified member of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the specified member of the request header.","pos":[0,62]}]},{"pos":[34233,34287],"content":"The server port number returned in the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server port number returned in the request header.","pos":[0,54]}]},{"pos":[34712,34925],"content":"Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the <xref uid=\"langword_csharp_GetPathInfo\" name=\"GetPathInfo\" href=\"\"></xref> value is /tail.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns additional path information for a resource with a URL extension.","pos":[0,72]},{"content":"That is, for the path /virdir/page.html/tail, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GetPathInfo\" name=\"GetPathInfo\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value is /tail.","pos":[73,213],"source":" That is, for the path /virdir/page.html/tail, the <xref uid=\"langword_csharp_GetPathInfo\" name=\"GetPathInfo\" href=\"\"></xref> value is /tail."}]},{"pos":[35063,35106],"content":"Additional path information for a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Additional path information for a resource.","pos":[0,43]}]},{"pos":[35585,35657],"content":"Returns the portion of the HTTP request body that has already been read.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the portion of the HTTP request body that has already been read.","pos":[0,72]}]},{"pos":[35806,35862],"content":"The portion of the HTTP request body that has been read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The portion of the HTTP request body that has been read.","pos":[0,56]}]},{"pos":[36444,36566],"content":"Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset.","pos":[0,122]}]},{"pos":[36739,36756],"content":"The data to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to read.","pos":[0,17]}]},{"pos":[36818,36860],"content":"The byte offset at which to begin reading.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset at which to begin reading.","pos":[0,42]}]},{"pos":[36917,36973],"content":"The portion of the HTTP request body that has been read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The portion of the HTTP request body that has been read.","pos":[0,56]}]},{"pos":[37493,37578],"content":"Gets the length of the portion of the HTTP request body that has currently been read.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the portion of the HTTP request body that has currently been read.","pos":[0,85]}]},{"pos":[37729,37802],"content":"An integer containing the length of the currently read HTTP request body.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer containing the length of the currently read HTTP request body.","pos":[0,73]}]},{"pos":[38243,38321],"content":"When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).","pos":[0,78]}]},{"pos":[38459,38605],"content":"HTTPS if the &lt;xref:System.Web.HttpWorkerRequest.IsSecure*&gt; method is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, otherwise HTTP.","needQuote":true,"needEscape":true,"source":"HTTPS if the <xref:System.Web.HttpWorkerRequest.IsSecure*> method is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, otherwise HTTP."},{"pos":[39044,39098],"content":"Returns the query string specified in the request URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the query string specified in the request URL.","pos":[0,54]}]},{"pos":[39240,39265],"content":"The request query string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request query string.","pos":[0,25]}]},{"pos":[39747,39838],"content":"When overridden in a derived class, returns the response query string as an array of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the response query string as an array of bytes.","pos":[0,91]}]},{"pos":[39987,40029],"content":"An array of bytes containing the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of bytes containing the response.","pos":[0,42]}]},{"pos":[40454,40538],"content":"Returns the URL path contained in the request header with the query string appended.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the URL path contained in the request header with the query string appended.","pos":[0,84]}]},{"pos":[40675,40714],"content":"The raw URL path of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The raw URL path of the request header.","pos":[0,39]}]},{"pos":[41161,41223],"content":"Provides access to the specified member of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the specified member of the request header.","pos":[0,62]}]},{"pos":[41367,41391],"content":"The client's IP address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client's IP address.","pos":[0,24]}]},{"pos":[41830,41906],"content":"When overridden in a derived class, returns the name of the client computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the name of the client computer.","pos":[0,76]}]},{"pos":[42046,42078],"content":"The name of the client computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the client computer.","pos":[0,32]}]},{"pos":[42514,42576],"content":"Provides access to the specified member of the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the specified member of the request header.","pos":[0,62]}]},{"pos":[42713,42743],"content":"The client's HTTP port number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client's HTTP port number.","pos":[0,30]}]},{"pos":[43194,43265],"content":"When overridden in a derived class, returns the reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the reason for the request.","pos":[0,71]}]},{"pos":[43404,43531],"content":"Reason code. The default is <xref uid=\"langword_csharp_ReasonResponseCacheMiss\" name=\"ReasonResponseCacheMiss\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reason code.","pos":[0,12]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ReasonResponseCacheMiss\" name=\"ReasonResponseCacheMiss\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[13,127],"source":" The default is <xref uid=\"langword_csharp_ReasonResponseCacheMiss\" name=\"ReasonResponseCacheMiss\" href=\"\"></xref>."}]},{"pos":[43970,44043],"content":"When overridden in a derived class, returns the name of the local server.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the name of the local server.","pos":[0,73]}]},{"pos":[44183,44212],"content":"The name of the local server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the local server.","pos":[0,29]}]},{"pos":[44716,44815],"content":"Returns a single server variable from a dictionary of server variables associated with the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a single server variable from a dictionary of server variables associated with the request.","pos":[0,99]}]},{"pos":[44970,45012],"content":"The name of the requested server variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the requested server variable.","pos":[0,42]}]},{"pos":[45070,45100],"content":"The requested server variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested server variable.","pos":[0,30]}]},{"pos":[45618,45693],"content":"Returns a string that describes the name of the specified HTTP status code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that describes the name of the specified HTTP status code.","pos":[0,75]}]},{"pos":[45846,45867],"content":"The HTTP status code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP status code.","pos":[0,21]}]},{"pos":[45925,46009],"content":"The status description. For example, GetStatusDescription (404) returns \"Not Found\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The status description. For example, GetStatusDescription (404) returns \"Not Found\".","pos":[0,84],"nodes":[{"content":"The status description.","pos":[0,23]},{"content":"For example, GetStatusDescription (404) returns \"Not Found\".","pos":[24,84]}]}]},{"pos":[46507,46555],"content":"Gets the length of the entire HTTP request body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the entire HTTP request body.","pos":[0,48]}]},{"pos":[46702,46767],"content":"An integer containing the length of the entire HTTP request body.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer containing the length of the entire HTTP request body.","pos":[0,65]}]},{"pos":[47312,47360],"content":"Returns a nonstandard HTTP request header value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a nonstandard HTTP request header value.","pos":[0,48]}]},{"pos":[47521,47537],"content":"The header name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header name.","pos":[0,16]}]},{"pos":[47595,47612],"content":"The header value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header value.","pos":[0,17]}]},{"pos":[48113,48162],"content":"Get all nonstandard HTTP header name-value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get all nonstandard HTTP header name-value pairs.","pos":[0,49]}]},{"pos":[48321,48357],"content":"An array of header name-value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of header name-value pairs.","pos":[0,36]}]},{"pos":[48789,48835],"content":"Returns the virtual path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the virtual path to the requested URI.","pos":[0,46]}]},{"pos":[48973,49003],"content":"The path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the requested URI.","pos":[0,30]}]},{"pos":[49446,49531],"content":"When overridden in a derived class, returns the context ID of the current connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the context ID of the current connection.","pos":[0,85]}]},{"pos":[49670,49687],"content":"Always returns 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns 0.","pos":[0,17]}]},{"pos":[50120,50197],"content":"When overridden in a derived class, returns the client's impersonation token.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the client's impersonation token.","pos":[0,77]}]},{"pos":[50336,50408],"content":"A value representing the client's impersonation token. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value representing the client's impersonation token. The default is 0.","pos":[0,72],"nodes":[{"content":"A value representing the client's impersonation token.","pos":[0,54]},{"content":"The default is 0.","pos":[55,72]}]}]},{"pos":[50873,50931],"content":"Gets the impersonation token for the request virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the impersonation token for the request virtual path.","pos":[0,58]}]},{"pos":[51077,51148],"content":"An unmanaged memory pointer for the token for the request virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unmanaged memory pointer for the token for the request virtual path.","pos":[0,71]}]},{"pos":[51590,51656],"content":"Returns a value indicating whether the request contains body data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the request contains body data.","pos":[0,66]}]},{"pos":[51787,51957],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the request contains body data; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the request contains body data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52381,52493],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Accept\" name=\"Accept\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Accept\" name=\"Accept\" href=\"\"></xref> HTTP header."},{"pos":[52505,52734],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[52850,52862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53265,53393],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Accept-Charset\" name=\"Accept-Charset\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Accept-Charset\" name=\"Accept-Charset\" href=\"\"></xref> HTTP header."},{"pos":[53405,53634],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[53757,53769],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54177,54307],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Accept-Encoding\" name=\"Accept-Encoding\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Accept-Encoding\" name=\"Accept-Encoding\" href=\"\"></xref> HTTP header."},{"pos":[54319,54548],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[54672,54684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55092,55222],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Accept-Language\" name=\"Accept-Language\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Accept-Language\" name=\"Accept-Language\" href=\"\"></xref> HTTP header."},{"pos":[55234,55463],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[55587,55599],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55997,56123],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Accept-Ranges\" name=\"Accept-Ranges\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Accept-Ranges\" name=\"Accept-Ranges\" href=\"\"></xref> HTTP header."},{"pos":[56135,56364],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[56486,56498],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56851,56957],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Age\" name=\"Age\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Age\" name=\"Age\" href=\"\"></xref> HTTP header."},{"pos":[56969,57198],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[57311,57323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57686,57796],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref> HTTP header."},{"pos":[57808,58037],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[58152,58164],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58567,58693],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Authorization\" name=\"Authorization\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Authorization\" name=\"Authorization\" href=\"\"></xref> HTTP header."},{"pos":[58705,58934],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[59057,59069],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59467,59593],"content":"The index that represents the HTTP <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"The index that represents the HTTP <xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"></xref> HTTP header."},{"pos":[59605,59834],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[59955,59967],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60355,60475],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"></xref> HTTP header."},{"pos":[60487,60716],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[60835,60847],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61260,61392],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Encoding\" name=\"Content-Encoding\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Encoding\" name=\"Content-Encoding\" href=\"\"></xref> HTTP header."},{"pos":[61404,61633],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[61758,61770],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62183,62315],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Language\" name=\"Content-Language\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Language\" name=\"Content-Language\" href=\"\"></xref> HTTP header."},{"pos":[62327,62556],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[62681,62693],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63096,63224],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header."},{"pos":[63236,63465],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[63588,63600],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[64013,64145],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Location\" name=\"Content-Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Location\" name=\"Content-Location\" href=\"\"></xref> HTTP header."},{"pos":[64157,64386],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[64511,64523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[64911,65033],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-MD5\" name=\"Content-MD5\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-MD5\" name=\"Content-MD5\" href=\"\"></xref> HTTP header."},{"pos":[65045,65274],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[65394,65406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65804,65930],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Range\" name=\"Content-Range\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Range\" name=\"Content-Range\" href=\"\"></xref> HTTP header."},{"pos":[65942,66171],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[66293,66305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66698,66822],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"></xref> HTTP header."},{"pos":[66834,67063],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[67184,67196],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67564,67676],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Cookie\" name=\"Cookie\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Cookie\" name=\"Cookie\" href=\"\"></xref> HTTP header."},{"pos":[67688,67917],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[68033,68045],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68403,68511],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Date\" name=\"Date\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Date\" name=\"Date\" href=\"\"></xref> HTTP header."},{"pos":[68523,68752],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[68865,68877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[69235,69343],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ETag\" name=\"ETag\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_ETag\" name=\"ETag\" href=\"\"></xref> HTTP header."},{"pos":[69355,69584],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[69698,69710],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70078,70190],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Except\" name=\"Except\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Except\" name=\"Except\" href=\"\"></xref> HTTP header."},{"pos":[70202,70431],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[70547,70559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70932,71046],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Expires\" name=\"Expires\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Expires\" name=\"Expires\" href=\"\"></xref> HTTP header."},{"pos":[71058,71287],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[71404,71416],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71774,71882],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_From\" name=\"From\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_From\" name=\"From\" href=\"\"></xref> HTTP header."},{"pos":[71894,72123],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[72237,72249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72607,72715],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Host\" name=\"Host\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Host\" name=\"Host\" href=\"\"></xref> HTTP header."},{"pos":[72727,72956],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[73070,73082],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[73455,73571],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_If-Match\" name=\"If-Match\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_If-Match\" name=\"If-Match\" href=\"\"></xref> HTTP header."},{"pos":[73583,73812],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[73929,73941],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74354,74488],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_If-Modified-Since\" name=\"If-Modified-Since\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_If-Modified-Since\" name=\"If-Modified-Since\" href=\"\"></xref> HTTP header."},{"pos":[74500,74729],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[74854,74866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75259,75385],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_If-None-Match\" name=\"If-None-Match\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_If-None-Match\" name=\"If-None-Match\" href=\"\"></xref> HTTP header."},{"pos":[75397,75626],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[75747,75759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76132,76248],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_If-Range\" name=\"If-Range\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_If-Range\" name=\"If-Range\" href=\"\"></xref> HTTP header."},{"pos":[76260,76489],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[76606,76618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77041,77179],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_If-Unmodified-Since\" name=\"If-Unmodified-Since\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_If-Unmodified-Since\" name=\"If-Unmodified-Since\" href=\"\"></xref> HTTP header."},{"pos":[77191,77420],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[77547,77559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77942,78062],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Keep-Alive\" name=\"Keep-Alive\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Keep-Alive\" name=\"Keep-Alive\" href=\"\"></xref> HTTP header."},{"pos":[78074,78303],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[78421,78433],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78831,78957],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Last-Modified\" name=\"Last-Modified\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Last-Modified\" name=\"Last-Modified\" href=\"\"></xref> HTTP header."},{"pos":[78969,79198],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[79320,79332],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79710,79826],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> HTTP header."},{"pos":[79838,80067],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[80185,80197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80590,80714],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Max-Forwards\" name=\"Max-Forwards\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Max-Forwards\" name=\"Max-Forwards\" href=\"\"></xref> HTTP header."},{"pos":[80726,80955],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[81076,81088],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81456,81568],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"></xref> HTTP header."},{"pos":[81580,81809],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[81924,81936],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82359,82495],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Proxy-Authenticate\" name=\"Proxy-Authenticate\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Proxy-Authenticate\" name=\"Proxy-Authenticate\" href=\"\"></xref> HTTP header."},{"pos":[82507,82736],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[82863,82875],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83303,83441],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Proxy-Authorization\" name=\"Proxy-Authorization\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Proxy-Authorization\" name=\"Proxy-Authorization\" href=\"\"></xref> HTTP header."},{"pos":[83453,83682],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[83810,83822],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84185,84295],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Range\" name=\"Range\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Range\" name=\"Range\" href=\"\"></xref> HTTP header."},{"pos":[84307,84536],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[84651,84663],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85036,85150],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Referer\" name=\"Referer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Referer\" name=\"Referer\" href=\"\"></xref> HTTP header."},{"pos":[85162,85391],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[85508,85520],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85908,86030],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Retry-After\" name=\"Retry-After\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Retry-After\" name=\"Retry-After\" href=\"\"></xref> HTTP header."},{"pos":[86042,86271],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[86391,86403],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[86771,86883],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> HTTP header."},{"pos":[86895,87124],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[87240,87252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87635,87755],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Set-Cookie\" name=\"Set-Cookie\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Set-Cookie\" name=\"Set-Cookie\" href=\"\"></xref> HTTP header."},{"pos":[87767,87996],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[88115,88127],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[88497,88607],"content":"Returns a value indicating whether HTTP response headers have been sent to the client for the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether HTTP response headers have been sent to the client for the current request.","pos":[0,110]}]},{"pos":[88744,88934],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if HTTP response headers have been sent to the client; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if HTTP response headers have been sent to the client; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[89336,89440],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_TE\" name=\"TE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_TE\" name=\"TE\" href=\"\"></xref> HTTP header."},{"pos":[89452,89681],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[89793,89805],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[90178,90292],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Trailer\" name=\"Trailer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Trailer\" name=\"Trailer\" href=\"\"></xref> HTTP header."},{"pos":[90304,90533],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[90649,90661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91079,91213],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Transfer-Encoding\" name=\"Transfer-Encoding\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Transfer-Encoding\" name=\"Transfer-Encoding\" href=\"\"></xref> HTTP header."},{"pos":[91225,91454],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[91579,91591],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91964,92078],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Upgrade\" name=\"Upgrade\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Upgrade\" name=\"Upgrade\" href=\"\"></xref> HTTP header."},{"pos":[92090,92319],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[92435,92447],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92830,92950],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_User-Agent\" name=\"User-Agent\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_User-Agent\" name=\"User-Agent\" href=\"\"></xref> HTTP header."},{"pos":[92962,93191],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[93310,93322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[93680,93788],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header."},{"pos":[93800,94029],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[94143,94155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94508,94614],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Via\" name=\"Via\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Via\" name=\"Via\" href=\"\"></xref> HTTP header."},{"pos":[94626,94855],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[94967,94979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[95352,95466],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Warning\" name=\"Warning\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Warning\" name=\"Warning\" href=\"\"></xref> HTTP header."},{"pos":[95478,95707],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[95823,95835],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[96248,96380],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_WWW-Authenticate\" name=\"WWW-Authenticate\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_WWW-Authenticate\" name=\"WWW-Authenticate\" href=\"\"></xref> HTTP header."},{"pos":[96392,96621],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[96746,96758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[97158,97231],"content":"Returns a value indicating whether the client connection is still active.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the client connection is still active.","pos":[0,73]}]},{"pos":[97374,97551],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the client connection is still active; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client connection is still active; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[98071,98186],"content":"Returns a value indicating whether all request data is available and no further reads from the client are required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether all request data is available and no further reads from the client are required.","pos":[0,115]}]},{"pos":[98341,98510],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all request data is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all request data is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[98937,98996],"content":"Returns a value indicating whether the connection uses SSL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the connection uses SSL.","pos":[0,59]}]},{"pos":[99130,99384],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the connection is an SSL connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the connection is an SSL connection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the connection is an SSL connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[176,254],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[99831,99886],"content":"Gets the full physical path to the Machine.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full physical path to the Machine.config file.","pos":[0,55]}]},{"pos":[100016,100061],"content":"The physical path to the Machine.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the Machine.config file.","pos":[0,45]}]},{"pos":[100547,100628],"content":"Gets the physical path to the directory where the ASP.NET binaries are installed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the physical path to the directory where the ASP.NET binaries are installed.","pos":[0,81]}]},{"pos":[100764,100815],"content":"The physical directory to the ASP.NET binary files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical directory to the ASP.NET binary files.","pos":[0,51]}]},{"pos":[101279,101349],"content":"Returns the physical path corresponding to the specified virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path corresponding to the specified virtual path.","pos":[0,70]}]},{"pos":[101508,101525],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[101583,101690],"content":"The physical path that corresponds to the virtual path specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The physical path that corresponds to the virtual path specified in the <code>virtualPath</code> parameter."},{"pos":[102217,102273],"content":"Reads request data from the client (when not preloaded).","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads request data from the client (when not preloaded).","pos":[0,56]}]},{"pos":[102286,102488],"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB.","pos":[0,200],"nodes":[{"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.","pos":[0,114]},{"content":"Use this overload to specify the response for message bodies greater than 2 GB.","pos":[121,200]}]}]},{"pos":[102652,102685],"content":"The byte array to read data into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to read data into.","pos":[0,33]}]},{"pos":[102745,102781],"content":"The maximum number of bytes to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]},{"pos":[102838,102863],"content":"The number of bytes read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes read.","pos":[0,25]}]},{"pos":[103441,103572],"content":"Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes.","pos":[0,131]}]},{"pos":[103585,103787],"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB.","pos":[0,200],"nodes":[{"content":"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.","pos":[0,114]},{"content":"Use this overload to specify the response for message bodies greater than 2 GB.","pos":[121,200]}]}]},{"pos":[103963,103996],"content":"The byte array to read data into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to read data into.","pos":[0,33]}]},{"pos":[104058,104100],"content":"The byte offset at which to begin reading.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset at which to begin reading.","pos":[0,42]}]},{"pos":[104160,104196],"content":"The maximum number of bytes to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]},{"pos":[104253,104278],"content":"The number of bytes read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes read.","pos":[0,25]}]},{"pos":[104728,104763],"content":"Specifies a reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]}]},{"pos":[104883,104895],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[105298,105333],"content":"Specifies a reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]}]},{"pos":[105455,105467],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[105885,105920],"content":"Specifies a reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]}]},{"pos":[106045,106057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[106430,106561],"content":"Specifies a reason for the request. The default value is <xref href=\"System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,131],"source":" The default value is <xref href=\"System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\"></xref>."}]},{"pos":[106677,106689],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[107122,107157],"content":"Specifies a reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]}]},{"pos":[107285,107297],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[107720,107755],"content":"Specifies a reason for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a reason for the request.","pos":[0,35]}]},{"pos":[107881,107893],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[108301,108423],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP request header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"></xref> HTTP request header."},{"pos":[108435,108664],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[108788,108800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[109221,109304],"content":"Gets the corresponding Event Tracking for Windows trace ID for the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the corresponding Event Tracking for Windows trace ID for the current request.","pos":[0,83]}]},{"pos":[109316,109643],"content":"ASP.NET requests execute with the same trace ID as the corresponding IIS request. This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system. The IDs provided by IIS differ based on the platform and service pack level.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET requests execute with the same trace ID as the corresponding IIS request. This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system. The IDs provided by IIS differ based on the platform and service pack level.","pos":[0,327],"nodes":[{"content":"ASP.NET requests execute with the same trace ID as the corresponding IIS request.","pos":[0,81]},{"content":"This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system.","pos":[82,250]},{"content":"The IDs provided by IIS differ based on the platform and service pack level.","pos":[251,327]}]}]},{"pos":[109774,109817],"content":"A trace ID for the current ASP.NET request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A trace ID for the current ASP.NET request.","pos":[0,43]}]},{"pos":[110295,110418],"content":"Specifies the index number for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP response header.","needQuote":true,"needEscape":true,"source":"Specifies the index number for the <xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"></xref> HTTP response header."},{"pos":[110430,110659],"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the &lt;xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A&gt; and &lt;xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A&gt; methods.","pos":[0,229],"source":"The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."}]},{"pos":[110784,110796],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[111192,111248],"content":"Gets the full physical path to the root Web.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full physical path to the root Web.config file.","pos":[0,56]}]},{"pos":[111260,111825],"content":"If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file. An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>. The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the RootWebConfigPath property of <xref:System.Web.HttpWorkerRequest> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file. An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>. The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the RootWebConfigPath property of <xref:System.Web.HttpWorkerRequest> class.","pos":[0,565],"nodes":[{"content":"If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file.","pos":[0,157]},{"content":"An example of this is the &lt;xref:System.Web.Hosting.SimpleWorkerRequest&gt; class which provides a simple implementation of the &lt;xref:System.Web.HttpWorkerRequest&gt;.","pos":[158,318],"source":" An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>."},{"content":"The &lt;xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName&gt; property of &lt;xref:System.Web.Hosting.SimpleWorkerRequest&gt; class overrides the RootWebConfigPath property of &lt;xref:System.Web.HttpWorkerRequest&gt; class.","pos":[319,565],"source":" The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the RootWebConfigPath property of <xref:System.Web.HttpWorkerRequest> class."}]}]},{"pos":[111955,112001],"content":"The physical path to the root Web.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the root Web.config file.","pos":[0,46]}]},{"pos":[112554,112725],"content":"Adds a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header to the response for message bodies that are less than or equal to 2 GB.","needQuote":true,"needEscape":true,"source":"Adds a <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header to the response for message bodies that are less than or equal to 2 GB."},{"pos":[112738,113045],"content":"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response.       Use this overload to set the `Content-Length` header when the length of the response message body is less than or equal to 2 GB.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the content length is not explicitly set, this method enables the &lt;xref:System.Web.HttpWorkerRequest&gt; instance to add a <ph id=\"ph1\">`Content-Length`</ph> HTTP header to the response.","pos":[0,170],"source":"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response."},{"content":"Use this overload to set the <ph id=\"ph1\">`Content-Length`</ph> header when the length of the response message body is less than or equal to 2 GB.","pos":[177,305],"source":"       Use this overload to set the `Content-Length` header when the length of the response message body is less than or equal to 2 GB."}]},{"pos":[113223,113260],"content":"The length of the response, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the response, in bytes.","pos":[0,37]}]},{"pos":[113823,113985],"content":"Adds a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header to the response for message bodies that are greater than 2 GB.","needQuote":true,"needEscape":true,"source":"Adds a <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header to the response for message bodies that are greater than 2 GB."},{"pos":[113998,114370],"content":"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response. The default implementation calls the overload that takes a `contentLength` parameter of type <xref:System.Int32>.       Use this overload to specify the response for message bodies greater than 2 GB.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the content length is not explicitly set, this method enables the &lt;xref:System.Web.HttpWorkerRequest&gt; instance to add a <ph id=\"ph1\">`Content-Length`</ph> HTTP header to the response.","pos":[0,170],"source":"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response."},{"content":"The default implementation calls the overload that takes a <ph id=\"ph1\">`contentLength`</ph> parameter of type &lt;xref:System.Int32&gt;.","pos":[171,284],"source":" The default implementation calls the overload that takes a `contentLength` parameter of type <xref:System.Int32>."},{"content":"Use this overload to specify the response for message bodies greater than 2 GB.","pos":[291,370]}]},{"pos":[114549,114586],"content":"The length of the response, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the response, in bytes.","pos":[0,37]}]},{"pos":[115178,115222],"content":"Adds a standard HTTP header to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a standard HTTP header to the response.","pos":[0,44]}]},{"pos":[115394,115495],"content":"The header index. For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header index.","pos":[0,17]},{"content":"For example, <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[18,101],"source":" For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>."}]},{"pos":[115557,115581],"content":"The value of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the header.","pos":[0,24]}]},{"pos":[116198,116334],"content":"Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.","pos":[0,136]}]},{"pos":[116521,116552],"content":"The handle of the file to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the file to send.","pos":[0,31]}]},{"pos":[116614,116648],"content":"The starting position in the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position in the file.","pos":[0,34]}]},{"pos":[116710,116738],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[117352,117488],"content":"Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.","pos":[0,136]}]},{"pos":[117679,117708],"content":"The name of the file to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to send.","pos":[0,29]}]},{"pos":[117770,117804],"content":"The starting position in the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position in the file.","pos":[0,34]}]},{"pos":[117866,117894],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[118474,118543],"content":"Adds the specified number of bytes from a byte array to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified number of bytes from a byte array to the response.","pos":[0,69]}]},{"pos":[118714,118737],"content":"The byte array to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to send.","pos":[0,23]}]},{"pos":[118799,118855],"content":"The number of bytes to send, starting at the first byte.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send, starting at the first byte.","pos":[0,56]}]},{"pos":[119437,119511],"content":"Adds the specified number of bytes from a block of memory to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified number of bytes from a block of memory to the response.","pos":[0,74]}]},{"pos":[119681,119725],"content":"An unmanaged pointer to the block of memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unmanaged pointer to the block of memory.","pos":[0,44]}]},{"pos":[119787,119815],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[120337,120440],"content":"Specifies the HTTP status code and status description of the response, such as <ph id=\"ph1\">`SendStatus(200, \"Ok\")`</ph>.","needQuote":true,"needEscape":true,"source":"Specifies the HTTP status code and status description of the response, such as `SendStatus(200, \"Ok\")`."},{"pos":[120621,120644],"content":"The status code to send","needQuote":true,"needEscape":true,"nodes":[{"content":"The status code to send","pos":[0,23]}]},{"pos":[120718,120749],"content":"The status description to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status description to send.","pos":[0,31]}]},{"pos":[121339,121386],"content":"Adds a nonstandard HTTP header to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a nonstandard HTTP header to the response.","pos":[0,47]}]},{"pos":[121562,121593],"content":"The name of the header to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the header to send.","pos":[0,31]}]},{"pos":[121655,121679],"content":"The value of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the header.","pos":[0,24]}]},{"pos":[122707,122719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[122785,122797],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[123265,123345],"content":"Gets a value that indicates whether asynchronous flush operations are supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether asynchronous flush operations are supported.","pos":[0,80]}]},{"pos":[123475,123658],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if asynchronous flush operations are supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if asynchronous flush operations are supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[124115,124194],"content":"Gets a value that indicates whether asynchronous read operations are supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether asynchronous read operations are supported.","pos":[0,79]}]},{"pos":[124323,124505],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if asynchronous read operations are supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if asynchronous read operations are supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpWorkerRequest\n  id: HttpWorkerRequest\n  children:\n  - System.Web.HttpWorkerRequest.#ctor\n  - System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)\n  - System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Web.HttpWorkerRequest.CloseConnection\n  - System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)\n  - System.Web.HttpWorkerRequest.EndOfRequest\n  - System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)\n  - System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)\n  - System.Web.HttpWorkerRequest.GetAppPath\n  - System.Web.HttpWorkerRequest.GetAppPathTranslated\n  - System.Web.HttpWorkerRequest.GetAppPoolID\n  - System.Web.HttpWorkerRequest.GetBytesRead\n  - System.Web.HttpWorkerRequest.GetClientCertificate\n  - System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer\n  - System.Web.HttpWorkerRequest.GetClientCertificateEncoding\n  - System.Web.HttpWorkerRequest.GetClientCertificatePublicKey\n  - System.Web.HttpWorkerRequest.GetClientCertificateValidFrom\n  - System.Web.HttpWorkerRequest.GetClientCertificateValidUntil\n  - System.Web.HttpWorkerRequest.GetConnectionID\n  - System.Web.HttpWorkerRequest.GetFilePath\n  - System.Web.HttpWorkerRequest.GetFilePathTranslated\n  - System.Web.HttpWorkerRequest.GetHttpVerbName\n  - System.Web.HttpWorkerRequest.GetHttpVersion\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)\n  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)\n  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)\n  - System.Web.HttpWorkerRequest.GetLocalAddress\n  - System.Web.HttpWorkerRequest.GetLocalPort\n  - System.Web.HttpWorkerRequest.GetPathInfo\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength\n  - System.Web.HttpWorkerRequest.GetProtocol\n  - System.Web.HttpWorkerRequest.GetQueryString\n  - System.Web.HttpWorkerRequest.GetQueryStringRawBytes\n  - System.Web.HttpWorkerRequest.GetRawUrl\n  - System.Web.HttpWorkerRequest.GetRemoteAddress\n  - System.Web.HttpWorkerRequest.GetRemoteName\n  - System.Web.HttpWorkerRequest.GetRemotePort\n  - System.Web.HttpWorkerRequest.GetRequestReason\n  - System.Web.HttpWorkerRequest.GetServerName\n  - System.Web.HttpWorkerRequest.GetServerVariable(System.String)\n  - System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)\n  - System.Web.HttpWorkerRequest.GetTotalEntityBodyLength\n  - System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)\n  - System.Web.HttpWorkerRequest.GetUnknownRequestHeaders\n  - System.Web.HttpWorkerRequest.GetUriPath\n  - System.Web.HttpWorkerRequest.GetUrlContextID\n  - System.Web.HttpWorkerRequest.GetUserToken\n  - System.Web.HttpWorkerRequest.GetVirtualPathToken\n  - System.Web.HttpWorkerRequest.HasEntityBody\n  - System.Web.HttpWorkerRequest.HeaderAccept\n  - System.Web.HttpWorkerRequest.HeaderAcceptCharset\n  - System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n  - System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n  - System.Web.HttpWorkerRequest.HeaderAcceptRanges\n  - System.Web.HttpWorkerRequest.HeaderAge\n  - System.Web.HttpWorkerRequest.HeaderAllow\n  - System.Web.HttpWorkerRequest.HeaderAuthorization\n  - System.Web.HttpWorkerRequest.HeaderCacheControl\n  - System.Web.HttpWorkerRequest.HeaderConnection\n  - System.Web.HttpWorkerRequest.HeaderContentEncoding\n  - System.Web.HttpWorkerRequest.HeaderContentLanguage\n  - System.Web.HttpWorkerRequest.HeaderContentLength\n  - System.Web.HttpWorkerRequest.HeaderContentLocation\n  - System.Web.HttpWorkerRequest.HeaderContentMd5\n  - System.Web.HttpWorkerRequest.HeaderContentRange\n  - System.Web.HttpWorkerRequest.HeaderContentType\n  - System.Web.HttpWorkerRequest.HeaderCookie\n  - System.Web.HttpWorkerRequest.HeaderDate\n  - System.Web.HttpWorkerRequest.HeaderEtag\n  - System.Web.HttpWorkerRequest.HeaderExpect\n  - System.Web.HttpWorkerRequest.HeaderExpires\n  - System.Web.HttpWorkerRequest.HeaderFrom\n  - System.Web.HttpWorkerRequest.HeaderHost\n  - System.Web.HttpWorkerRequest.HeaderIfMatch\n  - System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n  - System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n  - System.Web.HttpWorkerRequest.HeaderIfRange\n  - System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n  - System.Web.HttpWorkerRequest.HeaderKeepAlive\n  - System.Web.HttpWorkerRequest.HeaderLastModified\n  - System.Web.HttpWorkerRequest.HeaderLocation\n  - System.Web.HttpWorkerRequest.HeaderMaxForwards\n  - System.Web.HttpWorkerRequest.HeaderPragma\n  - System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n  - System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n  - System.Web.HttpWorkerRequest.HeaderRange\n  - System.Web.HttpWorkerRequest.HeaderReferer\n  - System.Web.HttpWorkerRequest.HeaderRetryAfter\n  - System.Web.HttpWorkerRequest.HeaderServer\n  - System.Web.HttpWorkerRequest.HeaderSetCookie\n  - System.Web.HttpWorkerRequest.HeadersSent\n  - System.Web.HttpWorkerRequest.HeaderTe\n  - System.Web.HttpWorkerRequest.HeaderTrailer\n  - System.Web.HttpWorkerRequest.HeaderTransferEncoding\n  - System.Web.HttpWorkerRequest.HeaderUpgrade\n  - System.Web.HttpWorkerRequest.HeaderUserAgent\n  - System.Web.HttpWorkerRequest.HeaderVary\n  - System.Web.HttpWorkerRequest.HeaderVia\n  - System.Web.HttpWorkerRequest.HeaderWarning\n  - System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n  - System.Web.HttpWorkerRequest.IsClientConnected\n  - System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded\n  - System.Web.HttpWorkerRequest.IsSecure\n  - System.Web.HttpWorkerRequest.MachineConfigPath\n  - System.Web.HttpWorkerRequest.MachineInstallDirectory\n  - System.Web.HttpWorkerRequest.MapPath(System.String)\n  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)\n  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)\n  - System.Web.HttpWorkerRequest.ReasonCachePolicy\n  - System.Web.HttpWorkerRequest.ReasonCacheSecurity\n  - System.Web.HttpWorkerRequest.ReasonClientDisconnect\n  - System.Web.HttpWorkerRequest.ReasonDefault\n  - System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n  - System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n  - System.Web.HttpWorkerRequest.RequestHeaderMaximum\n  - System.Web.HttpWorkerRequest.RequestTraceIdentifier\n  - System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n  - System.Web.HttpWorkerRequest.RootWebConfigPath\n  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)\n  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)\n  - System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  - System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  - System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  - System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  - System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)\n  - System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)\n  - System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  - System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)\n  - System.Web.HttpWorkerRequest.SupportsAsyncFlush\n  - System.Web.HttpWorkerRequest.SupportsAsyncRead\n  langs:\n  - csharp\n  name: HttpWorkerRequest\n  nameWithType: HttpWorkerRequest\n  fullName: System.Web.HttpWorkerRequest\n  type: Class\n  summary: This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.\n  remarks: In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes. Some internal ASP.NET classes extend this class. If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method. In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>. In this case, the derived class should keep a reference to the current HttpWorkerRequest and delegate most of the methods to it.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public abstract class HttpWorkerRequest\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HttpWorkerRequest()\n  nameWithType: HttpWorkerRequest.HttpWorkerRequest()\n  fullName: System.Web.HttpWorkerRequest.HttpWorkerRequest()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpWorkerRequest\"></xref> class.\n  remarks: The HttpWorkerRequest constructor is the default constructor for the <xref:System.Web.HttpWorkerRequest> class.\n  syntax:\n    content: protected HttpWorkerRequest ();\n    parameters: []\n  overload: System.Web.HttpWorkerRequest.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)\n  id: BeginFlush(System.AsyncCallback,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: BeginFlush(AsyncCallback,Object)\n  nameWithType: HttpWorkerRequest.BeginFlush(AsyncCallback,Object)\n  fullName: System.Web.HttpWorkerRequest.BeginFlush(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sends the currently buffered response to the client.\n  syntax:\n    content: public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to call when a corresponding asynchronous operation completes.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous flush operation from other requests.\n    return:\n      type: System.IAsyncResult\n      description: The worker request buffers the status, headers, and response body until an asynchronous flush operation is initiated. If the underlying <xref href=\"System.Web.HttpWorkerRequest\"></xref> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously. Otherwise, the implementation performs a synchronous flush operation.\n  overload: System.Web.HttpWorkerRequest.BeginFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.Web.HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Begins an asynchronous read operation of the request entity body.\n  syntax:\n    content: public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to read the data into.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in the buffer at which to begin writing data.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to call when a corresponding asynchronous operation completes.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous read from other requests.\n    return:\n      type: System.IAsyncResult\n      description: Begins an asynchronous read operation of the request entity body.\n  overload: System.Web.HttpWorkerRequest.BeginRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.CloseConnection\n  id: CloseConnection\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: CloseConnection()\n  nameWithType: HttpWorkerRequest.CloseConnection()\n  fullName: System.Web.HttpWorkerRequest.CloseConnection()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Terminates the connection with the client.\n  syntax:\n    content: public virtual void CloseConnection ();\n    parameters: []\n  overload: System.Web.HttpWorkerRequest.CloseConnection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)\n  id: EndFlush(System.IAsyncResult)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: EndFlush(IAsyncResult)\n  nameWithType: HttpWorkerRequest.EndFlush(IAsyncResult)\n  fullName: System.Web.HttpWorkerRequest.EndFlush(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Waits for the pending asynchronous flush operation to complete.\n  syntax:\n    content: public virtual void EndFlush (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: A reference to the pending asynchronous request.\n  overload: System.Web.HttpWorkerRequest.EndFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.EndOfRequest\n  id: EndOfRequest\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: EndOfRequest()\n  nameWithType: HttpWorkerRequest.EndOfRequest()\n  fullName: System.Web.HttpWorkerRequest.EndOfRequest()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Used by the runtime to notify the <xref href=\"System.Web.HttpWorkerRequest\"></xref> that request processing for the current request is complete.\n  syntax:\n    content: public abstract void EndOfRequest ();\n    parameters: []\n  overload: System.Web.HttpWorkerRequest.EndOfRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: HttpWorkerRequest.EndRead(IAsyncResult)\n  fullName: System.Web.HttpWorkerRequest.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Waits for the pending asynchronous read operation to complete.\n  syntax:\n    content: public virtual int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: A reference to the pending asynchronous request.\n    return:\n      type: System.Int32\n      description: The number of bytes that have been read from the stream.\n  overload: System.Web.HttpWorkerRequest.EndRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)\n  id: FlushResponse(System.Boolean)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: FlushResponse(Boolean)\n  nameWithType: HttpWorkerRequest.FlushResponse(Boolean)\n  fullName: System.Web.HttpWorkerRequest.FlushResponse(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sends all pending response data to the client.\n  syntax:\n    content: public abstract void FlushResponse (bool finalFlush);\n    parameters:\n    - id: finalFlush\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the last time response data will be flushed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.FlushResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetAppPath\n  id: GetAppPath\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetAppPath()\n  nameWithType: HttpWorkerRequest.GetAppPath()\n  fullName: System.Web.HttpWorkerRequest.GetAppPath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the virtual path to the currently executing server application.\n  syntax:\n    content: public virtual string GetAppPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The virtual path of the current application.\n  overload: System.Web.HttpWorkerRequest.GetAppPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated\n  id: GetAppPathTranslated\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetAppPathTranslated()\n  nameWithType: HttpWorkerRequest.GetAppPathTranslated()\n  fullName: System.Web.HttpWorkerRequest.GetAppPathTranslated()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the physical path to the currently executing server application.\n  syntax:\n    content: public virtual string GetAppPathTranslated ();\n    parameters: []\n    return:\n      type: System.String\n      description: The physical path of the current application.\n  overload: System.Web.HttpWorkerRequest.GetAppPathTranslated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetAppPoolID\n  id: GetAppPoolID\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetAppPoolID()\n  nameWithType: HttpWorkerRequest.GetAppPoolID()\n  fullName: System.Web.HttpWorkerRequest.GetAppPoolID()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the application pool ID for the current URL.\n  syntax:\n    content: public virtual string GetAppPoolID ();\n    parameters: []\n    return:\n      type: System.String\n      description: Always returns null.\n  overload: System.Web.HttpWorkerRequest.GetAppPoolID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetBytesRead\n  id: GetBytesRead\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetBytesRead()\n  nameWithType: HttpWorkerRequest.GetBytesRead()\n  fullName: System.Web.HttpWorkerRequest.GetBytesRead()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of bytes read in from the client.\n  syntax:\n    content: public virtual long GetBytesRead ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: A <xref uid=\"langword_csharp_Long\" name=\"Long\" href=\"\"></xref> containing the number of bytes read.\n  overload: System.Web.HttpWorkerRequest.GetBytesRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificate\n  id: GetClientCertificate\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificate()\n  nameWithType: HttpWorkerRequest.GetClientCertificate()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificate()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client.\n  remarks: If no certificate is sent, the <xref:System.Web.HttpRequest.ClientCertificate%2A> collection returns empty.\n  syntax:\n    content: public virtual byte[] GetClientCertificate ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array containing the stream of the entire certificate content.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer\n  id: GetClientCertificateBinaryIssuer\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificateBinaryIssuer()\n  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the certificate issuer, in binary format.\n  syntax:\n    content: public virtual byte[] GetClientCertificateBinaryIssuer ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array containing the certificate issuer expressed in binary format.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding\n  id: GetClientCertificateEncoding\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificateEncoding()\n  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateEncoding()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the <xref:System.Text.Encoding> object in which the client certificate was encoded.\n  syntax:\n    content: public virtual int GetClientCertificateEncoding ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The certificate encoding, expressed as an integer.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificateEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey\n  id: GetClientCertificatePublicKey\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificatePublicKey()\n  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, gets a <xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"></xref> object associated with the client certificate.\n  syntax:\n    content: public virtual byte[] GetClientCertificatePublicKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A <xref uid=\"langword_csharp_PublicKey\" name=\"PublicKey\" href=\"\"></xref> object.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom\n  id: GetClientCertificateValidFrom\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificateValidFrom()\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, gets the date when the certificate becomes valid. The date varies with international settings.\n  syntax:\n    content: public virtual DateTime GetClientCertificateValidFrom ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> object representing when the certificate becomes valid.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil\n  id: GetClientCertificateValidUntil\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetClientCertificateValidUntil()\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the certificate expiration date.\n  syntax:\n    content: public virtual DateTime GetClientCertificateValidUntil ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> object representing the date that the certificate expires.\n  overload: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetConnectionID\n  id: GetConnectionID\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetConnectionID()\n  nameWithType: HttpWorkerRequest.GetConnectionID()\n  fullName: System.Web.HttpWorkerRequest.GetConnectionID()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the ID of the current connection.\n  syntax:\n    content: public virtual long GetConnectionID ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Always returns 0.\n  overload: System.Web.HttpWorkerRequest.GetConnectionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetFilePath\n  id: GetFilePath\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetFilePath()\n  nameWithType: HttpWorkerRequest.GetFilePath()\n  fullName: System.Web.HttpWorkerRequest.GetFilePath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the virtual path to the requested URI.\n  syntax:\n    content: public virtual string GetFilePath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The path to the requested URI.\n  overload: System.Web.HttpWorkerRequest.GetFilePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated\n  id: GetFilePathTranslated\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetFilePathTranslated()\n  nameWithType: HttpWorkerRequest.GetFilePathTranslated()\n  fullName: System.Web.HttpWorkerRequest.GetFilePathTranslated()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")'\n  syntax:\n    content: public virtual string GetFilePathTranslated ();\n    parameters: []\n    return:\n      type: System.String\n      description: The translated physical file path to the requested URI.\n  overload: System.Web.HttpWorkerRequest.GetFilePathTranslated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetHttpVerbName\n  id: GetHttpVerbName\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetHttpVerbName()\n  nameWithType: HttpWorkerRequest.GetHttpVerbName()\n  fullName: System.Web.HttpWorkerRequest.GetHttpVerbName()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the specified member of the request header.\n  syntax:\n    content: public abstract string GetHttpVerbName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The HTTP verb returned in the request header.\n  overload: System.Web.HttpWorkerRequest.GetHttpVerbName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetHttpVersion\n  id: GetHttpVersion\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetHttpVersion()\n  nameWithType: HttpWorkerRequest.GetHttpVersion()\n  fullName: System.Web.HttpWorkerRequest.GetHttpVersion()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides access to the HTTP version of the request (for example, \"HTTP/1.1\").\n  syntax:\n    content: public abstract string GetHttpVersion ();\n    parameters: []\n    return:\n      type: System.String\n      description: The HTTP version returned in the request header.\n  overload: System.Web.HttpWorkerRequest.GetHttpVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)\n  id: GetKnownRequestHeader(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetKnownRequestHeader(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeader(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeader(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the standard HTTP request header that corresponds to the specified index.\n  syntax:\n    content: public virtual string GetKnownRequestHeader (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the header. For example, the <xref href=\"System.Web.HttpWorkerRequest.HeaderAllow\"></xref> field.\n    return:\n      type: System.String\n      description: The HTTP request header.\n  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)\n  id: GetKnownRequestHeaderIndex(System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetKnownRequestHeaderIndex(String)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex(String)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the index number of the specified HTTP request header.\n  syntax:\n    content: public static int GetKnownRequestHeaderIndex (string header);\n    parameters:\n    - id: header\n      type: System.String\n      description: The name of the header.\n    return:\n      type: System.Int32\n      description: The index number of the HTTP request header specified in the <code>header</code> parameter.\n  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)\n  id: GetKnownRequestHeaderName(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetKnownRequestHeaderName(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the name of the specified HTTP request header.\n  syntax:\n    content: public static string GetKnownRequestHeaderName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index number of the header.\n    return:\n      type: System.String\n      description: The name of the HTTP request header specified in the <code>index</code> parameter.\n  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)\n  id: GetKnownResponseHeaderIndex(System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetKnownResponseHeaderIndex(String)\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex(String)\n  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the index number of the specified HTTP response header.\n  syntax:\n    content: public static int GetKnownResponseHeaderIndex (string header);\n    parameters:\n    - id: header\n      type: System.String\n      description: The name of the HTTP header.\n    return:\n      type: System.Int32\n      description: The index number of the HTTP response header specified in the <code>header</code> parameter.\n  overload: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)\n  id: GetKnownResponseHeaderName(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetKnownResponseHeaderName(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the name of the specified HTTP response header.\n  syntax:\n    content: public static string GetKnownResponseHeaderName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index number of the header.\n    return:\n      type: System.String\n      description: The name of the HTTP response header specified in the <code>index</code> parameter.\n  overload: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetLocalAddress\n  id: GetLocalAddress\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetLocalAddress()\n  nameWithType: HttpWorkerRequest.GetLocalAddress()\n  fullName: System.Web.HttpWorkerRequest.GetLocalAddress()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides access to the specified member of the request header.\n  syntax:\n    content: public abstract string GetLocalAddress ();\n    parameters: []\n    return:\n      type: System.String\n      description: The server IP address returned in the request header.\n  overload: System.Web.HttpWorkerRequest.GetLocalAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetLocalPort\n  id: GetLocalPort\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetLocalPort()\n  nameWithType: HttpWorkerRequest.GetLocalPort()\n  fullName: System.Web.HttpWorkerRequest.GetLocalPort()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides access to the specified member of the request header.\n  syntax:\n    content: public abstract int GetLocalPort ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The server port number returned in the request header.\n  overload: System.Web.HttpWorkerRequest.GetLocalPort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetPathInfo\n  id: GetPathInfo\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetPathInfo()\n  nameWithType: HttpWorkerRequest.GetPathInfo()\n  fullName: System.Web.HttpWorkerRequest.GetPathInfo()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the <xref uid=\"langword_csharp_GetPathInfo\" name=\"GetPathInfo\" href=\"\"></xref> value is /tail.\n  syntax:\n    content: public virtual string GetPathInfo ();\n    parameters: []\n    return:\n      type: System.String\n      description: Additional path information for a resource.\n  overload: System.Web.HttpWorkerRequest.GetPathInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody\n  id: GetPreloadedEntityBody\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetPreloadedEntityBody()\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody()\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the portion of the HTTP request body that has already been read.\n  syntax:\n    content: public virtual byte[] GetPreloadedEntityBody ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The portion of the HTTP request body that has been read.\n  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)\n  id: GetPreloadedEntityBody(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetPreloadedEntityBody(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset.\n  syntax:\n    content: public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The data to read.\n    - id: offset\n      type: System.Int32\n      description: The byte offset at which to begin reading.\n    return:\n      type: System.Int32\n      description: The portion of the HTTP request body that has been read.\n  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength\n  id: GetPreloadedEntityBodyLength\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetPreloadedEntityBodyLength()\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength()\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the length of the portion of the HTTP request body that has currently been read.\n  syntax:\n    content: public virtual int GetPreloadedEntityBodyLength ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer containing the length of the currently read HTTP request body.\n  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetProtocol\n  id: GetProtocol\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetProtocol()\n  nameWithType: HttpWorkerRequest.GetProtocol()\n  fullName: System.Web.HttpWorkerRequest.GetProtocol()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).\n  syntax:\n    content: public virtual string GetProtocol ();\n    parameters: []\n    return:\n      type: System.String\n      description: HTTPS if the <xref:System.Web.HttpWorkerRequest.IsSecure*> method is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, otherwise HTTP.\n  overload: System.Web.HttpWorkerRequest.GetProtocol*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetQueryString\n  id: GetQueryString\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetQueryString()\n  nameWithType: HttpWorkerRequest.GetQueryString()\n  fullName: System.Web.HttpWorkerRequest.GetQueryString()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the query string specified in the request URL.\n  syntax:\n    content: public abstract string GetQueryString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The request query string.\n  overload: System.Web.HttpWorkerRequest.GetQueryString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes\n  id: GetQueryStringRawBytes\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetQueryStringRawBytes()\n  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes()\n  fullName: System.Web.HttpWorkerRequest.GetQueryStringRawBytes()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the response query string as an array of bytes.\n  syntax:\n    content: public virtual byte[] GetQueryStringRawBytes ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of bytes containing the response.\n  overload: System.Web.HttpWorkerRequest.GetQueryStringRawBytes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetRawUrl\n  id: GetRawUrl\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetRawUrl()\n  nameWithType: HttpWorkerRequest.GetRawUrl()\n  fullName: System.Web.HttpWorkerRequest.GetRawUrl()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the URL path contained in the request header with the query string appended.\n  syntax:\n    content: public abstract string GetRawUrl ();\n    parameters: []\n    return:\n      type: System.String\n      description: The raw URL path of the request header.\n  overload: System.Web.HttpWorkerRequest.GetRawUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetRemoteAddress\n  id: GetRemoteAddress\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetRemoteAddress()\n  nameWithType: HttpWorkerRequest.GetRemoteAddress()\n  fullName: System.Web.HttpWorkerRequest.GetRemoteAddress()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides access to the specified member of the request header.\n  syntax:\n    content: public abstract string GetRemoteAddress ();\n    parameters: []\n    return:\n      type: System.String\n      description: The client's IP address.\n  overload: System.Web.HttpWorkerRequest.GetRemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetRemoteName\n  id: GetRemoteName\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetRemoteName()\n  nameWithType: HttpWorkerRequest.GetRemoteName()\n  fullName: System.Web.HttpWorkerRequest.GetRemoteName()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the name of the client computer.\n  syntax:\n    content: public virtual string GetRemoteName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the client computer.\n  overload: System.Web.HttpWorkerRequest.GetRemoteName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetRemotePort\n  id: GetRemotePort\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetRemotePort()\n  nameWithType: HttpWorkerRequest.GetRemotePort()\n  fullName: System.Web.HttpWorkerRequest.GetRemotePort()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides access to the specified member of the request header.\n  syntax:\n    content: public abstract int GetRemotePort ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The client's HTTP port number.\n  overload: System.Web.HttpWorkerRequest.GetRemotePort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetRequestReason\n  id: GetRequestReason\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetRequestReason()\n  nameWithType: HttpWorkerRequest.GetRequestReason()\n  fullName: System.Web.HttpWorkerRequest.GetRequestReason()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the reason for the request.\n  syntax:\n    content: public virtual int GetRequestReason ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Reason code. The default is <xref uid=\"langword_csharp_ReasonResponseCacheMiss\" name=\"ReasonResponseCacheMiss\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.GetRequestReason*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetServerName\n  id: GetServerName\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetServerName()\n  nameWithType: HttpWorkerRequest.GetServerName()\n  fullName: System.Web.HttpWorkerRequest.GetServerName()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the name of the local server.\n  syntax:\n    content: public virtual string GetServerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the local server.\n  overload: System.Web.HttpWorkerRequest.GetServerName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetServerVariable(System.String)\n  id: GetServerVariable(System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetServerVariable(String)\n  nameWithType: HttpWorkerRequest.GetServerVariable(String)\n  fullName: System.Web.HttpWorkerRequest.GetServerVariable(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a single server variable from a dictionary of server variables associated with the request.\n  syntax:\n    content: public virtual string GetServerVariable (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the requested server variable.\n    return:\n      type: System.String\n      description: The requested server variable.\n  overload: System.Web.HttpWorkerRequest.GetServerVariable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)\n  id: GetStatusDescription(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetStatusDescription(Int32)\n  nameWithType: HttpWorkerRequest.GetStatusDescription(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetStatusDescription(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a string that describes the name of the specified HTTP status code.\n  syntax:\n    content: public static string GetStatusDescription (int code);\n    parameters:\n    - id: code\n      type: System.Int32\n      description: The HTTP status code.\n    return:\n      type: System.String\n      description: The status description. For example, GetStatusDescription (404) returns \"Not Found\".\n  overload: System.Web.HttpWorkerRequest.GetStatusDescription*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength\n  id: GetTotalEntityBodyLength\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetTotalEntityBodyLength()\n  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength()\n  fullName: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the length of the entire HTTP request body.\n  syntax:\n    content: public virtual int GetTotalEntityBodyLength ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer containing the length of the entire HTTP request body.\n  overload: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)\n  id: GetUnknownRequestHeader(System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetUnknownRequestHeader(String)\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader(String)\n  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a nonstandard HTTP request header value.\n  syntax:\n    content: public virtual string GetUnknownRequestHeader (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The header name.\n    return:\n      type: System.String\n      description: The header value.\n  overload: System.Web.HttpWorkerRequest.GetUnknownRequestHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders\n  id: GetUnknownRequestHeaders\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetUnknownRequestHeaders()\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders()\n  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Get all nonstandard HTTP header name-value pairs.\n  syntax:\n    content: public virtual string[][] GetUnknownRequestHeaders ();\n    parameters: []\n    return:\n      type: System.String[][]\n      description: An array of header name-value pairs.\n  overload: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetUriPath\n  id: GetUriPath\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetUriPath()\n  nameWithType: HttpWorkerRequest.GetUriPath()\n  fullName: System.Web.HttpWorkerRequest.GetUriPath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the virtual path to the requested URI.\n  syntax:\n    content: public abstract string GetUriPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The path to the requested URI.\n  overload: System.Web.HttpWorkerRequest.GetUriPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetUrlContextID\n  id: GetUrlContextID\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetUrlContextID()\n  nameWithType: HttpWorkerRequest.GetUrlContextID()\n  fullName: System.Web.HttpWorkerRequest.GetUrlContextID()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the context ID of the current connection.\n  syntax:\n    content: public virtual long GetUrlContextID ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Always returns 0.\n  overload: System.Web.HttpWorkerRequest.GetUrlContextID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetUserToken\n  id: GetUserToken\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetUserToken()\n  nameWithType: HttpWorkerRequest.GetUserToken()\n  fullName: System.Web.HttpWorkerRequest.GetUserToken()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, returns the client's impersonation token.\n  syntax:\n    content: public virtual IntPtr GetUserToken ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: A value representing the client's impersonation token. The default is 0.\n  overload: System.Web.HttpWorkerRequest.GetUserToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken\n  id: GetVirtualPathToken\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: GetVirtualPathToken()\n  nameWithType: HttpWorkerRequest.GetVirtualPathToken()\n  fullName: System.Web.HttpWorkerRequest.GetVirtualPathToken()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the impersonation token for the request virtual path.\n  syntax:\n    content: public virtual IntPtr GetVirtualPathToken ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: An unmanaged memory pointer for the token for the request virtual path.\n  overload: System.Web.HttpWorkerRequest.GetVirtualPathToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HasEntityBody\n  id: HasEntityBody\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HasEntityBody()\n  nameWithType: HttpWorkerRequest.HasEntityBody()\n  fullName: System.Web.HttpWorkerRequest.HasEntityBody()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a value indicating whether the request contains body data.\n  syntax:\n    content: public bool HasEntityBody ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the request contains body data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.HasEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAccept\n  id: HeaderAccept\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAccept\n  nameWithType: HttpWorkerRequest.HeaderAccept\n  fullName: System.Web.HttpWorkerRequest.HeaderAccept\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Accept\" name=\"Accept\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAccept = 20;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptCharset\n  id: HeaderAcceptCharset\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAcceptCharset\n  nameWithType: HttpWorkerRequest.HeaderAcceptCharset\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptCharset\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Accept-Charset\" name=\"Accept-Charset\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAcceptCharset = 21;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n  id: HeaderAcceptEncoding\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAcceptEncoding\n  nameWithType: HttpWorkerRequest.HeaderAcceptEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Accept-Encoding\" name=\"Accept-Encoding\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAcceptEncoding = 22;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n  id: HeaderAcceptLanguage\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAcceptLanguage\n  nameWithType: HttpWorkerRequest.HeaderAcceptLanguage\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Accept-Language\" name=\"Accept-Language\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAcceptLanguage = 23;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptRanges\n  id: HeaderAcceptRanges\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAcceptRanges\n  nameWithType: HttpWorkerRequest.HeaderAcceptRanges\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptRanges\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Accept-Ranges\" name=\"Accept-Ranges\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAcceptRanges = 20;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAge\n  id: HeaderAge\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAge\n  nameWithType: HttpWorkerRequest.HeaderAge\n  fullName: System.Web.HttpWorkerRequest.HeaderAge\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Age\" name=\"Age\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAge = 21;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAllow\n  id: HeaderAllow\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAllow\n  nameWithType: HttpWorkerRequest.HeaderAllow\n  fullName: System.Web.HttpWorkerRequest.HeaderAllow\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAllow = 10;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderAuthorization\n  id: HeaderAuthorization\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderAuthorization\n  nameWithType: HttpWorkerRequest.HeaderAuthorization\n  fullName: System.Web.HttpWorkerRequest.HeaderAuthorization\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Authorization\" name=\"Authorization\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderAuthorization = 24;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderCacheControl\n  id: HeaderCacheControl\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderCacheControl\n  nameWithType: HttpWorkerRequest.HeaderCacheControl\n  fullName: System.Web.HttpWorkerRequest.HeaderCacheControl\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: The index that represents the HTTP <xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderCacheControl = 0;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderConnection\n  id: HeaderConnection\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderConnection\n  nameWithType: HttpWorkerRequest.HeaderConnection\n  fullName: System.Web.HttpWorkerRequest.HeaderConnection\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderConnection = 1;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentEncoding\n  id: HeaderContentEncoding\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentEncoding\n  nameWithType: HttpWorkerRequest.HeaderContentEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderContentEncoding\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Encoding\" name=\"Content-Encoding\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentEncoding = 13;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentLanguage\n  id: HeaderContentLanguage\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentLanguage\n  nameWithType: HttpWorkerRequest.HeaderContentLanguage\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLanguage\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Language\" name=\"Content-Language\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentLanguage = 14;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentLength\n  id: HeaderContentLength\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentLength\n  nameWithType: HttpWorkerRequest.HeaderContentLength\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLength\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentLength = 11;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentLocation\n  id: HeaderContentLocation\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentLocation\n  nameWithType: HttpWorkerRequest.HeaderContentLocation\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLocation\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Location\" name=\"Content-Location\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentLocation = 15;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentMd5\n  id: HeaderContentMd5\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentMd5\n  nameWithType: HttpWorkerRequest.HeaderContentMd5\n  fullName: System.Web.HttpWorkerRequest.HeaderContentMd5\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-MD5\" name=\"Content-MD5\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentMd5 = 16;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentRange\n  id: HeaderContentRange\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentRange\n  nameWithType: HttpWorkerRequest.HeaderContentRange\n  fullName: System.Web.HttpWorkerRequest.HeaderContentRange\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Range\" name=\"Content-Range\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentRange = 17;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderContentType\n  id: HeaderContentType\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderContentType\n  nameWithType: HttpWorkerRequest.HeaderContentType\n  fullName: System.Web.HttpWorkerRequest.HeaderContentType\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Content-Type\" name=\"Content-Type\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderContentType = 12;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderCookie\n  id: HeaderCookie\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderCookie\n  nameWithType: HttpWorkerRequest.HeaderCookie\n  fullName: System.Web.HttpWorkerRequest.HeaderCookie\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Cookie\" name=\"Cookie\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderCookie = 25;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderDate\n  id: HeaderDate\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderDate\n  nameWithType: HttpWorkerRequest.HeaderDate\n  fullName: System.Web.HttpWorkerRequest.HeaderDate\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Date\" name=\"Date\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderDate = 2;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderEtag\n  id: HeaderEtag\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderEtag\n  nameWithType: HttpWorkerRequest.HeaderEtag\n  fullName: System.Web.HttpWorkerRequest.HeaderEtag\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_ETag\" name=\"ETag\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderEtag = 22;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderExpect\n  id: HeaderExpect\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderExpect\n  nameWithType: HttpWorkerRequest.HeaderExpect\n  fullName: System.Web.HttpWorkerRequest.HeaderExpect\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Except\" name=\"Except\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderExpect = 26;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderExpires\n  id: HeaderExpires\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderExpires\n  nameWithType: HttpWorkerRequest.HeaderExpires\n  fullName: System.Web.HttpWorkerRequest.HeaderExpires\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Expires\" name=\"Expires\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderExpires = 18;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderFrom\n  id: HeaderFrom\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderFrom\n  nameWithType: HttpWorkerRequest.HeaderFrom\n  fullName: System.Web.HttpWorkerRequest.HeaderFrom\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_From\" name=\"From\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderFrom = 27;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderHost\n  id: HeaderHost\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderHost\n  nameWithType: HttpWorkerRequest.HeaderHost\n  fullName: System.Web.HttpWorkerRequest.HeaderHost\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Host\" name=\"Host\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderHost = 28;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderIfMatch\n  id: HeaderIfMatch\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderIfMatch\n  nameWithType: HttpWorkerRequest.HeaderIfMatch\n  fullName: System.Web.HttpWorkerRequest.HeaderIfMatch\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_If-Match\" name=\"If-Match\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderIfMatch = 29;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n  id: HeaderIfModifiedSince\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderIfModifiedSince\n  nameWithType: HttpWorkerRequest.HeaderIfModifiedSince\n  fullName: System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_If-Modified-Since\" name=\"If-Modified-Since\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderIfModifiedSince = 30;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n  id: HeaderIfNoneMatch\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderIfNoneMatch\n  nameWithType: HttpWorkerRequest.HeaderIfNoneMatch\n  fullName: System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_If-None-Match\" name=\"If-None-Match\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderIfNoneMatch = 31;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderIfRange\n  id: HeaderIfRange\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderIfRange\n  nameWithType: HttpWorkerRequest.HeaderIfRange\n  fullName: System.Web.HttpWorkerRequest.HeaderIfRange\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_If-Range\" name=\"If-Range\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderIfRange = 32;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n  id: HeaderIfUnmodifiedSince\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderIfUnmodifiedSince\n  nameWithType: HttpWorkerRequest.HeaderIfUnmodifiedSince\n  fullName: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_If-Unmodified-Since\" name=\"If-Unmodified-Since\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderIfUnmodifiedSince = 33;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderKeepAlive\n  id: HeaderKeepAlive\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderKeepAlive\n  nameWithType: HttpWorkerRequest.HeaderKeepAlive\n  fullName: System.Web.HttpWorkerRequest.HeaderKeepAlive\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Keep-Alive\" name=\"Keep-Alive\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderKeepAlive = 3;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderLastModified\n  id: HeaderLastModified\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderLastModified\n  nameWithType: HttpWorkerRequest.HeaderLastModified\n  fullName: System.Web.HttpWorkerRequest.HeaderLastModified\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Last-Modified\" name=\"Last-Modified\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderLastModified = 19;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderLocation\n  id: HeaderLocation\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderLocation\n  nameWithType: HttpWorkerRequest.HeaderLocation\n  fullName: System.Web.HttpWorkerRequest.HeaderLocation\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderLocation = 23;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderMaxForwards\n  id: HeaderMaxForwards\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderMaxForwards\n  nameWithType: HttpWorkerRequest.HeaderMaxForwards\n  fullName: System.Web.HttpWorkerRequest.HeaderMaxForwards\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Max-Forwards\" name=\"Max-Forwards\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderMaxForwards = 34;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderPragma\n  id: HeaderPragma\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderPragma\n  nameWithType: HttpWorkerRequest.HeaderPragma\n  fullName: System.Web.HttpWorkerRequest.HeaderPragma\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderPragma = 4;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n  id: HeaderProxyAuthenticate\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderProxyAuthenticate\n  nameWithType: HttpWorkerRequest.HeaderProxyAuthenticate\n  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Proxy-Authenticate\" name=\"Proxy-Authenticate\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderProxyAuthenticate = 24;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n  id: HeaderProxyAuthorization\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderProxyAuthorization\n  nameWithType: HttpWorkerRequest.HeaderProxyAuthorization\n  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Proxy-Authorization\" name=\"Proxy-Authorization\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderProxyAuthorization = 35;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderRange\n  id: HeaderRange\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderRange\n  nameWithType: HttpWorkerRequest.HeaderRange\n  fullName: System.Web.HttpWorkerRequest.HeaderRange\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Range\" name=\"Range\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderRange = 37;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderReferer\n  id: HeaderReferer\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderReferer\n  nameWithType: HttpWorkerRequest.HeaderReferer\n  fullName: System.Web.HttpWorkerRequest.HeaderReferer\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Referer\" name=\"Referer\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderReferer = 36;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderRetryAfter\n  id: HeaderRetryAfter\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderRetryAfter\n  nameWithType: HttpWorkerRequest.HeaderRetryAfter\n  fullName: System.Web.HttpWorkerRequest.HeaderRetryAfter\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Retry-After\" name=\"Retry-After\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderRetryAfter = 25;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderServer\n  id: HeaderServer\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderServer\n  nameWithType: HttpWorkerRequest.HeaderServer\n  fullName: System.Web.HttpWorkerRequest.HeaderServer\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderServer = 26;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderSetCookie\n  id: HeaderSetCookie\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderSetCookie\n  nameWithType: HttpWorkerRequest.HeaderSetCookie\n  fullName: System.Web.HttpWorkerRequest.HeaderSetCookie\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Set-Cookie\" name=\"Set-Cookie\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderSetCookie = 27;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeadersSent\n  id: HeadersSent\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeadersSent()\n  nameWithType: HttpWorkerRequest.HeadersSent()\n  fullName: System.Web.HttpWorkerRequest.HeadersSent()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a value indicating whether HTTP response headers have been sent to the client for the current request.\n  syntax:\n    content: public virtual bool HeadersSent ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if HTTP response headers have been sent to the client; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.HeadersSent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderTe\n  id: HeaderTe\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderTe\n  nameWithType: HttpWorkerRequest.HeaderTe\n  fullName: System.Web.HttpWorkerRequest.HeaderTe\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_TE\" name=\"TE\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderTe = 38;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderTrailer\n  id: HeaderTrailer\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderTrailer\n  nameWithType: HttpWorkerRequest.HeaderTrailer\n  fullName: System.Web.HttpWorkerRequest.HeaderTrailer\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Trailer\" name=\"Trailer\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderTrailer = 5;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderTransferEncoding\n  id: HeaderTransferEncoding\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderTransferEncoding\n  nameWithType: HttpWorkerRequest.HeaderTransferEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderTransferEncoding\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Transfer-Encoding\" name=\"Transfer-Encoding\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderTransferEncoding = 6;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderUpgrade\n  id: HeaderUpgrade\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderUpgrade\n  nameWithType: HttpWorkerRequest.HeaderUpgrade\n  fullName: System.Web.HttpWorkerRequest.HeaderUpgrade\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Upgrade\" name=\"Upgrade\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderUpgrade = 7;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderUserAgent\n  id: HeaderUserAgent\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderUserAgent\n  nameWithType: HttpWorkerRequest.HeaderUserAgent\n  fullName: System.Web.HttpWorkerRequest.HeaderUserAgent\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_User-Agent\" name=\"User-Agent\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderUserAgent = 39;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderVary\n  id: HeaderVary\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderVary\n  nameWithType: HttpWorkerRequest.HeaderVary\n  fullName: System.Web.HttpWorkerRequest.HeaderVary\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderVary = 28;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderVia\n  id: HeaderVia\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderVia\n  nameWithType: HttpWorkerRequest.HeaderVia\n  fullName: System.Web.HttpWorkerRequest.HeaderVia\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Via\" name=\"Via\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderVia = 8;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderWarning\n  id: HeaderWarning\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderWarning\n  nameWithType: HttpWorkerRequest.HeaderWarning\n  fullName: System.Web.HttpWorkerRequest.HeaderWarning\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Warning\" name=\"Warning\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderWarning = 9;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n  id: HeaderWwwAuthenticate\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: HeaderWwwAuthenticate\n  nameWithType: HttpWorkerRequest.HeaderWwwAuthenticate\n  fullName: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_WWW-Authenticate\" name=\"WWW-Authenticate\" href=\"\"></xref> HTTP header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int HeaderWwwAuthenticate = 29;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.IsClientConnected\n  id: IsClientConnected\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: IsClientConnected()\n  nameWithType: HttpWorkerRequest.IsClientConnected()\n  fullName: System.Web.HttpWorkerRequest.IsClientConnected()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a value indicating whether the client connection is still active.\n  syntax:\n    content: public virtual bool IsClientConnected ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client connection is still active; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.IsClientConnected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded\n  id: IsEntireEntityBodyIsPreloaded\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: IsEntireEntityBodyIsPreloaded()\n  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()\n  fullName: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a value indicating whether all request data is available and no further reads from the client are required.\n  syntax:\n    content: public virtual bool IsEntireEntityBodyIsPreloaded ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all request data is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.IsSecure\n  id: IsSecure\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: IsSecure()\n  nameWithType: HttpWorkerRequest.IsSecure()\n  fullName: System.Web.HttpWorkerRequest.IsSecure()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a value indicating whether the connection uses SSL.\n  syntax:\n    content: public virtual bool IsSecure ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the connection is an SSL connection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.IsSecure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.MachineConfigPath\n  id: MachineConfigPath\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: MachineConfigPath\n  nameWithType: HttpWorkerRequest.MachineConfigPath\n  fullName: System.Web.HttpWorkerRequest.MachineConfigPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the full physical path to the Machine.config file.\n  syntax:\n    content: public virtual string MachineConfigPath { get; }\n    return:\n      type: System.String\n      description: The physical path to the Machine.config file.\n  overload: System.Web.HttpWorkerRequest.MachineConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory\n  id: MachineInstallDirectory\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: MachineInstallDirectory\n  nameWithType: HttpWorkerRequest.MachineInstallDirectory\n  fullName: System.Web.HttpWorkerRequest.MachineInstallDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the physical path to the directory where the ASP.NET binaries are installed.\n  syntax:\n    content: public virtual string MachineInstallDirectory { get; }\n    return:\n      type: System.String\n      description: The physical directory to the ASP.NET binary files.\n  overload: System.Web.HttpWorkerRequest.MachineInstallDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.MapPath(System.String)\n  id: MapPath(System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: MapPath(String)\n  nameWithType: HttpWorkerRequest.MapPath(String)\n  fullName: System.Web.HttpWorkerRequest.MapPath(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the physical path corresponding to the specified virtual path.\n  syntax:\n    content: public virtual string MapPath (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path.\n    return:\n      type: System.String\n      description: The physical path that corresponds to the virtual path specified in the <code>virtualPath</code> parameter.\n  overload: System.Web.HttpWorkerRequest.MapPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)\n  id: ReadEntityBody(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReadEntityBody(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Reads request data from the client (when not preloaded).\n  remarks: \"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.  \\n  \\n Use this overload to specify the response for message bodies greater than 2 GB.\"\n  syntax:\n    content: public virtual int ReadEntityBody (byte[] buffer, int size);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The byte array to read data into.\n    - id: size\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    return:\n      type: System.Int32\n      description: The number of bytes read.\n  overload: System.Web.HttpWorkerRequest.ReadEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)\n  id: ReadEntityBody(System.Byte[],System.Int32,System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReadEntityBody(Byte[],Int32,Int32)\n  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)\n  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes.\n  remarks: \"An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.  \\n  \\n Use this overload to specify the response for message bodies greater than 2 GB.\"\n  syntax:\n    content: public virtual int ReadEntityBody (byte[] buffer, int offset, int size);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The byte array to read data into.\n    - id: offset\n      type: System.Int32\n      description: The byte offset at which to begin reading.\n    - id: size\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    return:\n      type: System.Int32\n      description: The number of bytes read.\n  overload: System.Web.HttpWorkerRequest.ReadEntityBody*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonCachePolicy\n  id: ReasonCachePolicy\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonCachePolicy\n  nameWithType: HttpWorkerRequest.ReasonCachePolicy\n  fullName: System.Web.HttpWorkerRequest.ReasonCachePolicy\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request.\n  syntax:\n    content: public const int ReasonCachePolicy = 2;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonCacheSecurity\n  id: ReasonCacheSecurity\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonCacheSecurity\n  nameWithType: HttpWorkerRequest.ReasonCacheSecurity\n  fullName: System.Web.HttpWorkerRequest.ReasonCacheSecurity\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request.\n  syntax:\n    content: public const int ReasonCacheSecurity = 3;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonClientDisconnect\n  id: ReasonClientDisconnect\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonClientDisconnect\n  nameWithType: HttpWorkerRequest.ReasonClientDisconnect\n  fullName: System.Web.HttpWorkerRequest.ReasonClientDisconnect\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request.\n  syntax:\n    content: public const int ReasonClientDisconnect = 4;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonDefault\n  id: ReasonDefault\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonDefault\n  nameWithType: HttpWorkerRequest.ReasonDefault\n  fullName: System.Web.HttpWorkerRequest.ReasonDefault\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request. The default value is <xref href=\"System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\"></xref>.\n  syntax:\n    content: public const int ReasonDefault = 0;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n  id: ReasonFileHandleCacheMiss\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonFileHandleCacheMiss\n  nameWithType: HttpWorkerRequest.ReasonFileHandleCacheMiss\n  fullName: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request.\n  syntax:\n    content: public const int ReasonFileHandleCacheMiss = 1;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n  id: ReasonResponseCacheMiss\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ReasonResponseCacheMiss\n  nameWithType: HttpWorkerRequest.ReasonResponseCacheMiss\n  fullName: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a reason for the request.\n  syntax:\n    content: public const int ReasonResponseCacheMiss = 0;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.RequestHeaderMaximum\n  id: RequestHeaderMaximum\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: RequestHeaderMaximum\n  nameWithType: HttpWorkerRequest.RequestHeaderMaximum\n  fullName: System.Web.HttpWorkerRequest.RequestHeaderMaximum\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"></xref> HTTP request header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int RequestHeaderMaximum = 40;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier\n  id: RequestTraceIdentifier\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: RequestTraceIdentifier\n  nameWithType: HttpWorkerRequest.RequestTraceIdentifier\n  fullName: System.Web.HttpWorkerRequest.RequestTraceIdentifier\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the corresponding Event Tracking for Windows trace ID for the current request.\n  remarks: ASP.NET requests execute with the same trace ID as the corresponding IIS request. This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system. The IDs provided by IIS differ based on the platform and service pack level.\n  syntax:\n    content: public virtual Guid RequestTraceIdentifier { get; }\n    return:\n      type: System.Guid\n      description: A trace ID for the current ASP.NET request.\n  overload: System.Web.HttpWorkerRequest.RequestTraceIdentifier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n  id: ResponseHeaderMaximum\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: ResponseHeaderMaximum\n  nameWithType: HttpWorkerRequest.ResponseHeaderMaximum\n  fullName: System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the index number for the <xref uid=\"langword_csharp_Maximum\" name=\"Maximum\" href=\"\"></xref> HTTP response header.\n  remarks: The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.\n  syntax:\n    content: public const int ResponseHeaderMaximum = 30;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.RootWebConfigPath\n  id: RootWebConfigPath\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: RootWebConfigPath\n  nameWithType: HttpWorkerRequest.RootWebConfigPath\n  fullName: System.Web.HttpWorkerRequest.RootWebConfigPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the full physical path to the root Web.config file.\n  remarks: If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file. An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>. The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the RootWebConfigPath property of <xref:System.Web.HttpWorkerRequest> class.\n  syntax:\n    content: public virtual string RootWebConfigPath { get; }\n    return:\n      type: System.String\n      description: The physical path to the root Web.config file.\n  overload: System.Web.HttpWorkerRequest.RootWebConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)\n  id: SendCalculatedContentLength(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendCalculatedContentLength(Int32)\n  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int32)\n  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header to the response for message bodies that are less than or equal to 2 GB.\n  remarks: \"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response.  \\n  \\n Use this overload to set the `Content-Length` header when the length of the response message body is less than or equal to 2 GB.\"\n  syntax:\n    content: public virtual void SendCalculatedContentLength (int contentLength);\n    parameters:\n    - id: contentLength\n      type: System.Int32\n      description: The length of the response, in bytes.\n  overload: System.Web.HttpWorkerRequest.SendCalculatedContentLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)\n  id: SendCalculatedContentLength(System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendCalculatedContentLength(Int64)\n  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int64)\n  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a <xref uid=\"langword_csharp_Content-Length\" name=\"Content-Length\" href=\"\"></xref> HTTP header to the response for message bodies that are greater than 2 GB.\n  remarks: \"When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response. The default implementation calls the overload that takes a `contentLength` parameter of type <xref:System.Int32>.  \\n  \\n Use this overload to specify the response for message bodies greater than 2 GB.\"\n  syntax:\n    content: public virtual void SendCalculatedContentLength (long contentLength);\n    parameters:\n    - id: contentLength\n      type: System.Int64\n      description: The length of the response, in bytes.\n  overload: System.Web.HttpWorkerRequest.SendCalculatedContentLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  id: SendKnownResponseHeader(System.Int32,System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendKnownResponseHeader(Int32,String)\n  nameWithType: HttpWorkerRequest.SendKnownResponseHeader(Int32,String)\n  fullName: System.Web.HttpWorkerRequest.SendKnownResponseHeader(Int32,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a standard HTTP header to the response.\n  syntax:\n    content: public abstract void SendKnownResponseHeader (int index, string value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The header index. For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>.\n    - id: value\n      type: System.String\n      description: The value of the header.\n  overload: System.Web.HttpWorkerRequest.SendKnownResponseHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  id: SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromFile(IntPtr,Int64,Int64)\n  nameWithType: HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.\n  syntax:\n    content: public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: The handle of the file to send.\n    - id: offset\n      type: System.Int64\n      description: The starting position in the file.\n    - id: length\n      type: System.Int64\n      description: The number of bytes to send.\n  overload: System.Web.HttpWorkerRequest.SendResponseFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  id: SendResponseFromFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromFile(String,Int64,Int64)\n  nameWithType: HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.\n  syntax:\n    content: public abstract void SendResponseFromFile (string filename, long offset, long length);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to send.\n    - id: offset\n      type: System.Int64\n      description: The starting position in the file.\n    - id: length\n      type: System.Int64\n      description: The number of bytes to send.\n  overload: System.Web.HttpWorkerRequest.SendResponseFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  id: SendResponseFromMemory(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromMemory(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified number of bytes from a byte array to the response.\n  syntax:\n    content: public abstract void SendResponseFromMemory (byte[] data, int length);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The byte array to send.\n    - id: length\n      type: System.Int32\n      description: The number of bytes to send, starting at the first byte.\n  overload: System.Web.HttpWorkerRequest.SendResponseFromMemory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)\n  id: SendResponseFromMemory(System.IntPtr,System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromMemory(IntPtr,Int32)\n  nameWithType: HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified number of bytes from a block of memory to the response.\n  syntax:\n    content: public virtual void SendResponseFromMemory (IntPtr data, int length);\n    parameters:\n    - id: data\n      type: System.IntPtr\n      description: An unmanaged pointer to the block of memory.\n    - id: length\n      type: System.Int32\n      description: The number of bytes to send.\n  overload: System.Web.HttpWorkerRequest.SendResponseFromMemory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)\n  id: SendStatus(System.Int32,System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendStatus(Int32,String)\n  nameWithType: HttpWorkerRequest.SendStatus(Int32,String)\n  fullName: System.Web.HttpWorkerRequest.SendStatus(Int32,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies the HTTP status code and status description of the response, such as `SendStatus(200, \"Ok\")`.\n  syntax:\n    content: public abstract void SendStatus (int statusCode, string statusDescription);\n    parameters:\n    - id: statusCode\n      type: System.Int32\n      description: The status code to send\n    - id: statusDescription\n      type: System.String\n      description: The status description to send.\n  overload: System.Web.HttpWorkerRequest.SendStatus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  id: SendUnknownResponseHeader(System.String,System.String)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SendUnknownResponseHeader(String,String)\n  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader(String,String)\n  fullName: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a nonstandard HTTP header to the response.\n  syntax:\n    content: public abstract void SendUnknownResponseHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the header to send.\n    - id: value\n      type: System.String\n      description: The value of the header.\n  overload: System.Web.HttpWorkerRequest.SendUnknownResponseHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)\n  id: SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n  nameWithType: HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n  fullName: System.Web.HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  syntax:\n    content: public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);\n    parameters:\n    - id: callback\n      type: System.Web.HttpWorkerRequest.EndOfSendNotification\n      description: To be added.\n    - id: extraData\n      type: System.Object\n      description: To be added.\n  overload: System.Web.HttpWorkerRequest.SetEndOfSendNotification*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush\n  id: SupportsAsyncFlush\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SupportsAsyncFlush\n  nameWithType: HttpWorkerRequest.SupportsAsyncFlush\n  fullName: System.Web.HttpWorkerRequest.SupportsAsyncFlush\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value that indicates whether asynchronous flush operations are supported.\n  syntax:\n    content: public virtual bool SupportsAsyncFlush { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if asynchronous flush operations are supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.SupportsAsyncFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead\n  id: SupportsAsyncRead\n  parent: System.Web.HttpWorkerRequest\n  langs:\n  - csharp\n  name: SupportsAsyncRead\n  nameWithType: HttpWorkerRequest.SupportsAsyncRead\n  fullName: System.Web.HttpWorkerRequest.SupportsAsyncRead\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value that indicates whether asynchronous read operations are supported.\n  syntax:\n    content: public virtual bool SupportsAsyncRead { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if asynchronous read operations are supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpWorkerRequest.SupportsAsyncRead*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.HttpWorkerRequest.#ctor\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HttpWorkerRequest()\n  nameWithType: HttpWorkerRequest.HttpWorkerRequest()\n  fullName: System.Web.HttpWorkerRequest.HttpWorkerRequest()\n- uid: System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: BeginFlush(AsyncCallback,Object)\n  nameWithType: HttpWorkerRequest.BeginFlush(AsyncCallback,Object)\n  fullName: System.Web.HttpWorkerRequest.BeginFlush(AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.Web.HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpWorkerRequest.CloseConnection\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: CloseConnection()\n  nameWithType: HttpWorkerRequest.CloseConnection()\n  fullName: System.Web.HttpWorkerRequest.CloseConnection()\n- uid: System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndFlush(IAsyncResult)\n  nameWithType: HttpWorkerRequest.EndFlush(IAsyncResult)\n  fullName: System.Web.HttpWorkerRequest.EndFlush(IAsyncResult)\n- uid: System.Web.HttpWorkerRequest.EndOfRequest\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndOfRequest()\n  nameWithType: HttpWorkerRequest.EndOfRequest()\n  fullName: System.Web.HttpWorkerRequest.EndOfRequest()\n- uid: System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: HttpWorkerRequest.EndRead(IAsyncResult)\n  fullName: System.Web.HttpWorkerRequest.EndRead(IAsyncResult)\n- uid: System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: FlushResponse(Boolean)\n  nameWithType: HttpWorkerRequest.FlushResponse(Boolean)\n  fullName: System.Web.HttpWorkerRequest.FlushResponse(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpWorkerRequest.GetAppPath\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPath()\n  nameWithType: HttpWorkerRequest.GetAppPath()\n  fullName: System.Web.HttpWorkerRequest.GetAppPath()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPathTranslated()\n  nameWithType: HttpWorkerRequest.GetAppPathTranslated()\n  fullName: System.Web.HttpWorkerRequest.GetAppPathTranslated()\n- uid: System.Web.HttpWorkerRequest.GetAppPoolID\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPoolID()\n  nameWithType: HttpWorkerRequest.GetAppPoolID()\n  fullName: System.Web.HttpWorkerRequest.GetAppPoolID()\n- uid: System.Web.HttpWorkerRequest.GetBytesRead\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetBytesRead()\n  nameWithType: HttpWorkerRequest.GetBytesRead()\n  fullName: System.Web.HttpWorkerRequest.GetBytesRead()\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.HttpWorkerRequest.GetClientCertificate\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificate()\n  nameWithType: HttpWorkerRequest.GetClientCertificate()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificate()\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateBinaryIssuer()\n  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer()\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateEncoding()\n  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateEncoding()\n- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificatePublicKey()\n  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey()\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateValidFrom()\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom()\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateValidUntil()\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil()\n  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil()\n- uid: System.Web.HttpWorkerRequest.GetConnectionID\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetConnectionID()\n  nameWithType: HttpWorkerRequest.GetConnectionID()\n  fullName: System.Web.HttpWorkerRequest.GetConnectionID()\n- uid: System.Web.HttpWorkerRequest.GetFilePath\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetFilePath()\n  nameWithType: HttpWorkerRequest.GetFilePath()\n  fullName: System.Web.HttpWorkerRequest.GetFilePath()\n- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetFilePathTranslated()\n  nameWithType: HttpWorkerRequest.GetFilePathTranslated()\n  fullName: System.Web.HttpWorkerRequest.GetFilePathTranslated()\n- uid: System.Web.HttpWorkerRequest.GetHttpVerbName\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetHttpVerbName()\n  nameWithType: HttpWorkerRequest.GetHttpVerbName()\n  fullName: System.Web.HttpWorkerRequest.GetHttpVerbName()\n- uid: System.Web.HttpWorkerRequest.GetHttpVersion\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetHttpVersion()\n  nameWithType: HttpWorkerRequest.GetHttpVersion()\n  fullName: System.Web.HttpWorkerRequest.GetHttpVersion()\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeader(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeader(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeader(Int32)\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeaderIndex(String)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex(String)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(String)\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeaderName(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(Int32)\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownResponseHeaderIndex(String)\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex(String)\n  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(String)\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownResponseHeaderName(Int32)\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(Int32)\n- uid: System.Web.HttpWorkerRequest.GetLocalAddress\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetLocalAddress()\n  nameWithType: HttpWorkerRequest.GetLocalAddress()\n  fullName: System.Web.HttpWorkerRequest.GetLocalAddress()\n- uid: System.Web.HttpWorkerRequest.GetLocalPort\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetLocalPort()\n  nameWithType: HttpWorkerRequest.GetLocalPort()\n  fullName: System.Web.HttpWorkerRequest.GetLocalPort()\n- uid: System.Web.HttpWorkerRequest.GetPathInfo\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPathInfo()\n  nameWithType: HttpWorkerRequest.GetPathInfo()\n  fullName: System.Web.HttpWorkerRequest.GetPathInfo()\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPreloadedEntityBody()\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody()\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody()\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPreloadedEntityBody(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPreloadedEntityBodyLength()\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength()\n  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength()\n- uid: System.Web.HttpWorkerRequest.GetProtocol\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetProtocol()\n  nameWithType: HttpWorkerRequest.GetProtocol()\n  fullName: System.Web.HttpWorkerRequest.GetProtocol()\n- uid: System.Web.HttpWorkerRequest.GetQueryString\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetQueryString()\n  nameWithType: HttpWorkerRequest.GetQueryString()\n  fullName: System.Web.HttpWorkerRequest.GetQueryString()\n- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetQueryStringRawBytes()\n  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes()\n  fullName: System.Web.HttpWorkerRequest.GetQueryStringRawBytes()\n- uid: System.Web.HttpWorkerRequest.GetRawUrl\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRawUrl()\n  nameWithType: HttpWorkerRequest.GetRawUrl()\n  fullName: System.Web.HttpWorkerRequest.GetRawUrl()\n- uid: System.Web.HttpWorkerRequest.GetRemoteAddress\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemoteAddress()\n  nameWithType: HttpWorkerRequest.GetRemoteAddress()\n  fullName: System.Web.HttpWorkerRequest.GetRemoteAddress()\n- uid: System.Web.HttpWorkerRequest.GetRemoteName\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemoteName()\n  nameWithType: HttpWorkerRequest.GetRemoteName()\n  fullName: System.Web.HttpWorkerRequest.GetRemoteName()\n- uid: System.Web.HttpWorkerRequest.GetRemotePort\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemotePort()\n  nameWithType: HttpWorkerRequest.GetRemotePort()\n  fullName: System.Web.HttpWorkerRequest.GetRemotePort()\n- uid: System.Web.HttpWorkerRequest.GetRequestReason\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRequestReason()\n  nameWithType: HttpWorkerRequest.GetRequestReason()\n  fullName: System.Web.HttpWorkerRequest.GetRequestReason()\n- uid: System.Web.HttpWorkerRequest.GetServerName\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetServerName()\n  nameWithType: HttpWorkerRequest.GetServerName()\n  fullName: System.Web.HttpWorkerRequest.GetServerName()\n- uid: System.Web.HttpWorkerRequest.GetServerVariable(System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetServerVariable(String)\n  nameWithType: HttpWorkerRequest.GetServerVariable(String)\n  fullName: System.Web.HttpWorkerRequest.GetServerVariable(String)\n- uid: System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetStatusDescription(Int32)\n  nameWithType: HttpWorkerRequest.GetStatusDescription(Int32)\n  fullName: System.Web.HttpWorkerRequest.GetStatusDescription(Int32)\n- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetTotalEntityBodyLength()\n  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength()\n  fullName: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength()\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUnknownRequestHeader(String)\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader(String)\n  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(String)\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUnknownRequestHeaders()\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders()\n  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders()\n- uid: System.String[][]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[][]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[][]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpWorkerRequest.GetUriPath\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUriPath()\n  nameWithType: HttpWorkerRequest.GetUriPath()\n  fullName: System.Web.HttpWorkerRequest.GetUriPath()\n- uid: System.Web.HttpWorkerRequest.GetUrlContextID\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUrlContextID()\n  nameWithType: HttpWorkerRequest.GetUrlContextID()\n  fullName: System.Web.HttpWorkerRequest.GetUrlContextID()\n- uid: System.Web.HttpWorkerRequest.GetUserToken\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUserToken()\n  nameWithType: HttpWorkerRequest.GetUserToken()\n  fullName: System.Web.HttpWorkerRequest.GetUserToken()\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetVirtualPathToken()\n  nameWithType: HttpWorkerRequest.GetVirtualPathToken()\n  fullName: System.Web.HttpWorkerRequest.GetVirtualPathToken()\n- uid: System.Web.HttpWorkerRequest.HasEntityBody\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HasEntityBody()\n  nameWithType: HttpWorkerRequest.HasEntityBody()\n  fullName: System.Web.HttpWorkerRequest.HasEntityBody()\n- uid: System.Web.HttpWorkerRequest.HeaderAccept\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAccept\n  nameWithType: HttpWorkerRequest.HeaderAccept\n  fullName: System.Web.HttpWorkerRequest.HeaderAccept\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptCharset\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAcceptCharset\n  nameWithType: HttpWorkerRequest.HeaderAcceptCharset\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptCharset\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAcceptEncoding\n  nameWithType: HttpWorkerRequest.HeaderAcceptEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAcceptLanguage\n  nameWithType: HttpWorkerRequest.HeaderAcceptLanguage\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n- uid: System.Web.HttpWorkerRequest.HeaderAcceptRanges\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAcceptRanges\n  nameWithType: HttpWorkerRequest.HeaderAcceptRanges\n  fullName: System.Web.HttpWorkerRequest.HeaderAcceptRanges\n- uid: System.Web.HttpWorkerRequest.HeaderAge\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAge\n  nameWithType: HttpWorkerRequest.HeaderAge\n  fullName: System.Web.HttpWorkerRequest.HeaderAge\n- uid: System.Web.HttpWorkerRequest.HeaderAllow\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAllow\n  nameWithType: HttpWorkerRequest.HeaderAllow\n  fullName: System.Web.HttpWorkerRequest.HeaderAllow\n- uid: System.Web.HttpWorkerRequest.HeaderAuthorization\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderAuthorization\n  nameWithType: HttpWorkerRequest.HeaderAuthorization\n  fullName: System.Web.HttpWorkerRequest.HeaderAuthorization\n- uid: System.Web.HttpWorkerRequest.HeaderCacheControl\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderCacheControl\n  nameWithType: HttpWorkerRequest.HeaderCacheControl\n  fullName: System.Web.HttpWorkerRequest.HeaderCacheControl\n- uid: System.Web.HttpWorkerRequest.HeaderConnection\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderConnection\n  nameWithType: HttpWorkerRequest.HeaderConnection\n  fullName: System.Web.HttpWorkerRequest.HeaderConnection\n- uid: System.Web.HttpWorkerRequest.HeaderContentEncoding\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentEncoding\n  nameWithType: HttpWorkerRequest.HeaderContentEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderContentEncoding\n- uid: System.Web.HttpWorkerRequest.HeaderContentLanguage\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentLanguage\n  nameWithType: HttpWorkerRequest.HeaderContentLanguage\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLanguage\n- uid: System.Web.HttpWorkerRequest.HeaderContentLength\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentLength\n  nameWithType: HttpWorkerRequest.HeaderContentLength\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLength\n- uid: System.Web.HttpWorkerRequest.HeaderContentLocation\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentLocation\n  nameWithType: HttpWorkerRequest.HeaderContentLocation\n  fullName: System.Web.HttpWorkerRequest.HeaderContentLocation\n- uid: System.Web.HttpWorkerRequest.HeaderContentMd5\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentMd5\n  nameWithType: HttpWorkerRequest.HeaderContentMd5\n  fullName: System.Web.HttpWorkerRequest.HeaderContentMd5\n- uid: System.Web.HttpWorkerRequest.HeaderContentRange\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentRange\n  nameWithType: HttpWorkerRequest.HeaderContentRange\n  fullName: System.Web.HttpWorkerRequest.HeaderContentRange\n- uid: System.Web.HttpWorkerRequest.HeaderContentType\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderContentType\n  nameWithType: HttpWorkerRequest.HeaderContentType\n  fullName: System.Web.HttpWorkerRequest.HeaderContentType\n- uid: System.Web.HttpWorkerRequest.HeaderCookie\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderCookie\n  nameWithType: HttpWorkerRequest.HeaderCookie\n  fullName: System.Web.HttpWorkerRequest.HeaderCookie\n- uid: System.Web.HttpWorkerRequest.HeaderDate\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderDate\n  nameWithType: HttpWorkerRequest.HeaderDate\n  fullName: System.Web.HttpWorkerRequest.HeaderDate\n- uid: System.Web.HttpWorkerRequest.HeaderEtag\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderEtag\n  nameWithType: HttpWorkerRequest.HeaderEtag\n  fullName: System.Web.HttpWorkerRequest.HeaderEtag\n- uid: System.Web.HttpWorkerRequest.HeaderExpect\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderExpect\n  nameWithType: HttpWorkerRequest.HeaderExpect\n  fullName: System.Web.HttpWorkerRequest.HeaderExpect\n- uid: System.Web.HttpWorkerRequest.HeaderExpires\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderExpires\n  nameWithType: HttpWorkerRequest.HeaderExpires\n  fullName: System.Web.HttpWorkerRequest.HeaderExpires\n- uid: System.Web.HttpWorkerRequest.HeaderFrom\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderFrom\n  nameWithType: HttpWorkerRequest.HeaderFrom\n  fullName: System.Web.HttpWorkerRequest.HeaderFrom\n- uid: System.Web.HttpWorkerRequest.HeaderHost\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderHost\n  nameWithType: HttpWorkerRequest.HeaderHost\n  fullName: System.Web.HttpWorkerRequest.HeaderHost\n- uid: System.Web.HttpWorkerRequest.HeaderIfMatch\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderIfMatch\n  nameWithType: HttpWorkerRequest.HeaderIfMatch\n  fullName: System.Web.HttpWorkerRequest.HeaderIfMatch\n- uid: System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderIfModifiedSince\n  nameWithType: HttpWorkerRequest.HeaderIfModifiedSince\n  fullName: System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n- uid: System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderIfNoneMatch\n  nameWithType: HttpWorkerRequest.HeaderIfNoneMatch\n  fullName: System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n- uid: System.Web.HttpWorkerRequest.HeaderIfRange\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderIfRange\n  nameWithType: HttpWorkerRequest.HeaderIfRange\n  fullName: System.Web.HttpWorkerRequest.HeaderIfRange\n- uid: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderIfUnmodifiedSince\n  nameWithType: HttpWorkerRequest.HeaderIfUnmodifiedSince\n  fullName: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n- uid: System.Web.HttpWorkerRequest.HeaderKeepAlive\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderKeepAlive\n  nameWithType: HttpWorkerRequest.HeaderKeepAlive\n  fullName: System.Web.HttpWorkerRequest.HeaderKeepAlive\n- uid: System.Web.HttpWorkerRequest.HeaderLastModified\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderLastModified\n  nameWithType: HttpWorkerRequest.HeaderLastModified\n  fullName: System.Web.HttpWorkerRequest.HeaderLastModified\n- uid: System.Web.HttpWorkerRequest.HeaderLocation\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderLocation\n  nameWithType: HttpWorkerRequest.HeaderLocation\n  fullName: System.Web.HttpWorkerRequest.HeaderLocation\n- uid: System.Web.HttpWorkerRequest.HeaderMaxForwards\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderMaxForwards\n  nameWithType: HttpWorkerRequest.HeaderMaxForwards\n  fullName: System.Web.HttpWorkerRequest.HeaderMaxForwards\n- uid: System.Web.HttpWorkerRequest.HeaderPragma\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderPragma\n  nameWithType: HttpWorkerRequest.HeaderPragma\n  fullName: System.Web.HttpWorkerRequest.HeaderPragma\n- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderProxyAuthenticate\n  nameWithType: HttpWorkerRequest.HeaderProxyAuthenticate\n  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderProxyAuthorization\n  nameWithType: HttpWorkerRequest.HeaderProxyAuthorization\n  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n- uid: System.Web.HttpWorkerRequest.HeaderRange\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderRange\n  nameWithType: HttpWorkerRequest.HeaderRange\n  fullName: System.Web.HttpWorkerRequest.HeaderRange\n- uid: System.Web.HttpWorkerRequest.HeaderReferer\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderReferer\n  nameWithType: HttpWorkerRequest.HeaderReferer\n  fullName: System.Web.HttpWorkerRequest.HeaderReferer\n- uid: System.Web.HttpWorkerRequest.HeaderRetryAfter\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderRetryAfter\n  nameWithType: HttpWorkerRequest.HeaderRetryAfter\n  fullName: System.Web.HttpWorkerRequest.HeaderRetryAfter\n- uid: System.Web.HttpWorkerRequest.HeaderServer\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderServer\n  nameWithType: HttpWorkerRequest.HeaderServer\n  fullName: System.Web.HttpWorkerRequest.HeaderServer\n- uid: System.Web.HttpWorkerRequest.HeaderSetCookie\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderSetCookie\n  nameWithType: HttpWorkerRequest.HeaderSetCookie\n  fullName: System.Web.HttpWorkerRequest.HeaderSetCookie\n- uid: System.Web.HttpWorkerRequest.HeadersSent\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeadersSent()\n  nameWithType: HttpWorkerRequest.HeadersSent()\n  fullName: System.Web.HttpWorkerRequest.HeadersSent()\n- uid: System.Web.HttpWorkerRequest.HeaderTe\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderTe\n  nameWithType: HttpWorkerRequest.HeaderTe\n  fullName: System.Web.HttpWorkerRequest.HeaderTe\n- uid: System.Web.HttpWorkerRequest.HeaderTrailer\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderTrailer\n  nameWithType: HttpWorkerRequest.HeaderTrailer\n  fullName: System.Web.HttpWorkerRequest.HeaderTrailer\n- uid: System.Web.HttpWorkerRequest.HeaderTransferEncoding\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderTransferEncoding\n  nameWithType: HttpWorkerRequest.HeaderTransferEncoding\n  fullName: System.Web.HttpWorkerRequest.HeaderTransferEncoding\n- uid: System.Web.HttpWorkerRequest.HeaderUpgrade\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderUpgrade\n  nameWithType: HttpWorkerRequest.HeaderUpgrade\n  fullName: System.Web.HttpWorkerRequest.HeaderUpgrade\n- uid: System.Web.HttpWorkerRequest.HeaderUserAgent\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderUserAgent\n  nameWithType: HttpWorkerRequest.HeaderUserAgent\n  fullName: System.Web.HttpWorkerRequest.HeaderUserAgent\n- uid: System.Web.HttpWorkerRequest.HeaderVary\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderVary\n  nameWithType: HttpWorkerRequest.HeaderVary\n  fullName: System.Web.HttpWorkerRequest.HeaderVary\n- uid: System.Web.HttpWorkerRequest.HeaderVia\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderVia\n  nameWithType: HttpWorkerRequest.HeaderVia\n  fullName: System.Web.HttpWorkerRequest.HeaderVia\n- uid: System.Web.HttpWorkerRequest.HeaderWarning\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderWarning\n  nameWithType: HttpWorkerRequest.HeaderWarning\n  fullName: System.Web.HttpWorkerRequest.HeaderWarning\n- uid: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeaderWwwAuthenticate\n  nameWithType: HttpWorkerRequest.HeaderWwwAuthenticate\n  fullName: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n- uid: System.Web.HttpWorkerRequest.IsClientConnected\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsClientConnected()\n  nameWithType: HttpWorkerRequest.IsClientConnected()\n  fullName: System.Web.HttpWorkerRequest.IsClientConnected()\n- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsEntireEntityBodyIsPreloaded()\n  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()\n  fullName: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()\n- uid: System.Web.HttpWorkerRequest.IsSecure\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsSecure()\n  nameWithType: HttpWorkerRequest.IsSecure()\n  fullName: System.Web.HttpWorkerRequest.IsSecure()\n- uid: System.Web.HttpWorkerRequest.MachineConfigPath\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MachineConfigPath\n  nameWithType: HttpWorkerRequest.MachineConfigPath\n  fullName: System.Web.HttpWorkerRequest.MachineConfigPath\n- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MachineInstallDirectory\n  nameWithType: HttpWorkerRequest.MachineInstallDirectory\n  fullName: System.Web.HttpWorkerRequest.MachineInstallDirectory\n- uid: System.Web.HttpWorkerRequest.MapPath(System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MapPath(String)\n  nameWithType: HttpWorkerRequest.MapPath(String)\n  fullName: System.Web.HttpWorkerRequest.MapPath(String)\n- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReadEntityBody(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32)\n- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReadEntityBody(Byte[],Int32,Int32)\n  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)\n  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)\n- uid: System.Web.HttpWorkerRequest.ReasonCachePolicy\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonCachePolicy\n  nameWithType: HttpWorkerRequest.ReasonCachePolicy\n  fullName: System.Web.HttpWorkerRequest.ReasonCachePolicy\n- uid: System.Web.HttpWorkerRequest.ReasonCacheSecurity\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonCacheSecurity\n  nameWithType: HttpWorkerRequest.ReasonCacheSecurity\n  fullName: System.Web.HttpWorkerRequest.ReasonCacheSecurity\n- uid: System.Web.HttpWorkerRequest.ReasonClientDisconnect\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonClientDisconnect\n  nameWithType: HttpWorkerRequest.ReasonClientDisconnect\n  fullName: System.Web.HttpWorkerRequest.ReasonClientDisconnect\n- uid: System.Web.HttpWorkerRequest.ReasonDefault\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonDefault\n  nameWithType: HttpWorkerRequest.ReasonDefault\n  fullName: System.Web.HttpWorkerRequest.ReasonDefault\n- uid: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonFileHandleCacheMiss\n  nameWithType: HttpWorkerRequest.ReasonFileHandleCacheMiss\n  fullName: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n- uid: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReasonResponseCacheMiss\n  nameWithType: HttpWorkerRequest.ReasonResponseCacheMiss\n  fullName: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n- uid: System.Web.HttpWorkerRequest.RequestHeaderMaximum\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: RequestHeaderMaximum\n  nameWithType: HttpWorkerRequest.RequestHeaderMaximum\n  fullName: System.Web.HttpWorkerRequest.RequestHeaderMaximum\n- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: RequestTraceIdentifier\n  nameWithType: HttpWorkerRequest.RequestTraceIdentifier\n  fullName: System.Web.HttpWorkerRequest.RequestTraceIdentifier\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ResponseHeaderMaximum\n  nameWithType: HttpWorkerRequest.ResponseHeaderMaximum\n  fullName: System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n- uid: System.Web.HttpWorkerRequest.RootWebConfigPath\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: RootWebConfigPath\n  nameWithType: HttpWorkerRequest.RootWebConfigPath\n  fullName: System.Web.HttpWorkerRequest.RootWebConfigPath\n- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendCalculatedContentLength(Int32)\n  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int32)\n  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int32)\n- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendCalculatedContentLength(Int64)\n  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int64)\n  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int64)\n- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendKnownResponseHeader(Int32,String)\n  nameWithType: HttpWorkerRequest.SendKnownResponseHeader(Int32,String)\n  fullName: System.Web.HttpWorkerRequest.SendKnownResponseHeader(Int32,String)\n- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile(IntPtr,Int64,Int64)\n  nameWithType: HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile(String,Int64,Int64)\n  nameWithType: HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromMemory(Byte[],Int32)\n  nameWithType: HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromMemory(IntPtr,Int32)\n  nameWithType: HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)\n  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)\n- uid: System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendStatus(Int32,String)\n  nameWithType: HttpWorkerRequest.SendStatus(Int32,String)\n  fullName: System.Web.HttpWorkerRequest.SendStatus(Int32,String)\n- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendUnknownResponseHeader(String,String)\n  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader(String,String)\n  fullName: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(String,String)\n- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n  nameWithType: HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n  fullName: System.Web.HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)\n- uid: System.Web.HttpWorkerRequest.EndOfSendNotification\n  parent: System.Web\n  isExternal: false\n  name: HttpWorkerRequest+EndOfSendNotification\n  nameWithType: HttpWorkerRequest+EndOfSendNotification\n  fullName: System.Web.HttpWorkerRequest+EndOfSendNotification\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SupportsAsyncFlush\n  nameWithType: HttpWorkerRequest.SupportsAsyncFlush\n  fullName: System.Web.HttpWorkerRequest.SupportsAsyncFlush\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SupportsAsyncRead\n  nameWithType: HttpWorkerRequest.SupportsAsyncRead\n  fullName: System.Web.HttpWorkerRequest.SupportsAsyncRead\n- uid: System.Web.HttpWorkerRequest.#ctor*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HttpWorkerRequest\n  nameWithType: HttpWorkerRequest.HttpWorkerRequest\n- uid: System.Web.HttpWorkerRequest.BeginFlush*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: BeginFlush\n  nameWithType: HttpWorkerRequest.BeginFlush\n- uid: System.Web.HttpWorkerRequest.BeginRead*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: BeginRead\n  nameWithType: HttpWorkerRequest.BeginRead\n- uid: System.Web.HttpWorkerRequest.CloseConnection*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: CloseConnection\n  nameWithType: HttpWorkerRequest.CloseConnection\n- uid: System.Web.HttpWorkerRequest.EndFlush*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndFlush\n  nameWithType: HttpWorkerRequest.EndFlush\n- uid: System.Web.HttpWorkerRequest.EndOfRequest*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndOfRequest\n  nameWithType: HttpWorkerRequest.EndOfRequest\n- uid: System.Web.HttpWorkerRequest.EndRead*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: EndRead\n  nameWithType: HttpWorkerRequest.EndRead\n- uid: System.Web.HttpWorkerRequest.FlushResponse*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: FlushResponse\n  nameWithType: HttpWorkerRequest.FlushResponse\n- uid: System.Web.HttpWorkerRequest.GetAppPath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPath\n  nameWithType: HttpWorkerRequest.GetAppPath\n- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPathTranslated\n  nameWithType: HttpWorkerRequest.GetAppPathTranslated\n- uid: System.Web.HttpWorkerRequest.GetAppPoolID*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetAppPoolID\n  nameWithType: HttpWorkerRequest.GetAppPoolID\n- uid: System.Web.HttpWorkerRequest.GetBytesRead*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetBytesRead\n  nameWithType: HttpWorkerRequest.GetBytesRead\n- uid: System.Web.HttpWorkerRequest.GetClientCertificate*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificate\n  nameWithType: HttpWorkerRequest.GetClientCertificate\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateBinaryIssuer\n  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateEncoding\n  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding\n- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificatePublicKey\n  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateValidFrom\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom\n- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetClientCertificateValidUntil\n  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil\n- uid: System.Web.HttpWorkerRequest.GetConnectionID*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetConnectionID\n  nameWithType: HttpWorkerRequest.GetConnectionID\n- uid: System.Web.HttpWorkerRequest.GetFilePath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetFilePath\n  nameWithType: HttpWorkerRequest.GetFilePath\n- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetFilePathTranslated\n  nameWithType: HttpWorkerRequest.GetFilePathTranslated\n- uid: System.Web.HttpWorkerRequest.GetHttpVerbName*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetHttpVerbName\n  nameWithType: HttpWorkerRequest.GetHttpVerbName\n- uid: System.Web.HttpWorkerRequest.GetHttpVersion*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetHttpVersion\n  nameWithType: HttpWorkerRequest.GetHttpVersion\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeader\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeader\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeaderIndex\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex\n- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownRequestHeaderName\n  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownResponseHeaderIndex\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex\n- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetKnownResponseHeaderName\n  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName\n- uid: System.Web.HttpWorkerRequest.GetLocalAddress*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetLocalAddress\n  nameWithType: HttpWorkerRequest.GetLocalAddress\n- uid: System.Web.HttpWorkerRequest.GetLocalPort*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetLocalPort\n  nameWithType: HttpWorkerRequest.GetLocalPort\n- uid: System.Web.HttpWorkerRequest.GetPathInfo*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPathInfo\n  nameWithType: HttpWorkerRequest.GetPathInfo\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPreloadedEntityBody\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody\n- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetPreloadedEntityBodyLength\n  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength\n- uid: System.Web.HttpWorkerRequest.GetProtocol*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetProtocol\n  nameWithType: HttpWorkerRequest.GetProtocol\n- uid: System.Web.HttpWorkerRequest.GetQueryString*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetQueryString\n  nameWithType: HttpWorkerRequest.GetQueryString\n- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetQueryStringRawBytes\n  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes\n- uid: System.Web.HttpWorkerRequest.GetRawUrl*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRawUrl\n  nameWithType: HttpWorkerRequest.GetRawUrl\n- uid: System.Web.HttpWorkerRequest.GetRemoteAddress*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemoteAddress\n  nameWithType: HttpWorkerRequest.GetRemoteAddress\n- uid: System.Web.HttpWorkerRequest.GetRemoteName*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemoteName\n  nameWithType: HttpWorkerRequest.GetRemoteName\n- uid: System.Web.HttpWorkerRequest.GetRemotePort*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRemotePort\n  nameWithType: HttpWorkerRequest.GetRemotePort\n- uid: System.Web.HttpWorkerRequest.GetRequestReason*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetRequestReason\n  nameWithType: HttpWorkerRequest.GetRequestReason\n- uid: System.Web.HttpWorkerRequest.GetServerName*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetServerName\n  nameWithType: HttpWorkerRequest.GetServerName\n- uid: System.Web.HttpWorkerRequest.GetServerVariable*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetServerVariable\n  nameWithType: HttpWorkerRequest.GetServerVariable\n- uid: System.Web.HttpWorkerRequest.GetStatusDescription*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetStatusDescription\n  nameWithType: HttpWorkerRequest.GetStatusDescription\n- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetTotalEntityBodyLength\n  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUnknownRequestHeader\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader\n- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUnknownRequestHeaders\n  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders\n- uid: System.Web.HttpWorkerRequest.GetUriPath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUriPath\n  nameWithType: HttpWorkerRequest.GetUriPath\n- uid: System.Web.HttpWorkerRequest.GetUrlContextID*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUrlContextID\n  nameWithType: HttpWorkerRequest.GetUrlContextID\n- uid: System.Web.HttpWorkerRequest.GetUserToken*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetUserToken\n  nameWithType: HttpWorkerRequest.GetUserToken\n- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: GetVirtualPathToken\n  nameWithType: HttpWorkerRequest.GetVirtualPathToken\n- uid: System.Web.HttpWorkerRequest.HasEntityBody*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HasEntityBody\n  nameWithType: HttpWorkerRequest.HasEntityBody\n- uid: System.Web.HttpWorkerRequest.HeadersSent*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: HeadersSent\n  nameWithType: HttpWorkerRequest.HeadersSent\n- uid: System.Web.HttpWorkerRequest.IsClientConnected*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsClientConnected\n  nameWithType: HttpWorkerRequest.IsClientConnected\n- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsEntireEntityBodyIsPreloaded\n  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded\n- uid: System.Web.HttpWorkerRequest.IsSecure*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: IsSecure\n  nameWithType: HttpWorkerRequest.IsSecure\n- uid: System.Web.HttpWorkerRequest.MachineConfigPath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MachineConfigPath\n  nameWithType: HttpWorkerRequest.MachineConfigPath\n- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MachineInstallDirectory\n  nameWithType: HttpWorkerRequest.MachineInstallDirectory\n- uid: System.Web.HttpWorkerRequest.MapPath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: MapPath\n  nameWithType: HttpWorkerRequest.MapPath\n- uid: System.Web.HttpWorkerRequest.ReadEntityBody*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: ReadEntityBody\n  nameWithType: HttpWorkerRequest.ReadEntityBody\n- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: RequestTraceIdentifier\n  nameWithType: HttpWorkerRequest.RequestTraceIdentifier\n- uid: System.Web.HttpWorkerRequest.RootWebConfigPath*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: RootWebConfigPath\n  nameWithType: HttpWorkerRequest.RootWebConfigPath\n- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendCalculatedContentLength\n  nameWithType: HttpWorkerRequest.SendCalculatedContentLength\n- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendKnownResponseHeader\n  nameWithType: HttpWorkerRequest.SendKnownResponseHeader\n- uid: System.Web.HttpWorkerRequest.SendResponseFromFile*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile\n  nameWithType: HttpWorkerRequest.SendResponseFromFile\n- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendResponseFromMemory\n  nameWithType: HttpWorkerRequest.SendResponseFromMemory\n- uid: System.Web.HttpWorkerRequest.SendStatus*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendStatus\n  nameWithType: HttpWorkerRequest.SendStatus\n- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SendUnknownResponseHeader\n  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader\n- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SetEndOfSendNotification\n  nameWithType: HttpWorkerRequest.SetEndOfSendNotification\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SupportsAsyncFlush\n  nameWithType: HttpWorkerRequest.SupportsAsyncFlush\n- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead*\n  parent: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: SupportsAsyncRead\n  nameWithType: HttpWorkerRequest.SupportsAsyncRead\n"}