{"nodes":[{"pos":[1888,2043],"content":"Converts data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.","pos":[0,155],"nodes":[{"content":"Converts data from one type to another.","pos":[0,39]},{"content":"Includes methods that convert values to &lt;xref:System.String&gt; objects so that they can be displayed by the debugger.","pos":[40,155],"source":" Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger."}]}]},{"pos":[2820,2912],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.DebugConvert\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.JScript.DebugConvert\"></xref> class."},{"pos":[3486,3563],"content":"Converts the specified <xref:System.Boolean> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Boolean&gt; value to a &lt;xref:System.String&gt;.","pos":[0,77],"source":"Converts the specified <xref:System.Boolean> value to a <xref:System.String>."}]},{"pos":[3709,3730],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[3788,3844],"content":"The literal string \"true\" or the literal string \"false\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal string \"true\" or the literal string \"false\".","pos":[0,56]}]},{"pos":[4376,4450],"content":"Converts the specified <xref:System.Byte> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Byte&gt; value to a &lt;xref:System.String&gt;.","pos":[0,74],"source":"Converts the specified <xref:System.Byte> value to a <xref:System.String>."}]},{"pos":[4601,4622],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[4683,4746],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[4804,4879],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[5394,5471],"content":"Converts the specified <xref:System.Decimal> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Decimal&gt; value to a &lt;xref:System.String&gt;.","pos":[0,77],"source":"Converts the specified <xref:System.Decimal> value to a <xref:System.String>."}]},{"pos":[5620,5641],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[5699,5747],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[6275,6461],"content":"Creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","pos":[0,186],"nodes":[{"content":"Creates a string representation of the specified &lt;xref:System.Double&gt;.","pos":[0,70],"source":"Creates a string representation of the specified <xref:System.Double>."},{"content":"The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","pos":[71,186]}]}]},{"pos":[6611,6632],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[6690,6738],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[7249,7325],"content":"Converts the specified <xref:System.Double> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Double&gt; value to a &lt;xref:System.String&gt;.","pos":[0,76],"source":"Converts the specified <xref:System.Double> value to a <xref:System.String>."}]},{"pos":[7471,7492],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[7550,7598],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[8239,8450],"content":"Gets an error message that is created from the specified &lt;xref:System.Exception.HResult*&gt; and the &lt;xref:System.Globalization.CultureInfo&gt; of the specified <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an error message that is created from the specified <xref:System.Exception.HResult*> and the <xref:System.Globalization.CultureInfo> of the specified <xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"></xref>."},{"pos":[8635,8658],"content":"The HRESULT error code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HRESULT error code.","pos":[0,23]}]},{"pos":[8742,8778],"content":"A reference to the scripting engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]},{"pos":[8836,8897],"content":"A localized string that contains information about the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A localized string that contains information about the error.","pos":[0,61]}]},{"pos":[9440,9523],"content":"Creates a managed object that has the specified primitive <xref:System.Char> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a managed object that has the specified primitive &lt;xref:System.Char&gt; value.","pos":[0,83],"source":"Creates a managed object that has the specified primitive <xref:System.Char> value."}]},{"pos":[9667,9688],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[9746,9828],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> and then an <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to a <xref:System.Char> and then an <xref:System.Object>."},{"pos":[10371,10455],"content":"Creates a managed object that has the specified primitive <xref:System.Int64> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a managed object that has the specified primitive &lt;xref:System.Int64&gt; value.","pos":[0,84],"source":"Creates a managed object that has the specified primitive <xref:System.Int64> value."}]},{"pos":[10597,10618],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[10676,10728],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to an <xref:System.Object>."},{"pos":[11252,11316],"content":"Creates a managed object that has the specified primitive value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a managed object that has the specified primitive value.","pos":[0,64]}]},{"pos":[11464,11485],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[11543,11606],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a managed <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a managed <xref:System.Object>."},{"pos":[12155,12240],"content":"Creates a managed object that has the specified primitive <xref:System.UInt64> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a managed object that has the specified primitive &lt;xref:System.UInt64&gt; value.","pos":[0,85],"source":"Creates a managed object that has the specified primitive <xref:System.UInt64> value."}]},{"pos":[12385,12406],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[12464,12516],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to an <xref:System.Object>."},{"pos":[13065,13140],"content":"Converts the specified <xref:System.Int16> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Int16&gt; value to a &lt;xref:System.String&gt;.","pos":[0,75],"source":"Converts the specified <xref:System.Int16> value to a <xref:System.String>."}]},{"pos":[13294,13315],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[13376,13439],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[13497,13572],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[14112,14187],"content":"Converts the specified <xref:System.Int32> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Int32&gt; value to a &lt;xref:System.String&gt;.","pos":[0,75],"source":"Converts the specified <xref:System.Int32> value to a <xref:System.String>."}]},{"pos":[14339,14360],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[14421,14484],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[14542,14617],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[15157,15232],"content":"Converts the specified <xref:System.Int64> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Int64&gt; value to a &lt;xref:System.String&gt;.","pos":[0,75],"source":"Converts the specified <xref:System.Int64> value to a <xref:System.String>."}]},{"pos":[15385,15406],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[15467,15530],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[15588,15663],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[16331,16411],"content":"Converts the specified regular expression information to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified regular expression information to a &lt;xref:System.String&gt;.","pos":[0,80],"source":"Converts the specified regular expression information to a <xref:System.String>."}]},{"pos":[16605,16645],"content":"The regular expression pattern to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression pattern to match.","pos":[0,40]}]},{"pos":[16713,16882],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use case-insensitive matching; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use case-insensitive matching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16946,17104],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a global match; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a global match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17171,17332],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a multiline match; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a multiline match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17390,17454],"content":"The string representation of the regular expression information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of the regular expression information.","pos":[0,64]}]},{"pos":[17995,18070],"content":"Converts the specified <xref:System.SByte> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.SByte&gt; value to a &lt;xref:System.String&gt;.","pos":[0,75],"source":"Converts the specified <xref:System.SByte> value to a <xref:System.String>."}]},{"pos":[18224,18245],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[18306,18369],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[18427,18502],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[19008,19084],"content":"Converts the specified <xref:System.Single> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.Single&gt; value to a &lt;xref:System.String&gt;.","pos":[0,76],"source":"Converts the specified <xref:System.Single> value to a <xref:System.String>."}]},{"pos":[19229,19250],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[19308,19356],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[19878,20009],"content":"Converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.String&gt; to a &lt;xref:System.String&gt; that contains escape characters for non-printable characters.","pos":[0,131],"source":"Converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters."}]},{"pos":[20160,20181],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[20239,20320],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> that contains escape characters.","needQuote":true,"needEscape":true,"source":"The string representation of <code>source</code> that contains escape characters."},{"pos":[20928,21028],"content":"Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to the specified &lt;xref:System.TypeCode&gt;, optionally allowing data loss.","pos":[0,100],"source":"Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss."}]},{"pos":[21216,21251],"content":"The value to convert to a new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to a new type.","pos":[0,35]}]},{"pos":[21318,21349],"content":"The type to convert <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The type to convert `value` to."},{"pos":[21426,21581],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21639,21702],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to the <ph id=\"ph2\">&lt;code&gt;typeCode&lt;/code&gt;</ph> type.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to the <code>typeCode</code> type."},{"pos":[22250,22326],"content":"Converts the specified <xref:System.UInt16> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.UInt16&gt; value to a &lt;xref:System.String&gt;.","pos":[0,76],"source":"Converts the specified <xref:System.UInt16> value to a <xref:System.String>."}]},{"pos":[22483,22504],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[22565,22628],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[22686,22761],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[23312,23388],"content":"Converts the specified <xref:System.UInt32> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.UInt32&gt; value to a &lt;xref:System.String&gt;.","pos":[0,76],"source":"Converts the specified <xref:System.UInt32> value to a <xref:System.String>."}]},{"pos":[23543,23564],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[23625,23688],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[23746,23821],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[24372,24448],"content":"Converts the specified <xref:System.UInt64> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified &lt;xref:System.UInt64&gt; value to a &lt;xref:System.String&gt;.","pos":[0,76],"source":"Converts the specified <xref:System.UInt64> value to a <xref:System.String>."}]},{"pos":[24604,24625],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[24686,24749],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[24807,24882],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.DebugConvert\n  id: DebugConvert\n  children:\n  - Microsoft.JScript.DebugConvert.#ctor\n  - Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)\n  - Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)\n  - Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)\n  - Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)\n  - Microsoft.JScript.DebugConvert.DoubleToString(System.Double)\n  - Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  - Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)\n  - Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)\n  - Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)\n  - Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)\n  - Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)\n  - Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)\n  - Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)\n  - Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  - Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)\n  - Microsoft.JScript.DebugConvert.SingleToString(System.Single)\n  - Microsoft.JScript.DebugConvert.StringToPrintable(System.String)\n  - Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  - Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  - Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  - Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  langs:\n  - csharp\n  name: DebugConvert\n  nameWithType: DebugConvert\n  fullName: Microsoft.JScript.DebugConvert\n  type: Class\n  summary: Converts data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"432D76CE-8C9E-4eed-ADDD-91737F27A8CB\")]\n\n      public class DebugConvert : Microsoft.JScript.IDebugConvert, Microsoft.JScript.IDebugConvert2\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.JScript.IDebugConvert\n  - Microsoft.JScript.IDebugConvert2\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.#ctor\n  id: '#ctor'\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: DebugConvert()\n  nameWithType: DebugConvert.DebugConvert()\n  fullName: Microsoft.JScript.DebugConvert.DebugConvert()\n  type: Constructor\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Initializes a new instance of the <xref href=\"Microsoft.JScript.DebugConvert\"></xref> class.\n  syntax:\n    content: public DebugConvert ();\n    parameters: []\n  overload: Microsoft.JScript.DebugConvert.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)\n  id: BooleanToString(System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: BooleanToString(Boolean)\n  nameWithType: DebugConvert.BooleanToString(Boolean)\n  fullName: Microsoft.JScript.DebugConvert.BooleanToString(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Boolean> value to a <xref:System.String>.\n  syntax:\n    content: public string BooleanToString (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The literal string \"true\" or the literal string \"false\".\n  overload: Microsoft.JScript.DebugConvert.BooleanToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)\n  id: ByteToString(System.Byte,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: ByteToString(Byte,Int32)\n  nameWithType: DebugConvert.ByteToString(Byte,Int32)\n  fullName: Microsoft.JScript.DebugConvert.ByteToString(Byte,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Byte> value to a <xref:System.String>.\n  syntax:\n    content: public string ByteToString (byte value, int radix);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.ByteToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)\n  id: DecimalToString(System.Decimal)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: DecimalToString(Decimal)\n  nameWithType: DebugConvert.DecimalToString(Decimal)\n  fullName: Microsoft.JScript.DebugConvert.DecimalToString(Decimal)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Decimal> value to a <xref:System.String>.\n  syntax:\n    content: public string DecimalToString (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.DebugConvert.DecimalToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)\n  id: DoubleToDateString(System.Double)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: DoubleToDateString(Double)\n  nameWithType: DebugConvert.DoubleToDateString(Double)\n  fullName: Microsoft.JScript.DebugConvert.DoubleToDateString(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.\n  syntax:\n    content: public string DoubleToDateString (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.DebugConvert.DoubleToDateString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.DoubleToString(System.Double)\n  id: DoubleToString(System.Double)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: DoubleToString(Double)\n  nameWithType: DebugConvert.DoubleToString(Double)\n  fullName: Microsoft.JScript.DebugConvert.DoubleToString(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Double> value to a <xref:System.String>.\n  syntax:\n    content: public string DoubleToString (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.DebugConvert.DoubleToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  id: GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: GetErrorMessageForHR(Int32,IJSVsaEngine)\n  nameWithType: DebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  fullName: Microsoft.JScript.DebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Gets an error message that is created from the specified <xref:System.Exception.HResult*> and the <xref:System.Globalization.CultureInfo> of the specified <xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"></xref>.\n  syntax:\n    content: public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);\n    parameters:\n    - id: hr\n      type: System.Int32\n      description: The HRESULT error code.\n    - id: engine\n      type: Microsoft.JScript.Vsa.IJSVsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.String\n      description: A localized string that contains information about the error.\n  overload: Microsoft.JScript.DebugConvert.GetErrorMessageForHR*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)\n  id: GetManagedCharObject(System.UInt16)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: GetManagedCharObject(UInt16)\n  nameWithType: DebugConvert.GetManagedCharObject(UInt16)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedCharObject(UInt16)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a managed object that has the specified primitive <xref:System.Char> value.\n  syntax:\n    content: public object GetManagedCharObject (ushort i);\n    parameters:\n    - id: i\n      type: System.UInt16\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to a <xref:System.Char> and then an <xref:System.Object>.\n  overload: Microsoft.JScript.DebugConvert.GetManagedCharObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)\n  id: GetManagedInt64Object(System.Int64)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: GetManagedInt64Object(Int64)\n  nameWithType: DebugConvert.GetManagedInt64Object(Int64)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedInt64Object(Int64)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a managed object that has the specified primitive <xref:System.Int64> value.\n  syntax:\n    content: public object GetManagedInt64Object (long i);\n    parameters:\n    - id: i\n      type: System.Int64\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.DebugConvert.GetManagedInt64Object*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)\n  id: GetManagedObject(System.Object)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: GetManagedObject(Object)\n  nameWithType: DebugConvert.GetManagedObject(Object)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedObject(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a managed object that has the specified primitive value.\n  syntax:\n    content: public object GetManagedObject (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to a managed <xref:System.Object>.\n  overload: Microsoft.JScript.DebugConvert.GetManagedObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)\n  id: GetManagedUInt64Object(System.UInt64)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: GetManagedUInt64Object(UInt64)\n  nameWithType: DebugConvert.GetManagedUInt64Object(UInt64)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedUInt64Object(UInt64)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a managed object that has the specified primitive <xref:System.UInt64> value.\n  syntax:\n    content: public object GetManagedUInt64Object (ulong i);\n    parameters:\n    - id: i\n      type: System.UInt64\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.DebugConvert.GetManagedUInt64Object*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)\n  id: Int16ToString(System.Int16,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: Int16ToString(Int16,Int32)\n  nameWithType: DebugConvert.Int16ToString(Int16,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int16ToString(Int16,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Int16> value to a <xref:System.String>.\n  syntax:\n    content: public string Int16ToString (short value, int radix);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.Int16ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)\n  id: Int32ToString(System.Int32,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: Int32ToString(Int32,Int32)\n  nameWithType: DebugConvert.Int32ToString(Int32,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int32ToString(Int32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Int32> value to a <xref:System.String>.\n  syntax:\n    content: public string Int32ToString (int value, int radix);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.Int32ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)\n  id: Int64ToString(System.Int64,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: Int64ToString(Int64,Int32)\n  nameWithType: DebugConvert.Int64ToString(Int64,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int64ToString(Int64,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Int64> value to a <xref:System.String>.\n  syntax:\n    content: public string Int64ToString (long value, int radix);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.Int64ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  id: RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: RegexpToString(String,Boolean,Boolean,Boolean)\n  nameWithType: DebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  fullName: Microsoft.JScript.DebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified regular expression information to a <xref:System.String>.\n  syntax:\n    content: public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);\n    parameters:\n    - id: source\n      type: System.String\n      description: The regular expression pattern to match.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use case-insensitive matching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: global\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a global match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: multiline\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a multiline match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: The string representation of the regular expression information.\n  overload: Microsoft.JScript.DebugConvert.RegexpToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)\n  id: SByteToString(System.SByte,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: SByteToString(SByte,Int32)\n  nameWithType: DebugConvert.SByteToString(SByte,Int32)\n  fullName: Microsoft.JScript.DebugConvert.SByteToString(SByte,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.SByte> value to a <xref:System.String>.\n  syntax:\n    content: public string SByteToString (sbyte value, int radix);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.SByteToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.SingleToString(System.Single)\n  id: SingleToString(System.Single)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: SingleToString(Single)\n  nameWithType: DebugConvert.SingleToString(Single)\n  fullName: Microsoft.JScript.DebugConvert.SingleToString(Single)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.Single> value to a <xref:System.String>.\n  syntax:\n    content: public string SingleToString (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.DebugConvert.SingleToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.StringToPrintable(System.String)\n  id: StringToPrintable(System.String)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: StringToPrintable(String)\n  nameWithType: DebugConvert.StringToPrintable(String)\n  fullName: Microsoft.JScript.DebugConvert.StringToPrintable(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters.\n  syntax:\n    content: public string StringToPrintable (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>source</code> that contains escape characters.\n  overload: Microsoft.JScript.DebugConvert.StringToPrintable*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  id: ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: ToPrimitive(Object,TypeCode,Boolean)\n  nameWithType: DebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.DebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.\n  syntax:\n    content: public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert to a new type.\n    - id: typeCode\n      type: System.TypeCode\n      description: The type to convert `value` to.\n    - id: truncationPermitted\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to the <code>typeCode</code> type.\n  overload: Microsoft.JScript.DebugConvert.ToPrimitive*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  id: UInt16ToString(System.UInt16,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: UInt16ToString(UInt16,Int32)\n  nameWithType: DebugConvert.UInt16ToString(UInt16,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt16ToString(UInt16,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.UInt16> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt16ToString (ushort value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt16\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.UInt16ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  id: UInt32ToString(System.UInt32,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: UInt32ToString(UInt32,Int32)\n  nameWithType: DebugConvert.UInt32ToString(UInt32,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt32ToString(UInt32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.UInt32> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt32ToString (uint value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.UInt32ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  id: UInt64ToString(System.UInt64,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  langs:\n  - csharp\n  name: UInt64ToString(UInt64,Int32)\n  nameWithType: DebugConvert.UInt64ToString(UInt64,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt64ToString(UInt64,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified <xref:System.UInt64> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt64ToString (ulong value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.DebugConvert.UInt64ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.JScript.DebugConvert.#ctor\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DebugConvert()\n  nameWithType: DebugConvert.DebugConvert()\n  fullName: Microsoft.JScript.DebugConvert.DebugConvert()\n- uid: Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: BooleanToString(Boolean)\n  nameWithType: DebugConvert.BooleanToString(Boolean)\n  fullName: Microsoft.JScript.DebugConvert.BooleanToString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: ByteToString(Byte,Int32)\n  nameWithType: DebugConvert.ByteToString(Byte,Int32)\n  fullName: Microsoft.JScript.DebugConvert.ByteToString(Byte,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DecimalToString(Decimal)\n  nameWithType: DebugConvert.DecimalToString(Decimal)\n  fullName: Microsoft.JScript.DebugConvert.DecimalToString(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DoubleToDateString(Double)\n  nameWithType: DebugConvert.DoubleToDateString(Double)\n  fullName: Microsoft.JScript.DebugConvert.DoubleToDateString(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.JScript.DebugConvert.DoubleToString(System.Double)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DoubleToString(Double)\n  nameWithType: DebugConvert.DoubleToString(Double)\n  fullName: Microsoft.JScript.DebugConvert.DoubleToString(Double)\n- uid: Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetErrorMessageForHR(Int32,IJSVsaEngine)\n  nameWithType: DebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  fullName: Microsoft.JScript.DebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n- uid: Microsoft.JScript.Vsa.IJSVsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: IJSVsaEngine\n  nameWithType: IJSVsaEngine\n  fullName: Microsoft.JScript.Vsa.IJSVsaEngine\n- uid: Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedCharObject(UInt16)\n  nameWithType: DebugConvert.GetManagedCharObject(UInt16)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedCharObject(UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: true\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedInt64Object(Int64)\n  nameWithType: DebugConvert.GetManagedInt64Object(Int64)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedInt64Object(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedObject(Object)\n  nameWithType: DebugConvert.GetManagedObject(Object)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedObject(Object)\n- uid: Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedUInt64Object(UInt64)\n  nameWithType: DebugConvert.GetManagedUInt64Object(UInt64)\n  fullName: Microsoft.JScript.DebugConvert.GetManagedUInt64Object(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: true\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int16ToString(Int16,Int32)\n  nameWithType: DebugConvert.Int16ToString(Int16,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int16ToString(Int16,Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int32ToString(Int32,Int32)\n  nameWithType: DebugConvert.Int32ToString(Int32,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int32ToString(Int32,Int32)\n- uid: Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int64ToString(Int64,Int32)\n  nameWithType: DebugConvert.Int64ToString(Int64,Int32)\n  fullName: Microsoft.JScript.DebugConvert.Int64ToString(Int64,Int32)\n- uid: Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: RegexpToString(String,Boolean,Boolean,Boolean)\n  nameWithType: DebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  fullName: Microsoft.JScript.DebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n- uid: Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: SByteToString(SByte,Int32)\n  nameWithType: DebugConvert.SByteToString(SByte,Int32)\n  fullName: Microsoft.JScript.DebugConvert.SByteToString(SByte,Int32)\n- uid: System.SByte\n  parent: System\n  isExternal: true\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: Microsoft.JScript.DebugConvert.SingleToString(System.Single)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: SingleToString(Single)\n  nameWithType: DebugConvert.SingleToString(Single)\n  fullName: Microsoft.JScript.DebugConvert.SingleToString(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.JScript.DebugConvert.StringToPrintable(System.String)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: StringToPrintable(String)\n  nameWithType: DebugConvert.StringToPrintable(String)\n  fullName: Microsoft.JScript.DebugConvert.StringToPrintable(String)\n- uid: Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: ToPrimitive(Object,TypeCode,Boolean)\n  nameWithType: DebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.DebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n- uid: System.TypeCode\n  parent: System\n  isExternal: true\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt16ToString(UInt16,Int32)\n  nameWithType: DebugConvert.UInt16ToString(UInt16,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt16ToString(UInt16,Int32)\n- uid: Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt32ToString(UInt32,Int32)\n  nameWithType: DebugConvert.UInt32ToString(UInt32,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt32ToString(UInt32,Int32)\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt64ToString(UInt64,Int32)\n  nameWithType: DebugConvert.UInt64ToString(UInt64,Int32)\n  fullName: Microsoft.JScript.DebugConvert.UInt64ToString(UInt64,Int32)\n- uid: Microsoft.JScript.DebugConvert.#ctor*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DebugConvert\n  nameWithType: DebugConvert.DebugConvert\n- uid: Microsoft.JScript.DebugConvert.BooleanToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: BooleanToString\n  nameWithType: DebugConvert.BooleanToString\n- uid: Microsoft.JScript.DebugConvert.ByteToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: ByteToString\n  nameWithType: DebugConvert.ByteToString\n- uid: Microsoft.JScript.DebugConvert.DecimalToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DecimalToString\n  nameWithType: DebugConvert.DecimalToString\n- uid: Microsoft.JScript.DebugConvert.DoubleToDateString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DoubleToDateString\n  nameWithType: DebugConvert.DoubleToDateString\n- uid: Microsoft.JScript.DebugConvert.DoubleToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: DoubleToString\n  nameWithType: DebugConvert.DoubleToString\n- uid: Microsoft.JScript.DebugConvert.GetErrorMessageForHR*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetErrorMessageForHR\n  nameWithType: DebugConvert.GetErrorMessageForHR\n- uid: Microsoft.JScript.DebugConvert.GetManagedCharObject*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedCharObject\n  nameWithType: DebugConvert.GetManagedCharObject\n- uid: Microsoft.JScript.DebugConvert.GetManagedInt64Object*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedInt64Object\n  nameWithType: DebugConvert.GetManagedInt64Object\n- uid: Microsoft.JScript.DebugConvert.GetManagedObject*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedObject\n  nameWithType: DebugConvert.GetManagedObject\n- uid: Microsoft.JScript.DebugConvert.GetManagedUInt64Object*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: GetManagedUInt64Object\n  nameWithType: DebugConvert.GetManagedUInt64Object\n- uid: Microsoft.JScript.DebugConvert.Int16ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int16ToString\n  nameWithType: DebugConvert.Int16ToString\n- uid: Microsoft.JScript.DebugConvert.Int32ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int32ToString\n  nameWithType: DebugConvert.Int32ToString\n- uid: Microsoft.JScript.DebugConvert.Int64ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: Int64ToString\n  nameWithType: DebugConvert.Int64ToString\n- uid: Microsoft.JScript.DebugConvert.RegexpToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: RegexpToString\n  nameWithType: DebugConvert.RegexpToString\n- uid: Microsoft.JScript.DebugConvert.SByteToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: SByteToString\n  nameWithType: DebugConvert.SByteToString\n- uid: Microsoft.JScript.DebugConvert.SingleToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: SingleToString\n  nameWithType: DebugConvert.SingleToString\n- uid: Microsoft.JScript.DebugConvert.StringToPrintable*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: StringToPrintable\n  nameWithType: DebugConvert.StringToPrintable\n- uid: Microsoft.JScript.DebugConvert.ToPrimitive*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: ToPrimitive\n  nameWithType: DebugConvert.ToPrimitive\n- uid: Microsoft.JScript.DebugConvert.UInt16ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt16ToString\n  nameWithType: DebugConvert.UInt16ToString\n- uid: Microsoft.JScript.DebugConvert.UInt32ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt32ToString\n  nameWithType: DebugConvert.UInt32ToString\n- uid: Microsoft.JScript.DebugConvert.UInt64ToString*\n  parent: Microsoft.JScript.DebugConvert\n  isExternal: false\n  name: UInt64ToString\n  nameWithType: DebugConvert.UInt64ToString\n"}