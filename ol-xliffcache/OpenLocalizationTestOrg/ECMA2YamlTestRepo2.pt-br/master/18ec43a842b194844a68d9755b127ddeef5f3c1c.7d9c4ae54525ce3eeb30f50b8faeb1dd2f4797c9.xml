{"nodes":[{"pos":[2140,2194],"content":"Discovers attributed parts in a managed code assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Discovers attributed parts in a managed code assembly.","pos":[0,54]}]},{"pos":[2207,2936],"content":"An AssemblyCatalog is used to parse all the parts present in a specified assembly. The target assembly can be indicated either by object reference or by path.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.       This type is thread safe.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An AssemblyCatalog is used to parse all the parts present in a specified assembly.","pos":[0,82]},{"content":"The target assembly can be indicated either by object reference or by path.","pos":[83,158]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.","pos":[164,243],"source":"      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[244,338]},{"content":"To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[339,450],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[451,558],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.","pos":[559,692],"source":" For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."},{"content":"This type is thread safe.","pos":[699,724]}]},{"pos":[4849,4996],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified assembly.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly."},{"pos":[5175,5344],"content":"The assembly that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[5531,5709],"content":"<code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>assembly</code> was loaded in the reflection-only context.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,86],"source":"<code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> was loaded in the reflection-only context.","pos":[93,168],"source":"       -or-       <code>assembly</code> was loaded in the reflection-only context."}]},{"pos":[6257,6405],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified code base.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base."},{"pos":[6417,6487],"content":"The assembly referenced by <ph id=\"ph1\">`codeBase`</ph> is loaded into the load context.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The assembly referenced by `codeBase` is loaded into the load context."},{"pos":[6633,6884],"content":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[7083,7285],"content":"<code>codeBase</code> is not a valid assembly.       -or-       Version 2.0 or earlier of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not a valid assembly.","pos":[0,46],"source":"<code>codeBase</code> is not a valid assembly."},{"content":"-or-       Version 2.0 or earlier of the common language runtime is currently loaded and <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> was compiled with a later version.","pos":[53,198],"source":"       -or-       Version 2.0 or earlier of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version."}]},{"pos":[7399,7450],"content":"The caller does not have path discovery permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have path discovery permission.","pos":[0,51]}]},{"pos":[7552,7660],"content":"<code>codeBase</code> could not be loaded.       -or-       <code>codeBase</code> specified a directory.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> could not be loaded.","pos":[0,42],"source":"<code>codeBase</code> could not be loaded."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> specified a directory.","pos":[49,104],"source":"       -or-       <code>codeBase</code> specified a directory."}]},{"pos":[7764,7850],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7959,7994],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not found.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is not found."},{"pos":[8089,8259],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>."},{"pos":[8366,8446],"content":"The specified path, file name, or both exceed the system-defined maximum length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]}]},{"pos":[9215,9362],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified assembly.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly."},{"pos":[9624,9793],"content":"The assembly that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[9917,9982],"content":"The element used by diagnostics to identify the sources of parts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element used by diagnostics to identify the sources of parts.","pos":[0,65]}]},{"pos":[10169,10380],"content":"<code>assembly</code> or <code>definitionOrigin</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>assembly</code> was loaded in the reflection-only context.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;definitionOrigin&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,119],"source":"<code>assembly</code> or <code>definitionOrigin</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> was loaded in the reflection-only context.","pos":[126,201],"source":"       -or-       <code>assembly</code> was loaded in the reflection-only context."}]},{"pos":[11086,11256],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified assembly and reflection context.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly and reflection context."},{"pos":[11490,11659],"content":"The assembly that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[11755,11806],"content":"The context used by the catalog to interpret types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context used by the catalog to interpret types.","pos":[0,51]}]},{"pos":[11993,12205],"content":"<code>assembly</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>assembly</code> was loaded in the reflection-only context.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,120],"source":"<code>assembly</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> was loaded in the reflection-only context.","pos":[127,202],"source":"       -or-       <code>assembly</code> was loaded in the reflection-only context."}]},{"pos":[12943,13091],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified code base.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base."},{"pos":[13320,13571],"content":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[13695,13760],"content":"The element used by diagnostics to identify the sources of parts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element used by diagnostics to identify the sources of parts.","pos":[0,65]}]},{"pos":[13959,14159],"content":"<code>codeBase</code> is not a valid assembly.       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not a valid assembly.","pos":[0,46],"source":"<code>codeBase</code> is not a valid assembly."},{"content":"-or-       Version 2.0 or later of the common language runtime is currently loaded and <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> was compiled with a later version.","pos":[53,196],"source":"       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version."}]},{"pos":[14273,14324],"content":"The caller does not have path discovery permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have path discovery permission.","pos":[0,51]}]},{"pos":[14426,14534],"content":"<code>codeBase</code> could not be loaded.       -or-       <code>codeBase</code> specified a directory.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> could not be loaded.","pos":[0,42],"source":"<code>codeBase</code> could not be loaded."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> specified a directory.","pos":[49,104],"source":"       -or-       <code>codeBase</code> specified a directory."}]},{"pos":[14638,14757],"content":"<ph id=\"ph1\">&lt;code&gt;codebase&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;definitionOrigin&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>codebase</code> or <code>definitionOrigin</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14866,14901],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not found.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is not found."},{"pos":[14996,15166],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>."},{"pos":[15273,15353],"content":"The specified path, file name, or both exceed the system-defined maximum length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]}]},{"pos":[16026,16197],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified code base and reflection context.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base and reflection context."},{"pos":[16398,16649],"content":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[16745,16796],"content":"The context used by the catalog to interpret types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context used by the catalog to interpret types.","pos":[0,51]}]},{"pos":[16995,17195],"content":"<code>codeBase</code> is not a valid assembly.       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not a valid assembly.","pos":[0,46],"source":"<code>codeBase</code> is not a valid assembly."},{"content":"-or-       Version 2.0 or later of the common language runtime is currently loaded and <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> was compiled with a later version.","pos":[53,196],"source":"       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version."}]},{"pos":[17309,17360],"content":"The caller does not have path discovery permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have path discovery permission.","pos":[0,51]}]},{"pos":[17462,17570],"content":"<code>codeBase</code> could not be loaded.       -or-       <code>codeBase</code> specified a directory.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> could not be loaded.","pos":[0,42],"source":"<code>codeBase</code> could not be loaded."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> specified a directory.","pos":[49,104],"source":"       -or-       <code>codeBase</code> specified a directory."}]},{"pos":[17674,17794],"content":"<ph id=\"ph1\">&lt;code&gt;codebase&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>codebase</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17903,17938],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not found.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is not found."},{"pos":[18033,18203],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>."},{"pos":[18310,18390],"content":"The specified path, file name, or both exceed the system-defined maximum length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]}]},{"pos":[19285,19455],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified assembly and reflection context.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly and reflection context."},{"pos":[19772,19941],"content":"The assembly that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[20037,20088],"content":"The context used by the catalog to interpret types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context used by the catalog to interpret types.","pos":[0,51]}]},{"pos":[20212,20277],"content":"The element used by diagnostics to identify the sources of parts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element used by diagnostics to identify the sources of parts.","pos":[0,65]}]},{"pos":[20464,20708],"content":"<code>assembly</code>, <code>definitionOrigin</code>, or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>assembly</code> was loaded in the reflection-only context.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;definitionOrigin&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,152],"source":"<code>assembly</code>, <code>definitionOrigin</code>, or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> was loaded in the reflection-only context.","pos":[159,234],"source":"       -or-       <code>assembly</code> was loaded in the reflection-only context."}]},{"pos":[21572,21743],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified code base and reflection context.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base and reflection context."},{"pos":[22027,22278],"content":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed &lt;xref:System.Type&gt; objects to add to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[22374,22425],"content":"The context used by the catalog to interpret types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context used by the catalog to interpret types.","pos":[0,51]}]},{"pos":[22549,22614],"content":"The element used by diagnostics to identify the sources of parts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element used by diagnostics to identify the sources of parts.","pos":[0,65]}]},{"pos":[22813,23013],"content":"<code>codeBase</code> is not a valid assembly.       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not a valid assembly.","pos":[0,46],"source":"<code>codeBase</code> is not a valid assembly."},{"content":"-or-       Version 2.0 or later of the common language runtime is currently loaded and <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> was compiled with a later version.","pos":[53,196],"source":"       -or-       Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version."}]},{"pos":[23127,23178],"content":"The caller does not have path discovery permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have path discovery permission.","pos":[0,51]}]},{"pos":[23280,23388],"content":"<code>codeBase</code> could not be loaded.       -or-       <code>codeBase</code> specified a directory.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> could not be loaded.","pos":[0,42],"source":"<code>codeBase</code> could not be loaded."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> specified a directory.","pos":[49,104],"source":"       -or-       <code>codeBase</code> specified a directory."}]},{"pos":[23492,23643],"content":"<ph id=\"ph1\">&lt;code&gt;codebase&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;definitionOrigin&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>codebase</code>, <code>definitionOrigin</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23752,23787],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is not found.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is not found."},{"pos":[23882,24052],"content":"<ph id=\"ph1\">&lt;code&gt;codeBase&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>."},{"pos":[24159,24239],"content":"The specified path, file name, or both exceed the system-defined maximum length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]}]},{"pos":[24712,24791],"content":"Gets the assembly whose attributed types are contained in the assembly catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the assembly whose attributed types are contained in the assembly catalog.","pos":[0,79]}]},{"pos":[24937,25094],"content":"The assembly whose attributed &lt;xref:System.Type&gt; objects are contained in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The assembly whose attributed <xref:System.Type> objects are contained in the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref>."},{"pos":[25716,25886],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> and optionally releases the managed resources."},{"pos":[26042,26251],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[26849,26905],"content":"Returns an enumerator that iterates through the catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through the catalog.","pos":[0,56]}]},{"pos":[27245,27307],"content":"An enumerator that can be used to iterate through the catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the catalog.","pos":[0,62]}]},{"pos":[28070,28160],"content":"Gets a collection of exports that match the conditions specified by the import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of exports that match the conditions specified by the import definition.","pos":[0,90]}]},{"pos":[28596,28643],"content":"Conditions that specify which exports to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Conditions that specify which exports to match.","pos":[0,47]}]},{"pos":[28873,28960],"content":"A collection of exports that match the conditions specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">definition</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of exports that match the conditions specified by <code>definition</code>."},{"pos":[29886,30001],"content":"Gets the display name of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the display name of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[30013,30272],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.","pos":[0,259],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog&gt; instance is cast to an &lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt; interface.","pos":[60,259],"source":" It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface."}]}]},{"pos":[30446,30587],"content":"A string that represents the type and assembly of this <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that represents the type and assembly of this <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object."},{"pos":[31554,31617],"content":"Gets the composition element that this element originated from.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the composition element that this element originated from.","pos":[0,63]}]},{"pos":[31629,31888],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.","pos":[0,259],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog&gt; instance is cast to an &lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt; interface.","pos":[60,259],"source":" It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface."}]}]},{"pos":[32166,32234],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32871,32924],"content":"Gets a string representation of the assembly catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string representation of the assembly catalog.","pos":[0,53]}]},{"pos":[33060,33101],"content":"A representation of the assembly catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A representation of the assembly catalog.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  id: AssemblyCatalog\n  children:\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin\n  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString\n  langs:\n  - csharp\n  name: AssemblyCatalog\n  nameWithType: AssemblyCatalog\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  type: Class\n  summary: Discovers attributed parts in a managed code assembly.\n  remarks: \"An AssemblyCatalog is used to parse all the parts present in a specified assembly. The target assembly can be indicated either by object reference or by path.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \\n  \\n This type is thread safe.\"\n  example:\n  - \"The following code demonstrates the common scenario of an application creating an AssemblyCatalog to parse its own assembly. This is a straightforward way to load parts contained in a single project into the Managed Extensibility Framework (MEF).  \\n  \\n [!code-cs[Composition.CompositionContainer#1](~/add/codesnippet/csharp/composition.compositioncontainer.consoleapplication1/program.cs#1)]\\n [!code-vb[Composition.CompositionContainer#1](~/add/codesnippet/visualbasic/compositioncontainerexample/module1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))]\n\n      public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  implements:\n  - System.ComponentModel.Composition.Primitives.ICompositionElement\n  inheritedMembers:\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)\n  id: '#ctor(System.Reflection.Assembly)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(Assembly)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly.\n  syntax:\n    content: public AssemblyCatalog (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assembly</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>assembly</code> was loaded in the reflection-only context.\"\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(String)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base.\n  remarks: The assembly referenced by `codeBase` is loaded into the load context.\n  syntax:\n    content: public AssemblyCatalog (string codeBase);\n    parameters:\n    - id: codeBase\n      type: System.String\n      description: A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: \"<code>codeBase</code> is not a valid assembly.  \\n  \\n -or-  \\n  \\n Version 2.0 or earlier of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have path discovery permission.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: \"<code>codeBase</code> could not be loaded.  \\n  \\n -or-  \\n  \\n <code>codeBase</code> specified a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>codeBase</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>codeBase</code> is not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: '#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(Assembly,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ICompositionElement)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly.\n  syntax:\n    content: public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: definitionOrigin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The element used by diagnostics to identify the sources of parts.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assembly</code> or <code>definitionOrigin</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>assembly</code> was loaded in the reflection-only context.\"\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)\n  id: '#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(Assembly,ReflectionContext)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly and reflection context.\n  syntax:\n    content: public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The context used by the catalog to interpret types.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assembly</code> or <code>reflectionContext</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>assembly</code> was loaded in the reflection-only context.\"\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: '#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(String,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ICompositionElement)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base.\n  syntax:\n    content: public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);\n    parameters:\n    - id: codeBase\n      type: System.String\n      description: A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: definitionOrigin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The element used by diagnostics to identify the sources of parts.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: \"<code>codeBase</code> is not a valid assembly.  \\n  \\n -or-  \\n  \\n Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have path discovery permission.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: \"<code>codeBase</code> could not be loaded.  \\n  \\n -or-  \\n  \\n <code>codeBase</code> specified a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>codebase</code> or <code>definitionOrigin</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>codeBase</code> is not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)\n  id: '#ctor(System.String,System.Reflection.ReflectionContext)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(String,ReflectionContext)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ReflectionContext)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ReflectionContext)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base and reflection context.\n  syntax:\n    content: public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: codeBase\n      type: System.String\n      description: A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The context used by the catalog to interpret types.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: \"<code>codeBase</code> is not a valid assembly.  \\n  \\n -or-  \\n  \\n Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have path discovery permission.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: \"<code>codeBase</code> could not be loaded.  \\n  \\n -or-  \\n  \\n <code>codeBase</code> specified a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>codebase</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>codeBase</code> is not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: '#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified assembly and reflection context.\n  syntax:\n    content: public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The context used by the catalog to interpret types.\n    - id: definitionOrigin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The element used by diagnostics to identify the sources of parts.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assembly</code>, <code>definitionOrigin</code>, or <code>reflectionContext</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>assembly</code> was loaded in the reflection-only context.\"\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: '#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> class with the specified code base and reflection context.\n  syntax:\n    content: public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);\n    parameters:\n    - id: codeBase\n      type: System.String\n      description: A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref:System.Type> objects to add to the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The context used by the catalog to interpret types.\n    - id: definitionOrigin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The element used by diagnostics to identify the sources of parts.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  exceptions:\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: \"<code>codeBase</code> is not a valid assembly.  \\n  \\n -or-  \\n  \\n Version 2.0 or later of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have path discovery permission.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: \"<code>codeBase</code> could not be loaded.  \\n  \\n -or-  \\n  \\n <code>codeBase</code> specified a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>codebase</code>, <code>definitionOrigin</code> or <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>codeBase</code> is not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly\n  id: Assembly\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: AssemblyCatalog.Assembly\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets the assembly whose attributed types are contained in the assembly catalog.\n  syntax:\n    content: public System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: The assembly whose attributed <xref:System.Type> objects are contained in the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref>.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AssemblyCatalog.Dispose(Boolean)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator\n  id: GetEnumerator\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: AssemblyCatalog.GetEnumerator()\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Returns an enumerator that iterates through the catalog.\n  syntax:\n    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}\n      description: An enumerator that can be used to iterate through the catalog.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: GetExports(ImportDefinition)\n  nameWithType: AssemblyCatalog.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a collection of exports that match the conditions specified by the import definition.\n  syntax:\n    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: Conditions that specify which exports to match.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}\n      description: A collection of exports that match the conditions specified by <code>definition</code>.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName\n  id: System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName\n  isEii: true\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets the display name of the <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.\n  syntax:\n    content: string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }\n    return:\n      type: System.String\n      description: A string that represents the type and assembly of this <xref href=\"System.ComponentModel.Composition.Hosting.AssemblyCatalog\"></xref> object.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin\n  id: System#ComponentModel#Composition#Primitives#ICompositionElement#Origin\n  isEii: true\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets the composition element that this element originated from.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.\n  syntax:\n    content: System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }\n    return:\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: Always <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString\n  id: ToString\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AssemblyCatalog.ToString()\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a string representation of the assembly catalog.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A representation of the assembly catalog.\n  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.BadImageFormatException\n  isExternal: true\n  name: System.BadImageFormatException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.IO.FileLoadException\n  isExternal: true\n  name: System.IO.FileLoadException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IO.FileNotFoundException\n  isExternal: true\n  name: System.IO.FileNotFoundException\n- uid: System.IO.PathTooLongException\n  isExternal: true\n  name: System.IO.PathTooLongException\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(Assembly)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(String)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(Assembly,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ICompositionElement\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ICompositionElement\n  nameWithType: ICompositionElement\n  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(Assembly,ReflectionContext)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext)\n- uid: System.Reflection.ReflectionContext\n  parent: System.Reflection\n  isExternal: true\n  name: ReflectionContext\n  nameWithType: ReflectionContext\n  fullName: System.Reflection.ReflectionContext\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(String,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ICompositionElement)\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(String,ReflectionContext)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ReflectionContext)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ReflectionContext)\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly,ReflectionContext,ICompositionElement)\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n  nameWithType: AssemblyCatalog.AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String,ReflectionContext,ICompositionElement)\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: Assembly\n  nameWithType: AssemblyCatalog.Assembly\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AssemblyCatalog.Dispose(Boolean)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: AssemblyCatalog.GetEnumerator()\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<ComposablePartDefinition>\n  nameWithType: IEnumerator<ComposablePartDefinition>\n  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n    name: ComposablePartDefinition\n    nameWithType: ComposablePartDefinition\n    fullName: ComposablePartDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: GetExports(ImportDefinition)\n  nameWithType: AssemblyCatalog.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(ImportDefinition)\n- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>\n  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>\n  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Tuple`2\n    name: Tuple\n    nameWithType: Tuple\n    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n    name: ComposablePartDefinition\n    nameWithType: ComposablePartDefinition\n    fullName: ComposablePartDefinition\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: ExportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: ToString()\n  nameWithType: AssemblyCatalog.ToString()\n  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString()\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: AssemblyCatalog\n  nameWithType: AssemblyCatalog.AssemblyCatalog\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: Assembly\n  nameWithType: AssemblyCatalog.Assembly\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: Dispose\n  nameWithType: AssemblyCatalog.Dispose\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: AssemblyCatalog.GetEnumerator\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: GetExports\n  nameWithType: AssemblyCatalog.GetExports\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin\n- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString*\n  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog\n  isExternal: false\n  name: ToString\n  nameWithType: AssemblyCatalog.ToString\n"}