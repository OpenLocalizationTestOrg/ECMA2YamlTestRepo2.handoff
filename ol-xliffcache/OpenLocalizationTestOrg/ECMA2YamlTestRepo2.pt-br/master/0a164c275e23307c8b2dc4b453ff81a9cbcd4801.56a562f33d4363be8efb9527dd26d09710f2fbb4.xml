{"nodes":[{"pos":[3226,3280],"content":"Represents a control that contains audio and/or video.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a control that contains audio and/or video.","pos":[0,54]}]},{"pos":[3293,5162],"content":"When distributing media with your application, you cannot use a media file as a project resource. In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.       MediaElement can be used in two different modes, depending on what is driving the control: independent mode or clock mode. When used in the independent mode, the MediaElement is analogous to an image, and <xref:System.Windows.Controls.MediaElement.Source%2A> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] can be directly specified. In clock mode, the MediaElement can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the timing tree. For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md).       For an example of controlling a MediaElement in independent mode, see [How to: Control a MediaElement (Play, Pause, Stop, Volume, and Speed)](~/add/includes/ajax-current-ext-md.md).       Until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised, the <xref:System.Windows.FrameworkElement.ActualWidth%2A> and <xref:System.Windows.FrameworkElement.ActualHeight%2A> of the control will report as zero as the media content is used to determine the final size and location of the control. For audio only content, these properties will always be zero.       For a fixed size control, the <xref:System.Windows.FrameworkElement.Width%2A> and/or <xref:System.Windows.FrameworkElement.Height%2A> properties can be set. However, to preserve the media's aspect ratio, set the <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A> properties but not both.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When distributing media with your application, you cannot use a media file as a project resource.","pos":[0,97]},{"content":"In your project file, you must instead set the media type to <ph id=\"ph1\">`Content`</ph> and set <ph id=\"ph2\">`CopyToOutputDirectory`</ph> to <ph id=\"ph3\">`PreserveNewest`</ph> or <ph id=\"ph4\">`Always`</ph>.","pos":[98,233],"source":" In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`."},{"content":"MediaElement can be used in two different modes, depending on what is driving the control: independent mode or clock mode.","pos":[240,362]},{"content":"When used in the independent mode, the MediaElement is analogous to an image, and &lt;xref:System.Windows.Controls.MediaElement.Source%2A&gt; <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> can be directly specified.","pos":[363,589],"source":" When used in the independent mode, the MediaElement is analogous to an image, and <xref:System.Windows.Controls.MediaElement.Source%2A> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] can be directly specified."},{"content":"In clock mode, the MediaElement can be thought of as a target for an animation, and thus it will have corresponding &lt;xref:System.Windows.Media.Animation.Timeline&gt; and &lt;xref:System.Windows.Media.Animation.Clock&gt; entries in the timing tree.","pos":[590,828],"source":" In clock mode, the MediaElement can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the timing tree."},{"content":"For more information on media modes, see the <bpt id=\"p1\">[</bpt>Multimedia Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[829,935],"source":" For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For an example of controlling a MediaElement in independent mode, see <bpt id=\"p1\">[</bpt>How to: Control a MediaElement (Play, Pause, Stop, Volume, and Speed)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[942,1123],"source":"       For an example of controlling a MediaElement in independent mode, see [How to: Control a MediaElement (Play, Pause, Stop, Volume, and Speed)](~/add/includes/ajax-current-ext-md.md)."},{"content":"Until the &lt;xref:System.Windows.Controls.MediaElement.MediaOpened&gt; event has been raised, the &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; of the control will report as zero as the media content is used to determine the final size and location of the control.","pos":[1130,1456],"source":"       Until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised, the <xref:System.Windows.FrameworkElement.ActualWidth%2A> and <xref:System.Windows.FrameworkElement.ActualHeight%2A> of the control will report as zero as the media content is used to determine the final size and location of the control."},{"content":"For audio only content, these properties will always be zero.","pos":[1457,1518]},{"content":"For a fixed size control, the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; and/or &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; properties can be set.","pos":[1525,1681],"source":"       For a fixed size control, the <xref:System.Windows.FrameworkElement.Width%2A> and/or <xref:System.Windows.FrameworkElement.Height%2A> properties can be set."},{"content":"However, to preserve the media's aspect ratio, set the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; or &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; properties but not both.","pos":[1682,1861],"source":" However, to preserve the media's aspect ratio, set the <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A> properties but not both."}]},{"pos":[40694,40793],"content":"Instantiates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Instantiates a new instance of the <xref href=\"System.Windows.Controls.MediaElement\"></xref> class."},{"pos":[41402,41489],"content":"Arranges and sizes a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Arranges and sizes a <xref href=\"System.Windows.Controls.MediaElement\"></xref> control."},{"pos":[41688,41721],"content":"Size used to arrange the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Size used to arrange the control.","pos":[0,33]}]},{"pos":[41785,41805],"content":"Size of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Size of the control.","pos":[0,20]}]},{"pos":[42260,42307],"content":"Gets or sets a ratio of volume across speakers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a ratio of volume across speakers.","pos":[0,47]}]},{"pos":[42320,42665],"content":"A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.      <a name=\"dependencyPropertyInfo_Balance\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.BalanceProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.","pos":[0,105]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Balance\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.BalanceProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[111,335],"source":"<a name=\"dependencyPropertyInfo_Balance\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.BalanceProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[42783,42867],"content":"The ratio of volume across speakers in the range between -1 and 1. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ratio of volume across speakers in the range between -1 and 1. The default is 0.","pos":[0,84],"nodes":[{"content":"The ratio of volume across speakers in the range between -1 and 1.","pos":[0,66]},{"content":"The default is 0.","pos":[67,84]}]}]},{"pos":[43351,43439],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.Balance*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.Balance*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.Balance*> dependency property."}]},{"pos":[43614,43626],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44047,44085],"content":"Occurs when media buffering has ended.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when media buffering has ended.","pos":[0,38]}]},{"pos":[44098,44369],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_BufferingEnded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.BufferingEndedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_BufferingEnded\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.BufferingEndedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[44534,44546],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44992,45093],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.BufferingEnded\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.BufferingEnded\"></xref> routed event."},{"pos":[45258,45270],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45709,45779],"content":"Gets a value that indicates the percentage of buffering progress made.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates the percentage of buffering progress made.","pos":[0,70]}]},{"pos":[45901,45991],"content":"The percentage of buffering completed for streaming content. The value ranges from 0 to 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The percentage of buffering completed for streaming content. The value ranges from 0 to 1.","pos":[0,90],"nodes":[{"content":"The percentage of buffering completed for streaming content.","pos":[0,60]},{"content":"The value ranges from 0 to 1.","pos":[61,90]}]}]},{"pos":[46490,46528],"content":"Occurs when media buffering has begun.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when media buffering has begun.","pos":[0,38]}]},{"pos":[46541,46816],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_BufferingStarted\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.BufferingStartedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_BufferingStarted\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.BufferingStartedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[46983,46995],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47451,47554],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.BufferingStarted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.BufferingStarted\"></xref> routed event."},{"pos":[47721,47733],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48127,48183],"content":"Gets a value indicating whether the media can be paused.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the media can be paused.","pos":[0,56]}]},{"pos":[48295,48458],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the media can be paused; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media can be paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[48896,49024],"content":"Gets or sets the clock associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaTimeline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that controls media playback.","needQuote":true,"needEscape":true,"source":"Gets or sets the clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> that controls media playback."},{"pos":[49036,49292],"content":"Setting this property puts the media element into a mode in which it utilizes the timing engine. Any media that was previously playing is stopped and the [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] associated with the new clock is opened.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property puts the media element into a mode in which it utilizes the timing engine.","pos":[0,96]},{"content":"Any media that was previously playing is stopped and the <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> associated with the new clock is opened.","pos":[97,256],"source":" Any media that was previously playing is stopped and the [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] associated with the new clock is opened."}]},{"pos":[49450,49646],"content":"A clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> that controls media playback. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A clock associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaTimeline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that controls media playback.","pos":[0,113],"source":"A clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> that controls media playback."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[114,196],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50085,50102],"content":"Closes the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the media.","pos":[0,17]}]},{"pos":[50656,50763],"content":"Gets a percentage value indicating the amount of download completed for content located on a remote server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a percentage value indicating the amount of download completed for content located on a remote server.","pos":[0,107]}]},{"pos":[50884,51040],"content":"A percentage value indicating the amount of download completed for content located on a remote server. The value ranges from 0 to 1. The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A percentage value indicating the amount of download completed for content located on a remote server. The value ranges from 0 to 1. The default value is 0.","pos":[0,156],"nodes":[{"content":"A percentage value indicating the amount of download completed for content located on a remote server.","pos":[0,102]},{"content":"The value ranges from 0 to 1.","pos":[103,132]},{"content":"The default value is 0.","pos":[133,156]}]}]},{"pos":[51501,51553],"content":"Gets a value indicating whether the media has audio.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the media has audio.","pos":[0,52]}]},{"pos":[51665,51824],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the media has audio; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media has audio; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52277,52329],"content":"Gets a value indicating whether the media has video.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the media has video.","pos":[0,52]}]},{"pos":[52441,52600],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the media has video; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media has video; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[53068,53122],"content":"Get a value indicating whether the media is buffering.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get a value indicating whether the media is buffering.","pos":[0,54]}]},{"pos":[53237,53399],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the media is buffering; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media is buffering; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[53850,53909],"content":"Gets or sets a value indicating whether the audio is muted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the audio is muted.","pos":[0,59]}]},{"pos":[53922,54154],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsMuted\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.IsMutedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_IsMuted\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.IsMutedProperty>|   |Metadata properties set to `true`|None|"},{"pos":[54271,54504],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if audio is muted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if audio is muted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,154],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if audio is muted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[155,233],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[54988,55076],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.IsMuted*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.IsMuted*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.IsMuted*> dependency property."}]},{"pos":[55251,55263],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55687,55788],"content":"Gets or sets the load behavior <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the media.","needQuote":true,"needEscape":true,"source":"Gets or sets the load behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media."},{"pos":[55801,56347],"content":"LoadedBehavior must be set to <xref:System.Windows.Controls.MediaState> in order to interactively control media with the <xref:System.Windows.Controls.MediaElement.Play%2A>, <xref:System.Windows.Controls.MediaElement.Pause%2A>, and <xref:System.Windows.Controls.MediaElement.Stop%2A> methods.      <a name=\"dependencyPropertyInfo_LoadedBehavior\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.LoadedBehaviorProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"LoadedBehavior must be set to &lt;xref:System.Windows.Controls.MediaState&gt; in order to interactively control media with the &lt;xref:System.Windows.Controls.MediaElement.Play%2A&gt;, &lt;xref:System.Windows.Controls.MediaElement.Pause%2A&gt;, and &lt;xref:System.Windows.Controls.MediaElement.Stop%2A&gt; methods.","pos":[0,292],"source":"LoadedBehavior must be set to <xref:System.Windows.Controls.MediaState> in order to interactively control media with the <xref:System.Windows.Controls.MediaElement.Play%2A>, <xref:System.Windows.Controls.MediaElement.Pause%2A>, and <xref:System.Windows.Controls.MediaElement.Stop%2A> methods."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_LoadedBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.LoadedBehaviorProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[298,536],"source":"<a name=\"dependencyPropertyInfo_LoadedBehavior\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.LoadedBehaviorProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[56521,56691],"content":"The load behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> set for the media. The default value is <xref href=\"System.Windows.Controls.MediaState\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The load behavior <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> set for the media.","pos":[0,92],"source":"The load behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> set for the media."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[93,170],"source":" The default value is <xref href=\"System.Windows.Controls.MediaState\"></xref>."}]},{"pos":[57217,57312],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.LoadedBehavior*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.LoadedBehavior*&gt; dependency property.","pos":[0,95],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.LoadedBehavior*> dependency property."}]},{"pos":[57494,57506],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57993,58230],"content":"Updates the <xref:System.Windows.UIElement.DesiredSize*> of the <xref href=\"System.Windows.Controls.MediaElement\"></xref>. This method is called by a parent <xref href=\"System.Windows.UIElement\"></xref>. This is the first pass of layout.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the &lt;xref:System.Windows.UIElement.DesiredSize*&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,122],"source":"Updates the <xref:System.Windows.UIElement.DesiredSize*> of the <xref href=\"System.Windows.Controls.MediaElement\"></xref>."},{"content":"This method is called by a parent <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[123,203],"source":" This method is called by a parent <xref href=\"System.Windows.UIElement\"></xref>."},{"content":"This is the first pass of layout.","pos":[204,237]}]},{"pos":[58437,58483],"content":"The upper limit the element should not exceed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The upper limit the element should not exceed.","pos":[0,46]}]},{"pos":[58547,58564],"content":"The desired size.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired size.","pos":[0,17]}]},{"pos":[59031,59063],"content":"Occurs when the media has ended.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the media has ended.","pos":[0,32]}]},{"pos":[59076,59339],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MediaEnded\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.MediaEndedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_MediaEnded\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.MediaEndedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[59500,59512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59938,60035],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.MediaEnded\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaEnded\"></xref> routed event."},{"pos":[60196,60208],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60614,60650],"content":"Occurs when an error is encountered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an error is encountered.","pos":[0,36]}]},{"pos":[60663,60986],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MediaFailed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.MediaFailedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt;, with constraint of &lt;xref:System.Windows.ExceptionRoutedEventArgs&gt;.|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_MediaFailed\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.MediaFailedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601>, with constraint of <xref:System.Windows.ExceptionRoutedEventArgs>.|"},{"pos":[61195,61207],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61638,61736],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.MediaFailed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaFailed\"></xref> routed event."},{"pos":[61898,61910],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62316,62355],"content":"Occurs when media loading has finished.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when media loading has finished.","pos":[0,39]}]},{"pos":[62368,62633],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MediaOpened\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.MediaOpenedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_MediaOpened\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.MediaOpenedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[62795,62807],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63238,63336],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.MediaOpened\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaOpened\"></xref> routed event."},{"pos":[63498,63510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63939,63978],"content":"Gets the natural duration of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the natural duration of the media.","pos":[0,39]}]},{"pos":[63991,64215],"content":"The value returned is independent of <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>.       NaturalDuration is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value returned is independent of <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>.       NaturalDuration is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.","pos":[0,222],"nodes":[{"content":"The value returned is independent of &lt;xref:System.Windows.Controls.MediaElement.SpeedRatio%2A&gt;.","pos":[0,95],"source":"The value returned is independent of <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>."},{"content":"NaturalDuration is not accurate until the &lt;xref:System.Windows.Controls.MediaElement.MediaOpened&gt; event has been raised.","pos":[102,222],"source":"       NaturalDuration is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised."}]}]},{"pos":[64363,64397],"content":"The natural duration of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"The natural duration of the media.","pos":[0,34]}]},{"pos":[64907,64962],"content":"Gets the height of the video associated with the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the height of the video associated with the media.","pos":[0,55]}]},{"pos":[64974,65097],"content":"NaturalVideoHeight is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"NaturalVideoHeight is not accurate until the &lt;xref:System.Windows.Controls.MediaElement.MediaOpened&gt; event has been raised.","pos":[0,123],"source":"NaturalVideoHeight is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised."}]},{"pos":[65216,65296],"content":"The height of the video associated with the media. Audio files will return zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the video associated with the media. Audio files will return zero.","pos":[0,80],"nodes":[{"content":"The height of the video associated with the media.","pos":[0,50]},{"content":"Audio files will return zero.","pos":[51,80]}]}]},{"pos":[65804,65858],"content":"Gets the width of the video associated with the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the width of the video associated with the media.","pos":[0,54]}]},{"pos":[65870,65992],"content":"NaturalVideoWidth is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"NaturalVideoWidth is not accurate until the &lt;xref:System.Windows.Controls.MediaElement.MediaOpened&gt; event has been raised.","pos":[0,122],"source":"NaturalVideoWidth is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised."}]},{"pos":[66110,66159],"content":"The width of the video associated with the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the video associated with the media.","pos":[0,49]}]},{"pos":[66695,66860],"content":"Creates and returns an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.MediaElement\"></xref>."},{"pos":[67086,67224],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> for this <xref href=\"System.Windows.Controls.MediaElement\"></xref>."},{"pos":[67811,67992],"content":"Draws the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object during the render pass of a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Draws the content of a <xref href=\"System.Windows.Media.DrawingContext\"></xref> object during the render pass of a <xref href=\"System.Windows.Controls.MediaElement\"></xref> control."},{"pos":[68211,68280],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to draw."},{"pos":[68722,68759],"content":"Pauses media at the current position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pauses media at the current position.","pos":[0,37]}]},{"pos":[68772,69348],"content":"This method pauses the media if the media is currently running. The <xref:System.Windows.Controls.MediaElement.Play%2A> method can be used to resume.       This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method pauses the media if the media is currently running.","pos":[0,63]},{"content":"The &lt;xref:System.Windows.Controls.MediaElement.Play%2A&gt; method can be used to resume.","pos":[64,149],"source":" The <xref:System.Windows.Controls.MediaElement.Play%2A> method can be used to resume."},{"content":"This method can be used only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[156,266],"source":"       This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[267,404],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."},{"content":"This method has an effect only if the &lt;xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A&gt; property is set to &lt;xref:System.Windows.Controls.MediaState&gt;.","pos":[411,572],"source":"       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>."}]},{"pos":[69594,69726],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[70087,70125],"content":"Plays media from the current position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Plays media from the current position.","pos":[0,38]}]},{"pos":[70138,70721],"content":"This method will begin the media if it is not currently active or resume media if it is paused. This method has no effect if the media is currently running.       This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method will begin the media if it is not currently active or resume media if it is paused.","pos":[0,95]},{"content":"This method has no effect if the media is currently running.","pos":[96,156]},{"content":"This method can be used only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[163,273],"source":"       This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[274,411],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."},{"content":"This method has an effect only if the &lt;xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A&gt; property is set to &lt;xref:System.Windows.Controls.MediaState&gt;.","pos":[418,579],"source":"       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>."}]},{"pos":[70965,71097],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[71474,71554],"content":"Gets or sets the current position of progress through the media's playback time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current position of progress through the media's playback time.","pos":[0,80]}]},{"pos":[71567,72217],"content":"Setting this property can enable you to jump to different points in playback (also known as seeking). Not all media types allow seek operations. The <xref:System.Windows.Controls.MediaElement.MediaFailed> event will fire if the media source does not allow seeking.       This property has no effect until after the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has occurred.       This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property can enable you to jump to different points in playback (also known as seeking).","pos":[0,101]},{"content":"Not all media types allow seek operations.","pos":[102,144]},{"content":"The &lt;xref:System.Windows.Controls.MediaElement.MediaFailed&gt; event will fire if the media source does not allow seeking.","pos":[145,264],"source":" The <xref:System.Windows.Controls.MediaElement.MediaFailed> event will fire if the media source does not allow seeking."},{"content":"This property has no effect until after the &lt;xref:System.Windows.Controls.MediaElement.MediaOpened&gt; event has occurred.","pos":[271,390],"source":"       This property has no effect until after the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has occurred."},{"content":"This property can be set only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[397,508],"source":"       This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[509,646],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."}]},{"pos":[72340,72417],"content":"The amount of time since the beginning of the media. The default is 00:00:00.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of time since the beginning of the media. The default is 00:00:00.","pos":[0,77],"nodes":[{"content":"The amount of time since the beginning of the media.","pos":[0,52]},{"content":"The default is 00:00:00.","pos":[53,77]}]}]},{"pos":[72601,72733],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[73132,73189],"content":"Occurs when a script command is encountered in the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a script command is encountered in the media.","pos":[0,57]}]},{"pos":[73202,73533],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_ScriptCommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.ScriptCommandEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler&gt;, with constraint of &lt;xref:System.Windows.MediaScriptCommandRoutedEventArgs&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_ScriptCommand\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.ScriptCommandEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler>, with constraint of <xref:System.Windows.MediaScriptCommandRoutedEventArgs>|"},{"pos":[73762,73774],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74215,74315],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement.ScriptCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.MediaElement.ScriptCommand\"></xref> routed event."},{"pos":[74479,74491],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74925,75083],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will update frames for seek operations while paused.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.MediaElement\"></xref> will update frames for seek operations while paused."},{"pos":[75096,75598],"content":"When set to `false`, seeking to a specific location will only update the displayed frame if media is playing.       Setting ScrubbingEnabled to `true` can incur some performance costs, especially when interactively controlling media playback.      <a name=\"dependencyPropertyInfo_ScrubbingEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When set to <ph id=\"ph1\">`false`</ph>, seeking to a specific location will only update the displayed frame if media is playing.","pos":[0,109],"source":"When set to `false`, seeking to a specific location will only update the displayed frame if media is playing."},{"content":"Setting ScrubbingEnabled to <ph id=\"ph1\">`true`</ph> can incur some performance costs, especially when interactively controlling media playback.","pos":[116,242],"source":"       Setting ScrubbingEnabled to `true` can incur some performance costs, especially when interactively controlling media playback."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_ScrubbingEnabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[248,490],"source":"<a name=\"dependencyPropertyInfo_ScrubbingEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[75724,75974],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if frames are updated while paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if frames are updated while paused; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if frames are updated while paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,250],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[76512,76609],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.ScrubbingEnabled*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.ScrubbingEnabled*&gt; dependency property.","pos":[0,97],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.ScrubbingEnabled*> dependency property."}]},{"pos":[76793,76805],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77189,77282],"content":"Gets or sets a media source on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a media source on the <xref href=\"System.Windows.Controls.MediaElement\"></xref>."},{"pos":[77295,77978],"content":"Setting the value of this property causes the media to play.       This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.      <a name=\"dependencyPropertyInfo_Source\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.SourceProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting the value of this property causes the media to play.","pos":[0,60]},{"content":"This property can be set only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[67,178],"source":"       This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[179,316],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Source\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.SourceProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[322,671],"source":"<a name=\"dependencyPropertyInfo_Source\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.SourceProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[78089,78275],"content":"The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that specifies the source of the element. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> that specifies the source of the element.","pos":[0,109],"source":"The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that specifies the source of the element."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[110,186],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[78457,78589],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[78993,79080],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.Source*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.Source*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.Source*> dependency property."}]},{"pos":[79254,79266],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79670,79712],"content":"Gets or sets the speed ratio of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the speed ratio of the media.","pos":[0,42]}]},{"pos":[79725,80048],"content":"This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.       Audio playback may not occur unless the value of SpeedRatio is 1.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property can be set only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[0,111],"source":"This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[112,249],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."},{"content":"Audio playback may not occur unless the value of SpeedRatio is 1.","pos":[256,321]}]},{"pos":[80169,80421],"content":"The speed ratio of the media. The valid range is between 0 (zero) and infinity. Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback. Negative values are treated as 0. The default value is 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The speed ratio of the media. The valid range is between 0 (zero) and infinity. Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback. Negative values are treated as 0. The default value is 1.","pos":[0,252],"nodes":[{"content":"The speed ratio of the media.","pos":[0,29]},{"content":"The valid range is between 0 (zero) and infinity.","pos":[30,79]},{"content":"Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback.","pos":[80,194]},{"content":"Negative values are treated as 0.","pos":[195,228]},{"content":"The default value is 1.","pos":[229,252]}]}]},{"pos":[80607,80739],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[81100,81155],"content":"Stops and resets media to be played from the beginning.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops and resets media to be played from the beginning.","pos":[0,55]}]},{"pos":[81168,81586],"content":"This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be used only when the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is <ph id=\"ph1\">`null`</ph>.","pos":[0,110],"source":"This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`."},{"content":"When the &lt;xref:System.Windows.Controls.MediaElement.Clock%2A&gt; property is non-<ph id=\"ph1\">`null`</ph>, the timing engine controls media playback behavior.","pos":[111,248],"source":" When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior."},{"content":"This method has an effect only if the &lt;xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A&gt; property is set to &lt;xref:System.Windows.Controls.MediaState&gt;.","pos":[255,416],"source":"       This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>."}]},{"pos":[81830,81962],"content":"The &lt;xref:System.Windows.Controls.MediaElement.Clock*&gt; property is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[82334,82516],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Stretch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that describes how a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.MediaElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> fills the destination rectangle.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Windows.Media.Stretch\"></xref> value that describes how a <xref href=\"System.Windows.Controls.MediaElement\"></xref> fills the destination rectangle."},{"pos":[82529,83097],"content":"The following illustration demonstrates the different <xref:System.Windows.Media.Stretch> values.       ![Different TileBrush Stretch settings](~/add/media/img-mmgraphics-stretchenum.jpg \"Different TileBrush Stretch settings\")   Different gradient spread methods      <a name=\"dependencyPropertyInfo_Stretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.StretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following illustration demonstrates the different &lt;xref:System.Windows.Media.Stretch&gt; values.","pos":[0,97],"source":"The following illustration demonstrates the different <xref:System.Windows.Media.Stretch> values."},{"content":"<bpt id=\"p1\">![</bpt>Different TileBrush Stretch settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/img-mmgraphics-stretchenum.jpg \"</bpt>Different TileBrush Stretch settings<ept id=\"p2\">\")</ept>   Different gradient spread methods      <bpt id=\"p3\">&lt;a name=\"dependencyPropertyInfo_Stretch\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.StretchProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[104,553],"source":"![Different TileBrush Stretch settings](~/add/media/img-mmgraphics-stretchenum.jpg \"Different TileBrush Stretch settings\")   Different gradient spread methods      <a name=\"dependencyPropertyInfo_Stretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.StretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[83680,83787],"content":"The stretch value for the rendered media. The default is <xref href=\"System.Windows.Media.Stretch\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stretch value for the rendered media.","pos":[0,41]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Stretch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[42,107],"source":" The default is <xref href=\"System.Windows.Media.Stretch\"></xref>."}]},{"pos":[84279,84374],"content":"Gets or sets a value that determines the restrictions on scaling that are applied to the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines the restrictions on scaling that are applied to the image.","pos":[0,95]}]},{"pos":[84387,84698],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_StretchDirection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.StretchDirectionProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_StretchDirection\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.StretchDirectionProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"},{"pos":[85167,85309],"content":"The value that specifies the direction the element is stretched. The default is <xref href=\"System.Windows.Controls.StretchDirection\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value that specifies the direction the element is stretched.","pos":[0,64]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StretchDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[65,142],"source":" The default is <xref href=\"System.Windows.Controls.StretchDirection\"></xref>."}]},{"pos":[85847,85944],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.StretchDirection*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.StretchDirection*&gt; dependency property.","pos":[0,97],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.StretchDirection*> dependency property."}]},{"pos":[86128,86140],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[86566,86654],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.Stretch*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.Stretch*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.Stretch*> dependency property."}]},{"pos":[86829,86841],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87414,87586],"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[87724,87760],"content":"The base URI of the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URI of the current context.","pos":[0,36]}]},{"pos":[88286,88389],"content":"Gets or sets the unload behavior <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the media.","needQuote":true,"needEscape":true,"source":"Gets or sets the unload behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media."},{"pos":[88402,88652],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_UnloadedBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_UnloadedBehavior\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty>|   |Metadata properties set to `true`|None|"},{"pos":[88828,88918],"content":"The unload behavior <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.MediaState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the media.","needQuote":true,"needEscape":true,"source":"The unload behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media."},{"pos":[89456,89553],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.UnloadedBehavior*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.UnloadedBehavior*&gt; dependency property.","pos":[0,97],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.UnloadedBehavior*> dependency property."}]},{"pos":[89737,89749],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[90133,90165],"content":"Gets or sets the media's volume.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the media's volume.","pos":[0,32]}]},{"pos":[90178,90408],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Volume\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MediaElement.VolumeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_Volume\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.MediaElement.VolumeProperty>|   |Metadata properties set to `true`|None|"},{"pos":[90525,90610],"content":"The media's volume represented on a linear scale between 0 and 1. The default is 0.5.","needQuote":true,"needEscape":true,"nodes":[{"content":"The media's volume represented on a linear scale between 0 and 1. The default is 0.5.","pos":[0,85],"nodes":[{"content":"The media's volume represented on a linear scale between 0 and 1.","pos":[0,65]},{"content":"The default is 0.5.","pos":[66,85]}]}]},{"pos":[91088,91175],"content":"Identifies the <xref:System.Windows.Controls.MediaElement.Volume*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.MediaElement.Volume*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.MediaElement.Volume*> dependency property."}]},{"pos":[91349,91361],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.MediaElement\n  id: MediaElement\n  children:\n  - System.Windows.Controls.MediaElement.#ctor\n  - System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.MediaElement.Balance\n  - System.Windows.Controls.MediaElement.BalanceProperty\n  - System.Windows.Controls.MediaElement.BufferingEnded\n  - System.Windows.Controls.MediaElement.BufferingEndedEvent\n  - System.Windows.Controls.MediaElement.BufferingProgress\n  - System.Windows.Controls.MediaElement.BufferingStarted\n  - System.Windows.Controls.MediaElement.BufferingStartedEvent\n  - System.Windows.Controls.MediaElement.CanPause\n  - System.Windows.Controls.MediaElement.Clock\n  - System.Windows.Controls.MediaElement.Close\n  - System.Windows.Controls.MediaElement.DownloadProgress\n  - System.Windows.Controls.MediaElement.HasAudio\n  - System.Windows.Controls.MediaElement.HasVideo\n  - System.Windows.Controls.MediaElement.IsBuffering\n  - System.Windows.Controls.MediaElement.IsMuted\n  - System.Windows.Controls.MediaElement.IsMutedProperty\n  - System.Windows.Controls.MediaElement.LoadedBehavior\n  - System.Windows.Controls.MediaElement.LoadedBehaviorProperty\n  - System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.MediaElement.MediaEnded\n  - System.Windows.Controls.MediaElement.MediaEndedEvent\n  - System.Windows.Controls.MediaElement.MediaFailed\n  - System.Windows.Controls.MediaElement.MediaFailedEvent\n  - System.Windows.Controls.MediaElement.MediaOpened\n  - System.Windows.Controls.MediaElement.MediaOpenedEvent\n  - System.Windows.Controls.MediaElement.NaturalDuration\n  - System.Windows.Controls.MediaElement.NaturalVideoHeight\n  - System.Windows.Controls.MediaElement.NaturalVideoWidth\n  - System.Windows.Controls.MediaElement.OnCreateAutomationPeer\n  - System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.Controls.MediaElement.Pause\n  - System.Windows.Controls.MediaElement.Play\n  - System.Windows.Controls.MediaElement.Position\n  - System.Windows.Controls.MediaElement.ScriptCommand\n  - System.Windows.Controls.MediaElement.ScriptCommandEvent\n  - System.Windows.Controls.MediaElement.ScrubbingEnabled\n  - System.Windows.Controls.MediaElement.ScrubbingEnabledProperty\n  - System.Windows.Controls.MediaElement.Source\n  - System.Windows.Controls.MediaElement.SourceProperty\n  - System.Windows.Controls.MediaElement.SpeedRatio\n  - System.Windows.Controls.MediaElement.Stop\n  - System.Windows.Controls.MediaElement.Stretch\n  - System.Windows.Controls.MediaElement.StretchDirection\n  - System.Windows.Controls.MediaElement.StretchDirectionProperty\n  - System.Windows.Controls.MediaElement.StretchProperty\n  - System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri\n  - System.Windows.Controls.MediaElement.UnloadedBehavior\n  - System.Windows.Controls.MediaElement.UnloadedBehaviorProperty\n  - System.Windows.Controls.MediaElement.Volume\n  - System.Windows.Controls.MediaElement.VolumeProperty\n  langs:\n  - csharp\n  name: MediaElement\n  nameWithType: MediaElement\n  fullName: System.Windows.Controls.MediaElement\n  type: Class\n  summary: Represents a control that contains audio and/or video.\n  remarks: \"When distributing media with your application, you cannot use a media file as a project resource. In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.  \\n  \\n MediaElement can be used in two different modes, depending on what is driving the control: independent mode or clock mode. When used in the independent mode, the MediaElement is analogous to an image, and <xref:System.Windows.Controls.MediaElement.Source%2A> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] can be directly specified. In clock mode, the MediaElement can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the timing tree. For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For an example of controlling a MediaElement in independent mode, see [How to: Control a MediaElement (Play, Pause, Stop, Volume, and Speed)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised, the <xref:System.Windows.FrameworkElement.ActualWidth%2A> and <xref:System.Windows.FrameworkElement.ActualHeight%2A> of the control will report as zero as the media content is used to determine the final size and location of the control. For audio only content, these properties will always be zero.  \\n  \\n For a fixed size control, the <xref:System.Windows.FrameworkElement.Width%2A> and/or <xref:System.Windows.FrameworkElement.Height%2A> properties can be set. However, to preserve the media's aspect ratio, set the <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.Height%2A> properties but not both.\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]\n\n      public class MediaElement : System.Windows.FrameworkElement, System.Windows.Markup.IUriContext\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  implements:\n  - System.Windows.Markup.IUriContext\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.LogicalChildren\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaElement()\n  nameWithType: MediaElement.MediaElement()\n  fullName: System.Windows.Controls.MediaElement.MediaElement()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Instantiates a new instance of the <xref href=\"System.Windows.Controls.MediaElement\"></xref> class.\n  syntax:\n    content: public MediaElement ();\n    parameters: []\n  overload: System.Windows.Controls.MediaElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: MediaElement.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.MediaElement.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Arranges and sizes a <xref href=\"System.Windows.Controls.MediaElement\"></xref> control.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);\n    parameters:\n    - id: finalSize\n      type: System.Windows.Size\n      description: Size used to arrange the control.\n    return:\n      type: System.Windows.Size\n      description: Size of the control.\n  overload: System.Windows.Controls.MediaElement.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Balance\n  id: Balance\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Balance\n  nameWithType: MediaElement.Balance\n  fullName: System.Windows.Controls.MediaElement.Balance\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a ratio of volume across speakers.\n  remarks: \"A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Balance\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.BalanceProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Balance { get; set; }\n    return:\n      type: System.Double\n      description: The ratio of volume across speakers in the range between -1 and 1. The default is 0.\n  overload: System.Windows.Controls.MediaElement.Balance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BalanceProperty\n  id: BalanceProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BalanceProperty\n  nameWithType: MediaElement.BalanceProperty\n  fullName: System.Windows.Controls.MediaElement.BalanceProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.Balance*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BalanceProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BufferingEnded\n  id: BufferingEnded\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BufferingEnded\n  nameWithType: MediaElement.BufferingEnded\n  fullName: System.Windows.Controls.MediaElement.BufferingEnded\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when media buffering has ended.\n  remarks: \"<a name=\\\"routedEventInfo_BufferingEnded\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.BufferingEndedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler BufferingEnded;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BufferingEndedEvent\n  id: BufferingEndedEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BufferingEndedEvent\n  nameWithType: MediaElement.BufferingEndedEvent\n  fullName: System.Windows.Controls.MediaElement.BufferingEndedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.BufferingEnded\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent BufferingEndedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BufferingProgress\n  id: BufferingProgress\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BufferingProgress\n  nameWithType: MediaElement.BufferingProgress\n  fullName: System.Windows.Controls.MediaElement.BufferingProgress\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates the percentage of buffering progress made.\n  syntax:\n    content: public double BufferingProgress { get; }\n    return:\n      type: System.Double\n      description: The percentage of buffering completed for streaming content. The value ranges from 0 to 1.\n  overload: System.Windows.Controls.MediaElement.BufferingProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BufferingStarted\n  id: BufferingStarted\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BufferingStarted\n  nameWithType: MediaElement.BufferingStarted\n  fullName: System.Windows.Controls.MediaElement.BufferingStarted\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when media buffering has begun.\n  remarks: \"<a name=\\\"routedEventInfo_BufferingStarted\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.BufferingStartedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler BufferingStarted;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.BufferingStartedEvent\n  id: BufferingStartedEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: BufferingStartedEvent\n  nameWithType: MediaElement.BufferingStartedEvent\n  fullName: System.Windows.Controls.MediaElement.BufferingStartedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.BufferingStarted\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent BufferingStartedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.CanPause\n  id: CanPause\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: CanPause\n  nameWithType: MediaElement.CanPause\n  fullName: System.Windows.Controls.MediaElement.CanPause\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value indicating whether the media can be paused.\n  syntax:\n    content: public bool CanPause { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media can be paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.CanPause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Clock\n  id: Clock\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Clock\n  nameWithType: MediaElement.Clock\n  fullName: System.Windows.Controls.MediaElement.Clock\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> that controls media playback.\n  remarks: Setting this property puts the media element into a mode in which it utilizes the timing engine. Any media that was previously playing is stopped and the [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] associated with the new clock is opened.\n  syntax:\n    content: public System.Windows.Media.MediaClock Clock { get; set; }\n    return:\n      type: System.Windows.Media.MediaClock\n      description: A clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> that controls media playback. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.Clock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Close\n  id: Close\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: MediaElement.Close()\n  fullName: System.Windows.Controls.MediaElement.Close()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Closes the media.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Windows.Controls.MediaElement.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.DownloadProgress\n  id: DownloadProgress\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: DownloadProgress\n  nameWithType: MediaElement.DownloadProgress\n  fullName: System.Windows.Controls.MediaElement.DownloadProgress\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a percentage value indicating the amount of download completed for content located on a remote server.\n  syntax:\n    content: public double DownloadProgress { get; }\n    return:\n      type: System.Double\n      description: A percentage value indicating the amount of download completed for content located on a remote server. The value ranges from 0 to 1. The default value is 0.\n  overload: System.Windows.Controls.MediaElement.DownloadProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.HasAudio\n  id: HasAudio\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: HasAudio\n  nameWithType: MediaElement.HasAudio\n  fullName: System.Windows.Controls.MediaElement.HasAudio\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value indicating whether the media has audio.\n  syntax:\n    content: public bool HasAudio { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media has audio; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.HasAudio*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.HasVideo\n  id: HasVideo\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: HasVideo\n  nameWithType: MediaElement.HasVideo\n  fullName: System.Windows.Controls.MediaElement.HasVideo\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value indicating whether the media has video.\n  syntax:\n    content: public bool HasVideo { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media has video; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.HasVideo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.IsBuffering\n  id: IsBuffering\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: IsBuffering\n  nameWithType: MediaElement.IsBuffering\n  fullName: System.Windows.Controls.MediaElement.IsBuffering\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Get a value indicating whether the media is buffering.\n  syntax:\n    content: public bool IsBuffering { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the media is buffering; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.IsBuffering*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.IsMuted\n  id: IsMuted\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: IsMuted\n  nameWithType: MediaElement.IsMuted\n  fullName: System.Windows.Controls.MediaElement.IsMuted\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value indicating whether the audio is muted.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_IsMuted\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.IsMutedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsMuted { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if audio is muted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.IsMuted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.IsMutedProperty\n  id: IsMutedProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: IsMutedProperty\n  nameWithType: MediaElement.IsMutedProperty\n  fullName: System.Windows.Controls.MediaElement.IsMutedProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.IsMuted*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsMutedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.LoadedBehavior\n  id: LoadedBehavior\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: LoadedBehavior\n  nameWithType: MediaElement.LoadedBehavior\n  fullName: System.Windows.Controls.MediaElement.LoadedBehavior\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the load behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media.\n  remarks: \"LoadedBehavior must be set to <xref:System.Windows.Controls.MediaState> in order to interactively control media with the <xref:System.Windows.Controls.MediaElement.Play%2A>, <xref:System.Windows.Controls.MediaElement.Pause%2A>, and <xref:System.Windows.Controls.MediaElement.Stop%2A> methods.  \\n  \\n<a name=\\\"dependencyPropertyInfo_LoadedBehavior\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.LoadedBehaviorProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Controls.MediaState LoadedBehavior { get; set; }\n    return:\n      type: System.Windows.Controls.MediaState\n      description: The load behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> set for the media. The default value is <xref href=\"System.Windows.Controls.MediaState\"></xref>.\n  overload: System.Windows.Controls.MediaElement.LoadedBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.LoadedBehaviorProperty\n  id: LoadedBehaviorProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: LoadedBehaviorProperty\n  nameWithType: MediaElement.LoadedBehaviorProperty\n  fullName: System.Windows.Controls.MediaElement.LoadedBehaviorProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.LoadedBehavior*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LoadedBehaviorProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: MediaElement.MeasureOverride(Size)\n  fullName: System.Windows.Controls.MediaElement.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Updates the <xref:System.Windows.UIElement.DesiredSize*> of the <xref href=\"System.Windows.Controls.MediaElement\"></xref>. This method is called by a parent <xref href=\"System.Windows.UIElement\"></xref>. This is the first pass of layout.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);\n    parameters:\n    - id: availableSize\n      type: System.Windows.Size\n      description: The upper limit the element should not exceed.\n    return:\n      type: System.Windows.Size\n      description: The desired size.\n  overload: System.Windows.Controls.MediaElement.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaEnded\n  id: MediaEnded\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaEnded\n  nameWithType: MediaElement.MediaEnded\n  fullName: System.Windows.Controls.MediaElement.MediaEnded\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the media has ended.\n  remarks: \"<a name=\\\"routedEventInfo_MediaEnded\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.MediaEndedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler MediaEnded;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaEndedEvent\n  id: MediaEndedEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaEndedEvent\n  nameWithType: MediaElement.MediaEndedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaEndedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaEnded\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MediaEndedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaFailed\n  id: MediaFailed\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaFailed\n  nameWithType: MediaElement.MediaFailed\n  fullName: System.Windows.Controls.MediaElement.MediaFailed\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when an error is encountered.\n  remarks: \"<a name=\\\"routedEventInfo_MediaFailed\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.MediaFailedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601>, with constraint of <xref:System.Windows.ExceptionRoutedEventArgs>.|\"\n  syntax:\n    content: public event EventHandler<System.Windows.ExceptionRoutedEventArgs> MediaFailed;\n    return:\n      type: System.EventHandler{System.Windows.ExceptionRoutedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaFailedEvent\n  id: MediaFailedEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaFailedEvent\n  nameWithType: MediaElement.MediaFailedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaFailedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaFailed\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MediaFailedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaOpened\n  id: MediaOpened\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaOpened\n  nameWithType: MediaElement.MediaOpened\n  fullName: System.Windows.Controls.MediaElement.MediaOpened\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when media loading has finished.\n  remarks: \"<a name=\\\"routedEventInfo_MediaOpened\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.MediaOpenedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler MediaOpened;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.MediaOpenedEvent\n  id: MediaOpenedEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: MediaOpenedEvent\n  nameWithType: MediaElement.MediaOpenedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaOpenedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.MediaOpened\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MediaOpenedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.NaturalDuration\n  id: NaturalDuration\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: NaturalDuration\n  nameWithType: MediaElement.NaturalDuration\n  fullName: System.Windows.Controls.MediaElement.NaturalDuration\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the natural duration of the media.\n  remarks: \"The value returned is independent of <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>.  \\n  \\n NaturalDuration is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.\"\n  syntax:\n    content: public System.Windows.Duration NaturalDuration { get; }\n    return:\n      type: System.Windows.Duration\n      description: The natural duration of the media.\n  overload: System.Windows.Controls.MediaElement.NaturalDuration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.NaturalVideoHeight\n  id: NaturalVideoHeight\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: NaturalVideoHeight\n  nameWithType: MediaElement.NaturalVideoHeight\n  fullName: System.Windows.Controls.MediaElement.NaturalVideoHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the height of the video associated with the media.\n  remarks: NaturalVideoHeight is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.\n  syntax:\n    content: public int NaturalVideoHeight { get; }\n    return:\n      type: System.Int32\n      description: The height of the video associated with the media. Audio files will return zero.\n  overload: System.Windows.Controls.MediaElement.NaturalVideoHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.NaturalVideoWidth\n  id: NaturalVideoWidth\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: NaturalVideoWidth\n  nameWithType: MediaElement.NaturalVideoWidth\n  fullName: System.Windows.Controls.MediaElement.NaturalVideoWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the width of the video associated with the media.\n  remarks: NaturalVideoWidth is not accurate until the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has been raised.\n  syntax:\n    content: public int NaturalVideoWidth { get; }\n    return:\n      type: System.Int32\n      description: The width of the video associated with the media.\n  overload: System.Windows.Controls.MediaElement.NaturalVideoWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: MediaElement.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.MediaElement.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.MediaElement\"></xref>.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> for this <xref href=\"System.Windows.Controls.MediaElement\"></xref>.\n  overload: System.Windows.Controls.MediaElement.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)\n  id: OnRender(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: OnRender(DrawingContext)\n  nameWithType: MediaElement.OnRender(DrawingContext)\n  fullName: System.Windows.Controls.MediaElement.OnRender(DrawingContext)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Draws the content of a <xref href=\"System.Windows.Media.DrawingContext\"></xref> object during the render pass of a <xref href=\"System.Windows.Controls.MediaElement\"></xref> control.\n  syntax:\n    content: protected override void OnRender (System.Windows.Media.DrawingContext drawingContext);\n    parameters:\n    - id: drawingContext\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to draw.\n  overload: System.Windows.Controls.MediaElement.OnRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Pause\n  id: Pause\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Pause()\n  nameWithType: MediaElement.Pause()\n  fullName: System.Windows.Controls.MediaElement.Pause()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Pauses media at the current position.\n  remarks: \"This method pauses the media if the media is currently running. The <xref:System.Windows.Controls.MediaElement.Play%2A> method can be used to resume.  \\n  \\n This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.  \\n  \\n This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.\"\n  syntax:\n    content: public void Pause ();\n    parameters: []\n  overload: System.Windows.Controls.MediaElement.Pause*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Play\n  id: Play\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Play()\n  nameWithType: MediaElement.Play()\n  fullName: System.Windows.Controls.MediaElement.Play()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Plays media from the current position.\n  remarks: \"This method will begin the media if it is not currently active or resume media if it is paused. This method has no effect if the media is currently running.  \\n  \\n This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.  \\n  \\n This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.\"\n  syntax:\n    content: public void Play ();\n    parameters: []\n  overload: System.Windows.Controls.MediaElement.Play*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Position\n  id: Position\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Position\n  nameWithType: MediaElement.Position\n  fullName: System.Windows.Controls.MediaElement.Position\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the current position of progress through the media's playback time.\n  remarks: \"Setting this property can enable you to jump to different points in playback (also known as seeking). Not all media types allow seek operations. The <xref:System.Windows.Controls.MediaElement.MediaFailed> event will fire if the media source does not allow seeking.  \\n  \\n This property has no effect until after the <xref:System.Windows.Controls.MediaElement.MediaOpened> event has occurred.  \\n  \\n This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.\"\n  syntax:\n    content: public TimeSpan Position { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The amount of time since the beginning of the media. The default is 00:00:00.\n  overload: System.Windows.Controls.MediaElement.Position*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.ScriptCommand\n  id: ScriptCommand\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: ScriptCommand\n  nameWithType: MediaElement.ScriptCommand\n  fullName: System.Windows.Controls.MediaElement.ScriptCommand\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a script command is encountered in the media.\n  remarks: \"<a name=\\\"routedEventInfo_ScriptCommand\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.ScriptCommandEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler>, with constraint of <xref:System.Windows.MediaScriptCommandRoutedEventArgs>|\"\n  syntax:\n    content: public event EventHandler<System.Windows.MediaScriptCommandRoutedEventArgs> ScriptCommand;\n    return:\n      type: System.EventHandler{System.Windows.MediaScriptCommandRoutedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.ScriptCommandEvent\n  id: ScriptCommandEvent\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: ScriptCommandEvent\n  nameWithType: MediaElement.ScriptCommandEvent\n  fullName: System.Windows.Controls.MediaElement.ScriptCommandEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.MediaElement.ScriptCommand\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ScriptCommandEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.ScrubbingEnabled\n  id: ScrubbingEnabled\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: ScrubbingEnabled\n  nameWithType: MediaElement.ScrubbingEnabled\n  fullName: System.Windows.Controls.MediaElement.ScrubbingEnabled\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.MediaElement\"></xref> will update frames for seek operations while paused.\n  remarks: \"When set to `false`, seeking to a specific location will only update the displayed frame if media is playing.  \\n  \\n Setting ScrubbingEnabled to `true` can incur some performance costs, especially when interactively controlling media playback.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ScrubbingEnabled\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool ScrubbingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if frames are updated while paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.ScrubbingEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.ScrubbingEnabledProperty\n  id: ScrubbingEnabledProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: ScrubbingEnabledProperty\n  nameWithType: MediaElement.ScrubbingEnabledProperty\n  fullName: System.Windows.Controls.MediaElement.ScrubbingEnabledProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.ScrubbingEnabled*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ScrubbingEnabledProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Source\n  id: Source\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Source\n  nameWithType: MediaElement.Source\n  fullName: System.Windows.Controls.MediaElement.Source\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a media source on the <xref href=\"System.Windows.Controls.MediaElement\"></xref>.\n  remarks: \"Setting the value of this property causes the media to play.  \\n  \\n This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Source\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.SourceProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  syntax:\n    content: public Uri Source { get; set; }\n    return:\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that specifies the source of the element. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.MediaElement.Source*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.SourceProperty\n  id: SourceProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: SourceProperty\n  nameWithType: MediaElement.SourceProperty\n  fullName: System.Windows.Controls.MediaElement.SourceProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.Source*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SourceProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.SpeedRatio\n  id: SpeedRatio\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: SpeedRatio\n  nameWithType: MediaElement.SpeedRatio\n  fullName: System.Windows.Controls.MediaElement.SpeedRatio\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the speed ratio of the media.\n  remarks: \"This property can be set only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.  \\n  \\n Audio playback may not occur unless the value of SpeedRatio is 1.\"\n  syntax:\n    content: public double SpeedRatio { get; set; }\n    return:\n      type: System.Double\n      description: The speed ratio of the media. The valid range is between 0 (zero) and infinity. Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback. Negative values are treated as 0. The default value is 1.\n  overload: System.Windows.Controls.MediaElement.SpeedRatio*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Stop\n  id: Stop\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: MediaElement.Stop()\n  fullName: System.Windows.Controls.MediaElement.Stop()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Stops and resets media to be played from the beginning.\n  remarks: \"This method can be used only when the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is `null`. When the <xref:System.Windows.Controls.MediaElement.Clock%2A> property is non-`null`, the timing engine controls media playback behavior.  \\n  \\n This method has an effect only if the <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> property is set to <xref:System.Windows.Controls.MediaState>.\"\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Windows.Controls.MediaElement.Stop*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.MediaElement.Clock*> property is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Stretch\n  id: Stretch\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Stretch\n  nameWithType: MediaElement.Stretch\n  fullName: System.Windows.Controls.MediaElement.Stretch\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a <xref href=\"System.Windows.Media.Stretch\"></xref> value that describes how a <xref href=\"System.Windows.Controls.MediaElement\"></xref> fills the destination rectangle.\n  remarks: \"The following illustration demonstrates the different <xref:System.Windows.Media.Stretch> values.  \\n  \\n ![Different TileBrush Stretch settings](~/add/media/img-mmgraphics-stretchenum.jpg \\\"Different TileBrush Stretch settings\\\")  \\nDifferent gradient spread methods  \\n  \\n<a name=\\\"dependencyPropertyInfo_Stretch\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.StretchProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Controls.Viewbox> and set the <xref:System.Windows.Media.Stretch> mode of content.  \\n  \\n [!code-cs[ViewBoxCode#2](~/add/codesnippet/csharp/ViewboxCode/ViewboxCode.cs#2)]\\n [!code-cpp[ViewBoxCode#2](~/add/codesnippet/cpp/viewboxcode/ViewboxCode.cpp#2)]\\n [!code-vb[ViewBoxCode#2](~/add/codesnippet/visualbasic/ViewBoxCodeVB/ViewBoxCodeVB.vb#2)]\"\n  syntax:\n    content: public System.Windows.Media.Stretch Stretch { get; set; }\n    return:\n      type: System.Windows.Media.Stretch\n      description: The stretch value for the rendered media. The default is <xref href=\"System.Windows.Media.Stretch\"></xref>.\n  overload: System.Windows.Controls.MediaElement.Stretch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.StretchDirection\n  id: StretchDirection\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: StretchDirection\n  nameWithType: MediaElement.StretchDirection\n  fullName: System.Windows.Controls.MediaElement.StretchDirection\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that determines the restrictions on scaling that are applied to the image.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_StretchDirection\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.StretchDirectionProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - >-\n    [!code-xml[mediagallery_snip#StretchMediaElementExampleWholePage](~/add/codesnippet/xaml/p-system.windows.control_351_1.xaml)]\n     [!code-xml[mediagallery_snip#StretchMediaElementExampleWholePage](~/add/codesnippet/xaml/p-system.windows.control_351_1.xaml)]\n  syntax:\n    content: public System.Windows.Controls.StretchDirection StretchDirection { get; set; }\n    return:\n      type: System.Windows.Controls.StretchDirection\n      description: The value that specifies the direction the element is stretched. The default is <xref href=\"System.Windows.Controls.StretchDirection\"></xref>.\n  overload: System.Windows.Controls.MediaElement.StretchDirection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.StretchDirectionProperty\n  id: StretchDirectionProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: StretchDirectionProperty\n  nameWithType: MediaElement.StretchDirectionProperty\n  fullName: System.Windows.Controls.MediaElement.StretchDirectionProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.StretchDirection*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StretchDirectionProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.StretchProperty\n  id: StretchProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: StretchProperty\n  nameWithType: MediaElement.StretchProperty\n  fullName: System.Windows.Controls.MediaElement.StretchProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.Stretch*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StretchProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri\n  id: System#Windows#Markup#IUriContext#BaseUri\n  isEii: true\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: System.Windows.Markup.IUriContext.BaseUri\n  nameWithType: MediaElement.System.Windows.Markup.IUriContext.BaseUri\n  fullName: System.Windows.Controls.MediaElement.System.Windows.Markup.IUriContext.BaseUri\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }\n    return:\n      type: System.Uri\n      description: The base URI of the current context.\n  overload: System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.UnloadedBehavior\n  id: UnloadedBehavior\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: UnloadedBehavior\n  nameWithType: MediaElement.UnloadedBehavior\n  fullName: System.Windows.Controls.MediaElement.UnloadedBehavior\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the unload behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_UnloadedBehavior\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Controls.MediaState UnloadedBehavior { get; set; }\n    return:\n      type: System.Windows.Controls.MediaState\n      description: The unload behavior <xref href=\"System.Windows.Controls.MediaState\"></xref> for the media.\n  overload: System.Windows.Controls.MediaElement.UnloadedBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.UnloadedBehaviorProperty\n  id: UnloadedBehaviorProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: UnloadedBehaviorProperty\n  nameWithType: MediaElement.UnloadedBehaviorProperty\n  fullName: System.Windows.Controls.MediaElement.UnloadedBehaviorProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.UnloadedBehavior*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty UnloadedBehaviorProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.Volume\n  id: Volume\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: Volume\n  nameWithType: MediaElement.Volume\n  fullName: System.Windows.Controls.MediaElement.Volume\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the media's volume.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Volume\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.MediaElement.VolumeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Volume { get; set; }\n    return:\n      type: System.Double\n      description: The media's volume represented on a linear scale between 0 and 1. The default is 0.5.\n  overload: System.Windows.Controls.MediaElement.Volume*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.MediaElement.VolumeProperty\n  id: VolumeProperty\n  parent: System.Windows.Controls.MediaElement\n  langs:\n  - csharp\n  name: VolumeProperty\n  nameWithType: MediaElement.VolumeProperty\n  fullName: System.Windows.Controls.MediaElement.VolumeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.MediaElement.Volume*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VolumeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkElement\n  isExternal: false\n  name: System.Windows.FrameworkElement\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Controls.MediaElement.#ctor\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaElement()\n  nameWithType: MediaElement.MediaElement()\n  fullName: System.Windows.Controls.MediaElement.MediaElement()\n- uid: System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: MediaElement.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.MediaElement.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.MediaElement.Balance\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Balance\n  nameWithType: MediaElement.Balance\n  fullName: System.Windows.Controls.MediaElement.Balance\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.MediaElement.BalanceProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BalanceProperty\n  nameWithType: MediaElement.BalanceProperty\n  fullName: System.Windows.Controls.MediaElement.BalanceProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.MediaElement.BufferingEnded\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingEnded\n  nameWithType: MediaElement.BufferingEnded\n  fullName: System.Windows.Controls.MediaElement.BufferingEnded\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.Controls.MediaElement.BufferingEndedEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingEndedEvent\n  nameWithType: MediaElement.BufferingEndedEvent\n  fullName: System.Windows.Controls.MediaElement.BufferingEndedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.MediaElement.BufferingProgress\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingProgress\n  nameWithType: MediaElement.BufferingProgress\n  fullName: System.Windows.Controls.MediaElement.BufferingProgress\n- uid: System.Windows.Controls.MediaElement.BufferingStarted\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingStarted\n  nameWithType: MediaElement.BufferingStarted\n  fullName: System.Windows.Controls.MediaElement.BufferingStarted\n- uid: System.Windows.Controls.MediaElement.BufferingStartedEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingStartedEvent\n  nameWithType: MediaElement.BufferingStartedEvent\n  fullName: System.Windows.Controls.MediaElement.BufferingStartedEvent\n- uid: System.Windows.Controls.MediaElement.CanPause\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: CanPause\n  nameWithType: MediaElement.CanPause\n  fullName: System.Windows.Controls.MediaElement.CanPause\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.MediaElement.Clock\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Clock\n  nameWithType: MediaElement.Clock\n  fullName: System.Windows.Controls.MediaElement.Clock\n- uid: System.Windows.Media.MediaClock\n  parent: System.Windows.Media\n  isExternal: false\n  name: MediaClock\n  nameWithType: MediaClock\n  fullName: System.Windows.Media.MediaClock\n- uid: System.Windows.Controls.MediaElement.Close\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Close()\n  nameWithType: MediaElement.Close()\n  fullName: System.Windows.Controls.MediaElement.Close()\n- uid: System.Windows.Controls.MediaElement.DownloadProgress\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: DownloadProgress\n  nameWithType: MediaElement.DownloadProgress\n  fullName: System.Windows.Controls.MediaElement.DownloadProgress\n- uid: System.Windows.Controls.MediaElement.HasAudio\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: HasAudio\n  nameWithType: MediaElement.HasAudio\n  fullName: System.Windows.Controls.MediaElement.HasAudio\n- uid: System.Windows.Controls.MediaElement.HasVideo\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: HasVideo\n  nameWithType: MediaElement.HasVideo\n  fullName: System.Windows.Controls.MediaElement.HasVideo\n- uid: System.Windows.Controls.MediaElement.IsBuffering\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: IsBuffering\n  nameWithType: MediaElement.IsBuffering\n  fullName: System.Windows.Controls.MediaElement.IsBuffering\n- uid: System.Windows.Controls.MediaElement.IsMuted\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: IsMuted\n  nameWithType: MediaElement.IsMuted\n  fullName: System.Windows.Controls.MediaElement.IsMuted\n- uid: System.Windows.Controls.MediaElement.IsMutedProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: IsMutedProperty\n  nameWithType: MediaElement.IsMutedProperty\n  fullName: System.Windows.Controls.MediaElement.IsMutedProperty\n- uid: System.Windows.Controls.MediaElement.LoadedBehavior\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: LoadedBehavior\n  nameWithType: MediaElement.LoadedBehavior\n  fullName: System.Windows.Controls.MediaElement.LoadedBehavior\n- uid: System.Windows.Controls.MediaState\n  parent: System.Windows.Controls\n  isExternal: false\n  name: MediaState\n  nameWithType: MediaState\n  fullName: System.Windows.Controls.MediaState\n- uid: System.Windows.Controls.MediaElement.LoadedBehaviorProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: LoadedBehaviorProperty\n  nameWithType: MediaElement.LoadedBehaviorProperty\n  fullName: System.Windows.Controls.MediaElement.LoadedBehaviorProperty\n- uid: System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: MediaElement.MeasureOverride(Size)\n  fullName: System.Windows.Controls.MediaElement.MeasureOverride(Size)\n- uid: System.Windows.Controls.MediaElement.MediaEnded\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaEnded\n  nameWithType: MediaElement.MediaEnded\n  fullName: System.Windows.Controls.MediaElement.MediaEnded\n- uid: System.Windows.Controls.MediaElement.MediaEndedEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaEndedEvent\n  nameWithType: MediaElement.MediaEndedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaEndedEvent\n- uid: System.Windows.Controls.MediaElement.MediaFailed\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaFailed\n  nameWithType: MediaElement.MediaFailed\n  fullName: System.Windows.Controls.MediaElement.MediaFailed\n- uid: System.EventHandler{System.Windows.ExceptionRoutedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ExceptionRoutedEventArgs>\n  nameWithType: EventHandler<ExceptionRoutedEventArgs>\n  fullName: System.EventHandler<System.Windows.ExceptionRoutedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.ExceptionRoutedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.ExceptionRoutedEventArgs\n    name: ExceptionRoutedEventArgs\n    nameWithType: ExceptionRoutedEventArgs\n    fullName: ExceptionRoutedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.MediaElement.MediaFailedEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaFailedEvent\n  nameWithType: MediaElement.MediaFailedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaFailedEvent\n- uid: System.Windows.Controls.MediaElement.MediaOpened\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaOpened\n  nameWithType: MediaElement.MediaOpened\n  fullName: System.Windows.Controls.MediaElement.MediaOpened\n- uid: System.Windows.Controls.MediaElement.MediaOpenedEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaOpenedEvent\n  nameWithType: MediaElement.MediaOpenedEvent\n  fullName: System.Windows.Controls.MediaElement.MediaOpenedEvent\n- uid: System.Windows.Controls.MediaElement.NaturalDuration\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: MediaElement.NaturalDuration\n  fullName: System.Windows.Controls.MediaElement.NaturalDuration\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Controls.MediaElement.NaturalVideoHeight\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalVideoHeight\n  nameWithType: MediaElement.NaturalVideoHeight\n  fullName: System.Windows.Controls.MediaElement.NaturalVideoHeight\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.MediaElement.NaturalVideoWidth\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalVideoWidth\n  nameWithType: MediaElement.NaturalVideoWidth\n  fullName: System.Windows.Controls.MediaElement.NaturalVideoWidth\n- uid: System.Windows.Controls.MediaElement.OnCreateAutomationPeer\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: MediaElement.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.MediaElement.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: OnRender(DrawingContext)\n  nameWithType: MediaElement.OnRender(DrawingContext)\n  fullName: System.Windows.Controls.MediaElement.OnRender(DrawingContext)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Controls.MediaElement.Pause\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Pause()\n  nameWithType: MediaElement.Pause()\n  fullName: System.Windows.Controls.MediaElement.Pause()\n- uid: System.Windows.Controls.MediaElement.Play\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Play()\n  nameWithType: MediaElement.Play()\n  fullName: System.Windows.Controls.MediaElement.Play()\n- uid: System.Windows.Controls.MediaElement.Position\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Position\n  nameWithType: MediaElement.Position\n  fullName: System.Windows.Controls.MediaElement.Position\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Windows.Controls.MediaElement.ScriptCommand\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ScriptCommand\n  nameWithType: MediaElement.ScriptCommand\n  fullName: System.Windows.Controls.MediaElement.ScriptCommand\n- uid: System.EventHandler{System.Windows.MediaScriptCommandRoutedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<MediaScriptCommandRoutedEventArgs>\n  nameWithType: EventHandler<MediaScriptCommandRoutedEventArgs>\n  fullName: System.EventHandler<System.Windows.MediaScriptCommandRoutedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.MediaScriptCommandRoutedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.MediaScriptCommandRoutedEventArgs\n    name: MediaScriptCommandRoutedEventArgs\n    nameWithType: MediaScriptCommandRoutedEventArgs\n    fullName: MediaScriptCommandRoutedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.MediaElement.ScriptCommandEvent\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ScriptCommandEvent\n  nameWithType: MediaElement.ScriptCommandEvent\n  fullName: System.Windows.Controls.MediaElement.ScriptCommandEvent\n- uid: System.Windows.Controls.MediaElement.ScrubbingEnabled\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ScrubbingEnabled\n  nameWithType: MediaElement.ScrubbingEnabled\n  fullName: System.Windows.Controls.MediaElement.ScrubbingEnabled\n- uid: System.Windows.Controls.MediaElement.ScrubbingEnabledProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ScrubbingEnabledProperty\n  nameWithType: MediaElement.ScrubbingEnabledProperty\n  fullName: System.Windows.Controls.MediaElement.ScrubbingEnabledProperty\n- uid: System.Windows.Controls.MediaElement.Source\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Source\n  nameWithType: MediaElement.Source\n  fullName: System.Windows.Controls.MediaElement.Source\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Controls.MediaElement.SourceProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: SourceProperty\n  nameWithType: MediaElement.SourceProperty\n  fullName: System.Windows.Controls.MediaElement.SourceProperty\n- uid: System.Windows.Controls.MediaElement.SpeedRatio\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: MediaElement.SpeedRatio\n  fullName: System.Windows.Controls.MediaElement.SpeedRatio\n- uid: System.Windows.Controls.MediaElement.Stop\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Stop()\n  nameWithType: MediaElement.Stop()\n  fullName: System.Windows.Controls.MediaElement.Stop()\n- uid: System.Windows.Controls.MediaElement.Stretch\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Stretch\n  nameWithType: MediaElement.Stretch\n  fullName: System.Windows.Controls.MediaElement.Stretch\n- uid: System.Windows.Media.Stretch\n  parent: System.Windows.Media\n  isExternal: false\n  name: Stretch\n  nameWithType: Stretch\n  fullName: System.Windows.Media.Stretch\n- uid: System.Windows.Controls.MediaElement.StretchDirection\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: StretchDirection\n  nameWithType: MediaElement.StretchDirection\n  fullName: System.Windows.Controls.MediaElement.StretchDirection\n- uid: System.Windows.Controls.StretchDirection\n  parent: System.Windows.Controls\n  isExternal: false\n  name: StretchDirection\n  nameWithType: StretchDirection\n  fullName: System.Windows.Controls.StretchDirection\n- uid: System.Windows.Controls.MediaElement.StretchDirectionProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: StretchDirectionProperty\n  nameWithType: MediaElement.StretchDirectionProperty\n  fullName: System.Windows.Controls.MediaElement.StretchDirectionProperty\n- uid: System.Windows.Controls.MediaElement.StretchProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: StretchProperty\n  nameWithType: MediaElement.StretchProperty\n  fullName: System.Windows.Controls.MediaElement.StretchProperty\n- uid: System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: System.Windows.Markup.IUriContext.BaseUri\n  nameWithType: MediaElement.System.Windows.Markup.IUriContext.BaseUri\n  fullName: System.Windows.Controls.MediaElement.System.Windows.Markup.IUriContext.BaseUri\n- uid: System.Windows.Controls.MediaElement.UnloadedBehavior\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: UnloadedBehavior\n  nameWithType: MediaElement.UnloadedBehavior\n  fullName: System.Windows.Controls.MediaElement.UnloadedBehavior\n- uid: System.Windows.Controls.MediaElement.UnloadedBehaviorProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: UnloadedBehaviorProperty\n  nameWithType: MediaElement.UnloadedBehaviorProperty\n  fullName: System.Windows.Controls.MediaElement.UnloadedBehaviorProperty\n- uid: System.Windows.Controls.MediaElement.Volume\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Volume\n  nameWithType: MediaElement.Volume\n  fullName: System.Windows.Controls.MediaElement.Volume\n- uid: System.Windows.Controls.MediaElement.VolumeProperty\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: VolumeProperty\n  nameWithType: MediaElement.VolumeProperty\n  fullName: System.Windows.Controls.MediaElement.VolumeProperty\n- uid: System.Windows.Controls.MediaElement.#ctor*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MediaElement\n  nameWithType: MediaElement.MediaElement\n- uid: System.Windows.Controls.MediaElement.ArrangeOverride*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: MediaElement.ArrangeOverride\n- uid: System.Windows.Controls.MediaElement.Balance*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Balance\n  nameWithType: MediaElement.Balance\n- uid: System.Windows.Controls.MediaElement.BufferingProgress*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: BufferingProgress\n  nameWithType: MediaElement.BufferingProgress\n- uid: System.Windows.Controls.MediaElement.CanPause*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: CanPause\n  nameWithType: MediaElement.CanPause\n- uid: System.Windows.Controls.MediaElement.Clock*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Clock\n  nameWithType: MediaElement.Clock\n- uid: System.Windows.Controls.MediaElement.Close*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Close\n  nameWithType: MediaElement.Close\n- uid: System.Windows.Controls.MediaElement.DownloadProgress*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: DownloadProgress\n  nameWithType: MediaElement.DownloadProgress\n- uid: System.Windows.Controls.MediaElement.HasAudio*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: HasAudio\n  nameWithType: MediaElement.HasAudio\n- uid: System.Windows.Controls.MediaElement.HasVideo*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: HasVideo\n  nameWithType: MediaElement.HasVideo\n- uid: System.Windows.Controls.MediaElement.IsBuffering*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: IsBuffering\n  nameWithType: MediaElement.IsBuffering\n- uid: System.Windows.Controls.MediaElement.IsMuted*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: IsMuted\n  nameWithType: MediaElement.IsMuted\n- uid: System.Windows.Controls.MediaElement.LoadedBehavior*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: LoadedBehavior\n  nameWithType: MediaElement.LoadedBehavior\n- uid: System.Windows.Controls.MediaElement.MeasureOverride*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: MediaElement.MeasureOverride\n- uid: System.Windows.Controls.MediaElement.NaturalDuration*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: MediaElement.NaturalDuration\n- uid: System.Windows.Controls.MediaElement.NaturalVideoHeight*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalVideoHeight\n  nameWithType: MediaElement.NaturalVideoHeight\n- uid: System.Windows.Controls.MediaElement.NaturalVideoWidth*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: NaturalVideoWidth\n  nameWithType: MediaElement.NaturalVideoWidth\n- uid: System.Windows.Controls.MediaElement.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: MediaElement.OnCreateAutomationPeer\n- uid: System.Windows.Controls.MediaElement.OnRender*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: OnRender\n  nameWithType: MediaElement.OnRender\n- uid: System.Windows.Controls.MediaElement.Pause*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Pause\n  nameWithType: MediaElement.Pause\n- uid: System.Windows.Controls.MediaElement.Play*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Play\n  nameWithType: MediaElement.Play\n- uid: System.Windows.Controls.MediaElement.Position*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Position\n  nameWithType: MediaElement.Position\n- uid: System.Windows.Controls.MediaElement.ScrubbingEnabled*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: ScrubbingEnabled\n  nameWithType: MediaElement.ScrubbingEnabled\n- uid: System.Windows.Controls.MediaElement.Source*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Source\n  nameWithType: MediaElement.Source\n- uid: System.Windows.Controls.MediaElement.SpeedRatio*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: MediaElement.SpeedRatio\n- uid: System.Windows.Controls.MediaElement.Stop*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Stop\n  nameWithType: MediaElement.Stop\n- uid: System.Windows.Controls.MediaElement.Stretch*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Stretch\n  nameWithType: MediaElement.Stretch\n- uid: System.Windows.Controls.MediaElement.StretchDirection*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: StretchDirection\n  nameWithType: MediaElement.StretchDirection\n- uid: System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: System.Windows.Markup.IUriContext.BaseUri\n  nameWithType: MediaElement.System.Windows.Markup.IUriContext.BaseUri\n- uid: System.Windows.Controls.MediaElement.UnloadedBehavior*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: UnloadedBehavior\n  nameWithType: MediaElement.UnloadedBehavior\n- uid: System.Windows.Controls.MediaElement.Volume*\n  parent: System.Windows.Controls.MediaElement\n  isExternal: false\n  name: Volume\n  nameWithType: MediaElement.Volume\n"}