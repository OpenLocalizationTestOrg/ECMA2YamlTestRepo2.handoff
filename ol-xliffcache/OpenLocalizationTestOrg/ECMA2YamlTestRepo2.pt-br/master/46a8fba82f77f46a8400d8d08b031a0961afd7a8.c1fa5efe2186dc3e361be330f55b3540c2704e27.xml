{"nodes":[{"pos":[610,712],"content":"Generates a temporary code file with the specified generated code fragment.  Does not delete the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a temporary code file with the specified generated code fragment.  Does not delete the file.","pos":[0,102],"nodes":[{"content":"Generates a temporary code file with the specified generated code fragment.","pos":[0,75]},{"content":"Does not delete the file.","pos":[77,102]}]}]},{"pos":[1760,1833],"content":"Creates a temporary code file with the specified generated code fragment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a temporary code file with the specified generated code fragment.","pos":[0,73]}]},{"pos":[2424,2461],"content":"Gets or sets the attributes to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the attributes to write.","pos":[0,37]}]},{"pos":[2474,2800],"content":"Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.       Some attributes only allow positional constructor arguments, or the user may just prefer them.  To set those, use metadata names like \"_Parameter1\", \"_Parameter2\" etc. If a parameter index is skipped, it's an error.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.       Some attributes only allow positional constructor arguments, or the user may just prefer them.  To set those, use metadata names like \"_Parameter1\", \"_Parameter2\" etc. If a parameter index is skipped, it's an error.","pos":[0,320],"nodes":[{"content":"Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.","pos":[0,98]},{"content":"Some attributes only allow positional constructor arguments, or the user may just prefer them.","pos":[105,199]},{"content":"To set those, use metadata names like \"_Parameter1\", \"_Parameter2\" etc. If a parameter index is skipped, it's an error.","pos":[201,320]}]}]},{"pos":[2984,3098],"content":"Returns an item whose value is the full type name of he attribute, for example, \"System.AssemblyVersionAttribute\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an item whose value is the full type name of he attribute, for example, \"System.AssemblyVersionAttribute\".","pos":[0,114]}]},{"pos":[3580,3618],"content":"Executes the WriteCodeFragment method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the WriteCodeFragment method.","pos":[0,38]}]},{"pos":[3752,3798],"content":"Returns true if the code fragment was written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the code fragment was written.","pos":[0,46]}]},{"pos":[4270,4316],"content":"Gets or sets the language of code to generate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the language of code to generate.","pos":[0,46]}]},{"pos":[4328,4505],"content":"Language name can be any language for which a CodeDom provider is available. For example, \"C#\", \"VisualBasic\". The file emitted is given the default extension for that language.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Language name can be any language for which a CodeDom provider is available. For example, \"C#\", \"VisualBasic\". The file emitted is given the default extension for that language.","pos":[0,177],"nodes":[{"content":"Language name can be any language for which a CodeDom provider is available.","pos":[0,76]},{"content":"For example, \"C#\", \"VisualBasic\".","pos":[77,110]},{"content":"The file emitted is given the default extension for that language.","pos":[111,177]}]}]},{"pos":[4623,4664],"content":"Returns the language of code to generate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the language of code to generate.","pos":[0,41]}]},{"pos":[5172,5266],"content":"Gets or sets the destination folder for the generated code, typically the intermediate folder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the destination folder for the generated code, typically the intermediate folder.","pos":[0,94]}]},{"pos":[5442,5496],"content":"Returns the destination folder for the generated code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the destination folder for the generated code.","pos":[0,54]}]},{"pos":[5986,6039],"content":"Gets or sets the path to the file that was generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path to the file that was generated.","pos":[0,53]}]},{"pos":[6052,6391],"content":"If setting this property with a file name, the destination folder will be prepended.       If setting this property with a rooted value, the destination folder will be ignored.       If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If setting this property with a file name, the destination folder will be prepended.       If setting this property with a rooted value, the destination folder will be ignored.       If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.","pos":[0,335],"nodes":[{"content":"If setting this property with a file name, the destination folder will be prepended.","pos":[0,84]},{"content":"If setting this property with a rooted value, the destination folder will be ignored.","pos":[91,176]},{"content":"If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.","pos":[183,335]}]}]},{"pos":[6563,6611],"content":"Returns the path to the file that was generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path to the file that was generated.","pos":[0,48]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.WriteCodeFragment\n  id: WriteCodeFragment\n  children:\n  - Microsoft.Build.Tasks.WriteCodeFragment.#ctor\n  - Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes\n  - Microsoft.Build.Tasks.WriteCodeFragment.Execute\n  - Microsoft.Build.Tasks.WriteCodeFragment.Language\n  - Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory\n  - Microsoft.Build.Tasks.WriteCodeFragment.OutputFile\n  langs:\n  - csharp\n  name: WriteCodeFragment\n  nameWithType: WriteCodeFragment\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment\n  type: Class\n  summary: Generates a temporary code file with the specified generated code fragment.  Does not delete the file.\n  syntax:\n    content: 'public class WriteCodeFragment : Microsoft.Build.Tasks.TaskExtension'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Tasks.TaskExtension\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Tasks.TaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: WriteCodeFragment()\n  nameWithType: WriteCodeFragment.WriteCodeFragment()\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.WriteCodeFragment()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Creates a temporary code file with the specified generated code fragment.\n  syntax:\n    content: public WriteCodeFragment ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes\n  id: AssemblyAttributes\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: AssemblyAttributes\n  nameWithType: WriteCodeFragment.AssemblyAttributes\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the attributes to write.\n  remarks: \"Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.  \\n  \\n Some attributes only allow positional constructor arguments, or the user may just prefer them.  To set those, use metadata names like \\\"_Parameter1\\\", \\\"_Parameter2\\\" etc. If a parameter index is skipped, it's an error.\"\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: Returns an item whose value is the full type name of he attribute, for example, \"System.AssemblyVersionAttribute\".\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: WriteCodeFragment.Execute()\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the WriteCodeFragment method.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns true if the code fragment was written.\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Language\n  id: Language\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: Language\n  nameWithType: WriteCodeFragment.Language\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.Language\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the language of code to generate.\n  remarks: Language name can be any language for which a CodeDom provider is available. For example, \"C#\", \"VisualBasic\". The file emitted is given the default extension for that language.\n  syntax:\n    content: public string Language { get; set; }\n    return:\n      type: System.String\n      description: Returns the language of code to generate.\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.Language*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory\n  id: OutputDirectory\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: OutputDirectory\n  nameWithType: WriteCodeFragment.OutputDirectory\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the destination folder for the generated code, typically the intermediate folder.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem OutputDirectory { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: Returns the destination folder for the generated code.\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile\n  id: OutputFile\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  langs:\n  - csharp\n  name: OutputFile\n  nameWithType: WriteCodeFragment.OutputFile\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the path to the file that was generated.\n  remarks: \"If setting this property with a file name, the destination folder will be prepended.  \\n  \\n If setting this property with a rooted value, the destination folder will be ignored.  \\n  \\n If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.\"\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem OutputFile { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: Returns the path to the file that was generated.\n  overload: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.TaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.TaskExtension\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.#ctor\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: WriteCodeFragment()\n  nameWithType: WriteCodeFragment.WriteCodeFragment()\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.WriteCodeFragment()\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: AssemblyAttributes\n  nameWithType: WriteCodeFragment.AssemblyAttributes\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Execute\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: Execute()\n  nameWithType: WriteCodeFragment.Execute()\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.Execute()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Language\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: Language\n  nameWithType: WriteCodeFragment.Language\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.Language\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: OutputDirectory\n  nameWithType: WriteCodeFragment.OutputDirectory\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory\n- uid: Microsoft.Build.Framework.ITaskItem\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: OutputFile\n  nameWithType: WriteCodeFragment.OutputFile\n  fullName: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.#ctor*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: WriteCodeFragment\n  nameWithType: WriteCodeFragment.WriteCodeFragment\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: AssemblyAttributes\n  nameWithType: WriteCodeFragment.AssemblyAttributes\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Execute*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: Execute\n  nameWithType: WriteCodeFragment.Execute\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.Language*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: Language\n  nameWithType: WriteCodeFragment.Language\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: OutputDirectory\n  nameWithType: WriteCodeFragment.OutputDirectory\n- uid: Microsoft.Build.Tasks.WriteCodeFragment.OutputFile*\n  parent: Microsoft.Build.Tasks.WriteCodeFragment\n  isExternal: false\n  name: OutputFile\n  nameWithType: WriteCodeFragment.OutputFile\n"}