{"nodes":[{"pos":[892,1300],"content":"Represents the <xref uid=\"langword_csharp_attribute\" name=\"attribute\" href=\"\"></xref> element from the XML Schema as specified by the World Wide Web Consortium (W3C). Attributes provide additional information for other document elements. The attribute tag is nested between the tags of a document's element for the schema. The XML document displays attributes as named items in the opening tag of an element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_attribute\" name=\"attribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element from the XML Schema as specified by the World Wide Web Consortium (W3C).","pos":[0,166],"source":"Represents the <xref uid=\"langword_csharp_attribute\" name=\"attribute\" href=\"\"></xref> element from the XML Schema as specified by the World Wide Web Consortium (W3C)."},{"content":"Attributes provide additional information for other document elements.","pos":[167,237]},{"content":"The attribute tag is nested between the tags of a document's element for the schema.","pos":[238,322]},{"content":"The XML document displays attributes as named items in the opening tag of an element.","pos":[323,408]}]},{"pos":[1312,1814],"content":"Attribute declarations can be present as child elements of the `schema` element (having global scope) or within complex type definitions. For complex types, attribute declarations can be present as local declarations or references to attributes with global scope. Both global and local attribute declarations have the optional type attribute that refers to an existing simple type. If the optional type attribute is not used, the attribute declaration (global or local) must define a local simple type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Attribute declarations can be present as child elements of the <ph id=\"ph1\">`schema`</ph> element (having global scope) or within complex type definitions.","pos":[0,137],"source":"Attribute declarations can be present as child elements of the `schema` element (having global scope) or within complex type definitions."},{"content":"For complex types, attribute declarations can be present as local declarations or references to attributes with global scope.","pos":[138,263]},{"content":"Both global and local attribute declarations have the optional type attribute that refers to an existing simple type.","pos":[264,381]},{"content":"If the optional type attribute is not used, the attribute declaration (global or local) must define a local simple type.","pos":[382,502]}]},{"pos":[3490,3588],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> class."},{"pos":[4154,4416],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object representing the type of the attribute based on the &lt;xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName<ept id=\"p2\">*</ept>&gt; of the attribute.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"></xref> object representing the type of the attribute based on the <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType*> or <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*> of the attribute."},{"pos":[4428,4487],"content":"This property is a post-schema-validation infoset property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a post-schema-validation infoset property.","pos":[0,59]}]},{"pos":[4666,4735],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"></xref> object."},{"pos":[5213,5541],"content":"Gets the common language runtime (CLR) object based on the &lt;xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName<ept id=\"p1\">*</ept>&gt; of the attribute that holds the post-compilation value of the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"Gets the common language runtime (CLR) object based on the <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType*> or <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*> of the attribute that holds the post-compilation value of the <xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"></xref> property."},{"pos":[5554,6024],"content":"The object can be <xref:System.Xml.Schema.XmlSchemaDatatype> if the attribute has a built-in XML Schema type or <xref:System.Xml.Schema.XmlSchemaSimpleType> if the attribute has a user-defined type. This property is a post-schema-validation infoset property.      > [!IMPORTANT] >  The AttributeType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The object can be &lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt; if the attribute has a built-in XML Schema type or &lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt; if the attribute has a user-defined type.","pos":[0,198],"source":"The object can be <xref:System.Xml.Schema.XmlSchemaDatatype> if the attribute has a built-in XML Schema type or <xref:System.Xml.Schema.XmlSchemaSimpleType> if the attribute has a user-defined type."},{"content":"This property is a post-schema-validation infoset property.","pos":[199,258]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The AttributeType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the &lt;xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A&gt; property.","pos":[264,467],"source":"      > [!IMPORTANT] >  The AttributeType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A> property."}]},{"pos":[6143,6316],"content":"The common runtime library (CLR) object that holds the post-compilation value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"The common runtime library (CLR) object that holds the post-compilation value of the <xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"></xref> property."},{"pos":[6783,6832],"content":"Gets or sets the default value for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the default value for the attribute.","pos":[0,49]}]},{"pos":[6845,7225],"content":"`DefaultValue` property indicates that the attribute is to appear unconditionally in the XML document, using the supplied value whenever the attribute is not present. By default, this property is set to null to indicate that no default value is supplied for the attribute. The `fixed` and `default` properties are mutually exclusive.       Optional.       The default is null.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`DefaultValue`</ph> property indicates that the attribute is to appear unconditionally in the XML document, using the supplied value whenever the attribute is not present.","pos":[0,166],"source":"`DefaultValue` property indicates that the attribute is to appear unconditionally in the XML document, using the supplied value whenever the attribute is not present."},{"content":"By default, this property is set to null to indicate that no default value is supplied for the attribute.","pos":[167,272]},{"content":"The <ph id=\"ph1\">`fixed`</ph> and <ph id=\"ph2\">`default`</ph> properties are mutually exclusive.","pos":[273,333],"source":" The `fixed` and `default` properties are mutually exclusive."},{"content":"Optional.","pos":[340,349]},{"content":"The default is null.","pos":[356,376]}]},{"pos":[7349,7436],"content":"The default value for the attribute. The default is a null reference.       Optional.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value for the attribute. The default is a null reference.       Optional.","pos":[0,85],"nodes":[{"content":"The default value for the attribute.","pos":[0,36]},{"content":"The default is a null reference.","pos":[37,69]},{"content":"Optional.","pos":[76,85]}]}]},{"pos":[7893,7940],"content":"Gets or sets the fixed value for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the fixed value for the attribute.","pos":[0,47]}]},{"pos":[7953,8228],"content":"`FixedValue` indicates that the attribute value, if present, must equal the supplied value. By default, this property is set to null, which means that no fixed value is supplied for the attribute. The `fixed` and `default` properties are mutually exclusive.       Optional.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`FixedValue`</ph> indicates that the attribute value, if present, must equal the supplied value.","pos":[0,91],"source":"`FixedValue` indicates that the attribute value, if present, must equal the supplied value."},{"content":"By default, this property is set to null, which means that no fixed value is supplied for the attribute.","pos":[92,196]},{"content":"The <ph id=\"ph1\">`fixed`</ph> and <ph id=\"ph2\">`default`</ph> properties are mutually exclusive.","pos":[197,257],"source":" The `fixed` and `default` properties are mutually exclusive."},{"content":"Optional.","pos":[264,273]}]},{"pos":[8350,8423],"content":"The fixed value for the attribute. The default is null.       Optional.","needQuote":false,"needEscape":true,"nodes":[{"content":"The fixed value for the attribute. The default is null.       Optional.","pos":[0,71],"nodes":[{"content":"The fixed value for the attribute.","pos":[0,34]},{"content":"The default is null.","pos":[35,55]},{"content":"Optional.","pos":[62,71]}]}]},{"pos":[8848,8888],"content":"Gets or sets the form for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the form for the attribute.","pos":[0,40]}]},{"pos":[9046,9291],"content":"One of the <xref:System.Xml.Schema.XmlSchemaForm> values. The default is the value of the &lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName&gt; of the schema element containing the attribute.       Optional.","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the <xref:System.Xml.Schema.XmlSchemaForm> values. The default is the value of the &lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName&gt; of the schema element containing the attribute.       Optional.","pos":[0,243],"nodes":[{"content":"One of the &lt;xref:System.Xml.Schema.XmlSchemaForm&gt; values.","pos":[0,57],"source":"One of the <xref:System.Xml.Schema.XmlSchemaForm> values."},{"content":"The default is the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> of the schema element containing the attribute.","pos":[58,227],"source":" The default is the value of the &lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName&gt; of the schema element containing the attribute."},{"content":"Optional.","pos":[234,243]}]}]},{"pos":[9710,9749],"content":"Gets or sets the name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the attribute.","pos":[0,39]}]},{"pos":[9762,10249],"content":"The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification. When an XML document is validated against a schema, each attribute in the document is validated against an `attribute` element in the schema. The `attribute` element with a `name` attribute that matches the local name of the attribute in the document is used to validate that attribute. The `Name` and `RefName` properties are mutually exclusive.       Optional.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification.","pos":[0,122]},{"content":"When an XML document is validated against a schema, each attribute in the document is validated against an <ph id=\"ph1\">`attribute`</ph> element in the schema.","pos":[123,264],"source":" When an XML document is validated against a schema, each attribute in the document is validated against an `attribute` element in the schema."},{"content":"The <ph id=\"ph1\">`attribute`</ph> element with a <ph id=\"ph2\">`name`</ph> attribute that matches the local name of the attribute in the document is used to validate that attribute.","pos":[265,409],"source":" The `attribute` element with a `name` attribute that matches the local name of the attribute in the document is used to validate that attribute."},{"content":"The <ph id=\"ph1\">`Name`</ph> and <ph id=\"ph2\">`RefName`</ph> properties are mutually exclusive.","pos":[410,469],"source":" The `Name` and `RefName` properties are mutually exclusive."},{"content":"Optional.","pos":[476,485]}]},{"pos":[10364,10390],"content":"The name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute.","pos":[0,26]}]},{"pos":[10853,10895],"content":"Gets the qualified name for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the qualified name for the attribute.","pos":[0,42]}]},{"pos":[10907,10916],"content":"Optional.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Optional.","pos":[0,9]}]},{"pos":[11069,11191],"content":"The post-compilation value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_QualifiedName\" name=\"QualifiedName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"The post-compilation value of the <xref uid=\"langword_csharp_QualifiedName\" name=\"QualifiedName\" href=\"\"></xref> property."},{"pos":[11633,11752],"content":"Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).","pos":[0,119]}]},{"pos":[11765,11914],"content":"The `RefName` must be a QName. The type can include a namespace prefix. The `Name` and `RefName` properties are mutually exclusive.       Optional.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`RefName`</ph> must be a QName.","pos":[0,30],"source":"The `RefName` must be a QName."},{"content":"The type can include a namespace prefix.","pos":[31,71]},{"content":"The <ph id=\"ph1\">`Name`</ph> and <ph id=\"ph2\">`RefName`</ph> properties are mutually exclusive.","pos":[72,131],"source":" The `Name` and `RefName` properties are mutually exclusive."},{"content":"Optional.","pos":[138,147]}]},{"pos":[12067,12102],"content":"The name of the attribute declared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute declared.","pos":[0,35]}]},{"pos":[12553,12602],"content":"Gets or sets the attribute type to a simple type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the attribute type to a simple type.","pos":[0,49]}]},{"pos":[12615,12691],"content":"<ph id=\"ph1\">`SchemaTypeName`</ph> and <ph id=\"ph2\">`SchemaType`</ph> properties cannot be set at the same time.","needQuote":false,"needEscape":true,"extradata":"MT","source":"`SchemaTypeName` and `SchemaType` properties cannot be set at the same time."},{"pos":[12867,12906],"content":"The simple type defined in this schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"The simple type defined in this schema.","pos":[0,39]}]},{"pos":[13380,13501],"content":"Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).","pos":[0,121]}]},{"pos":[13514,13720],"content":"`SchemaTypeName` and <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A> properties cannot be set at the same time. The type must be a QName. The type can include a namespace prefix.       Optional.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`SchemaTypeName`</ph> and &lt;xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A&gt; properties cannot be set at the same time.","pos":[0,121],"source":"`SchemaTypeName` and <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A> properties cannot be set at the same time."},{"content":"The type must be a QName.","pos":[122,147]},{"content":"The type can include a namespace prefix.","pos":[148,188]},{"content":"Optional.","pos":[195,204]}]},{"pos":[13880,13908],"content":"The name of the simple type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the simple type.","pos":[0,28]}]},{"pos":[14331,14388],"content":"Gets or sets information about how the attribute is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets information about how the attribute is used.","pos":[0,57]}]},{"pos":[14401,14754],"content":"If specified, this attribute must have one of the values shown in the following table.      |Enum|Description|   |----------|-----------------|   |`None`|Attribute has no value.|   |`Prohibited`|Attribute cannot be used.|   |`Optional`|Attribute is optional and may have any value. This is the default.|   |`Required`|Attribute must appear once.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If specified, this attribute must have one of the values shown in the following table.","pos":[0,86]},{"content":"|Enum|Description|   |----------|-----------------|   |<ph id=\"ph1\">`None`</ph>|Attribute has no value.|   |<ph id=\"ph2\">`Prohibited`</ph>|Attribute cannot be used.|   |<ph id=\"ph3\">`Optional`</ph>|Attribute is optional and may have any value.","pos":[92,281],"source":"      |Enum|Description|   |----------|-----------------|   |`None`|Attribute has no value.|   |`Prohibited`|Attribute cannot be used.|   |`Optional`|Attribute is optional and may have any value."},{"content":"This is the default.|   |<ph id=\"ph1\">`Required`</ph>|Attribute must appear once.|","pos":[282,346],"source":" This is the default.|   |`Required`|Attribute must appear once.|"}]},{"pos":[14910,15022],"content":"One of the following values: None, Prohibited, Optional, or Required. The default is Optional.       Optional.","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the following values: None, Prohibited, Optional, or Required. The default is Optional.       Optional.","pos":[0,110],"nodes":[{"content":"One of the following values: None, Prohibited, Optional, or Required.","pos":[0,69]},{"content":"The default is Optional.","pos":[70,94]},{"content":"Optional.","pos":[101,110]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Schema.XmlSchemaAttribute\n  id: XmlSchemaAttribute\n  children:\n  - System.Xml.Schema.XmlSchemaAttribute.#ctor\n  - System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType\n  - System.Xml.Schema.XmlSchemaAttribute.AttributeType\n  - System.Xml.Schema.XmlSchemaAttribute.DefaultValue\n  - System.Xml.Schema.XmlSchemaAttribute.FixedValue\n  - System.Xml.Schema.XmlSchemaAttribute.Form\n  - System.Xml.Schema.XmlSchemaAttribute.Name\n  - System.Xml.Schema.XmlSchemaAttribute.QualifiedName\n  - System.Xml.Schema.XmlSchemaAttribute.RefName\n  - System.Xml.Schema.XmlSchemaAttribute.SchemaType\n  - System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName\n  - System.Xml.Schema.XmlSchemaAttribute.Use\n  langs:\n  - csharp\n  name: XmlSchemaAttribute\n  nameWithType: XmlSchemaAttribute\n  fullName: System.Xml.Schema.XmlSchemaAttribute\n  type: Class\n  summary: Represents the <xref uid=\"langword_csharp_attribute\" name=\"attribute\" href=\"\"></xref> element from the XML Schema as specified by the World Wide Web Consortium (W3C). Attributes provide additional information for other document elements. The attribute tag is nested between the tags of a document's element for the schema. The XML document displays attributes as named items in the opening tag of an element.\n  remarks: Attribute declarations can be present as child elements of the `schema` element (having global scope) or within complex type definitions. For complex types, attribute declarations can be present as local declarations or references to attributes with global scope. Both global and local attribute declarations have the optional type attribute that refers to an existing simple type. If the optional type attribute is not used, the attribute declaration (global or local) must define a local simple type.\n  example:\n  - \"The following example creates the `attribute` element.  \\n  \\n [!code-cs[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_9_1.cs)]\\n [!code-cpp[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_9_1.cpp)]\\n [!code-vb[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_9_1.vb)]  \\n  \\n The following XML file is generated for the preceding code example.  \\n  \\n [!code-xml[Classic WebData XmlSchemaAttribute Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_9_2.xml)]\"\n  syntax:\n    content: 'public class XmlSchemaAttribute : System.Xml.Schema.XmlSchemaAnnotated'\n  inheritance:\n  - System.Object\n  - System.Xml.Schema.XmlSchemaObject\n  - System.Xml.Schema.XmlSchemaAnnotated\n  implements: []\n  inheritedMembers:\n  - System.Xml.Schema.XmlSchemaAnnotated.Annotation\n  - System.Xml.Schema.XmlSchemaAnnotated.Id\n  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes\n  - System.Xml.Schema.XmlSchemaObject.LineNumber\n  - System.Xml.Schema.XmlSchemaObject.LinePosition\n  - System.Xml.Schema.XmlSchemaObject.Namespaces\n  - System.Xml.Schema.XmlSchemaObject.Parent\n  - System.Xml.Schema.XmlSchemaObject.SourceUri\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor\n  id: '#ctor'\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: XmlSchemaAttribute()\n  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute()\n  fullName: System.Xml.Schema.XmlSchemaAttribute.XmlSchemaAttribute()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> class.\n  syntax:\n    content: public XmlSchemaAttribute ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType\n  id: AttributeSchemaType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: AttributeSchemaType\n  nameWithType: XmlSchemaAttribute.AttributeSchemaType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets an <xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"></xref> object representing the type of the attribute based on the <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType*> or <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*> of the attribute.\n  remarks: This property is a post-schema-validation infoset property.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaSimpleType AttributeSchemaType { get; }\n    return:\n      type: System.Xml.Schema.XmlSchemaSimpleType\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSimpleType\"></xref> object.\n  overload: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType\n  id: AttributeType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: AttributeType\n  nameWithType: XmlSchemaAttribute.AttributeType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the common language runtime (CLR) object based on the <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType*> or <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*> of the attribute that holds the post-compilation value of the <xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"></xref> property.\n  remarks: \"The object can be <xref:System.Xml.Schema.XmlSchemaDatatype> if the attribute has a built-in XML Schema type or <xref:System.Xml.Schema.XmlSchemaSimpleType> if the attribute has a user-defined type. This property is a post-schema-validation infoset property.  \\n  \\n> [!IMPORTANT]\\n>  The AttributeType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A> property.\"\n  syntax:\n    content: public object AttributeType { get; }\n    return:\n      type: System.Object\n      description: The common runtime library (CLR) object that holds the post-compilation value of the <xref uid=\"langword_csharp_AttributeType\" name=\"AttributeType\" href=\"\"></xref> property.\n  overload: System.Xml.Schema.XmlSchemaAttribute.AttributeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue\n  id: DefaultValue\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: DefaultValue\n  nameWithType: XmlSchemaAttribute.DefaultValue\n  fullName: System.Xml.Schema.XmlSchemaAttribute.DefaultValue\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the default value for the attribute.\n  remarks: \"`DefaultValue` property indicates that the attribute is to appear unconditionally in the XML document, using the supplied value whenever the attribute is not present. By default, this property is set to null to indicate that no default value is supplied for the attribute. The `fixed` and `default` properties are mutually exclusive.  \\n  \\n Optional.  \\n  \\n The default is null.\"\n  syntax:\n    content: public string DefaultValue { get; set; }\n    return:\n      type: System.String\n      description: \"The default value for the attribute. The default is a null reference.  \\n  \\n Optional.\"\n  overload: System.Xml.Schema.XmlSchemaAttribute.DefaultValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue\n  id: FixedValue\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: FixedValue\n  nameWithType: XmlSchemaAttribute.FixedValue\n  fullName: System.Xml.Schema.XmlSchemaAttribute.FixedValue\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the fixed value for the attribute.\n  remarks: \"`FixedValue` indicates that the attribute value, if present, must equal the supplied value. By default, this property is set to null, which means that no fixed value is supplied for the attribute. The `fixed` and `default` properties are mutually exclusive.  \\n  \\n Optional.\"\n  syntax:\n    content: public string FixedValue { get; set; }\n    return:\n      type: System.String\n      description: \"The fixed value for the attribute. The default is null.  \\n  \\n Optional.\"\n  overload: System.Xml.Schema.XmlSchemaAttribute.FixedValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.Form\n  id: Form\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: Form\n  nameWithType: XmlSchemaAttribute.Form\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Form\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the form for the attribute.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }\n    return:\n      type: System.Xml.Schema.XmlSchemaForm\n      description: \"One of the <xref:System.Xml.Schema.XmlSchemaForm> values. The default is the value of the &lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName&gt; of the schema element containing the attribute.  \\n  \\n Optional.\"\n  overload: System.Xml.Schema.XmlSchemaAttribute.Form*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.Name\n  id: Name\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XmlSchemaAttribute.Name\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Name\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the name of the attribute.\n  remarks: \"The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification. When an XML document is validated against a schema, each attribute in the document is validated against an `attribute` element in the schema. The `attribute` element with a `name` attribute that matches the local name of the attribute in the document is used to validate that attribute. The `Name` and `RefName` properties are mutually exclusive.  \\n  \\n Optional.\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the attribute.\n  overload: System.Xml.Schema.XmlSchemaAttribute.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName\n  id: QualifiedName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: QualifiedName\n  nameWithType: XmlSchemaAttribute.QualifiedName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.QualifiedName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the qualified name for the attribute.\n  remarks: Optional.\n  syntax:\n    content: public System.Xml.XmlQualifiedName QualifiedName { get; }\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: The post-compilation value of the <xref uid=\"langword_csharp_QualifiedName\" name=\"QualifiedName\" href=\"\"></xref> property.\n  overload: System.Xml.Schema.XmlSchemaAttribute.QualifiedName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.RefName\n  id: RefName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: RefName\n  nameWithType: XmlSchemaAttribute.RefName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.RefName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).\n  remarks: \"The `RefName` must be a QName. The type can include a namespace prefix. The `Name` and `RefName` properties are mutually exclusive.  \\n  \\n Optional.\"\n  syntax:\n    content: public System.Xml.XmlQualifiedName RefName { get; set; }\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: The name of the attribute declared.\n  overload: System.Xml.Schema.XmlSchemaAttribute.RefName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType\n  id: SchemaType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: SchemaType\n  nameWithType: XmlSchemaAttribute.SchemaType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the attribute type to a simple type.\n  remarks: '`SchemaTypeName` and `SchemaType` properties cannot be set at the same time.'\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaSimpleType SchemaType { get; set; }\n    return:\n      type: System.Xml.Schema.XmlSchemaSimpleType\n      description: The simple type defined in this schema.\n  overload: System.Xml.Schema.XmlSchemaAttribute.SchemaType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName\n  id: SchemaTypeName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: SchemaTypeName\n  nameWithType: XmlSchemaAttribute.SchemaTypeName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).\n  remarks: \"`SchemaTypeName` and <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A> properties cannot be set at the same time. The type must be a QName. The type can include a namespace prefix.  \\n  \\n Optional.\"\n  syntax:\n    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: The name of the simple type.\n  overload: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaAttribute.Use\n  id: Use\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  langs:\n  - csharp\n  name: Use\n  nameWithType: XmlSchemaAttribute.Use\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Use\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets information about how the attribute is used.\n  remarks: \"If specified, this attribute must have one of the values shown in the following table.  \\n  \\n|Enum|Description|  \\n|----------|-----------------|  \\n|`None`|Attribute has no value.|  \\n|`Prohibited`|Attribute cannot be used.|  \\n|`Optional`|Attribute is optional and may have any value. This is the default.|  \\n|`Required`|Attribute must appear once.|\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaUse Use { get; set; }\n    return:\n      type: System.Xml.Schema.XmlSchemaUse\n      description: \"One of the following values: None, Prohibited, Optional, or Required. The default is Optional.  \\n  \\n Optional.\"\n  overload: System.Xml.Schema.XmlSchemaAttribute.Use*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.Schema.XmlSchemaAnnotated\n  isExternal: false\n  name: System.Xml.Schema.XmlSchemaAnnotated\n- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: XmlSchemaAttribute()\n  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute()\n  fullName: System.Xml.Schema.XmlSchemaAttribute.XmlSchemaAttribute()\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: AttributeSchemaType\n  nameWithType: XmlSchemaAttribute.AttributeSchemaType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType\n- uid: System.Xml.Schema.XmlSchemaSimpleType\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSimpleType\n  nameWithType: XmlSchemaSimpleType\n  fullName: System.Xml.Schema.XmlSchemaSimpleType\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: AttributeType\n  nameWithType: XmlSchemaAttribute.AttributeType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeType\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: XmlSchemaAttribute.DefaultValue\n  fullName: System.Xml.Schema.XmlSchemaAttribute.DefaultValue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: FixedValue\n  nameWithType: XmlSchemaAttribute.FixedValue\n  fullName: System.Xml.Schema.XmlSchemaAttribute.FixedValue\n- uid: System.Xml.Schema.XmlSchemaAttribute.Form\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Form\n  nameWithType: XmlSchemaAttribute.Form\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Form\n- uid: System.Xml.Schema.XmlSchemaForm\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchemaForm\n  nameWithType: XmlSchemaForm\n  fullName: System.Xml.Schema.XmlSchemaForm\n- uid: System.Xml.Schema.XmlSchemaAttribute.Name\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Name\n  nameWithType: XmlSchemaAttribute.Name\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Name\n- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: QualifiedName\n  nameWithType: XmlSchemaAttribute.QualifiedName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.QualifiedName\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaAttribute.RefName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: RefName\n  nameWithType: XmlSchemaAttribute.RefName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.RefName\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: SchemaType\n  nameWithType: XmlSchemaAttribute.SchemaType\n  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaType\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: SchemaTypeName\n  nameWithType: XmlSchemaAttribute.SchemaTypeName\n  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName\n- uid: System.Xml.Schema.XmlSchemaAttribute.Use\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Use\n  nameWithType: XmlSchemaAttribute.Use\n  fullName: System.Xml.Schema.XmlSchemaAttribute.Use\n- uid: System.Xml.Schema.XmlSchemaUse\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaUse\n  nameWithType: XmlSchemaUse\n  fullName: System.Xml.Schema.XmlSchemaUse\n- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: XmlSchemaAttribute\n  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: AttributeSchemaType\n  nameWithType: XmlSchemaAttribute.AttributeSchemaType\n- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: AttributeType\n  nameWithType: XmlSchemaAttribute.AttributeType\n- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: XmlSchemaAttribute.DefaultValue\n- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: FixedValue\n  nameWithType: XmlSchemaAttribute.FixedValue\n- uid: System.Xml.Schema.XmlSchemaAttribute.Form*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Form\n  nameWithType: XmlSchemaAttribute.Form\n- uid: System.Xml.Schema.XmlSchemaAttribute.Name*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Name\n  nameWithType: XmlSchemaAttribute.Name\n- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: QualifiedName\n  nameWithType: XmlSchemaAttribute.QualifiedName\n- uid: System.Xml.Schema.XmlSchemaAttribute.RefName*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: RefName\n  nameWithType: XmlSchemaAttribute.RefName\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: SchemaType\n  nameWithType: XmlSchemaAttribute.SchemaType\n- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: SchemaTypeName\n  nameWithType: XmlSchemaAttribute.SchemaTypeName\n- uid: System.Xml.Schema.XmlSchemaAttribute.Use*\n  parent: System.Xml.Schema.XmlSchemaAttribute\n  isExternal: false\n  name: Use\n  nameWithType: XmlSchemaAttribute.Use\n"}