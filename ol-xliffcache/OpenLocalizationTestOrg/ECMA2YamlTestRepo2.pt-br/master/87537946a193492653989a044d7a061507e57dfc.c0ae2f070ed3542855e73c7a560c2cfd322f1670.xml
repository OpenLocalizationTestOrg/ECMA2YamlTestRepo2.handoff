{"nodes":[{"pos":[567,659],"content":"Manages the creation of the user profile and profile events. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages the creation of the user profile and profile events. This class cannot be inherited.","pos":[0,92],"nodes":[{"content":"Manages the creation of the user profile and profile events.","pos":[0,60]},{"content":"This class cannot be inherited.","pos":[61,92]}]}]},{"pos":[672,1709],"content":"When the user profile is enabled, ASP.NET uses the ProfileModule to create the user profile and store it in the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.       The ProfileModule exposes the following events you can handle to configure authentication in your application:      -   The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in.      -   The <xref:System.Web.Profile.ProfileModule.Personalize> event, to customize how the user profile is created.      -   The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, to control how the user profile is saved when the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is set to `true`.       For information about enabling the user profile, see [profile Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the user profile is enabled, ASP.NET uses the ProfileModule to create the user profile and store it in the &lt;xref:System.Web.HttpContext.Profile%2A&gt; property of the current &lt;xref:System.Web.HttpContext&gt;.","pos":[0,207],"source":"When the user profile is enabled, ASP.NET uses the ProfileModule to create the user profile and store it in the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>."},{"content":"The ProfileModule exposes the following events you can handle to configure authentication in your application:      -   The &lt;xref:System.Web.Profile.ProfileModule.MigrateAnonymous&gt; event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in.","pos":[214,515],"source":"       The ProfileModule exposes the following events you can handle to configure authentication in your application:      -   The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in."},{"content":"-   The &lt;xref:System.Web.Profile.ProfileModule.Personalize&gt; event, to customize how the user profile is created.","pos":[521,633],"source":"      -   The <xref:System.Web.Profile.ProfileModule.Personalize> event, to customize how the user profile is created."},{"content":"-   The &lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt; event, to control how the user profile is saved when the &lt;xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[639,853],"source":"      -   The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, to control how the user profile is saved when the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is set to `true`."},{"content":"For information about enabling the user profile, see <bpt id=\"p1\">[</bpt>profile Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)</ept>.","pos":[860,1027],"source":"       For information about enabling the user profile, see [profile Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)."}]},{"pos":[3628,3722],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Profile.ProfileModule\"></xref> class."},{"pos":[3735,4172],"content":"This constructor is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","pos":[0,435],"nodes":[{"content":"This constructor is not intended to be called from application code.","pos":[0,68]},{"content":"An &lt;xref:System.Web.HttpApplication&gt; is created when an ASP.NET application is started.","pos":[75,162],"source":"       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started."},{"content":"The &lt;xref:System.Web.HttpApplication&gt; calls the &lt;xref:System.Web.Profile.ProfileModule&gt; constructor to create the &lt;xref:System.Web.Profile.ProfileModule&gt; for the application.","pos":[163,337],"source":" The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application."},{"content":"The &lt;xref:System.Web.Profile.ProfileModule&gt; is specified in the configuration for an application.","pos":[338,435],"source":" The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."}]}]},{"pos":[4658,4747],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Web.Profile.ProfileModule\"></xref>."},{"pos":[4760,5201],"content":"This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the Dispose method when the object is released. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the Dispose method when the object is released. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","pos":[0,439],"nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]},{"content":"An &lt;xref:System.Web.HttpApplication&gt; is created when an ASP.NET application is started.","pos":[70,157],"source":"       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started."},{"content":"The &lt;xref:System.Web.HttpApplication&gt; creates and initializes the &lt;xref:System.Web.Profile.ProfileModule&gt; for the application and calls the Dispose method when the object is released.","pos":[158,341],"source":" The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the Dispose method when the object is released."},{"content":"The &lt;xref:System.Web.Profile.ProfileModule&gt; is specified in the configuration for an application.","pos":[342,439],"source":" The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."}]}]},{"pos":[5774,5879],"content":"Calls initialization code when a <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is created.","needQuote":true,"needEscape":true,"source":"Calls initialization code when a <xref href=\"System.Web.Profile.ProfileModule\"></xref> object is created."},{"pos":[5892,6290],"content":"This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the Init method when it creates the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the Init method when it creates the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.","pos":[0,396],"nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]},{"content":"An &lt;xref:System.Web.HttpApplication&gt; is created when an ASP.NET application is started.","pos":[70,157],"source":"       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started."},{"content":"The &lt;xref:System.Web.HttpApplication&gt; calls the Init method when it creates the &lt;xref:System.Web.Profile.ProfileModule&gt; for the application.","pos":[158,298],"source":" The <xref:System.Web.HttpApplication> calls the Init method when it creates the <xref:System.Web.Profile.ProfileModule> for the application."},{"content":"The &lt;xref:System.Web.Profile.ProfileModule&gt; is specified in the configuration for an application.","pos":[299,396],"source":" The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."}]}]},{"pos":[6454,6478],"content":"The current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current application.","pos":[0,24]}]},{"pos":[6933,6986],"content":"Occurs when the anonymous user for a profile logs in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the anonymous user for a profile logs in.","pos":[0,53]}]},{"pos":[6999,8084],"content":"You can access the MigrateAnonymous event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application by using the `Profile_MigrateAnonymous` global event, as shown in the example for this topic.       You can use the MigrateAnonymous event to copy profile property values from an anonymous profile to an authenticated profile when a user who has been anonymously using your application logs in.       When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section. A `GetProfile` method enables you to retrieve a `ProfileCommon` object based on a user name. You can use the `GetProfile` method of the current, authenticated profile to retrieve the property values of the anonymous profile. The anonymous property values can then be copied to the current profile for the authenticated user.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can access the MigrateAnonymous event of the &lt;xref:System.Web.Profile.ProfileModule&gt; class in the Global.asax file for your ASP.NET application by using the <ph id=\"ph1\">`Profile_MigrateAnonymous`</ph> global event, as shown in the example for this topic.","pos":[0,241],"source":"You can access the MigrateAnonymous event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application by using the `Profile_MigrateAnonymous` global event, as shown in the example for this topic."},{"content":"You can use the MigrateAnonymous event to copy profile property values from an anonymous profile to an authenticated profile when a user who has been anonymously using your application logs in.","pos":[248,441]},{"content":"When an application that has the user profile enabled is started, ASP.NET creates a new class of type <ph id=\"ph1\">`ProfileCommon`</ph>, which inherits from the &lt;xref:System.Web.Profile.ProfileBase&gt; class.","pos":[448,635],"source":"       When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class."},{"content":"Strongly typed accessors are added to the <ph id=\"ph1\">`ProfileCommon`</ph> class for each property defined in the  configuration section.","pos":[636,756],"source":" Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section."},{"content":"A <ph id=\"ph1\">`GetProfile`</ph> method enables you to retrieve a <ph id=\"ph2\">`ProfileCommon`</ph> object based on a user name.","pos":[757,849],"source":" A `GetProfile` method enables you to retrieve a `ProfileCommon` object based on a user name."},{"content":"You can use the <ph id=\"ph1\">`GetProfile`</ph> method of the current, authenticated profile to retrieve the property values of the anonymous profile.","pos":[850,981],"source":" You can use the `GetProfile` method of the current, authenticated profile to retrieve the property values of the anonymous profile."},{"content":"The anonymous property values can then be copied to the current profile for the authenticated user.","pos":[982,1081]}]},{"pos":[9560,9572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9951,9993],"content":"Occurs before the user profile is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before the user profile is created.","pos":[0,42]}]},{"pos":[10006,11002],"content":"The Personalize event is raised during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. You can access the Personalize event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_Personalize` global event as shown in the example for this topic.       You can use the Personalize event to specify a custom user profile. If the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property value specified for the <xref:System.Web.Profile.ProfileEventHandler> event handler for the Personalize event is set to a value that is not `null` when the Personalize event ends, then the <xref:System.Web.Profile.ProfileModule> will use the specified value of the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Personalize event is raised during the &lt;xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName&gt; event.","pos":[0,128],"source":"The Personalize event is raised during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event."},{"content":"You can access the Personalize event of the &lt;xref:System.Web.Profile.ProfileModule&gt; class in the Global.asax file for your ASP.NET application using the <ph id=\"ph1\">`Profile_Personalize`</ph> global event as shown in the example for this topic.","pos":[129,356],"source":" You can access the Personalize event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_Personalize` global event as shown in the example for this topic."},{"content":"You can use the Personalize event to specify a custom user profile.","pos":[363,430]},{"content":"If the &lt;xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName&gt; property value specified for the &lt;xref:System.Web.Profile.ProfileEventHandler&gt; event handler for the Personalize event is set to a value that is not <ph id=\"ph1\">`null`</ph> when the Personalize event ends, then the &lt;xref:System.Web.Profile.ProfileModule&gt; will use the specified value of the &lt;xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName&gt; property as the value of the &lt;xref:System.Web.HttpContext.Profile%2A&gt; property of the current &lt;xref:System.Web.HttpContext&gt;.","pos":[431,994],"source":" If the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property value specified for the <xref:System.Web.Profile.ProfileEventHandler> event handler for the Personalize event is set to a value that is not `null` when the Personalize event ends, then the <xref:System.Web.Profile.ProfileModule> will use the specified value of the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>."}]},{"pos":[11629,11641],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12050,12125],"content":"Occurs at the end of page execution if automatic profile saving is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs at the end of page execution if automatic profile saving is enabled.","pos":[0,75]}]},{"pos":[12138,14196],"content":"The ProfileAutoSaving event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> property is `true`. You can access the ProfileAutoSaving event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_ProfileAutoSaving` global event, as shown in the example for this topic.       The <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> method checks the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed. The <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can use the ProfileAutoSaving event to determine whether a custom object has been changed and then either to continue with the automatic save for modified objects or to cancel the automatic save if no objects have been modified.       To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the ProfileAutoSaving event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.       There may be multiple subscribers to the ProfileAutoSaving event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the ProfileAutoSaving event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ProfileAutoSaving event is raised at the end of page execution if the &lt;xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName&gt; property is <ph id=\"ph1\">`true`</ph>.","pos":[0,183],"source":"The ProfileAutoSaving event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> property is `true`."},{"content":"You can access the ProfileAutoSaving event of the &lt;xref:System.Web.Profile.ProfileModule&gt; class in the Global.asax file for your ASP.NET application using the <ph id=\"ph1\">`Profile_ProfileAutoSaving`</ph> global event, as shown in the example for this topic.","pos":[184,424],"source":" You can access the ProfileAutoSaving event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_ProfileAutoSaving` global event, as shown in the example for this topic."},{"content":"The &lt;xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName&gt; method checks the &lt;xref:System.Configuration.SettingsPropertyValue.IsDirty%2A&gt; property value for each &lt;xref:System.Configuration.SettingsPropertyValue&gt; in the user profile to determine whether properties that are made up of primitive types, strings, or &lt;xref:System.DateTime&gt; objects have been changed.","pos":[431,812],"source":"       The <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> method checks the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed."},{"content":"The &lt;xref:System.Configuration.SettingsBase.Save%2A&gt; method cannot explicitly determine whether a custom class has changed.","pos":[813,936],"source":" The <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed."},{"content":"You can use the ProfileAutoSaving event to determine whether a custom object has been changed and then either to continue with the automatic save for modified objects or to cancel the automatic save if no objects have been modified.","pos":[937,1169]},{"content":"To cancel the automatic profile save operation, set the &lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt; property to <ph id=\"ph1\">`false`</ph> in the ProfileAutoSaving event; otherwise, set the &lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt; property to <ph id=\"ph2\">`true`</ph>.","pos":[1176,1486],"source":"       To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the ProfileAutoSaving event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`."},{"content":"There may be multiple subscribers to the ProfileAutoSaving event.","pos":[1493,1558]},{"content":"The &lt;xref:System.Web.Profile.ProfileModule&gt; will use the last value that the &lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt; property is set to.","pos":[1559,1737],"source":" The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to."},{"content":"As a result, it is recommended that you explicitly set the &lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt; property in the ProfileAutoSaving event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","pos":[1738,2052],"source":" As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the ProfileAutoSaving event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber."}]},{"pos":[14798,14810],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Profile.ProfileModule\n  id: ProfileModule\n  children:\n  - System.Web.Profile.ProfileModule.#ctor\n  - System.Web.Profile.ProfileModule.Dispose\n  - System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)\n  - System.Web.Profile.ProfileModule.MigrateAnonymous\n  - System.Web.Profile.ProfileModule.Personalize\n  - System.Web.Profile.ProfileModule.ProfileAutoSaving\n  langs:\n  - csharp\n  name: ProfileModule\n  nameWithType: ProfileModule\n  fullName: System.Web.Profile.ProfileModule\n  type: Class\n  summary: Manages the creation of the user profile and profile events. This class cannot be inherited.\n  remarks: \"When the user profile is enabled, ASP.NET uses the ProfileModule to create the user profile and store it in the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.  \\n  \\n The ProfileModule exposes the following events you can handle to configure authentication in your application:  \\n  \\n-   The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in.  \\n  \\n-   The <xref:System.Web.Profile.ProfileModule.Personalize> event, to customize how the user profile is created.  \\n  \\n-   The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, to control how the user profile is saved when the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is set to `true`.  \\n  \\n For information about enabling the user profile, see [profile Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).\"\n  example:\n  - \"The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <authentication mode=\\\"Forms\\\" >  \\n      <forms loginUrl=\\\"login.aspx\\\" name=\\\".ASPXFORMSAUTH\\\" />  \\n    </authentication>  \\n  \\n    <anonymousIdentification enabled=\\\"true\\\" />  \\n  \\n    <profile enabled=\\\"true\\\" defaultProvider=\\\"AspNetSqlProvider\\\">  \\n      <properties>  \\n        <add name=\\\"ZipCode\\\" allowAnonymous=\\\"true\\\" />  \\n        <add name=\\\"CityAndState\\\" allowAnonymous=\\\"true\\\" />  \\n        <add name=\\\"StockSymbols\\\" type=\\\"System.Collections.ArrayList\\\" allowAnonymous=\\\"true\\\" />  \\n      </properties>  \\n    </profile>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application. The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_13_1.asax)]\\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/t-system.web.profile.pro_13_1.asax)]\"\n  syntax:\n    content: 'public sealed class ProfileModule : System.Web.IHttpModule'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpModule\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.#ctor\n  id: '#ctor'\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: ProfileModule()\n  nameWithType: ProfileModule.ProfileModule()\n  fullName: System.Web.Profile.ProfileModule.ProfileModule()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Initializes a new instance of the <xref href=\"System.Web.Profile.ProfileModule\"></xref> class.\n  remarks: \"This constructor is not intended to be called from application code.  \\n  \\n An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.\"\n  syntax:\n    content: public ProfileModule ();\n    parameters: []\n  overload: System.Web.Profile.ProfileModule.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.Dispose\n  id: Dispose\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ProfileModule.Dispose()\n  fullName: System.Web.Profile.ProfileModule.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Releases all resources used by the <xref href=\"System.Web.Profile.ProfileModule\"></xref>.\n  remarks: \"This method is not intended to be called from application code.  \\n  \\n An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the Dispose method when the object is released. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Profile.ProfileModule.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)\n  id: Init(System.Web.HttpApplication)\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: Init(HttpApplication)\n  nameWithType: ProfileModule.Init(HttpApplication)\n  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Calls initialization code when a <xref href=\"System.Web.Profile.ProfileModule\"></xref> object is created.\n  remarks: \"This method is not intended to be called from application code.  \\n  \\n An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the Init method when it creates the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.\"\n  syntax:\n    content: public void Init (System.Web.HttpApplication app);\n    parameters:\n    - id: app\n      type: System.Web.HttpApplication\n      description: The current application.\n  overload: System.Web.Profile.ProfileModule.Init*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.MigrateAnonymous\n  id: MigrateAnonymous\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: MigrateAnonymous\n  nameWithType: ProfileModule.MigrateAnonymous\n  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Occurs when the anonymous user for a profile logs in.\n  remarks: \"You can access the MigrateAnonymous event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application by using the `Profile_MigrateAnonymous` global event, as shown in the example for this topic.  \\n  \\n You can use the MigrateAnonymous event to copy profile property values from an anonymous profile to an authenticated profile when a user who has been anonymously using your application logs in.  \\n  \\n When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section. A `GetProfile` method enables you to retrieve a `ProfileCommon` object based on a user name. You can use the `GetProfile` method of the current, authenticated profile to retrieve the property values of the anonymous profile. The anonymous property values can then be copied to the current profile for the authenticated user.\"\n  example:\n  - \"The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <authentication mode=\\\"Forms\\\" >  \\n      <forms loginUrl=\\\"login.aspx\\\" name=\\\".ASPXFORMSAUTH\\\" />  \\n    </authentication>  \\n  \\n    <anonymousIdentification enabled=\\\"true\\\" />  \\n  \\n    <profile enabled=\\\"true\\\" defaultProvider=\\\"AspNetSqlProvider\\\">  \\n      <properties>  \\n        <add name=\\\"ZipCode\\\" allowAnonymous=\\\"true\\\" />  \\n        <add name=\\\"CityAndState\\\" allowAnonymous=\\\"true\\\" />  \\n        <add name=\\\"StockSymbols\\\" type=\\\"System.Collections.ArrayList\\\" allowAnonymous=\\\"true\\\" />  \\n      </properties>  \\n    </profile>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n The following code example shows the MigrateAnonymous event included in the Global.asax file for an ASP.NET application. The MigrateAnonymous event copies profile property values from the anonymous profile to the profile for the current user.  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/e-system.web.profile.pro_0_1.asax)]\\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/e-system.web.profile.pro_0_1.asax)]\"\n  syntax:\n    content: public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;\n    return:\n      type: System.Web.Profile.ProfileMigrateEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.Personalize\n  id: Personalize\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: Personalize\n  nameWithType: ProfileModule.Personalize\n  fullName: System.Web.Profile.ProfileModule.Personalize\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Occurs before the user profile is created.\n  remarks: \"The Personalize event is raised during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. You can access the Personalize event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_Personalize` global event as shown in the example for this topic.  \\n  \\n You can use the Personalize event to specify a custom user profile. If the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property value specified for the <xref:System.Web.Profile.ProfileEventHandler> event handler for the Personalize event is set to a value that is not `null` when the Personalize event ends, then the <xref:System.Web.Profile.ProfileModule> will use the specified value of the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.\"\n  example:\n  - \"The following code example shows the Personalize event declared in the Global.asax file for an application. The event code loads a user profile for a user based on role membership.  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/visualbasic/e-system.web.profile.pro_1_1.asax)]\\n [!code-cs[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/csharp/e-system.web.profile.pro_1_1.asax)]\"\n  syntax:\n    content: public event System.Web.Profile.ProfileEventHandler Personalize;\n    return:\n      type: System.Web.Profile.ProfileEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving\n  id: ProfileAutoSaving\n  parent: System.Web.Profile.ProfileModule\n  langs:\n  - csharp\n  name: ProfileAutoSaving\n  nameWithType: ProfileModule.ProfileAutoSaving\n  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Occurs at the end of page execution if automatic profile saving is enabled.\n  remarks: \"The ProfileAutoSaving event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> property is `true`. You can access the ProfileAutoSaving event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_ProfileAutoSaving` global event, as shown in the example for this topic.  \\n  \\n The <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> method checks the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed. The <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can use the ProfileAutoSaving event to determine whether a custom object has been changed and then either to continue with the automatic save for modified objects or to cancel the automatic save if no objects have been modified.  \\n  \\n To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the ProfileAutoSaving event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.  \\n  \\n There may be multiple subscribers to the ProfileAutoSaving event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the ProfileAutoSaving event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.\"\n  example:\n  - \"The following code example shows the ProfileAutoSaving event included in the Global.asax file for an ASP.NET application.  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/csharp/e-system.web.profile.pro_2_1.asax)]\\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/visualbasic/e-system.web.profile.pro_2_1.asax)]\"\n  syntax:\n    content: public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;\n    return:\n      type: System.Web.Profile.ProfileAutoSaveEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Profile.ProfileModule.#ctor\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: ProfileModule()\n  nameWithType: ProfileModule.ProfileModule()\n  fullName: System.Web.Profile.ProfileModule.ProfileModule()\n- uid: System.Web.Profile.ProfileModule.Dispose\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: Dispose()\n  nameWithType: ProfileModule.Dispose()\n  fullName: System.Web.Profile.ProfileModule.Dispose()\n- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: ProfileModule.Init(HttpApplication)\n  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.Web.Profile.ProfileModule.MigrateAnonymous\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: MigrateAnonymous\n  nameWithType: ProfileModule.MigrateAnonymous\n  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous\n- uid: System.Web.Profile.ProfileMigrateEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileMigrateEventHandler\n  nameWithType: ProfileMigrateEventHandler\n  fullName: System.Web.Profile.ProfileMigrateEventHandler\n- uid: System.Web.Profile.ProfileModule.Personalize\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: Personalize\n  nameWithType: ProfileModule.Personalize\n  fullName: System.Web.Profile.ProfileModule.Personalize\n- uid: System.Web.Profile.ProfileEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileEventHandler\n  nameWithType: ProfileEventHandler\n  fullName: System.Web.Profile.ProfileEventHandler\n- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: ProfileAutoSaving\n  nameWithType: ProfileModule.ProfileAutoSaving\n  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving\n- uid: System.Web.Profile.ProfileAutoSaveEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileAutoSaveEventHandler\n  nameWithType: ProfileAutoSaveEventHandler\n  fullName: System.Web.Profile.ProfileAutoSaveEventHandler\n- uid: System.Web.Profile.ProfileModule.#ctor*\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: ProfileModule\n  nameWithType: ProfileModule.ProfileModule\n- uid: System.Web.Profile.ProfileModule.Dispose*\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: Dispose\n  nameWithType: ProfileModule.Dispose\n- uid: System.Web.Profile.ProfileModule.Init*\n  parent: System.Web.Profile.ProfileModule\n  isExternal: false\n  name: Init\n  nameWithType: ProfileModule.Init\n"}