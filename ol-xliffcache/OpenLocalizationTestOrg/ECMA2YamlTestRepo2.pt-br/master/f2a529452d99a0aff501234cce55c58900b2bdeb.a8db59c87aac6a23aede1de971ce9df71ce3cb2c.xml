{"nodes":[{"pos":[1425,1508],"content":"Represents the base class for all Compensating Resource Manager (CRM) Compensators.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class for all Compensating Resource Manager (CRM) Compensators.","pos":[0,83]}]},{"pos":[1521,1882],"content":"The user should extend from this object in order to write a custom transaction Compensator.       A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.       For more information, see [How to: Create a Compensating Resource Manager (CRM)](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The user should extend from this object in order to write a custom transaction Compensator.","pos":[0,91]},{"content":"A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.","pos":[98,199]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create a Compensating Resource Manager (CRM)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029)</ept>.","pos":[206,357],"source":"       For more information, see [How to: Create a Compensating Resource Manager (CRM)](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029)."}]},{"pos":[4937,5064],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.Compensator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Compensator\"></xref> class."},{"pos":[5904,6004],"content":"Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.","pos":[0,100]}]},{"pos":[6660,6691],"content":"The log record to be delivered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log record to be delivered.","pos":[0,31]}]},{"pos":[6750,6930],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the delivered record should be forgotten; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7602,7750],"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.","pos":[0,148]}]},{"pos":[8309,8466],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to begin abort phase; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to begin abort phase; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9142,9290],"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.","pos":[0,148]}]},{"pos":[9850,10008],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to begin commit phase; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to begin commit phase; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10637,10786],"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.","pos":[0,149]}]},{"pos":[11860,12014],"content":"Gets a value representing the Compensating Resource Manager (CRM) <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a value representing the Compensating Resource Manager (CRM) <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> object."},{"pos":[12223,12315],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> object."},{"pos":[13095,13158],"content":"Delivers a log record in forward order during the commit phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Delivers a log record in forward order during the commit phase.","pos":[0,63]}]},{"pos":[13815,13841],"content":"The log record to forward.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log record to forward.","pos":[0,26]}]},{"pos":[13900,14080],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the delivered record should be forgotten; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14690,14825],"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.","pos":[0,135]}]},{"pos":[15924,16061],"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.","pos":[0,137]}]},{"pos":[17167,17299],"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.","pos":[0,132]}]},{"pos":[17845,17995],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18785,18849],"content":"Delivers a log record in forward order during the prepare phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Delivers a log record in forward order during the prepare phase.","pos":[0,64]}]},{"pos":[19507,19533],"content":"The log record to forward.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log record to forward.","pos":[0,26]}]},{"pos":[19592,19772],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the delivered record should be forgotten; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  id: Compensator\n  children:\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare\n  - System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  langs:\n  - csharp\n  name: Compensator\n  nameWithType: Compensator\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  type: Class\n  summary: Represents the base class for all Compensating Resource Manager (CRM) Compensators.\n  remarks: \"The user should extend from this object in order to write a custom transaction Compensator.  \\n  \\n A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.  \\n  \\n For more information, see [How to: Create a Compensating Resource Manager (CRM)](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029).\"\n  example:\n  - \"The following code example demonstrates the use of this class.  \\n  \\n [!code-vb[EnterpriseServices_Crm#20](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#20](~/add/codesnippet/cpp/t-system.enterpriseservi_0_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#20](~/add/codesnippet/csharp/t-system.enterpriseservi_0_1.cs)]  \\n  \\n This compensator is used by the following worker class.  \\n  \\n [!code-vb[EnterpriseServices_Crm#10](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_2.vb)]\\n [!code-cpp[EnterpriseServices_Crm#10](~/add/codesnippet/cpp/t-system.enterpriseservi_0_2.cpp)]\\n [!code-cs[EnterpriseServices_Crm#10](~/add/codesnippet/csharp/t-system.enterpriseservi_0_2.cs)]  \\n  \\n The following code example demonstrates a client that exercises this compensator and worker.  \\n  \\n [!code-cpp[EnterpriseServices_Crm#30](~/add/codesnippet/cpp/t-system.enterpriseservi_0_3.cpp)]\\n [!code-cs[EnterpriseServices_Crm#30](~/add/codesnippet/csharp/t-system.enterpriseservi_0_3.cs)]\\n [!code-vb[EnterpriseServices_Crm#30](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_3.vb)]\"\n  syntax:\n    content: 'public class Compensator : System.EnterpriseServices.ServicedComponent'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ContextBoundObject\n  - System.EnterpriseServices.ServicedComponent\n  implements: []\n  inheritedMembers:\n  - System.EnterpriseServices.ServicedComponent.Activate\n  - System.EnterpriseServices.ServicedComponent.CanBePooled\n  - System.EnterpriseServices.ServicedComponent.Construct(System.String)\n  - System.EnterpriseServices.ServicedComponent.Deactivate\n  - System.EnterpriseServices.ServicedComponent.Dispose\n  - System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)\n  - System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: Compensator()\n  nameWithType: Compensator.Compensator()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Compensator()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Compensator\"></xref> class.\n  syntax:\n    content: public Compensator ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  id: AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: AbortRecord(LogRecord)\n  nameWithType: Compensator.AbortRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(LogRecord)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#28](~/add/codesnippet/visualbasic/bf259d0d-d4a3-40ee-874a-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#28](~/add/codesnippet/cpp/bf259d0d-d4a3-40ee-874a-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#28](~/add/codesnippet/csharp/bf259d0d-d4a3-40ee-874a-_1.cs)]\"\n  syntax:\n    content: public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);\n    parameters:\n    - id: rec\n      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord\n      description: The log record to be delivered.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)\n  id: BeginAbort(System.Boolean)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: BeginAbort(Boolean)\n  nameWithType: Compensator.BeginAbort(Boolean)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(Boolean)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#27](~/add/codesnippet/visualbasic/efebd077-452a-4485-98bc-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#27](~/add/codesnippet/cpp/efebd077-452a-4485-98bc-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#27](~/add/codesnippet/csharp/efebd077-452a-4485-98bc-_1.cs)]\"\n  syntax:\n    content: public virtual void BeginAbort (bool fRecovery);\n    parameters:\n    - id: fRecovery\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to begin abort phase; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)\n  id: BeginCommit(System.Boolean)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: BeginCommit(Boolean)\n  nameWithType: Compensator.BeginCommit(Boolean)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(Boolean)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#24](~/add/codesnippet/visualbasic/a929af72-5899-4499-aac0-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#24](~/add/codesnippet/cpp/a929af72-5899-4499-aac0-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#24](~/add/codesnippet/csharp/a929af72-5899-4499-aac0-_1.cs)]\"\n  syntax:\n    content: public virtual void BeginCommit (bool fRecovery);\n    parameters:\n    - id: fRecovery\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to begin commit phase; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare\n  id: BeginPrepare\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: BeginPrepare()\n  nameWithType: Compensator.BeginPrepare()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#21](~/add/codesnippet/visualbasic/b4b00685-a222-4032-bae9-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#21](~/add/codesnippet/cpp/b4b00685-a222-4032-bae9-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#21](~/add/codesnippet/csharp/b4b00685-a222-4032-bae9-_1.cs)]\"\n  syntax:\n    content: public virtual void BeginPrepare ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk\n  id: Clerk\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: Clerk\n  nameWithType: Compensator.Clerk\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Gets a value representing the Compensating Resource Manager (CRM) <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> object.\n  syntax:\n    content: public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }\n    return:\n      type: System.EnterpriseServices.CompensatingResourceManager.Clerk\n      description: The <xref href=\"System.EnterpriseServices.CompensatingResourceManager.Clerk\"></xref> object.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  id: CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: CommitRecord(LogRecord)\n  nameWithType: Compensator.CommitRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(LogRecord)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Delivers a log record in forward order during the commit phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#25](~/add/codesnippet/visualbasic/35b176a0-7924-4158-a97a-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#25](~/add/codesnippet/cpp/35b176a0-7924-4158-a97a-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#25](~/add/codesnippet/csharp/35b176a0-7924-4158-a97a-_1.cs)]\"\n  syntax:\n    content: public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);\n    parameters:\n    - id: rec\n      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord\n      description: The log record to forward.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort\n  id: EndAbort\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: EndAbort()\n  nameWithType: Compensator.EndAbort()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#29](~/add/codesnippet/visualbasic/m-system.enterpriseservi_32_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#29](~/add/codesnippet/cpp/m-system.enterpriseservi_32_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#29](~/add/codesnippet/csharp/m-system.enterpriseservi_32_1.cs)]\"\n  syntax:\n    content: public virtual void EndAbort ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit\n  id: EndCommit\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: EndCommit()\n  nameWithType: Compensator.EndCommit()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#26](~/add/codesnippet/visualbasic/m-system.enterpriseservi_12_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#26](~/add/codesnippet/cpp/m-system.enterpriseservi_12_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#26](~/add/codesnippet/csharp/m-system.enterpriseservi_12_1.cs)]\"\n  syntax:\n    content: public virtual void EndCommit ();\n    parameters: []\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare\n  id: EndPrepare\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: EndPrepare()\n  nameWithType: Compensator.EndPrepare()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#23](~/add/codesnippet/visualbasic/m-system.enterpriseservi_3_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#23](~/add/codesnippet/cpp/m-system.enterpriseservi_3_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#23](~/add/codesnippet/csharp/m-system.enterpriseservi_3_1.cs)]\"\n  syntax:\n    content: public virtual bool EndPrepare ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  id: PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  langs:\n  - csharp\n  name: PrepareRecord(LogRecord)\n  nameWithType: Compensator.PrepareRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(LogRecord)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.CompensatingResourceManager\n  summary: Delivers a log record in forward order during the prepare phase.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the implementation of this method.  \\n  \\n [!code-vb[EnterpriseServices_Crm#22](~/add/codesnippet/visualbasic/37b41c14-71b9-4a11-be23-_1.vb)]\\n [!code-cpp[EnterpriseServices_Crm#22](~/add/codesnippet/cpp/37b41c14-71b9-4a11-be23-_1.cpp)]\\n [!code-cs[EnterpriseServices_Crm#22](~/add/codesnippet/csharp/37b41c14-71b9-4a11-be23-_1.cs)]\"\n  syntax:\n    content: public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);\n    parameters:\n    - id: rec\n      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord\n      description: The log record to forward.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delivered record should be forgotten; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EnterpriseServices.ServicedComponent\n  isExternal: false\n  name: System.EnterpriseServices.ServicedComponent\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: Compensator()\n  nameWithType: Compensator.Compensator()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Compensator()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: AbortRecord(LogRecord)\n  nameWithType: Compensator.AbortRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(LogRecord)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.EnterpriseServices.CompensatingResourceManager.LogRecord\n  parent: System.EnterpriseServices.CompensatingResourceManager\n  isExternal: false\n  name: LogRecord\n  nameWithType: LogRecord\n  fullName: System.EnterpriseServices.CompensatingResourceManager.LogRecord\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginAbort(Boolean)\n  nameWithType: Compensator.BeginAbort(Boolean)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(Boolean)\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginCommit(Boolean)\n  nameWithType: Compensator.BeginCommit(Boolean)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(Boolean)\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginPrepare()\n  nameWithType: Compensator.BeginPrepare()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: Clerk\n  nameWithType: Compensator.Clerk\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk\n- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk\n  parent: System.EnterpriseServices.CompensatingResourceManager\n  isExternal: false\n  name: Clerk\n  nameWithType: Clerk\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: CommitRecord(LogRecord)\n  nameWithType: Compensator.CommitRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(LogRecord)\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndAbort()\n  nameWithType: Compensator.EndAbort()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndCommit()\n  nameWithType: Compensator.EndCommit()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndPrepare()\n  nameWithType: Compensator.EndPrepare()\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare()\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: PrepareRecord(LogRecord)\n  nameWithType: Compensator.PrepareRecord(LogRecord)\n  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(LogRecord)\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: Compensator\n  nameWithType: Compensator.Compensator\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: AbortRecord\n  nameWithType: Compensator.AbortRecord\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginAbort\n  nameWithType: Compensator.BeginAbort\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginCommit\n  nameWithType: Compensator.BeginCommit\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: BeginPrepare\n  nameWithType: Compensator.BeginPrepare\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: Clerk\n  nameWithType: Compensator.Clerk\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: CommitRecord\n  nameWithType: Compensator.CommitRecord\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndAbort\n  nameWithType: Compensator.EndAbort\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndCommit\n  nameWithType: Compensator.EndCommit\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: EndPrepare\n  nameWithType: Compensator.EndPrepare\n- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord*\n  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator\n  isExternal: false\n  name: PrepareRecord\n  nameWithType: Compensator.PrepareRecord\n"}