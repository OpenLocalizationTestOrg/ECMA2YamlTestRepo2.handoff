{"nodes":[{"pos":[1422,1434],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4734,4746],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5451,5463],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5528,5540],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6665,6677],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7345,7357],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8182,8194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8275,8287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8960,8972],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9779,9791],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9872,9884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10786,10798],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ExtensionCollection`1\n  id: ExtensionCollection`1\n  children:\n  - System.ServiceModel.ExtensionCollection`1.#ctor(`0)\n  - System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)\n  - System.ServiceModel.ExtensionCollection`1.ClearItems\n  - System.ServiceModel.ExtensionCollection`1.Find``1\n  - System.ServiceModel.ExtensionCollection`1.FindAll``1\n  - System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})\n  - System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)\n  - System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})\n  - System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly\n  langs:\n  - csharp\n  name: ExtensionCollection<T>\n  nameWithType: ExtensionCollection<T>\n  fullName: System.ServiceModel.ExtensionCollection<T>\n  type: Class\n  syntax:\n    content: 'public sealed class ExtensionCollection<T> : System.Collections.Generic.SynchronizedCollection<System.ServiceModel.IExtension<T>>, System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>, System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>>, System.ServiceModel.IExtensionCollection<T> where T : IExtensibleObject<T>'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Collections.Generic.SynchronizedCollection`1\n  implements:\n  - System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>\n  - System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>>\n  - System.ServiceModel.IExtensionCollection<T>\n  inheritedMembers:\n  - System.Collections.Generic.SynchronizedCollection`1.Add(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Clear\n  - System.Collections.Generic.SynchronizedCollection`1.Contains(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.Count\n  - System.Collections.Generic.SynchronizedCollection`1.GetEnumerator\n  - System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.Items\n  - System.Collections.Generic.SynchronizedCollection`1.Remove(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.SyncRoot\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: ExtensionCollection(T)\n  nameWithType: ExtensionCollection<T>.ExtensionCollection(T)\n  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection(T)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: public ExtensionCollection (T owner);\n    parameters:\n    - id: owner\n      type: T\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)\n  id: '#ctor(`0,System.Object)'\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: ExtensionCollection(T,Object)\n  nameWithType: ExtensionCollection<T>.ExtensionCollection(T,Object)\n  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection(T,Object)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: public ExtensionCollection (T owner, object syncRoot);\n    parameters:\n    - id: owner\n      type: T\n      description: To be added.\n    - id: syncRoot\n      type: System.Object\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.ClearItems\n  id: ClearItems\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: ExtensionCollection<T>.ClearItems()\n  fullName: System.ServiceModel.ExtensionCollection<T>.ClearItems()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected override void ClearItems ();\n    parameters: []\n  overload: System.ServiceModel.ExtensionCollection`1.ClearItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.Find``1\n  id: Find``1\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: Find()\n  nameWithType: ExtensionCollection<T>.Find()\n  fullName: System.ServiceModel.ExtensionCollection<T>.Find()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: public E Find<E> ();\n    parameters: []\n    return:\n      type: E\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.Find<E>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.FindAll``1\n  id: FindAll``1\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: FindAll()\n  nameWithType: ExtensionCollection<T>.FindAll()\n  fullName: System.ServiceModel.ExtensionCollection<T>.FindAll()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<E> FindAll<E> ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{E}\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.FindAll<E>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})\n  id: InsertItem(System.Int32,System.ServiceModel.IExtension{`0})\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: InsertItem(Int32,IExtension<T>)\n  nameWithType: ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)\n  fullName: System.ServiceModel.ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected override void InsertItem (int index, System.ServiceModel.IExtension<T> item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.ServiceModel.IExtension{T}\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: ExtensionCollection<T>.RemoveItem(Int32)\n  fullName: System.ServiceModel.ExtensionCollection<T>.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected override void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.RemoveItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})\n  id: SetItem(System.Int32,System.ServiceModel.IExtension{`0})\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: SetItem(Int32,IExtension<T>)\n  nameWithType: ExtensionCollection<T>.SetItem(Int32,IExtension<T>)\n  fullName: System.ServiceModel.ExtensionCollection<T>.SetItem(Int32,IExtension<T>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected override void SetItem (int index, System.ServiceModel.IExtension<T> item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.ServiceModel.IExtension{T}\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.SetItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly\n  isEii: true\n  parent: System.ServiceModel.ExtensionCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExtensionCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.ServiceModel.ExtensionCollection<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection<System#ServiceModel#IExtension<T>>#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.Generic.SynchronizedCollection`1\n  isExternal: false\n  name: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.IExtension<T>>\n- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0)\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: ExtensionCollection(T)\n  nameWithType: ExtensionCollection<T>.ExtensionCollection(T)\n  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: ExtensionCollection(T,Object)\n  nameWithType: ExtensionCollection<T>.ExtensionCollection(T,Object)\n  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection(T,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.ExtensionCollection`1.ClearItems\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: ClearItems()\n  nameWithType: ExtensionCollection<T>.ClearItems()\n  fullName: System.ServiceModel.ExtensionCollection<T>.ClearItems()\n- uid: System.ServiceModel.ExtensionCollection`1.Find``1\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: Find()\n  nameWithType: ExtensionCollection<T>.Find()\n  fullName: System.ServiceModel.ExtensionCollection<T>.Find()\n- uid: E\n  isExternal: true\n  name: E\n  nameWithType: E\n  fullName: E\n- uid: System.ServiceModel.ExtensionCollection`1.FindAll``1\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: FindAll()\n  nameWithType: ExtensionCollection<T>.FindAll()\n  fullName: System.ServiceModel.ExtensionCollection<T>.FindAll()\n- uid: System.Collections.ObjectModel.Collection{E}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<E>\n  nameWithType: Collection<E>\n  fullName: System.Collections.ObjectModel.Collection<E>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<E>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: E\n    name: E\n    nameWithType: E\n    fullName: E\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: InsertItem(Int32,IExtension<T>)\n  nameWithType: ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)\n  fullName: System.ServiceModel.ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.IExtension{T}\n  parent: System.ServiceModel\n  isExternal: true\n  name: IExtension<T>\n  nameWithType: IExtension<T>\n  fullName: System.ServiceModel.IExtension<T>\n  spec.csharp:\n  - uid: System.ServiceModel.IExtension`1\n    name: IExtension\n    nameWithType: IExtension\n    fullName: IExtension<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: ExtensionCollection<T>.RemoveItem(Int32)\n  fullName: System.ServiceModel.ExtensionCollection<T>.RemoveItem(Int32)\n- uid: System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: SetItem(Int32,IExtension<T>)\n  nameWithType: ExtensionCollection<T>.SetItem(Int32,IExtension<T>)\n  fullName: System.ServiceModel.ExtensionCollection<T>.SetItem(Int32,IExtension<T>)\n- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExtensionCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.ServiceModel.ExtensionCollection<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ExtensionCollection`1.#ctor*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: ExtensionCollection<T>\n  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>\n- uid: System.ServiceModel.ExtensionCollection`1.ClearItems*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: ClearItems\n  nameWithType: ExtensionCollection<T>.ClearItems\n- uid: System.ServiceModel.ExtensionCollection`1.Find<E>*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: Find<E>\n  nameWithType: ExtensionCollection<T>.Find<E>\n- uid: System.ServiceModel.ExtensionCollection`1.FindAll<E>*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: FindAll<E>\n  nameWithType: ExtensionCollection<T>.FindAll<E>\n- uid: System.ServiceModel.ExtensionCollection`1.InsertItem*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: InsertItem\n  nameWithType: ExtensionCollection<T>.InsertItem\n- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: RemoveItem\n  nameWithType: ExtensionCollection<T>.RemoveItem\n- uid: System.ServiceModel.ExtensionCollection`1.SetItem*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: SetItem\n  nameWithType: ExtensionCollection<T>.SetItem\n- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection<System#ServiceModel#IExtension<T>>#IsReadOnly*\n  parent: System.ServiceModel.ExtensionCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly\n  nameWithType: ExtensionCollection<T>.System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly\n"}