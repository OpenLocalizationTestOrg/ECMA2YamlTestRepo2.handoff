{"nodes":[{"pos":[947,959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[997,1009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3772,3784],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4696,4708],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4788,4800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5502,5514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6189,6201],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.PropertyReference`2\n  id: PropertyReference`2\n  children:\n  - System.Activities.Expressions.PropertyReference`2.#ctor\n  - System.Activities.Expressions.PropertyReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.PropertyReference`2.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.PropertyReference`2.Operand\n  - System.Activities.Expressions.PropertyReference`2.PropertyName\n  langs:\n  - csharp\n  name: PropertyReference<TOperand,TResult>\n  nameWithType: PropertyReference<TOperand,TResult>\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>\n  type: Class\n  syntax:\n    content: 'public sealed class PropertyReference<TOperand,TResult> : System.Activities.CodeActivity<System.Activities.Location<TResult>>'\n    typeParameters:\n    - id: TOperand\n      description: To be added.\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.PropertyReference`2.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.PropertyReference`2\n  langs:\n  - csharp\n  name: PropertyReference()\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyReference()\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.PropertyReference()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public PropertyReference ();\n    parameters: []\n  overload: System.Activities.Expressions.PropertyReference`2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.PropertyReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.PropertyReference`2\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: PropertyReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.PropertyReference`2.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.PropertyReference`2.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.PropertyReference`2\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: PropertyReference<TOperand,TResult>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override System.Activities.Location<TResult> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location{TResult}\n      description: To be added.\n  overload: System.Activities.Expressions.PropertyReference`2.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.PropertyReference`2.Operand\n  id: Operand\n  parent: System.Activities.Expressions.PropertyReference`2\n  langs:\n  - csharp\n  name: Operand\n  nameWithType: PropertyReference<TOperand,TResult>.Operand\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.Operand\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<TOperand> Operand { get; set; }\n    return:\n      type: System.Activities.InArgument{TOperand}\n      description: To be added.\n  overload: System.Activities.Expressions.PropertyReference`2.Operand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.PropertyReference`2.PropertyName\n  id: PropertyName\n  parent: System.Activities.Expressions.PropertyReference`2\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyName\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.PropertyName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public string PropertyName { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.PropertyReference`2.PropertyName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<TResult>>\n- uid: System.Activities.Expressions.PropertyReference`2.#ctor\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: PropertyReference()\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyReference()\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.PropertyReference()\n- uid: System.Activities.Expressions.PropertyReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: PropertyReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.PropertyReference`2.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: PropertyReference<TOperand,TResult>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.Execute(CodeActivityContext)\n- uid: System.Activities.Location{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: Location<TResult>\n  nameWithType: Location<TResult>\n  fullName: System.Activities.Location<TResult>\n  spec.csharp:\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: Location<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.PropertyReference`2.Operand\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: Operand\n  nameWithType: PropertyReference<TOperand,TResult>.Operand\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.Operand\n- uid: System.Activities.InArgument{TOperand}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TOperand>\n  nameWithType: InArgument<TOperand>\n  fullName: System.Activities.InArgument<TOperand>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<TOperand>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TOperand\n    name: TOperand\n    nameWithType: TOperand\n    fullName: TOperand\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.PropertyReference`2.PropertyName\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyName\n  fullName: System.Activities.Expressions.PropertyReference<TOperand,TResult>.PropertyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.PropertyReference`2.#ctor*\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: PropertyReference<TOperand,TResult>\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyReference<TOperand,TResult>\n- uid: System.Activities.Expressions.PropertyReference`2.CacheMetadata*\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: PropertyReference<TOperand,TResult>.CacheMetadata\n- uid: System.Activities.Expressions.PropertyReference`2.Execute*\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: Execute\n  nameWithType: PropertyReference<TOperand,TResult>.Execute\n- uid: System.Activities.Expressions.PropertyReference`2.Operand*\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: Operand\n  nameWithType: PropertyReference<TOperand,TResult>.Operand\n- uid: System.Activities.Expressions.PropertyReference`2.PropertyName*\n  parent: System.Activities.Expressions.PropertyReference`2\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyReference<TOperand,TResult>.PropertyName\n"}