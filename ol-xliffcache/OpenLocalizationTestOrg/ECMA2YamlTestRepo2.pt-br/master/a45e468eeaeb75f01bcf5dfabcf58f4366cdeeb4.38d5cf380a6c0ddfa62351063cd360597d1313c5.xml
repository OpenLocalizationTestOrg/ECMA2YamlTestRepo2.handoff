{"nodes":[{"pos":[1127,1187],"content":"Provides utility methods for common virtual path operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides utility methods for common virtual path operations.","pos":[0,60]}]},{"pos":[4357,4454],"content":"Appends the literal slash mark (/) to the end of the virtual path, if one does not already exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends the literal slash mark (/) to the end of the virtual path, if one does not already exist.","pos":[0,97]}]},{"pos":[4466,4568],"content":"If the literal slash mark (/) exists at the end of the virtual path, the virtual path is not modified.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the literal slash mark (/) exists at the end of the virtual path, the virtual path is not modified.","pos":[0,102]}]},{"pos":[4738,4783],"content":"The virtual path to append the slash mark to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to append the slash mark to.","pos":[0,45]}]},{"pos":[4841,4867],"content":"The modified virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modified virtual path.","pos":[0,26]}]},{"pos":[5381,5422],"content":"Combines a base path and a relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Combines a base path and a relative path.","pos":[0,41]}]},{"pos":[5435,5837],"content":"TheCombine method returns the value of the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property if the relative path is exactly a tilde (~).       The Combine method uses the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"TheCombine method returns the value of the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property if the relative path is exactly a tilde (~).       The Combine method uses the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path.","pos":[0,400],"nodes":[{"content":"TheCombine method returns the value of the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property if the relative path is exactly a tilde (~).","pos":[0,153],"source":"TheCombine method returns the value of the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property if the relative path is exactly a tilde (~)."},{"content":"The Combine method uses the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path.","pos":[160,400],"source":"       The Combine method uses the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path."}]}]},{"pos":[6011,6025],"content":"The base path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base path.","pos":[0,14]}]},{"pos":[6094,6112],"content":"The relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path.","pos":[0,18]}]},{"pos":[6170,6235],"content":"The combined <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">basePath</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relativePath</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The combined <code>basePath</code> and <code>relativePath</code>."},{"pos":[6396,6517],"content":"<code>relativePath</code> is a physical path.       -or-       <code>relativePath</code> includes one or more colons.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;relativePath&lt;/code&gt;</ph> is a physical path.","pos":[0,45],"source":"<code>relativePath</code> is a physical path."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;relativePath&lt;/code&gt;</ph> includes one or more colons.","pos":[52,117],"source":"       -or-       <code>relativePath</code> includes one or more colons."}]},{"pos":[6622,6870],"content":"<code>relativePath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.       -or-       <code>basePath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;relativePath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[0,109],"source":"<code>relativePath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;basePath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[116,232],"source":"       -or-       <code>basePath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."}]},{"pos":[7281,7329],"content":"Returns the directory portion of a virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the directory portion of a virtual path.","pos":[0,48]}]},{"pos":[7342,7786],"content":"If `virtualPath` is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown.       If the virtual path that is passed into the GetDirectory method is `\"/images/image1.gif\"`, the returned directory is `\"/images\"`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an &lt;xref:System.ArgumentException&gt; exception is thrown.","pos":[0,302],"source":"If `virtualPath` is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown."},{"content":"If the virtual path that is passed into the GetDirectory method is <ph id=\"ph1\">`\"/images/image1.gif\"`</ph>, the returned directory is <ph id=\"ph2\">`\"/images\"`</ph>.","pos":[309,438],"source":"       If the virtual path that is passed into the GetDirectory method is `\"/images/image1.gif\"`, the returned directory is `\"/images\"`."}]},{"pos":[8378,8395],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[8453,8498],"content":"The directory referenced in the virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory referenced in the virtual path.","pos":[0,45]}]},{"pos":[9254,9329],"content":"Retrieves the extension of the file that is referenced in the virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the extension of the file that is referenced in the virtual path.","pos":[0,75]}]},{"pos":[9341,9467],"content":"If the virtual path that is passed into the GetExtension method is <ph id=\"ph1\">`\"/images/image1.gif\"`</ph>, the returned extension is <ph id=\"ph2\">`\".gif\"`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the virtual path that is passed into the GetExtension method is `\"/images/image1.gif\"`, the returned extension is `\".gif\"`."},{"pos":[10058,10075],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[10133,10285],"content":"The file name extension string literal, including the period (.), <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The file name extension string literal, including the period (.), <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or an empty string (\"\")."},{"pos":[10450,10580],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> contains one or more characters that are not valid, as defined in <xref:System.IO.Path.InvalidPathChars>."},{"pos":[10985,11060],"content":"Retrieves the file name of the file that is referenced in the virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the file name of the file that is referenced in the virtual path.","pos":[0,75]}]},{"pos":[11072,11203],"content":"If the virtual path that is passed into the GetFileName method is <ph id=\"ph1\">`\"/images/image1.gif\"`</ph>, the returned file name is <ph id=\"ph2\">`\"image1.gif\"`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the virtual path that is passed into the GetFileName method is `\"/images/image1.gif\"`, the returned file name is `\"image1.gif\"`."},{"pos":[11793,11810],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[11868,12084],"content":"The file name literal after the last directory character in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, the last directory name if the last character of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">virtualPath</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a directory or volume separator character.","needQuote":true,"needEscape":true,"source":"The file name literal after the last directory character in <code>virtualPath</code>; otherwise, the last directory name if the last character of <code>virtualPath</code> is a directory or volume separator character."},{"pos":[12248,12378],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> contains one or more characters that are not valid, as defined in <xref:System.IO.Path.InvalidPathChars>."},{"pos":[12778,12910],"content":"Returns a Boolean value indicating whether the specified virtual path is absolute; that is, it starts with a literal slash mark (/).","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether the specified virtual path is absolute; that is, it starts with a literal slash mark (/).","pos":[0,132]}]},{"pos":[12922,13090],"content":"A virtual path is absolute if it begins with a literal slash mark (/). For example, the <xref:System.Web.HttpRequest.Path%2A> property returns an absolute virtual path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A virtual path is absolute if it begins with a literal slash mark (/). For example, the <xref:System.Web.HttpRequest.Path%2A> property returns an absolute virtual path.","pos":[0,168],"nodes":[{"content":"A virtual path is absolute if it begins with a literal slash mark (/).","pos":[0,70]},{"content":"For example, the &lt;xref:System.Web.HttpRequest.Path%2A&gt; property returns an absolute virtual path.","pos":[71,168],"source":" For example, the <xref:System.Web.HttpRequest.Path%2A> property returns an absolute virtual path."}]}]},{"pos":[13678,13704],"content":"The virtual path to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to check.","pos":[0,26]}]},{"pos":[13763,14043],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an absolute path and is not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or an empty string (\"\"); otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>virtualPath</code> is an absolute path and is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\"); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14214,14303],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14718,14819],"content":"Returns a Boolean value indicating whether the specified virtual path is relative to the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether the specified virtual path is relative to the application.","pos":[0,101]}]},{"pos":[14832,15230],"content":"The virtual path can be just the root operator (the tilde [~]), or it can begin with the root operator. If `virtualPath` is `null`, an <xref:System.ArgumentNullException> exception is raised. If `virtualPath` is an empty string (\"\"), the IsAppRelative method returns `false`.      > [!NOTE] >  `\"~` `filename` `\"` is not a valid virtual path and returns `false` for the IsAppRelative method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The virtual path can be just the root operator (the tilde [~]), or it can begin with the root operator.","pos":[0,103]},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is <ph id=\"ph2\">`null`</ph>, an &lt;xref:System.ArgumentNullException&gt; exception is raised.","pos":[104,191],"source":" If `virtualPath` is `null`, an <xref:System.ArgumentNullException> exception is raised."},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is an empty string (\"\"), the IsAppRelative method returns <ph id=\"ph2\">`false`</ph>.","pos":[192,275],"source":" If `virtualPath` is an empty string (\"\"), the IsAppRelative method returns `false`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">`\"~`</ph> <ph id=\"ph4\">`filename`</ph> <ph id=\"ph5\">`\"`</ph> is not a valid virtual path and returns <ph id=\"ph6\">`false`</ph> for the IsAppRelative method.","pos":[281,391],"source":"      > [!NOTE] >  `\"~` `filename` `\"` is not a valid virtual path and returns `false` for the IsAppRelative method."}]},{"pos":[15822,15848],"content":"The virtual path to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to check.","pos":[0,26]}]},{"pos":[15907,16102],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p2\">&lt;/code&gt;</ept> is relative to the application; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>virtualPath</code> is relative to the application; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16276,16365],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16824,16936],"content":"Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.","pos":[0,112]}]},{"pos":[16949,17558],"content":"If the `fromPath` and `toPath` parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown.       Query string parameters and HTML anchors that are used in the URI are not used in determining the relative path.       If `fromPath` is `\"/directory1/file1.aspx\"` and `toPath` is `\"/directory2/file2.aspx\"`, the MakeRelative method returns `\"../directory2/file2.aspx\"`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`fromPath`</ph> and <ph id=\"ph2\">`toPath`</ph> parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an &lt;xref:System.ArgumentException&gt; exception is thrown.","pos":[0,324],"source":"If the `fromPath` and `toPath` parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown."},{"content":"Query string parameters and HTML anchors that are used in the URI are not used in determining the relative path.","pos":[331,443]},{"content":"If <ph id=\"ph1\">`fromPath`</ph> is <ph id=\"ph2\">`\"/directory1/file1.aspx\"`</ph> and <ph id=\"ph3\">`toPath`</ph> is <ph id=\"ph4\">`\"/directory2/file2.aspx\"`</ph>, the MakeRelative method returns <ph id=\"ph5\">`\"../directory2/file2.aspx\"`</ph>.","pos":[450,599],"source":"       If `fromPath` is `\"/directory1/file1.aspx\"` and `toPath` is `\"/directory2/file2.aspx\"`, the MakeRelative method returns `\"../directory2/file2.aspx\"`."}]},{"pos":[17731,17798],"content":"The starting virtual path to return the relative virtual path from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting virtual path to return the relative virtual path from.","pos":[0,67]}]},{"pos":[17861,17924],"content":"The ending virtual path to return the relative virtual path to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ending virtual path to return the relative virtual path to.","pos":[0,63]}]},{"pos":[17982,18058],"content":"The relative virtual path from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fromPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">toPath</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The relative virtual path from <code>fromPath</code> to <code>toPath</code>."},{"pos":[18766,18820],"content":"Removes a trailing slash mark (/) from a virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a trailing slash mark (/) from a virtual path.","pos":[0,54]}]},{"pos":[18832,19102],"content":"The RemoveTrailingSlash method removes a slash mark (/) from the end of the virtual path. If the virtual path is already the root directory (`\"/\"`), no action is taken. If the virtual path is `null` or an empty string (\"\"), the RemoveTrailingSlash method returns `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RemoveTrailingSlash method removes a slash mark (/) from the end of the virtual path.","pos":[0,89]},{"content":"If the virtual path is already the root directory (<ph id=\"ph1\">`\"/\"`</ph>), no action is taken.","pos":[90,168],"source":" If the virtual path is already the root directory (`\"/\"`), no action is taken."},{"content":"If the virtual path is <ph id=\"ph1\">`null`</ph> or an empty string (\"\"), the RemoveTrailingSlash method returns <ph id=\"ph2\">`null`</ph>.","pos":[169,270],"source":" If the virtual path is `null` or an empty string (\"\"), the RemoveTrailingSlash method returns `null`."}]},{"pos":[19272,19328],"content":"The virtual path to remove any trailing slash mark from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to remove any trailing slash mark from.","pos":[0,56]}]},{"pos":[19386,19565],"content":"A virtual path without a trailing slash mark, if the virtual path is not already the root directory (\"/\"); otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A virtual path without a trailing slash mark, if the virtual path is not already the root directory (\"/\"); otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20045,20101],"content":"Converts a virtual path to an application absolute path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a virtual path to an application absolute path.","pos":[0,56]}]},{"pos":[20114,20747],"content":"An application absolute path is one where the application path is used instead of the root operator (the tilde [~]).       If `virtualPath` is:      -   Absolute, the ToAbsolute method returns the virtual path unchanged.      -   Application relative, the ToAbsolute method appends the current application virtual directory path to the beginning of the `virtualPath`. For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property.      -   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application absolute path is one where the application path is used instead of the root operator (the tilde [~]).","pos":[0,116]},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is:      -   Absolute, the ToAbsolute method returns the virtual path unchanged.","pos":[123,220],"source":"       If `virtualPath` is:      -   Absolute, the ToAbsolute method returns the virtual path unchanged."},{"content":"-   Application relative, the ToAbsolute method appends the current application virtual directory path to the beginning of the <ph id=\"ph1\">`virtualPath`</ph>.","pos":[226,367],"source":"      -   Application relative, the ToAbsolute method appends the current application virtual directory path to the beginning of the `virtualPath`."},{"content":"For example, the current application virtual directory path can be accessed from the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property.","pos":[368,519],"source":" For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property."},{"content":"-   Not rooted, the ToAbsolute method raises an &lt;xref:System.ArgumentOutOfRangeException&gt; exception.","pos":[525,625],"source":"      -   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception."}]},{"pos":[20909,20969],"content":"The virtual path to convert to an application-relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to convert to an application-relative path.","pos":[0,60]}]},{"pos":[21027,21090],"content":"The absolute path representation of the specified virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The absolute path representation of the specified virtual path.","pos":[0,63]}]},{"pos":[21273,21312],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not rooted.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> is not rooted."},{"pos":[21407,21476],"content":"A leading double period (..) is used to exit above the top directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A leading double period (..) is used to exit above the top directory.","pos":[0,69]}]},{"pos":[21925,22018],"content":"Converts a virtual path to an application absolute path using the specified application path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a virtual path to an application absolute path using the specified application path.","pos":[0,93]}]},{"pos":[22031,22534],"content":"The ToAbsolute overload of the <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> method uses the supplied application path rather than the current application path.       If `virtualPath` is:      -   Absolute, the ToAbsolute method returns the virtual path with no changes.      -   Application relative, the ToAbsolute method adds `applicationPath` to the beginning of the virtual path.      -   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ToAbsolute overload of the &lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt; method uses the supplied application path rather than the current application path.","pos":[0,165],"source":"The ToAbsolute overload of the <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> method uses the supplied application path rather than the current application path."},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is:      -   Absolute, the ToAbsolute method returns the virtual path with no changes.","pos":[172,275],"source":"       If `virtualPath` is:      -   Absolute, the ToAbsolute method returns the virtual path with no changes."},{"content":"-   Application relative, the ToAbsolute method adds <ph id=\"ph1\">`applicationPath`</ph> to the beginning of the virtual path.","pos":[281,389],"source":"      -   Application relative, the ToAbsolute method adds `applicationPath` to the beginning of the virtual path."},{"content":"-   Not rooted, the ToAbsolute method raises an &lt;xref:System.ArgumentOutOfRangeException&gt; exception.","pos":[395,495],"source":"      -   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception."}]},{"pos":[22720,22780],"content":"The virtual path to convert to an application-relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to convert to an application-relative path.","pos":[0,60]}]},{"pos":[22852,22924],"content":"The application path to use to convert <ph id=\"ph1\">`virtualPath`</ph> to a relative path.","needQuote":true,"needEscape":true,"source":"The application path to use to convert `virtualPath` to a relative path."},{"pos":[22982,23051],"content":"The absolute virtual path representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The absolute virtual path representation of <code>virtualPath</code>."},{"pos":[23234,23277],"content":"<ph id=\"ph1\">&lt;code&gt;applicationPath&lt;/code&gt;</ph> is not rooted.","needQuote":true,"needEscape":true,"source":"<code>applicationPath</code> is not rooted."},{"pos":[23372,23465],"content":"A leading double period (..) is used in the application path to exit above the top directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A leading double period (..) is used in the application path to exit above the top directory.","pos":[0,93]}]},{"pos":[23880,24050],"content":"Converts a virtual path to an application-relative path using the application virtual path that is in the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a virtual path to an application-relative path using the application virtual path that is in the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*&gt; property.","pos":[0,170],"source":"Converts a virtual path to an application-relative path using the application virtual path that is in the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*> property."}]},{"pos":[24063,24675],"content":"If the virtual path for the application is `\"myapp\"` and the virtual path `\"/myApp/sub/default.asp\"` is passed into the ToAppRelative method, the resulting application-relative path is `\"~/sub/default.aspx\"`.       If `virtualPath` does not start with the current application path, the ToAppRelative method returns the virtual path unchanged.       If `virtualPath` is the same as the application path, the root operator (the tilde [~]), is returned. For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the virtual path for the application is <ph id=\"ph1\">`\"myapp\"`</ph> and the virtual path <ph id=\"ph2\">`\"/myApp/sub/default.asp\"`</ph> is passed into the ToAppRelative method, the resulting application-relative path is <ph id=\"ph3\">`\"~/sub/default.aspx\"`</ph>.","pos":[0,208],"source":"If the virtual path for the application is `\"myapp\"` and the virtual path `\"/myApp/sub/default.asp\"` is passed into the ToAppRelative method, the resulting application-relative path is `\"~/sub/default.aspx\"`."},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> does not start with the current application path, the ToAppRelative method returns the virtual path unchanged.","pos":[215,342],"source":"       If `virtualPath` does not start with the current application path, the ToAppRelative method returns the virtual path unchanged."},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> is the same as the application path, the root operator (the tilde [~]), is returned.","pos":[349,450],"source":"       If `virtualPath` is the same as the application path, the root operator (the tilde [~]), is returned."},{"content":"For example, the current application virtual directory path can be accessed from the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property.","pos":[451,602],"source":" For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property."}]},{"pos":[25309,25369],"content":"The virtual path to convert to an application-relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to convert to an application-relative path.","pos":[0,60]}]},{"pos":[25427,25500],"content":"The application-relative path representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The application-relative path representation of <code>virtualPath</code>."},{"pos":[25666,25755],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26219,26310],"content":"Converts a virtual path to an application-relative path using a specified application path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a virtual path to an application-relative path using a specified application path.","pos":[0,91]}]},{"pos":[26322,26598],"content":"The ToAppRelative overload of the <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> method uses `applicationPath` rather than the current application path. If `virtualPath` does not start with `applicationPath`, the ToAppRelative method returns the virtual path unchanged.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ToAppRelative overload of the &lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt; method uses <ph id=\"ph1\">`applicationPath`</ph> rather than the current application path.","pos":[0,159],"source":"The ToAppRelative overload of the <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> method uses `applicationPath` rather than the current application path."},{"content":"If <ph id=\"ph1\">`virtualPath`</ph> does not start with <ph id=\"ph2\">`applicationPath`</ph>, the ToAppRelative method returns the virtual path unchanged.","pos":[160,276],"source":" If `virtualPath` does not start with `applicationPath`, the ToAppRelative method returns the virtual path unchanged."}]},{"pos":[26786,26846],"content":"The virtual path to convert to an application-relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to convert to an application-relative path.","pos":[0,60]}]},{"pos":[26918,26990],"content":"The application path to use to convert <ph id=\"ph1\">`virtualPath`</ph> to a relative path.","needQuote":true,"needEscape":true,"source":"The application path to use to convert `virtualPath` to a relative path."},{"pos":[27048,27121],"content":"The application-relative path representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The application-relative path representation of <code>virtualPath</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.VirtualPathUtility\n  id: VirtualPathUtility\n  children:\n  - System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)\n  - System.Web.VirtualPathUtility.Combine(System.String,System.String)\n  - System.Web.VirtualPathUtility.GetDirectory(System.String)\n  - System.Web.VirtualPathUtility.GetExtension(System.String)\n  - System.Web.VirtualPathUtility.GetFileName(System.String)\n  - System.Web.VirtualPathUtility.IsAbsolute(System.String)\n  - System.Web.VirtualPathUtility.IsAppRelative(System.String)\n  - System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)\n  - System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)\n  - System.Web.VirtualPathUtility.ToAbsolute(System.String)\n  - System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)\n  - System.Web.VirtualPathUtility.ToAppRelative(System.String)\n  - System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)\n  langs:\n  - csharp\n  name: VirtualPathUtility\n  nameWithType: VirtualPathUtility\n  fullName: System.Web.VirtualPathUtility\n  type: Class\n  summary: Provides utility methods for common virtual path operations.\n  remarks: \"The VirtualPathUtility class provides utility methods for common operations involving virtual paths. For ASP.NET server controls and server code, virtual paths using the Web application root operator, the tilde (~), commonly are used instead of relative and absolute paths. For more information, see [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Use the VirtualPathUtility class when you need to convert application-relative paths to absolute virtual paths, as might be the case in developing a custom Web service handler.  \\n  \\n An absolute virtual path starts with the literal slash mark (/). A relative virtual path is relative to the application root directory, if it is just a tilde (~) or starts with the tilde and a double backslash (~\\\\\\\\\\\\\\\\) or the tilde and a slash mark (~/). Making a virtual path relative makes the path independent of the application.  \\n  \\n The virtual directory for the application can be obtained from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> and <xref:System.Web.HttpRequest.ApplicationPath%2A> properties.  \\n  \\n> [!NOTE]\\n>  The VirtualPathUtility class is not intended for security or canonicalization purposes. For more information about Web application security, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md). For generic URL processing functionality, see <xref:System.Uri>.\"\n  example:\n  - \"The following code example demonstrates how to use the VirtualPathUtility class and some of its methods. First, the <xref:System.Web.HttpRequest.FilePath%2A> property generates the virtual path to the Web page. The <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods return information about the virtual path. Next, the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property generates a virtual path of the current request, which might be different from the <xref:System.Web.HttpRequest.FilePath%2A> property, if a <xref:System.Web.HttpResponse.Redirect%2A> method was called. The <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods return information about the virtual path.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#1](~/add/codesnippet/visualbasic/t-system.web.virtualpath_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#1](~/add/codesnippet/csharp/t-system.web.virtualpath_1.aspx)]\"\n  syntax:\n    content: public static class VirtualPathUtility\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)\n  id: AppendTrailingSlash(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: AppendTrailingSlash(String)\n  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)\n  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Appends the literal slash mark (/) to the end of the virtual path, if one does not already exist.\n  remarks: If the literal slash mark (/) exists at the end of the virtual path, the virtual path is not modified.\n  syntax:\n    content: public static string AppendTrailingSlash (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to append the slash mark to.\n    return:\n      type: System.String\n      description: The modified virtual path.\n  overload: System.Web.VirtualPathUtility.AppendTrailingSlash*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)\n  id: Combine(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: Combine(String,String)\n  nameWithType: VirtualPathUtility.Combine(String,String)\n  fullName: System.Web.VirtualPathUtility.Combine(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Combines a base path and a relative path.\n  remarks: \"TheCombine method returns the value of the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property if the relative path is exactly a tilde (~).  \\n  \\n The Combine method uses the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path.\"\n  syntax:\n    content: public static string Combine (string basePath, string relativePath);\n    parameters:\n    - id: basePath\n      type: System.String\n      description: The base path.\n    - id: relativePath\n      type: System.String\n      description: The relative path.\n    return:\n      type: System.String\n      description: The combined <code>basePath</code> and <code>relativePath</code>.\n  overload: System.Web.VirtualPathUtility.Combine*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"<code>relativePath</code> is a physical path.  \\n  \\n -or-  \\n  \\n <code>relativePath</code> includes one or more colons.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>relativePath</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.  \\n  \\n -or-  \\n  \\n <code>basePath</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.\"\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)\n  id: GetDirectory(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: GetDirectory(String)\n  nameWithType: VirtualPathUtility.GetDirectory(String)\n  fullName: System.Web.VirtualPathUtility.GetDirectory(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the directory portion of a virtual path.\n  remarks: \"If `virtualPath` is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown.  \\n  \\n If the virtual path that is passed into the GetDirectory method is `\\\"/images/image1.gif\\\"`, the returned directory is `\\\"/images\\\"`.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and GetDirectory methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_3_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_3_1.aspx)]\"\n  syntax:\n    content: public static string GetDirectory (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path.\n    return:\n      type: System.String\n      description: The directory referenced in the virtual path.\n  overload: System.Web.VirtualPathUtility.GetDirectory*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>virtualPath</code> is not rooted.  \\n  \\n \\\\- or -  \\n  \\n <code>virtualPath</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.\"\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.GetExtension(System.String)\n  id: GetExtension(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: GetExtension(String)\n  nameWithType: VirtualPathUtility.GetExtension(String)\n  fullName: System.Web.VirtualPathUtility.GetExtension(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves the extension of the file that is referenced in the virtual path.\n  remarks: If the virtual path that is passed into the GetExtension method is `\"/images/image1.gif\"`, the returned extension is `\".gif\"`.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, GetExtension, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_0_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_0_1.aspx)]\"\n  syntax:\n    content: public static string GetExtension (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path.\n    return:\n      type: System.String\n      description: The file name extension string literal, including the period (.), <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or an empty string (\"\").\n  overload: System.Web.VirtualPathUtility.GetExtension*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> contains one or more characters that are not valid, as defined in <xref:System.IO.Path.InvalidPathChars>.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.GetFileName(System.String)\n  id: GetFileName(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: GetFileName(String)\n  nameWithType: VirtualPathUtility.GetFileName(String)\n  fullName: System.Web.VirtualPathUtility.GetFileName(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves the file name of the file that is referenced in the virtual path.\n  remarks: If the virtual path that is passed into the GetFileName method is `\"/images/image1.gif\"`, the returned file name is `\"image1.gif\"`.\n  example:\n  - \"The following code example demonstrates how to use the GetFileName, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_5_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_5_1.aspx)]\"\n  syntax:\n    content: public static string GetFileName (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path.\n    return:\n      type: System.String\n      description: The file name literal after the last directory character in <code>virtualPath</code>; otherwise, the last directory name if the last character of <code>virtualPath</code> is a directory or volume separator character.\n  overload: System.Web.VirtualPathUtility.GetFileName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> contains one or more characters that are not valid, as defined in <xref:System.IO.Path.InvalidPathChars>.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)\n  id: IsAbsolute(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: IsAbsolute(String)\n  nameWithType: VirtualPathUtility.IsAbsolute(String)\n  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a Boolean value indicating whether the specified virtual path is absolute; that is, it starts with a literal slash mark (/).\n  remarks: A virtual path is absolute if it begins with a literal slash mark (/). For example, the <xref:System.Web.HttpRequest.Path%2A> property returns an absolute virtual path.\n  example:\n  - \"The following code example demonstrates how to use the IsAbsolute, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_2_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_2_1.aspx)]\"\n  syntax:\n    content: public static bool IsAbsolute (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>virtualPath</code> is an absolute path and is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\"); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.VirtualPathUtility.IsAbsolute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)\n  id: IsAppRelative(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: IsAppRelative(String)\n  nameWithType: VirtualPathUtility.IsAppRelative(String)\n  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns a Boolean value indicating whether the specified virtual path is relative to the application.\n  remarks: \"The virtual path can be just the root operator (the tilde [~]), or it can begin with the root operator. If `virtualPath` is `null`, an <xref:System.ArgumentNullException> exception is raised. If `virtualPath` is an empty string (\\\"\\\"), the IsAppRelative method returns `false`.  \\n  \\n> [!NOTE]\\n>  `\\\"~` `filename` `\\\"` is not a valid virtual path and returns `false` for the IsAppRelative method.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, IsAppRelative, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_4_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_4_1.aspx)]\"\n  syntax:\n    content: public static bool IsAppRelative (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>virtualPath</code> is relative to the application; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.VirtualPathUtility.IsAppRelative*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)\n  id: MakeRelative(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: MakeRelative(String,String)\n  nameWithType: VirtualPathUtility.MakeRelative(String,String)\n  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.\n  remarks: \"If the `fromPath` and `toPath` parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an <xref:System.ArgumentException> exception is thrown.  \\n  \\n Query string parameters and HTML anchors that are used in the URI are not used in determining the relative path.  \\n  \\n If `fromPath` is `\\\"/directory1/file1.aspx\\\"` and `toPath` is `\\\"/directory2/file2.aspx\\\"`, the MakeRelative method returns `\\\"../directory2/file2.aspx\\\"`.\"\n  syntax:\n    content: public static string MakeRelative (string fromPath, string toPath);\n    parameters:\n    - id: fromPath\n      type: System.String\n      description: The starting virtual path to return the relative virtual path from.\n    - id: toPath\n      type: System.String\n      description: The ending virtual path to return the relative virtual path to.\n    return:\n      type: System.String\n      description: The relative virtual path from <code>fromPath</code> to <code>toPath</code>.\n  overload: System.Web.VirtualPathUtility.MakeRelative*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>fromPath</code> is not rooted.  \\n  \\n \\\\- or -  \\n  \\n <code>toPath</code> is not rooted.\"\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)\n  id: RemoveTrailingSlash(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: RemoveTrailingSlash(String)\n  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)\n  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes a trailing slash mark (/) from a virtual path.\n  remarks: The RemoveTrailingSlash method removes a slash mark (/) from the end of the virtual path. If the virtual path is already the root directory (`\"/\"`), no action is taken. If the virtual path is `null` or an empty string (\"\"), the RemoveTrailingSlash method returns `null`.\n  syntax:\n    content: public static string RemoveTrailingSlash (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to remove any trailing slash mark from.\n    return:\n      type: System.String\n      description: A virtual path without a trailing slash mark, if the virtual path is not already the root directory (\"/\"); otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.VirtualPathUtility.RemoveTrailingSlash*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)\n  id: ToAbsolute(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: ToAbsolute(String)\n  nameWithType: VirtualPathUtility.ToAbsolute(String)\n  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Converts a virtual path to an application absolute path.\n  remarks: \"An application absolute path is one where the application path is used instead of the root operator (the tilde [~]).  \\n  \\n If `virtualPath` is:  \\n  \\n-   Absolute, the ToAbsolute method returns the virtual path unchanged.  \\n  \\n-   Application relative, the ToAbsolute method appends the current application virtual directory path to the beginning of the `virtualPath`. For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property.  \\n  \\n-   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception.\"\n  syntax:\n    content: public static string ToAbsolute (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to convert to an application-relative path.\n    return:\n      type: System.String\n      description: The absolute path representation of the specified virtual path.\n  overload: System.Web.VirtualPathUtility.ToAbsolute*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>virtualPath</code> is not rooted.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A leading double period (..) is used to exit above the top directory.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)\n  id: ToAbsolute(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: ToAbsolute(String,String)\n  nameWithType: VirtualPathUtility.ToAbsolute(String,String)\n  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Converts a virtual path to an application absolute path using the specified application path.\n  remarks: \"The ToAbsolute overload of the <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> method uses the supplied application path rather than the current application path.  \\n  \\n If `virtualPath` is:  \\n  \\n-   Absolute, the ToAbsolute method returns the virtual path with no changes.  \\n  \\n-   Application relative, the ToAbsolute method adds `applicationPath` to the beginning of the virtual path.  \\n  \\n-   Not rooted, the ToAbsolute method raises an <xref:System.ArgumentOutOfRangeException> exception.\"\n  syntax:\n    content: public static string ToAbsolute (string virtualPath, string applicationPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to convert to an application-relative path.\n    - id: applicationPath\n      type: System.String\n      description: The application path to use to convert `virtualPath` to a relative path.\n    return:\n      type: System.String\n      description: The absolute virtual path representation of <code>virtualPath</code>.\n  overload: System.Web.VirtualPathUtility.ToAbsolute*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>applicationPath</code> is not rooted.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A leading double period (..) is used in the application path to exit above the top directory.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)\n  id: ToAppRelative(System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: ToAppRelative(String)\n  nameWithType: VirtualPathUtility.ToAppRelative(String)\n  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Converts a virtual path to an application-relative path using the application virtual path that is in the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*> property.\n  remarks: \"If the virtual path for the application is `\\\"myapp\\\"` and the virtual path `\\\"/myApp/sub/default.asp\\\"` is passed into the ToAppRelative method, the resulting application-relative path is `\\\"~/sub/default.aspx\\\"`.  \\n  \\n If `virtualPath` does not start with the current application path, the ToAppRelative method returns the virtual path unchanged.  \\n  \\n If `virtualPath` is the same as the application path, the root operator (the tilde [~]), is returned. For example, the current application virtual directory path can be accessed from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \\n  \\n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_1_1.aspx)]\\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_1_1.aspx)]\"\n  syntax:\n    content: public static string ToAppRelative (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to convert to an application-relative path.\n    return:\n      type: System.String\n      description: The application-relative path representation of <code>virtualPath</code>.\n  overload: System.Web.VirtualPathUtility.ToAppRelative*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)\n  id: ToAppRelative(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  langs:\n  - csharp\n  name: ToAppRelative(String,String)\n  nameWithType: VirtualPathUtility.ToAppRelative(String,String)\n  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Converts a virtual path to an application-relative path using a specified application path.\n  remarks: The ToAppRelative overload of the <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> method uses `applicationPath` rather than the current application path. If `virtualPath` does not start with `applicationPath`, the ToAppRelative method returns the virtual path unchanged.\n  syntax:\n    content: public static string ToAppRelative (string virtualPath, string applicationPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to convert to an application-relative path.\n    - id: applicationPath\n      type: System.String\n      description: The application path to use to convert `virtualPath` to a relative path.\n    return:\n      type: System.String\n      description: The application-relative path representation of <code>virtualPath</code>.\n  overload: System.Web.VirtualPathUtility.ToAppRelative*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: AppendTrailingSlash(String)\n  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)\n  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: Combine(String,String)\n  nameWithType: VirtualPathUtility.Combine(String,String)\n  fullName: System.Web.VirtualPathUtility.Combine(String,String)\n- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetDirectory(String)\n  nameWithType: VirtualPathUtility.GetDirectory(String)\n  fullName: System.Web.VirtualPathUtility.GetDirectory(String)\n- uid: System.Web.VirtualPathUtility.GetExtension(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetExtension(String)\n  nameWithType: VirtualPathUtility.GetExtension(String)\n  fullName: System.Web.VirtualPathUtility.GetExtension(String)\n- uid: System.Web.VirtualPathUtility.GetFileName(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetFileName(String)\n  nameWithType: VirtualPathUtility.GetFileName(String)\n  fullName: System.Web.VirtualPathUtility.GetFileName(String)\n- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: IsAbsolute(String)\n  nameWithType: VirtualPathUtility.IsAbsolute(String)\n  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: IsAppRelative(String)\n  nameWithType: VirtualPathUtility.IsAppRelative(String)\n  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)\n- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: MakeRelative(String,String)\n  nameWithType: VirtualPathUtility.MakeRelative(String,String)\n  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)\n- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: RemoveTrailingSlash(String)\n  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)\n  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)\n- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAbsolute(String)\n  nameWithType: VirtualPathUtility.ToAbsolute(String)\n  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)\n- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAbsolute(String,String)\n  nameWithType: VirtualPathUtility.ToAbsolute(String,String)\n  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)\n- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAppRelative(String)\n  nameWithType: VirtualPathUtility.ToAppRelative(String)\n  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)\n- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAppRelative(String,String)\n  nameWithType: VirtualPathUtility.ToAppRelative(String,String)\n  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)\n- uid: System.Web.VirtualPathUtility.AppendTrailingSlash*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: AppendTrailingSlash\n  nameWithType: VirtualPathUtility.AppendTrailingSlash\n- uid: System.Web.VirtualPathUtility.Combine*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: Combine\n  nameWithType: VirtualPathUtility.Combine\n- uid: System.Web.VirtualPathUtility.GetDirectory*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetDirectory\n  nameWithType: VirtualPathUtility.GetDirectory\n- uid: System.Web.VirtualPathUtility.GetExtension*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetExtension\n  nameWithType: VirtualPathUtility.GetExtension\n- uid: System.Web.VirtualPathUtility.GetFileName*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: GetFileName\n  nameWithType: VirtualPathUtility.GetFileName\n- uid: System.Web.VirtualPathUtility.IsAbsolute*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: IsAbsolute\n  nameWithType: VirtualPathUtility.IsAbsolute\n- uid: System.Web.VirtualPathUtility.IsAppRelative*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: IsAppRelative\n  nameWithType: VirtualPathUtility.IsAppRelative\n- uid: System.Web.VirtualPathUtility.MakeRelative*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: MakeRelative\n  nameWithType: VirtualPathUtility.MakeRelative\n- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: RemoveTrailingSlash\n  nameWithType: VirtualPathUtility.RemoveTrailingSlash\n- uid: System.Web.VirtualPathUtility.ToAbsolute*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAbsolute\n  nameWithType: VirtualPathUtility.ToAbsolute\n- uid: System.Web.VirtualPathUtility.ToAppRelative*\n  parent: System.Web.VirtualPathUtility\n  isExternal: false\n  name: ToAppRelative\n  nameWithType: VirtualPathUtility.ToAppRelative\n"}