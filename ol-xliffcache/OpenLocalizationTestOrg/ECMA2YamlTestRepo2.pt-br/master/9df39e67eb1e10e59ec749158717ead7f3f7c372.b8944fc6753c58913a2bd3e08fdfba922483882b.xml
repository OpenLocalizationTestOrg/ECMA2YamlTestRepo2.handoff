{"nodes":[{"pos":[551,620],"content":"A configuration element that contains a collection of scope elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"A configuration element that contains a collection of scope elements.","pos":[0,69]}]},{"pos":[633,2450],"content":"The following example shows how to add two scope URIs for an endpoint.      ```   <configuration>       <system.serviceModel>         <services>           <service name=\"Microsoft.Samples.Discovery.CalculatorService\"                    behaviorConfiguration=\"calculatorServiceBehavior\">             <endpoint address=\"\"                       binding=\"wsHttpBinding\"                       contract=\"Microsoft.Samples.Discovery.ICalculatorService\"                       behaviorConfiguration=\"ep1Behavior\" />              </service>         </services>         <behaviors>           <serviceBehaviors>             <behavior name=\"calculatorServiceBehavior\">               <serviceDiscovery />             </behavior>           </serviceBehaviors>           <endpointBehaviors>             <behavior name=\"ep1Behavior\">               <endpointDiscovery>                 <scopes>                   <add scope=\"http://www.mycalculator.com\"/>                   <add scope=\"ldap:///ou=engineering,o=exampleorg,c=us\"/>                 </scopes>               </endpointDiscovery>             </behavior>                     </endpointBehaviors>         </behaviors>         <extensions>           <behaviorExtensions>             <add name=\"serviceDiscovery\" type=\"System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" />             <add name=\"endpointDiscovery\" type=\"System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" />           </behaviorExtensions>         </extensions>       </system.serviceModel>   </configuration>   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following example shows how to add two scope URIs for an endpoint.","pos":[0,70]}]},{"pos":[10012,10071],"content":"Creates a new instance of the ScopeElementCollection class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the ScopeElementCollection class.","pos":[0,59]}]},{"pos":[11142,11154],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11212,11224],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  id: ScopeElementCollection\n  children:\n  - System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor\n  - System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  langs:\n  - csharp\n  name: ScopeElementCollection\n  nameWithType: ScopeElementCollection\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  type: Class\n  summary: A configuration element that contains a collection of scope elements.\n  remarks: \"The following example shows how to add two scope URIs for an endpoint.  \\n  \\n```  \\n<configuration>  \\n    <system.serviceModel>  \\n      <services>  \\n        <service name=\\\"Microsoft.Samples.Discovery.CalculatorService\\\"  \\n                 behaviorConfiguration=\\\"calculatorServiceBehavior\\\">  \\n          <endpoint address=\\\"\\\"  \\n                    binding=\\\"wsHttpBinding\\\"  \\n                    contract=\\\"Microsoft.Samples.Discovery.ICalculatorService\\\"  \\n                    behaviorConfiguration=\\\"ep1Behavior\\\" />  \\n  \\n        </service>  \\n      </services>  \\n      <behaviors>  \\n        <serviceBehaviors>  \\n          <behavior name=\\\"calculatorServiceBehavior\\\">  \\n            <serviceDiscovery />  \\n          </behavior>  \\n        </serviceBehaviors>  \\n        <endpointBehaviors>  \\n          <behavior name=\\\"ep1Behavior\\\">  \\n            <endpointDiscovery>  \\n              <scopes>  \\n                <add scope=\\\"http://www.mycalculator.com\\\"/>  \\n                <add scope=\\\"ldap:///ou=engineering,o=exampleorg,c=us\\\"/>  \\n              </scopes>  \\n            </endpointDiscovery>  \\n          </behavior>            \\n        </endpointBehaviors>  \\n      </behaviors>  \\n      <extensions>  \\n        <behaviorExtensions>  \\n          <add name=\\\"serviceDiscovery\\\" type=\\\"System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\\\" />  \\n          <add name=\\\"endpointDiscovery\\\" type=\\\"System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\\\" />  \\n        </behaviorExtensions>  \\n      </extensions>  \\n    </system.serviceModel>  \\n</configuration>  \\n```\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))]\n\n      public sealed class ScopeElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ScopeElement>\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CreateNewElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ElementName\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  langs:\n  - csharp\n  name: ScopeElementCollection()\n  nameWithType: ScopeElementCollection.ScopeElementCollection()\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.ScopeElementCollection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery.Configuration\n  summary: Creates a new instance of the ScopeElementCollection class.\n  syntax:\n    content: public ScopeElementCollection ();\n    parameters: []\n  overload: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: ScopeElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery.Configuration\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1\n  isExternal: false\n  name: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ScopeElement>\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  isExternal: false\n  name: ScopeElementCollection()\n  nameWithType: ScopeElementCollection.ScopeElementCollection()\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.ScopeElementCollection()\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: ScopeElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor*\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  isExternal: false\n  name: ScopeElementCollection\n  nameWithType: ScopeElementCollection.ScopeElementCollection\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey*\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: ScopeElementCollection.GetElementKey\n"}