{"nodes":[{"pos":[675,780],"content":"Manages a collection of extensions for a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Manages a collection of extensions for a <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."},{"pos":[1460,1580],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstanceExtensionManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstanceExtensionManager\"></xref> class."},{"pos":[2249,2310],"content":"Adds the specified extension to the collection of extensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified extension to the collection of extensions.","pos":[0,61]}]},{"pos":[2323,2893],"content":"When this overload is used, each workflow instance that requests this extension type will get the extension instance provided to this method. If each workflow instance should have its own instance of the extension, use the other <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overload.       If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly%2A>, an <xref:System.InvalidOperationException> is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this overload is used, each workflow instance that requests this extension type will get the extension instance provided to this method. If each workflow instance should have its own instance of the extension, use the other <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overload.       If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly%2A>, an <xref:System.InvalidOperationException> is thrown.","pos":[0,568],"nodes":[{"content":"When this overload is used, each workflow instance that requests this extension type will get the extension instance provided to this method.","pos":[0,141]},{"content":"If each workflow instance should have its own instance of the extension, use the other &lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt; overload.","pos":[142,311],"source":" If each workflow instance should have its own instance of the extension, use the other <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overload."},{"content":"If any of the &lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt; overloads are called after &lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly%2A&gt;, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[318,568],"source":"       If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly%2A>, an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[3061,3082],"content":"The extension to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extension to add.","pos":[0,21]}]},{"pos":[3870,3882],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4463,4511],"content":"Marks the collection of extensions as read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks the collection of extensions as read-only.","pos":[0,48]}]},{"pos":[4523,4774],"content":"This method is called when a workflow host is prepared for execution. If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after MakeReadOnly, an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called when a workflow host is prepared for execution. If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after MakeReadOnly, an <xref:System.InvalidOperationException> is thrown.","pos":[0,251],"nodes":[{"content":"This method is called when a workflow host is prepared for execution.","pos":[0,69]},{"content":"If any of the &lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt; overloads are called after MakeReadOnly, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[70,251],"source":" If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after MakeReadOnly, an <xref:System.InvalidOperationException> is thrown."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  id: WorkflowInstanceExtensionManager\n  children:\n  - System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor\n  - System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(System.Object)\n  - System.Activities.Hosting.WorkflowInstanceExtensionManager.Add``1(System.Func{``0})\n  - System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly\n  langs:\n  - csharp\n  name: WorkflowInstanceExtensionManager\n  nameWithType: WorkflowInstanceExtensionManager\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  type: Class\n  summary: Manages a collection of extensions for a <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: public class WorkflowInstanceExtensionManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor\n  id: '#ctor'\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  langs:\n  - csharp\n  name: WorkflowInstanceExtensionManager()\n  nameWithType: WorkflowInstanceExtensionManager.WorkflowInstanceExtensionManager()\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.WorkflowInstanceExtensionManager()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstanceExtensionManager\"></xref> class.\n  syntax:\n    content: public WorkflowInstanceExtensionManager ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: WorkflowInstanceExtensionManager.Add(Object)\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Adds the specified extension to the collection of extensions.\n  remarks: \"When this overload is used, each workflow instance that requests this extension type will get the extension instance provided to this method. If each workflow instance should have its own instance of the extension, use the other <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overload.  \\n  \\n If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly%2A>, an <xref:System.InvalidOperationException> is thrown.\"\n  syntax:\n    content: public virtual void Add (object singletonExtension);\n    parameters:\n    - id: singletonExtension\n      type: System.Object\n      description: The extension to add.\n  overload: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add``1(System.Func{``0})\n  id: Add``1(System.Func{``0})\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  langs:\n  - csharp\n  name: Add(Func<T>)\n  nameWithType: WorkflowInstanceExtensionManager.Add(Func<T>)\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(Func<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: 'public virtual void Add<T> (Func<T> extensionCreationFunction) where T : class;'\n    parameters:\n    - id: extensionCreationFunction\n      type: System.Func{T}\n      description: To be added.\n  overload: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly\n  id: MakeReadOnly\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  langs:\n  - csharp\n  name: MakeReadOnly()\n  nameWithType: WorkflowInstanceExtensionManager.MakeReadOnly()\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Marks the collection of extensions as read-only.\n  remarks: This method is called when a workflow host is prepared for execution. If any of the <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> overloads are called after MakeReadOnly, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public void MakeReadOnly ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: WorkflowInstanceExtensionManager()\n  nameWithType: WorkflowInstanceExtensionManager.WorkflowInstanceExtensionManager()\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.WorkflowInstanceExtensionManager()\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: Add(Object)\n  nameWithType: WorkflowInstanceExtensionManager.Add(Object)\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(Object)\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add``1(System.Func{``0})\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: Add(Func<T>)\n  nameWithType: WorkflowInstanceExtensionManager.Add(Func<T>)\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(Func<T>)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: MakeReadOnly()\n  nameWithType: WorkflowInstanceExtensionManager.MakeReadOnly()\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly()\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor*\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: WorkflowInstanceExtensionManager\n  nameWithType: WorkflowInstanceExtensionManager.WorkflowInstanceExtensionManager\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add*\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: Add\n  nameWithType: WorkflowInstanceExtensionManager.Add\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.Add<T>*\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: Add<T>\n  nameWithType: WorkflowInstanceExtensionManager.Add<T>\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly*\n  parent: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  isExternal: false\n  name: MakeReadOnly\n  nameWithType: WorkflowInstanceExtensionManager.MakeReadOnly\n"}