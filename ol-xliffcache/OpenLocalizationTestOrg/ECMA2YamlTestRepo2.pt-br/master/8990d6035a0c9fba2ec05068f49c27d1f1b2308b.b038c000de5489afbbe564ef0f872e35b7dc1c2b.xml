{"nodes":[{"pos":[578,695],"content":"Defines an <xref:System.Windows.Input.ICommand> that is routed through the element tree and contains a text property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an &lt;xref:System.Windows.Input.ICommand&gt; that is routed through the element tree and contains a text property.","pos":[0,117],"source":"Defines an <xref:System.Windows.Input.ICommand> that is routed through the element tree and contains a text property."}]},{"pos":[708,2777],"content":"The difference between a RoutedUICommand and <xref:System.Windows.Input.RoutedCommand> is that RoutedUICommand includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property.       The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.       The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.      <a name=\"xamlAttributeUsage_RoutedUICommand\"></a>    ## XAML Attribute Usage      ```   <object property=\"predefinedCommandName\"/>   - or -   <object property=\"predefinedClassName.predefinedCommandName\"/>   - or -   <object property=\"{x:Static customClassName.customCommandName}\"/>      ```      <a name=\"xamlValues_RoutedUICommand\"></a>    ## XAML Values    *predefinedClassName*    One of the predefined command classes.       *predefinedCommandName*    One of the predefined commands.       *prefix*    The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/add/includes/ajax-current-ext-md.md).       *customClassName*    A custom class that contains the custom command.       *customCommandName*    A custom command.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The difference between a RoutedUICommand and &lt;xref:System.Windows.Input.RoutedCommand&gt; is that RoutedUICommand includes a &lt;xref:System.Windows.Input.RoutedUICommand.Text%2A&gt; property.","pos":[0,183],"source":"The difference between a RoutedUICommand and <xref:System.Windows.Input.RoutedCommand> is that RoutedUICommand includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property."},{"content":"The &lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt; and &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; methods on a &lt;xref:System.Windows.Input.RoutedCommand&gt; do not contain the command logic for the command, as is the case with a typical &lt;xref:System.Windows.Input.ICommand&gt;.","pos":[190,479],"source":"       The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>."},{"content":"These methods raise events that traverse the element tree looking for an object with a &lt;xref:System.Windows.Input.CommandBinding&gt;.","pos":[481,611],"source":"  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>."},{"content":"The event handlers attached to the &lt;xref:System.Windows.Input.CommandBinding&gt; contain the command logic.","pos":[613,717],"source":"  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic."},{"content":"The &lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt; method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events.","pos":[724,921],"source":"       The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events."},{"content":"The &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events.","pos":[923,1127],"source":"  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_RoutedUICommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"predefinedCommandName\"/&gt;   - or -   &lt;object property=\"predefinedClassName.predefinedCommandName\"/&gt;   - or -   &lt;object property=\"{x:Static customClassName.customCommandName}\"/&gt;      ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_RoutedUICommand\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>predefinedClassName<ept id=\"p3\">*</ept>    One of the predefined command classes.","pos":[1133,1555],"source":"<a name=\"xamlAttributeUsage_RoutedUICommand\"></a>    ## XAML Attribute Usage      ```   <object property=\"predefinedCommandName\"/>   - or -   <object property=\"predefinedClassName.predefinedCommandName\"/>   - or -   <object property=\"{x:Static customClassName.customCommandName}\"/>      ```      <a name=\"xamlValues_RoutedUICommand\"></a>    ## XAML Values    *predefinedClassName*    One of the predefined command classes."},{"content":"<bpt id=\"p1\">*</bpt>predefinedCommandName<ept id=\"p1\">*</ept>    One of the predefined commands.","pos":[1562,1620],"source":"*predefinedCommandName*    One of the predefined commands."},{"content":"<bpt id=\"p1\">*</bpt>prefix<ept id=\"p1\">*</ept>    The <ph id=\"ph1\">`xlmns`</ph> prefix that maps <bpt id=\"p2\">*</bpt>customClassName<ept id=\"p2\">*</ept>.<bpt id=\"p3\">*</bpt>customCommandName<ept id=\"p3\">*</ept> to the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> class.","pos":[1627,1783],"source":"*prefix*    The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1785,1903],"source":"  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">*</bpt>customClassName<ept id=\"p1\">*</ept>    A custom class that contains the custom command.","pos":[1910,1979],"source":"*customClassName*    A custom class that contains the custom command."},{"content":"<bpt id=\"p1\">*</bpt>customCommandName<ept id=\"p1\">*</ept>    A custom command.","pos":[1986,2026],"source":"*customCommandName*    A custom command."}]},{"pos":[4147,4245],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class."},{"pos":[4921,5088],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified descriptive text, declared name, and owner type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, and owner type."},{"pos":[5255,5288],"content":"Descriptive text for the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Descriptive text for the command.","pos":[0,33]}]},{"pos":[5349,5400],"content":"The declared name of the command for serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The declared name of the command for serialization.","pos":[0,51]}]},{"pos":[5464,5505],"content":"The type that is registering the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that is registering the command.","pos":[0,41]}]},{"pos":[5678,5760],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5855,5942],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>ownerType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6633,6816],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.RoutedUICommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified descriptive text, declared name, owner type, and input gestures.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, owner type, and input gestures."},{"pos":[7042,7075],"content":"Descriptive text for the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Descriptive text for the command.","pos":[0,33]}]},{"pos":[7136,7187],"content":"The declared name of the command for serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The declared name of the command for serialization.","pos":[0,51]}]},{"pos":[7251,7292],"content":"The type that is registering the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that is registering the command.","pos":[0,41]}]},{"pos":[7392,7447],"content":"A collection of gestures to associate with the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of gestures to associate with the command.","pos":[0,55]}]},{"pos":[7620,7702],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7797,7884],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>ownerType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8236,8286],"content":"Gets or sets the text that describes this command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text that describes this command.","pos":[0,50]}]},{"pos":[8400,8469],"content":"The text that describes the command.  The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text that describes the command.  The default is an empty string.","pos":[0,69],"nodes":[{"content":"The text that describes the command.","pos":[0,36]},{"content":"The default is an empty string.","pos":[38,69]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.RoutedUICommand\n  id: RoutedUICommand\n  children:\n  - System.Windows.Input.RoutedUICommand.#ctor\n  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  - System.Windows.Input.RoutedUICommand.Text\n  langs:\n  - csharp\n  name: RoutedUICommand\n  nameWithType: RoutedUICommand\n  fullName: System.Windows.Input.RoutedUICommand\n  type: Class\n  summary: Defines an <xref:System.Windows.Input.ICommand> that is routed through the element tree and contains a text property.\n  remarks: \"The difference between a RoutedUICommand and <xref:System.Windows.Input.RoutedCommand> is that RoutedUICommand includes a <xref:System.Windows.Input.RoutedUICommand.Text%2A> property.  \\n  \\n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the command logic for the command, as is the case with a typical <xref:System.Windows.Input.ICommand>.  These methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.  The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.  \\n  \\n The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.  The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.  \\n  \\n<a name=\\\"xamlAttributeUsage_RoutedUICommand\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"predefinedCommandName\\\"/>  \\n- or -  \\n<object property=\\\"predefinedClassName.predefinedCommandName\\\"/>  \\n- or -  \\n<object property=\\\"{x:Static customClassName.customCommandName}\\\"/>  \\n  \\n```  \\n  \\n<a name=\\\"xamlValues_RoutedUICommand\\\"></a>   \\n## XAML Values  \\n *predefinedClassName*  \\n One of the predefined command classes.  \\n  \\n *predefinedCommandName*  \\n One of the predefined commands.  \\n  \\n *prefix*  \\n The `xlmns` prefix that maps *customClassName*.*customCommandName* to the [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] class.  For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/add/includes/ajax-current-ext-md.md).  \\n  \\n *customClassName*  \\n A custom class that contains the custom command.  \\n  \\n *customCommandName*  \\n A custom command.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null\")]\n\n      public class RoutedUICommand : System.Windows.Input.RoutedCommand\n  inheritance:\n  - System.Object\n  - System.Windows.Input.RoutedCommand\n  implements: []\n  inheritedMembers:\n  - System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)\n  - System.Windows.Input.RoutedCommand.CanExecuteChanged\n  - System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)\n  - System.Windows.Input.RoutedCommand.InputGestures\n  - System.Windows.Input.RoutedCommand.Name\n  - System.Windows.Input.RoutedCommand.OwnerType\n  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)\n  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)\n  platform:\n  - net462\n- uid: System.Windows.Input.RoutedUICommand.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand()\n  nameWithType: RoutedUICommand.RoutedUICommand()\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class.\n  syntax:\n    content: public RoutedUICommand ();\n    parameters: []\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  id: '#ctor(System.String,System.String,System.Type)'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand(String,String,Type)\n  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type)\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, and owner type.\n  syntax:\n    content: public RoutedUICommand (string text, string name, Type ownerType);\n    parameters:\n    - id: text\n      type: System.String\n      description: Descriptive text for the command.\n    - id: name\n      type: System.String\n      description: The declared name of the command for serialization.\n    - id: ownerType\n      type: System.Type\n      description: The type that is registering the command.\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ownerType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  id: '#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)'\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: RoutedUICommand(String,String,Type,InputGestureCollection)\n  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.RoutedUICommand\"></xref> class, using the specified descriptive text, declared name, owner type, and input gestures.\n  syntax:\n    content: public RoutedUICommand (string text, string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);\n    parameters:\n    - id: text\n      type: System.String\n      description: Descriptive text for the command.\n    - id: name\n      type: System.String\n      description: The declared name of the command for serialization.\n    - id: ownerType\n      type: System.Type\n      description: The type that is registering the command.\n    - id: inputGestures\n      type: System.Windows.Input.InputGestureCollection\n      description: A collection of gestures to associate with the command.\n  overload: System.Windows.Input.RoutedUICommand.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ownerType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Input.RoutedUICommand.Text\n  id: Text\n  parent: System.Windows.Input.RoutedUICommand\n  langs:\n  - csharp\n  name: Text\n  nameWithType: RoutedUICommand.Text\n  fullName: System.Windows.Input.RoutedUICommand.Text\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the text that describes this command.\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text that describes the command.  The default is an empty string.\n  overload: System.Windows.Input.RoutedUICommand.Text*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.RoutedCommand\n  isExternal: false\n  name: System.Windows.Input.RoutedCommand\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Input.RoutedUICommand.#ctor\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand()\n  nameWithType: RoutedUICommand.RoutedUICommand()\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand()\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand(String,String,Type)\n  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type)\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand(String,String,Type,InputGestureCollection)\n  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)\n  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)\n- uid: System.Windows.Input.InputGestureCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputGestureCollection\n  nameWithType: InputGestureCollection\n  fullName: System.Windows.Input.InputGestureCollection\n- uid: System.Windows.Input.RoutedUICommand.Text\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: Text\n  nameWithType: RoutedUICommand.Text\n  fullName: System.Windows.Input.RoutedUICommand.Text\n- uid: System.Windows.Input.RoutedUICommand.#ctor*\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: RoutedUICommand\n  nameWithType: RoutedUICommand.RoutedUICommand\n- uid: System.Windows.Input.RoutedUICommand.Text*\n  parent: System.Windows.Input.RoutedUICommand\n  isExternal: false\n  name: Text\n  nameWithType: RoutedUICommand.Text\n"}