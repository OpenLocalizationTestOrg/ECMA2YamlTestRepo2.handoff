{"nodes":[{"pos":[358,446],"content":"Provides functionality to an object to return a list that can be bound to a data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides functionality to an object to return a list that can be bound to a data source.","pos":[0,88]}]},{"pos":[459,1692],"content":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself.       Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:      -   <xref:System.Array>      -   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.      -   Implementer of <xref:System.ComponentModel.ITypedList>.       In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.      > [!NOTE] >  Implementers of IListSource can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement &lt;xref:System.Collections.IList&gt; itself.","pos":[0,164],"source":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself."},{"content":"Binding to data can occur at either run time or in a designer, but there are rules for each.","pos":[171,263]},{"content":"At run time, you can bind to data in any of the following:      -   &lt;xref:System.Array&gt;      -   Implementer of &lt;xref:System.Collections.IList&gt;, provided the implementer has a strongly typed &lt;xref:System.Collections.IList.Item%2A&gt; property (that is, the &lt;xref:System.Type&gt; is anything but &lt;xref:System.Object&gt;).","pos":[264,575],"source":" At run time, you can bind to data in any of the following:      -   <xref:System.Array>      -   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>)."},{"content":"You can accomplish this by making the default implementation of &lt;xref:System.Collections.IList.Item%2A&gt; private.","pos":[576,688],"source":" You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private."},{"content":"If you want to create an &lt;xref:System.Collections.IList&gt; that follows the rules of a strongly typed collection, you should derive from &lt;xref:System.Collections.CollectionBase&gt;.","pos":[689,865],"source":" If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>."},{"content":"-   Implementer of &lt;xref:System.ComponentModel.ITypedList&gt;.","pos":[871,930],"source":"      -   Implementer of <xref:System.ComponentModel.ITypedList>."},{"content":"In a designer, you can initialize binding to &lt;xref:System.ComponentModel.Component&gt; objects by following the same rules.","pos":[937,1057],"source":"       In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Implementers of IListSource can return an &lt;xref:System.Collections.IList&gt; that contains a collection of &lt;xref:System.Collections.IList&gt; objects.","pos":[1063,1220],"source":"      > [!NOTE] >  Implementers of IListSource can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects."}]},{"pos":[3341,3447],"content":"Gets a value indicating whether the collection is a collection of <xref:System.Collections.IList> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection is a collection of &lt;xref:System.Collections.IList&gt; objects.","pos":[0,106],"source":"Gets a value indicating whether the collection is a collection of <xref:System.Collections.IList> objects."}]},{"pos":[3459,3755],"content":"Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections. Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Using this property in &lt;xref:System.Data.DataSet&gt; returns <ph id=\"ph1\">`true`</ph> because the &lt;xref:System.Data.DataSet&gt; class contains a collection of collections.","pos":[0,147],"source":"Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections."},{"content":"Using this property in &lt;xref:System.Data.DataTable&gt; returns <ph id=\"ph1\">`false`</ph> because the &lt;xref:System.Data.DataTable&gt; class contains a collection of objects.","pos":[148,296],"source":" Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects."}]},{"pos":[4542,4755],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is a collection of &lt;xref:System.Collections.IList&gt; objects; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is a collection of <xref:System.Collections.IList> objects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5191,5350],"content":"Returns an <xref:System.Collections.IList> that can be bound to a data source from an object that does not implement an <xref:System.Collections.IList> itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an &lt;xref:System.Collections.IList&gt; that can be bound to a data source from an object that does not implement an &lt;xref:System.Collections.IList&gt; itself.","pos":[0,159],"source":"Returns an <xref:System.Collections.IList> that can be bound to a data source from an object that does not implement an <xref:System.Collections.IList> itself."}]},{"pos":[6126,6212],"content":"An <xref:System.Collections.IList> that can be bound to a data source from the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IList&gt; that can be bound to a data source from the object.","pos":[0,86],"source":"An <xref:System.Collections.IList> that can be bound to a data source from the object."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IListSource\n  id: IListSource\n  children:\n  - System.ComponentModel.IListSource.ContainsListCollection\n  - System.ComponentModel.IListSource.GetList\n  langs:\n  - csharp\n  name: IListSource\n  nameWithType: IListSource\n  fullName: System.ComponentModel.IListSource\n  type: Interface\n  summary: Provides functionality to an object to return a list that can be bound to a data source.\n  remarks: \"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself.  \\n  \\n Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:  \\n  \\n-   <xref:System.Array>  \\n  \\n-   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.  \\n  \\n-   Implementer of <xref:System.ComponentModel.ITypedList>.  \\n  \\n In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.  \\n  \\n> [!NOTE]\\n>  Implementers of IListSource can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects.\"\n  example:\n  - \"The following code example demonstrates how to implement the IListSource interface. A component named `EmployeeListSource` exposes an <xref:System.Collections.IList> for data binding by implementing the <xref:System.ComponentModel.IListSource.GetList%2A> method. For a full code listing, see [How to: Implement the IListSource Interface](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.ComponentModel.IListSource#1](~/add/codesnippet/csharp/t-system.componentmodel._62_1.cs)]\\n [!code-vb[System.ComponentModel.IListSource#1](~/add/codesnippet/visualbasic/t-system.componentmodel._62_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Editor(\"System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.ComponentModel.MergableProperty(false)]\n\n      [System.ComponentModel.TypeConverter(\"System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public interface IListSource\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IListSource.ContainsListCollection\n  id: ContainsListCollection\n  parent: System.ComponentModel.IListSource\n  langs:\n  - csharp\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n  fullName: System.ComponentModel.IListSource.ContainsListCollection\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the collection is a collection of <xref:System.Collections.IList> objects.\n  remarks: Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections. Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects.\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IListSource> interface. A component named `EmployeeListSource` indicates that it does not contain an <xref:System.Collections.IList> for data binding by returning `false` from the ContainsListCollection method. For a full code listing, see [How to: Implement the IListSource Interface](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.ComponentModel.IListSource#3](~/add/codesnippet/csharp/p-system.componentmodel._17_1.cs)]\\n [!code-vb[System.ComponentModel.IListSource#3](~/add/codesnippet/visualbasic/p-system.componentmodel._17_1.vb)]\"\n  syntax:\n    content: public bool ContainsListCollection { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is a collection of <xref:System.Collections.IList> objects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.IListSource.ContainsListCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IListSource.GetList\n  id: GetList\n  parent: System.ComponentModel.IListSource\n  langs:\n  - csharp\n  name: GetList()\n  nameWithType: IListSource.GetList()\n  fullName: System.ComponentModel.IListSource.GetList()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns an <xref:System.Collections.IList> that can be bound to a data source from an object that does not implement an <xref:System.Collections.IList> itself.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IListSource> interface. A component named `EmployeeListSource` exposes an <xref:System.Collections.IList> for data binding by implementing the GetList method. For a full code listing, see [How to: Implement the IListSource Interface](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.ComponentModel.IListSource#4](~/add/codesnippet/csharp/m-system.componentmodel._6_1.cs)]\\n [!code-vb[System.ComponentModel.IListSource#4](~/add/codesnippet/visualbasic/m-system.componentmodel._6_1.vb)]\"\n  syntax:\n    content: public System.Collections.IList GetList ();\n    parameters: []\n    return:\n      type: System.Collections.IList\n      description: An <xref:System.Collections.IList> that can be bound to a data source from the object.\n  overload: System.ComponentModel.IListSource.GetList*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.IListSource.ContainsListCollection\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n  fullName: System.ComponentModel.IListSource.ContainsListCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.IListSource.GetList\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: GetList()\n  nameWithType: IListSource.GetList()\n  fullName: System.ComponentModel.IListSource.GetList()\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.IListSource.ContainsListCollection*\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n- uid: System.ComponentModel.IListSource.GetList*\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: GetList\n  nameWithType: IListSource.GetList\n"}