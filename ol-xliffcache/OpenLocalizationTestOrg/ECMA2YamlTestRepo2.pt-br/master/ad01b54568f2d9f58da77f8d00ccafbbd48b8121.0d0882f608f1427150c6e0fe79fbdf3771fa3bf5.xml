{"nodes":[{"pos":[2126,2138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5026,5038],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5914,5926],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6602,6614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7874,7886],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7945,7957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8707,8719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8785,8797],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9408,9420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10185,10197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10964,10976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11627,11639],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12444,12456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13429,13441],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14368,14380],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15063,15075],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15134,15146],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16042,16054],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17019,17031],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17944,17956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.DataClasses.EntityCollection`1\n  id: EntityCollection`1\n  children:\n  - System.Data.Objects.DataClasses.EntityCollection`1.#ctor\n  - System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)\n  - System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})\n  - System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)\n  - System.Data.Objects.DataClasses.EntityCollection`1.Clear\n  - System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)\n  - System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)\n  - System.Data.Objects.DataClasses.EntityCollection`1.Count\n  - System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery\n  - System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator\n  - System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly\n  - System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)\n  - System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)\n  - System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)\n  - System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)\n  - System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList\n  langs:\n  - csharp\n  name: EntityCollection<TEntity>\n  nameWithType: EntityCollection<TEntity>\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>\n  type: Class\n  syntax:\n    content: 'public sealed class EntityCollection<TEntity> : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.ComponentModel.IListSource where TEntity : class'\n    typeParameters:\n    - id: TEntity\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Data.Objects.DataClasses.RelatedEnd\n  implements:\n  - System.Collections.Generic.ICollection<TEntity>\n  - System.Collections.Generic.IEnumerable<TEntity>\n  - System.ComponentModel.IListSource\n  inheritedMembers:\n  - System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged\n  - System.Data.Objects.DataClasses.RelatedEnd.IsLoaded\n  - System.Data.Objects.DataClasses.RelatedEnd.Load\n  - System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)\n  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipName\n  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet\n  - System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)\n  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)\n  - System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor\n  id: '#ctor'\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: EntityCollection()\n  nameWithType: EntityCollection<TEntity>.EntityCollection()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.EntityCollection()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public EntityCollection ();\n    parameters: []\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Add(TEntity)\n  nameWithType: EntityCollection<TEntity>.Add(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Add(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void Add (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})\n  id: Attach(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Attach(IEnumerable<TEntity>)\n  nameWithType: EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void Attach (System.Collections.Generic.IEnumerable<TEntity> entities);\n    parameters:\n    - id: entities\n      type: System.Collections.Generic.IEnumerable{TEntity}\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)\n  id: Attach(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Attach(TEntity)\n  nameWithType: EntityCollection<TEntity>.Attach(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void Attach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear\n  id: Clear\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: EntityCollection<TEntity>.Clear()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Clear()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Contains(TEntity)\n  nameWithType: EntityCollection<TEntity>.Contains(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Contains(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public bool Contains (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: CopyTo(TEntity[],Int32)\n  nameWithType: EntityCollection<TEntity>.CopyTo(TEntity[],Int32)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CopyTo(TEntity[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void CopyTo (TEntity[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: TEntity[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count\n  id: Count\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: EntityCollection<TEntity>.Count\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Count\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery\n  id: CreateSourceQuery\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: CreateSourceQuery()\n  nameWithType: EntityCollection<TEntity>.CreateSourceQuery()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CreateSourceQuery()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<TEntity> CreateSourceQuery ();\n    parameters: []\n    return:\n      type: System.Data.Objects.ObjectQuery{TEntity}\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: EntityCollection<TEntity>.GetEnumerator()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TEntity}\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: EntityCollection<TEntity>.IsReadOnly\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)\n  id: Load(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Load(MergeOption)\n  nameWithType: EntityCollection<TEntity>.Load(MergeOption)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Load(MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public override void Load (System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)\n  id: OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: OnCollectionDeserialized(StreamingContext)\n  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void OnCollectionDeserialized (System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)\n  id: OnSerializing(System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: OnSerializing(StreamingContext)\n  nameWithType: EntityCollection<TEntity>.OnSerializing(StreamingContext)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnSerializing(StreamingContext)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public void OnSerializing (System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: Remove(TEntity)\n  nameWithType: EntityCollection<TEntity>.Remove(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Remove(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: public bool Remove (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection\n  id: System#ComponentModel#IListSource#ContainsListCollection\n  isEii: true\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList\n  id: System#ComponentModel#IListSource#GetList\n  isEii: true\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  langs:\n  - csharp\n  name: System.ComponentModel.IListSource.GetList()\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.DataClasses\n  syntax:\n    content: System.Collections.IList IListSource.GetList ();\n    parameters: []\n    return:\n      type: System.Collections.IList\n      description: To be added.\n  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Objects.DataClasses.RelatedEnd\n  isExternal: false\n  name: System.Data.Objects.DataClasses.RelatedEnd\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: EntityCollection()\n  nameWithType: EntityCollection<TEntity>.EntityCollection()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.EntityCollection()\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Add(TEntity)\n  nameWithType: EntityCollection<TEntity>.Add(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Add(TEntity)\n- uid: TEntity\n  isExternal: true\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Attach(IEnumerable<TEntity>)\n  nameWithType: EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)\n- uid: System.Collections.Generic.IEnumerable{TEntity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<TEntity>\n  nameWithType: IEnumerable<TEntity>\n  fullName: System.Collections.Generic.IEnumerable<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<TEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Attach(TEntity)\n  nameWithType: EntityCollection<TEntity>.Attach(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(TEntity)\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: EntityCollection<TEntity>.Clear()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Clear()\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Contains(TEntity)\n  nameWithType: EntityCollection<TEntity>.Contains(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Contains(TEntity)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: CopyTo(TEntity[],Int32)\n  nameWithType: EntityCollection<TEntity>.CopyTo(TEntity[],Int32)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CopyTo(TEntity[],Int32)\n- uid: TEntity[]\n  isExternal: true\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity[]\n  spec.csharp:\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: EntityCollection<TEntity>.Count\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Count\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: CreateSourceQuery()\n  nameWithType: EntityCollection<TEntity>.CreateSourceQuery()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CreateSourceQuery()\n- uid: System.Data.Objects.ObjectQuery{TEntity}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<TEntity>\n  nameWithType: ObjectQuery<TEntity>\n  fullName: System.Data.Objects.ObjectQuery<TEntity>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectQuery`1\n    name: ObjectQuery\n    nameWithType: ObjectQuery\n    fullName: ObjectQuery<TEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: EntityCollection<TEntity>.GetEnumerator()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{TEntity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<TEntity>\n  nameWithType: IEnumerator<TEntity>\n  fullName: System.Collections.Generic.IEnumerator<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<TEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: EntityCollection<TEntity>.IsReadOnly\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.IsReadOnly\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Load(MergeOption)\n  nameWithType: EntityCollection<TEntity>.Load(MergeOption)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Load(MergeOption)\n- uid: System.Data.Objects.MergeOption\n  parent: System.Data.Objects\n  isExternal: false\n  name: MergeOption\n  nameWithType: MergeOption\n  fullName: System.Data.Objects.MergeOption\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: OnCollectionDeserialized(StreamingContext)\n  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: OnSerializing(StreamingContext)\n  nameWithType: EntityCollection<TEntity>.OnSerializing(StreamingContext)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnSerializing(StreamingContext)\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Remove(TEntity)\n  nameWithType: EntityCollection<TEntity>.Remove(TEntity)\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Remove(TEntity)\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.GetList()\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()\n  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: EntityCollection<TEntity>\n  nameWithType: EntityCollection<TEntity>.EntityCollection<TEntity>\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Add\n  nameWithType: EntityCollection<TEntity>.Add\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Attach\n  nameWithType: EntityCollection<TEntity>.Attach\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Clear\n  nameWithType: EntityCollection<TEntity>.Clear\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: EntityCollection<TEntity>.Contains\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: EntityCollection<TEntity>.CopyTo\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: EntityCollection<TEntity>.Count\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: CreateSourceQuery\n  nameWithType: EntityCollection<TEntity>.CreateSourceQuery\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: EntityCollection<TEntity>.GetEnumerator\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: EntityCollection<TEntity>.IsReadOnly\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Load\n  nameWithType: EntityCollection<TEntity>.Load\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: OnCollectionDeserialized\n  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: OnSerializing\n  nameWithType: EntityCollection<TEntity>.OnSerializing\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: Remove\n  nameWithType: EntityCollection<TEntity>.Remove\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList*\n  parent: System.Data.Objects.DataClasses.EntityCollection`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.GetList\n  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList\n"}