{"nodes":[{"pos":[1308,1390],"content":"Specifies whether a service operation accepts incoming transactions from a client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether a service operation accepts incoming transactions from a client.","pos":[0,82]}]},{"pos":[1403,2211],"content":"The TransactionFlowAttribute is an attribute used declaratively to associate a specific transaction flow policy with a service operation. The <xref:System.ServiceModel.TransactionFlowOption> property of this attribute specifies whether the respective operation accepts a transaction flowed from the client, or if the operation requires the client to always flow a transaction. The TransactionFlowAttribute can also be used as an operation behavior to programmatically associate a transaction flow policy with a specific operation. In this case, it should be added to the `Behaviors` collection on the operation’s description.      > [!NOTE] >  The `OperationContract` for each method that uses the TransactionFlowAttribute must provide a fully-qualified `Action` string. A value of \"*\" is not supported.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TransactionFlowAttribute is an attribute used declaratively to associate a specific transaction flow policy with a service operation.","pos":[0,137]},{"content":"The &lt;xref:System.ServiceModel.TransactionFlowOption&gt; property of this attribute specifies whether the respective operation accepts a transaction flowed from the client, or if the operation requires the client to always flow a transaction.","pos":[138,376],"source":" The <xref:System.ServiceModel.TransactionFlowOption> property of this attribute specifies whether the respective operation accepts a transaction flowed from the client, or if the operation requires the client to always flow a transaction."},{"content":"The TransactionFlowAttribute can also be used as an operation behavior to programmatically associate a transaction flow policy with a specific operation.","pos":[377,530]},{"content":"In this case, it should be added to the <ph id=\"ph1\">`Behaviors`</ph> collection on the operation’s description.","pos":[531,625],"source":" In this case, it should be added to the `Behaviors` collection on the operation’s description."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`OperationContract`</ph> for each method that uses the TransactionFlowAttribute must provide a fully-qualified <ph id=\"ph3\">`Action`</ph> string.","pos":[631,770],"source":"      > [!NOTE] >  The `OperationContract` for each method that uses the TransactionFlowAttribute must provide a fully-qualified `Action` string."},{"content":"A value of \"*\" is not supported.","pos":[771,803]}]},{"pos":[5738,5844],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.TransactionFlowAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.TransactionFlowAttribute\"></xref> class."},{"pos":[6508,6573],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.TransactionFlowOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.TransactionFlowOption\"></xref>."},{"pos":[7755,7881],"content":"Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited.","pos":[0,126],"nodes":[{"content":"Adds extra parameters (settings) to the binding context to support this operation’s behavior.","pos":[0,93]},{"content":"This method cannot be inherited.","pos":[94,126]}]}]},{"pos":[7893,8094],"content":"This method provides a binding context with the extra parameters (settings) to support the required behavior for this operation. It is called internally by the infrastructure when a service is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method provides a binding context with the extra parameters (settings) to support the required behavior for this operation. It is called internally by the infrastructure when a service is created.","pos":[0,201],"nodes":[{"content":"This method provides a binding context with the extra parameters (settings) to support the required behavior for this operation.","pos":[0,128]},{"content":"It is called internally by the infrastructure when a service is created.","pos":[129,201]}]}]},{"pos":[8421,8496],"content":"The operation description for which the attribute adds extra functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation description for which the attribute adds extra functionality.","pos":[0,75]}]},{"pos":[8605,8664],"content":"The collection of parameter objects on the binding context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameter objects on the binding context.","pos":[0,59]}]},{"pos":[9856,10061],"content":"Attaches the attribute functionality to the <xref uid=\"langword_csharp_ProxyOperation\" name=\"ProxyOperation\" href=\"\"></xref> object for the method that the attribute marks. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attaches the attribute functionality to the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ProxyOperation\" name=\"ProxyOperation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the method that the attribute marks.","pos":[0,172],"source":"Attaches the attribute functionality to the <xref uid=\"langword_csharp_ProxyOperation\" name=\"ProxyOperation\" href=\"\"></xref> object for the method that the attribute marks."},{"content":"This method cannot be inherited.","pos":[173,205]}]},{"pos":[10073,10423],"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service proxy is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service proxy is created.","pos":[0,350],"nodes":[{"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation.","pos":[0,136]},{"content":"Note that in the case of the &lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;, the implementation of this method is empty.","pos":[137,262],"source":" Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty."},{"content":"This method is called internally by the infrastructure when a service proxy is created.","pos":[263,350]}]}]},{"pos":[10735,10795],"content":"The operation to which the attribute attaches functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation to which the attribute attaches functionality.","pos":[0,60]}]},{"pos":[10890,10993],"content":"The <xref:System.ServiceModel.Dispatcher.ClientOperation> object that represents the current operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt; object that represents the current operation.","pos":[0,103],"source":"The <xref:System.ServiceModel.Dispatcher.ClientOperation> object that represents the current operation."}]},{"pos":[12204,12384],"content":"Attaches the attribute functionality to the <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for the method that the attribute marks. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attaches the attribute functionality to the <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for the method that the attribute marks. This method cannot be inherited.","pos":[0,180],"nodes":[{"content":"Attaches the attribute functionality to the &lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt; object for the method that the attribute marks.","pos":[0,147],"source":"Attaches the attribute functionality to the <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for the method that the attribute marks."},{"content":"This method cannot be inherited.","pos":[148,180]}]}]},{"pos":[12396,12740],"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.","pos":[0,344],"nodes":[{"content":"This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation.","pos":[0,136]},{"content":"Note that in the case of the &lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;, the implementation of this method is empty.","pos":[137,262],"source":" Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty."},{"content":"This method is called internally by the infrastructure when a service is created.","pos":[263,344]}]}]},{"pos":[13059,13094],"content":"The description for this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description for this operation.","pos":[0,35]}]},{"pos":[13194,13280],"content":"The <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt; object for this operation.","pos":[0,86],"source":"The <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for this operation."}]},{"pos":[14276,14363],"content":"Verifies that the operation can support this behavior. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the operation can support this behavior. This method cannot be inherited.","pos":[0,87],"nodes":[{"content":"Verifies that the operation can support this behavior.","pos":[0,54]},{"content":"This method cannot be inherited.","pos":[55,87]}]}]},{"pos":[14375,14693],"content":"This method verifies whether the operation description is sufficient to support the transaction flow behavior. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method verifies whether the operation description is sufficient to support the transaction flow behavior. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.","pos":[0,318],"nodes":[{"content":"This method verifies whether the operation description is sufficient to support the transaction flow behavior.","pos":[0,110]},{"content":"Note that in the case of the &lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;, the implementation of this method is empty.","pos":[111,236],"source":" Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty."},{"content":"This method is called internally by the infrastructure when a service is created.","pos":[237,318]}]}]},{"pos":[14940,14966],"content":"The operation to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation to validate.","pos":[0,26]}]},{"pos":[15528,15602],"content":"Gets a value that indicates whether the incoming transaction is supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the incoming transaction is supported.","pos":[0,74]}]},{"pos":[15782,15908],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.TransactionFlowOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates whether the incoming transaction is supported.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.TransactionFlowOption\"></xref> that indicates whether the incoming transaction is supported."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.TransactionFlowAttribute\n  id: TransactionFlowAttribute\n  children:\n  - System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)\n  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  - System.ServiceModel.TransactionFlowAttribute.Transactions\n  langs:\n  - csharp\n  name: TransactionFlowAttribute\n  nameWithType: TransactionFlowAttribute\n  fullName: System.ServiceModel.TransactionFlowAttribute\n  type: Class\n  summary: Specifies whether a service operation accepts incoming transactions from a client.\n  remarks: \"The TransactionFlowAttribute is an attribute used declaratively to associate a specific transaction flow policy with a service operation. The <xref:System.ServiceModel.TransactionFlowOption> property of this attribute specifies whether the respective operation accepts a transaction flowed from the client, or if the operation requires the client to always flow a transaction. The TransactionFlowAttribute can also be used as an operation behavior to programmatically associate a transaction flow policy with a specific operation. In this case, it should be added to the `Behaviors` collection on the operation’s description.  \\n  \\n> [!NOTE]\\n>  The `OperationContract` for each method that uses the TransactionFlowAttribute must provide a fully-qualified `Action` string. A value of \\\"*\\\" is not supported.\"\n  example:\n  - \"The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \\n  \\n```  \\nusing System;  \\nusing System.ServiceModel;  \\nusing System.Transactions;  \\n  \\nnamespace Microsoft.WCF.Documentation  \\n{  \\n  [ServiceContract(  \\n    Namespace=\\\"http://microsoft.wcf.documentation\\\",   \\n    SessionMode=SessionMode.Required  \\n  )]  \\n  public interface IBehaviorService  \\n  {  \\n    [OperationContract]  \\n    [TransactionFlow(TransactionFlowOption.Mandatory)]  \\n    string TxWork(string message);  \\n  }  \\n  \\n  // Note: To use the TransactionIsolationLevel property, you   \\n  // must add a reference to the System.Transactions.dll assembly.  \\n  /* The following service implementation:  \\n   *   -- Processes messages on one thread at a time  \\n   *   -- Creates one service object per session  \\n   *   -- Releases the service object when the transaction commits  \\n   */  \\n  [ServiceBehavior(  \\n    ConcurrencyMode=ConcurrencyMode.Single,  \\n    InstanceContextMode=InstanceContextMode.PerSession,  \\n    ReleaseServiceInstanceOnTransactionComplete=true  \\n  )]  \\n  public class BehaviorService : IBehaviorService, IDisposable  \\n  {  \\n    Guid myID;  \\n  \\n    public BehaviorService()  \\n    {  \\n      myID = Guid.NewGuid();  \\n      Console.WriteLine(  \\n        \\\"Object \\\"  \\n        + myID.ToString()  \\n        + \\\" created.\\\");  \\n    }  \\n  \\n    /*  \\n    / * The following operation-level behaviors are specified:  \\n    / * Always executes under a transaction scope.  \\n    / * The transaction scope is completed when the operation  \\n    / * terminates without an unhandled exception.  \\n    /*  \\n    [OperationBehavior(  \\n      TransactionAutoComplete = true,  \\n      TransactionScopeRequired = true  \\n    )]  \\n    public string TxWork(string message)  \\n    {  \\n      // Do some transactable work.  \\n      Console.WriteLine(\\\"TxWork called with: \\\" + message);  \\n      // Display transaction information.  \\n  \\n      TransactionInformation info = Transaction.Current.TransactionInformation;  \\n      Console.WriteLine(\\\"The distributed tx ID: {0}.\\\", info.DistributedIdentifier);  \\n      Console.WriteLine(\\\"The tx status: {0}.\\\", info.Status);  \\n      return String.Format(\\\"Hello. This was object {0}.\\\",myID.ToString()) ;  \\n    }  \\n  \\n    public void Dispose()  \\n    {  \\n      Console.WriteLine(  \\n        \\\"Service \\\"  \\n        + myID.ToString()  \\n        + \\\" is being recycled.\\\"  \\n      );  \\n    }  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method)]\n\n      public sealed class TransactionFlowAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior\n  inheritance:\n  - System.Attribute\n  implements:\n  - System.ServiceModel.Description.IOperationBehavior\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)\n  id: '#ctor(System.ServiceModel.TransactionFlowOption)'\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: TransactionFlowAttribute(TransactionFlowOption)\n  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)\n  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.TransactionFlowAttribute\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \\n  \\n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]\"\n  syntax:\n    content: public TransactionFlowAttribute (System.ServiceModel.TransactionFlowOption transactions);\n    parameters:\n    - id: transactions\n      type: System.ServiceModel.TransactionFlowOption\n      description: A <xref href=\"System.ServiceModel.TransactionFlowOption\"></xref>.\n  overload: System.ServiceModel.TransactionFlowAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  isEii: true\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited.\n  remarks: This method provides a binding context with the extra parameters (settings) to support the required behavior for this operation. It is called internally by the infrastructure when a service is created.\n  syntax:\n    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation description for which the attribute adds extra functionality.\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The collection of parameter objects on the binding context.\n  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  isEii: true\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Attaches the attribute functionality to the <xref uid=\"langword_csharp_ProxyOperation\" name=\"ProxyOperation\" href=\"\"></xref> object for the method that the attribute marks. This method cannot be inherited.\n  remarks: This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service proxy is created.\n  syntax:\n    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation to which the attribute attaches functionality.\n    - id: proxy\n      type: System.ServiceModel.Dispatcher.ClientOperation\n      description: The <xref:System.ServiceModel.Dispatcher.ClientOperation> object that represents the current operation.\n  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  isEii: true\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Attaches the attribute functionality to the <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for the method that the attribute marks. This method cannot be inherited.\n  remarks: This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.\n  syntax:\n    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The description for this operation.\n    - id: dispatch\n      type: System.ServiceModel.Dispatcher.DispatchOperation\n      description: The <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for this operation.\n  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  isEii: true\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Verifies that the operation can support this behavior. This method cannot be inherited.\n  remarks: This method verifies whether the operation description is sufficient to support the transaction flow behavior. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created.\n  syntax:\n    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation to validate.\n  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.TransactionFlowAttribute.Transactions\n  id: Transactions\n  parent: System.ServiceModel.TransactionFlowAttribute\n  langs:\n  - csharp\n  name: Transactions\n  nameWithType: TransactionFlowAttribute.Transactions\n  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether the incoming transaction is supported.\n  syntax:\n    content: public System.ServiceModel.TransactionFlowOption Transactions { get; }\n    return:\n      type: System.ServiceModel.TransactionFlowOption\n      description: A <xref href=\"System.ServiceModel.TransactionFlowOption\"></xref> that indicates whether the incoming transaction is supported.\n  overload: System.ServiceModel.TransactionFlowAttribute.Transactions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: TransactionFlowAttribute(TransactionFlowOption)\n  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)\n  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)\n- uid: System.ServiceModel.TransactionFlowOption\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransactionFlowOption\n  nameWithType: TransactionFlowOption\n  fullName: System.ServiceModel.TransactionFlowOption\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n- uid: System.ServiceModel.Description.OperationDescription\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: OperationDescription\n  nameWithType: OperationDescription\n  fullName: System.ServiceModel.Description.OperationDescription\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n- uid: System.ServiceModel.Dispatcher.ClientOperation\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: ClientOperation\n  nameWithType: ClientOperation\n  fullName: System.ServiceModel.Dispatcher.ClientOperation\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n- uid: System.ServiceModel.Dispatcher.DispatchOperation\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: DispatchOperation\n  nameWithType: DispatchOperation\n  fullName: System.ServiceModel.Dispatcher.DispatchOperation\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n- uid: System.ServiceModel.TransactionFlowAttribute.Transactions\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: Transactions\n  nameWithType: TransactionFlowAttribute.Transactions\n  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions\n- uid: System.ServiceModel.TransactionFlowAttribute.#ctor*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: TransactionFlowAttribute\n  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior\n- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.Validate\n  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate\n- uid: System.ServiceModel.TransactionFlowAttribute.Transactions*\n  parent: System.ServiceModel.TransactionFlowAttribute\n  isExternal: false\n  name: Transactions\n  nameWithType: TransactionFlowAttribute.Transactions\n"}