{"nodes":[{"pos":[1223,1391],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects to and from other representations.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.ComponentModel.TypeConverter\"></xref> to convert <xref href=\"System.Windows.Forms.Keys\"></xref> objects to and from other representations."},{"pos":[1403,1592],"content":"Most commonly, the KeysConverter type converter is used to convert <xref:System.Windows.Forms.Keys> instances to and from their corresponding localized <xref:System.String> representations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Most commonly, the KeysConverter type converter is used to convert &lt;xref:System.Windows.Forms.Keys&gt; instances to and from their corresponding localized &lt;xref:System.String&gt; representations.","pos":[0,189],"source":"Most commonly, the KeysConverter type converter is used to convert <xref:System.Windows.Forms.Keys> instances to and from their corresponding localized <xref:System.String> representations."}]},{"pos":[5654,5747],"content":"Initializes an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeysConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes an instance of the <xref href=\"System.Windows.Forms.KeysConverter\"></xref> class."},{"pos":[5760,6213],"content":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.KeysConverter> class.       Typically, you do not directly create an instance of a <xref:System.Windows.Forms.KeysConverter>. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.KeysConverter> class.       Typically, you do not directly create an instance of a <xref:System.Windows.Forms.KeysConverter>. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","pos":[0,451],"nodes":[{"content":"This is the default, compiler-supplied constructor for the &lt;xref:System.Windows.Forms.KeysConverter&gt; class.","pos":[0,107],"source":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.KeysConverter> class."},{"content":"Typically, you do not directly create an instance of a &lt;xref:System.Windows.Forms.KeysConverter&gt;.","pos":[114,211],"source":"       Typically, you do not directly create an instance of a <xref:System.Windows.Forms.KeysConverter>."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[212,350],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[351,451],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]}]},{"pos":[6951,7116],"content":"Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.","pos":[0,165]}]},{"pos":[7128,7351],"content":"The CanConvertFrom method is specialized to return <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`sourceType`</ph> parameter is of type &lt;xref:System.String&gt; or &lt;xref:System.Enum&gt; array; otherwise, it defers evaluation to the base implementation of this method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The CanConvertFrom method is specialized to return `true` if the `sourceType` parameter is of type <xref:System.String> or <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method."},{"pos":[7594,7922],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,212],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,328],"source":" This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7987,8026],"content":"The <xref:System.Type> to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert from.","pos":[0,39],"source":"The <xref:System.Type> to convert from."}]},{"pos":[8085,8256],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion can be performed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8925,9090],"content":"Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.","pos":[0,165]}]},{"pos":[9102,9304],"content":"The CanConvertTo method is specialized to return <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`destinationType`</ph> parameter is of type &lt;xref:System.Enum&gt; array; otherwise, it defers evaluation to the base implementation of this method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The CanConvertTo method is specialized to return `true` if the `destinationType` parameter is of type <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method."},{"pos":[9550,9878],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,212],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,328],"source":" This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9948,9985],"content":"The <xref:System.Type> to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert to.","pos":[0,37],"source":"The <xref:System.Type> to convert to."}]},{"pos":[10044,10215],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion can be performed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10757,10797],"content":"Compares two key values for equivalence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two key values for equivalence.","pos":[0,40]}]},{"pos":[10809,10910],"content":"This method uses <xref:System.String.Compare%2A?displayProperty=fullName> to compare the two objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; to compare the two objects.","pos":[0,101],"source":"This method uses <xref:System.String.Compare%2A?displayProperty=fullName> to compare the two objects."}]},{"pos":[11048,11113],"content":"An <xref:System.Object> that represents the first key to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the first key to compare.","pos":[0,65],"source":"An <xref:System.Object> that represents the first key to compare."}]},{"pos":[11171,11237],"content":"An <xref:System.Object> that represents the second key to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the second key to compare.","pos":[0,66],"source":"An <xref:System.Object> that represents the second key to compare."}]},{"pos":[11295,11787],"content":"An integer indicating the relationship between the two parameters.       <table><thead><tr><th> Value Type       </th><th> Condition       </th></tr></thead><tbody><tr><td> A negative integer.       </td><td><code>a</code> is less than <code>b</code>.       </td></tr><tr><td> zero       </td><td><code>a</code> equals <code>b</code>.       </td></tr><tr><td> A positive integer.       </td><td><code>a</code> is greater than <code>b</code>.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"An integer indicating the relationship between the two parameters.       ","pos":[0,73],"nodes":[{"content":"An integer indicating the relationship between the two parameters.","pos":[0,66]}]},{"content":"Value Type","pos":[96,106]},{"content":"Condition","pos":[123,132]},{"content":" A negative integer.       ","pos":[172,199],"nodes":[{"content":"A negative integer.","pos":[1,20]}]},{"content":"<code>a</code> is less than <code>b</code>.       ","pos":[208,258],"nodes":[{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[0,43],"source":"<code>a</code> is less than <code>b</code>."}]},{"content":"zero","pos":[277,281]},{"content":"<code>a</code> equals <code>b</code>.       ","pos":[297,341],"nodes":[{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[0,37],"source":"<code>a</code> equals <code>b</code>."}]},{"content":" A positive integer.       ","pos":[359,386],"nodes":[{"content":"A positive integer.","pos":[1,20]}]},{"content":"<code>a</code> is greater than <code>b</code>.       ","pos":[395,448],"nodes":[{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[0,46],"source":"<code>a</code> is greater than <code>b</code>."}]}]},{"pos":[12557,12618],"content":"Converts the specified object to the converter's native type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to the converter's native type.","pos":[0,61]}]},{"pos":[12630,12900],"content":"The ConvertFrom method is specialized to convert objects of type <xref:System.String> or <xref:System.Enum> array. In this case, it will return an object of type <xref:System.Windows.Forms.Keys>. Otherwise, it defers evaluation to the base implementation of this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConvertFrom method is specialized to convert objects of type <xref:System.String> or <xref:System.Enum> array. In this case, it will return an object of type <xref:System.Windows.Forms.Keys>. Otherwise, it defers evaluation to the base implementation of this method.","pos":[0,270],"nodes":[{"content":"The ConvertFrom method is specialized to convert objects of type &lt;xref:System.String&gt; or &lt;xref:System.Enum&gt; array.","pos":[0,114],"source":"The ConvertFrom method is specialized to convert objects of type <xref:System.String> or <xref:System.Enum> array."},{"content":"In this case, it will return an object of type &lt;xref:System.Windows.Forms.Keys&gt;.","pos":[115,195],"source":" In this case, it will return an object of type <xref:System.Windows.Forms.Keys>."},{"content":"Otherwise, it defers evaluation to the base implementation of this method.","pos":[196,270]}]}]},{"pos":[13181,13484],"content":"An <xref uid=\"langword_csharp_ITypeDescriptorContext\" name=\"ITypeDescriptorContext\" href=\"\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ITypeDescriptorContext\" name=\"ITypeDescriptorContext\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,243],"source":"An <xref uid=\"langword_csharp_ITypeDescriptorContext\" name=\"ITypeDescriptorContext\" href=\"\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be null.","pos":[244,303]}]},{"pos":[13567,13681],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to provide locale information.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> object to provide locale information."},{"pos":[13743,13765],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[13823,13882],"content":"An object that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object that represents the converted <code>value</code>."},{"pos":[14048,14143],"content":"An invalid key combination was supplied.       -or-       An invalid key name was supplied.","needQuote":false,"needEscape":true,"nodes":[{"content":"An invalid key combination was supplied.       -or-       An invalid key name was supplied.","pos":[0,91],"nodes":[{"content":"An invalid key combination was supplied.","pos":[0,40]},{"content":"-or-       An invalid key name was supplied.","pos":[47,91]}]}]},{"pos":[14869,14933],"content":"Converts the specified object to the specified destination type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to the specified destination type.","pos":[0,64]}]},{"pos":[14945,15208],"content":"The ConvertTo method is specialized to convert objects of type <xref:System.Windows.Forms.Keys> or <xref:System.Int32>. In this case, it will return an object of type <xref:System.String>. Otherwise, it defers evaluation to the base implementation of this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConvertTo method is specialized to convert objects of type <xref:System.Windows.Forms.Keys> or <xref:System.Int32>. In this case, it will return an object of type <xref:System.String>. Otherwise, it defers evaluation to the base implementation of this method.","pos":[0,263],"nodes":[{"content":"The ConvertTo method is specialized to convert objects of type &lt;xref:System.Windows.Forms.Keys&gt; or &lt;xref:System.Int32&gt;.","pos":[0,119],"source":"The ConvertTo method is specialized to convert objects of type <xref:System.Windows.Forms.Keys> or <xref:System.Int32>."},{"content":"In this case, it will return an object of type &lt;xref:System.String&gt;.","pos":[120,188],"source":" In this case, it will return an object of type <xref:System.String>."},{"content":"Otherwise, it defers evaluation to the base implementation of this method.","pos":[189,263]}]}]},{"pos":[15509,15837],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,212],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,328],"source":" This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[15920,15992],"content":"A <xref:System.Globalization.CultureInfo> to provide locale information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; to provide locale information.","pos":[0,72],"source":"A <xref:System.Globalization.CultureInfo> to provide locale information."}]},{"pos":[16054,16090],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[16160,16208],"content":"The <xref:System.Type> to convert the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the object to.","pos":[0,48],"source":"The <xref:System.Type> to convert the object to."}]},{"pos":[16266,16339],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[16514,16607],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17182,17317],"content":"Returns a collection of standard values for the data type that this type converter is designed for when provided with a format context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of standard values for the data type that this type converter is designed for when provided with a format context.","pos":[0,135]}]},{"pos":[17329,17407],"content":"The collection returned contains the values of the keys that can be converted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The collection returned contains the values of the keys that can be converted.","pos":[0,78]}]},{"pos":[17692,18020],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,212],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,328],"source":" This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[18125,18316],"content":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values.","pos":[0,191],"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values."}]},{"pos":[19019,19269],"content":"Determines if the list of standard values returned from <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GetStandardValues\" name=\"GetStandardValues\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is an exclusive list using the specified <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines if the list of standard values returned from <xref uid=\"langword_csharp_GetStandardValues\" name=\"GetStandardValues\" href=\"\"></xref> is an exclusive list using the specified <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref>."},{"pos":[19282,19647],"content":"The `context` parameter is not used in the standard implementation of this method.       If the list is exclusive, then no other values are valid, such as in an <xref:System.Enum> data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> provides.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter is not used in the standard implementation of this method.","pos":[0,82],"source":"The `context` parameter is not used in the standard implementation of this method."},{"content":"If the list is exclusive, then no other values are valid, such as in an &lt;xref:System.Enum&gt; data type.","pos":[89,190],"source":"       If the list is exclusive, then no other values are valid, such as in an <xref:System.Enum> data type."},{"content":"If the list is not exclusive, then there are other valid values besides the list of standard values &lt;xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A&gt; provides.","pos":[191,363],"source":" If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> provides."}]},{"pos":[19886,20243],"content":"A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, so you should always check. Also, properties on the context object may also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"This object can be used to extract additional information about the environment this converter is being invoked from.","pos":[21,138]},{"content":"This may be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, so you should always check.","pos":[139,240],"source":" This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, so you should always check."},{"content":"Also, properties on the context object may also return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[241,357],"source":" Also, properties on the context object may also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[20302,20723],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection returned from <xref:System.Windows.Forms.KeysConverter.GetStandardValues*> is an exhaustive list of possible values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if other values are possible. The default implementation for this method always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection returned from &lt;xref:System.Windows.Forms.KeysConverter.GetStandardValues*&gt; is an exhaustive list of possible values; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if other values are possible.","pos":[0,299],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection returned from <xref:System.Windows.Forms.KeysConverter.GetStandardValues*> is an exhaustive list of possible values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if other values are possible."},{"content":"The default implementation for this method always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[300,421],"source":" The default implementation for this method always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[21435,21544],"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","pos":[0,109]}]},{"pos":[21556,21638],"content":"The <ph id=\"ph1\">`context`</ph> parameter is not used in the standard implementation of this method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `context` parameter is not used in the standard implementation of this method."},{"pos":[21876,22204],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,212],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This parameter or properties of this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,328],"source":" This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[22263,22339],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.KeysConverter\n  id: KeysConverter\n  children:\n  - System.Windows.Forms.KeysConverter.#ctor\n  - System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)\n  - System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: KeysConverter\n  nameWithType: KeysConverter\n  fullName: System.Windows.Forms.KeysConverter\n  type: Class\n  summary: Provides a <xref href=\"System.ComponentModel.TypeConverter\"></xref> to convert <xref href=\"System.Windows.Forms.Keys\"></xref> objects to and from other representations.\n  remarks: Most commonly, the KeysConverter type converter is used to convert <xref:System.Windows.Forms.Keys> instances to and from their corresponding localized <xref:System.String> representations.\n  example:\n  - \"The following code example demonstrates how to use the KeysConverter class to convert a <xref:System.Windows.Forms.Keys> to a <xref:System.String>. This example assumes that you have a <xref:System.Windows.Forms.TextBox> named `TextBox1` on a <xref:System.Windows.Forms.Form> named `Form1`.  \\n  \\n [!code-cs[SystemWindowsFormsKeys#1](~/add/codesnippet/csharp/KeysConverterCS/Form1.cs#1)]\\n [!code-vb[SystemWindowsFormsKeys#1](~/add/codesnippet/visualbasic/KeysConverterVB/Form1.vb#1)]\"\n  syntax:\n    content: 'public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements:\n  - System.Collections.IComparer\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: KeysConverter()\n  nameWithType: KeysConverter.KeysConverter()\n  fullName: System.Windows.Forms.KeysConverter.KeysConverter()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes an instance of the <xref href=\"System.Windows.Forms.KeysConverter\"></xref> class.\n  remarks: \"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.KeysConverter> class.  \\n  \\n Typically, you do not directly create an instance of a <xref:System.Windows.Forms.KeysConverter>. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  syntax:\n    content: public KeysConverter ();\n    parameters: []\n  overload: System.Windows.Forms.KeysConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.\n  remarks: The CanConvertFrom method is specialized to return `true` if the `sourceType` parameter is of type <xref:System.String> or <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: sourceType\n      type: System.Type\n      description: The <xref:System.Type> to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeysConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.\n  remarks: The CanConvertTo method is specialized to return `true` if the `destinationType` parameter is of type <xref:System.Enum> array; otherwise, it defers evaluation to the base implementation of this method.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeysConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)\n  id: Compare(System.Object,System.Object)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: Compare(Object,Object)\n  nameWithType: KeysConverter.Compare(Object,Object)\n  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Compares two key values for equivalence.\n  remarks: This method uses <xref:System.String.Compare%2A?displayProperty=fullName> to compare the two objects.\n  syntax:\n    content: public int Compare (object a, object b);\n    parameters:\n    - id: a\n      type: System.Object\n      description: An <xref:System.Object> that represents the first key to compare.\n    - id: b\n      type: System.Object\n      description: An <xref:System.Object> that represents the second key to compare.\n    return:\n      type: System.Int32\n      description: \"An integer indicating the relationship between the two parameters.  \\n  \\n <table><thead><tr><th> Value Type  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer.  \\n  \\n </td><td><code>a</code> is less than <code>b</code>.  \\n  \\n </td></tr><tr><td> zero  \\n  \\n </td><td><code>a</code> equals <code>b</code>.  \\n  \\n </td></tr><tr><td> A positive integer.  \\n  \\n </td><td><code>a</code> is greater than <code>b</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Windows.Forms.KeysConverter.Compare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified object to the converter's native type.\n  remarks: The ConvertFrom method is specialized to convert objects of type <xref:System.String> or <xref:System.Enum> array. In this case, it will return an object of type <xref:System.Windows.Forms.Keys>. Otherwise, it defers evaluation to the base implementation of this method.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref uid=\"langword_csharp_ITypeDescriptorContext\" name=\"ITypeDescriptorContext\" href=\"\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> object to provide locale information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: An object that represents the converted <code>value</code>.\n  overload: System.Windows.Forms.KeysConverter.ConvertFrom*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"An invalid key combination was supplied.  \\n  \\n -or-  \\n  \\n An invalid key name was supplied.\"\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified object to the specified destination type.\n  remarks: The ConvertTo method is specialized to convert objects of type <xref:System.Windows.Forms.Keys> or <xref:System.Int32>. In this case, it will return an object of type <xref:System.String>. Otherwise, it defers evaluation to the base implementation of this method.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> to provide locale information.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the object to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.Windows.Forms.KeysConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a collection of standard values for the data type that this type converter is designed for when provided with a format context.\n  remarks: The collection returned contains the values of the keys that can be converted.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values.\n  overload: System.Windows.Forms.KeysConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines if the list of standard values returned from <xref uid=\"langword_csharp_GetStandardValues\" name=\"GetStandardValues\" href=\"\"></xref> is an exclusive list using the specified <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref>.\n  remarks: \"The `context` parameter is not used in the standard implementation of this method.  \\n  \\n If the list is exclusive, then no other values are valid, such as in an <xref:System.Enum> data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> provides.\"\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, so you should always check. Also, properties on the context object may also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection returned from <xref:System.Windows.Forms.KeysConverter.GetStandardValues*> is an exhaustive list of possible values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if other values are possible. The default implementation for this method always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether this object supports a standard set of values that can be picked from a list.\n  remarks: The `context` parameter is not used in the standard implementation of this method.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Forms.KeysConverter.#ctor\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: KeysConverter()\n  nameWithType: KeysConverter.KeysConverter()\n  fullName: System.Windows.Forms.KeysConverter.KeysConverter()\n- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: Compare(Object,Object)\n  nameWithType: KeysConverter.Compare(Object,Object)\n  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Windows.Forms.KeysConverter.#ctor*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: KeysConverter\n  nameWithType: KeysConverter.KeysConverter\n- uid: System.Windows.Forms.KeysConverter.CanConvertFrom*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: KeysConverter.CanConvertFrom\n- uid: System.Windows.Forms.KeysConverter.CanConvertTo*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: KeysConverter.CanConvertTo\n- uid: System.Windows.Forms.KeysConverter.Compare*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: Compare\n  nameWithType: KeysConverter.Compare\n- uid: System.Windows.Forms.KeysConverter.ConvertFrom*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: KeysConverter.ConvertFrom\n- uid: System.Windows.Forms.KeysConverter.ConvertTo*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: KeysConverter.ConvertTo\n- uid: System.Windows.Forms.KeysConverter.GetStandardValues*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: KeysConverter.GetStandardValues\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: KeysConverter.GetStandardValuesExclusive\n- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*\n  parent: System.Windows.Forms.KeysConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: KeysConverter.GetStandardValuesSupported\n"}