{"nodes":[{"pos":[1224,1311],"content":"Provides a type converter that can be used to populate a list box with available types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter that can be used to populate a list box with available types.","pos":[0,87]}]},{"pos":[1324,1913],"content":"You must provide the list of types to the constructor of this `abstract` class.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of a TypeListConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You must provide the list of types to the constructor of this <ph id=\"ph1\">`abstract`</ph> class.","pos":[0,79],"source":"You must provide the list of types to the constructor of this `abstract` class."},{"content":"For more information about type converters, see the &lt;xref:System.ComponentModel.TypeConverter&gt; base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[86,272],"source":"       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never create an instance of a TypeListConverter.","pos":[278,350],"source":"      > [!NOTE] >  You should never create an instance of a TypeListConverter."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[351,483],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[484,584],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]},{"pos":[5492,5637],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeListConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the type array as the available types.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeListConverter\"></xref> class using the type array as the available types."},{"pos":[5649,5753],"content":"The types provided in the <ph id=\"ph1\">`types`</ph> parameter can be used to populate a list box with the available types.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The types provided in the `types` parameter can be used to populate a list box with the available types."},{"pos":[5898,5965],"content":"The array of type <xref:System.Type> to use as the available types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of type &lt;xref:System.Type&gt; to use as the available types.","pos":[0,67],"source":"The array of type <xref:System.Type> to use as the available types."}]},{"pos":[6646,6783],"content":"Gets a value indicating whether this converter can convert the specified <xref:System.Type> of the source object using the given context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert the specified &lt;xref:System.Type&gt; of the source object using the given context.","pos":[0,137],"source":"Gets a value indicating whether this converter can convert the specified <xref:System.Type> of the source object using the given context."}]},{"pos":[7026,7126],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[7191,7235],"content":"The <xref:System.Type> of the source object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the source object.","pos":[0,44],"source":"The <xref:System.Type> of the source object."}]},{"pos":[7294,7475],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8155,8272],"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","pos":[0,117]}]},{"pos":[8284,8508],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[8754,8854],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[8924,8993],"content":"A <xref:System.Type> that represents the type you wish to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you wish to convert to."}]},{"pos":[9052,9233],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10018,10084],"content":"Converts the specified object to the native type of the converter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to the native type of the converter.","pos":[0,66]}]},{"pos":[10365,10465],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[10548,10644],"content":"A <xref:System.Globalization.CultureInfo> that specifies the culture used to represent the font.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; that specifies the culture used to represent the font.","pos":[0,96],"source":"A <xref:System.Globalization.CultureInfo> that specifies the culture used to represent the font."}]},{"pos":[10706,10742],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[10800,10860],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[11673,11739],"content":"Converts the given value object to the specified destination type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to the specified destination type.","pos":[0,66]}]},{"pos":[11752,12053],"content":"This method most commonly converts types to and from string objects.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method most commonly converts types to and from string objects.","pos":[0,68]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[75,204],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[205,241],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[242,299],"source":" Also, properties on the context object can return `null`."}]},{"pos":[12355,12455],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[12538,12639],"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","pos":[0,101],"nodes":[{"content":"An optional &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,52],"source":"An optional <xref:System.Globalization.CultureInfo>."},{"content":"If not supplied, the current culture is assumed.","pos":[53,101]}]}]},{"pos":[12701,12737],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[12807,12854],"content":"The <xref:System.Type> to convert the value to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the value to.","pos":[0,47],"source":"The <xref:System.Type> to convert the value to."}]},{"pos":[12912,12985],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[13165,13258],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13361,13396],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[13977,14063],"content":"Gets a collection of standard values for the data type this validator is designed for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of standard values for the data type this validator is designed for.","pos":[0,86]}]},{"pos":[14075,14299],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[14584,14684],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[14789,15025],"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that holds a standard set of valid values, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data type does not support a standard set of values.","needQuote":true,"needEscape":true,"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the data type does not support a standard set of values."},{"pos":[15739,15911],"content":"Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> method is an exclusive list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the list of standard values returned from the &lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues*&gt; method is an exclusive list.","pos":[0,172],"source":"Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> method is an exclusive list."}]},{"pos":[15924,16335],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.       When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."},{"content":"When the list is exclusive, no other values are valid besides the list of standard values the &lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A&gt; method provides.","pos":[231,409],"source":"       When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides."}]},{"pos":[16574,16674],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[16733,17085],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> is an exhaustive list of possible values. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because the &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned from &lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues*&gt; is an exhaustive list of possible values.","pos":[0,262],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> is an exhaustive list of possible values."},{"content":"This method never returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[263,352],"source":" This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[17808,17945],"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.","pos":[0,137]}]},{"pos":[17957,18181],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[18419,18519],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[18578,18871],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> should be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because &lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues*&gt; should be called to find a common set of values the object supports.","pos":[0,203],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> should be called to find a common set of values the object supports."},{"content":"This method never returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[204,293],"source":" This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeListConverter\n  id: TypeListConverter\n  children:\n  - System.ComponentModel.TypeListConverter.#ctor(System.Type[])\n  - System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: TypeListConverter\n  nameWithType: TypeListConverter\n  fullName: System.ComponentModel.TypeListConverter\n  type: Class\n  summary: Provides a type converter that can be used to populate a list box with available types.\n  remarks: \"You must provide the list of types to the constructor of this `abstract` class.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of a TypeListConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  syntax:\n    content: 'public abstract class TypeListConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])\n  id: '#ctor(System.Type[])'\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: TypeListConverter(Type[])\n  nameWithType: TypeListConverter.TypeListConverter(Type[])\n  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeListConverter\"></xref> class using the type array as the available types.\n  remarks: The types provided in the `types` parameter can be used to populate a list box with the available types.\n  syntax:\n    content: protected TypeListConverter (Type[] types);\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: The array of type <xref:System.Type> to use as the available types.\n  overload: System.ComponentModel.TypeListConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert the specified <xref:System.Type> of the source object using the given context.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: The <xref:System.Type> of the source object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeListConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object to the given destination type using the context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeListConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the specified object to the native type of the converter.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> that specifies the culture used to represent the font.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.ComponentModel.TypeListConverter.ConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to the specified destination type.\n  remarks: \"This method most commonly converts types to and from string objects.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the value to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.TypeListConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a collection of standard values for the data type this validator is designed for.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the data type does not support a standard set of values.\n  overload: System.ComponentModel.TypeListConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> method is an exclusive list.\n  remarks: \"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.  \\n  \\n When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides.\"\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> is an exhaustive list of possible values. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.TypeListConverter.GetStandardValues*> should be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: TypeListConverter(Type[])\n  nameWithType: TypeListConverter.TypeListConverter(Type[])\n  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeListConverter.#ctor*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: TypeListConverter\n  nameWithType: TypeListConverter.TypeListConverter\n- uid: System.ComponentModel.TypeListConverter.CanConvertFrom*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: TypeListConverter.CanConvertFrom\n- uid: System.ComponentModel.TypeListConverter.CanConvertTo*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: TypeListConverter.CanConvertTo\n- uid: System.ComponentModel.TypeListConverter.ConvertFrom*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: TypeListConverter.ConvertFrom\n- uid: System.ComponentModel.TypeListConverter.ConvertTo*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: TypeListConverter.ConvertTo\n- uid: System.ComponentModel.TypeListConverter.GetStandardValues*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: TypeListConverter.GetStandardValues\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: TypeListConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*\n  parent: System.ComponentModel.TypeListConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: TypeListConverter.GetStandardValuesSupported\n"}