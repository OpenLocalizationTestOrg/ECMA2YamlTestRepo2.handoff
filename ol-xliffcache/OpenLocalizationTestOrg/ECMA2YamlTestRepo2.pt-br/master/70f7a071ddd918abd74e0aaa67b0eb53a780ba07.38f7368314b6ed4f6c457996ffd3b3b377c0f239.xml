{"nodes":[{"pos":[876,1070],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","pos":[0,162],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[163,194]}]},{"pos":[1083,1898],"content":"The RC2CryptoServiceProvider implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.       The RC2CryptoServiceProvider object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.       Note that the RC2CryptoServiceProvider object does not use salt.      > [!NOTE] >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the RC2CryptoServiceProvider class. Use RC2CryptoServiceProvider only for compatibility with legacy applications and data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RC2CryptoServiceProvider implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[0,114]},{"content":"The RC2CryptoServiceProvider object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.","pos":[121,228]},{"content":"This class pads the final block of data if it is less than 8 bytes.","pos":[230,297]},{"content":"As a result of this padding, the length of encrypted data could be greater than the original plaintext.","pos":[299,402]},{"content":"Note that the RC2CryptoServiceProvider object does not use salt.","pos":[409,473]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[479,581],"source":"      > [!NOTE] >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available."},{"content":"Consider using the &lt;xref:System.Security.Cryptography.Aes&gt; algorithm and its derived classes instead of the RC2CryptoServiceProvider class.","pos":[582,721],"source":" Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the RC2CryptoServiceProvider class."},{"content":"Use RC2CryptoServiceProvider only for compatibility with legacy applications and data.","pos":[722,808]}]},{"pos":[4777,4892],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"></xref> class."},{"pos":[5586,5646],"content":"The cryptographic service provider (CSP) cannot be acquired.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic service provider (CSP) cannot be acquired.","pos":[0,60]}]},{"pos":[5757,5798],"content":"A non-compliant FIPS algorithm was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"A non-compliant FIPS algorithm was found.","pos":[0,41]}]},{"pos":[6366,6628],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;)and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>)and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[6640,6824],"content":"This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to decrypt an encrypted message created using the &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A&gt; overload with the same parameters.","pos":[0,184],"source":"This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]},{"pos":[7395,7445],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[7507,7568],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[7658,7741],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object."},{"pos":[7988,8336],"content":"An <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode was used.       -or-       A <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode with a feedback size other than 8 bits was used.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cipher mode was used.","pos":[0,85],"source":"An <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode was used."},{"content":"-or-       A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cipher mode with a feedback size other than 8 bits was used.","pos":[92,226],"source":"       -or-       A <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode with a feedback size other than 8 bits was used."},{"content":"-or-       An invalid key size was used.","pos":[233,273]},{"content":"-or-       The algorithm key size was not available.","pos":[280,332]}]},{"pos":[8905,9168],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;) and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[9180,9339],"content":"Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A&gt; overload with the same parameters to decrypt the result of this method.","pos":[0,159],"source":"Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]},{"pos":[9910,9960],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[10022,10083],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[10173,10256],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object."},{"pos":[10503,10851],"content":"An <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode was used.       -or-       A <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode with a feedback size other than 8 bits was used.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cipher mode was used.","pos":[0,85],"source":"An <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode was used."},{"content":"-or-       A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cipher mode with a feedback size other than 8 bits was used.","pos":[92,226],"source":"       -or-       A <xref href=\"System.Security.Cryptography.CipherMode\"></xref> cipher mode with a feedback size other than 8 bits was used."},{"content":"-or-       An invalid key size was used.","pos":[233,273]},{"content":"-or-       The algorithm key size was not available.","pos":[280,332]}]},{"pos":[11324,11460],"content":"Gets or sets the effective size, in bits, of the secret key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"Gets or sets the effective size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[11591,11700],"content":"The effective key size, in bits, used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"The effective key size, in bits, used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[11985,12140],"content":"The EffectiveKeySize property was set to a value other than the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","needQuote":true,"needEscape":true,"source":"The EffectiveKeySize property was set to a value other than the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"></xref> property."},{"pos":[12586,12713],"content":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) to use for the algorithm.","pos":[0,127],"source":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm."}]},{"pos":[12725,12846],"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to generate a random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt; when none is specified.","pos":[0,121],"source":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified."}]},{"pos":[13836,13950],"content":"Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt;) to be used for the algorithm.","pos":[0,114],"source":"Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm."}]},{"pos":[13963,14186],"content":"Use this method to generate a random key when none is specified.       The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to generate a random key when none is specified.       The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[0,221],"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]},{"content":"The &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt; implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[71,221],"source":"       The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits."}]}]},{"pos":[15153,15252],"content":"Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.","pos":[0,99]}]},{"pos":[15264,15505],"content":"The UseSalt property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UseSalt property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.","pos":[0,241],"nodes":[{"content":"The UseSalt property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.","pos":[0,120]},{"content":"For most scenarios, you should not use a salt with an &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt; key.","pos":[122,241],"source":"  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key."}]}]},{"pos":[16091,16373],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,203],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[204,282],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider\n  id: RC2CryptoServiceProvider\n  children:\n  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider\n  nameWithType: RC2CryptoServiceProvider\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider\n  type: Class\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"The RC2CryptoServiceProvider implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.  \\n  \\n The RC2CryptoServiceProvider object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.  \\n  \\n Note that the RC2CryptoServiceProvider object does not use salt.  \\n  \\n> [!NOTE]\\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the RC2CryptoServiceProvider class. Use RC2CryptoServiceProvider only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_11_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_11_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.RC2\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.RC2.Create\n  - System.Security.Cryptography.RC2.Create(System.String)\n  - System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  - System.Security.Cryptography.RC2.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_73_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_73_1.vb)]\"\n  syntax:\n    content: public RC2CryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The cryptographic service provider (CSP) cannot be acquired.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A non-compliant FIPS algorithm was found.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>)and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/6db44da5-ba5f-4459-90f5-_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/6db44da5-ba5f-4459-90f5-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> cipher mode was used.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> cipher mode with a feedback size other than 8 bits was used.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/78d990fe-60aa-40f6-ad5c-_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/78d990fe-60aa-40f6-ad5c-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> cipher mode was used.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> cipher mode with a feedback size other than 8 bits was used.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  id: EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the effective size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  syntax:\n    content: public override int EffectiveKeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The effective key size, in bits, used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The EffectiveKeySize property was set to a value other than the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"></xref> property.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.\n  remarks: Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_28_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_28_1.vb)]\"\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified.  \\n  \\n The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.\"\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_5_1.cs)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_5_1.vb)]\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  id: UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.\n  remarks: The UseSalt property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.\n  example:\n  - \"The following code example sets the UseSalt property to `true`, and then encrypts and decrypts a value.  \\n  \\n [!code-cs[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/csharp/p-system.security.crypto_12_1.cs)]\\n [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/visualbasic/p-system.security.crypto_12_1.vb)]\\n [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/cpp/p-system.security.crypto_12_1.cpp)]\"\n  syntax:\n    content: public bool UseSalt { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.RC2\n  isExternal: false\n  name: System.Security.Cryptography.RC2\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: RC2CryptoServiceProvider\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: RC2CryptoServiceProvider.GenerateIV\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: RC2CryptoServiceProvider.GenerateKey\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n"}