{"nodes":[{"pos":[1285,1297],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1334,1346],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2160,2172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3405,3417],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4334,4346],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5240,5252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6156,6168],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7026,7038],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.Dictionary`2.Enumerator\n  id: Dictionary`2.Enumerator\n  children:\n  - System.Collections.Generic.Dictionary`2.Enumerator.Current\n  - System.Collections.Generic.Dictionary`2.Enumerator.Dispose\n  - System.Collections.Generic.Dictionary`2.Enumerator.MoveNext\n  - System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry\n  - System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key\n  - System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value\n  - System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current\n  - System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  name: Dictionary<TKey,TValue>+Enumerator\n  nameWithType: Dictionary<TKey,TValue>+Enumerator\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator\n  type: Struct\n  syntax:\n    content: 'public struct Dictionary<TKey,TValue>.Enumerator : System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.IDictionaryEnumerator'\n    typeParameters:\n    - id: TKey\n      description: To be added.\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.IDictionaryEnumerator\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Current\n  id: Current\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.KeyValuePair<TKey,TValue> Current { get; }\n    return:\n      type: System.Collections.Generic.KeyValuePair{TKey,TValue}\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Dispose\n  id: Dispose\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Dispose()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.MoveNext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry\n  id: System#Collections#IDictionaryEnumerator#Entry\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IDictionaryEnumerator.Entry\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Entry\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Entry\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry { get; }\n    return:\n      type: System.Collections.DictionaryEntry\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key\n  id: System#Collections#IDictionaryEnumerator#Key\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IDictionaryEnumerator.Key\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Key\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IDictionaryEnumerator.Key { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value\n  id: System#Collections#IDictionaryEnumerator#Value\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IDictionaryEnumerator.Value\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Value\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IDictionaryEnumerator.Value { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void IEnumerator.Reset ();\n    parameters: []\n  overload: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Current\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.Current\n- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<TKey,TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Dispose\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Dispose()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.Dispose()\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.MoveNext\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Entry\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Entry\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Entry\n- uid: System.Collections.DictionaryEntry\n  parent: System.Collections\n  isExternal: true\n  name: DictionaryEntry\n  nameWithType: DictionaryEntry\n  fullName: System.Collections.DictionaryEntry\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Key\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Key\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Key\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Value\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Value\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Value\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Reset()\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Current*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Current\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.Dispose*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: Dispose\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.Dispose\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.MoveNext*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.MoveNext\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Entry\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Entry\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Key\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Key\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IDictionaryEnumerator.Value\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IDictionaryEnumerator.Value\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset*\n  parent: System.Collections.Generic.Dictionary`2.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Reset\n  nameWithType: Dictionary<TKey,TValue>+Enumerator.System.Collections.IEnumerator.Reset\n"}