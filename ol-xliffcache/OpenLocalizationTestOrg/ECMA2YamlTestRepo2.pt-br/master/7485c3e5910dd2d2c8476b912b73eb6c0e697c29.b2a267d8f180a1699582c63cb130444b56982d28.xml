{"nodes":[{"pos":[619,718],"content":"Provides a thread-safe collection that contains URIs that are keyed by their transport scheme name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a thread-safe collection that contains URIs that are keyed by their transport scheme name.","pos":[0,99]}]},{"pos":[730,816],"content":"This collection is used by hosts to store base addresses for a service by scheme name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This collection is used by hosts to store base addresses for a service by scheme name.","pos":[0,86]}]},{"pos":[4696,4802],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> class."},{"pos":[4957,5058],"content":"A variable length <xref:System.Array> of <xref:System.Uri> objects used to initialize the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A variable length &lt;xref:System.Array&gt; of &lt;xref:System.Uri&gt; objects used to initialize the collection.","pos":[0,101],"source":"A variable length <xref:System.Array> of <xref:System.Uri> objects used to initialize the collection."}]},{"pos":[5239,5326],"content":"<ph id=\"ph1\">&lt;code&gt;addresses&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>addresses</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5795,5848],"content":"Gets the key for a specified URI from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the key for a specified URI from the collection.","pos":[0,53]}]},{"pos":[5997,6048],"content":"The <xref:System.Uri> whose key is being retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; whose key is being retrieved.","pos":[0,51],"source":"The <xref:System.Uri> whose key is being retrieved."}]},{"pos":[6106,6156],"content":"The key for the specified URI from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for the specified URI from the collection.","pos":[0,50]}]},{"pos":[6743,6801],"content":"Inserts a URI into the collection at a specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a URI into the collection at a specified location.","pos":[0,58]}]},{"pos":[6959,7049],"content":"The zero-based index that specifies the insertion location for the item in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index that specifies the insertion location for the item in the collection.","pos":[0,90]}]},{"pos":[7107,7164],"content":"The <xref:System.Uri> to be inserted into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; to be inserted into the collection.","pos":[0,57],"source":"The <xref:System.Uri> to be inserted into the collection."}]},{"pos":[7358,7407],"content":"The<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\"> item</ph><ept id=\"p1\">&lt;/code&gt;</ept> URI is not an absolute URI.","needQuote":true,"needEscape":true,"source":"The<code> item</code> URI is not an absolute URI."},{"pos":[7502,7581],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> URI already contains a scheme name already in the collection.","needQuote":true,"needEscape":true,"source":"<code>item</code> URI already contains a scheme name already in the collection."},{"pos":[8064,8136],"content":"Replaces a URI at a specified location of the collection with a new URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces a URI at a specified location of the collection with a new URI.","pos":[0,72]}]},{"pos":[8291,8380],"content":"The zero-based index that specifies the insertion location for the URI in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index that specifies the insertion location for the URI in the collection.","pos":[0,89]}]},{"pos":[8438,8493],"content":"The <xref:System.Uri> to be placed into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; to be placed into the collection.","pos":[0,55],"source":"The <xref:System.Uri> to be placed into the collection."}]},{"pos":[8684,8733],"content":"The<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\"> item</ph><ept id=\"p1\">&lt;/code&gt;</ept> URI is not an absolute URI.","needQuote":true,"needEscape":true,"source":"The<code> item</code> URI is not an absolute URI."},{"pos":[8828,8907],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> URI already contains a scheme name already in the collection.","needQuote":true,"needEscape":true,"source":"<code>item</code> URI already contains a scheme name already in the collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.UriSchemeKeyedCollection\n  id: UriSchemeKeyedCollection\n  children:\n  - System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])\n  - System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)\n  - System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)\n  - System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)\n  langs:\n  - csharp\n  name: UriSchemeKeyedCollection\n  nameWithType: UriSchemeKeyedCollection\n  fullName: System.ServiceModel.UriSchemeKeyedCollection\n  type: Class\n  summary: Provides a thread-safe collection that contains URIs that are keyed by their transport scheme name.\n  remarks: This collection is used by hosts to store base addresses for a service by scheme name.\n  syntax:\n    content: 'public class UriSchemeKeyedCollection : System.Collections.Generic.SynchronizedKeyedCollection<string,Uri>'\n  inheritance:\n  - System.Object\n  - System.Collections.Generic.SynchronizedCollection`1\n  - System.Collections.Generic.SynchronizedKeyedCollection`2\n  implements: []\n  inheritedMembers:\n  - System.Collections.Generic.SynchronizedCollection`1.Add(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Clear\n  - System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.Count\n  - System.Collections.Generic.SynchronizedCollection`1.GetEnumerator\n  - System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.Items\n  - System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)\n  - System.Collections.Generic.SynchronizedCollection`1.SyncRoot\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)\n  - System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)\n  platform:\n  - net462\n- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])\n  id: '#ctor(System.Uri[])'\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  langs:\n  - csharp\n  name: UriSchemeKeyedCollection(Uri[])\n  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> class.\n  syntax:\n    content: public UriSchemeKeyedCollection (Uri[] addresses);\n    parameters:\n    - id: addresses\n      type: System.Uri[]\n      description: A variable length <xref:System.Array> of <xref:System.Uri> objects used to initialize the collection.\n  overload: System.ServiceModel.UriSchemeKeyedCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>addresses</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)\n  id: GetKeyForItem(System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  langs:\n  - csharp\n  name: GetKeyForItem(Uri)\n  nameWithType: UriSchemeKeyedCollection.GetKeyForItem(Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the key for a specified URI from the collection.\n  syntax:\n    content: protected override string GetKeyForItem (Uri item);\n    parameters:\n    - id: item\n      type: System.Uri\n      description: The <xref:System.Uri> whose key is being retrieved.\n    return:\n      type: System.String\n      description: The key for the specified URI from the collection.\n  overload: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)\n  id: InsertItem(System.Int32,System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,Uri)\n  nameWithType: UriSchemeKeyedCollection.InsertItem(Int32,Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(Int32,Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Inserts a URI into the collection at a specified location.\n  syntax:\n    content: protected override void InsertItem (int index, Uri item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index that specifies the insertion location for the item in the collection.\n    - id: item\n      type: System.Uri\n      description: The <xref:System.Uri> to be inserted into the collection.\n  overload: System.ServiceModel.UriSchemeKeyedCollection.InsertItem*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The<code> item</code> URI is not an absolute URI.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>item</code> URI already contains a scheme name already in the collection.\n  platform:\n  - net462\n- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)\n  id: SetItem(System.Int32,System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,Uri)\n  nameWithType: UriSchemeKeyedCollection.SetItem(Int32,Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.SetItem(Int32,Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Replaces a URI at a specified location of the collection with a new URI.\n  syntax:\n    content: protected override void SetItem (int index, Uri item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index that specifies the insertion location for the URI in the collection.\n    - id: item\n      type: System.Uri\n      description: The <xref:System.Uri> to be placed into the collection.\n  overload: System.ServiceModel.UriSchemeKeyedCollection.SetItem*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The<code> item</code> URI is not an absolute URI.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>item</code> URI already contains a scheme name already in the collection.\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.Generic.SynchronizedKeyedCollection`2\n  isExternal: false\n  name: System.Collections.Generic.SynchronizedKeyedCollection<System.String,System.Uri>\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: UriSchemeKeyedCollection(Uri[])\n  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.UriSchemeKeyedCollection(Uri[])\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: GetKeyForItem(Uri)\n  nameWithType: UriSchemeKeyedCollection.GetKeyForItem(Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(Uri)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: InsertItem(Int32,Uri)\n  nameWithType: UriSchemeKeyedCollection.InsertItem(Int32,Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.InsertItem(Int32,Uri)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: SetItem(Int32,Uri)\n  nameWithType: UriSchemeKeyedCollection.SetItem(Int32,Uri)\n  fullName: System.ServiceModel.UriSchemeKeyedCollection.SetItem(Int32,Uri)\n- uid: System.ServiceModel.UriSchemeKeyedCollection.#ctor*\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: UriSchemeKeyedCollection\n  nameWithType: UriSchemeKeyedCollection.UriSchemeKeyedCollection\n- uid: System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem*\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: GetKeyForItem\n  nameWithType: UriSchemeKeyedCollection.GetKeyForItem\n- uid: System.ServiceModel.UriSchemeKeyedCollection.InsertItem*\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: UriSchemeKeyedCollection.InsertItem\n- uid: System.ServiceModel.UriSchemeKeyedCollection.SetItem*\n  parent: System.ServiceModel.UriSchemeKeyedCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: UriSchemeKeyedCollection.SetItem\n"}