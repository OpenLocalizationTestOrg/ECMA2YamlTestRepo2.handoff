{"nodes":[{"pos":[1049,1109],"content":"Controls access to printers. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls access to printers. This class cannot be inherited.","pos":[0,60],"nodes":[{"content":"Controls access to printers.","pos":[0,28]},{"content":"This class cannot be inherited.","pos":[29,60]}]}]},{"pos":[2600,2748],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the level of printing access specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with the level of printing access specified."},{"pos":[2982,3069],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values."},{"pos":[3712,3882],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with either fully restricted or unrestricted access, as specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with either fully restricted or unrestricted access, as specified."},{"pos":[3894,4001],"content":"This constructor creates either the fully restricted (<ph id=\"ph1\">`None`</ph>) or the <ph id=\"ph2\">`Unrestricted`</ph> form of the permission.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission."},{"pos":[4211,4294],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[4465,4564],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[4942,5013],"content":"Creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]},{"pos":[5025,5131],"content":"A copy of the permission object represents the same access to resources as the original permission object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A copy of the permission object represents the same access to resources as the original permission object.","pos":[0,106]}]},{"pos":[5298,5338],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[5920,5995],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[6180,6239],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[6814,6936],"content":"Creates and returns a permission that is the intersection of the current permission object and a target permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission object and a target permission object.","pos":[0,122]}]},{"pos":[6948,7162],"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[0,214],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both hold in common.","pos":[0,114]},{"content":"Specifically, it represents the minimum permissions required for a demand to pass both permissions.","pos":[115,214]}]}]},{"pos":[7370,7440],"content":"A permission object of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object of the same type as the current permission object.","pos":[0,70]}]},{"pos":[7512,7722],"content":"A new permission object that represents the intersection of the current object and the specified target. This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the intersection of the current object and the specified target.","pos":[0,104]},{"content":"This object is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[105,210],"source":" This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[7897,7992],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"<code>target</code> is an object that is not of the same type as the current permission object."},{"pos":[8491,8580],"content":"Determines whether the current permission object is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission object is a subset of the specified permission.","pos":[0,89]}]},{"pos":[8766,8906],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]},{"pos":[8965,9169],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission object is a subset of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of <code>target</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9345,9440],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"<code>target</code> is an object that is not of the same type as the current permission object."},{"pos":[9868,9931],"content":"Gets a value indicating whether the permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the permission is unrestricted.","pos":[0,63]}]},{"pos":[9943,10048],"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An unrestricted permission object represents access to any and all resources protected by the permission.","pos":[0,105]}]},{"pos":[10180,10346],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10813,10862],"content":"Gets or sets the code's level of printing access.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the code's level of printing access.","pos":[0,49]}]},{"pos":[11052,11139],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values."},{"pos":[11601,11670],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[11846,11918],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[12471,12561],"content":"Creates a permission that combines the permission object and the target permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that combines the permission object and the target permission object.","pos":[0,90]}]},{"pos":[12573,12821],"content":"The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The result of a call to &lt;xref:System.Security.Permissions.UIPermission.Union%2A&gt; is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.","pos":[0,248],"source":"The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object."}]},{"pos":[13025,13095],"content":"A permission object of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object of the same type as the current permission object.","pos":[0,70]}]},{"pos":[13167,13286],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]},{"pos":[13457,13552],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is an object that is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"<code>target</code> is an object that is not of the same type as the current permission object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Printing.PrintingPermission\n  id: PrintingPermission\n  children:\n  - System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  - System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Drawing.Printing.PrintingPermission.Copy\n  - System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  - System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  - System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  - System.Drawing.Printing.PrintingPermission.Level\n  - System.Drawing.Printing.PrintingPermission.ToXml\n  - System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: PrintingPermission\n  nameWithType: PrintingPermission\n  fullName: System.Drawing.Printing.PrintingPermission\n  type: Class\n  summary: Controls access to printers. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class PrintingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  id: '#ctor(System.Drawing.Printing.PrintingPermissionLevel)'\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: PrintingPermission(PrintingPermissionLevel)\n  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with the level of printing access specified.\n  syntax:\n    content: public PrintingPermission (System.Drawing.Printing.PrintingPermissionLevel printingLevel);\n    parameters:\n    - id: printingLevel\n      type: System.Drawing.Printing.PrintingPermissionLevel\n      description: One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: PrintingPermission(PermissionState)\n  nameWithType: PrintingPermission.PrintingPermission(PermissionState)\n  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Printing.PrintingPermission\"></xref> class with either fully restricted or unrestricted access, as specified.\n  remarks: This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission.\n  syntax:\n    content: public PrintingPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.Copy\n  id: Copy\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PrintingPermission.Copy()\n  fullName: System.Drawing.Printing.PrintingPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Creates and returns an identical copy of the current permission object.\n  remarks: A copy of the permission object represents the same access to resources as the original permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Drawing.Printing.PrintingPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PrintingPermission.FromXml(SecurityElement)\n  fullName: System.Drawing.Printing.PrintingPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Drawing.Printing.PrintingPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: PrintingPermission.Intersect(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Creates and returns a permission that is the intersection of the current permission object and a target permission object.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current object and the specified target. This object is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Drawing.Printing.PrintingPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: PrintingPermission.IsSubsetOf(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Determines whether the current permission object is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of <code>target</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Printing.PrintingPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: PrintingPermission.IsUnrestricted()\n  fullName: System.Drawing.Printing.PrintingPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Gets a value indicating whether the permission is unrestricted.\n  remarks: An unrestricted permission object represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Printing.PrintingPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.Level\n  id: Level\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: PrintingPermission.Level\n  fullName: System.Drawing.Printing.PrintingPermission.Level\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Gets or sets the code's level of printing access.\n  syntax:\n    content: public System.Drawing.Printing.PrintingPermissionLevel Level { get; set; }\n    return:\n      type: System.Drawing.Printing.PrintingPermissionLevel\n      description: One of the <xref href=\"System.Drawing.Printing.PrintingPermissionLevel\"></xref> values.\n  overload: System.Drawing.Printing.PrintingPermission.Level*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.ToXml\n  id: ToXml\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PrintingPermission.ToXml()\n  fullName: System.Drawing.Printing.PrintingPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Drawing.Printing.PrintingPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: PrintingPermission.Union(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Printing\n  summary: Creates a permission that combines the permission object and the target permission object.\n  remarks: The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission object, and all the operations represented by the specified permission object.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Drawing.Printing.PrintingPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is an object that is not of the same type as the current permission object.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission(PrintingPermissionLevel)\n  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PrintingPermissionLevel)\n- uid: System.Drawing.Printing.PrintingPermissionLevel\n  parent: System.Drawing.Printing\n  isExternal: false\n  name: PrintingPermissionLevel\n  nameWithType: PrintingPermissionLevel\n  fullName: System.Drawing.Printing.PrintingPermissionLevel\n- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission(PermissionState)\n  nameWithType: PrintingPermission.PrintingPermission(PermissionState)\n  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Drawing.Printing.PrintingPermission.Copy\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: PrintingPermission.Copy()\n  fullName: System.Drawing.Printing.PrintingPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PrintingPermission.FromXml(SecurityElement)\n  fullName: System.Drawing.Printing.PrintingPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: PrintingPermission.Intersect(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.Intersect(IPermission)\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: PrintingPermission.IsSubsetOf(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: PrintingPermission.IsUnrestricted()\n  fullName: System.Drawing.Printing.PrintingPermission.IsUnrestricted()\n- uid: System.Drawing.Printing.PrintingPermission.Level\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Level\n  nameWithType: PrintingPermission.Level\n  fullName: System.Drawing.Printing.PrintingPermission.Level\n- uid: System.Drawing.Printing.PrintingPermission.ToXml\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: PrintingPermission.ToXml()\n  fullName: System.Drawing.Printing.PrintingPermission.ToXml()\n- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: PrintingPermission.Union(IPermission)\n  fullName: System.Drawing.Printing.PrintingPermission.Union(IPermission)\n- uid: System.Drawing.Printing.PrintingPermission.#ctor*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: PrintingPermission\n  nameWithType: PrintingPermission.PrintingPermission\n- uid: System.Drawing.Printing.PrintingPermission.Copy*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Copy\n  nameWithType: PrintingPermission.Copy\n- uid: System.Drawing.Printing.PrintingPermission.FromXml*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: PrintingPermission.FromXml\n- uid: System.Drawing.Printing.PrintingPermission.Intersect*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: PrintingPermission.Intersect\n- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: PrintingPermission.IsSubsetOf\n- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: PrintingPermission.IsUnrestricted\n- uid: System.Drawing.Printing.PrintingPermission.Level*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Level\n  nameWithType: PrintingPermission.Level\n- uid: System.Drawing.Printing.PrintingPermission.ToXml*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: PrintingPermission.ToXml\n- uid: System.Drawing.Printing.PrintingPermission.Union*\n  parent: System.Drawing.Printing.PrintingPermission\n  isExternal: false\n  name: Union\n  nameWithType: PrintingPermission.Union\n"}