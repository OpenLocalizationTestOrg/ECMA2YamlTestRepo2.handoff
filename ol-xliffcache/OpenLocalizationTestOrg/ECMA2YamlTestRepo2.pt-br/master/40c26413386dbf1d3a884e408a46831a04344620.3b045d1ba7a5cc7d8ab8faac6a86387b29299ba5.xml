{"nodes":[{"pos":[1730,1829],"content":"Represents a <bpt id=\"p1\">[</bpt>Task Element (MSBuild)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> in an MSBuild project.","needQuote":true,"needEscape":true,"source":"Represents a [Task Element (MSBuild)](~/add/includes/ajax-current-ext-md.md) in an MSBuild project."},{"pos":[4618,4659],"content":"Adds an Output item after the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an Output item after the last child.","pos":[0,41]}]},{"pos":[4880,4927],"content":"The name of the task which outputs to the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the task which outputs to the item.","pos":[0,47]}]},{"pos":[4992,5067],"content":"The item type of the new item whose value is set to the output of the task.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item type of the new item whose value is set to the output of the task.","pos":[0,75]}]},{"pos":[5161,5191],"content":"Returns the added Output item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the added Output item.","pos":[0,30]}]},{"pos":[5873,5938],"content":"Adds a conditioned Output item to this task after the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a conditioned Output item to this task after the last child.","pos":[0,65]}]},{"pos":[6177,6203],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[6268,6294],"content":"The item type of the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item type of the item.","pos":[0,26]}]},{"pos":[6360,6391],"content":"The condition of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The condition of the parameter.","pos":[0,31]}]},{"pos":[6485,6527],"content":"Returns the added conditioned Output item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the added conditioned Output item.","pos":[0,42]}]},{"pos":[7180,7238],"content":"Adds an Output property to this task after the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an Output property to this task after the last child.","pos":[0,58]}]},{"pos":[7467,7493],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[7562,7587],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[7681,7715],"content":"Returns the added Output property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the added Output property.","pos":[0,34]}]},{"pos":[8421,8490],"content":"Adds a conditioned Output property to this task after the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a conditioned Output property to this task after the last child.","pos":[0,69]}]},{"pos":[8737,8763],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[8832,8857],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[8923,8953],"content":"The condition of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The condition of the property.","pos":[0,30]}]},{"pos":[9047,9093],"content":"Returns the added conditioned Output property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the added conditioned Output property.","pos":[0,46]}]},{"pos":[9639,9690],"content":"Gets or sets the <ph id=\"ph1\">`ContinueOnError`</ph> attribute value.","needQuote":true,"needEscape":true,"source":"Gets or sets the `ContinueOnError` attribute value."},{"pos":[9702,9796],"content":"Removes the <ph id=\"ph1\">`ContinueOnError`</ph> attribute if the value to set is set to null or an empty string.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Removes the `ContinueOnError` attribute if the value to set is set to null or an empty string."},{"pos":[9921,10024],"content":"Returns the `ContinueOnError` attribute value. Returns an empty string if the attribute is not present.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the <ph id=\"ph1\">`ContinueOnError`</ph> attribute value.","pos":[0,46],"source":"Returns the `ContinueOnError` attribute value."},{"content":"Returns an empty string if the attribute is not present.","pos":[47,103]}]},{"pos":[10609,10732],"content":"Location of the \"ContinueOnError\" attribute on this element, if any.       If there is no such attribute, returns null;","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the \"ContinueOnError\" attribute on this element, if any.       If there is no such attribute, returns null;","pos":[0,119],"nodes":[{"content":"Location of the \"ContinueOnError\" attribute on this element, if any.","pos":[0,68]},{"content":"If there is no such attribute, returns null;","pos":[75,119]}]}]},{"pos":[10930,11004],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[11593,11649],"content":"Gets the value of the parameter with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the parameter with the specified name.","pos":[0,56]}]},{"pos":[11791,11817],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[11875,12008],"content":"Returns the value of the parameter with the specified name. If no parameter by that name exists in the task, returns an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the parameter with the specified name. If no parameter by that name exists in the task, returns an empty string.","pos":[0,133],"nodes":[{"content":"Returns the value of the parameter with the specified name.","pos":[0,59]},{"content":"If no parameter by that name exists in the task, returns an empty string.","pos":[60,133]}]}]},{"pos":[12570,12730],"content":"Gets or sets the architecture value for the task.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","needQuote":false,"needEscape":true,"nodes":[{"content":"Gets or sets the architecture value for the task.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","pos":[0,156],"nodes":[{"content":"Gets or sets the architecture value for the task.","pos":[0,49]},{"content":"Returns empty string if it is not present.","pos":[56,98]},{"content":"Removes the attribute if the value to set is empty.","pos":[105,156]}]}]},{"pos":[12860,12889],"content":"Returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.String&gt;.","pos":[0,29],"source":"Returns <xref:System.String>."}]},{"pos":[13498,13625],"content":"Location of the \"MSBuildArchitecture\" attribute on this element, if any.       If there is no such attribute, returns null;","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the \"MSBuildArchitecture\" attribute on this element, if any.       If there is no such attribute, returns null;","pos":[0,123],"nodes":[{"content":"Location of the \"MSBuildArchitecture\" attribute on this element, if any.","pos":[0,72]},{"content":"If there is no such attribute, returns null;","pos":[79,123]}]}]},{"pos":[13827,13901],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[14453,14608],"content":"Gets or sets the runtime value for the task.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","needQuote":false,"needEscape":true,"nodes":[{"content":"Gets or sets the runtime value for the task.       Returns empty string if it is not present.       Removes the attribute if the value to set is empty.","pos":[0,151],"nodes":[{"content":"Gets or sets the runtime value for the task.","pos":[0,44]},{"content":"Returns empty string if it is not present.","pos":[51,93]},{"content":"Removes the attribute if the value to set is empty.","pos":[100,151]}]}]},{"pos":[14733,14762],"content":"Returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.String&gt;.","pos":[0,29],"source":"Returns <xref:System.String>."}]},{"pos":[15341,15463],"content":"Location of the \"MSBuildRuntime\" attribute on this element, if any.       If there is no such attribute, returns null;","needQuote":false,"needEscape":true,"nodes":[{"content":"Location of the \"MSBuildRuntime\" attribute on this element, if any.       If there is no such attribute, returns null;","pos":[0,118],"nodes":[{"content":"Location of the \"MSBuildRuntime\" attribute on this element, if any.","pos":[0,67]},{"content":"If there is no such attribute, returns null;","pos":[74,118]}]}]},{"pos":[15660,15734],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Construction.ElementLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>."},{"pos":[16230,16257],"content":"Gets the name of this task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of this task.","pos":[0,27]}]},{"pos":[16366,16396],"content":"Returns the name of this task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of this task.","pos":[0,30]}]},{"pos":[16889,16973],"content":"Gets all <bpt id=\"p1\">[</bpt>Output Element (MSBuild)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> children.","needQuote":true,"needEscape":true,"source":"Gets all [Output Element (MSBuild)](~/add/includes/ajax-current-ext-md.md) children."},{"pos":[17244,17280],"content":"Returns all Output element children.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all Output element children.","pos":[0,36]}]},{"pos":[17832,18159],"content":"Enumerable over the locations of parameters on the task.       Condition and ContinueOnError, which have their own properties, are not included in this collection.       If parameters differ only by case only the last one will be returned.       Hosts can still remove the other parameters by using RemoveAllParameters().","needQuote":false,"needEscape":true,"nodes":[{"content":"Enumerable over the locations of parameters on the task.       Condition and ContinueOnError, which have their own properties, are not included in this collection.       If parameters differ only by case only the last one will be returned.       Hosts can still remove the other parameters by using RemoveAllParameters().","pos":[0,321],"nodes":[{"content":"Enumerable over the locations of parameters on the task.","pos":[0,56]},{"content":"Condition and ContinueOnError, which have their own properties, are not included in this collection.","pos":[63,163]},{"content":"If parameters differ only by case only the last one will be returned.","pos":[170,239]},{"content":"Hosts can still remove the other parameters by using RemoveAllParameters().","pos":[246,321]}]}]},{"pos":[18535,18599],"content":"Returns &lt;xref:System.Collections.Generic.IEnumerable%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,64],"source":"Returns &lt;xref:System.Collections.Generic.IEnumerable%601&gt;."}]},{"pos":[19121,19166],"content":"Gets all unevaluated parameters of this task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all unevaluated parameters of this task.","pos":[0,45]}]},{"pos":[19179,19367],"content":"`Condition` and `ContinueOnError` attributes are not included in this collection. If parameters differ only by case then only the last one will be returned. See also RemoveAllParameters().","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`Condition`</ph> and <ph id=\"ph2\">`ContinueOnError`</ph> attributes are not included in this collection.","pos":[0,81],"source":"`Condition` and `ContinueOnError` attributes are not included in this collection."},{"content":"If parameters differ only by case then only the last one will be returned.","pos":[82,156]},{"content":"See also RemoveAllParameters().","pos":[157,188]}]},{"pos":[19584,19632],"content":"Returns all unevaluated parameters of this task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all unevaluated parameters of this task.","pos":[0,48]}]},{"pos":[20195,20301],"content":"Removes all parameters from the task. Does not remove any `ContinueOnError` and/or `Condition` attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all parameters from the task.","pos":[0,37]},{"content":"Does not remove any <ph id=\"ph1\">`ContinueOnError`</ph> and/or <ph id=\"ph2\">`Condition`</ph> attributes.","pos":[38,106],"source":" Does not remove any `ContinueOnError` and/or `Condition` attributes."}]},{"pos":[20979,21101],"content":"Removes any parameter on this task with the specified name. If no parameter by that name exists in the task, does nothing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes any parameter on this task with the specified name. If no parameter by that name exists in the task, does nothing.","pos":[0,122],"nodes":[{"content":"Removes any parameter on this task with the specified name.","pos":[0,59]},{"content":"If no parameter by that name exists in the task, does nothing.","pos":[60,122]}]}]},{"pos":[21244,21280],"content":"The name of the parameter to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to remove.","pos":[0,36]}]},{"pos":[21910,21950],"content":"Updates or adds a parameter on this task","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates or adds a parameter on this task","pos":[0,40]}]},{"pos":[21962,22145],"content":"Updates the parameter to the specified value if a parameter by that name exists in the task. Otherwise, creates a parameter with the specified name and value, and adds it to the task.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Updates the parameter to the specified value if a parameter by that name exists in the task. Otherwise, creates a parameter with the specified name and value, and adds it to the task.","pos":[0,183],"nodes":[{"content":"Updates the parameter to the specified value if a parameter by that name exists in the task.","pos":[0,92]},{"content":"Otherwise, creates a parameter with the specified name and value, and adds it to the task.","pos":[93,183]}]}]},{"pos":[22310,22353],"content":"The name of the parameter to update or add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to update or add.","pos":[0,43]}]},{"pos":[22426,22453],"content":"The value of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the parameter.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Construction.ProjectTaskElement\n  id: ProjectTaskElement\n  children:\n  - Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError\n  - Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation\n  - Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture\n  - Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation\n  - Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime\n  - Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation\n  - Microsoft.Build.Construction.ProjectTaskElement.Name\n  - Microsoft.Build.Construction.ProjectTaskElement.Outputs\n  - Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations\n  - Microsoft.Build.Construction.ProjectTaskElement.Parameters\n  - Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters\n  - Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(System.String)\n  - Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)\n  langs:\n  - csharp\n  name: ProjectTaskElement\n  nameWithType: ProjectTaskElement\n  fullName: Microsoft.Build.Construction.ProjectTaskElement\n  type: Class\n  summary: Represents a [Task Element (MSBuild)](~/add/includes/ajax-current-ext-md.md) in an MSBuild project.\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{Name} Condition={Condition} ContinueOnError={ContinueOnError} MSBuildRuntime={MSBuildRuntime} MSBuildArchitecture={MSBuildArchitecture} #Outputs={Count}\")]\n\n      public class ProjectTaskElement : Microsoft.Build.Construction.ProjectElementContainer\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Construction.ProjectElement\n  - Microsoft.Build.Construction.ProjectElementContainer\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Construction.ProjectElement.AllParents\n  - Microsoft.Build.Construction.ProjectElement.Condition\n  - Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  - Microsoft.Build.Construction.ProjectElement.ContainingProject\n  - Microsoft.Build.Construction.ProjectElement.Label\n  - Microsoft.Build.Construction.ProjectElement.LabelLocation\n  - Microsoft.Build.Construction.ProjectElement.Location\n  - Microsoft.Build.Construction.ProjectElement.NextSibling\n  - Microsoft.Build.Construction.ProjectElement.Parent\n  - Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.Children\n  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  - Microsoft.Build.Construction.ProjectElementContainer.Count\n  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)\n  id: AddOutputItem(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: AddOutputItem(String,String)\n  nameWithType: ProjectTaskElement.AddOutputItem(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Adds an Output item after the last child.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectOutputElement AddOutputItem (string taskParameter, string itemType);\n    parameters:\n    - id: taskParameter\n      type: System.String\n      description: The name of the task which outputs to the item.\n    - id: itemType\n      type: System.String\n      description: The item type of the new item whose value is set to the output of the task.\n    return:\n      type: Microsoft.Build.Construction.ProjectOutputElement\n      description: Returns the added Output item.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)\n  id: AddOutputItem(System.String,System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: AddOutputItem(String,String,String)\n  nameWithType: ProjectTaskElement.AddOutputItem(String,String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Adds a conditioned Output item to this task after the last child.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectOutputElement AddOutputItem (string taskParameter, string itemType, string condition);\n    parameters:\n    - id: taskParameter\n      type: System.String\n      description: The name of the parameter.\n    - id: itemType\n      type: System.String\n      description: The item type of the item.\n    - id: condition\n      type: System.String\n      description: The condition of the parameter.\n    return:\n      type: Microsoft.Build.Construction.ProjectOutputElement\n      description: Returns the added conditioned Output item.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)\n  id: AddOutputProperty(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: AddOutputProperty(String,String)\n  nameWithType: ProjectTaskElement.AddOutputProperty(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Adds an Output property to this task after the last child.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectOutputElement AddOutputProperty (string taskParameter, string propertyName);\n    parameters:\n    - id: taskParameter\n      type: System.String\n      description: The name of the parameter.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: Microsoft.Build.Construction.ProjectOutputElement\n      description: Returns the added Output property.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)\n  id: AddOutputProperty(System.String,System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: AddOutputProperty(String,String,String)\n  nameWithType: ProjectTaskElement.AddOutputProperty(String,String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Adds a conditioned Output property to this task after the last child.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectOutputElement AddOutputProperty (string taskParameter, string propertyName, string condition);\n    parameters:\n    - id: taskParameter\n      type: System.String\n      description: The name of the parameter.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    - id: condition\n      type: System.String\n      description: The condition of the property.\n    return:\n      type: Microsoft.Build.Construction.ProjectOutputElement\n      description: Returns the added conditioned Output property.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError\n  id: ContinueOnError\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: ContinueOnError\n  nameWithType: ProjectTaskElement.ContinueOnError\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets or sets the `ContinueOnError` attribute value.\n  remarks: Removes the `ContinueOnError` attribute if the value to set is set to null or an empty string.\n  syntax:\n    content: public string ContinueOnError { get; set; }\n    return:\n      type: System.String\n      description: Returns the `ContinueOnError` attribute value. Returns an empty string if the attribute is not present.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation\n  id: ContinueOnErrorLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: ContinueOnErrorLocation\n  nameWithType: ProjectTaskElement.ContinueOnErrorLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the \\\"ContinueOnError\\\" attribute on this element, if any.  \\n  \\n If there is no such attribute, returns null;\"\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation ContinueOnErrorLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)\n  id: GetParameter(System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: GetParameter(String)\n  nameWithType: ProjectTaskElement.GetParameter(String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.GetParameter(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets the value of the parameter with the specified name.\n  syntax:\n    content: public string GetParameter (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter.\n    return:\n      type: System.String\n      description: Returns the value of the parameter with the specified name. If no parameter by that name exists in the task, returns an empty string.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.GetParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture\n  id: MSBuildArchitecture\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: MSBuildArchitecture\n  nameWithType: ProjectTaskElement.MSBuildArchitecture\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Gets or sets the architecture value for the task.  \\n  \\n Returns empty string if it is not present.  \\n  \\n Removes the attribute if the value to set is empty.\"\n  syntax:\n    content: public string MSBuildArchitecture { get; set; }\n    return:\n      type: System.String\n      description: Returns <xref:System.String>.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation\n  id: MSBuildArchitectureLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: MSBuildArchitectureLocation\n  nameWithType: ProjectTaskElement.MSBuildArchitectureLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the \\\"MSBuildArchitecture\\\" attribute on this element, if any.  \\n  \\n If there is no such attribute, returns null;\"\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation MSBuildArchitectureLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime\n  id: MSBuildRuntime\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: MSBuildRuntime\n  nameWithType: ProjectTaskElement.MSBuildRuntime\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Gets or sets the runtime value for the task.  \\n  \\n Returns empty string if it is not present.  \\n  \\n Removes the attribute if the value to set is empty.\"\n  syntax:\n    content: public string MSBuildRuntime { get; set; }\n    return:\n      type: System.String\n      description: Returns <xref:System.String>.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation\n  id: MSBuildRuntimeLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: MSBuildRuntimeLocation\n  nameWithType: ProjectTaskElement.MSBuildRuntimeLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Location of the \\\"MSBuildRuntime\\\" attribute on this element, if any.  \\n  \\n If there is no such attribute, returns null;\"\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation MSBuildRuntimeLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns <xref href=\"Microsoft.Build.Construction.ElementLocation\"></xref>.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Name\n  id: Name\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ProjectTaskElement.Name\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Name\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets the name of this task.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Returns the name of this task.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Outputs\n  id: Outputs\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: Outputs\n  nameWithType: ProjectTaskElement.Outputs\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Outputs\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets all [Output Element (MSBuild)](~/add/includes/ajax-current-ext-md.md) children.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOutputElement> Outputs { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectOutputElement}\n      description: Returns all Output element children.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.Outputs*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations\n  id: ParameterLocations\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: ParameterLocations\n  nameWithType: ProjectTaskElement.ParameterLocations\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: \"Enumerable over the locations of parameters on the task.  \\n  \\n Condition and ContinueOnError, which have their own properties, are not included in this collection.  \\n  \\n If parameters differ only by case only the last one will be returned.  \\n  \\n Hosts can still remove the other parameters by using RemoveAllParameters().\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Microsoft.Build.Construction.ElementLocation>> ParameterLocations { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Build.Construction.ElementLocation}}\n      description: Returns &lt;xref:System.Collections.Generic.IEnumerable%601&gt;.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Parameters\n  id: Parameters\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: ProjectTaskElement.Parameters\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Parameters\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets all unevaluated parameters of this task.\n  remarks: '`Condition` and `ContinueOnError` attributes are not included in this collection. If parameters differ only by case then only the last one will be returned. See also RemoveAllParameters().'\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> Parameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Returns all unevaluated parameters of this task.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters\n  id: RemoveAllParameters\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: RemoveAllParameters()\n  nameWithType: ProjectTaskElement.RemoveAllParameters()\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Removes all parameters from the task. Does not remove any `ContinueOnError` and/or `Condition` attributes.\n  syntax:\n    content: public void RemoveAllParameters ();\n    parameters: []\n  overload: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(System.String)\n  id: RemoveParameter(System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: RemoveParameter(String)\n  nameWithType: ProjectTaskElement.RemoveParameter(String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Removes any parameter on this task with the specified name. If no parameter by that name exists in the task, does nothing.\n  syntax:\n    content: public void RemoveParameter (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to remove.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)\n  id: SetParameter(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  langs:\n  - csharp\n  name: SetParameter(String,String)\n  nameWithType: ProjectTaskElement.SetParameter(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.SetParameter(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Updates or adds a parameter on this task\n  remarks: Updates the parameter to the specified value if a parameter by that name exists in the task. Otherwise, creates a parameter with the specified name and value, and adds it to the task.\n  syntax:\n    content: public void SetParameter (string name, string unevaluatedValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to update or add.\n    - id: unevaluatedValue\n      type: System.String\n      description: The value of the parameter.\n  overload: Microsoft.Build.Construction.ProjectTaskElement.SetParameter*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Microsoft.Build.Construction.ProjectElementContainer\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputItem(String,String)\n  nameWithType: ProjectTaskElement.AddOutputItem(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(String,String)\n- uid: Microsoft.Build.Construction.ProjectOutputElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectOutputElement\n  nameWithType: ProjectOutputElement\n  fullName: Microsoft.Build.Construction.ProjectOutputElement\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputItem(String,String,String)\n  nameWithType: ProjectTaskElement.AddOutputItem(String,String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(String,String,String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputProperty(String,String)\n  nameWithType: ProjectTaskElement.AddOutputProperty(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(String,String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputProperty(String,String,String)\n  nameWithType: ProjectTaskElement.AddOutputProperty(String,String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(String,String,String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ContinueOnError\n  nameWithType: ProjectTaskElement.ContinueOnError\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ContinueOnErrorLocation\n  nameWithType: ProjectTaskElement.ContinueOnErrorLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation\n- uid: Microsoft.Build.Construction.ElementLocation\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ElementLocation\n  nameWithType: ElementLocation\n  fullName: Microsoft.Build.Construction.ElementLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: GetParameter(String)\n  nameWithType: ProjectTaskElement.GetParameter(String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.GetParameter(String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildArchitecture\n  nameWithType: ProjectTaskElement.MSBuildArchitecture\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildArchitectureLocation\n  nameWithType: ProjectTaskElement.MSBuildArchitectureLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildRuntime\n  nameWithType: ProjectTaskElement.MSBuildRuntime\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildRuntimeLocation\n  nameWithType: ProjectTaskElement.MSBuildRuntimeLocation\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Name\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Name\n  nameWithType: ProjectTaskElement.Name\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Name\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Outputs\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Outputs\n  nameWithType: ProjectTaskElement.Outputs\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Outputs\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectOutputElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ProjectOutputElement>\n  nameWithType: ICollection<ProjectOutputElement>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectOutputElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<Microsoft.Build.Construction.ProjectOutputElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Construction.ProjectOutputElement\n    name: ProjectOutputElement\n    nameWithType: ProjectOutputElement\n    fullName: ProjectOutputElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ParameterLocations\n  nameWithType: ProjectTaskElement.ParameterLocations\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Build.Construction.ElementLocation}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<KeyValuePair<String,ElementLocation>>\n  nameWithType: IEnumerable<KeyValuePair<String,ElementLocation>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Build.Construction.ElementLocation>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Build.Construction.ElementLocation>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,Microsoft.Build.Construction.ElementLocation>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: Microsoft.Build.Construction.ElementLocation\n    name: ElementLocation\n    nameWithType: ElementLocation\n    fullName: ElementLocation\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Parameters\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Parameters\n  nameWithType: ProjectTaskElement.Parameters\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.Parameters\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: RemoveAllParameters()\n  nameWithType: ProjectTaskElement.RemoveAllParameters()\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters()\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: RemoveParameter(String)\n  nameWithType: ProjectTaskElement.RemoveParameter(String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: SetParameter(String,String)\n  nameWithType: ProjectTaskElement.SetParameter(String,String)\n  fullName: Microsoft.Build.Construction.ProjectTaskElement.SetParameter(String,String)\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputItem\n  nameWithType: ProjectTaskElement.AddOutputItem\n- uid: Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: AddOutputProperty\n  nameWithType: ProjectTaskElement.AddOutputProperty\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ContinueOnError\n  nameWithType: ProjectTaskElement.ContinueOnError\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ContinueOnErrorLocation\n  nameWithType: ProjectTaskElement.ContinueOnErrorLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.GetParameter*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: GetParameter\n  nameWithType: ProjectTaskElement.GetParameter\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildArchitecture\n  nameWithType: ProjectTaskElement.MSBuildArchitecture\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildArchitectureLocation\n  nameWithType: ProjectTaskElement.MSBuildArchitectureLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildRuntime\n  nameWithType: ProjectTaskElement.MSBuildRuntime\n- uid: Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: MSBuildRuntimeLocation\n  nameWithType: ProjectTaskElement.MSBuildRuntimeLocation\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Name*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Name\n  nameWithType: ProjectTaskElement.Name\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Outputs*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Outputs\n  nameWithType: ProjectTaskElement.Outputs\n- uid: Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: ParameterLocations\n  nameWithType: ProjectTaskElement.ParameterLocations\n- uid: Microsoft.Build.Construction.ProjectTaskElement.Parameters*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: Parameters\n  nameWithType: ProjectTaskElement.Parameters\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: RemoveAllParameters\n  nameWithType: ProjectTaskElement.RemoveAllParameters\n- uid: Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: RemoveParameter\n  nameWithType: ProjectTaskElement.RemoveParameter\n- uid: Microsoft.Build.Construction.ProjectTaskElement.SetParameter*\n  parent: Microsoft.Build.Construction.ProjectTaskElement\n  isExternal: false\n  name: SetParameter\n  nameWithType: ProjectTaskElement.SetParameter\n"}