{"nodes":[{"pos":[383,429],"content":"Acts as the property entry for event handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Acts as the property entry for event handlers.","pos":[0,46]}]},{"pos":[441,734],"content":"The page parser uses property entry classes during parsing to represent expressions found within server control tags. The EventEntry class is used for expressions that are bound to properties that specify an event handler. These bound properties start with \"on\", such as `OnClick` or `OnInit`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The page parser uses property entry classes during parsing to represent expressions found within server control tags.","pos":[0,117]},{"content":"The EventEntry class is used for expressions that are bound to properties that specify an event handler.","pos":[118,222]},{"content":"These bound properties start with \"on\", such as <ph id=\"ph1\">`OnClick`</ph> or <ph id=\"ph2\">`OnInit`</ph>.","pos":[223,293],"source":" These bound properties start with \"on\", such as `OnClick` or `OnInit`."}]},{"pos":[1183,1269],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.EventEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.EventEntry\"></xref> class."},{"pos":[1757,1816],"content":"Gets or sets the name of the method that handles the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the method that handles the event.","pos":[0,59]}]},{"pos":[1828,1922],"content":"In the property setting, the HandlerMethodName property is set to the value of the expression.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In the property setting, the HandlerMethodName property is set to the value of the expression.","pos":[0,94]}]},{"pos":[2049,2113],"content":"A <xref:System.String> containing the event handler method name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the event handler method name.","pos":[0,64],"source":"A <xref:System.String> containing the event handler method name."}]},{"pos":[2519,2567],"content":"Gets or sets the type of delegate for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of delegate for the event.","pos":[0,48]}]},{"pos":[2684,2756],"content":"A <xref:System.Type> that represents the type of delegate for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of delegate for the event.","pos":[0,72],"source":"A <xref:System.Type> that represents the type of delegate for the event."}]},{"pos":[3121,3179],"content":"Gets or sets the name of the property from the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the property from the expression.","pos":[0,58]}]},{"pos":[3293,3355],"content":"A <xref:System.String> that contains the name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the property.","pos":[0,62],"source":"A <xref:System.String> that contains the name of the property."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.EventEntry\n  id: EventEntry\n  children:\n  - System.Web.UI.EventEntry.#ctor\n  - System.Web.UI.EventEntry.HandlerMethodName\n  - System.Web.UI.EventEntry.HandlerType\n  - System.Web.UI.EventEntry.Name\n  langs:\n  - csharp\n  name: EventEntry\n  nameWithType: EventEntry\n  fullName: System.Web.UI.EventEntry\n  type: Class\n  summary: Acts as the property entry for event handlers.\n  remarks: The page parser uses property entry classes during parsing to represent expressions found within server control tags. The EventEntry class is used for expressions that are bound to properties that specify an event handler. These bound properties start with \"on\", such as `OnClick` or `OnInit`.\n  syntax:\n    content: public class EventEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.EventEntry.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.EventEntry\n  langs:\n  - csharp\n  name: EventEntry()\n  nameWithType: EventEntry.EventEntry()\n  fullName: System.Web.UI.EventEntry.EventEntry()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.EventEntry\"></xref> class.\n  syntax:\n    content: public EventEntry ();\n    parameters: []\n  overload: System.Web.UI.EventEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.EventEntry.HandlerMethodName\n  id: HandlerMethodName\n  parent: System.Web.UI.EventEntry\n  langs:\n  - csharp\n  name: HandlerMethodName\n  nameWithType: EventEntry.HandlerMethodName\n  fullName: System.Web.UI.EventEntry.HandlerMethodName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the method that handles the event.\n  remarks: In the property setting, the HandlerMethodName property is set to the value of the expression.\n  syntax:\n    content: public string HandlerMethodName { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the event handler method name.\n  overload: System.Web.UI.EventEntry.HandlerMethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.EventEntry.HandlerType\n  id: HandlerType\n  parent: System.Web.UI.EventEntry\n  langs:\n  - csharp\n  name: HandlerType\n  nameWithType: EventEntry.HandlerType\n  fullName: System.Web.UI.EventEntry.HandlerType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the type of delegate for the event.\n  syntax:\n    content: public Type HandlerType { get; set; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of delegate for the event.\n  overload: System.Web.UI.EventEntry.HandlerType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.EventEntry.Name\n  id: Name\n  parent: System.Web.UI.EventEntry\n  langs:\n  - csharp\n  name: Name\n  nameWithType: EventEntry.Name\n  fullName: System.Web.UI.EventEntry.Name\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the property from the expression.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the name of the property.\n  overload: System.Web.UI.EventEntry.Name*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.EventEntry.#ctor\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: EventEntry()\n  nameWithType: EventEntry.EventEntry()\n  fullName: System.Web.UI.EventEntry.EventEntry()\n- uid: System.Web.UI.EventEntry.HandlerMethodName\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: HandlerMethodName\n  nameWithType: EventEntry.HandlerMethodName\n  fullName: System.Web.UI.EventEntry.HandlerMethodName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.EventEntry.HandlerType\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: HandlerType\n  nameWithType: EventEntry.HandlerType\n  fullName: System.Web.UI.EventEntry.HandlerType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.EventEntry.Name\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: Name\n  nameWithType: EventEntry.Name\n  fullName: System.Web.UI.EventEntry.Name\n- uid: System.Web.UI.EventEntry.#ctor*\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: EventEntry\n  nameWithType: EventEntry.EventEntry\n- uid: System.Web.UI.EventEntry.HandlerMethodName*\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: HandlerMethodName\n  nameWithType: EventEntry.HandlerMethodName\n- uid: System.Web.UI.EventEntry.HandlerType*\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: HandlerType\n  nameWithType: EventEntry.HandlerType\n- uid: System.Web.UI.EventEntry.Name*\n  parent: System.Web.UI.EventEntry\n  isExternal: false\n  name: Name\n  nameWithType: EventEntry.Name\n"}