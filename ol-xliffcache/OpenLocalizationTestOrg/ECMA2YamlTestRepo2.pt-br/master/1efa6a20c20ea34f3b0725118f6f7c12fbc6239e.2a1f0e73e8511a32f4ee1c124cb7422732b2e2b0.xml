{"nodes":[{"pos":[878,970],"content":"Represents information supplied by the developer of a pipeline segment, for use by the host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents information supplied by the developer of a pipeline segment, for use by the host.","pos":[0,92]}]},{"pos":[983,2088],"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information that qualifies the use of the segment (for example, the recommended isolation level for the segment). The QualificationDataItem structure contains one name/value pair and the type of pipeline segment it was applied to.       Use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName> property to get a nested set of dictionaries that contains QualificationDataItem structures for the pipeline segments associated with an <xref:System.AddIn.Hosting.AddInToken>.       Alternatively, use the <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName> method to get an enumerator for the QualificationDataItem structures of the pipeline segments associated with a token, or simply use a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++) to treat the token as if it were a collection of QualificationDataItem structures.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the &lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt; attribute, to provide information that qualifies the use of the segment (for example, the recommended isolation level for the segment).","pos":[0,305],"source":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information that qualifies the use of the segment (for example, the recommended isolation level for the segment)."},{"content":"The QualificationDataItem structure contains one name/value pair and the type of pipeline segment it was applied to.","pos":[306,422]},{"content":"Use the &lt;xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName&gt; property to get a nested set of dictionaries that contains QualificationDataItem structures for the pipeline segments associated with an &lt;xref:System.AddIn.Hosting.AddInToken&gt;.","pos":[429,698],"source":"       Use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName> property to get a nested set of dictionaries that contains QualificationDataItem structures for the pipeline segments associated with an <xref:System.AddIn.Hosting.AddInToken>."},{"content":"Alternatively, use the &lt;xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName&gt; method to get an enumerator for the QualificationDataItem structures of the pipeline segments associated with a token, or simply use a <ph id=\"ph1\">`foreach`</ph> statement (<ph id=\"ph2\">`For Each`</ph> in Visual Basic, <ph id=\"ph3\">`for each`</ph> in Visual C++) to treat the token as if it were a collection of QualificationDataItem structures.","pos":[705,1101],"source":"       Alternatively, use the <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName> method to get an enumerator for the QualificationDataItem structures of the pipeline segments associated with a token, or simply use a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++) to treat the token as if it were a collection of QualificationDataItem structures."}]},{"pos":[2989,3075],"content":"Determines whether a specified object is equal to the current qualification data item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a specified object is equal to the current qualification data item.","pos":[0,86]}]},{"pos":[3216,3238],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[3297,3486],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the current instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3977,4029],"content":"Gets the hash code for this qualification data item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the hash code for this qualification data item.","pos":[0,52]}]},{"pos":[4164,4178],"content":"The hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code.","pos":[0,14]}]},{"pos":[4635,4680],"content":"Gets the name of the qualification data item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the qualification data item.","pos":[0,45]}]},{"pos":[4692,5050],"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Name property gets the name. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> property to get the value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Name property gets the name. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> property to get the value.","pos":[0,358],"nodes":[{"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the &lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt; attribute, to provide information to consumers of the add-in.","pos":[0,231],"source":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in."},{"content":"The Name property gets the name.","pos":[232,264]},{"content":"Use the &lt;xref:System.AddIn.Hosting.QualificationDataItem.Value%2A&gt; property to get the value.","pos":[265,358],"source":" Use the <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> property to get the value."}]}]},{"pos":[5573,5613],"content":"The name of the qualification data item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the qualification data item.","pos":[0,40]}]},{"pos":[6407,6515],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are equal.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> structures are equal."},{"pos":[6778,6863],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare."},{"pos":[6954,7040],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare."},{"pos":[7099,7290],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">item1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">item2</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item1</code> and <code>item2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8101,8213],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are different.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> structures are different."},{"pos":[8478,8563],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare."},{"pos":[8654,8740],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.QualificationDataItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare."},{"pos":[8799,8994],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">item1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">item2</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item1</code> and <code>item2</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9468,9561],"content":"Gets a value that identifies the pipeline segment the qualification data item was applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the pipeline segment the qualification data item was applied to.","pos":[0,93]}]},{"pos":[9574,9988],"content":"When you enumerate qualification data, use this property to identify the qualification data that belongs to a particular segment of the pipeline.      > [!NOTE] >  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose Segment property is <xref:System.AddIn.Hosting.AddInSegmentType>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you enumerate qualification data, use this property to identify the qualification data that belongs to a particular segment of the pipeline.","pos":[0,145]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The add-in model does not use qualification data that is applied to the host view of the add-in.","pos":[151,260],"source":"      > [!NOTE] >  The add-in model does not use qualification data that is applied to the host view of the add-in."},{"content":"As a result, when you enumerate qualification data you will not find any items whose Segment property is &lt;xref:System.AddIn.Hosting.AddInSegmentType&gt;.","pos":[261,411],"source":" As a result, when you enumerate qualification data you will not find any items whose Segment property is <xref:System.AddIn.Hosting.AddInSegmentType>."}]},{"pos":[10571,10629],"content":"The kind of pipeline segment the data item was applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The kind of pipeline segment the data item was applied to.","pos":[0,58]}]},{"pos":[11087,11133],"content":"Gets the value of the qualification data item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the qualification data item.","pos":[0,46]}]},{"pos":[11145,11503],"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Value property gets the value. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> property to get the name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Value property gets the value. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> property to get the name.","pos":[0,358],"nodes":[{"content":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the &lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt; attribute, to provide information to consumers of the add-in.","pos":[0,231],"source":"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in."},{"content":"The Value property gets the value.","pos":[232,266]},{"content":"Use the &lt;xref:System.AddIn.Hosting.QualificationDataItem.Name%2A&gt; property to get the name.","pos":[267,358],"source":" Use the <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> property to get the name."}]}]},{"pos":[12028,12050],"content":"The value of the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the item.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.QualificationDataItem\n  id: QualificationDataItem\n  children:\n  - System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)\n  - System.AddIn.Hosting.QualificationDataItem.GetHashCode\n  - System.AddIn.Hosting.QualificationDataItem.Name\n  - System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  - System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  - System.AddIn.Hosting.QualificationDataItem.Segment\n  - System.AddIn.Hosting.QualificationDataItem.Value\n  langs:\n  - csharp\n  name: QualificationDataItem\n  nameWithType: QualificationDataItem\n  fullName: System.AddIn.Hosting.QualificationDataItem\n  type: Struct\n  summary: Represents information supplied by the developer of a pipeline segment, for use by the host.\n  remarks: \"Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information that qualifies the use of the segment (for example, the recommended isolation level for the segment). The QualificationDataItem structure contains one name/value pair and the type of pipeline segment it was applied to.  \\n  \\n Use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName> property to get a nested set of dictionaries that contains QualificationDataItem structures for the pipeline segments associated with an <xref:System.AddIn.Hosting.AddInToken>.  \\n  \\n Alternatively, use the <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName> method to get an enumerator for the QualificationDataItem structures of the pipeline segments associated with a token, or simply use a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++) to treat the token as if it were a collection of QualificationDataItem structures.\"\n  example:\n  - \"The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.  \\n  \\n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]\"\n  syntax:\n    content: public struct QualificationDataItem\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: QualificationDataItem.Equals(Object)\n  fullName: System.AddIn.Hosting.QualificationDataItem.Equals(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Determines whether a specified object is equal to the current qualification data item.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.AddIn.Hosting.QualificationDataItem.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode\n  id: GetHashCode\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: QualificationDataItem.GetHashCode()\n  fullName: System.AddIn.Hosting.QualificationDataItem.GetHashCode()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the hash code for this qualification data item.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code.\n  overload: System.AddIn.Hosting.QualificationDataItem.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.Name\n  id: Name\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: Name\n  nameWithType: QualificationDataItem.Name\n  fullName: System.AddIn.Hosting.QualificationDataItem.Name\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the name of the qualification data item.\n  remarks: Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Name property gets the name. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> property to get the value.\n  example:\n  - \"The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Name property is used to display the name of each item.  \\n  \\n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the qualification data item.\n  overload: System.AddIn.Hosting.QualificationDataItem.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  id: op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: op_Equality(QualificationDataItem,QualificationDataItem)\n  nameWithType: QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)\n  fullName: System.AddIn.Hosting.QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)\n  type: Operator\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Determines whether two <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> structures are equal.\n  syntax:\n    content: public static bool op_Equality (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);\n    parameters:\n    - id: item1\n      type: System.AddIn.Hosting.QualificationDataItem\n      description: The first <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare.\n    - id: item2\n      type: System.AddIn.Hosting.QualificationDataItem\n      description: The second <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item1</code> and <code>item2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.AddIn.Hosting.QualificationDataItem.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  id: op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: op_Inequality(QualificationDataItem,QualificationDataItem)\n  nameWithType: QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)\n  fullName: System.AddIn.Hosting.QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)\n  type: Operator\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Determines whether two <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> structures are different.\n  syntax:\n    content: public static bool op_Inequality (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);\n    parameters:\n    - id: item1\n      type: System.AddIn.Hosting.QualificationDataItem\n      description: The first <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare.\n    - id: item2\n      type: System.AddIn.Hosting.QualificationDataItem\n      description: The second <xref href=\"System.AddIn.Hosting.QualificationDataItem\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item1</code> and <code>item2</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.AddIn.Hosting.QualificationDataItem.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.Segment\n  id: Segment\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: Segment\n  nameWithType: QualificationDataItem.Segment\n  fullName: System.AddIn.Hosting.QualificationDataItem.Segment\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets a value that identifies the pipeline segment the qualification data item was applied to.\n  remarks: \"When you enumerate qualification data, use this property to identify the qualification data that belongs to a particular segment of the pipeline.  \\n  \\n> [!NOTE]\\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose Segment property is <xref:System.AddIn.Hosting.AddInSegmentType>.\"\n  example:\n  - \"The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Segment property is used to display the kind of segment.  \\n  \\n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]\"\n  syntax:\n    content: public System.AddIn.Hosting.AddInSegmentType Segment { get; }\n    return:\n      type: System.AddIn.Hosting.AddInSegmentType\n      description: The kind of pipeline segment the data item was applied to.\n  overload: System.AddIn.Hosting.QualificationDataItem.Segment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.QualificationDataItem.Value\n  id: Value\n  parent: System.AddIn.Hosting.QualificationDataItem\n  langs:\n  - csharp\n  name: Value\n  nameWithType: QualificationDataItem.Value\n  fullName: System.AddIn.Hosting.QualificationDataItem.Value\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the value of the qualification data item.\n  remarks: Each item of qualification data consists of a name/value pair that was applied to a pipeline segment by using the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute, to provide information to consumers of the add-in. The Value property gets the value. Use the <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> property to get the name.\n  example:\n  - \"The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Value property is used to display the value of the item.  \\n  \\n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]\"\n  syntax:\n    content: public string Value { get; }\n    return:\n      type: System.String\n      description: The value of the item.\n  overload: System.AddIn.Hosting.QualificationDataItem.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: QualificationDataItem.Equals(Object)\n  fullName: System.AddIn.Hosting.QualificationDataItem.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: QualificationDataItem.GetHashCode()\n  fullName: System.AddIn.Hosting.QualificationDataItem.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Hosting.QualificationDataItem.Name\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Name\n  nameWithType: QualificationDataItem.Name\n  fullName: System.AddIn.Hosting.QualificationDataItem.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: op_Equality(QualificationDataItem,QualificationDataItem)\n  nameWithType: QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)\n  fullName: System.AddIn.Hosting.QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)\n- uid: System.AddIn.Hosting.QualificationDataItem\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: QualificationDataItem\n  nameWithType: QualificationDataItem\n  fullName: System.AddIn.Hosting.QualificationDataItem\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: op_Inequality(QualificationDataItem,QualificationDataItem)\n  nameWithType: QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)\n  fullName: System.AddIn.Hosting.QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)\n- uid: System.AddIn.Hosting.QualificationDataItem.Segment\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Segment\n  nameWithType: QualificationDataItem.Segment\n  fullName: System.AddIn.Hosting.QualificationDataItem.Segment\n- uid: System.AddIn.Hosting.AddInSegmentType\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInSegmentType\n  nameWithType: AddInSegmentType\n  fullName: System.AddIn.Hosting.AddInSegmentType\n- uid: System.AddIn.Hosting.QualificationDataItem.Value\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Value\n  nameWithType: QualificationDataItem.Value\n  fullName: System.AddIn.Hosting.QualificationDataItem.Value\n- uid: System.AddIn.Hosting.QualificationDataItem.Equals*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Equals\n  nameWithType: QualificationDataItem.Equals\n- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: GetHashCode\n  nameWithType: QualificationDataItem.GetHashCode\n- uid: System.AddIn.Hosting.QualificationDataItem.Name*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Name\n  nameWithType: QualificationDataItem.Name\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: op_Equality\n  nameWithType: QualificationDataItem.op_Equality\n- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: op_Inequality\n  nameWithType: QualificationDataItem.op_Inequality\n- uid: System.AddIn.Hosting.QualificationDataItem.Segment*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Segment\n  nameWithType: QualificationDataItem.Segment\n- uid: System.AddIn.Hosting.QualificationDataItem.Value*\n  parent: System.AddIn.Hosting.QualificationDataItem\n  isExternal: false\n  name: Value\n  nameWithType: QualificationDataItem.Value\n"}