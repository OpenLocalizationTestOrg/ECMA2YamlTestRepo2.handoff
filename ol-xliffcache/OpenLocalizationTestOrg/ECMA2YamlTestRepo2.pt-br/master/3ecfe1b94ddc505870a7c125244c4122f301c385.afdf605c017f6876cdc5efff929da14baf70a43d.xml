{"nodes":[{"pos":[1197,1430],"content":"Represents a permission that uses a <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> implementation to determine if access to a resource should be granted to the active principal. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a permission that uses a <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation to determine if access to a resource should be granted to the active principal.","pos":[0,201],"source":"Represents a permission that uses a <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> implementation to determine if access to a resource should be granted to the active principal."},{"content":"This class cannot be inherited.","pos":[202,233]}]},{"pos":[10097,10210],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> class."},{"pos":[10223,10900],"content":"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair. You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair. You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.","pos":[0,675],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt; object is initialized with the specified resource-action pair.","pos":[0,129],"source":"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair."},{"content":"You can call the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt; method to perform an access check.","pos":[130,254],"source":" You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check."},{"content":"Although the constructor only takes a single resource and action, &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt; objects can be combined through the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt; and &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt; methods.","pos":[261,586],"source":"       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods."},{"content":"The permission created through these methods may contain multiple resource-action pairs.","pos":[587,675]}]}]},{"pos":[11072,11129],"content":"The resource on which the principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resource on which the principal should be authorized.","pos":[0,57]}]},{"pos":[11192,11248],"content":"The action for which the principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action for which the principal should be authorized.","pos":[0,56]}]},{"pos":[11432,11537],"content":"<ph id=\"ph1\">&lt;code&gt;resource&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>resource</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[11640,11724],"content":"<ph id=\"ph1\">&lt;code&gt;action&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>action</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12301,12405],"content":"Checks if the current principal is authorized to perform the specified action on the specified resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks if the current principal is authorized to perform the specified action on the specified resource.","pos":[0,104]}]},{"pos":[12418,12920],"content":"The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.       The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.       The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.","pos":[0,500],"nodes":[{"content":"The principal must be authorized for the specified action on the specified resource or the &lt;xref:System.Security.SecurityException&gt; exception is thrown.","pos":[0,152],"source":"The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown."},{"content":"The &lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName&gt; method of the configured claims authorization manager is invoked with an &lt;xref:System.Security.Claims.AuthorizationContext&gt; composed of the active principal (&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;), the resource, and the action.","pos":[159,500],"source":"       The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action."}]}]},{"pos":[13595,13652],"content":"The resource on which the principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resource on which the principal should be authorized.","pos":[0,57]}]},{"pos":[13715,13771],"content":"The action for which the principal should be authorized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action for which the principal should be authorized.","pos":[0,56]}]},{"pos":[13978,14203],"content":"The current principal is not assignable from <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref>.       -or-       There is no <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> configured.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current principal is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,105],"source":"The current principal is not assignable from <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref>."},{"content":"-or-       There is no <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> configured.","pos":[112,217],"source":"       -or-       There is no <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> configured."}]},{"pos":[14317,14348],"content":"The authorization check failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authorization check failed.","pos":[0,31]}]},{"pos":[14793,14909],"content":"Returns a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns a copy of the current <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> instance."},{"pos":[15067,15179],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> copied from the current instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> copied from the current instance."},{"pos":[15725,15838],"content":"Checks if the current principal is authorized for the resource-action pairs associated with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks if the current principal is authorized for the resource-action pairs associated with the current instance.","pos":[0,113]}]},{"pos":[15851,17022],"content":"The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.       The Demand method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission. For the Demand to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.       The Demand method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission. For the Demand to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.","pos":[0,1167],"nodes":[{"content":"The current principal must be authorized for all of the resource-action pairs associated with this instance or the &lt;xref:System.Security.SecurityException&gt; exception is thrown.","pos":[0,176],"source":"The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown."},{"content":"Although the constructor only takes a single resource and action, &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt; objects can be combined through the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt; and &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt; methods.","pos":[183,508],"source":"       Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods."},{"content":"The permission created through these methods may contain multiple resource-action pairs.","pos":[509,597]},{"content":"The Demand method invokes the &lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName&gt; method of the configured claims authorization manager with an &lt;xref:System.Security.Claims.AuthorizationContext&gt; composed of the active principal (&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;), the resource, and the action for each of the resource-action pairs contained in the permission.","pos":[604,1026],"source":"       The Demand method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission."},{"content":"For the Demand to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.","pos":[1027,1167]}]}]},{"pos":[17790,18015],"content":"The current principal is not assignable from <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref>.       -or-       There is no <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> configured.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current principal is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,105],"source":"The current principal is not assignable from <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref>."},{"content":"-or-       There is no <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> configured.","pos":[112,217],"source":"       -or-       There is no <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> configured."}]},{"pos":[18129,18160],"content":"The authorization check failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authorization check failed.","pos":[0,31]}]},{"pos":[18731,18813],"content":"Reconstructs the current permission and its state from the specified XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs the current permission and its state from the specified XML encoding.","pos":[0,82]}]},{"pos":[18825,18977],"content":"Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Reconstructs a permission from the XML encoding created by a call to the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A&gt; method.","pos":[0,152],"source":"Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method."}]},{"pos":[19161,19215],"content":"The XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]},{"pos":[19409,19494],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19605,19688],"content":"The encoding contains unrecognized elements or attributes or improperly formed XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encoding contains unrecognized elements or attributes or improperly formed XML.","pos":[0,83]}]},{"pos":[20249,20350],"content":"Returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,101]}]},{"pos":[20362,20873],"content":"The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission. Resource-action pairs that existed in only one or the other of the permissions are not included. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission. Resource-action pairs that existed in only one or the other of the permissions are not included. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.","pos":[0,511],"nodes":[{"content":"The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.","pos":[0,148]},{"content":"Resource-action pairs that existed in only one or the other of the permissions are not included.","pos":[149,245]},{"content":"For a &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt; to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.","pos":[246,511],"source":" For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission."}]}]},{"pos":[21072,21232],"content":"The permission to intersect with the current permission. It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission to intersect with the current permission.","pos":[0,56]},{"content":"It must be an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[57,160],"source":" It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>."}]},{"pos":[21304,21686],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the intersection of the current permission and the specified permission; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">null</ph><ept id=\"p4\">&lt;/code&gt;</ept> or is not an instance of <bpt id=\"p5\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> that represents the intersection of the current permission and the specified permission; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>target</code> is <code>null</code> or is not an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>."},{"pos":[22348,22446],"content":"Returns a value that indicates whether current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether current permission is a subset of the specified permission.","pos":[0,98]}]},{"pos":[22458,22781],"content":"The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission. If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the IsSubsetOf returns `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.","pos":[0,180]},{"content":"If <ph id=\"ph1\">`target`</ph> is <ph id=\"ph2\">`null`</ph> or is not an instance of &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;, the IsSubsetOf returns <ph id=\"ph3\">`false`</ph>.","pos":[181,323],"source":" If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the IsSubsetOf returns `false`."}]},{"pos":[22958,23118],"content":"The permission to be tested for the subset relationship. It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission to be tested for the subset relationship.","pos":[0,56]},{"content":"It must be an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[57,160],"source":" It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>."}]},{"pos":[23177,23375],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23967,24037],"content":"Returns a value that indicates whether the permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the permission is unrestricted.","pos":[0,70]}]},{"pos":[24169,24459],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicating that permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,170],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating that permission is unrestricted.","pos":[171,290],"source":" Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicating that permission is unrestricted."}]},{"pos":[25010,25079],"content":"Returns the XML encoded form of the current permission and its state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the XML encoded form of the current permission and its state.","pos":[0,69]}]},{"pos":[25091,25248],"content":"The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The principal can be reconstructed from its XML encoded form by calling the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A&gt; method.","pos":[0,157],"source":"The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method."}]},{"pos":[25415,25476],"content":"The XML encoded form of the current permission and its state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoded form of the current permission and its state.","pos":[0,61]}]},{"pos":[26109,26399],"content":"Returns a new permission that is the union of the current permission and the specified permission. <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> object that has all of the resource-action pairs that are present in the current instance and the target instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new permission that is the union of the current permission and the specified permission.","pos":[0,98]},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has all of the resource-action pairs that are present in the current instance and the target instance.","pos":[99,290],"source":"<xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> object that has all of the resource-action pairs that are present in the current instance and the target instance."}]},{"pos":[26411,26911],"content":"The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.","pos":[0,500],"nodes":[{"content":"The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.","pos":[0,191]},{"content":"For a &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt; to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.","pos":[192,500],"source":" For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission."}]}]},{"pos":[27106,27253],"content":"The permission to combine with current permission. It must be of type <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission to combine with current permission.","pos":[0,50]},{"content":"It must be of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[51,147],"source":" It must be of type <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>."}]},{"pos":[27325,27700],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the union of the current permission and the specified permission; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">null</ph><ept id=\"p4\">&lt;/code&gt;</ept> or is not an instance of <bpt id=\"p5\">&lt;xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> that represents the union of the current permission and the specified permission; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>target</code> is <code>null</code> or is not an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission\n  id: ClaimsPrincipalPermission\n  children:\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.Copy\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.Demand\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml\n  - System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ClaimsPrincipalPermission\n  nameWithType: ClaimsPrincipalPermission\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission\n  type: Class\n  summary: Represents a permission that uses a <xref href=\"System.Security.Claims.ClaimsAuthorizationManager\"></xref> implementation to determine if access to a resource should be granted to the active principal. This class cannot be inherited.\n  remarks: \"The ClaimsPrincipalPermission class provides the capability to perform imperative access checks by using the <xref:System.Security.Claims.ClaimsAuthorizationManager> that is configured for an application. By invoking the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method or the static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager. Declarative access checks can be performed by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class.  \\n  \\n> [!IMPORTANT]\\n>  The ClaimsPrincipalPermission class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications. You can specify the claims authorization manager either in configuration or programmatically. To specify the claims authorization manager in a configuration file, set the [\\\\&lt;claimsAuthorizationManager\\\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under an [\\\\&lt;identityConfiguration\\\\&gt;](../Topic/%3CidentityConfiguration%3E.md) element and ensure that this identity configuration is referenced by the [\\\\&lt;federationConfiguration\\\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute). To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event.  \\n  \\n On one level, the functionality provided by ClaimsPrincipalPermission is similar to the role-based access checks (RBAC) provided through the <xref:System.Security.Permissions.PrincipalPermission> class; however, the <xref:System.Security.Claims.ClaimsAuthorizationManager> class performs checks based on the claims presented by the active principal. This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role. Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand. Like RBAC, ClaimsPrincipalPermission performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <xref:System.Security.CodeAccessPermission> class and use a stack walk to ensure that all callers of the code have been granted a permission, ClaimsPrincipalPermission performs its check only on the current principal.  \\n  \\n The static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method checks access for a specified action on a specified resource. The resource and action are both strings and are typically URIs. You can also initialize an instance of ClaimsPrincipalPermission with an action and a resource and call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method. Although the constructor only takes a single resource and action, ClaimsPrincipalPermission objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. A permission created by using these methods may contain multiple resource-action pairs.  \\n  \\n Both methods determine access by invoking the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>), the resource, and the action. They throw a <xref:System.Security.SecurityException> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.  \\n  \\n In the case of a ClaimsPrincipalPermission that contains multiple resource-action pairs, the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method is invoked for each of the resource-action pairs contained in the permission.  For the call to <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.\"\n  example:\n  - \"The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, or a <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration. In each case, the configured <xref:System.Security.Claims.ClaimsAuthorizationManager> is invoked to evaluate the current principal against the specified resource and action. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \\n  \\n [!code-cs[WifCppWithCam#1](~/add/codesnippet/csharp/wifcppwithcam/program.cs#1)]  \\n  \\n The following XML shows the minimum configuration required to use a custom claims authorization manager with the ClaimsPrincipalPermission class. You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [\\\\&lt;claimsAuthorizationManager\\\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under the default identity configuration. This will ensure that your authorization manager is referenced from the default federation configuration. Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [\\\\&lt;federationConfiguration\\\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element.  \\n  \\n```xml  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>  \\n<configuration>  \\n  <configSections>  \\n    <!-- WIF configuration sections -->  \\n    <section name=\\\"system.identityModel\\\" type=\\\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\\\"/>  \\n    <section name=\\\"system.identityModel.services\\\" type=\\\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\\\"/>  \\n  </configSections>  \\n  \\n  <startup>  \\n    <supportedRuntime version=\\\"v4.0\\\" sku=\\\".NETFramework,Version=v4.5\\\" />  \\n  </startup>  \\n  \\n  <system.identityModel>  \\n    <identityConfiguration>  \\n      <claimsAuthorizationManager type =\\\"MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager\\\"/>  \\n    </identityConfiguration>  \\n  </system.identityModel>  \\n  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.IPermission\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: ClaimsPrincipalPermission(String,String)\n  nameWithType: ClaimsPrincipalPermission.ClaimsPrincipalPermission(String,String)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.ClaimsPrincipalPermission(String,String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Creates a new instance of the <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> class.\n  remarks: \"The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair. You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.  \\n  \\n Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.\"\n  syntax:\n    content: public ClaimsPrincipalPermission (string resource, string action);\n    parameters:\n    - id: resource\n      type: System.String\n      description: The resource on which the principal should be authorized.\n    - id: action\n      type: System.String\n      description: The action for which the principal should be authorized.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>resource</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>action</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)\n  id: CheckAccess(System.String,System.String)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: CheckAccess(String,String)\n  nameWithType: ClaimsPrincipalPermission.CheckAccess(String,String)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(String,String)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Checks if the current principal is authorized to perform the specified action on the specified resource.\n  remarks: \"The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.  \\n  \\n The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.\"\n  example:\n  - \"The following example shows how to protect a resource by using the CheckAccess method. The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \\n  \\n [!code-cs[WifCppWithCam#2](~/add/codesnippet/csharp/wifcppwithcam/program.cs#2)]\"\n  syntax:\n    content: public static void CheckAccess (string resource, string action);\n    parameters:\n    - id: resource\n      type: System.String\n      description: The resource on which the principal should be authorized.\n    - id: action\n      type: System.String\n      description: The action for which the principal should be authorized.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The current principal is not assignable from <xref href=\\\"System.Security.Claims.ClaimsPrincipal\\\"></xref>.  \\n  \\n -or-  \\n  \\n There is no <xref href=\\\"System.Security.Claims.ClaimsAuthorizationManager\\\"></xref> configured.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The authorization check failed.\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy\n  id: Copy\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ClaimsPrincipalPermission.Copy()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns a copy of the current <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> instance.\n  syntax:\n    content: public System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> copied from the current instance.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand\n  id: Demand\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: Demand()\n  nameWithType: ClaimsPrincipalPermission.Demand()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Checks if the current principal is authorized for the resource-action pairs associated with the current instance.\n  remarks: \"The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.  \\n  \\n Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods. The permission created through these methods may contain multiple resource-action pairs.  \\n  \\n The Demand method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=fullName> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission. For the Demand to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.\"\n  example:\n  - \"The following example shows how to protect a resource by using the Demand method. The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \\n  \\n [!code-cs[WifCppWithCam#3](~/add/codesnippet/csharp/wifcppwithcam/program.cs#3)]\"\n  syntax:\n    content: public void Demand ();\n    parameters: []\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The current principal is not assignable from <xref href=\\\"System.Security.Claims.ClaimsPrincipal\\\"></xref>.  \\n  \\n -or-  \\n  \\n There is no <xref href=\\\"System.Security.Claims.ClaimsAuthorizationManager\\\"></xref> configured.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The authorization check failed.\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ClaimsPrincipalPermission.FromXml(SecurityElement)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Reconstructs the current permission and its state from the specified XML encoding.\n  remarks: Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement element);\n    parameters:\n    - id: element\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The encoding contains unrecognized elements or attributes or improperly formed XML.\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ClaimsPrincipalPermission.Intersect(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission. Resource-action pairs that existed in only one or the other of the permissions are not included. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.\n  syntax:\n    content: public System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The permission to intersect with the current permission. It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.\n    return:\n      type: System.Security.IPermission\n      description: A new <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> that represents the intersection of the current permission and the specified permission; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>target</code> is <code>null</code> or is not an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ClaimsPrincipalPermission.IsSubsetOf(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns a value that indicates whether current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission. If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the IsSubsetOf returns `false`.\n  syntax:\n    content: public bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The permission to be tested for the subset relationship. It must be an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: ClaimsPrincipalPermission.IsUnrestricted()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns a value that indicates whether the permission is unrestricted.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicating that permission is unrestricted.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml\n  id: ToXml\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ClaimsPrincipalPermission.ToXml()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns the XML encoded form of the current permission and its state.\n  remarks: The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: The XML encoded form of the current permission and its state.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ClaimsPrincipalPermission.Union(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Returns a new permission that is the union of the current permission and the specified permission. <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> object that has all of the resource-action pairs that are present in the current instance and the target instance.\n  remarks: The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission. For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.\n  syntax:\n    content: public System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The permission to combine with current permission. It must be of type <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.\n    return:\n      type: System.Security.IPermission\n      description: A new <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref> that represents the union of the current permission and the specified permission; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>target</code> is <code>null</code> or is not an instance of <xref href=\"System.IdentityModel.Services.ClaimsPrincipalPermission\"></xref>.\n  overload: System.IdentityModel.Services.ClaimsPrincipalPermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: ClaimsPrincipalPermission(String,String)\n  nameWithType: ClaimsPrincipalPermission.ClaimsPrincipalPermission(String,String)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.ClaimsPrincipalPermission(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: CheckAccess(String,String)\n  nameWithType: ClaimsPrincipalPermission.CheckAccess(String,String)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(String,String)\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: ClaimsPrincipalPermission.Copy()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: ClaimsPrincipalPermission.Demand()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand()\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ClaimsPrincipalPermission.FromXml(SecurityElement)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ClaimsPrincipalPermission.Intersect(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(IPermission)\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ClaimsPrincipalPermission.IsSubsetOf(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ClaimsPrincipalPermission.IsUnrestricted()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted()\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: ClaimsPrincipalPermission.ToXml()\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml()\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ClaimsPrincipalPermission.Union(IPermission)\n  fullName: System.IdentityModel.Services.ClaimsPrincipalPermission.Union(IPermission)\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: ClaimsPrincipalPermission\n  nameWithType: ClaimsPrincipalPermission.ClaimsPrincipalPermission\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: CheckAccess\n  nameWithType: ClaimsPrincipalPermission.CheckAccess\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Copy*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Copy\n  nameWithType: ClaimsPrincipalPermission.Copy\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Demand*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Demand\n  nameWithType: ClaimsPrincipalPermission.Demand\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: ClaimsPrincipalPermission.FromXml\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: ClaimsPrincipalPermission.Intersect\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: ClaimsPrincipalPermission.IsSubsetOf\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: ClaimsPrincipalPermission.IsUnrestricted\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: ClaimsPrincipalPermission.ToXml\n- uid: System.IdentityModel.Services.ClaimsPrincipalPermission.Union*\n  parent: System.IdentityModel.Services.ClaimsPrincipalPermission\n  isExternal: false\n  name: Union\n  nameWithType: ClaimsPrincipalPermission.Union\n"}