{"nodes":[{"pos":[884,941],"content":"Represents a cubic Bezier curve drawn between two points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a cubic Bezier curve drawn between two points.","pos":[0,57]}]},{"pos":[954,2451],"content":"Use a <xref:System.Windows.Media.PathFigure> object to store BezierSegment objects and other segments.       A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The BezierSegment class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the BezierSegment is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      ## Freezable Features    A BezierSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use a &lt;xref:System.Windows.Media.PathFigure&gt; object to store BezierSegment objects and other segments.","pos":[0,102],"source":"Use a <xref:System.Windows.Media.PathFigure> object to store BezierSegment objects and other segments."},{"content":"A cubic Bezier curve is defined by four points: a start point, an end point (&lt;xref:System.Windows.Media.BezierSegment.Point3%2A&gt;), and two control points (&lt;xref:System.Windows.Media.BezierSegment.Point1%2A&gt; and &lt;xref:System.Windows.Media.BezierSegment.Point2%2A&gt;).The BezierSegment class does not contain a property for the starting point of the curve; it only defines the end point.","pos":[109,492],"source":"       A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The BezierSegment class does not contain a property for the starting point of the curve; it only defines the end point."},{"content":"The beginning point of the curve is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; to which the BezierSegment is added.","pos":[493,629],"source":" The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the BezierSegment is added."},{"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.","pos":[636,807]},{"content":"The first control point, &lt;xref:System.Windows.Media.BezierSegment.Point1%2A&gt;, affects the beginning portion of the curve; the second control point, &lt;xref:System.Windows.Media.BezierSegment.Point2%2A&gt;, affects the ending portion of the curve.","pos":[808,1049],"source":" The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve."},{"content":"Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","pos":[1050,1220]},{"content":"Freezable Features    A BezierSegment is a type of &lt;xref:System.Windows.Freezable&gt; object.","pos":[1229,1319],"source":"      ## Freezable Features    A BezierSegment is a type of <xref:System.Windows.Freezable> object."},{"content":"For information about &lt;xref:System.Windows.Freezable&gt; features, such as freezing and cloning, see the <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1320,1490],"source":" For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[6979,7075],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.BezierSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.BezierSegment\"></xref> class."},{"pos":[7088,7963],"content":"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A cubic Bezier curve is defined by four points: a start point, an end point (<ph id=\"ph1\">`point3`</ph>), and two control points (<ph id=\"ph2\">`point1`</ph> and <ph id=\"ph3\">`point2`</ph>).","pos":[0,135],"source":"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`)."},{"content":"This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; object to which the &lt;xref:System.Windows.Media.BezierSegment&gt; is added.","pos":[136,368],"source":" This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added."},{"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.","pos":[375,546]},{"content":"The first control point, <ph id=\"ph1\">`point1`</ph>, affects the beginning portion of the curve; the second control point, <ph id=\"ph2\">`point2`</ph>, affects the ending portion of the curve.","pos":[547,702],"source":" The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve."},{"content":"Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","pos":[703,873]}]},{"pos":[8719,8879],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.BezierSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified control points, end point, and stroke option.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.BezierSegment\"></xref> class with the specified control points, end point, and stroke option."},{"pos":[8892,9767],"content":"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A cubic Bezier curve is defined by four points: a start point, an end point (<ph id=\"ph1\">`point3`</ph>), and two control points (<ph id=\"ph2\">`point1`</ph> and <ph id=\"ph3\">`point2`</ph>).","pos":[0,135],"source":"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`)."},{"content":"This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; object to which the &lt;xref:System.Windows.Media.BezierSegment&gt; is added.","pos":[136,368],"source":" This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added."},{"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.","pos":[375,546]},{"content":"The first control point, <ph id=\"ph1\">`point1`</ph>, affects the beginning portion of the curve; the second control point, <ph id=\"ph2\">`point2`</ph>, affects the ending portion of the curve.","pos":[547,702],"source":" The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve."},{"content":"Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","pos":[703,873]}]},{"pos":[10003,10080],"content":"The first control point, which determines the beginning portion of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first control point, which determines the beginning portion of the curve.","pos":[0,77]}]},{"pos":[10150,10225],"content":"The second control point, which determines the ending portion of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second control point, which determines the ending portion of the curve.","pos":[0,75]}]},{"pos":[10295,10333],"content":"The point to which the curve is drawn.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to which the curve is drawn.","pos":[0,38]}]},{"pos":[10400,10639],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to stroke the curve when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to stroke the curve when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11063,11370],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.BezierSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","pos":[0,135],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[136,307]}]},{"pos":[11383,11728],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","pos":[0,343],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[251,343],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}]},{"pos":[11902,12224],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,322],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[12708,12955],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.BezierSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, making deep copies of this object's current values.","pos":[0,150],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[151,247]}]},{"pos":[12968,13325],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","pos":[0,355],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;.","pos":[251,355],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}]},{"pos":[13511,13832],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[42,321],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[14499,14511],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14949,14999],"content":"Gets or sets the first control point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the first control point of the curve.","pos":[0,50]}]},{"pos":[15012,15787],"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, Point1, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      <a name=\"dependencyPropertyInfo_Point1\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point1Property>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.","pos":[0,171]},{"content":"The first control point, Point1, affects the beginning portion of the curve; the second control point, &lt;xref:System.Windows.Media.BezierSegment.Point2%2A&gt;, affects the ending portion of the curve.","pos":[172,368],"source":" The first control point, Point1, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve."},{"content":"Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","pos":[369,539]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Point1\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.BezierSegment.Point1Property&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[545,765],"source":"<a name=\"dependencyPropertyInfo_Point1\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point1Property>|   |Metadata properties set to `true`|None|"}]},{"pos":[15925,15962],"content":"The first control point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first control point of the curve.","pos":[0,37]}]},{"pos":[16425,16510],"content":"Identifies the <xref:System.Windows.Media.BezierSegment.Point1*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.BezierSegment.Point1*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Media.BezierSegment.Point1*> dependency property."}]},{"pos":[16684,16696],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17067,17118],"content":"Gets or sets the second control point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the second control point of the curve.","pos":[0,51]}]},{"pos":[17131,17906],"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, Point2, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      <a name=\"dependencyPropertyInfo_Point2\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point2Property>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.","pos":[0,171]},{"content":"The first control point, &lt;xref:System.Windows.Media.BezierSegment.Point1%2A&gt;, affects the beginning portion of the curve; the second control point, Point2, affects the ending portion of the curve.","pos":[172,368],"source":" The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, Point2, affects the ending portion of the curve."},{"content":"Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.","pos":[369,539]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Point2\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.BezierSegment.Point2Property&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[545,765],"source":"<a name=\"dependencyPropertyInfo_Point2\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point2Property>|   |Metadata properties set to `true`|None|"}]},{"pos":[18044,18082],"content":"The second control point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second control point of the curve.","pos":[0,38]}]},{"pos":[18545,18630],"content":"Identifies the <xref:System.Windows.Media.BezierSegment.Point2*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.BezierSegment.Point2*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Media.BezierSegment.Point2*> dependency property."}]},{"pos":[18804,18816],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19187,19227],"content":"Gets or sets the end point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the end point of the curve.","pos":[0,40]}]},{"pos":[19240,19788],"content":"The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.      <a name=\"dependencyPropertyInfo_Point3\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point3Property>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Media.BezierSegment&gt; class does not contain a property for the starting point of the curve; it only defines the end point.","pos":[0,147],"source":"The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point."},{"content":"The beginning point of the curve is the current point of the &lt;xref:System.Windows.Media.PathFigure&gt; to which the &lt;xref:System.Windows.Media.BezierSegment&gt; is added.","pos":[148,312],"source":" The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Point3\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.BezierSegment.Point3Property&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[318,538],"source":"<a name=\"dependencyPropertyInfo_Point3\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point3Property>|   |Metadata properties set to `true`|None|"}]},{"pos":[19926,19953],"content":"The end point of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The end point of the curve.","pos":[0,27]}]},{"pos":[20416,20501],"content":"Identifies the <xref:System.Windows.Media.BezierSegment.Point3*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.BezierSegment.Point3*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Media.BezierSegment.Point3*> dependency property."}]},{"pos":[20675,20687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.BezierSegment\n  id: BezierSegment\n  children:\n  - System.Windows.Media.BezierSegment.#ctor\n  - System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)\n  - System.Windows.Media.BezierSegment.Clone\n  - System.Windows.Media.BezierSegment.CloneCurrentValue\n  - System.Windows.Media.BezierSegment.CreateInstanceCore\n  - System.Windows.Media.BezierSegment.Point1\n  - System.Windows.Media.BezierSegment.Point1Property\n  - System.Windows.Media.BezierSegment.Point2\n  - System.Windows.Media.BezierSegment.Point2Property\n  - System.Windows.Media.BezierSegment.Point3\n  - System.Windows.Media.BezierSegment.Point3Property\n  langs:\n  - csharp\n  name: BezierSegment\n  nameWithType: BezierSegment\n  fullName: System.Windows.Media.BezierSegment\n  type: Class\n  summary: Represents a cubic Bezier curve drawn between two points.\n  remarks: \"Use a <xref:System.Windows.Media.PathFigure> object to store BezierSegment objects and other segments.  \\n  \\n A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The BezierSegment class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the BezierSegment is added.  \\n  \\n The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.  \\n  \\n## Freezable Features  \\n A BezierSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: 'public sealed class BezierSegment : System.Windows.Media.PathSegment'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.PathSegment\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.PathSegment.IsSmoothJoin\n  - System.Windows.Media.PathSegment.IsSmoothJoinProperty\n  - System.Windows.Media.PathSegment.IsStroked\n  - System.Windows.Media.PathSegment.IsStrokedProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: BezierSegment()\n  nameWithType: BezierSegment.BezierSegment()\n  fullName: System.Windows.Media.BezierSegment.BezierSegment()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.BezierSegment\"></xref> class.\n  remarks: \"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.  \\n  \\n The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.\"\n  syntax:\n    content: public BezierSegment ();\n    parameters: []\n  overload: System.Windows.Media.BezierSegment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)\n  id: '#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)'\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: BezierSegment(Point,Point,Point,Boolean)\n  nameWithType: BezierSegment.BezierSegment(Point,Point,Point,Boolean)\n  fullName: System.Windows.Media.BezierSegment.BezierSegment(Point,Point,Point,Boolean)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.BezierSegment\"></xref> class with the specified control points, end point, and stroke option.\n  remarks: \"A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.  \\n  \\n The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.\"\n  syntax:\n    content: public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first control point, which determines the beginning portion of the curve.\n    - id: point2\n      type: System.Windows.Point\n      description: The second control point, which determines the ending portion of the curve.\n    - id: point3\n      type: System.Windows.Point\n      description: The point to which the curve is drawn.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to stroke the curve when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.BezierSegment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Clone\n  id: Clone\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BezierSegment.Clone()\n  fullName: System.Windows.Media.BezierSegment.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.BezierSegment Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.BezierSegment\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.BezierSegment.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: BezierSegment.CloneCurrentValue()\n  fullName: System.Windows.Media.BezierSegment.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.BezierSegment\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.BezierSegment CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.BezierSegment\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Media.BezierSegment.CloneCurrentValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BezierSegment.CreateInstanceCore()\n  fullName: System.Windows.Media.BezierSegment.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: To be added.\n  overload: System.Windows.Media.BezierSegment.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point1\n  id: Point1\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point1\n  nameWithType: BezierSegment.Point1\n  fullName: System.Windows.Media.BezierSegment.Point1\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the first control point of the curve.\n  remarks: \"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, Point1, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Point1\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.BezierSegment.Point1Property>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Point Point1 { get; set; }\n    return:\n      type: System.Windows.Point\n      description: The first control point of the curve.\n  overload: System.Windows.Media.BezierSegment.Point1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point1Property\n  id: Point1Property\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point1Property\n  nameWithType: BezierSegment.Point1Property\n  fullName: System.Windows.Media.BezierSegment.Point1Property\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.BezierSegment.Point1*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty Point1Property;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point2\n  id: Point2\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point2\n  nameWithType: BezierSegment.Point2\n  fullName: System.Windows.Media.BezierSegment.Point2\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the second control point of the curve.\n  remarks: \"The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, Point2, affects the ending portion of the curve. Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Point2\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.BezierSegment.Point2Property>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Point Point2 { get; set; }\n    return:\n      type: System.Windows.Point\n      description: The second control point of the curve.\n  overload: System.Windows.Media.BezierSegment.Point2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point2Property\n  id: Point2Property\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point2Property\n  nameWithType: BezierSegment.Point2Property\n  fullName: System.Windows.Media.BezierSegment.Point2Property\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.BezierSegment.Point2*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty Point2Property;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point3\n  id: Point3\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point3\n  nameWithType: BezierSegment.Point3\n  fullName: System.Windows.Media.BezierSegment.Point3\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the end point of the curve.\n  remarks: \"The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Point3\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.BezierSegment.Point3Property>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Point Point3 { get; set; }\n    return:\n      type: System.Windows.Point\n      description: The end point of the curve.\n  overload: System.Windows.Media.BezierSegment.Point3*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.BezierSegment.Point3Property\n  id: Point3Property\n  parent: System.Windows.Media.BezierSegment\n  langs:\n  - csharp\n  name: Point3Property\n  nameWithType: BezierSegment.Point3Property\n  fullName: System.Windows.Media.BezierSegment.Point3Property\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref:System.Windows.Media.BezierSegment.Point3*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty Point3Property;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.PathSegment\n  isExternal: false\n  name: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.BezierSegment.#ctor\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: BezierSegment()\n  nameWithType: BezierSegment.BezierSegment()\n  fullName: System.Windows.Media.BezierSegment.BezierSegment()\n- uid: System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: BezierSegment(Point,Point,Point,Boolean)\n  nameWithType: BezierSegment.BezierSegment(Point,Point,Point,Boolean)\n  fullName: System.Windows.Media.BezierSegment.BezierSegment(Point,Point,Point,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.BezierSegment.Clone\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Clone()\n  nameWithType: BezierSegment.Clone()\n  fullName: System.Windows.Media.BezierSegment.Clone()\n- uid: System.Windows.Media.BezierSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: BezierSegment\n  nameWithType: BezierSegment\n  fullName: System.Windows.Media.BezierSegment\n- uid: System.Windows.Media.BezierSegment.CloneCurrentValue\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: BezierSegment.CloneCurrentValue()\n  fullName: System.Windows.Media.BezierSegment.CloneCurrentValue()\n- uid: System.Windows.Media.BezierSegment.CreateInstanceCore\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BezierSegment.CreateInstanceCore()\n  fullName: System.Windows.Media.BezierSegment.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.BezierSegment.Point1\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point1\n  nameWithType: BezierSegment.Point1\n  fullName: System.Windows.Media.BezierSegment.Point1\n- uid: System.Windows.Media.BezierSegment.Point1Property\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point1Property\n  nameWithType: BezierSegment.Point1Property\n  fullName: System.Windows.Media.BezierSegment.Point1Property\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.BezierSegment.Point2\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point2\n  nameWithType: BezierSegment.Point2\n  fullName: System.Windows.Media.BezierSegment.Point2\n- uid: System.Windows.Media.BezierSegment.Point2Property\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point2Property\n  nameWithType: BezierSegment.Point2Property\n  fullName: System.Windows.Media.BezierSegment.Point2Property\n- uid: System.Windows.Media.BezierSegment.Point3\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point3\n  nameWithType: BezierSegment.Point3\n  fullName: System.Windows.Media.BezierSegment.Point3\n- uid: System.Windows.Media.BezierSegment.Point3Property\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point3Property\n  nameWithType: BezierSegment.Point3Property\n  fullName: System.Windows.Media.BezierSegment.Point3Property\n- uid: System.Windows.Media.BezierSegment.#ctor*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: BezierSegment\n  nameWithType: BezierSegment.BezierSegment\n- uid: System.Windows.Media.BezierSegment.Clone*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Clone\n  nameWithType: BezierSegment.Clone\n- uid: System.Windows.Media.BezierSegment.CloneCurrentValue*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: BezierSegment.CloneCurrentValue\n- uid: System.Windows.Media.BezierSegment.CreateInstanceCore*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BezierSegment.CreateInstanceCore\n- uid: System.Windows.Media.BezierSegment.Point1*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point1\n  nameWithType: BezierSegment.Point1\n- uid: System.Windows.Media.BezierSegment.Point2*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point2\n  nameWithType: BezierSegment.Point2\n- uid: System.Windows.Media.BezierSegment.Point3*\n  parent: System.Windows.Media.BezierSegment\n  isExternal: false\n  name: Point3\n  nameWithType: BezierSegment.Point3\n"}