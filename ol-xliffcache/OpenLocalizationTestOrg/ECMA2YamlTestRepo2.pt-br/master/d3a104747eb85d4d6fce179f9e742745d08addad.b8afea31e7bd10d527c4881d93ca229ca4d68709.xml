{"nodes":[{"pos":[595,676],"content":"Enables queuing support for the marked interface. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables queuing support for the marked interface. This class cannot be inherited.","pos":[0,81],"nodes":[{"content":"Enables queuing support for the marked interface.","pos":[0,49]},{"content":"This class cannot be inherited.","pos":[50,81]}]}]},{"pos":[689,1137],"content":"Calls on this interface will be queued using Message Queuing.       To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.       The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calls on this interface will be queued using Message Queuing.","pos":[0,61]},{"content":"To mark an interface as queued, apply this attribute to the interface using the following syntax: <ph id=\"ph1\">`[InterfaceQueuing]`</ph>.","pos":[68,187],"source":"       To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`."},{"content":"The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no <ph id=\"ph1\">`out`</ph> or <ph id=\"ph2\">`ref`</ph> parameters.","pos":[194,334],"source":"       The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters."},{"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[341,442],"source":"       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3288,3590],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class setting the &lt;xref:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.EnterpriseServices.InterfaceQueuingAttribute.Interface<ept id=\"p2\">*</ept>&gt; properties to their default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"></xref> class setting the <xref:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*> and <xref:System.EnterpriseServices.InterfaceQueuingAttribute.Interface*> properties to their default values."},{"pos":[3603,3829],"content":"The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.      |Property|Value|   |--------------|-----------|   |Enabled|`true`|   |Interface|`null`|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows initial property values for an instance of &lt;xref:System.EnterpriseServices.InterfaceQueuingAttribute&gt;.","pos":[0,128],"source":"The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>."},{"content":"|Property|Value|   |--------------|-----------|   |Enabled|<ph id=\"ph1\">`true`</ph>|   |Interface|<ph id=\"ph2\">`null`</ph><ph id=\"ph3\">|</ph>","pos":[134,221],"source":"      |Property|Value|   |--------------|-----------|   |Enabled|`true`|   |Interface|`null`|"}]},{"pos":[5029,5180],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, optionally disabling queuing support.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"></xref> class, optionally disabling queuing support."},{"pos":[5832,5994],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to enable queuing support; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable queuing support; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6518,6585],"content":"Gets or sets a value indicating whether queuing support is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether queuing support is enabled.","pos":[0,67]}]},{"pos":[6597,6665],"content":"This property corresponds to the <ph id=\"ph1\">`Queuing-Enabled`</ph> property in COM+.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property corresponds to the `Queuing-Enabled` property in COM+."},{"pos":[6781,7024],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if queuing support is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if queuing support is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if queuing support is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,243],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[7560,7627],"content":"Gets or sets the name of the interface on which queuing is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the interface on which queuing is enabled.","pos":[0,67]}]},{"pos":[7746,7800],"content":"The name of the interface on which queuing is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the interface on which queuing is enabled.","pos":[0,54]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute\n  id: InterfaceQueuingAttribute\n  children:\n  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor\n  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)\n  - System.EnterpriseServices.InterfaceQueuingAttribute.Enabled\n  - System.EnterpriseServices.InterfaceQueuingAttribute.Interface\n  langs:\n  - csharp\n  name: InterfaceQueuingAttribute\n  nameWithType: InterfaceQueuingAttribute\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute\n  type: Class\n  summary: Enables queuing support for the marked interface. This class cannot be inherited.\n  remarks: \"Calls on this interface will be queued using Message Queuing.  \\n  \\n To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.  \\n  \\n The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.  \\n  \\n For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example shows how to use the `InterfaceQueuingAttribute` attribute.  \\n  \\n [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/cpp/t-system.enterpriseservi_38_1.cpp)]\\n [!code-cs[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/csharp/t-system.enterpriseservi_38_1.cs)]  \\n  \\n The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true  \\n  \\n [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/cpp/t-system.enterpriseservi_38_2.cpp)]\\n [!code-cs[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/csharp/t-system.enterpriseservi_38_2.cs)]  \\n  \\n The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.  \\n  \\n [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/cpp/t-system.enterpriseservi_38_3.cpp)]\\n [!code-cs[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/csharp/t-system.enterpriseservi_38_3.cs)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class InterfaceQueuingAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  langs:\n  - csharp\n  name: InterfaceQueuingAttribute()\n  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"></xref> class setting the <xref:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*> and <xref:System.EnterpriseServices.InterfaceQueuingAttribute.Interface*> properties to their default values.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|Enabled|`true`|  \\n|Interface|`null`|\"\n  example:\n  - \"The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \\n  \\n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/cpp/m-system.enterpriseservi_8_1.cpp)]\\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_8_1.vb)]\\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_8_1.cs)]\"\n  syntax:\n    content: public InterfaceQueuingAttribute ();\n    parameters: []\n  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  langs:\n  - csharp\n  name: InterfaceQueuingAttribute(Boolean)\n  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.InterfaceQueuingAttribute\"></xref> class, optionally disabling queuing support.\n  remarks: ''\n  example:\n  - \"The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \\n  \\n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/cpp/m-system.enterpriseservi_21_1.cpp)]\\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/visualbasic/m-system.enterpriseservi_21_1.vb)]\\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/csharp/m-system.enterpriseservi_21_1.cs)]\"\n  syntax:\n    content: public InterfaceQueuingAttribute (bool enabled);\n    parameters:\n    - id: enabled\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable queuing support; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled\n  id: Enabled\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: InterfaceQueuingAttribute.Enabled\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Gets or sets a value indicating whether queuing support is enabled.\n  remarks: This property corresponds to the `Queuing-Enabled` property in COM+.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if queuing support is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface\n  id: Interface\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  langs:\n  - csharp\n  name: Interface\n  nameWithType: InterfaceQueuingAttribute.Interface\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Gets or sets the name of the interface on which queuing is enabled.\n  syntax:\n    content: public string Interface { get; set; }\n    return:\n      type: System.String\n      description: The name of the interface on which queuing is enabled.\n  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: InterfaceQueuingAttribute()\n  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: InterfaceQueuingAttribute(Boolean)\n  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: Enabled\n  nameWithType: InterfaceQueuingAttribute.Enabled\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: Interface\n  nameWithType: InterfaceQueuingAttribute.Interface\n  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: InterfaceQueuingAttribute\n  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: Enabled\n  nameWithType: InterfaceQueuingAttribute.Enabled\n- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*\n  parent: System.EnterpriseServices.InterfaceQueuingAttribute\n  isExternal: false\n  name: Interface\n  nameWithType: InterfaceQueuingAttribute.Interface\n"}