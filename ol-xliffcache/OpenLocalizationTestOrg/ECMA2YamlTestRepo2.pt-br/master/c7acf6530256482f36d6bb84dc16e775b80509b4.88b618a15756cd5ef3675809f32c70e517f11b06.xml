{"nodes":[{"pos":[760,957],"content":"Implements the `Copy` task. Use the `Copy` element in your project file to create and execute this task. For usage and parameter information, see [Copy Task](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">`Copy`</ph> task.","pos":[0,27],"source":"Implements the `Copy` task."},{"content":"Use the <ph id=\"ph1\">`Copy`</ph> element in your project file to create and execute this task.","pos":[28,104],"source":" Use the `Copy` element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>Copy Task<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[105,197],"source":" For usage and parameter information, see [Copy Task](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[1987,2075],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Tasks.Copy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Copy\"></xref> class."},{"pos":[2532,2592],"content":"Stop and return (in an undefined state) as soon as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stop and return (in an undefined state) as soon as possible.","pos":[0,60]}]},{"pos":[3078,3123],"content":"Gets the items that were successfully copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the items that were successfully copied.","pos":[0,45]}]},{"pos":[3294,3334],"content":"The items that were successfully copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The items that were successfully copied.","pos":[0,40]}]},{"pos":[3785,3842],"content":"Gets or sets a list of files to copy the source files to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a list of files to copy the source files to.","pos":[0,57]}]},{"pos":[3854,4180],"content":"The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property. That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in DestinationFiles, and so forth.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property. That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in DestinationFiles, and so forth.","pos":[0,326],"nodes":[{"content":"The list of destination files is expected to be a one-to-one mapping with the list specified in the &lt;xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A&gt; property.","pos":[0,158],"source":"The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property."},{"content":"That is, the first file specified in &lt;xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A&gt; will be copied to the first location specified in DestinationFiles, and so forth.","pos":[159,326],"source":" That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in DestinationFiles, and so forth."}]}]},{"pos":[4361,4407],"content":"The list of files to copy the source files to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of files to copy the source files to.","pos":[0,46]}]},{"pos":[4868,4931],"content":"Gets or sets the directory to which you want to copy the files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the directory to which you want to copy the files.","pos":[0,63]}]},{"pos":[4943,5060],"content":"The destination folder must be a directory, not a file. If the directory does not exist, it is created automatically.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The destination folder must be a directory, not a file. If the directory does not exist, it is created automatically.","pos":[0,117],"nodes":[{"content":"The destination folder must be a directory, not a file.","pos":[0,55]},{"content":"If the directory does not exist, it is created automatically.","pos":[56,117]}]}]},{"pos":[5238,5288],"content":"The directory to which you want to copy the files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory to which you want to copy the files.","pos":[0,50]}]},{"pos":[5704,5729],"content":"Executes the <ph id=\"ph1\">`Copy`</ph> task.","needQuote":true,"needEscape":true,"source":"Executes the `Copy` task."},{"pos":[5863,6027],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if task execution succeeded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6504,6618],"content":"Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.","pos":[0,114]}]},{"pos":[6749,6970],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <ph id=\"ph1\">`Copy`</ph> task should overwrite files even if they are marked as read only files; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Copy` task should overwrite files even if they are marked as read only files; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7388,7554],"content":"How many times to attempt to copy, if all previous attempts failed. Defaults to zero. Warning: using retries may mask a synchronization problem in your build process.","needQuote":false,"needEscape":true,"nodes":[{"content":"How many times to attempt to copy, if all previous attempts failed. Defaults to zero. Warning: using retries may mask a synchronization problem in your build process.","pos":[0,166],"nodes":[{"content":"How many times to attempt to copy, if all previous attempts failed.","pos":[0,67]},{"content":"Defaults to zero.","pos":[68,85]},{"content":"Warning: using retries may mask a synchronization problem in your build process.","pos":[86,166]}]}]},{"pos":[7668,7680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8157,8269],"content":"Delay between any necessary retries. Defaults to <xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay between any necessary retries. Defaults to <xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>","pos":[0,112],"nodes":[{"content":"Delay between any necessary retries.","pos":[0,36]},{"content":"Defaults to &lt;xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault&gt;","pos":[37,112],"source":" Defaults to <xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>"}]}]},{"pos":[8397,8409],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8881,9036],"content":"Gets or sets a Boolean value that indicates whether the <ph id=\"ph1\">`Copy`</ph> task should skip the copying of files that are unchanged between the source and destination.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that indicates whether the `Copy` task should skip the copying of files that are unchanged between the source and destination."},{"pos":[9048,9155],"content":"The <ph id=\"ph1\">`Copy`</ph> task considers files to be unchanged if they have the same size and the same last modified time.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `Copy` task considers files to be unchanged if they have the same size and the same last modified time."},{"pos":[9282,9524],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <ph id=\"ph1\">`Copy`</ph> task should skip the copying of files that are unchanged between the source and destination; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Copy` task should skip the copying of files that are unchanged between the source and destination; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9957,9988],"content":"Gets or sets the files to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the files to copy.","pos":[0,31]}]},{"pos":[10164,10182],"content":"The files to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The files to copy.","pos":[0,18]}]},{"pos":[10663,10702],"content":"Indicates if hard links should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates if hard links should be used.","pos":[0,39]}]},{"pos":[10833,10845],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.Copy\n  id: Copy\n  children:\n  - Microsoft.Build.Tasks.Copy.#ctor\n  - Microsoft.Build.Tasks.Copy.Cancel\n  - Microsoft.Build.Tasks.Copy.CopiedFiles\n  - Microsoft.Build.Tasks.Copy.DestinationFiles\n  - Microsoft.Build.Tasks.Copy.DestinationFolder\n  - Microsoft.Build.Tasks.Copy.Execute\n  - Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles\n  - Microsoft.Build.Tasks.Copy.Retries\n  - Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds\n  - Microsoft.Build.Tasks.Copy.SkipUnchangedFiles\n  - Microsoft.Build.Tasks.Copy.SourceFiles\n  - Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible\n  langs:\n  - csharp\n  name: Copy\n  nameWithType: Copy\n  fullName: Microsoft.Build.Tasks.Copy\n  type: Class\n  summary: Implements the `Copy` task. Use the `Copy` element in your project file to create and execute this task. For usage and parameter information, see [Copy Task](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Tasks.TaskExtension\n  implements:\n  - Microsoft.Build.Framework.ICancelableTask\n  inheritedMembers:\n  - Microsoft.Build.Tasks.TaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: Copy.Copy()\n  fullName: Microsoft.Build.Tasks.Copy.Copy()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.Copy\"></xref> class.\n  syntax:\n    content: public Copy ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Copy.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.Cancel\n  id: Cancel\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: Copy.Cancel()\n  fullName: Microsoft.Build.Tasks.Copy.Cancel()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Stop and return (in an undefined state) as soon as possible.\n  syntax:\n    content: public void Cancel ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Copy.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.CopiedFiles\n  id: CopiedFiles\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: CopiedFiles\n  nameWithType: Copy.CopiedFiles\n  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets the items that were successfully copied.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The items that were successfully copied.\n  overload: Microsoft.Build.Tasks.Copy.CopiedFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.DestinationFiles\n  id: DestinationFiles\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: DestinationFiles\n  nameWithType: Copy.DestinationFiles\n  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a list of files to copy the source files to.\n  remarks: The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property. That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in DestinationFiles, and so forth.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The list of files to copy the source files to.\n  overload: Microsoft.Build.Tasks.Copy.DestinationFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.DestinationFolder\n  id: DestinationFolder\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: DestinationFolder\n  nameWithType: Copy.DestinationFolder\n  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the directory to which you want to copy the files.\n  remarks: The destination folder must be a directory, not a file. If the directory does not exist, it is created automatically.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The directory to which you want to copy the files.\n  overload: Microsoft.Build.Tasks.Copy.DestinationFolder*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: Copy.Execute()\n  fullName: Microsoft.Build.Tasks.Copy.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the `Copy` task.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if task execution succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Copy.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles\n  id: OverwriteReadOnlyFiles\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: OverwriteReadOnlyFiles\n  nameWithType: Copy.OverwriteReadOnlyFiles\n  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.\n  syntax:\n    content: public bool OverwriteReadOnlyFiles { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Copy` task should overwrite files even if they are marked as read only files; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.Retries\n  id: Retries\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: Retries\n  nameWithType: Copy.Retries\n  fullName: Microsoft.Build.Tasks.Copy.Retries\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: 'How many times to attempt to copy, if all previous attempts failed. Defaults to zero. Warning: using retries may mask a synchronization problem in your build process.'\n  syntax:\n    content: public int Retries { get; set; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.Build.Tasks.Copy.Retries*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds\n  id: RetryDelayMilliseconds\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: RetryDelayMilliseconds\n  nameWithType: Copy.RetryDelayMilliseconds\n  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Delay between any necessary retries. Defaults to <xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>\n  syntax:\n    content: public int RetryDelayMilliseconds { get; set; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles\n  id: SkipUnchangedFiles\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: SkipUnchangedFiles\n  nameWithType: Copy.SkipUnchangedFiles\n  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a Boolean value that indicates whether the `Copy` task should skip the copying of files that are unchanged between the source and destination.\n  remarks: The `Copy` task considers files to be unchanged if they have the same size and the same last modified time.\n  syntax:\n    content: public bool SkipUnchangedFiles { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the `Copy` task should skip the copying of files that are unchanged between the source and destination; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.SourceFiles\n  id: SourceFiles\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: SourceFiles\n  nameWithType: Copy.SourceFiles\n  fullName: Microsoft.Build.Tasks.Copy.SourceFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the files to copy.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The files to copy.\n  overload: Microsoft.Build.Tasks.Copy.SourceFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible\n  id: UseHardlinksIfPossible\n  parent: Microsoft.Build.Tasks.Copy\n  langs:\n  - csharp\n  name: UseHardlinksIfPossible\n  nameWithType: Copy.UseHardlinksIfPossible\n  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Indicates if hard links should be used.\n  syntax:\n    content: public bool UseHardlinksIfPossible { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.TaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.TaskExtension\n- uid: Microsoft.Build.Tasks.Copy.#ctor\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Copy()\n  nameWithType: Copy.Copy()\n  fullName: Microsoft.Build.Tasks.Copy.Copy()\n- uid: Microsoft.Build.Tasks.Copy.Cancel\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Cancel()\n  nameWithType: Copy.Cancel()\n  fullName: Microsoft.Build.Tasks.Copy.Cancel()\n- uid: Microsoft.Build.Tasks.Copy.CopiedFiles\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: CopiedFiles\n  nameWithType: Copy.CopiedFiles\n  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Copy.DestinationFiles\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: DestinationFiles\n  nameWithType: Copy.DestinationFiles\n  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles\n- uid: Microsoft.Build.Tasks.Copy.DestinationFolder\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: DestinationFolder\n  nameWithType: Copy.DestinationFolder\n  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder\n- uid: Microsoft.Build.Framework.ITaskItem\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Tasks.Copy.Execute\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Execute()\n  nameWithType: Copy.Execute()\n  fullName: Microsoft.Build.Tasks.Copy.Execute()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: OverwriteReadOnlyFiles\n  nameWithType: Copy.OverwriteReadOnlyFiles\n  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles\n- uid: Microsoft.Build.Tasks.Copy.Retries\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Retries\n  nameWithType: Copy.Retries\n  fullName: Microsoft.Build.Tasks.Copy.Retries\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: RetryDelayMilliseconds\n  nameWithType: Copy.RetryDelayMilliseconds\n  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds\n- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: SkipUnchangedFiles\n  nameWithType: Copy.SkipUnchangedFiles\n  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles\n- uid: Microsoft.Build.Tasks.Copy.SourceFiles\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: SourceFiles\n  nameWithType: Copy.SourceFiles\n  fullName: Microsoft.Build.Tasks.Copy.SourceFiles\n- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: UseHardlinksIfPossible\n  nameWithType: Copy.UseHardlinksIfPossible\n  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible\n- uid: Microsoft.Build.Tasks.Copy.#ctor*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Copy\n  nameWithType: Copy.Copy\n- uid: Microsoft.Build.Tasks.Copy.Cancel*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Cancel\n  nameWithType: Copy.Cancel\n- uid: Microsoft.Build.Tasks.Copy.CopiedFiles*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: CopiedFiles\n  nameWithType: Copy.CopiedFiles\n- uid: Microsoft.Build.Tasks.Copy.DestinationFiles*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: DestinationFiles\n  nameWithType: Copy.DestinationFiles\n- uid: Microsoft.Build.Tasks.Copy.DestinationFolder*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: DestinationFolder\n  nameWithType: Copy.DestinationFolder\n- uid: Microsoft.Build.Tasks.Copy.Execute*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Execute\n  nameWithType: Copy.Execute\n- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: OverwriteReadOnlyFiles\n  nameWithType: Copy.OverwriteReadOnlyFiles\n- uid: Microsoft.Build.Tasks.Copy.Retries*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: Retries\n  nameWithType: Copy.Retries\n- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: RetryDelayMilliseconds\n  nameWithType: Copy.RetryDelayMilliseconds\n- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: SkipUnchangedFiles\n  nameWithType: Copy.SkipUnchangedFiles\n- uid: Microsoft.Build.Tasks.Copy.SourceFiles*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: SourceFiles\n  nameWithType: Copy.SourceFiles\n- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*\n  parent: Microsoft.Build.Tasks.Copy\n  isExternal: false\n  name: UseHardlinksIfPossible\n  nameWithType: Copy.UseHardlinksIfPossible\n"}