{"nodes":[{"pos":[1182,1247],"content":"Describes the column metadata of the schema for a database table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes the column metadata of the schema for a database table.","pos":[0,65]}]},{"pos":[1760,1860],"content":"Specifies whether value <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is allowed.","needQuote":true,"needEscape":true,"source":"Specifies whether value <xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"></xref> is allowed."},{"pos":[1873,2135],"content":"Returns the string \"true\" if DBNull is allowed; otherwise \"false\".      > [!NOTE] >  Avoid setting `AllowDbNull` to \"true\" for primary key columns. A column defined as a primary key can be set to `AllowDbNull`, but a null value cannot be assigned to it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the string \"true\" if DBNull is allowed; otherwise \"false\".","pos":[0,66]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Avoid setting <ph id=\"ph2\">`AllowDbNull`</ph> to \"true\" for primary key columns.","pos":[72,147],"source":"      > [!NOTE] >  Avoid setting `AllowDbNull` to \"true\" for primary key columns."},{"content":"A column defined as a primary key can be set to <ph id=\"ph1\">`AllowDbNull`</ph>, but a null value cannot be assigned to it.","pos":[148,253],"source":" A column defined as a primary key can be set to `AllowDbNull`, but a null value cannot be assigned to it."}]},{"pos":[2260,2272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2683,2736],"content":"Specifies the name of the column in the schema table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the column in the schema table.","pos":[0,53]}]},{"pos":[2863,2875],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3286,3339],"content":"Specifies the name of the schema in the schema table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the schema in the schema table.","pos":[0,53]}]},{"pos":[3466,3478],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3884,3936],"content":"Specifies the name of the table in the schema table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the table in the schema table.","pos":[0,52]}]},{"pos":[4062,4074],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4465,4518],"content":"Specifies the name of the column in the schema table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the column in the schema table.","pos":[0,53]}]},{"pos":[4641,4653],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5059,5095],"content":"Specifies the ordinal of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the ordinal of the column.","pos":[0,36]}]},{"pos":[5221,5233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5624,5657],"content":"Specifies the size of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the size of the column.","pos":[0,33]}]},{"pos":[5780,5792],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6173,6214],"content":"Specifies the type of data in the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the type of data in the column.","pos":[0,41]}]},{"pos":[6335,6347],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6733,6774],"content":"Specifies whether this column is aliased.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this column is aliased.","pos":[0,41]}]},{"pos":[6786,6856],"content":"Returns the string \"true\" if the column is aliased; otherwise \"false\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the string \"true\" if the column is aliased; otherwise \"false\".","pos":[0,70]}]},{"pos":[6978,6990],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7391,7438],"content":"Specifies whether this column is an expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this column is an expression.","pos":[0,47]}]},{"pos":[7450,7526],"content":"Returns the string \"true\" if the column is an expression; otherwise \"false\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the string \"true\" if the column is an expression; otherwise \"false\".","pos":[0,76]}]},{"pos":[7651,7663],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8029,8082],"content":"Specifies whether this column is a key for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this column is a key for the table.","pos":[0,53]}]},{"pos":[8094,8162],"content":"Returns the string \"true\" if the column is a key; otherwise \"false\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the string \"true\" if the column is a key; otherwise \"false\".","pos":[0,68]}]},{"pos":[8280,8292],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8663,8712],"content":"Specifies whether this column contains long data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this column contains long data.","pos":[0,49]}]},{"pos":[8724,8852],"content":"The definition of long data is provider-specific. Returns the string \"true\" if the column contains long data; otherwise \"false\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The definition of long data is provider-specific. Returns the string \"true\" if the column contains long data; otherwise \"false\".","pos":[0,128],"nodes":[{"content":"The definition of long data is provider-specific.","pos":[0,49]},{"content":"Returns the string \"true\" if the column contains long data; otherwise \"false\".","pos":[50,128]}]}]},{"pos":[8971,8983],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9364,9425],"content":"Specifies whether a unique constraint applies to this column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether a unique constraint applies to this column.","pos":[0,61]}]},{"pos":[9437,9528],"content":"Returns the string \"true\" if a unique constraint applies to this column; otherwise \"false\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the string \"true\" if a unique constraint applies to this column; otherwise \"false\".","pos":[0,91]}]},{"pos":[9649,9661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10122,10192],"content":"Specifies the non-versioned provider-specific data type of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the non-versioned provider-specific data type of the column.","pos":[0,70]}]},{"pos":[10329,10341],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10762,10829],"content":"Specifies the precision of the column data, if the data is numeric.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the precision of the column data, if the data is numeric.","pos":[0,67]}]},{"pos":[10958,10970],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11371,11434],"content":"Specifies the scale of the column data, if the data is numeric.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the scale of the column data, if the data is numeric.","pos":[0,63]}]},{"pos":[11559,11571],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11972,12028],"content":"Specifies the provider-specific data type of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the provider-specific data type of the column.","pos":[0,56]}]},{"pos":[12153,12165],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.SchemaTableColumn\n  id: SchemaTableColumn\n  children:\n  - System.Data.Common.SchemaTableColumn.AllowDBNull\n  - System.Data.Common.SchemaTableColumn.BaseColumnName\n  - System.Data.Common.SchemaTableColumn.BaseSchemaName\n  - System.Data.Common.SchemaTableColumn.BaseTableName\n  - System.Data.Common.SchemaTableColumn.ColumnName\n  - System.Data.Common.SchemaTableColumn.ColumnOrdinal\n  - System.Data.Common.SchemaTableColumn.ColumnSize\n  - System.Data.Common.SchemaTableColumn.DataType\n  - System.Data.Common.SchemaTableColumn.IsAliased\n  - System.Data.Common.SchemaTableColumn.IsExpression\n  - System.Data.Common.SchemaTableColumn.IsKey\n  - System.Data.Common.SchemaTableColumn.IsLong\n  - System.Data.Common.SchemaTableColumn.IsUnique\n  - System.Data.Common.SchemaTableColumn.NonVersionedProviderType\n  - System.Data.Common.SchemaTableColumn.NumericPrecision\n  - System.Data.Common.SchemaTableColumn.NumericScale\n  - System.Data.Common.SchemaTableColumn.ProviderType\n  langs:\n  - csharp\n  name: SchemaTableColumn\n  nameWithType: SchemaTableColumn\n  fullName: System.Data.Common.SchemaTableColumn\n  type: Class\n  summary: Describes the column metadata of the schema for a database table.\n  syntax:\n    content: public static class SchemaTableColumn\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.AllowDBNull\n  id: AllowDBNull\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: AllowDBNull\n  nameWithType: SchemaTableColumn.AllowDBNull\n  fullName: System.Data.Common.SchemaTableColumn.AllowDBNull\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether value <xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"></xref> is allowed.\n  remarks: \"Returns the string \\\"true\\\" if DBNull is allowed; otherwise \\\"false\\\".  \\n  \\n> [!NOTE]\\n>  Avoid setting `AllowDbNull` to \\\"true\\\" for primary key columns. A column defined as a primary key can be set to `AllowDbNull`, but a null value cannot be assigned to it.\"\n  syntax:\n    content: public static readonly string AllowDBNull;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.BaseColumnName\n  id: BaseColumnName\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: BaseColumnName\n  nameWithType: SchemaTableColumn.BaseColumnName\n  fullName: System.Data.Common.SchemaTableColumn.BaseColumnName\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the name of the column in the schema table.\n  syntax:\n    content: public static readonly string BaseColumnName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.BaseSchemaName\n  id: BaseSchemaName\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: BaseSchemaName\n  nameWithType: SchemaTableColumn.BaseSchemaName\n  fullName: System.Data.Common.SchemaTableColumn.BaseSchemaName\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the name of the schema in the schema table.\n  syntax:\n    content: public static readonly string BaseSchemaName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.BaseTableName\n  id: BaseTableName\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: BaseTableName\n  nameWithType: SchemaTableColumn.BaseTableName\n  fullName: System.Data.Common.SchemaTableColumn.BaseTableName\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the name of the table in the schema table.\n  syntax:\n    content: public static readonly string BaseTableName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.ColumnName\n  id: ColumnName\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: ColumnName\n  nameWithType: SchemaTableColumn.ColumnName\n  fullName: System.Data.Common.SchemaTableColumn.ColumnName\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the name of the column in the schema table.\n  syntax:\n    content: public static readonly string ColumnName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.ColumnOrdinal\n  id: ColumnOrdinal\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: ColumnOrdinal\n  nameWithType: SchemaTableColumn.ColumnOrdinal\n  fullName: System.Data.Common.SchemaTableColumn.ColumnOrdinal\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the ordinal of the column.\n  syntax:\n    content: public static readonly string ColumnOrdinal;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.ColumnSize\n  id: ColumnSize\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: ColumnSize\n  nameWithType: SchemaTableColumn.ColumnSize\n  fullName: System.Data.Common.SchemaTableColumn.ColumnSize\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the size of the column.\n  syntax:\n    content: public static readonly string ColumnSize;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.DataType\n  id: DataType\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: DataType\n  nameWithType: SchemaTableColumn.DataType\n  fullName: System.Data.Common.SchemaTableColumn.DataType\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the type of data in the column.\n  syntax:\n    content: public static readonly string DataType;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.IsAliased\n  id: IsAliased\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: IsAliased\n  nameWithType: SchemaTableColumn.IsAliased\n  fullName: System.Data.Common.SchemaTableColumn.IsAliased\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether this column is aliased.\n  remarks: Returns the string \"true\" if the column is aliased; otherwise \"false\".\n  syntax:\n    content: public static readonly string IsAliased;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.IsExpression\n  id: IsExpression\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: IsExpression\n  nameWithType: SchemaTableColumn.IsExpression\n  fullName: System.Data.Common.SchemaTableColumn.IsExpression\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether this column is an expression.\n  remarks: Returns the string \"true\" if the column is an expression; otherwise \"false\".\n  syntax:\n    content: public static readonly string IsExpression;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.IsKey\n  id: IsKey\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: IsKey\n  nameWithType: SchemaTableColumn.IsKey\n  fullName: System.Data.Common.SchemaTableColumn.IsKey\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether this column is a key for the table.\n  remarks: Returns the string \"true\" if the column is a key; otherwise \"false\".\n  syntax:\n    content: public static readonly string IsKey;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.IsLong\n  id: IsLong\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: IsLong\n  nameWithType: SchemaTableColumn.IsLong\n  fullName: System.Data.Common.SchemaTableColumn.IsLong\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether this column contains long data.\n  remarks: The definition of long data is provider-specific. Returns the string \"true\" if the column contains long data; otherwise \"false\".\n  syntax:\n    content: public static readonly string IsLong;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.IsUnique\n  id: IsUnique\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: IsUnique\n  nameWithType: SchemaTableColumn.IsUnique\n  fullName: System.Data.Common.SchemaTableColumn.IsUnique\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies whether a unique constraint applies to this column.\n  remarks: Returns the string \"true\" if a unique constraint applies to this column; otherwise \"false\".\n  syntax:\n    content: public static readonly string IsUnique;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.NonVersionedProviderType\n  id: NonVersionedProviderType\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: NonVersionedProviderType\n  nameWithType: SchemaTableColumn.NonVersionedProviderType\n  fullName: System.Data.Common.SchemaTableColumn.NonVersionedProviderType\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the non-versioned provider-specific data type of the column.\n  syntax:\n    content: public static readonly string NonVersionedProviderType;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.NumericPrecision\n  id: NumericPrecision\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: NumericPrecision\n  nameWithType: SchemaTableColumn.NumericPrecision\n  fullName: System.Data.Common.SchemaTableColumn.NumericPrecision\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the precision of the column data, if the data is numeric.\n  syntax:\n    content: public static readonly string NumericPrecision;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.NumericScale\n  id: NumericScale\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: NumericScale\n  nameWithType: SchemaTableColumn.NumericScale\n  fullName: System.Data.Common.SchemaTableColumn.NumericScale\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the scale of the column data, if the data is numeric.\n  syntax:\n    content: public static readonly string NumericScale;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.SchemaTableColumn.ProviderType\n  id: ProviderType\n  parent: System.Data.Common.SchemaTableColumn\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: SchemaTableColumn.ProviderType\n  fullName: System.Data.Common.SchemaTableColumn.ProviderType\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Specifies the provider-specific data type of the column.\n  syntax:\n    content: public static readonly string ProviderType;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.SchemaTableColumn.AllowDBNull\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: AllowDBNull\n  nameWithType: SchemaTableColumn.AllowDBNull\n  fullName: System.Data.Common.SchemaTableColumn.AllowDBNull\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.SchemaTableColumn.BaseColumnName\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: BaseColumnName\n  nameWithType: SchemaTableColumn.BaseColumnName\n  fullName: System.Data.Common.SchemaTableColumn.BaseColumnName\n- uid: System.Data.Common.SchemaTableColumn.BaseSchemaName\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: BaseSchemaName\n  nameWithType: SchemaTableColumn.BaseSchemaName\n  fullName: System.Data.Common.SchemaTableColumn.BaseSchemaName\n- uid: System.Data.Common.SchemaTableColumn.BaseTableName\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: BaseTableName\n  nameWithType: SchemaTableColumn.BaseTableName\n  fullName: System.Data.Common.SchemaTableColumn.BaseTableName\n- uid: System.Data.Common.SchemaTableColumn.ColumnName\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: ColumnName\n  nameWithType: SchemaTableColumn.ColumnName\n  fullName: System.Data.Common.SchemaTableColumn.ColumnName\n- uid: System.Data.Common.SchemaTableColumn.ColumnOrdinal\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: ColumnOrdinal\n  nameWithType: SchemaTableColumn.ColumnOrdinal\n  fullName: System.Data.Common.SchemaTableColumn.ColumnOrdinal\n- uid: System.Data.Common.SchemaTableColumn.ColumnSize\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: ColumnSize\n  nameWithType: SchemaTableColumn.ColumnSize\n  fullName: System.Data.Common.SchemaTableColumn.ColumnSize\n- uid: System.Data.Common.SchemaTableColumn.DataType\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: DataType\n  nameWithType: SchemaTableColumn.DataType\n  fullName: System.Data.Common.SchemaTableColumn.DataType\n- uid: System.Data.Common.SchemaTableColumn.IsAliased\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: IsAliased\n  nameWithType: SchemaTableColumn.IsAliased\n  fullName: System.Data.Common.SchemaTableColumn.IsAliased\n- uid: System.Data.Common.SchemaTableColumn.IsExpression\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: IsExpression\n  nameWithType: SchemaTableColumn.IsExpression\n  fullName: System.Data.Common.SchemaTableColumn.IsExpression\n- uid: System.Data.Common.SchemaTableColumn.IsKey\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: IsKey\n  nameWithType: SchemaTableColumn.IsKey\n  fullName: System.Data.Common.SchemaTableColumn.IsKey\n- uid: System.Data.Common.SchemaTableColumn.IsLong\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: IsLong\n  nameWithType: SchemaTableColumn.IsLong\n  fullName: System.Data.Common.SchemaTableColumn.IsLong\n- uid: System.Data.Common.SchemaTableColumn.IsUnique\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: IsUnique\n  nameWithType: SchemaTableColumn.IsUnique\n  fullName: System.Data.Common.SchemaTableColumn.IsUnique\n- uid: System.Data.Common.SchemaTableColumn.NonVersionedProviderType\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: NonVersionedProviderType\n  nameWithType: SchemaTableColumn.NonVersionedProviderType\n  fullName: System.Data.Common.SchemaTableColumn.NonVersionedProviderType\n- uid: System.Data.Common.SchemaTableColumn.NumericPrecision\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: NumericPrecision\n  nameWithType: SchemaTableColumn.NumericPrecision\n  fullName: System.Data.Common.SchemaTableColumn.NumericPrecision\n- uid: System.Data.Common.SchemaTableColumn.NumericScale\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: NumericScale\n  nameWithType: SchemaTableColumn.NumericScale\n  fullName: System.Data.Common.SchemaTableColumn.NumericScale\n- uid: System.Data.Common.SchemaTableColumn.ProviderType\n  parent: System.Data.Common.SchemaTableColumn\n  isExternal: false\n  name: ProviderType\n  nameWithType: SchemaTableColumn.ProviderType\n  fullName: System.Data.Common.SchemaTableColumn.ProviderType\n"}