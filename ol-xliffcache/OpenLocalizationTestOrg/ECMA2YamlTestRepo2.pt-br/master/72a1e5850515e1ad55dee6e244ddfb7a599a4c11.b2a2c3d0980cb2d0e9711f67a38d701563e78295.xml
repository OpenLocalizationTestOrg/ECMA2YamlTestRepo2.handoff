{"nodes":[{"pos":[2038,2075],"content":"Provides media playback for drawings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides media playback for drawings.","pos":[0,37]}]},{"pos":[2088,3909],"content":"Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code. To play media in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>. Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.       When distributing media with your application, you cannot use a media file as a project resource. In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.       MediaPlayer can be used in two different modes, depending on what is driving the player: independent mode or clock mode. In independent mode, the MediaPlayer is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback. In Clock mode, the MediaPlayer can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback. For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md).       MediaPlayer is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of an application. To display media loaded using MediaPlayer, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although you can declare an instance of this class in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, you cannot load and play its media without using code.","pos":[0,173],"source":"Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code."},{"content":"To play media in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> only, use a &lt;xref:System.Windows.Controls.MediaElement&gt;.","pos":[174,313],"source":" To play media in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>."},{"content":"Also, if you declare an instance in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the only practical use is to fill property element syntax for the &lt;xref:System.Windows.Media.VideoDrawing.Player%2A&gt; property.","pos":[314,543],"source":" Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property."},{"content":"When distributing media with your application, you cannot use a media file as a project resource.","pos":[550,647]},{"content":"In your project file, you must instead set the media type to <ph id=\"ph1\">`Content`</ph> and set <ph id=\"ph2\">`CopyToOutputDirectory`</ph> to <ph id=\"ph3\">`PreserveNewest`</ph> or <ph id=\"ph4\">`Always`</ph>.","pos":[648,783],"source":" In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`."},{"content":"MediaPlayer can be used in two different modes, depending on what is driving the player: independent mode or clock mode.","pos":[790,910]},{"content":"In independent mode, the MediaPlayer is analogous to an image and the media opened through the &lt;xref:System.Windows.Media.MediaPlayer.Open%2A&gt; method drives playback.","pos":[911,1077],"source":" In independent mode, the MediaPlayer is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback."},{"content":"In Clock mode, the MediaPlayer can be thought of as a target for an animation, and thus it will have corresponding &lt;xref:System.Windows.Media.Animation.Timeline&gt; and &lt;xref:System.Windows.Media.Animation.Clock&gt; entries in the Timing tree which controls playback.","pos":[1078,1339],"source":" In Clock mode, the MediaPlayer can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback."},{"content":"For more information on media modes, see the <bpt id=\"p1\">[</bpt>Multimedia Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1340,1446],"source":" For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"MediaPlayer is different from a &lt;xref:System.Windows.Controls.MediaElement&gt; in that it is not a control that can be added directly to the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> of an application.","pos":[1453,1669],"source":"       MediaPlayer is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of an application."},{"content":"To display media loaded using MediaPlayer, a &lt;xref:System.Windows.Media.VideoDrawing&gt; or &lt;xref:System.Windows.Media.DrawingContext&gt; must be used.","pos":[1670,1815],"source":" To display media loaded using MediaPlayer, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used."}]},{"pos":[8075,8169],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.MediaPlayer\"></xref> class."},{"pos":[8654,8722],"content":"Gets or sets the balance between the left and right speaker volumes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the balance between the left and right speaker volumes.","pos":[0,68]}]},{"pos":[8734,8839],"content":"A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.","pos":[0,105]}]},{"pos":[8956,9057],"content":"The ratio of volume across the left and right speakers in a range between -1 and 1. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ratio of volume across the left and right speakers in a range between -1 and 1. The default is 0.","pos":[0,101],"nodes":[{"content":"The ratio of volume across the left and right speakers in a range between -1 and 1.","pos":[0,83]},{"content":"The default is 0.","pos":[84,101]}]}]},{"pos":[9511,9546],"content":"Occurs when buffering has finished.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when buffering has finished.","pos":[0,35]}]},{"pos":[9675,9687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10105,10170],"content":"Gets the percentage of buffering completed for streaming content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the percentage of buffering completed for streaming content.","pos":[0,65]}]},{"pos":[10292,10391],"content":"The percentage of buffering completed for streaming content represented in a value between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The percentage of buffering completed for streaming content represented in a value between 0 and 1.","pos":[0,99]}]},{"pos":[10865,10899],"content":"Occurs when buffering has started.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when buffering has started.","pos":[0,34]}]},{"pos":[11030,11042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11415,11471],"content":"Gets a value indicating whether the media can be paused.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the media can be paused.","pos":[0,56]}]},{"pos":[11583,11633],"content":"true if the media can be paused; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the media can be paused; otherwise, false.","pos":[0,50]}]},{"pos":[12046,12205],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaClock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.MediaTimeline\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to be played.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Media.MediaClock\"></xref> associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> to be played."},{"pos":[12218,12885],"content":"Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode. Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.       When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>. These operations are only available when the player Clock is null.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode. Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.       When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>. These operations are only available when the player Clock is null.","pos":[0,665],"nodes":[{"content":"Setting this property tells the &lt;xref:System.Windows.Media.MediaPlayer&gt; to be clock driven and will utilize the timing engine, placing the player in Clock mode.","pos":[0,160],"source":"Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode."},{"content":"Any media that is playing is stopped and the &lt;xref:System.Uri&gt; associated with the new clock is opened.","pos":[161,264],"source":" Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened."},{"content":"When the player is in clock mode, seeking using &lt;xref:System.Windows.Media.MediaPlayer.Position%2A&gt; or calling the &lt;xref:System.Windows.Media.MediaPlayer.Play%2A&gt;, &lt;xref:System.Windows.Media.MediaPlayer.Pause%2A&gt;, or &lt;xref:System.Windows.Media.MediaPlayer.Stop%2A&gt; methods will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[271,598],"source":"       When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>."},{"content":"These operations are only available when the player Clock is null.","pos":[599,665]}]}]},{"pos":[13044,13164],"content":"The clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> to be played. The default is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The clock associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaTimeline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be played.","pos":[0,99],"source":"The clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> to be played."},{"content":"The default is null.","pos":[100,120]}]},{"pos":[13677,13952],"content":"Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,103],"source":"Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref>."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[104,275]}]},{"pos":[13965,14408],"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.","pos":[0,441],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,200],"source":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.Clone%2A&gt; instead of calling this method directly.","pos":[201,338],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName&gt;.","pos":[345,441],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>."}]}]},{"pos":[14609,14676],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> to clone."},{"pos":[15253,15494],"content":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a modifiable deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using current property values.","pos":[0,144],"source":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref> using current property values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[145,241]}]},{"pos":[15507,15986],"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","pos":[0,477],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,212],"source":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; instead of calling this method directly.","pos":[213,362],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName&gt;.","pos":[369,477],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>."}]}]},{"pos":[16199,16266],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> to clone."},{"pos":[16696,16724],"content":"Closes the underlying media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the underlying media.","pos":[0,28]}]},{"pos":[16736,16870],"content":"The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Media.MediaPlayer&gt; can be opened again by calling the &lt;xref:System.Windows.Media.MediaPlayer.Open%2A&gt; method.","pos":[0,134],"source":"The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method."}]},{"pos":[17413,17490],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Windows.Media.MediaPlayer\"></xref> instance."},{"pos":[17668,17737],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Windows.Media.MediaPlayer\"></xref> instance."},{"pos":[18215,18295],"content":"Gets the percentage of download progress for content located at a remote server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the percentage of download progress for content located at a remote server.","pos":[0,80]}]},{"pos":[18416,18548],"content":"The percentage of download progress for content located at a remote server represented by a value between 0 and 1. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The percentage of download progress for content located at a remote server represented by a value between 0 and 1. The default is 0.","pos":[0,132],"nodes":[{"content":"The percentage of download progress for content located at a remote server represented by a value between 0 and 1.","pos":[0,114]},{"content":"The default is 0.","pos":[115,132]}]}]},{"pos":[19102,19208],"content":"Makes this instance a clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Makes this instance a clone of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref> object."},{"pos":[19221,20083],"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","pos":[0,858],"nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,171]},{"content":"Note that if these properties contain resource references or data bindings, &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; will fail when trying to freeze the object and will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[172,396],"source":" Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>."},{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[403,609],"source":"       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; instead of calling this method directly.","pos":[610,749],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName&gt;.","pos":[756,858],"source":"       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>."}]}]},{"pos":[20290,20375],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.MediaPlayer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to clone and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> object to clone and freeze."},{"pos":[20810,20874],"content":"Gets a value that indicating whether the media has audio output.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicating whether the media has audio output.","pos":[0,64]}]},{"pos":[20986,21039],"content":"true if the media has audio output; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the media has audio output; otherwise, false.","pos":[0,53]}]},{"pos":[21467,21530],"content":"Gets a value that indicates whether the media has video output.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the media has video output.","pos":[0,63]}]},{"pos":[21642,21695],"content":"true if the media has video output; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the media has video output; otherwise, false.","pos":[0,53]}]},{"pos":[22138,22197],"content":"Gets a value that indicates whether the media is buffering.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the media is buffering.","pos":[0,59]}]},{"pos":[22312,22361],"content":"true if the media is buffering; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the media is buffering; otherwise, false.","pos":[0,49]}]},{"pos":[22787,22842],"content":"Gets a value that indicates whether the media is muted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the media is muted.","pos":[0,55]}]},{"pos":[22958,23003],"content":"true if the media is muted; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the media is muted; otherwise, false.","pos":[0,45]}]},{"pos":[23437,23481],"content":"Occurs when the media has finished playback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the media has finished playback.","pos":[0,44]}]},{"pos":[23606,23618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24003,24038],"content":"Occurs when an error is encountered","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an error is encountered","pos":[0,35]}]},{"pos":[24051,24186],"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_MediaFailed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object MediaFailed=\"EventHandler\"/&gt;   ```</ph>","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlAttributeUsage_MediaFailed\"></a>    ## XAML Attribute Usage      ```   <object MediaFailed=\"EventHandler\"/>   ```"},{"pos":[24395,24407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24792,24824],"content":"Occurs when the media is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the media is opened.","pos":[0,32]}]},{"pos":[24950,24962],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25370,25409],"content":"Gets the natural duration of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the natural duration of the media.","pos":[0,39]}]},{"pos":[25421,25535],"content":"NaturalDuration cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"NaturalDuration cannot be determined until after &lt;xref:System.Windows.Media.MediaPlayer.MediaOpened&gt; has occurred.","pos":[0,114],"source":"NaturalDuration cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred."}]},{"pos":[25682,25774],"content":"The natural duration of the media. The default is <xref:System.Windows.Duration.Automatic*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The natural duration of the media. The default is <xref:System.Windows.Duration.Automatic*>.","pos":[0,92],"nodes":[{"content":"The natural duration of the media.","pos":[0,34]},{"content":"The default is &lt;xref:System.Windows.Duration.Automatic*&gt;.","pos":[35,92],"source":" The default is <xref:System.Windows.Duration.Automatic*>."}]}]},{"pos":[26259,26294],"content":"Gets the pixel height of the video.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the pixel height of the video.","pos":[0,35]}]},{"pos":[26306,26350],"content":"Null is returned if the media type is audio.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Null is returned if the media type is audio.","pos":[0,44]}]},{"pos":[26469,26499],"content":"The pixel height of the video.","needQuote":true,"needEscape":true,"nodes":[{"content":"The pixel height of the video.","pos":[0,30]}]},{"pos":[26982,27016],"content":"Gets the pixel width of the video.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the pixel width of the video.","pos":[0,34]}]},{"pos":[27028,27072],"content":"Null is returned if the media type is audio.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Null is returned if the media type is audio.","pos":[0,44]}]},{"pos":[27190,27219],"content":"The pixel width of the video.","needQuote":true,"needEscape":true,"nodes":[{"content":"The pixel width of the video.","pos":[0,29]}]},{"pos":[27673,27726],"content":"Opens the given <xref:System.Uri> for media playback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens the given &lt;xref:System.Uri&gt; for media playback.","pos":[0,53],"source":"Opens the given <xref:System.Uri> for media playback."}]},{"pos":[27856,27891],"content":"The media source <xref:System.Uri>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The media source &lt;xref:System.Uri&gt;.","pos":[0,35],"source":"The media source <xref:System.Uri>."}]},{"pos":[28304,28326],"content":"Pauses media playback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pauses media playback.","pos":[0,22]}]},{"pos":[28338,28557],"content":"Calling Pause when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Pause cannot be called while the timing engine drives media playback.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling Pause when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Pause cannot be called while the timing engine drives media playback.","pos":[0,219],"nodes":[{"content":"Calling Pause when a player has an associated &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt; will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[0,149],"source":"Calling Pause when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>."},{"content":"Pause cannot be called while the timing engine drives media playback.","pos":[150,219]}]}]},{"pos":[29030,29109],"content":"Plays media from the current <xref:System.Windows.Media.MediaPlayer.Position*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Plays media from the current &lt;xref:System.Windows.Media.MediaPlayer.Position*&gt;.","pos":[0,79],"source":"Plays media from the current <xref:System.Windows.Media.MediaPlayer.Position*>."}]},{"pos":[29121,29338],"content":"Calling Play when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Play cannot be called while the timing engine drives media playback.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling Play when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Play cannot be called while the timing engine drives media playback.","pos":[0,217],"nodes":[{"content":"Calling Play when a player has an associated &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt; will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[0,148],"source":"Calling Play when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>."},{"content":"Play cannot be called while the timing engine drives media playback.","pos":[149,217]}]}]},{"pos":[29825,29872],"content":"Gets or sets the current position of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current position of the media.","pos":[0,47]}]},{"pos":[29885,30271],"content":"If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting Position will throw an <xref:System.InvalidOperationException>. Position cannot be set while the timing engine drives media playback.      <a name=\"xamlTextUsage_Position\"></a>    ## XAML Text Usage    Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the player has an associated &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;, setting Position will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[0,153],"source":"If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting Position will throw an <xref:System.InvalidOperationException>."},{"content":"Position cannot be set while the timing engine drives media playback.","pos":[154,223]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Position\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    Not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[229,380],"source":"<a name=\"xamlTextUsage_Position\"></a>    ## XAML Text Usage    Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[30394,30428],"content":"The current position of the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current position of the media.","pos":[0,34]}]},{"pos":[30880,30947],"content":"Ensures that the MediaPlayer is being accessed from a valid thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ensures that the MediaPlayer is being accessed from a valid thread.","pos":[0,67]}]},{"pos":[31475,31542],"content":"Occurs when a script command has been encountered within the media.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a script command has been encountered within the media.","pos":[0,67]}]},{"pos":[31555,31694],"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_ScriptCommand\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object ScriptCommand=\"EventHandler\"/&gt;   ```</ph>","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlAttributeUsage_ScriptCommand\"></a>    ## XAML Attribute Usage      ```   <object ScriptCommand=\"EventHandler\"/>   ```"},{"pos":[31923,31935],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32348,32413],"content":"Gets or sets a value that indicates whether scrubbing is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether scrubbing is enabled.","pos":[0,65]}]},{"pos":[32538,32698],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if scrubbing is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if scrubbing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33124,33157],"content":"Gets the media <xref:System.Uri>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the media &lt;xref:System.Uri&gt;.","pos":[0,33],"source":"Gets the media <xref:System.Uri>."}]},{"pos":[33169,33407],"content":"Source is read-only. This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Source is read-only. This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.","pos":[0,238],"nodes":[{"content":"Source is read-only.","pos":[0,20]},{"content":"This property gets the &lt;xref:System.Uri&gt; that is opened through the &lt;xref:System.Windows.Media.MediaPlayer.Open%2A&gt; method or the &lt;xref:System.Uri&gt; associated with the &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;.","pos":[21,238],"source":" This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>."}]}]},{"pos":[33512,33548],"content":"The current media <xref:System.Uri>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current media &lt;xref:System.Uri&gt;.","pos":[0,36],"source":"The current media <xref:System.Uri>."}]},{"pos":[33984,34040],"content":"Gets or sets the ratio of speed that media is played at.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the ratio of speed that media is played at.","pos":[0,56]}]},{"pos":[34053,34651],"content":"Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.       If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting SpeedRatio is not allowed. SpeedRatio cannot be set while the timing engine drives media playback.       Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.      <a name=\"xamlTextUsage_SpeedRatio\"></a>    ## XAML Text Usage    Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.","pos":[0,120]},{"content":"If the player has an associated &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;, setting SpeedRatio is not allowed.","pos":[127,243],"source":"       If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting SpeedRatio is not allowed."},{"content":"SpeedRatio cannot be set while the timing engine drives media playback.","pos":[244,315]},{"content":"Audio playback is not guaranteed when &lt;xref:System.Windows.Controls.MediaElement.SpeedRatio%2A&gt; is not <ph id=\"ph1\">`1`</ph>.","pos":[322,429],"source":"       Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_SpeedRatio\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    Not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[435,588],"source":"<a name=\"xamlTextUsage_SpeedRatio\"></a>    ## XAML Text Usage    Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[34772,34899],"content":"The ratio of speed that media is played back represented by a value between 0 and the largest double value. The default is 1.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ratio of speed that media is played back represented by a value between 0 and the largest double value. The default is 1.0.","pos":[0,127],"nodes":[{"content":"The ratio of speed that media is played back represented by a value between 0 and the largest double value.","pos":[0,107]},{"content":"The default is 1.0.","pos":[108,127]}]}]},{"pos":[35313,35334],"content":"Stops media playback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops media playback.","pos":[0,21]}]},{"pos":[35346,35563],"content":"Calling Stop when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Stop cannot be called while the timing engine drives media playback.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling Stop when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Stop cannot be called while the timing engine drives media playback.","pos":[0,217],"nodes":[{"content":"Calling Stop when a player has an associated &lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt; will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[0,148],"source":"Calling Stop when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>."},{"content":"Stop cannot be called while the timing engine drives media playback.","pos":[149,217]}]}]},{"pos":[36040,36072],"content":"Gets or sets the media's volume.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the media's volume.","pos":[0,32]}]},{"pos":[36085,36238],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Volume\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    Not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlTextUsage_Volume\"></a>    ## XAML Text Usage    Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"pos":[36355,36440],"content":"The media's volume represented on a linear scale between 0 and 1. The default is 0.5.","needQuote":true,"needEscape":true,"nodes":[{"content":"The media's volume represented on a linear scale between 0 and 1. The default is 0.5.","pos":[0,85],"nodes":[{"content":"The media's volume represented on a linear scale between 0 and 1.","pos":[0,65]},{"content":"The default is 0.5.","pos":[66,85]}]}]},{"pos":[36895,37000],"content":"Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.","pos":[0,105]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.MediaPlayer\n  id: MediaPlayer\n  children:\n  - System.Windows.Media.MediaPlayer.#ctor\n  - System.Windows.Media.MediaPlayer.Balance\n  - System.Windows.Media.MediaPlayer.BufferingEnded\n  - System.Windows.Media.MediaPlayer.BufferingProgress\n  - System.Windows.Media.MediaPlayer.BufferingStarted\n  - System.Windows.Media.MediaPlayer.CanPause\n  - System.Windows.Media.MediaPlayer.Clock\n  - System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.MediaPlayer.Close\n  - System.Windows.Media.MediaPlayer.CreateInstanceCore\n  - System.Windows.Media.MediaPlayer.DownloadProgress\n  - System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.MediaPlayer.HasAudio\n  - System.Windows.Media.MediaPlayer.HasVideo\n  - System.Windows.Media.MediaPlayer.IsBuffering\n  - System.Windows.Media.MediaPlayer.IsMuted\n  - System.Windows.Media.MediaPlayer.MediaEnded\n  - System.Windows.Media.MediaPlayer.MediaFailed\n  - System.Windows.Media.MediaPlayer.MediaOpened\n  - System.Windows.Media.MediaPlayer.NaturalDuration\n  - System.Windows.Media.MediaPlayer.NaturalVideoHeight\n  - System.Windows.Media.MediaPlayer.NaturalVideoWidth\n  - System.Windows.Media.MediaPlayer.Open(System.Uri)\n  - System.Windows.Media.MediaPlayer.Pause\n  - System.Windows.Media.MediaPlayer.Play\n  - System.Windows.Media.MediaPlayer.Position\n  - System.Windows.Media.MediaPlayer.ReadPreamble\n  - System.Windows.Media.MediaPlayer.ScriptCommand\n  - System.Windows.Media.MediaPlayer.ScrubbingEnabled\n  - System.Windows.Media.MediaPlayer.Source\n  - System.Windows.Media.MediaPlayer.SpeedRatio\n  - System.Windows.Media.MediaPlayer.Stop\n  - System.Windows.Media.MediaPlayer.Volume\n  - System.Windows.Media.MediaPlayer.WritePreamble\n  langs:\n  - csharp\n  name: MediaPlayer\n  nameWithType: MediaPlayer\n  fullName: System.Windows.Media.MediaPlayer\n  type: Class\n  summary: Provides media playback for drawings.\n  remarks: \"Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code. To play media in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>. Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.  \\n  \\n When distributing media with your application, you cannot use a media file as a project resource. In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.  \\n  \\n MediaPlayer can be used in two different modes, depending on what is driving the player: independent mode or clock mode. In independent mode, the MediaPlayer is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback. In Clock mode, the MediaPlayer can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback. For more information on media modes, see the [Multimedia Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n MediaPlayer is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of an application. To display media loaded using MediaPlayer, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used.\"\n  example:\n  - '[How to: Play Media using a VideoDrawing](~/add/includes/ajax-current-ext-md.md)'\n  syntax:\n    content: 'public class MediaPlayer : System.Windows.Media.Animation.Animatable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.Clone\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: MediaPlayer()\n  nameWithType: MediaPlayer.MediaPlayer()\n  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.MediaPlayer\"></xref> class.\n  syntax:\n    content: public MediaPlayer ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Balance\n  id: Balance\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Balance\n  nameWithType: MediaPlayer.Balance\n  fullName: System.Windows.Media.MediaPlayer.Balance\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the balance between the left and right speaker volumes.\n  remarks: A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.\n  syntax:\n    content: public double Balance { get; set; }\n    return:\n      type: System.Double\n      description: The ratio of volume across the left and right speakers in a range between -1 and 1. The default is 0.\n  overload: System.Windows.Media.MediaPlayer.Balance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.BufferingEnded\n  id: BufferingEnded\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: BufferingEnded\n  nameWithType: MediaPlayer.BufferingEnded\n  fullName: System.Windows.Media.MediaPlayer.BufferingEnded\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when buffering has finished.\n  syntax:\n    content: public event EventHandler BufferingEnded;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.BufferingProgress\n  id: BufferingProgress\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: BufferingProgress\n  nameWithType: MediaPlayer.BufferingProgress\n  fullName: System.Windows.Media.MediaPlayer.BufferingProgress\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the percentage of buffering completed for streaming content.\n  syntax:\n    content: public double BufferingProgress { get; }\n    return:\n      type: System.Double\n      description: The percentage of buffering completed for streaming content represented in a value between 0 and 1.\n  overload: System.Windows.Media.MediaPlayer.BufferingProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.BufferingStarted\n  id: BufferingStarted\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: BufferingStarted\n  nameWithType: MediaPlayer.BufferingStarted\n  fullName: System.Windows.Media.MediaPlayer.BufferingStarted\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when buffering has started.\n  syntax:\n    content: public event EventHandler BufferingStarted;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.CanPause\n  id: CanPause\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: CanPause\n  nameWithType: MediaPlayer.CanPause\n  fullName: System.Windows.Media.MediaPlayer.CanPause\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value indicating whether the media can be paused.\n  syntax:\n    content: public bool CanPause { get; }\n    return:\n      type: System.Boolean\n      description: true if the media can be paused; otherwise, false.\n  overload: System.Windows.Media.MediaPlayer.CanPause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Clock\n  id: Clock\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Clock\n  nameWithType: MediaPlayer.Clock\n  fullName: System.Windows.Media.MediaPlayer.Clock\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the <xref href=\"System.Windows.Media.MediaClock\"></xref> associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> to be played.\n  remarks: \"Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode. Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.  \\n  \\n When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>. These operations are only available when the player Clock is null.\"\n  syntax:\n    content: public System.Windows.Media.MediaClock Clock { get; set; }\n    return:\n      type: System.Windows.Media.MediaClock\n      description: The clock associated with the <xref href=\"System.Windows.Media.MediaTimeline\"></xref> to be played. The default is null.\n  overload: System.Windows.Media.MediaPlayer.Clock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: MediaPlayer.CloneCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> to clone.\n  overload: System.Windows.Media.MediaPlayer.CloneCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> to clone.\n  overload: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Close\n  id: Close\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: MediaPlayer.Close()\n  fullName: System.Windows.Media.MediaPlayer.Close()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Closes the underlying media.\n  remarks: The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: MediaPlayer.CreateInstanceCore()\n  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a new <xref href=\"System.Windows.Media.MediaPlayer\"></xref> instance.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A new <xref href=\"System.Windows.Media.MediaPlayer\"></xref> instance.\n  overload: System.Windows.Media.MediaPlayer.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.DownloadProgress\n  id: DownloadProgress\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: DownloadProgress\n  nameWithType: MediaPlayer.DownloadProgress\n  fullName: System.Windows.Media.MediaPlayer.DownloadProgress\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the percentage of download progress for content located at a remote server.\n  syntax:\n    content: public double DownloadProgress { get; }\n    return:\n      type: System.Double\n      description: The percentage of download progress for content located at a remote server represented by a value between 0 and 1. The default is 0.\n  overload: System.Windows.Media.MediaPlayer.DownloadProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Makes this instance a clone of the specified <xref href=\"System.Windows.Media.MediaPlayer\"></xref> object.\n  remarks: \"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.  \\n  \\n This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.MediaPlayer\"></xref> object to clone and freeze.\n  overload: System.Windows.Media.MediaPlayer.GetAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.HasAudio\n  id: HasAudio\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: HasAudio\n  nameWithType: MediaPlayer.HasAudio\n  fullName: System.Windows.Media.MediaPlayer.HasAudio\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicating whether the media has audio output.\n  syntax:\n    content: public bool HasAudio { get; }\n    return:\n      type: System.Boolean\n      description: true if the media has audio output; otherwise, false.\n  overload: System.Windows.Media.MediaPlayer.HasAudio*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.HasVideo\n  id: HasVideo\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: HasVideo\n  nameWithType: MediaPlayer.HasVideo\n  fullName: System.Windows.Media.MediaPlayer.HasVideo\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the media has video output.\n  syntax:\n    content: public bool HasVideo { get; }\n    return:\n      type: System.Boolean\n      description: true if the media has video output; otherwise, false.\n  overload: System.Windows.Media.MediaPlayer.HasVideo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.IsBuffering\n  id: IsBuffering\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: IsBuffering\n  nameWithType: MediaPlayer.IsBuffering\n  fullName: System.Windows.Media.MediaPlayer.IsBuffering\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the media is buffering.\n  syntax:\n    content: public bool IsBuffering { get; }\n    return:\n      type: System.Boolean\n      description: true if the media is buffering; otherwise, false.\n  overload: System.Windows.Media.MediaPlayer.IsBuffering*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.IsMuted\n  id: IsMuted\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: IsMuted\n  nameWithType: MediaPlayer.IsMuted\n  fullName: System.Windows.Media.MediaPlayer.IsMuted\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the media is muted.\n  syntax:\n    content: public bool IsMuted { get; set; }\n    return:\n      type: System.Boolean\n      description: true if the media is muted; otherwise, false.\n  overload: System.Windows.Media.MediaPlayer.IsMuted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.MediaEnded\n  id: MediaEnded\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: MediaEnded\n  nameWithType: MediaPlayer.MediaEnded\n  fullName: System.Windows.Media.MediaPlayer.MediaEnded\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when the media has finished playback.\n  syntax:\n    content: public event EventHandler MediaEnded;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.MediaFailed\n  id: MediaFailed\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: MediaFailed\n  nameWithType: MediaPlayer.MediaFailed\n  fullName: System.Windows.Media.MediaPlayer.MediaFailed\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when an error is encountered\n  remarks: \"<a name=\\\"xamlAttributeUsage_MediaFailed\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object MediaFailed=\\\"EventHandler\\\"/>  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Windows.Media.ExceptionEventArgs> MediaFailed;\n    return:\n      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.MediaOpened\n  id: MediaOpened\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: MediaOpened\n  nameWithType: MediaPlayer.MediaOpened\n  fullName: System.Windows.Media.MediaPlayer.MediaOpened\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when the media is opened.\n  syntax:\n    content: public event EventHandler MediaOpened;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.NaturalDuration\n  id: NaturalDuration\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: NaturalDuration\n  nameWithType: MediaPlayer.NaturalDuration\n  fullName: System.Windows.Media.MediaPlayer.NaturalDuration\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the natural duration of the media.\n  remarks: NaturalDuration cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.\n  syntax:\n    content: public System.Windows.Duration NaturalDuration { get; }\n    return:\n      type: System.Windows.Duration\n      description: The natural duration of the media. The default is <xref:System.Windows.Duration.Automatic*>.\n  overload: System.Windows.Media.MediaPlayer.NaturalDuration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight\n  id: NaturalVideoHeight\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: NaturalVideoHeight\n  nameWithType: MediaPlayer.NaturalVideoHeight\n  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the pixel height of the video.\n  remarks: Null is returned if the media type is audio.\n  syntax:\n    content: public int NaturalVideoHeight { get; }\n    return:\n      type: System.Int32\n      description: The pixel height of the video.\n  overload: System.Windows.Media.MediaPlayer.NaturalVideoHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth\n  id: NaturalVideoWidth\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: NaturalVideoWidth\n  nameWithType: MediaPlayer.NaturalVideoWidth\n  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the pixel width of the video.\n  remarks: Null is returned if the media type is audio.\n  syntax:\n    content: public int NaturalVideoWidth { get; }\n    return:\n      type: System.Int32\n      description: The pixel width of the video.\n  overload: System.Windows.Media.MediaPlayer.NaturalVideoWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)\n  id: Open(System.Uri)\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Open(Uri)\n  nameWithType: MediaPlayer.Open(Uri)\n  fullName: System.Windows.Media.MediaPlayer.Open(Uri)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Opens the given <xref:System.Uri> for media playback.\n  syntax:\n    content: public void Open (Uri source);\n    parameters:\n    - id: source\n      type: System.Uri\n      description: The media source <xref:System.Uri>.\n  overload: System.Windows.Media.MediaPlayer.Open*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Pause\n  id: Pause\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Pause()\n  nameWithType: MediaPlayer.Pause()\n  fullName: System.Windows.Media.MediaPlayer.Pause()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Pauses media playback.\n  remarks: Calling Pause when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Pause cannot be called while the timing engine drives media playback.\n  syntax:\n    content: public void Pause ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.Pause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Play\n  id: Play\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Play()\n  nameWithType: MediaPlayer.Play()\n  fullName: System.Windows.Media.MediaPlayer.Play()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Plays media from the current <xref:System.Windows.Media.MediaPlayer.Position*>.\n  remarks: Calling Play when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Play cannot be called while the timing engine drives media playback.\n  syntax:\n    content: public void Play ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.Play*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Position\n  id: Position\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Position\n  nameWithType: MediaPlayer.Position\n  fullName: System.Windows.Media.MediaPlayer.Position\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the current position of the media.\n  remarks: \"If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting Position will throw an <xref:System.InvalidOperationException>. Position cannot be set while the timing engine drives media playback.  \\n  \\n<a name=\\\"xamlTextUsage_Position\\\"></a>   \\n## XAML Text Usage  \\n Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: public TimeSpan Position { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The current position of the media.\n  overload: System.Windows.Media.MediaPlayer.Position*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.ReadPreamble\n  id: ReadPreamble\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: ReadPreamble()\n  nameWithType: MediaPlayer.ReadPreamble()\n  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Ensures that the MediaPlayer is being accessed from a valid thread.\n  syntax:\n    content: protected void ReadPreamble ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.ReadPreamble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.ScriptCommand\n  id: ScriptCommand\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: ScriptCommand\n  nameWithType: MediaPlayer.ScriptCommand\n  fullName: System.Windows.Media.MediaPlayer.ScriptCommand\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when a script command has been encountered within the media.\n  remarks: \"<a name=\\\"xamlAttributeUsage_ScriptCommand\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object ScriptCommand=\\\"EventHandler\\\"/>  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Windows.Media.MediaScriptCommandEventArgs> ScriptCommand;\n    return:\n      type: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled\n  id: ScrubbingEnabled\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: ScrubbingEnabled\n  nameWithType: MediaPlayer.ScrubbingEnabled\n  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that indicates whether scrubbing is enabled.\n  syntax:\n    content: public bool ScrubbingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if scrubbing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.MediaPlayer.ScrubbingEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Source\n  id: Source\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Source\n  nameWithType: MediaPlayer.Source\n  fullName: System.Windows.Media.MediaPlayer.Source\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the media <xref:System.Uri>.\n  remarks: Source is read-only. This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.\n  syntax:\n    content: public Uri Source { get; }\n    return:\n      type: System.Uri\n      description: The current media <xref:System.Uri>.\n  overload: System.Windows.Media.MediaPlayer.Source*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.SpeedRatio\n  id: SpeedRatio\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: SpeedRatio\n  nameWithType: MediaPlayer.SpeedRatio\n  fullName: System.Windows.Media.MediaPlayer.SpeedRatio\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the ratio of speed that media is played at.\n  remarks: \"Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.  \\n  \\n If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting SpeedRatio is not allowed. SpeedRatio cannot be set while the timing engine drives media playback.  \\n  \\n Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.  \\n  \\n<a name=\\\"xamlTextUsage_SpeedRatio\\\"></a>   \\n## XAML Text Usage  \\n Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: public double SpeedRatio { get; set; }\n    return:\n      type: System.Double\n      description: The ratio of speed that media is played back represented by a value between 0 and the largest double value. The default is 1.0.\n  overload: System.Windows.Media.MediaPlayer.SpeedRatio*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Stop\n  id: Stop\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: MediaPlayer.Stop()\n  fullName: System.Windows.Media.MediaPlayer.Stop()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Stops media playback.\n  remarks: Calling Stop when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Stop cannot be called while the timing engine drives media playback.\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.Stop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.Volume\n  id: Volume\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: Volume\n  nameWithType: MediaPlayer.Volume\n  fullName: System.Windows.Media.MediaPlayer.Volume\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the media's volume.\n  remarks: \"<a name=\\\"xamlTextUsage_Volume\\\"></a>   \\n## XAML Text Usage  \\n Not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: public double Volume { get; set; }\n    return:\n      type: System.Double\n      description: The media's volume represented on a linear scale between 0 and 1. The default is 0.5.\n  overload: System.Windows.Media.MediaPlayer.Volume*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.MediaPlayer.WritePreamble\n  id: WritePreamble\n  parent: System.Windows.Media.MediaPlayer\n  langs:\n  - csharp\n  name: WritePreamble()\n  nameWithType: MediaPlayer.WritePreamble()\n  fullName: System.Windows.Media.MediaPlayer.WritePreamble()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.\n  syntax:\n    content: protected void WritePreamble ();\n    parameters: []\n  overload: System.Windows.Media.MediaPlayer.WritePreamble*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.MediaPlayer.#ctor\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: MediaPlayer()\n  nameWithType: MediaPlayer.MediaPlayer()\n  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()\n- uid: System.Windows.Media.MediaPlayer.Balance\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Balance\n  nameWithType: MediaPlayer.Balance\n  fullName: System.Windows.Media.MediaPlayer.Balance\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.MediaPlayer.BufferingEnded\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: BufferingEnded\n  nameWithType: MediaPlayer.BufferingEnded\n  fullName: System.Windows.Media.MediaPlayer.BufferingEnded\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Media.MediaPlayer.BufferingProgress\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: BufferingProgress\n  nameWithType: MediaPlayer.BufferingProgress\n  fullName: System.Windows.Media.MediaPlayer.BufferingProgress\n- uid: System.Windows.Media.MediaPlayer.BufferingStarted\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: BufferingStarted\n  nameWithType: MediaPlayer.BufferingStarted\n  fullName: System.Windows.Media.MediaPlayer.BufferingStarted\n- uid: System.Windows.Media.MediaPlayer.CanPause\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CanPause\n  nameWithType: MediaPlayer.CanPause\n  fullName: System.Windows.Media.MediaPlayer.CanPause\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.MediaPlayer.Clock\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Clock\n  nameWithType: MediaPlayer.Clock\n  fullName: System.Windows.Media.MediaPlayer.Clock\n- uid: System.Windows.Media.MediaClock\n  parent: System.Windows.Media\n  isExternal: false\n  name: MediaClock\n  nameWithType: MediaClock\n  fullName: System.Windows.Media.MediaClock\n- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: MediaPlayer.CloneCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Media.MediaPlayer.Close\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Close()\n  nameWithType: MediaPlayer.Close()\n  fullName: System.Windows.Media.MediaPlayer.Close()\n- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: MediaPlayer.CreateInstanceCore()\n  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()\n- uid: System.Windows.Media.MediaPlayer.DownloadProgress\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: DownloadProgress\n  nameWithType: MediaPlayer.DownloadProgress\n  fullName: System.Windows.Media.MediaPlayer.DownloadProgress\n- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Media.MediaPlayer.HasAudio\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: HasAudio\n  nameWithType: MediaPlayer.HasAudio\n  fullName: System.Windows.Media.MediaPlayer.HasAudio\n- uid: System.Windows.Media.MediaPlayer.HasVideo\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: HasVideo\n  nameWithType: MediaPlayer.HasVideo\n  fullName: System.Windows.Media.MediaPlayer.HasVideo\n- uid: System.Windows.Media.MediaPlayer.IsBuffering\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: IsBuffering\n  nameWithType: MediaPlayer.IsBuffering\n  fullName: System.Windows.Media.MediaPlayer.IsBuffering\n- uid: System.Windows.Media.MediaPlayer.IsMuted\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: IsMuted\n  nameWithType: MediaPlayer.IsMuted\n  fullName: System.Windows.Media.MediaPlayer.IsMuted\n- uid: System.Windows.Media.MediaPlayer.MediaEnded\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: MediaEnded\n  nameWithType: MediaPlayer.MediaEnded\n  fullName: System.Windows.Media.MediaPlayer.MediaEnded\n- uid: System.Windows.Media.MediaPlayer.MediaFailed\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: MediaFailed\n  nameWithType: MediaPlayer.MediaFailed\n  fullName: System.Windows.Media.MediaPlayer.MediaFailed\n- uid: System.EventHandler{System.Windows.Media.ExceptionEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ExceptionEventArgs>\n  nameWithType: EventHandler<ExceptionEventArgs>\n  fullName: System.EventHandler<System.Windows.Media.ExceptionEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.Media.ExceptionEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.ExceptionEventArgs\n    name: ExceptionEventArgs\n    nameWithType: ExceptionEventArgs\n    fullName: ExceptionEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.MediaPlayer.MediaOpened\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: MediaOpened\n  nameWithType: MediaPlayer.MediaOpened\n  fullName: System.Windows.Media.MediaPlayer.MediaOpened\n- uid: System.Windows.Media.MediaPlayer.NaturalDuration\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: MediaPlayer.NaturalDuration\n  fullName: System.Windows.Media.MediaPlayer.NaturalDuration\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalVideoHeight\n  nameWithType: MediaPlayer.NaturalVideoHeight\n  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalVideoWidth\n  nameWithType: MediaPlayer.NaturalVideoWidth\n  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth\n- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Open(Uri)\n  nameWithType: MediaPlayer.Open(Uri)\n  fullName: System.Windows.Media.MediaPlayer.Open(Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Media.MediaPlayer.Pause\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Pause()\n  nameWithType: MediaPlayer.Pause()\n  fullName: System.Windows.Media.MediaPlayer.Pause()\n- uid: System.Windows.Media.MediaPlayer.Play\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Play()\n  nameWithType: MediaPlayer.Play()\n  fullName: System.Windows.Media.MediaPlayer.Play()\n- uid: System.Windows.Media.MediaPlayer.Position\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Position\n  nameWithType: MediaPlayer.Position\n  fullName: System.Windows.Media.MediaPlayer.Position\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Windows.Media.MediaPlayer.ReadPreamble\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: MediaPlayer.ReadPreamble()\n  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()\n- uid: System.Windows.Media.MediaPlayer.ScriptCommand\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: ScriptCommand\n  nameWithType: MediaPlayer.ScriptCommand\n  fullName: System.Windows.Media.MediaPlayer.ScriptCommand\n- uid: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<MediaScriptCommandEventArgs>\n  nameWithType: EventHandler<MediaScriptCommandEventArgs>\n  fullName: System.EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.MediaScriptCommandEventArgs\n    name: MediaScriptCommandEventArgs\n    nameWithType: MediaScriptCommandEventArgs\n    fullName: MediaScriptCommandEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: ScrubbingEnabled\n  nameWithType: MediaPlayer.ScrubbingEnabled\n  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled\n- uid: System.Windows.Media.MediaPlayer.Source\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Source\n  nameWithType: MediaPlayer.Source\n  fullName: System.Windows.Media.MediaPlayer.Source\n- uid: System.Windows.Media.MediaPlayer.SpeedRatio\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: MediaPlayer.SpeedRatio\n  fullName: System.Windows.Media.MediaPlayer.SpeedRatio\n- uid: System.Windows.Media.MediaPlayer.Stop\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Stop()\n  nameWithType: MediaPlayer.Stop()\n  fullName: System.Windows.Media.MediaPlayer.Stop()\n- uid: System.Windows.Media.MediaPlayer.Volume\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Volume\n  nameWithType: MediaPlayer.Volume\n  fullName: System.Windows.Media.MediaPlayer.Volume\n- uid: System.Windows.Media.MediaPlayer.WritePreamble\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: MediaPlayer.WritePreamble()\n  fullName: System.Windows.Media.MediaPlayer.WritePreamble()\n- uid: System.Windows.Media.MediaPlayer.#ctor*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: MediaPlayer\n  nameWithType: MediaPlayer.MediaPlayer\n- uid: System.Windows.Media.MediaPlayer.Balance*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Balance\n  nameWithType: MediaPlayer.Balance\n- uid: System.Windows.Media.MediaPlayer.BufferingProgress*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: BufferingProgress\n  nameWithType: MediaPlayer.BufferingProgress\n- uid: System.Windows.Media.MediaPlayer.CanPause*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CanPause\n  nameWithType: MediaPlayer.CanPause\n- uid: System.Windows.Media.MediaPlayer.Clock*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Clock\n  nameWithType: MediaPlayer.Clock\n- uid: System.Windows.Media.MediaPlayer.CloneCore*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CloneCore\n  nameWithType: MediaPlayer.CloneCore\n- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CloneCurrentValueCore\n  nameWithType: MediaPlayer.CloneCurrentValueCore\n- uid: System.Windows.Media.MediaPlayer.Close*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Close\n  nameWithType: MediaPlayer.Close\n- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: MediaPlayer.CreateInstanceCore\n- uid: System.Windows.Media.MediaPlayer.DownloadProgress*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: DownloadProgress\n  nameWithType: MediaPlayer.DownloadProgress\n- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: GetAsFrozenCore\n  nameWithType: MediaPlayer.GetAsFrozenCore\n- uid: System.Windows.Media.MediaPlayer.HasAudio*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: HasAudio\n  nameWithType: MediaPlayer.HasAudio\n- uid: System.Windows.Media.MediaPlayer.HasVideo*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: HasVideo\n  nameWithType: MediaPlayer.HasVideo\n- uid: System.Windows.Media.MediaPlayer.IsBuffering*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: IsBuffering\n  nameWithType: MediaPlayer.IsBuffering\n- uid: System.Windows.Media.MediaPlayer.IsMuted*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: IsMuted\n  nameWithType: MediaPlayer.IsMuted\n- uid: System.Windows.Media.MediaPlayer.NaturalDuration*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: MediaPlayer.NaturalDuration\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalVideoHeight\n  nameWithType: MediaPlayer.NaturalVideoHeight\n- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: NaturalVideoWidth\n  nameWithType: MediaPlayer.NaturalVideoWidth\n- uid: System.Windows.Media.MediaPlayer.Open*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Open\n  nameWithType: MediaPlayer.Open\n- uid: System.Windows.Media.MediaPlayer.Pause*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Pause\n  nameWithType: MediaPlayer.Pause\n- uid: System.Windows.Media.MediaPlayer.Play*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Play\n  nameWithType: MediaPlayer.Play\n- uid: System.Windows.Media.MediaPlayer.Position*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Position\n  nameWithType: MediaPlayer.Position\n- uid: System.Windows.Media.MediaPlayer.ReadPreamble*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: ReadPreamble\n  nameWithType: MediaPlayer.ReadPreamble\n- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: ScrubbingEnabled\n  nameWithType: MediaPlayer.ScrubbingEnabled\n- uid: System.Windows.Media.MediaPlayer.Source*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Source\n  nameWithType: MediaPlayer.Source\n- uid: System.Windows.Media.MediaPlayer.SpeedRatio*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: MediaPlayer.SpeedRatio\n- uid: System.Windows.Media.MediaPlayer.Stop*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Stop\n  nameWithType: MediaPlayer.Stop\n- uid: System.Windows.Media.MediaPlayer.Volume*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: Volume\n  nameWithType: MediaPlayer.Volume\n- uid: System.Windows.Media.MediaPlayer.WritePreamble*\n  parent: System.Windows.Media.MediaPlayer\n  isExternal: false\n  name: WritePreamble\n  nameWithType: MediaPlayer.WritePreamble\n"}