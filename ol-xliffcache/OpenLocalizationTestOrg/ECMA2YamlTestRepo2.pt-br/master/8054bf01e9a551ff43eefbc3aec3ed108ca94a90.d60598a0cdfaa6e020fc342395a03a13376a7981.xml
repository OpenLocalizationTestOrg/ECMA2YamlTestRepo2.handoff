{"nodes":[{"pos":[718,961],"content":"Converts the value of an object into a different data type. This class cannot be inherited. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the value of an object into a different data type.","pos":[0,59]},{"content":"This class cannot be inherited.","pos":[60,91]},{"content":"For information about how to develop ASP.NET mobile applications, see the <bpt id=\"p1\">[</bpt>www.asp.net/mobile<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=182900)</ept> Web site.","pos":[92,243],"source":" For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."}]},{"pos":[973,1219],"content":"The more generic <xref:System.Configuration.TypeNameConverter> class does not look up the type names in the mobile assembly. Therefore, the MobileTypeNameConverter class was created to enable type-name conversion in the mobile-related namespaces.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The more generic <xref:System.Configuration.TypeNameConverter> class does not look up the type names in the mobile assembly. Therefore, the MobileTypeNameConverter class was created to enable type-name conversion in the mobile-related namespaces.","pos":[0,246],"nodes":[{"content":"The more generic &lt;xref:System.Configuration.TypeNameConverter&gt; class does not look up the type names in the mobile assembly.","pos":[0,124],"source":"The more generic <xref:System.Configuration.TypeNameConverter> class does not look up the type names in the mobile assembly."},{"content":"Therefore, the MobileTypeNameConverter class was created to enable type-name conversion in the mobile-related namespaces.","pos":[125,246]}]}]},{"pos":[5713,6001],"content":"Initializes a new instance of the <xref href=\"System.Web.UI.MobileControls.MobileTypeNameConverter\"></xref> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.MobileControls.MobileTypeNameConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,114],"source":"Initializes a new instance of the <xref href=\"System.Web.UI.MobileControls.MobileTypeNameConverter\"></xref> class."},{"content":"This API is obsolete.","pos":[115,136]},{"content":"For information about how to develop ASP.NET mobile applications, see the <bpt id=\"p1\">[</bpt>www.asp.net/mobile<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=182900)</ept> Web site.","pos":[137,288],"source":" For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."}]},{"pos":[6932,7215],"content":"Converts the given object to the type of this converter, using the specified context and culture information. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given object to the type of this converter, using the specified context and culture information.","pos":[0,109]},{"content":"This API is obsolete.","pos":[110,131]},{"content":"For information about how to develop ASP.NET mobile applications, see the <bpt id=\"p1\">[</bpt>www.asp.net/mobile<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=182900)</ept> Web site.","pos":[132,283],"source":" For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."}]},{"pos":[7227,7468],"content":"This implementation of ConvertFrom casts `data` as a string and then calls the <xref:System.Type.GetType%2A> method on it. The result, a new <xref:System.Type>, is then returned. However, if the result is `null`, an exception will be thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation of ConvertFrom casts <ph id=\"ph1\">`data`</ph> as a string and then calls the &lt;xref:System.Type.GetType%2A&gt; method on it.","pos":[0,122],"source":"This implementation of ConvertFrom casts `data` as a string and then calls the <xref:System.Type.GetType%2A> method on it."},{"content":"The result, a new &lt;xref:System.Type&gt;, is then returned.","pos":[123,178],"source":" The result, a new <xref:System.Type>, is then returned."},{"content":"However, if the result is <ph id=\"ph1\">`null`</ph>, an exception will be thrown.","pos":[179,241],"source":" However, if the result is `null`, an exception will be thrown."}]},{"pos":[7735,7835],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[7913,7987],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[8048,8084],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[8142,8202],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[8439,8565],"content":"Calling &lt;xref:System.Type.GetType*&gt; on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Calling <xref:System.Type.GetType*> on <code>data</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9359,9640],"content":"Converts the given value object to the specified type, using the specified context and culture information. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to the specified type, using the specified context and culture information.","pos":[0,107]},{"content":"This API is obsolete.","pos":[108,129]},{"content":"For information about how to develop ASP.NET mobile applications, see the <bpt id=\"p1\">[</bpt>www.asp.net/mobile<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=182900)</ept> Web site.","pos":[130,281],"source":" For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."}]},{"pos":[9652,9832],"content":"This implementation of ConvertTo uses the <ph id=\"ph1\">`as`</ph> operator to convert the <ph id=\"ph2\">`value`</ph> to a &lt;xref:System.Type&gt;, and then returns the &lt;xref:System.Type.FullName%2A&gt; property of that object.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation of ConvertTo uses the `as` operator to convert the `value` to a <xref:System.Type>, and then returns the <xref:System.Type.FullName%2A> property of that object."},{"pos":[10115,10215],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[10293,10442],"content":"A <xref:System.Globalization.CultureInfo>. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,42],"source":"A <xref:System.Globalization.CultureInfo>."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is passed, the current culture is assumed.","pos":[43,149],"source":" If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed, the current culture is assumed."}]},{"pos":[10504,10540],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[10605,10664],"content":"The &lt;xref:System.Type&gt; to convert the <ph id=\"ph1\">`value`</ph> parameter to.","needQuote":true,"needEscape":true,"source":"The <xref:System.Type> to convert the `value` parameter to."},{"pos":[10722,10782],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[10967,11016],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted to a type.","needQuote":true,"needEscape":true,"source":"<code>value</code> cannot be converted to a type."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter\n  id: MobileTypeNameConverter\n  children:\n  - System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor\n  - System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: MobileTypeNameConverter\n  nameWithType: MobileTypeNameConverter\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter\n  type: Class\n  summary: Converts the value of an object into a different data type. This class cannot be inherited. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: The more generic <xref:System.Configuration.TypeNameConverter> class does not look up the type names in the mobile assembly. Therefore, the MobileTypeNameConverter class was created to enable type-name conversion in the mobile-related namespaces.\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.\")]\n\n      public sealed class MobileTypeNameConverter : System.Configuration.ConfigurationConverterBase\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.Configuration.ConfigurationConverterBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  platform:\n  - net462\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  langs:\n  - csharp\n  name: MobileTypeNameConverter()\n  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter()\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.MobileTypeNameConverter()\n  type: Constructor\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.MobileControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.MobileControls.MobileTypeNameConverter\"></xref> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  syntax:\n    content: public MobileTypeNameConverter ();\n    parameters: []\n  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.MobileControls\n  summary: Converts the given object to the type of this converter, using the specified context and culture information. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: This implementation of ConvertFrom casts `data` as a string and then calls the <xref:System.Type.GetType%2A> method on it. The result, a new <xref:System.Type>, is then returned. However, if the result is `null`, an exception will be thrown.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: data\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: Calling <xref:System.Type.GetType*> on <code>data</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.MobileControls\n  summary: Converts the given value object to the specified type, using the specified context and culture information. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: This implementation of ConvertTo uses the `as` operator to convert the `value` to a <xref:System.Type>, and then returns the <xref:System.Type.FullName%2A> property of that object.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type targetType);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo>. If <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is passed, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: targetType\n      type: System.Type\n      description: The <xref:System.Type> to convert the `value` parameter to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> cannot be converted to a type.\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: System.Configuration.ConfigurationConverterBase\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: MobileTypeNameConverter()\n  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter()\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.MobileTypeNameConverter()\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor*\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: MobileTypeNameConverter\n  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom*\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: MobileTypeNameConverter.ConvertFrom\n- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo*\n  parent: System.Web.UI.MobileControls.MobileTypeNameConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: MobileTypeNameConverter.ConvertTo\n"}