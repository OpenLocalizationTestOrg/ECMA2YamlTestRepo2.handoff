{"nodes":[{"pos":[1318,1554],"content":"Represents a view of an instance. For example, the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute*> method implementations return an InstanceView object that provides a view into the instance data in the persistence store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a view of an instance. For example, the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute*> method implementations return an InstanceView object that provides a view into the instance data in the persistence store.","pos":[0,236],"nodes":[{"content":"Represents a view of an instance.","pos":[0,33]},{"content":"For example, the &lt;xref:System.Runtime.DurableInstancing.InstanceStore.Execute*&gt; method implementations return an InstanceView object that provides a view into the instance data in the persistence store.","pos":[34,236],"source":" For example, the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute*> method implementations return an InstanceView object that provides a view into the instance data in the persistence store."}]}]},{"pos":[1567,2402],"content":"Each InstanceView object is associated with an InstanceHandle. For an InstanceView returned from InstanceStore.Execute, the associated handle is the one passed to Execute. For an InstanceView returned from InstancePersistenceContext.InstanceView, the associated handle is the one passed to TryCommand.       An InstanceHandle may have zero or more InstanceView objects associated with it at any given time. InstanceView objects returned from InstanceStore.Execute are immutable and represent a snapshot of the known instance state after the successful execution of that command. InstanceView objects returned from InstancePersistenceContext are mutable and represent the current known instance state as it is being updated during the execution of the command.  (If the command ultimately fails, this intermediate state is discarded).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each InstanceView object is associated with an InstanceHandle. For an InstanceView returned from InstanceStore.Execute, the associated handle is the one passed to Execute. For an InstanceView returned from InstancePersistenceContext.InstanceView, the associated handle is the one passed to TryCommand.       An InstanceHandle may have zero or more InstanceView objects associated with it at any given time. InstanceView objects returned from InstanceStore.Execute are immutable and represent a snapshot of the known instance state after the successful execution of that command. InstanceView objects returned from InstancePersistenceContext are mutable and represent the current known instance state as it is being updated during the execution of the command.  (If the command ultimately fails, this intermediate state is discarded).","pos":[0,833],"nodes":[{"content":"Each InstanceView object is associated with an InstanceHandle.","pos":[0,62]},{"content":"For an InstanceView returned from InstanceStore.Execute, the associated handle is the one passed to Execute.","pos":[63,171]},{"content":"For an InstanceView returned from InstancePersistenceContext.InstanceView, the associated handle is the one passed to TryCommand.","pos":[172,301]},{"content":"An InstanceHandle may have zero or more InstanceView objects associated with it at any given time.","pos":[308,406]},{"content":"InstanceView objects returned from InstanceStore.Execute are immutable and represent a snapshot of the known instance state after the successful execution of that command.","pos":[407,578]},{"content":"InstanceView objects returned from InstancePersistenceContext are mutable and represent the current known instance state as it is being updated during the execution of the command.","pos":[579,759]},{"content":"(If the command ultimately fails, this intermediate state is discarded).","pos":[761,833]}]}]},{"pos":[2976,3031],"content":"Gets instance data as a dictionary of names and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets instance data as a dictionary of names and values.","pos":[0,55]}]},{"pos":[3345,3363],"content":"The instance data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance data.","pos":[0,18]}]},{"pos":[3951,4008],"content":"Gets the consistency status of the InstanceData property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the consistency status of the InstanceData property.","pos":[0,57]}]},{"pos":[4231,4426],"content":"The consistency (None, In Doubt, and Partial) of the instance data. InstanceValueConsistency.None indicates that the InstanceData property holds a fully populated and locked set of instance data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The consistency (None, In Doubt, and Partial) of the instance data. InstanceValueConsistency.None indicates that the InstanceData property holds a fully populated and locked set of instance data.","pos":[0,195],"nodes":[{"content":"The consistency (None, In Doubt, and Partial) of the instance data.","pos":[0,67]},{"content":"InstanceValueConsistency.None indicates that the InstanceData property holds a fully populated and locked set of instance data.","pos":[68,195]}]}]},{"pos":[4960,5011],"content":"Gets the identifier (ID) of the instance as a GUID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identifier (ID) of the instance as a GUID.","pos":[0,51]}]},{"pos":[5122,5221],"content":"The ID of the instance or Guid.Empty if the associated instance handle is not bound to an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID of the instance or Guid.Empty if the associated instance handle is not bound to an instance.","pos":[0,99]}]},{"pos":[5752,5912],"content":"Gets the instance keys as a dictionary of instance key identifiers and associated <bpt id=\"p1\">&lt;xref href=\"System.Runtime.DurableInstancing.InstanceKeyView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Gets the instance keys as a dictionary of instance key identifiers and associated <xref href=\"System.Runtime.DurableInstancing.InstanceKeyView\"></xref> objects."},{"pos":[6203,6291],"content":"A dictionary of instance key identifiers and their associated instance key view objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of instance key identifiers and their associated instance key view objects.","pos":[0,88]}]},{"pos":[6879,6936],"content":"Gets the consistency status of the InstanceKeys property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the consistency status of the InstanceKeys property.","pos":[0,57]}]},{"pos":[7159,7371],"content":"The consistency value of instance keys. InstanceValueConsistency.None indicates that the InstanceKeys property holds a fully populated and locked set of instance keys (though not necessarily each key’s metadata).","needQuote":true,"needEscape":true,"nodes":[{"content":"The consistency value of instance keys. InstanceValueConsistency.None indicates that the InstanceKeys property holds a fully populated and locked set of instance keys (though not necessarily each key’s metadata).","pos":[0,212],"nodes":[{"content":"The consistency value of instance keys.","pos":[0,39]},{"content":"InstanceValueConsistency.None indicates that the InstanceKeys property holds a fully populated and locked set of instance keys (though not necessarily each key’s metadata).","pos":[40,212]}]}]},{"pos":[7935,8073],"content":"Gets the metadata of an instance as a dictionary of names and <bpt id=\"p1\">&lt;xref href=\"System.Runtime.DurableInstancing.InstanceValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Gets the metadata of an instance as a dictionary of names and <xref href=\"System.Runtime.DurableInstancing.InstanceValue\"></xref> objects."},{"pos":[8391,8420],"content":"The metadata of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata of the instance.","pos":[0,29]}]},{"pos":[9032,9093],"content":"Gets the consistency status of the InstanceMetadata property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the consistency status of the InstanceMetadata property.","pos":[0,61]}]},{"pos":[9320,9497],"content":"The consistency of the instance metadata. InstanceValueConsistency.None indicates that the InstanceMetadata property holds a fully populated and locked set of instance metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The consistency of the instance metadata. InstanceValueConsistency.None indicates that the InstanceMetadata property holds a fully populated and locked set of instance metadata.","pos":[0,177],"nodes":[{"content":"The consistency of the instance metadata.","pos":[0,41]},{"content":"InstanceValueConsistency.None indicates that the InstanceMetadata property holds a fully populated and locked set of instance metadata.","pos":[42,177]}]}]},{"pos":[10050,10081],"content":"Gets the owner of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the owner of the instance.","pos":[0,31]}]},{"pos":[10272,10380],"content":"The owner of the instance. Returns null if the associated instance handle is not bound to an instance owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"The owner of the instance. Returns null if the associated instance handle is not bound to an instance owner.","pos":[0,108],"nodes":[{"content":"The owner of the instance.","pos":[0,26]},{"content":"Returns null if the associated instance handle is not bound to an instance owner.","pos":[27,108]}]}]},{"pos":[10959,11035],"content":"Gets the metadata for an instance owner as a dictionary of names and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata for an instance owner as a dictionary of names and values.","pos":[0,76]}]},{"pos":[11358,11406],"content":"A dictionary containing instance-owner metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary containing instance-owner metadata.","pos":[0,48]}]},{"pos":[12048,12114],"content":"Gets the consistency status of the InstanceOwnerMetadata property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the consistency status of the InstanceOwnerMetadata property.","pos":[0,66]}]},{"pos":[12346,12476],"content":"The consistency of the instance owner metadata.  Returns null if the associated instance handle is not bound to an instance owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"The consistency of the instance owner metadata.  Returns null if the associated instance handle is not bound to an instance owner.","pos":[0,130],"nodes":[{"content":"The consistency of the instance owner metadata.","pos":[0,47]},{"content":"Returns null if the associated instance handle is not bound to an instance owner.","pos":[49,130]}]}]},{"pos":[13034,13117],"content":"Gets the state of the instance (Unknown, Uninitialized, Initialized, or Completed).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the state of the instance (Unknown, Uninitialized, Initialized, or Completed).","pos":[0,83]}]},{"pos":[13308,13334],"content":"The state of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state of the instance.","pos":[0,26]}]},{"pos":[13933,14160],"content":"Gets a collection of <xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"></xref> objects. The collection is automatically reset to empty each time a command is executed against the associated instance handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,108],"source":"Gets a collection of <xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"></xref> objects."},{"content":"The collection is automatically reset to empty each time a command is executed against the associated instance handle.","pos":[109,227]}]},{"pos":[14487,14590],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"></xref> objects."},{"pos":[15161,15255],"content":"Returns a value that indicates whether the associated instance handle is bound to an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the associated instance handle is bound to an instance.","pos":[0,94]}]},{"pos":[15376,15569],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated instance handle is bound to an instance; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16157,16257],"content":"Returns a value that indicates whether the associated instance handle is bound to an instance owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the associated instance handle is bound to an instance owner.","pos":[0,100]}]},{"pos":[16383,16582],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated instance handle is bound to an instance owner; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance owner; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17130,17229],"content":"Returns a value that indicates whether the associated instance handle is bound to an instance lock.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the associated instance handle is bound to an instance lock.","pos":[0,99]}]},{"pos":[17346,17544],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated instance handle is bound to an instance lock; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance lock; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.DurableInstancing.InstanceView\n  id: InstanceView\n  children:\n  - System.Runtime.DurableInstancing.InstanceView.InstanceData\n  - System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency\n  - System.Runtime.DurableInstancing.InstanceView.InstanceId\n  - System.Runtime.DurableInstancing.InstanceView.InstanceKeys\n  - System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency\n  - System.Runtime.DurableInstancing.InstanceView.InstanceMetadata\n  - System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency\n  - System.Runtime.DurableInstancing.InstanceView.InstanceOwner\n  - System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata\n  - System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency\n  - System.Runtime.DurableInstancing.InstanceView.InstanceState\n  - System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults\n  - System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance\n  - System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner\n  - System.Runtime.DurableInstancing.InstanceView.IsBoundToLock\n  langs:\n  - csharp\n  name: InstanceView\n  nameWithType: InstanceView\n  fullName: System.Runtime.DurableInstancing.InstanceView\n  type: Class\n  summary: Represents a view of an instance. For example, the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute*> method implementations return an InstanceView object that provides a view into the instance data in the persistence store.\n  remarks: \"Each InstanceView object is associated with an InstanceHandle. For an InstanceView returned from InstanceStore.Execute, the associated handle is the one passed to Execute. For an InstanceView returned from InstancePersistenceContext.InstanceView, the associated handle is the one passed to TryCommand.  \\n  \\n An InstanceHandle may have zero or more InstanceView objects associated with it at any given time. InstanceView objects returned from InstanceStore.Execute are immutable and represent a snapshot of the known instance state after the successful execution of that command. InstanceView objects returned from InstancePersistenceContext are mutable and represent the current known instance state as it is being updated during the execution of the command.  (If the command ultimately fails, this intermediate state is discarded).\"\n  syntax:\n    content: public sealed class InstanceView\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceData\n  id: InstanceData\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceData\n  nameWithType: InstanceView.InstanceData\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceData\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets instance data as a dictionary of names and values.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> InstanceData { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}\n      description: The instance data.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency\n  id: InstanceDataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceDataConsistency\n  nameWithType: InstanceView.InstanceDataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the consistency status of the InstanceData property.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceValueConsistency InstanceDataConsistency { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceValueConsistency\n      description: The consistency (None, In Doubt, and Partial) of the instance data. InstanceValueConsistency.None indicates that the InstanceData property holds a fully populated and locked set of instance data.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceId\n  id: InstanceId\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceId\n  nameWithType: InstanceView.InstanceId\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceId\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the identifier (ID) of the instance as a GUID.\n  syntax:\n    content: public Guid InstanceId { get; }\n    return:\n      type: System.Guid\n      description: The ID of the instance or Guid.Empty if the associated instance handle is not bound to an instance.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeys\n  id: InstanceKeys\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceKeys\n  nameWithType: InstanceView.InstanceKeys\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceKeys\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the instance keys as a dictionary of instance key identifiers and associated <xref href=\"System.Runtime.DurableInstancing.InstanceKeyView\"></xref> objects.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<Guid,System.Runtime.DurableInstancing.InstanceKeyView> InstanceKeys { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Guid,System.Runtime.DurableInstancing.InstanceKeyView}\n      description: A dictionary of instance key identifiers and their associated instance key view objects.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency\n  id: InstanceKeysConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceKeysConsistency\n  nameWithType: InstanceView.InstanceKeysConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the consistency status of the InstanceKeys property.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceValueConsistency InstanceKeysConsistency { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceValueConsistency\n      description: The consistency value of instance keys. InstanceValueConsistency.None indicates that the InstanceKeys property holds a fully populated and locked set of instance keys (though not necessarily each key’s metadata).\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata\n  id: InstanceMetadata\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceMetadata\n  nameWithType: InstanceView.InstanceMetadata\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the metadata of an instance as a dictionary of names and <xref href=\"System.Runtime.DurableInstancing.InstanceValue\"></xref> objects.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> InstanceMetadata { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}\n      description: The metadata of the instance.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency\n  id: InstanceMetadataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceMetadataConsistency\n  nameWithType: InstanceView.InstanceMetadataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the consistency status of the InstanceMetadata property.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceValueConsistency InstanceMetadataConsistency { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceValueConsistency\n      description: The consistency of the instance metadata. InstanceValueConsistency.None indicates that the InstanceMetadata property holds a fully populated and locked set of instance metadata.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwner\n  id: InstanceOwner\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceOwner\n  nameWithType: InstanceView.InstanceOwner\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwner\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the owner of the instance.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceOwner InstanceOwner { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceOwner\n      description: The owner of the instance. Returns null if the associated instance handle is not bound to an instance owner.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceOwner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata\n  id: InstanceOwnerMetadata\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceOwnerMetadata\n  nameWithType: InstanceView.InstanceOwnerMetadata\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the metadata for an instance owner as a dictionary of names and values.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> InstanceOwnerMetadata { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}\n      description: A dictionary containing instance-owner metadata.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency\n  id: InstanceOwnerMetadataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceOwnerMetadataConsistency\n  nameWithType: InstanceView.InstanceOwnerMetadataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the consistency status of the InstanceOwnerMetadata property.\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceValueConsistency InstanceOwnerMetadataConsistency { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceValueConsistency\n      description: The consistency of the instance owner metadata.  Returns null if the associated instance handle is not bound to an instance owner.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceState\n  id: InstanceState\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceState\n  nameWithType: InstanceView.InstanceState\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceState\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets the state of the instance (Unknown, Uninitialized, Initialized, or Completed).\n  syntax:\n    content: public System.Runtime.DurableInstancing.InstanceState InstanceState { get; }\n    return:\n      type: System.Runtime.DurableInstancing.InstanceState\n      description: The state of the instance.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults\n  id: InstanceStoreQueryResults\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: InstanceStoreQueryResults\n  nameWithType: InstanceView.InstanceStoreQueryResults\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Gets a collection of <xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"></xref> objects. The collection is automatically reset to empty each time a command is executed against the associated instance handle.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Runtime.DurableInstancing.InstanceStoreQueryResult> InstanceStoreQueryResults { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Runtime.DurableInstancing.InstanceStoreQueryResult}\n      description: A collection of <xref href=\"System.Runtime.DurableInstancing.InstanceStoreQueryResult\"></xref> objects.\n  overload: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance\n  id: IsBoundToInstance\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: IsBoundToInstance\n  nameWithType: InstanceView.IsBoundToInstance\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Returns a value that indicates whether the associated instance handle is bound to an instance.\n  syntax:\n    content: public bool IsBoundToInstance { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner\n  id: IsBoundToInstanceOwner\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: IsBoundToInstanceOwner\n  nameWithType: InstanceView.IsBoundToInstanceOwner\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Returns a value that indicates whether the associated instance handle is bound to an instance owner.\n  syntax:\n    content: public bool IsBoundToInstanceOwner { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance owner; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock\n  id: IsBoundToLock\n  parent: System.Runtime.DurableInstancing.InstanceView\n  langs:\n  - csharp\n  name: IsBoundToLock\n  nameWithType: InstanceView.IsBoundToLock\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock\n  type: Property\n  assemblies:\n  - System.Runtime.DurableInstancing\n  namespace: System.Runtime.DurableInstancing\n  summary: Returns a value that indicates whether the associated instance handle is bound to an instance lock.\n  syntax:\n    content: public bool IsBoundToLock { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated instance handle is bound to an instance lock; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceData\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceData\n  nameWithType: InstanceView.InstanceData\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceData\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<XName,InstanceValue>\n  nameWithType: IDictionary<XName,InstanceValue>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XName\n    name: XName\n    nameWithType: XName\n    fullName: XName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Runtime.DurableInstancing.InstanceValue\n    name: InstanceValue\n    nameWithType: InstanceValue\n    fullName: InstanceValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceDataConsistency\n  nameWithType: InstanceView.InstanceDataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceValueConsistency\n  parent: System.Runtime.DurableInstancing\n  isExternal: false\n  name: InstanceValueConsistency\n  nameWithType: InstanceValueConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceValueConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceId\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceId\n  nameWithType: InstanceView.InstanceId\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceId\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeys\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceKeys\n  nameWithType: InstanceView.InstanceKeys\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceKeys\n- uid: System.Collections.Generic.IDictionary{System.Guid,System.Runtime.DurableInstancing.InstanceKeyView}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<Guid,InstanceKeyView>\n  nameWithType: IDictionary<Guid,InstanceKeyView>\n  fullName: System.Collections.Generic.IDictionary<System.Guid,System.Runtime.DurableInstancing.InstanceKeyView>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Guid,System.Runtime.DurableInstancing.InstanceKeyView>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Runtime.DurableInstancing.InstanceKeyView\n    name: InstanceKeyView\n    nameWithType: InstanceKeyView\n    fullName: InstanceKeyView\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceKeysConsistency\n  nameWithType: InstanceView.InstanceKeysConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceMetadata\n  nameWithType: InstanceView.InstanceMetadata\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceMetadataConsistency\n  nameWithType: InstanceView.InstanceMetadataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwner\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwner\n  nameWithType: InstanceView.InstanceOwner\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwner\n- uid: System.Runtime.DurableInstancing.InstanceOwner\n  parent: System.Runtime.DurableInstancing\n  isExternal: false\n  name: InstanceOwner\n  nameWithType: InstanceOwner\n  fullName: System.Runtime.DurableInstancing.InstanceOwner\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwnerMetadata\n  nameWithType: InstanceView.InstanceOwnerMetadata\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwnerMetadataConsistency\n  nameWithType: InstanceView.InstanceOwnerMetadataConsistency\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceState\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceState\n  nameWithType: InstanceView.InstanceState\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceState\n- uid: System.Runtime.DurableInstancing.InstanceState\n  parent: System.Runtime.DurableInstancing\n  isExternal: false\n  name: InstanceState\n  nameWithType: InstanceState\n  fullName: System.Runtime.DurableInstancing.InstanceState\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceStoreQueryResults\n  nameWithType: InstanceView.InstanceStoreQueryResults\n  fullName: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Runtime.DurableInstancing.InstanceStoreQueryResult}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<InstanceStoreQueryResult>\n  nameWithType: ReadOnlyCollection<InstanceStoreQueryResult>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Runtime.DurableInstancing.InstanceStoreQueryResult>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Runtime.DurableInstancing.InstanceStoreQueryResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult\n    name: InstanceStoreQueryResult\n    nameWithType: InstanceStoreQueryResult\n    fullName: InstanceStoreQueryResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToInstance\n  nameWithType: InstanceView.IsBoundToInstance\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToInstanceOwner\n  nameWithType: InstanceView.IsBoundToInstanceOwner\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToLock\n  nameWithType: InstanceView.IsBoundToLock\n  fullName: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceData*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceData\n  nameWithType: InstanceView.InstanceData\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceDataConsistency*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceDataConsistency\n  nameWithType: InstanceView.InstanceDataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceId*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceId\n  nameWithType: InstanceView.InstanceId\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeys*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceKeys\n  nameWithType: InstanceView.InstanceKeys\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceKeysConsistency*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceKeysConsistency\n  nameWithType: InstanceView.InstanceKeysConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadata*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceMetadata\n  nameWithType: InstanceView.InstanceMetadata\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceMetadataConsistency*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceMetadataConsistency\n  nameWithType: InstanceView.InstanceMetadataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwner*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwner\n  nameWithType: InstanceView.InstanceOwner\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadata*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwnerMetadata\n  nameWithType: InstanceView.InstanceOwnerMetadata\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceOwnerMetadataConsistency*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceOwnerMetadataConsistency\n  nameWithType: InstanceView.InstanceOwnerMetadataConsistency\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceState*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceState\n  nameWithType: InstanceView.InstanceState\n- uid: System.Runtime.DurableInstancing.InstanceView.InstanceStoreQueryResults*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: InstanceStoreQueryResults\n  nameWithType: InstanceView.InstanceStoreQueryResults\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstance*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToInstance\n  nameWithType: InstanceView.IsBoundToInstance\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToInstanceOwner*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToInstanceOwner\n  nameWithType: InstanceView.IsBoundToInstanceOwner\n- uid: System.Runtime.DurableInstancing.InstanceView.IsBoundToLock*\n  parent: System.Runtime.DurableInstancing.InstanceView\n  isExternal: false\n  name: IsBoundToLock\n  nameWithType: InstanceView.IsBoundToLock\n"}