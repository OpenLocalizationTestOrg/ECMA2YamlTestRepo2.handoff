{"nodes":[{"pos":[7404,7524],"content":"Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.","pos":[0,120]}]},{"pos":[7537,9131],"content":"The Page class is associated with files that have an .aspx extension. These files are compiled at run time as Page objects and cached in server memory.       If you want to create a Web Forms page using the code-behind technique, derive from this class. Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.       The Page object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.       The Page class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed. For general information on these topics, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/add/includes/ajax-current-ext-md.md). For more specific information, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Display Safe Error Messages](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Page class is associated with files that have an .aspx extension.","pos":[0,69]},{"content":"These files are compiled at run time as Page objects and cached in server memory.","pos":[70,151]},{"content":"If you want to create a Web Forms page using the code-behind technique, derive from this class.","pos":[158,253]},{"content":"Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.","pos":[254,389]},{"content":"The Page object serves as the naming container for all server controls in a page, except those that implement the &lt;xref:System.Web.UI.INamingContainer&gt; interface or are child controls of controls that implement this interface.","pos":[396,622],"source":"       The Page object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface."},{"content":"The Page class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.","pos":[629,840]},{"content":"For general information on these topics, see <bpt id=\"p1\">[</bpt>Overview of Web Application Security Threats<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id=\"p2\">[</bpt>NIB: Security Policy Best Practices<ept id=\"p2\">](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)</ept>, and <bpt id=\"p3\">[</bpt>Key Security Concepts<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[841,1149],"source":" For general information on these topics, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more specific information, see <bpt id=\"p1\">[</bpt>Securing Standard Controls<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id=\"p2\">[</bpt>How to: Display Safe Error Messages<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id=\"p3\">[</bpt>How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id=\"p4\">[</bpt>Introduction to the Validation Controls<ept id=\"p4\">](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)</ept>.","pos":[1150,1588],"source":" For more specific information, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Display Safe Error Messages](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."}]},{"pos":[20633,20713],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.Page\"></xref> class."},{"pos":[20725,20796],"content":"The default constructor initializes all fields to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default constructor initializes all fields to their default values.","pos":[0,71]}]},{"pos":[21383,21567],"content":"Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.","pos":[0,184]}]},{"pos":[21766,21806],"content":"The name of the content template to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the content template to add.","pos":[0,40]}]},{"pos":[21881,21901],"content":"The content template","needQuote":true,"needEscape":true,"nodes":[{"content":"The content template","pos":[0,20]}]},{"pos":[22061,22114],"content":"A content template with the same name already exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"A content template with the same name already exists.","pos":[0,53]}]},{"pos":[22720,22838],"content":"Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.","pos":[0,118]}]},{"pos":[22851,23943],"content":"Use the AddOnPreRenderCompleteAsync method to add handlers to an asynchronous Web page.       You can register multiple asynchronous handlers; however, only one handler runs at a time. If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.       The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.       First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called. When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called. If there are multiple asynchronous handlers, the next handler is called.       After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the AddOnPreRenderCompleteAsync method to add handlers to an asynchronous Web page.       You can register multiple asynchronous handlers; however, only one handler runs at a time. If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.       The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.       First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called. When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called. If there are multiple asynchronous handlers, the next handler is called.       After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.","pos":[0,1084],"nodes":[{"content":"Use the AddOnPreRenderCompleteAsync method to add handlers to an asynchronous Web page.","pos":[0,87]},{"content":"You can register multiple asynchronous handlers; however, only one handler runs at a time.","pos":[94,184]},{"content":"If you want to process multiple asynchronous methods simultaneously, you should use a single &lt;xref:System.Web.BeginEventHandler&gt; method and launch multiple asynchronous operations from that handler.","pos":[185,383],"source":" If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler."},{"content":"The asynchronous handlers are called between the &lt;xref:System.Web.UI.Control.PreRender&gt; and &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; events.","pos":[390,533],"source":"       The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events."},{"content":"First, all &lt;xref:System.Web.UI.Page&gt; events (through the &lt;xref:System.Web.UI.Control.PreRender&gt; event) are run, and then each registered &lt;xref:System.Web.BeginEventHandler&gt; method is called.","pos":[540,730],"source":"       First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called."},{"content":"When the handler completes, the corresponding &lt;xref:System.Web.EndEventHandler&gt; method is called.","pos":[731,828],"source":" When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called."},{"content":"If there are multiple asynchronous handlers, the next handler is called.","pos":[829,901]},{"content":"After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.","pos":[908,1084],"source":"       After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event."}]}]},{"pos":[24920,24998],"content":"The delegate for the <bpt id=\"p1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"The delegate for the <xref href=\"System.Web.BeginEventHandler\"></xref> method."},{"pos":[25078,25154],"content":"The delegate for the <bpt id=\"p1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"The delegate for the <xref href=\"System.Web.EndEventHandler\"></xref> method."},{"pos":[25775,25942],"content":"The &lt;xref:System.Web.UI.PageAsyncTask.BeginHandler<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Web.UI.PageAsyncTask.EndHandler<ept id=\"p1\">*</ept>&gt; is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.PageAsyncTask.BeginHandler*> or <xref:System.Web.UI.PageAsyncTask.EndHandler*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26597,26678],"content":"Registers beginning and ending  event handler delegates for an asynchronous page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers beginning and ending  event handler delegates for an asynchronous page.","pos":[0,81]}]},{"pos":[26691,28027],"content":"Use the AddOnPreRenderCompleteAsync method to add handlers that require state information to an asynchronous Web page. The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.       You can register multiple asynchronous handlers; however, only one handler runs at a time. If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.       The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.       First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called. When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called. If there are multiple asynchronous handlers, the next handler is called.       After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the AddOnPreRenderCompleteAsync method to add handlers that require state information to an asynchronous Web page.","pos":[0,118]},{"content":"The object passed in the <ph id=\"ph1\">`state`</ph> parameter can be any object that your application requires to transfer information between event handler delegates specified in the <ph id=\"ph2\">`beginHandler`</ph> and the <ph id=\"ph3\">`endHandler`</ph> parameters.","pos":[119,331],"source":" The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters."},{"content":"You can register multiple asynchronous handlers; however, only one handler runs at a time.","pos":[338,428]},{"content":"If you want to process multiple asynchronous methods simultaneously, you should use a single &lt;xref:System.Web.BeginEventHandler&gt; method and launch multiple asynchronous operations from that handler.","pos":[429,627],"source":" If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler."},{"content":"The asynchronous handlers are called between the &lt;xref:System.Web.UI.Control.PreRender&gt; and &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; events.","pos":[634,777],"source":"       The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events."},{"content":"First, all &lt;xref:System.Web.UI.Page&gt; events (through the &lt;xref:System.Web.UI.Control.PreRender&gt; event) are run, and then each registered &lt;xref:System.Web.BeginEventHandler&gt; method is called.","pos":[784,974],"source":"       First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called."},{"content":"When the handler completes, the corresponding &lt;xref:System.Web.EndEventHandler&gt; method is called.","pos":[975,1072],"source":" When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called."},{"content":"If there are multiple asynchronous handlers, the next handler is called.","pos":[1073,1145]},{"content":"After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.","pos":[1152,1328],"source":"       After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event."}]},{"pos":[29018,29096],"content":"The delegate for the <bpt id=\"p1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"The delegate for the <xref href=\"System.Web.BeginEventHandler\"></xref> method."},{"pos":[29176,29252],"content":"The delegate for the <bpt id=\"p1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"The delegate for the <xref href=\"System.Web.EndEventHandler\"></xref> method."},{"pos":[29314,29376],"content":"An object containing state information for the event handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object containing state information for the event handlers.","pos":[0,62]}]},{"pos":[30024,30191],"content":"The &lt;xref:System.Web.UI.PageAsyncTask.BeginHandler<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Web.UI.PageAsyncTask.EndHandler<ept id=\"p1\">*</ept>&gt; is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.PageAsyncTask.BeginHandler*> or <xref:System.Web.UI.PageAsyncTask.EndHandler*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30627,30805],"content":"Adds a list of dependent files that make up the current page. This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a list of dependent files that make up the current page. This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.","pos":[0,178],"nodes":[{"content":"Adds a list of dependent files that make up the current page.","pos":[0,61]},{"content":"This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.","pos":[62,178]}]}]},{"pos":[30817,31140],"content":"The AddWrappedFileDependencies method adds a list of files, such as user control files, that make up the current page. If any of these pages is modified, the entire page is compiled the next time it is requested. This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AddWrappedFileDependencies method adds a list of files, such as user control files, that make up the current page. If any of these pages is modified, the entire page is compiled the next time it is requested. This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,323],"nodes":[{"content":"The AddWrappedFileDependencies method adds a list of files, such as user control files, that make up the current page.","pos":[0,118]},{"content":"If any of these pages is modified, the entire page is compiled the next time it is requested.","pos":[119,212]},{"content":"This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[213,323]}]}]},{"pos":[31335,31393],"content":"An <xref:System.Object> containing the list of file names.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; containing the list of file names.","pos":[0,58],"source":"An <xref:System.Object> containing the list of file names."}]},{"pos":[31778,31875],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current Web request.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.HttpApplicationState\"></xref> object for the current Web request."},{"pos":[32274,32357],"content":"The current data in the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The current data in the <xref href=\"System.Web.HttpApplicationState\"></xref> class."},{"pos":[33030,33161],"content":"Initiates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.","pos":[0,131],"nodes":[{"content":"Initiates a request for Active Server Page (ASP) resources.","pos":[0,59]},{"content":"This method is provided for compatibility with legacy ASP applications.","pos":[60,131]}]}]},{"pos":[33173,33197],"content":"Do not call this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not call this method.","pos":[0,24]}]},{"pos":[33431,33521],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with information about the current request.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpContext\"></xref> with information about the current request."},{"pos":[33587,33607],"content":"The callback method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback method.","pos":[0,20]}]},{"pos":[33673,33755],"content":"Any extra data needed to process the request in the same manner as an ASP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Any extra data needed to process the request in the same manner as an ASP request.","pos":[0,82]}]},{"pos":[33819,33856],"content":"An <xref:System.IAsyncResult> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; object.","pos":[0,37],"source":"An <xref:System.IAsyncResult> object."}]},{"pos":[34400,34532],"content":"Terminates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Terminates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.","pos":[0,132],"nodes":[{"content":"Terminates a request for Active Server Page (ASP) resources.","pos":[0,60]},{"content":"This method is provided for compatibility with legacy ASP applications.","pos":[61,132]}]}]},{"pos":[34544,34568],"content":"Do not call this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not call this method.","pos":[0,24]}]},{"pos":[34741,34779],"content":"The ASP page generated by the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ASP page generated by the request.","pos":[0,38]}]},{"pos":[35174,35275],"content":"Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.","pos":[0,101]}]},{"pos":[35288,35943],"content":"When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread. This allows the page to call STA components, such as components developed with Visual Basic 6.0. Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects. These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.       In most circumstances, do not set this property in code. Set the `aspcompat` attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When set to <ph id=\"ph1\">`true`</ph>, this property allows the page to be executed on a single-threaded apartment (STA) thread.","pos":[0,109],"source":"When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread."},{"content":"This allows the page to call STA components, such as components developed with Visual Basic 6.0.","pos":[110,206]},{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.","pos":[207,342],"source":" Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects."},{"content":"These are accessible through the ASP <ph id=\"ph1\">`ObjectContext`</ph> object or the <ph id=\"ph2\">`OnStartPage`</ph> method.","pos":[343,431],"source":" These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method."},{"content":"In most circumstances, do not set this property in code.","pos":[438,494]},{"content":"Set the <ph id=\"ph1\">`aspcompat`</ph> attribute to <ph id=\"ph2\">`true`</ph> using the  directive in the .aspx file.","pos":[495,574],"source":" Set the `aspcompat` attribute to `true` using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[575,653]}]},{"pos":[36069,36336],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page supports Active Server Pages (ASP) code; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page supports Active Server Pages (ASP) code; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,188],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page supports Active Server Pages (ASP) code; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[189,267],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[36698,36784],"content":"Sets a value indicating whether the page is processed synchronously or asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a value indicating whether the page is processed synchronously or asynchronously.","pos":[0,86]}]},{"pos":[36797,37139],"content":"The AsyncMode property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated. Use the `Async` attribute in  directive to set this value.       Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AsyncMode property is set by the &lt;xref:System.Web.UI.Page&gt; parser when code for the page is generated.","pos":[0,106],"source":"The AsyncMode property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated."},{"content":"Use the <ph id=\"ph1\">`Async`</ph> attribute in  directive to set this value.","pos":[107,165],"source":" Use the `Async` attribute in  directive to set this value."},{"content":"Asynchronous pages do not work when the <ph id=\"ph1\">`AspCompat`</ph> attribute is set to <ph id=\"ph2\">`true`</ph> or the <ph id=\"ph3\">`Transaction`</ph> attribute is set to a value other than <ph id=\"ph4\">`Disabled`</ph> in the  directive.","pos":[172,340],"source":"       Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive."}]},{"pos":[37261,37437],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page is processed asynchronously; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is processed asynchronously; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38108,38155],"content":"Begins processing an asynchronous page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins processing an asynchronous page request.","pos":[0,47]}]},{"pos":[38395,38459],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the request.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpContext\"></xref> for the request."},{"pos":[38531,38590],"content":"The callback method to notify when the process is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback method to notify when the process is complete.","pos":[0,59]}]},{"pos":[38656,38695],"content":"State data for the asynchronous method.","needQuote":true,"needEscape":true,"nodes":[{"content":"State data for the asynchronous method.","pos":[0,39]}]},{"pos":[38759,38830],"content":"An <xref:System.IAsyncResult> that references the asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that references the asynchronous request.","pos":[0,71],"source":"An <xref:System.IAsyncResult> that references the asynchronous request."}]},{"pos":[39374,39419],"content":"Ends processing an asynchronous page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends processing an asynchronous page request.","pos":[0,45]}]},{"pos":[39592,39665],"content":"An <xref:System.IAsyncResult> referencing a pending asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; referencing a pending asynchronous request.","pos":[0,73],"source":"An <xref:System.IAsyncResult> referencing a pending asynchronous request."}]},{"pos":[40055,40149],"content":"Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.","pos":[0,94]}]},{"pos":[40162,40795],"content":"The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks. In most circumstances, do not set this property in code. Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive. Values set in the page configuration section are overwritten by the page directive.       Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler. If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks. In most circumstances, do not set this property in code. Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive. Values set in the page configuration section are overwritten by the page directive.       Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler. If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.","pos":[0,631],"nodes":[{"content":"The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.","pos":[0,122]},{"content":"In most circumstances, do not set this property in code.","pos":[123,179]},{"content":"Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive.","pos":[180,286]},{"content":"Values set in the page configuration section are overwritten by the page directive.","pos":[287,370]},{"content":"Define your asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class and register a beginning, an ending, and a time-out handler.","pos":[377,518],"source":"       Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler."},{"content":"If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.","pos":[519,631]}]}]},{"pos":[42131,42277],"content":"A <xref:System.TimeSpan> that contains the allowed time interval for completion of the asynchronous task. The default time interval is 45 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that contains the allowed time interval for completion of the asynchronous task. The default time interval is 45 seconds.","pos":[0,146],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that contains the allowed time interval for completion of the asynchronous task.","pos":[0,105],"source":"A <xref:System.TimeSpan> that contains the allowed time interval for completion of the asynchronous task."},{"content":"The default time interval is 45 seconds.","pos":[106,146]}]}]},{"pos":[42431,42472],"content":"The property was set to a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property was set to a negative value.","pos":[0,41]}]},{"pos":[42821,42892],"content":"Gets or sets the control in the page that is used to perform postbacks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the control in the page that is used to perform postbacks.","pos":[0,71]}]},{"pos":[43044,43090],"content":"The control that is used to perform postbacks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that is used to perform postbacks.","pos":[0,46]}]},{"pos":[43443,43503],"content":"Sets a value indicating whether the page output is buffered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a value indicating whether the page output is buffered.","pos":[0,60]}]},{"pos":[43516,43842],"content":"In most circumstances, do not set this property in code. Set the Buffer attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.      > [!NOTE] >  The Buffer property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the Buffer attribute to <ph id=\"ph1\">`true`</ph> using the  directive in the .aspx file.","pos":[57,131],"source":" Set the Buffer attribute to `true` using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[132,210]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Buffer property sets and gets the &lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt; property.","pos":[216,323],"source":"      > [!NOTE] >  The Buffer property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property."}]},{"pos":[43958,44198],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if page output is buffered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if page output is buffered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if page output is buffered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,240],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[44533,44653],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.Cache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the application in which the page resides.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.Caching.Cache\"></xref> object associated with the application in which the page resides."},{"pos":[44665,45175],"content":"An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests. The cache is not specifically associated with a page or user session. It is used primarily to enhance application performance. For more information, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md). For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application's &lt;xref:System.Web.Caching.Cache&gt; object allows you to store and retrieve arbitrary data on subsequent requests.","pos":[0,127],"source":"An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests."},{"content":"The cache is not specifically associated with a page or user session.","pos":[128,197]},{"content":"It is used primarily to enhance application performance.","pos":[198,254]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching Application Data<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[255,347],"source":" For more information, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information on the difference between application caching and page output caching, see <bpt id=\"p1\">[</bpt>ASP.NET Caching Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[348,510],"source":" For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[45907,45996],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.Cache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the page's application.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Caching.Cache\"></xref> associated with the page's application."},{"pos":[46143,46219],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.Cache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not created.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Web.Caching.Cache\"></xref> is not created."},{"pos":[46558,46609],"content":"Gets the query string portion of the requested URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the query string portion of the requested URL.","pos":[0,51]}]},{"pos":[46621,47019],"content":"The ClientQueryString property contains the query string portion of the URL requested by the browser. For example, if the requested URL is \"http://www.contoso.com/default.aspx?id=100\", the ClientQueryString property will contain \"id=100\". The ClientQueryString property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName> method to decode the query string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ClientQueryString property contains the query string portion of the URL requested by the browser. For example, if the requested URL is \"http://www.contoso.com/default.aspx?id=100\", the ClientQueryString property will contain \"id=100\". The ClientQueryString property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName> method to decode the query string.","pos":[0,398],"nodes":[{"content":"The ClientQueryString property contains the query string portion of the URL requested by the browser.","pos":[0,101]},{"content":"For example, if the requested URL is \"http://www.contoso.com/default.aspx?id=100\", the ClientQueryString property will contain \"id=100\".","pos":[102,238]},{"content":"The ClientQueryString property is encoded; use the &lt;xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName&gt; method to decode the query string.","pos":[239,398],"source":" The ClientQueryString property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName> method to decode the query string."}]}]},{"pos":[47141,47187],"content":"The query string portion of the requested URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query string portion of the requested URL.","pos":[0,46]}]},{"pos":[47568,47690],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ClientScriptManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to manage, register, and add script to the page.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Web.UI.ClientScriptManager\"></xref> object used to manage, register, and add script to the page."},{"pos":[47703,48163],"content":"Use the ClientScript property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page. For more information, see the <xref:System.Web.UI.ClientScriptManager> class.       The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ClientScript property to get a &lt;xref:System.Web.UI.ClientScriptManager&gt; object that can be used to manage, register, and add script to a Web page.","pos":[0,154],"source":"Use the ClientScript property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page."},{"content":"For more information, see the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[155,232],"source":" For more information, see the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"The &lt;xref:System.Web.UI.ClientScriptManager&gt; class is new in <ph id=\"ph1\">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph> and replaces &lt;xref:System.Web.UI.Page&gt; class methods for managing scripts that are now deprecated.","pos":[239,458],"source":"       The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated."}]},{"pos":[48430,48494],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ClientScriptManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.ClientScriptManager\"></xref> object."},{"pos":[48870,49032],"content":"Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.","pos":[0,162]}]},{"pos":[49045,50358],"content":"If you do not set the ClientTarget property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> property reflects the capabilities of the client browser. If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.       The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:      -   `uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.      -   `downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script. You can use this alias to determine how Web pages would work in a browser that has client script disabled.       You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive.       You can define additional aliases in the `clientTarget` section of the application-level Web.config file. For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you do not set the ClientTarget property, the &lt;xref:System.Web.HttpBrowserCapabilities&gt; object associated with the &lt;xref:System.Web.UI.Page.Request%2A?displayProperty=fullName&gt; property reflects the capabilities of the client browser.","pos":[0,237],"source":"If you do not set the ClientTarget property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> property reflects the capabilities of the client browser."},{"content":"If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.","pos":[238,398]},{"content":"The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:      -   <ph id=\"ph1\">`uplevel`</ph>, which specifies browser capabilities equivalent to Internet Explorer 6.0.","pos":[405,663],"source":"       The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:      -   `uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0."},{"content":"-   <ph id=\"ph1\">`downlevel`</ph>, which specifies browser capabilities equivalent to older browsers that do not support client script.","pos":[669,786],"source":"      -   `downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script."},{"content":"You can use this alias to determine how Web pages would work in a browser that has client script disabled.","pos":[787,893]},{"content":"You can set the alias programmatically using this property, or you can set it declaratively using the <ph id=\"ph1\">`ClientTarget`</ph> attribute of the  directive.","pos":[900,1045],"source":"       You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive."},{"content":"You can define additional aliases in the <ph id=\"ph1\">`clientTarget`</ph> section of the application-level Web.config file.","pos":[1052,1157],"source":"       You can define additional aliases in the `clientTarget` section of the application-level Web.config file."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>clientTarget Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)</ept>.","pos":[1158,1303],"source":" For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)."}]},{"pos":[51004,51093],"content":"A <xref:System.String> that specifies the browser capabilities that you want to override.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that specifies the browser capabilities that you want to override.","pos":[0,89],"source":"A <xref:System.String> that specifies the browser capabilities that you want to override."}]},{"pos":[51449,51535],"content":"Sets the code page identifier for the current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sets the code page identifier for the current <xref href=\"System.Web.UI.Page\"></xref>."},{"pos":[51547,51773],"content":"In most circumstances, do not set this property in code. Set the `CodePage` attribute to the value you want using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`CodePage`</ph> attribute to the value you want using the  directive in the .aspx file.","pos":[57,147],"source":" Set the `CodePage` attribute to the value you want using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[148,226]}]},{"pos":[51887,51995],"content":"An integer that represents the code page identifier for the current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An integer that represents the code page identifier for the current <xref href=\"System.Web.UI.Page\"></xref>."},{"pos":[52362,52471],"content":"Sets the HTTP MIME type for the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Sets the HTTP MIME type for the <xref href=\"System.Web.HttpResponse\"></xref> object associated with the page."},{"pos":[52483,52690],"content":"In most circumstances, do not set this property in code. Set the `ContentType` attribute using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`ContentType`</ph> attribute using the  directive in the .aspx file.","pos":[57,128],"source":" Set the `ContentType` attribute using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[129,207]}]},{"pos":[52811,52863],"content":"The HTTP MIME type associated with the current page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP MIME type associated with the current page.","pos":[0,52]}]},{"pos":[53213,53298],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.HttpContext\"></xref> object associated with the page."},{"pos":[53310,53462],"content":"This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.","pos":[0,152]}]},{"pos":[54511,54624],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains information associated with the current page.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpContext\"></xref> object that contains information associated with the current page."},{"pos":[55113,55210],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to render the page's content.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object to render the page's content."},{"pos":[55222,55619],"content":"The CreateHtmlTextWriter method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request. You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section. Override the CreateHtmlTextWriter method to perform custom lookup.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateHtmlTextWriter method creates a &lt;xref:System.IO.TextWriter&gt; through the &lt;xref:System.Web.HttpRequest.Browser%2A&gt; property of the &lt;xref:System.Web.HttpContext.Request%2A&gt; object associated with the page request.","pos":[0,220],"source":"The CreateHtmlTextWriter method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request."},{"content":"You can add a reference to an &lt;xref:System.Web.UI.HtmlTextWriter&gt; in the <ph id=\"ph1\">`browserCaps`</ph> configuration section.","pos":[221,330],"source":" You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section."},{"content":"Override the CreateHtmlTextWriter method to perform custom lookup.","pos":[331,397]}]},{"pos":[56497,56598],"content":"The &lt;xref:System.IO.TextWriter&gt; used to create the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IO.TextWriter> used to create the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref>."},{"pos":[56671,56779],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Html32TextWriter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> or <xref href=\"System.Web.UI.Html32TextWriter\"></xref>."},{"pos":[57360,57466],"content":"Creates a specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to render the page's content.","needQuote":true,"needEscape":true,"source":"Creates a specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object to render the page's content."},{"pos":[57478,57526],"content":"This method is used internally in page adapters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used internally in page adapters.","pos":[0,48]}]},{"pos":[57747,57848],"content":"The &lt;xref:System.IO.TextWriter&gt; used to create the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IO.TextWriter> used to create the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref>."},{"pos":[57913,57947],"content":"The type of text writer to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of text writer to create.","pos":[0,34]}]},{"pos":[58020,58110],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that renders the content of the page.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that renders the content of the page."},{"pos":[58280,58344],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">writerType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is set to an invalid type.","needQuote":true,"needEscape":true,"source":"The <code>writerType</code> parameter is set to an invalid type."},{"pos":[58633,58738],"content":"Sets the culture ID for the <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Sets the culture ID for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page."},{"pos":[58751,59584],"content":"Set the `Culture` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the value of this property. In addition, you can also explicitly set the value of the Culture property programmatically or in the  element of the Web.config file.       The Culture property is used to help localize page content. You can set it to any valid culture ID. For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French. You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it. The automatic language detection can be qualified with a default value such as `auto:en-us`.       For more information, see the <xref:System.Globalization.CultureInfo> class overview.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set the <ph id=\"ph1\">`Culture`</ph> attribute in the  directive in the .aspx file.","pos":[0,64],"source":"Set the `Culture` attribute in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the value of this property.","pos":[65,157]},{"content":"In addition, you can also explicitly set the value of the Culture property programmatically or in the  element of the Web.config file.","pos":[158,292]},{"content":"The Culture property is used to help localize page content.","pos":[299,358]},{"content":"You can set it to any valid culture ID.","pos":[359,398]},{"content":"For example, the <ph id=\"ph1\">`en-us`</ph> culture ID sets the page to American English, while the <ph id=\"ph2\">`fr`</ph> culture ID sets the page to French.","pos":[399,520],"source":" For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French."},{"content":"You can also set the value to <ph id=\"ph1\">`auto`</ph> which will perform automatic detection of the browser's preferred language and set it.","pos":[521,644],"source":" You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it."},{"content":"The automatic language detection can be qualified with a default value such as <ph id=\"ph1\">`auto:en-us`</ph>.","pos":[645,737],"source":" The automatic language detection can be qualified with a default value such as `auto:en-us`."},{"content":"For more information, see the &lt;xref:System.Globalization.CultureInfo&gt; class overview.","pos":[744,829],"source":"       For more information, see the <xref:System.Globalization.CultureInfo> class overview."}]},{"pos":[59702,59721],"content":"A valid culture ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid culture ID.","pos":[0,19]}]},{"pos":[60126,60298],"content":"Performs any initialization of the instance of the <xref href=\"System.Web.UI.Page\"></xref> class that is required by RAD designers. This method is used only at design time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs any initialization of the instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is required by RAD designers.","pos":[0,131],"source":"Performs any initialization of the instance of the <xref href=\"System.Web.UI.Page\"></xref> class that is required by RAD designers."},{"content":"This method is used only at design time.","pos":[132,172]}]},{"pos":[60806,60957],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of data posted back to the page using either a POST or a GET command.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> of data posted back to the page using either a POST or a GET command."},{"pos":[60969,61363],"content":"The DeterminePostBackMode method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page. The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred. The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the DeterminePostBackMode method is called.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DeterminePostBackMode method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page. The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred. The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the DeterminePostBackMode method is called.","pos":[0,394],"nodes":[{"content":"The DeterminePostBackMode method returns a &lt;xref:System.Collections.Specialized.NameValueCollection&gt; object that contains the data posted back to the page.","pos":[0,155],"source":"The DeterminePostBackMode method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page."},{"content":"The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.","pos":[156,285]},{"content":"The &lt;xref:System.Web.UI.Page.IsPostBack%2A&gt; property is set when the DeterminePostBackMode method is called.","pos":[286,394],"source":" The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the DeterminePostBackMode method is called."}]}]},{"pos":[61595,62033],"content":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the form data. If the postback used the POST command, the form information is returned from the <xref:System.Web.UI.Page.Context*> object. If the postback used the GET command, the query string information is returned. If the page is being requested for the first time, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the form data.","pos":[0,109],"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the form data."},{"content":"If the postback used the POST command, the form information is returned from the &lt;xref:System.Web.UI.Page.Context*&gt; object.","pos":[110,233],"source":" If the postback used the POST command, the form information is returned from the <xref:System.Web.UI.Page.Context*> object."},{"content":"If the postback used the GET command, the query string information is returned.","pos":[234,313]},{"content":"If the page is being requested for the first time, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[314,438],"source":" If the page is being requested for the first time, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[62522,62689],"content":"Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.","pos":[0,167]}]},{"pos":[62701,62780],"content":"For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the &lt;xref:System.Web.UnvalidatedRequestValues&gt; class.","pos":[0,79],"source":"For more information, see the <xref:System.Web.UnvalidatedRequestValues> class."}]},{"pos":[63023,63073],"content":"An object that contains the unvalidated form data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the unvalidated form data.","pos":[0,50]}]},{"pos":[63514,63602],"content":"Gets or sets a value indicating whether the page validates postback and callback events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the page validates postback and callback events.","pos":[0,88]}]},{"pos":[63615,64859],"content":"When the EnableEventValidation property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control. A control registers its events during rendering and then validates the events during postback or callback handling. For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception. All event-driven controls in ASP.NET use this feature by default.       If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.      > [!IMPORTANT] >  This feature reduces the risk of unauthorized or malicious postback requests and callbacks. It is strongly recommended that you do not disable event validation.       You set the EnableEventValidation property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file. If you set this property in code, you must set it before the page is initialized.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the EnableEventValidation property is set to <ph id=\"ph1\">`true`</ph>, ASP.NET validates that a control event originated from the user interface that was rendered by that control.","pos":[0,166],"source":"When the EnableEventValidation property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control."},{"content":"A control registers its events during rendering and then validates the events during postback or callback handling.","pos":[167,282]},{"content":"For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.","pos":[283,472]},{"content":"All event-driven controls in ASP.NET use this feature by default.","pos":[473,538]},{"content":"If you write client script that changes a control in the client at run time, you might have to use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; method in order to avoid false event validation errors.","pos":[545,774],"source":"       If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This feature reduces the risk of unauthorized or malicious postback requests and callbacks.","pos":[780,889],"source":"      > [!IMPORTANT] >  This feature reduces the risk of unauthorized or malicious postback requests and callbacks."},{"content":"It is strongly recommended that you do not disable event validation.","pos":[890,958]},{"content":"You set the EnableEventValidation property by setting the <ph id=\"ph1\">`enableEventValidation`</ph> attribute of the  directive or the <ph id=\"ph2\">`enableEventValidation`</ph> attribute of the  element in the Web.config file.","pos":[965,1155],"source":"       You set the EnableEventValidation property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file."},{"content":"If you set this property in code, you must set it before the page is initialized.","pos":[1156,1237]}]},{"pos":[64998,65261],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page validates postback and callback events; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.The default is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page validates postback and callback events; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[65440,65514],"content":"The EnableEventValidation property was set after the page was initialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The EnableEventValidation property was set after the page was initialized.","pos":[0,74]}]},{"pos":[65843,66008],"content":"Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.","pos":[0,165]}]},{"pos":[66021,66301],"content":"For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.       Even if EnableViewState is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For information about why you might want to disable view state, see &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;.","pos":[0,141],"source":"For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>."},{"content":"Even if EnableViewState is <ph id=\"ph1\">`false`</ph>, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.","pos":[148,278],"source":"       Even if EnableViewState is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback."}]},{"pos":[67249,67499],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page maintains its view state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page maintains its view state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,173],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page maintains its view state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[174,250],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[67908,68074],"content":"Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.","pos":[0,166]}]},{"pos":[68087,68816],"content":"A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser. When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.       Do not set this property in code. Set the `EnableViewStateMac` attribute using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.      > [!IMPORTANT] >  This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state. The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.","pos":[0,142]},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the encrypted view state is checked to verify that it has not been tampered with on the client.","pos":[143,275],"source":" When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client."},{"content":"Do not set this property in code.","pos":[282,315]},{"content":"Set the <ph id=\"ph1\">`EnableViewStateMac`</ph> attribute using the  directive in the .aspx file.","pos":[316,394],"source":" Set the `EnableViewStateMac` attribute using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[395,473]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This attribute should never be set to <ph id=\"ph2\">`false`</ph> in a production Web site, even if the application or page does not use view state.","pos":[479,625],"source":"      > [!IMPORTANT] >  This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state."},{"content":"The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.","pos":[626,724]}]},{"pos":[68944,69209],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the view state should be MAC checked and encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the view state should be MAC checked and encoded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,188],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the view state should be MAC checked and encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[189,265],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[69576,69694],"content":"Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.","pos":[0,118]}]},{"pos":[70033,70083],"content":"The error page to which the browser is redirected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The error page to which the browser is redirected.","pos":[0,50]}]},{"pos":[70535,70580],"content":"Starts the execution of an asynchronous task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts the execution of an asynchronous task.","pos":[0,45]}]},{"pos":[70593,71916],"content":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task.       The ExecuteRegisteredAsyncTasks method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page. This automatic call to ExecuteRegisteredAsyncTasks occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event. Call the ExecuteRegisteredAsyncTasks method for tasks you want to be invoked at times other than the automatic call to this method. Note, asynchronous tasks will be executed only once even though ExecuteRegisteredAsyncTasks may be called more than once.       The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the ExecuteRegisteredAsyncTasks method. The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence. If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task.       The ExecuteRegisteredAsyncTasks method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page. This automatic call to ExecuteRegisteredAsyncTasks occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event. Call the ExecuteRegisteredAsyncTasks method for tasks you want to be invoked at times other than the automatic call to this method. Note, asynchronous tasks will be executed only once even though ExecuteRegisteredAsyncTasks may be called more than once.       The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the ExecuteRegisteredAsyncTasks method. The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence. If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately.","pos":[0,1319],"nodes":[{"content":"Define an asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class.","pos":[0,79],"source":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class."},{"content":"After the task is defined, and is registered with the page using the &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt; method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task.","pos":[80,289],"source":" After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task."},{"content":"The ExecuteRegisteredAsyncTasks method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.","pos":[296,490]},{"content":"This automatic call to ExecuteRegisteredAsyncTasks occurs just before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.","pos":[491,615],"source":" This automatic call to ExecuteRegisteredAsyncTasks occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event."},{"content":"Call the ExecuteRegisteredAsyncTasks method for tasks you want to be invoked at times other than the automatic call to this method.","pos":[616,747]},{"content":"Note, asynchronous tasks will be executed only once even though ExecuteRegisteredAsyncTasks may be called more than once.","pos":[748,869]},{"content":"The &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; property is reset on every call to the ExecuteRegisteredAsyncTasks method.","pos":[876,996],"source":"       The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the ExecuteRegisteredAsyncTasks method."},{"content":"The last value of the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence.","pos":[997,1135],"source":" The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence."},{"content":"If an asynchronous task takes more than the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately.","pos":[1136,1319],"source":" If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately."}]}]},{"pos":[73344,73391],"content":"There is an exception in the asynchronous task.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is an exception in the asynchronous task.","pos":[0,47]}]},{"pos":[73725,73835],"content":"Sets an array of files that the current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is dependent upon.","needQuote":true,"needEscape":true,"source":"Sets an array of files that the current <xref href=\"System.Web.HttpResponse\"></xref> object is dependent upon."},{"pos":[73848,74301],"content":"This property has been deprecated. Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.       In most circumstances, do not set this property in code. Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property has been deprecated.","pos":[0,34]},{"content":"Use the &lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt; method or the &lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt; method of the &lt;xref:System.Web.HttpResponse&gt; class instead.","pos":[35,222],"source":" Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead."},{"content":"In most circumstances, do not set this property in code.","pos":[229,285]},{"content":"Set the <ph id=\"ph1\">`FileDependencies`</ph> attribute to <ph id=\"ph2\">`true`</ph> using the  directive in the .aspx file.","pos":[286,372],"source":" Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[373,451]}]},{"pos":[74463,74569],"content":"The array of files that the current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is dependent upon.","needQuote":true,"needEscape":true,"source":"The array of files that the current <xref href=\"System.Web.HttpResponse\"></xref> object is dependent upon."},{"pos":[74996,75082],"content":"Searches the page naming container for a server control with the specified identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searches the page naming container for a server control with the specified identifier.","pos":[0,86]}]},{"pos":[75094,75485],"content":"The FindControl method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time. The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page. To access controls in a subordinate naming container, call the `FindControl` method of that container.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FindControl method can be used to access a control whose &lt;xref:System.Web.UI.Control.ID%2A&gt; is not available at design time.","pos":[0,128],"source":"The FindControl method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time."},{"content":"The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.","pos":[129,288]},{"content":"To access controls in a subordinate naming container, call the <ph id=\"ph1\">`FindControl`</ph> method of that container.","pos":[289,391],"source":" To access controls in a subordinate naming container, call the `FindControl` method of that container."}]},{"pos":[76260,76303],"content":"The identifier for the control to be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the control to be found.","pos":[0,43]}]},{"pos":[76369,76496],"content":"The specified control, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified control does not exist.","needQuote":true,"needEscape":true,"source":"The specified control, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified control does not exist."},{"pos":[76831,76863],"content":"Gets the HTML form for the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the HTML form for the page.","pos":[0,32]}]},{"pos":[76875,77045],"content":"Use the Form property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Form property to access the methods and properties of the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; object that is the base of the control hierarchy on the page.","pos":[0,170],"source":"Use the Form property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page."}]},{"pos":[77205,77298],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlForm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> object associated with the page."},{"pos":[77705,77801],"content":"Initializes the control tree during page generation based on the declarative nature of the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the control tree during page generation based on the declarative nature of the page.","pos":[0,96]}]},{"pos":[77813,78253],"content":"The FrameworkInitialize method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page. The FrameworkInitialize method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page. Ordinarily, you should not over need to override this method. If overriding, be sure to call the base class's FrameworkInitialize method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FrameworkInitialize method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page. The FrameworkInitialize method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page. Ordinarily, you should not over need to override this method. If overriding, be sure to call the base class's FrameworkInitialize method.","pos":[0,440],"nodes":[{"content":"The FrameworkInitialize method initializes the &lt;xref:System.Web.UI.Page&gt; object and creates the control tree based on the declarative nature of the page.","pos":[0,153],"source":"The FrameworkInitialize method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page."},{"content":"The FrameworkInitialize method is overridden by the page parsing and code generation for the &lt;xref:System.Web.UI.Page&gt; class for a declarative page.","pos":[154,302],"source":" The FrameworkInitialize method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page."},{"content":"Ordinarily, you should not over need to override this method.","pos":[303,364]},{"content":"If overriding, be sure to call the base class's FrameworkInitialize method.","pos":[365,440]}]}]},{"pos":[78725,78789],"content":"Gets the data item at the top of the data-binding context stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data item at the top of the data-binding context stack.","pos":[0,64]}]},{"pos":[78919,78975],"content":"The object at the top of the data binding context stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object at the top of the data binding context stack.","pos":[0,56]}]},{"pos":[79144,79190],"content":"There is no data-binding context for the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is no data-binding context for the page.","pos":[0,46]}]},{"pos":[79674,79818],"content":"Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.","pos":[0,144]}]},{"pos":[79830,79928],"content":"See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See the &lt;xref:System.Web.UI.ClientScriptManager&gt; class for alternatives to this deprecated member.","pos":[0,98],"source":"See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member."}]},{"pos":[80126,80185],"content":"The server control that receives the client event postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control that receives the client event postback.","pos":[0,59]}]},{"pos":[80250,80387],"content":"A <xref:System.String> that is passed to &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that is passed to <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,137],"source":"A <xref:System.String> that is passed to &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;."}]},{"pos":[80445,80489],"content":"The string that represents the client event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string that represents the client event.","pos":[0,44]}]},{"pos":[81065,81323],"content":"Gets a reference, with <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_javascript:\" name=\"javascript:\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.","needQuote":true,"needEscape":true,"source":"Gets a reference, with <xref uid=\"langword_csharp_javascript:\" name=\"javascript:\" href=\"\"></xref> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments."},{"pos":[81335,81466],"content":"See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt; method for an alternative to this deprecated member.","pos":[0,131],"source":"See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member."}]},{"pos":[81668,81711],"content":"The server control to process the postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control to process the postback.","pos":[0,43]}]},{"pos":[81776,81819],"content":"The parameter passed to the server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter passed to the server control.","pos":[0,43]}]},{"pos":[81877,82000],"content":"A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.","pos":[0,123]}]},{"pos":[82526,82710],"content":"Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <xref href=\"System.Web.UI.Control\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that can be used in a client event to cause postback to the server.","pos":[0,84]},{"content":"The reference string is defined by the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[85,184],"source":" The reference string is defined by the specified <xref href=\"System.Web.UI.Control\"></xref> object."}]},{"pos":[82722,82902],"content":"This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","pos":[0,180],"nodes":[{"content":"This method has been deprecated.","pos":[0,32]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.","pos":[33,180],"source":" Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead."}]}]},{"pos":[83324,83381],"content":"The server control to process the postback on the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control to process the postback on the server.","pos":[0,57]}]},{"pos":[83439,83515],"content":"A string that, when treated as script on the client, initiates the postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that, when treated as script on the client, initiates the postback.","pos":[0,76]}]},{"pos":[84089,84311],"content":"Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.","pos":[0,222],"nodes":[{"content":"Returns a string that can be used in a client event to cause postback to the server.","pos":[0,84]},{"content":"The reference string is defined by the specified control that handles the postback and a string argument of additional event information.","pos":[85,222]}]}]},{"pos":[84323,84503],"content":"This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","pos":[0,180],"nodes":[{"content":"This method has been deprecated.","pos":[0,32]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.","pos":[33,180],"source":" Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead."}]}]},{"pos":[84938,84981],"content":"The server control to process the postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control to process the postback.","pos":[0,43]}]},{"pos":[85046,85089],"content":"The parameter passed to the server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter passed to the server control.","pos":[0,43]}]},{"pos":[85147,85223],"content":"A string that, when treated as script on the client, initiates the postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that, when treated as script on the client, initiates the postback.","pos":[0,76]}]},{"pos":[85631,85853],"content":"Retrieves a hash code that is generated by <xref href=\"System.Web.UI.Page\"></xref> objects that are generated at run time. This hash code is unique to the <xref href=\"System.Web.UI.Page\"></xref> object's control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a hash code that is generated by <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are generated at run time.","pos":[0,122],"source":"Retrieves a hash code that is generated by <xref href=\"System.Web.UI.Page\"></xref> objects that are generated at run time."},{"content":"This hash code is unique to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object's control hierarchy.","pos":[123,222],"source":" This hash code is unique to the <xref href=\"System.Web.UI.Page\"></xref> object's control hierarchy."}]},{"pos":[85865,85893],"content":"Do not override this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not override this method.","pos":[0,28]}]},{"pos":[86031,86085],"content":"The hash code generated at run time. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code generated at run time. The default is 0.","pos":[0,54],"nodes":[{"content":"The hash code generated at run time.","pos":[0,36]},{"content":"The default is 0.","pos":[37,54]}]}]},{"pos":[86521,86597],"content":"Returns a collection of control validators for a specified validation group.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of control validators for a specified validation group.","pos":[0,76]}]},{"pos":[86610,87093],"content":"The GetValidators method returns all the validation objects associated with a specific validation group. You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.       To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetValidators method returns all the validation objects associated with a specific validation group.","pos":[0,104]},{"content":"You can return the default validation group (all validation controls associated with controls without the <ph id=\"ph1\">`ValidationGroup`</ph> property set) by setting the <ph id=\"ph2\">`validationGroup`</ph> parameter to <ph id=\"ph3\">`null`</ph>.","pos":[105,296],"source":" You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`."},{"content":"To validate the members of the validation group, you can enumerate over the collection and call the &lt;xref:System.Web.UI.IValidator.Validate%2A&gt; method of each validator returned.","pos":[303,481],"source":"       To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned."}]},{"pos":[87599,87734],"content":"The validation group to return, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return the default validation group.","needQuote":true,"needEscape":true,"source":"The validation group to return, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to return the default validation group."},{"pos":[87812,87941],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ValidatorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the control validators for the specified validation group.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.ValidatorCollection\"></xref> that contains the control validators for the specified validation group."},{"pos":[88450,88540],"content":"Returns a list of physical file names that correspond to a list of virtual file locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of physical file names that correspond to a list of virtual file locations.","pos":[0,90]}]},{"pos":[88552,88794],"content":"The GetWrappedFileDependencies method gets a list of files, such as user control files, that make up the current page. If any of these pages are modified, the entire page is compiled the next time it is requested. Do not override this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetWrappedFileDependencies method gets a list of files, such as user control files, that make up the current page. If any of these pages are modified, the entire page is compiled the next time it is requested. Do not override this method.","pos":[0,242],"nodes":[{"content":"The GetWrappedFileDependencies method gets a list of files, such as user control files, that make up the current page.","pos":[0,118]},{"content":"If any of these pages are modified, the entire page is compiled the next time it is requested.","pos":[119,213]},{"content":"Do not override this method.","pos":[214,242]}]}]},{"pos":[88995,89036],"content":"A string array of virtual file locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string array of virtual file locations.","pos":[0,41]}]},{"pos":[89094,89149],"content":"An object containing a list of physical file locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object containing a list of physical file locations.","pos":[0,55]}]},{"pos":[89509,89742],"content":"Gets the document header for the page if the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element is defined with a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_runat=server\" name=\"runat=server\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in the page declaration.","needQuote":true,"needEscape":true,"source":"Gets the document header for the page if the <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element is defined with a <xref uid=\"langword_csharp_runat=server\" name=\"runat=server\" href=\"\"></xref> in the page declaration."},{"pos":[89755,90459],"content":"The Header property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page. The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.      > [!NOTE] >  Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported. When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page. For more information, see [Microsoft Ajax Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Header property gets a reference to an &lt;xref:System.Web.UI.HtmlControls.HtmlHead&gt; object that you can use to set document header information for the page.","pos":[0,158],"source":"The Header property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page."},{"content":"The &lt;xref:System.Web.UI.HtmlControls.HtmlHead&gt; allows you to add information such as style sheets, style rules, a title, and metadata to the <ph id=\"ph1\">`head`</ph> element.","pos":[159,315],"source":" The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Adding styles programmatically using the methods of the &lt;xref:System.Web.UI.IStyleSheet&gt; interface during asynchronous postbacks is not supported.","pos":[321,480],"source":"      > [!NOTE] >  Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported."},{"content":"When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.","pos":[481,609]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Microsoft Ajax Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[610,701],"source":" For more information, see [Microsoft Ajax Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[91116,91203],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlHead\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the page header.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlControls.HtmlHead\"></xref> containing the page header."},{"pos":[91523,91629],"content":"Gets or sets an identifier for a particular instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets or sets an identifier for a particular instance of the <xref href=\"System.Web.UI.Page\"></xref> class."},{"pos":[91750,91865],"content":"The identifier for the instance of the <xref href=\"System.Web.UI.Page\"></xref> class. The default value is '_Page'.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,85],"source":"The identifier for the instance of the <xref href=\"System.Web.UI.Page\"></xref> class."},{"content":"The default value is '_Page'.","pos":[86,115]}]},{"pos":[92226,92332],"content":"Gets the character used to separate control identifiers when building a unique ID for a control on a page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the character used to separate control identifiers when building a unique ID for a control on a page.","pos":[0,106]}]},{"pos":[92452,92684],"content":"The character used to separate control identifiers. The default is set by the <xref href=\"System.Web.UI.Adapters.PageAdapter\"></xref> instance that renders the page. The IdSeparator is a server-side field and should not be modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character used to separate control identifiers.","pos":[0,51]},{"content":"The default is set by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Adapters.PageAdapter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that renders the page.","pos":[52,165],"source":" The default is set by the <xref href=\"System.Web.UI.Adapters.PageAdapter\"></xref> instance that renders the page."},{"content":"The IdSeparator is a server-side field and should not be modified.","pos":[166,232]}]},{"pos":[93056,93100],"content":"Occurs when page initialization is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when page initialization is complete.","pos":[0,44]}]},{"pos":[93113,93575],"content":"The InitComplete event is called at the end of the page's initialization stage. At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated. You can access server controls, but they will not yet contain information returned from the user.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitComplete event is called at the end of the page's initialization stage.","pos":[0,79]},{"content":"At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.","pos":[80,213]},{"content":"You can access server controls, but they will not yet contain information returned from the user.","pos":[214,311]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[318,460],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[93703,93715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94075,94195],"content":"Sets the &lt;xref:System.Web.UI.Page.Culture<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Web.UI.Page.UICulture<ept id=\"p1\">*</ept>&gt; for the current thread of the page.","needQuote":true,"needEscape":true,"source":"Sets the <xref:System.Web.UI.Page.Culture*> and <xref:System.Web.UI.Page.UICulture*> for the current thread of the page."},{"pos":[94207,94513],"content":"The InitializeCulture method contains no coding logic. Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the InitializeCulture method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeCulture method contains no coding logic. Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the InitializeCulture method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.","pos":[0,306],"nodes":[{"content":"The InitializeCulture method contains no coding logic.","pos":[0,54]},{"content":"Control developers extending the functionality of the &lt;xref:System.Web.UI.Page&gt; class can override the InitializeCulture method to initialize the &lt;xref:System.Web.UI.Page.Culture%2A&gt; and &lt;xref:System.Web.UI.Page.UICulture%2A&gt; information for the page.","pos":[55,306],"source":" Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the InitializeCulture method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page."}]}]},{"pos":[95137,95271],"content":"Initializes the output cache for the current page request based on an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.OutputCacheParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the output cache for the current page request based on an <xref href=\"System.Web.UI.OutputCacheParameters\"></xref> object."},{"pos":[95283,95696],"content":"You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should not call this method.","pos":[0,32]},{"content":"To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.","pos":[33,207],"source":" To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class."},{"content":"The latter are accessible through <ph id=\"ph1\">`Response.Cache`</ph> syntax in the page's code declaration block or code-behind file.","pos":[208,323],"source":" The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching ASP.NET Pages<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[324,413],"source":" For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[95919,96012],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.OutputCacheParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cache settings.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.OutputCacheParameters\"></xref> that contains the cache settings."},{"pos":[96408,96454],"content":"The output cache settings location is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output cache settings location is invalid.","pos":[0,46]}]},{"pos":[97105,97163],"content":"Initializes the output cache for the current page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the output cache for the current page request.","pos":[0,58]}]},{"pos":[97175,97550],"content":"You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should not call this method.","pos":[0,32]},{"content":"To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.","pos":[33,207],"source":" To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class."},{"content":"The latter are accessible through <ph id=\"ph1\">`Response.Cache`</ph> syntax in the page's code.","pos":[208,285],"source":" The latter are accessible through `Response.Cache` syntax in the page's code."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching ASP.NET Pages<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[286,375],"source":" For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[97814,97883],"content":"The amount of time that objects stored in the output cache are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of time that objects stored in the output cache are valid.","pos":[0,69]}]},{"pos":[97952,98038],"content":"A semicolon-separated list of headers that content from the output cache will vary by.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of headers that content from the output cache will vary by.","pos":[0,86]}]},{"pos":[98107,98184],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header."},{"pos":[98269,98342],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.OutputCacheLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.OutputCacheLocation\"></xref> values."},{"pos":[98410,98532],"content":"A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.","pos":[0,122]}]},{"pos":[98709,98765],"content":"An invalid value is specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">location</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An invalid value is specified for <code>location</code>."},{"pos":[99465,99523],"content":"Initializes the output cache for the current page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the output cache for the current page request.","pos":[0,58]}]},{"pos":[99535,99906],"content":"You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should not call this method.","pos":[0,32]},{"content":"To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.","pos":[33,203],"source":" To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class."},{"content":"The latter are accessible through <ph id=\"ph1\">`Response.Cache`</ph> syntax in the page's code.","pos":[204,281],"source":" The latter are accessible through `Response.Cache` syntax in the page's code."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching ASP.NET Pages<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[282,371],"source":" For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[100200,100269],"content":"The amount of time that objects stored in the output cache are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of time that objects stored in the output cache are valid.","pos":[0,69]}]},{"pos":[100347,100460],"content":"A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.","pos":[0,113]}]},{"pos":[100529,100615],"content":"A semicolon-separated list of headers that content from the output cache will vary by.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of headers that content from the output cache will vary by.","pos":[0,86]}]},{"pos":[100684,100761],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header."},{"pos":[100846,100919],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.OutputCacheLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.OutputCacheLocation\"></xref> values."},{"pos":[100987,101109],"content":"A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.","pos":[0,122]}]},{"pos":[101286,101342],"content":"An invalid value is specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">location</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An invalid value is specified for <code>location</code>."},{"pos":[101631,101700],"content":"Gets a value indicating whether the page is processed asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the page is processed asynchronously.","pos":[0,69]}]},{"pos":[101712,102062],"content":"Use the IsAsync property to determine whether the Web page is running in asynchronous mode. This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous. For more information about asynchronous programming, see [Asynchronous Operations](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the IsAsync property to determine whether the Web page is running in asynchronous mode.","pos":[0,91]},{"content":"This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.","pos":[92,227]},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Operations<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[228,350],"source":" For more information about asynchronous programming, see [Asynchronous Operations](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[102173,102345],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page is in asynchronous mode; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>;","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is in asynchronous mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>;"},{"pos":[102706,102787],"content":"Gets a value that indicates whether the page request is the result of a callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the page request is the result of a callback.","pos":[0,81]}]},{"pos":[102799,102914],"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing Client Callbacks Without Postbacks<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md)."},{"pos":[103028,103212],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page request is the result of a callback; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page request is the result of a callback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[103723,103817],"content":"Determines whether the client script block with the specified key is registered with the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the client script block with the specified key is registered with the page.","pos":[0,94]}]},{"pos":[103830,104313],"content":"Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.       The IsClientScriptBlockRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.       The IsClientScriptBlockRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","pos":[0,481],"nodes":[{"content":"Call this method before calling &lt;xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName&gt; to avoid unnecessarily assembling the client-side script.","pos":[0,169],"source":"Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script."},{"content":"This is particularly important if the script requires a large amount of server resources to create.","pos":[170,269]},{"content":"The IsClientScriptBlockRegistered method has been deprecated.","pos":[276,337]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[338,481],"source":" Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class."}]}]},{"pos":[105127,105177],"content":"The string key of the client script to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string key of the client script to search for.","pos":[0,50]}]},{"pos":[105236,105406],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the script block is registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the script block is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[105834,105912],"content":"Gets a value indicating whether the page is involved in a cross-page postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the page is involved in a cross-page postback.","pos":[0,78]}]},{"pos":[105925,106775],"content":"ASP.NET provides two mechanisms for transferring control from one page to another. You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.       In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page. If, for example, Page A posts to Page B, Page A's IsCrossPagePostBack property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET provides two mechanisms for transferring control from one page to another.","pos":[0,82]},{"content":"You can use the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the &lt;xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A&gt; property of a button control that implements the &lt;xref:System.Web.UI.WebControls.IButtonControl&gt; interface.","pos":[83,430],"source":" You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface."},{"content":"In either case, the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; page property will contain an object that represents the previous or originator page.","pos":[437,584],"source":"       In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page."},{"content":"If, for example, Page A posts to Page B, Page A's IsCrossPagePostBack property (accessible through the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property) will be <ph id=\"ph1\">`true`</ph> and Page B's &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property will have the name of Page A.","pos":[585,848],"source":" If, for example, Page A posts to Page B, Page A's IsCrossPagePostBack property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A."}]},{"pos":[106899,107088],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page is participating in a cross-page request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is participating in a cross-page request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[107461,107588],"content":"Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.","pos":[0,127]}]},{"pos":[107600,107763],"content":"For an explanation of the difference between postbacks and callbacks, see <bpt id=\"p1\">[</bpt>Implementing Client Callbacks Without Postbacks<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md)."},{"pos":[109035,109232],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the page is being loaded in response to a client postback; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is being loaded in response to a client postback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[109706,109810],"content":"Gets a value that indicates whether the control in the page that performs postbacks has been registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the control in the page that performs postbacks has been registered.","pos":[0,104]}]},{"pos":[109946,110117],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control has been registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has been registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[110503,110600],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be reused.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.Page\"></xref> object can be reused."},{"pos":[110714,110790],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[111281,111396],"content":"Determines whether the client startup script is registered with the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the client startup script is registered with the <xref href=\"System.Web.UI.Page\"></xref> object."},{"pos":[111409,111880],"content":"Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.       The IsStartupScriptRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.       The IsStartupScriptRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","pos":[0,469],"nodes":[{"content":"Call this method before calling &lt;xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName&gt; to avoid unnecessarily assembling the client-side script.","pos":[0,165],"source":"Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script."},{"content":"This is particularly important if the script requires a large amount of server resources to create.","pos":[166,265]},{"content":"The IsStartupScriptRegistered method has been deprecated.","pos":[272,329]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[330,469],"source":" Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class."}]}]},{"pos":[112674,112725],"content":"The string key of the startup script to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string key of the startup script to search for.","pos":[0,51]}]},{"pos":[112784,112956],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the startup script is registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the startup script is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[113320,113378],"content":"Gets a value indicating whether page validation succeeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether page validation succeeded.","pos":[0,58]}]},{"pos":[113391,114332],"content":"For this property to return `true`, all validation server controls in the current validation group must validate successfully. You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing. These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.       If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For this property to return <ph id=\"ph1\">`true`</ph>, all validation server controls in the current validation group must validate successfully.","pos":[0,126],"source":"For this property to return `true`, all validation server controls in the current validation group must validate successfully."},{"content":"You should check this property only after you have called the &lt;xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName&gt; method, or set the <ph id=\"ph1\">`CausesValidation`</ph> property to <ph id=\"ph2\">`true`</ph> in the <ph id=\"ph3\">`OnServerClick`</ph> event handler for an ASP.NET server control that initiates form processing.","pos":[127,407],"source":" You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing."},{"content":"These server controls include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; classes.","pos":[408,732],"source":" These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes."},{"content":"If you force validation of a validation group using the &lt;xref:System.Web.UI.Page.Validate%2A&gt; method, then all validation controls in the specified validation group must validate successfully as well.","pos":[739,939],"source":"       If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well."}]},{"pos":[114953,115118],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if page validation succeeded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if page validation succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[115267,115329],"content":"The IsValid property is called before validation has occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IsValid property is called before validation has occurred.","pos":[0,62]}]},{"pos":[115608,115658],"content":"Gets a list of objects stored in the page context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of objects stored in the page context.","pos":[0,50]}]},{"pos":[115671,116096],"content":"Use the Items property to store objects with the same lifetime as the page request. This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.       Objects added to the Items property are available throughout the lifetime of the page, so you can add objects to the Items property in events early in the page life cycle and access those objects in later events.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Items property to store objects with the same lifetime as the page request. This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.       Objects added to the Items property are available throughout the lifetime of the page, so you can add objects to the Items property in events early in the page life cycle and access those objects in later events.","pos":[0,423],"nodes":[{"content":"Use the Items property to store objects with the same lifetime as the page request.","pos":[0,83]},{"content":"This property is read-only; however, you can add objects to the &lt;xref:System.Collections.IDictionary&gt; object it returns.","pos":[84,204],"source":" This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns."},{"content":"Objects added to the Items property are available throughout the lifetime of the page, so you can add objects to the Items property in events early in the page life cycle and access those objects in later events.","pos":[211,423]}]}]},{"pos":[116248,116350],"content":"A reference to an <xref:System.Collections.IDictionary> containing objects stored in the page context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to an &lt;xref:System.Collections.IDictionary&gt; containing objects stored in the page context.","pos":[0,102],"source":"A reference to an <xref:System.Collections.IDictionary> containing objects stored in the page context."}]},{"pos":[116679,116791],"content":"Sets the locale identifier for the <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Sets the locale identifier for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page."},{"pos":[116803,117109],"content":"In most circumstances, do not set this property in code. The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"The <ph id=\"ph1\">`LCID`</ph> attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the &lt;xref:System.Web.UI.Page.Culture%2A&gt; and &lt;xref:System.Web.UI.Page.UICulture%2A&gt; properties.","pos":[57,306],"source":" The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties."}]},{"pos":[117219,117301],"content":"The locale identifier to pass to the <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The locale identifier to pass to the <xref href=\"System.Threading.Thread\"></xref>."},{"pos":[117666,117727],"content":"Occurs at the end of the load stage of the page's life cycle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs at the end of the load stage of the page's life cycle.","pos":[0,61]}]},{"pos":[117740,118094],"content":"The LoadComplete event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The LoadComplete event occurs after all postback data and view-state data is loaded into the page and after the &lt;xref:System.Web.UI.Control.OnLoad%2A&gt; method has been called for all controls on the page.","pos":[0,203],"source":"The LoadComplete event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[210,352],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[118222,118234],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[118679,118772],"content":"Loads any saved view-state information to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Loads any saved view-state information to the <xref href=\"System.Web.UI.Page\"></xref> object."},{"pos":[118785,120172],"content":"The LoadPageStateFromPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The LoadPageStateFromPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.","pos":[0,1381],"nodes":[{"content":"The LoadPageStateFromPersistenceMedium method uses the &lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt; method of the &lt;xref:System.Web.UI.PageStatePersister?displayProperty=fullName&gt; object referenced by the &lt;xref:System.Web.UI.Page.PageStatePersister%2A&gt; property to load any saved view-state information for the &lt;xref:System.Web.UI.Page&gt; object.","pos":[0,346],"source":"The LoadPageStateFromPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object."},{"content":"ASP.NET includes two descendents of the &lt;xref:System.Web.UI.PageStatePersister&gt; class, the &lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt; class that saves state information in a hidden field included in the ASP.NET page, and the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class that saves state in the &lt;xref:System.Web.UI.Page.Session%2A&gt; object associated with the request.","pos":[353,735],"source":"       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request."},{"content":"To save state in the location of your choice, you should create a new descendent of the &lt;xref:System.Web.UI.PageStatePersister&gt; class that saves and loads state to the persistence medium of your choice.","pos":[742,944],"source":"       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice."},{"content":"For an example of creating a new &lt;xref:System.Web.UI.PageStatePersister&gt; object, see the &lt;xref:System.Web.UI.PageStatePersister&gt; class.","pos":[945,1080],"source":" For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class."},{"content":"If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the &lt;xref:System.Web.UI.Page&gt; state from anything other than a hidden field.","pos":[1087,1260],"source":"       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field."},{"content":"If you choose to do so, you must also override the &lt;xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A&gt; method.","pos":[1261,1381],"source":" If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method."}]}]},{"pos":[120337,120358],"content":"The saved view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The saved view state.","pos":[0,21]}]},{"pos":[120856,121062],"content":"Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. This property replaces the obsolete <xref:System.Web.UI.Page.SmartNavigation*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. This property replaces the obsolete <xref:System.Web.UI.Page.SmartNavigation*> property.","pos":[0,206],"nodes":[{"content":"Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.","pos":[0,117]},{"content":"This property replaces the obsolete &lt;xref:System.Web.UI.Page.SmartNavigation*&gt; property.","pos":[118,206],"source":" This property replaces the obsolete <xref:System.Web.UI.Page.SmartNavigation*> property."}]}]},{"pos":[121075,121570],"content":"When Web pages are posted back to the server, the user is returned to the top of the page. On long Web pages, this means that the user has to scroll the page back to the last position on the page.       When the MaintainScrollPositionOnPostBack property is set to `true`, the user is instead returned to the last position on the page.       You set the MaintainScrollPositionOnPostBack property in the [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When Web pages are posted back to the server, the user is returned to the top of the page.","pos":[0,90]},{"content":"On long Web pages, this means that the user has to scroll the page back to the last position on the page.","pos":[91,196]},{"content":"When the MaintainScrollPositionOnPostBack property is set to <ph id=\"ph1\">`true`</ph>, the user is instead returned to the last position on the page.","pos":[203,334],"source":"       When the MaintainScrollPositionOnPostBack property is set to `true`, the user is instead returned to the last position on the page."},{"content":"You set the MaintainScrollPositionOnPostBack property in the <bpt id=\"p1\">[</bpt>@ Page<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)</ept> directive.","pos":[341,491],"source":"       You set the MaintainScrollPositionOnPostBack property in the [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive."}]},{"pos":[121712,121892],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the client position should be maintained; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client position should be maintained; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[122315,122433],"content":"Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.","pos":[0,118]}]},{"pos":[123318,123374],"content":"A <xref:System.String> that represents the virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents the virtual path.","pos":[0,56],"source":"A <xref:System.String> that represents the virtual path."}]},{"pos":[123432,123512],"content":"The physical path associated with the virtual path or application-relative path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path associated with the virtual path or application-relative path.","pos":[0,80]}]},{"pos":[123853,123919],"content":"Gets the master page that determines the overall look of the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the master page that determines the overall look of the page.","pos":[0,66]}]},{"pos":[123932,124512],"content":"The Master property returns the <xref:System.Web.UI.MasterPage> object associated with this page. This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.       The Master property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property. If you access the Master property on a page that does not reference a master page, `null` is returned. The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Master property returns the &lt;xref:System.Web.UI.MasterPage&gt; object associated with this page.","pos":[0,97],"source":"The Master property returns the <xref:System.Web.UI.MasterPage> object associated with this page."},{"content":"This property is read-only; however, you can set properties on the &lt;xref:System.Web.UI.MasterPage&gt; object it returns.","pos":[98,215],"source":" This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns."},{"content":"The Master property is valid only on pages that reference a master page in the &lt;xref:System.Web.UI.Page.MasterPageFile%2A&gt; property.","pos":[222,354],"source":"       The Master property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property."},{"content":"If you access the Master property on a page that does not reference a master page, <ph id=\"ph1\">`null`</ph> is returned.","pos":[355,457],"source":" If you access the Master property on a page that does not reference a master page, `null` is returned."},{"content":"The contents of a master page are not available until after the &lt;xref:System.Web.UI.Page.PreInit&gt; event has been raised.","pos":[458,578],"source":" The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised."}]},{"pos":[124653,124815],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.MasterPage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this page if it exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.MasterPage\"></xref> associated with this page if it exists; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[125195,125244],"content":"Gets or sets the virtual path of the master page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the virtual path of the master page.","pos":[0,49]}]},{"pos":[125257,126064],"content":"The MasterPageFile property is a virtual path (from the root of the application) of the master page file associated with this page. The MasterPageFile property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the MasterPageFile property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception. If the MasterPageFile property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.       Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MasterPageFile property is a virtual path (from the root of the application) of the master page file associated with this page. The MasterPageFile property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the MasterPageFile property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception. If the MasterPageFile property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.       Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.","pos":[0,805],"nodes":[{"content":"The MasterPageFile property is a virtual path (from the root of the application) of the master page file associated with this page.","pos":[0,131]},{"content":"The MasterPageFile property can be set only in the &lt;xref:System.Web.UI.Page.PreInit&gt; event; attempting to set the MasterPageFile property after the &lt;xref:System.Web.UI.Page.PreInit&gt; event will throw an &lt;xref:System.InvalidOperationException&gt; exception.","pos":[132,384],"source":" The MasterPageFile property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the MasterPageFile property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception."},{"content":"If the MasterPageFile property is not valid, an exception of type &lt;xref:System.Web.HttpException&gt; is thrown later in the page life cycle, but no exception is thrown when the property is set in the &lt;xref:System.Web.UI.Page.PreInit&gt; event.","pos":[385,622],"source":" If the MasterPageFile property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event."},{"content":"Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are &lt;xref:System.Web.UI.WebControls.Content&gt; controls.","pos":[629,805],"source":"       Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls."}]}]},{"pos":[126197,126233],"content":"The virtual path of the master page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the master page.","pos":[0,36]}]},{"pos":[126405,126516],"content":"The MasterPageFile property is set after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.PreInit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is complete.","needQuote":true,"needEscape":true,"source":"The MasterPageFile property is set after the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event is complete."},{"pos":[127188,127247],"content":"Gets or sets the maximum length for the page's state field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum length for the page's state field.","pos":[0,59]}]},{"pos":[127260,127848],"content":"When the MaxPageStateFieldLength property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the MaxPageStateFieldLength property.       Setting the MaxPageStateFieldLength property to a negative number (the default) indicates that the view-state field should not be separated into chunks. Setting the MaxPageStateFieldLength to a small number may result in poor performance.       Set the value of the MaxPageStateFieldLength property in the  of the Web.config file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the MaxPageStateFieldLength property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the MaxPageStateFieldLength property.       Setting the MaxPageStateFieldLength property to a negative number (the default) indicates that the view-state field should not be separated into chunks. Setting the MaxPageStateFieldLength to a small number may result in poor performance.       Set the value of the MaxPageStateFieldLength property in the  of the Web.config file.","pos":[0,584],"nodes":[{"content":"When the MaxPageStateFieldLength property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the MaxPageStateFieldLength property.","pos":[0,247]},{"content":"Setting the MaxPageStateFieldLength property to a negative number (the default) indicates that the view-state field should not be separated into chunks.","pos":[254,406]},{"content":"Setting the MaxPageStateFieldLength to a small number may result in poor performance.","pos":[407,492]},{"content":"Set the value of the MaxPageStateFieldLength property in the  of the Web.config file.","pos":[499,584]}]}]},{"pos":[127978,128054],"content":"The maximum length, in bytes, for the page's state field. The default is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length, in bytes, for the page's state field. The default is -1.","pos":[0,76],"nodes":[{"content":"The maximum length, in bytes, for the page's state field.","pos":[0,57]},{"content":"The default is -1.","pos":[58,76]}]}]},{"pos":[128219,128296],"content":"The MaxPageStateFieldLength property is not equal to -1 or a positive number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The MaxPageStateFieldLength property is not equal to -1 or a positive number.","pos":[0,77]}]},{"pos":[128407,128483],"content":"The MaxPageStateFieldLength property was set after the page was initialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The MaxPageStateFieldLength property was set after the page was initialized.","pos":[0,76]}]},{"pos":[128812,128927],"content":"Gets or sets the content of the \"description\" <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Gets or sets the content of the \"description\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element."},{"pos":[128940,129462],"content":"HTML `meta` elements can be used to improve search-engine listings. The \"description\" `meta` element is used by some search engines to improve listing previews.       If there is no \"description\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered. If the page markup already has a \"description\" `meta` element, this property gets or sets the `content` attribute of the `meta` element.       You can also set this property in the  directive.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"HTML <ph id=\"ph1\">`meta`</ph> elements can be used to improve search-engine listings.","pos":[0,67],"source":"HTML `meta` elements can be used to improve search-engine listings."},{"content":"The \"description\" <ph id=\"ph1\">`meta`</ph> element is used by some search engines to improve listing previews.","pos":[68,160],"source":" The \"description\" `meta` element is used by some search engines to improve listing previews."},{"content":"If there is no \"description\" <ph id=\"ph1\">`meta`</ph> element in the <ph id=\"ph2\">`head`</ph> element of the page markup, the <ph id=\"ph3\">`meta`</ph> element is added to the page when the page is rendered.","pos":[167,319],"source":"       If there is no \"description\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered."},{"content":"If the page markup already has a \"description\" <ph id=\"ph1\">`meta`</ph> element, this property gets or sets the <ph id=\"ph2\">`content`</ph> attribute of the <ph id=\"ph3\">`meta`</ph> element.","pos":[320,456],"source":" If the page markup already has a \"description\" `meta` element, this property gets or sets the `content` attribute of the `meta` element."},{"content":"You can also set this property in the  directive.","pos":[463,512]}]},{"pos":[129805,129907],"content":"The content of the \"description\" <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The content of the \"description\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element."},{"pos":[130080,130291],"content":"The page does not have a header control (a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element with the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set to \"server\").","needQuote":true,"needEscape":true,"source":"The page does not have a header control (a <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element with the <xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"></xref> attribute set to \"server\")."},{"pos":[130605,130717],"content":"Gets or sets the content of the \"keywords\" <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Gets or sets the content of the \"keywords\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element."},{"pos":[130730,131269],"content":"HTML `meta` elements can be used to improve search-engine listings. The \"keywords\" `meta` element is either not used at all or is given very little weight by the major search engines.       If there is no \"keywords\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered. If the page markup already has a \"keywords\" `meta` element, this property gets or sets the `content` attribute of the `meta` element.       You can also set this property in the  directive.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"HTML <ph id=\"ph1\">`meta`</ph> elements can be used to improve search-engine listings.","pos":[0,67],"source":"HTML `meta` elements can be used to improve search-engine listings."},{"content":"The \"keywords\" <ph id=\"ph1\">`meta`</ph> element is either not used at all or is given very little weight by the major search engines.","pos":[68,183],"source":" The \"keywords\" `meta` element is either not used at all or is given very little weight by the major search engines."},{"content":"If there is no \"keywords\" <ph id=\"ph1\">`meta`</ph> element in the <ph id=\"ph2\">`head`</ph> element of the page markup, the <ph id=\"ph3\">`meta`</ph> element is added to the page when the page is rendered.","pos":[190,339],"source":"       If there is no \"keywords\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered."},{"content":"If the page markup already has a \"keywords\" <ph id=\"ph1\">`meta`</ph> element, this property gets or sets the <ph id=\"ph2\">`content`</ph> attribute of the <ph id=\"ph3\">`meta`</ph> element.","pos":[340,473],"source":" If the page markup already has a \"keywords\" `meta` element, this property gets or sets the `content` attribute of the `meta` element."},{"content":"You can also set this property in the  directive.","pos":[480,529]}]},{"pos":[131618,131717],"content":"The content of the \"keywords\" <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The content of the \"keywords\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element."},{"pos":[131887,132098],"content":"The page does not have a header control (a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element with the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set to \"server\").","needQuote":true,"needEscape":true,"source":"The page does not have a header control (a <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element with the <xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"></xref> attribute set to \"server\")."},{"pos":[132492,132533],"content":"Gets the model binding execution context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the model binding execution context.","pos":[0,41]}]},{"pos":[132751,132926],"content":"The model binding execution context. If the model binding execution context is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, a new one is created and returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model binding execution context.","pos":[0,36]},{"content":"If the model binding execution context is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, a new one is created and returned.","pos":[37,175],"source":" If the model binding execution context is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, a new one is created and returned."}]},{"pos":[133308,133416],"content":"Gets the model state dictionary object that contains the state of the model and of model-binding validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the model state dictionary object that contains the state of the model and of model-binding validation.","pos":[0,108]}]},{"pos":[133428,133570],"content":"For a tutorial series on using model binding with Web Forms, see <bpt id=\"p1\">[</bpt>Model Binding and Web Forms<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=286117)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)."},{"pos":[133754,133788],"content":"The model state dictionary object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model state dictionary object.","pos":[0,34]}]},{"pos":[134199,134287],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event to initialize the page.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event to initialize the page."},{"pos":[134300,135329],"content":"The OnInit method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance. In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated. A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls. Other server controls are not guaranteed to be created and ready for access.       The OnInit method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnInit method performs the initialization and setup steps required to create a &lt;xref:System.Web.UI.Page&gt; instance.","pos":[0,118],"source":"The OnInit method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance."},{"content":"In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.","pos":[119,297]},{"content":"A control on the page cannot access other server controls on the page during the <ph id=\"ph1\">`Page_Init`</ph> phase, regardless of whether the other controls are child or parent controls.","pos":[298,468],"source":" A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls."},{"content":"Other server controls are not guaranteed to be created and ready for access.","pos":[469,545]},{"content":"The OnInit method is called after the &lt;xref:System.Web.UI.Page.OnPreInit%2A&gt; method and before the &lt;xref:System.Web.UI.Page.OnInitComplete%2A&gt; method.","pos":[552,702],"source":"       The OnInit method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[709,771]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[772,846],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnInit method also allows derived classes to handle the event without attaching a delegate.","pos":[853,948]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[949,1023]}]},{"pos":[135476,135532],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[135979,136075],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.InitComplete\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after page initialization.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.InitComplete\"></xref> event after page initialization."},{"pos":[136088,136865],"content":"The OnInitComplete method is called after page initialization is complete. In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated. You can access server controls, but they will not yet contain information returned from the user.       The OnInitComplete method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnInitComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnInitComplete method is called after page initialization is complete.","pos":[0,74]},{"content":"In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.","pos":[75,213]},{"content":"You can access server controls, but they will not yet contain information returned from the user.","pos":[214,311]},{"content":"The OnInitComplete method occurs at the end of the &lt;xref:System.Web.UI.Page&gt; initialization stage and before the load stage.","pos":[318,442],"source":"       The OnInitComplete method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[449,511]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[512,586],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnInitComplete method also allows derived classes to handle the event without attaching a delegate.","pos":[593,696]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[697,771]}]},{"pos":[137019,137075],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[137530,137634],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.LoadComplete\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event at the end of the page load stage.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.LoadComplete\"></xref> event at the end of the page load stage."},{"pos":[137647,138209],"content":"The OnLoadComplete method is called at the end of the page load stage. At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnLoadComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnLoadComplete method is called at the end of the page load stage.","pos":[0,70]},{"content":"At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.","pos":[71,183]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[190,252]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[253,373],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnLoadComplete method also allows derived classes to handle the event without attaching a delegate.","pos":[380,483]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[484,558]}]},{"pos":[138363,138419],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[138849,138954],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.PreInit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event at the beginning of page initialization.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event at the beginning of page initialization."},{"pos":[138967,139641],"content":"The OnPreInit method is called at the beginning of the page initialization stage.       After the OnPreInit method is called, personalization information is loaded and the page theme, if any, is initialized. This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnPreInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnPreInit method is called at the beginning of the page initialization stage.","pos":[0,81]},{"content":"After the OnPreInit method is called, personalization information is loaded and the page theme, if any, is initialized.","pos":[88,207]},{"content":"This is also the preferred stage to dynamically define a &lt;xref:System.Web.UI.PageTheme&gt; or &lt;xref:System.Web.UI.MasterPage&gt; for the Page.","pos":[208,344],"source":" This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[351,413]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[414,488],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnPreInit method also allows derived classes to handle the event without attaching a delegate.","pos":[495,593]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[594,668]}]},{"pos":[139790,139846],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[140271,140454],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.PreLoad\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after postback data is loaded into the page server controls but before the &lt;xref:System.Web.UI.Control.OnLoad*&gt; event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.PreLoad\"></xref> event after postback data is loaded into the page server controls but before the <xref:System.Web.UI.Control.OnLoad*> event."},{"pos":[140467,141180],"content":"The OnPreLoad method is called after all postback data returned from the user is loaded. At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.       Controls created in the OnPreLoad method will also be loaded with view-state and postback data.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnPreLoad method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnPreLoad method is called after all postback data returned from the user is loaded.","pos":[0,88]},{"content":"At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.","pos":[89,281]},{"content":"Controls created in the OnPreLoad method will also be loaded with view-state and postback data.","pos":[288,383]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[390,452]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[453,527],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnPreLoad method also allows derived classes to handle the event without attaching a delegate.","pos":[534,632]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[633,707]}]},{"pos":[141329,141385],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[141860,142003],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.PreRenderComplete\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the OnPreRenderComplete event and before the page is rendered.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.PreRenderComplete\"></xref> event after the OnPreRenderComplete event and before the page is rendered."},{"pos":[142016,142642],"content":"The OnPreRenderComplete method is called when the prerendering stage of the page life cycle is complete. At this stage of the page life cycle, all controls are created and the page is ready to render the output.       This is the last event called before the page's view state is saved.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnPreRenderComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnPreRenderComplete method is called when the prerendering stage of the page life cycle is complete.","pos":[0,104]},{"content":"At this stage of the page life cycle, all controls are created and the page is ready to render the output.","pos":[105,211]},{"content":"This is the last event called before the page's view state is saved.","pos":[218,286]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[293,355]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[356,430],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnPreRenderComplete method also allows derived classes to handle the event without attaching a delegate.","pos":[437,545]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[546,620]}]},{"pos":[142801,142857],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[143342,143479],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.SaveStateComplete\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event after the page state has been saved to the persistence medium.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Page.SaveStateComplete\"></xref> event after the page state has been saved to the persistence medium."},{"pos":[143492,144110],"content":"The OnSaveStateComplete method is called when the state information for the control has been written to the persistence medium for the page. State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnSaveStateComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnSaveStateComplete method is called when the state information for the control has been written to the persistence medium for the page.","pos":[0,140]},{"content":"State information is written to the persistence medium by calling the &lt;xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A&gt; method.","pos":[141,280],"source":" State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[287,349]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[350,424],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnSaveStateComplete method also allows derived classes to handle the event without attaching a delegate.","pos":[431,539]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[540,614]}]},{"pos":[144269,144328],"content":"A <xref:System.EventArgs> object containing the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.EventArgs&gt; object containing the event data.","pos":[0,59],"source":"A <xref:System.EventArgs> object containing the event data."}]},{"pos":[144706,144781],"content":"Gets the adapter that renders the page for the specific requesting browser.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the adapter that renders the page for the specific requesting browser.","pos":[0,75]}]},{"pos":[144794,145353],"content":"The PageAdapter property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.       The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object. When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PageAdapter property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.       The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object. When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.","pos":[0,557],"nodes":[{"content":"The PageAdapter property returns the specific &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object that modifies the behavior of the &lt;xref:System.Web.UI.Page&gt; object for the requesting browser.","pos":[0,189],"source":"The PageAdapter property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser."},{"content":"The specific &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object is determined by examining characteristics of the incoming &lt;xref:System.Web.UI.Page.Request%2A&gt; object.","pos":[196,361],"source":"       The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object."},{"content":"When an adapter is chosen for the request, any life cycle events on the &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object override the corresponding events on the &lt;xref:System.Web.UI.Page&gt; object.","pos":[362,557],"source":" When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object."}]}]},{"pos":[145519,145601],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Adapters.PageAdapter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that renders the page.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Adapters.PageAdapter\"></xref> that renders the page."},{"pos":[146006,146101],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PageStatePersister\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.PageStatePersister\"></xref> object associated with the page."},{"pos":[146114,146934],"content":"HTTP requests and responses are inherently stateless. To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.       Page developers will typically not need to use the PageStatePersister property. The PageStatePersister property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"HTTP requests and responses are inherently stateless. To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.       Page developers will typically not need to use the PageStatePersister property. The PageStatePersister property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.","pos":[0,818],"nodes":[{"content":"HTTP requests and responses are inherently stateless.","pos":[0,53]},{"content":"To maintain state between HTTP requests, ASP.NET server pages can store &lt;xref:System.Web.UI.Page&gt; state.","pos":[54,158],"source":" To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state."},{"content":"This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.","pos":[159,380]},{"content":"Several mechanisms exist to store view state between successive requests to the same page.","pos":[381,471]},{"content":"The abstract &lt;xref:System.Web.UI.PageStatePersister&gt; class represents the base class for these state storage mechanisms.","pos":[472,592],"source":" The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms."},{"content":"Page developers will typically not need to use the PageStatePersister property.","pos":[599,678]},{"content":"The PageStatePersister property is used primarily by control developers extending the functionality of the &lt;xref:System.Web.UI.Page&gt; class.","pos":[679,818],"source":" The PageStatePersister property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class."}]}]},{"pos":[147114,147195],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PageStatePersister\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the page.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.PageStatePersister\"></xref> associated with the page."},{"pos":[147609,147683],"content":"A string that defines the EVENTARGUMENT hidden field in the rendered page.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that defines the EVENTARGUMENT hidden field in the rendered page.","pos":[0,74]}]},{"pos":[147805,147817],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[148170,148242],"content":"A string that defines the EVENTTARGET hidden field in the rendered page.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that defines the EVENTTARGET hidden field in the rendered page.","pos":[0,72]}]},{"pos":[148362,148374],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[148677,148711],"content":"Occurs before page initialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before page initialization.","pos":[0,34]}]},{"pos":[148724,149268],"content":"This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback. You can also check the values of profile properties.       The event enables you to set values that are used later in the page life cycle. You can dynamically set a master page or a theme for the requested page, and create dynamic controls.       For more information about how the PreInit event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.","pos":[0,131]},{"content":"You can also check the values of profile properties.","pos":[132,184]},{"content":"The event enables you to set values that are used later in the page life cycle.","pos":[191,270]},{"content":"You can dynamically set a master page or a theme for the requested page, and create dynamic controls.","pos":[271,372]},{"content":"For more information about how the PreInit event fits into the ASP.NET life cycle, see <bpt id=\"p1\">[</bpt>ASP.NET Page Life Cycle Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[379,540],"source":"       For more information about how the PreInit event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[149391,149403],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[149706,149783],"content":"Occurs before the page <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Load\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Occurs before the page <xref href=\"System.Web.UI.Control.Load\"></xref> event."},{"pos":[149796,150167],"content":"The PreLoad event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event. There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PreLoad event is raised after all postback data processing and before the &lt;xref:System.Web.UI.Control.Load&gt; event.","pos":[0,118],"source":"The PreLoad event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event."},{"content":"There is a second attempt to load postback data before the &lt;xref:System.Web.UI.Page.OnLoadComplete%2A&gt; event.","pos":[119,228],"source":" There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[229,371],"source":" For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[150290,150302],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[150655,150698],"content":"Occurs before the page content is rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before the page content is rendered.","pos":[0,43]}]},{"pos":[150711,151187],"content":"The PreRenderComplete event is raised when the pre-render stage of the page life cycle is complete. At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.       This is the last event raised before the page's view state is saved.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PreRenderComplete event is raised when the pre-render stage of the page life cycle is complete.","pos":[0,99]},{"content":"At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.","pos":[100,248]},{"content":"This is the last event raised before the page's view state is saved.","pos":[255,323]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[330,472],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[151320,151332],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[151663,151722],"content":"Gets the page that transferred control to the current page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the page that transferred control to the current page.","pos":[0,59]}]},{"pos":[151735,152225],"content":"When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page. You can use the PreviousPage property to access that information.       If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the PreviousPage property contains `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you use the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.","pos":[0,253],"source":"When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page."},{"content":"You can use the PreviousPage property to access that information.","pos":[254,319]},{"content":"If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the PreviousPage property contains <ph id=\"ph1\">`null`</ph>.","pos":[326,488],"source":"       If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the PreviousPage property contains `null`."}]},{"pos":[153128,153239],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the page that transferred control to the current page.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Page\"></xref> representing the page that transferred control to the current page."},{"pos":[153410,153720],"content":"The current user is not allowed to access the previous page.       -or-       ASP.NET routing is in use and the previous page's URL is a routed URL. When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file. Because this is not the case with a routed URL, the check fails.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current user is not allowed to access the previous page.       -or-       ASP.NET routing is in use and the previous page's URL is a routed URL. When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file. Because this is not the case with a routed URL, the check fails.","pos":[0,306],"nodes":[{"content":"The current user is not allowed to access the previous page.","pos":[0,60]},{"content":"-or-       ASP.NET routing is in use and the previous page's URL is a routed URL.","pos":[67,148]},{"content":"When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.","pos":[149,241]},{"content":"Because this is not the case with a routed URL, the check fails.","pos":[242,306]}]}]},{"pos":[154130,154394],"content":"Sets the intrinsic server objects of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, such as the &lt;xref:System.Web.UI.Page.Context<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.Web.UI.Page.Request<ept id=\"p2\">*</ept>&gt;, &lt;xref:System.Web.UI.Page.Response<bpt id=\"p3\">*</bpt>&gt;, and &lt;xref:System.Web.UI.Page.Application<ept id=\"p3\">*</ept>&gt; properties.","needQuote":true,"needEscape":true,"source":"Sets the intrinsic server objects of the <xref href=\"System.Web.UI.Page\"></xref> object, such as the <xref:System.Web.UI.Page.Context*>, <xref:System.Web.UI.Page.Request*>, <xref:System.Web.UI.Page.Response*>, and <xref:System.Web.UI.Page.Application*> properties."},{"pos":[154406,154438],"content":"You should not call this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should not call this method.","pos":[0,32]}]},{"pos":[154619,154899],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that provides references to the intrinsic server objects (for example, &lt;xref:System.Web.HttpContext.Request<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.Web.HttpContext.Response<ept id=\"p2\">*</ept>&gt;, and &lt;xref:System.Web.HttpContext.Session*&gt;) used to service HTTP requests.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpContext\"></xref> object that provides references to the intrinsic server objects (for example, <xref:System.Web.HttpContext.Request*>, <xref:System.Web.HttpContext.Response*>, and <xref:System.Web.HttpContext.Session*>) used to service HTTP requests."},{"pos":[155497,155599],"content":"Notifies the server control that caused the postback that it should handle an incoming postback event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the server control that caused the postback that it should handle an incoming postback event.","pos":[0,102]}]},{"pos":[155611,155830],"content":"The <xref:System.Web.UI.Page> object calls the RaisePostBackEvent method when a postback occurs. This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Web.UI.Page> object calls the RaisePostBackEvent method when a postback occurs. This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.","pos":[0,219],"nodes":[{"content":"The &lt;xref:System.Web.UI.Page&gt; object calls the RaisePostBackEvent method when a postback occurs.","pos":[0,96],"source":"The <xref:System.Web.UI.Page> object calls the RaisePostBackEvent method when a postback occurs."},{"content":"This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.","pos":[97,219]}]}]},{"pos":[156464,156616],"content":"The ASP.NET server control that caused the postback. This control must implement the <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ASP.NET server control that caused the postback.","pos":[0,52]},{"content":"This control must implement the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IPostBackEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","pos":[53,152],"source":" This control must implement the <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interface."}]},{"pos":[156686,156708],"content":"The postback argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The postback argument.","pos":[0,22]}]},{"pos":[157251,157346],"content":"Declares a value that is declared as an ECMAScript array declaration when the page is rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Declares a value that is declared as an ECMAScript array declaration when the page is rendered.","pos":[0,95]}]},{"pos":[157359,157730],"content":"This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.       The RegisterArrayDeclaration method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.       The RegisterArrayDeclaration method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","pos":[0,369],"nodes":[{"content":"This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.","pos":[0,167]},{"content":"The RegisterArrayDeclaration method has been deprecated.","pos":[174,230]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[231,369],"source":" Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class."}]}]},{"pos":[158556,158608],"content":"The name of the array in which to declare the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the array in which to declare the value.","pos":[0,52]}]},{"pos":[158675,158707],"content":"The value to place in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to place in the array.","pos":[0,32]}]},{"pos":[159221,159269],"content":"Registers a new asynchronous task with the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers a new asynchronous task with the page.","pos":[0,48]}]},{"pos":[159282,159686],"content":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. When the task is defined, use the RegisterAsyncTask method to register the task with the page. After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.       The RegisterAsyncTask method can be used with both synchronous and asynchronous pages.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. When the task is defined, use the RegisterAsyncTask method to register the task with the page. After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.       The RegisterAsyncTask method can be used with both synchronous and asynchronous pages.","pos":[0,402],"nodes":[{"content":"Define an asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class.","pos":[0,79],"source":"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class."},{"content":"When the task is defined, use the RegisterAsyncTask method to register the task with the page.","pos":[80,174]},{"content":"After registering the task, invoke the &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method to begin the asynchronous task.","pos":[175,309],"source":" After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task."},{"content":"The RegisterAsyncTask method can be used with both synchronous and asynchronous pages.","pos":[316,402]}]}]},{"pos":[161047,161133],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PageAsyncTask\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the asynchronous task.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.PageAsyncTask\"></xref> that defines the asynchronous task."},{"pos":[161300,161386],"content":"The asynchronous task is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The asynchronous task is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[161866,161914],"content":"Emits client-side script blocks to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Emits client-side script blocks to the response.","pos":[0,48]}]},{"pos":[161927,162963],"content":"The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element. Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.       Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance. Using a key also decreases the likelihood of different controls' script blocks interfering with each other.       Any script blocks with the same `key` parameter values are considered duplicates.      > [!NOTE] >  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.       The RegisterClientScriptBlock method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The client-side script is emitted just after the opening tag of the &lt;xref:System.Web.UI.Page&gt; object's <ph id=\"ph1\">`&lt;form runat= server&gt;`</ph> element.","pos":[0,134],"source":"The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element."},{"content":"Be sure to include opening and closing <ph id=\"ph1\">`&lt;script&gt;`</ph> elements around the script block string specified in the <ph id=\"ph2\">`script`</ph> parameter.","pos":[135,261],"source":" Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter."},{"content":"Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.","pos":[268,460]},{"content":"Using a key also decreases the likelihood of different controls' script blocks interfering with each other.","pos":[461,568]},{"content":"Any script blocks with the same <ph id=\"ph1\">`key`</ph> parameter values are considered duplicates.","pos":[575,656],"source":"       Any script blocks with the same `key` parameter values are considered duplicates."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.","pos":[662,815],"source":"      > [!NOTE] >  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts."},{"content":"The RegisterClientScriptBlock method has been deprecated.","pos":[822,879]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.","pos":[880,1027],"source":" Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead."}]},{"pos":[163789,163831],"content":"Unique key that identifies a script block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unique key that identifies a script block.","pos":[0,42]}]},{"pos":[163894,163939],"content":"Content of script that is sent to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Content of script that is sent to the client.","pos":[0,45]}]},{"pos":[164464,164711],"content":"Allows server controls to automatically register a hidden field on the form. The field will be sent to the <xref href=\"System.Web.UI.Page\"></xref> object when the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> server control is rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows server controls to automatically register a hidden field on the form.","pos":[0,76]},{"content":"The field will be sent to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object when the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlForm\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> server control is rendered.","pos":[77,247],"source":" The field will be sent to the <xref href=\"System.Web.UI.Page\"></xref> object when the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> server control is rendered."}]},{"pos":[164723,164908],"content":"The RegisterHiddenField method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RegisterHiddenField method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","pos":[0,185],"nodes":[{"content":"The RegisterHiddenField method has been deprecated.","pos":[0,51]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[52,185],"source":" Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class."}]}]},{"pos":[166098,166149],"content":"The unique name of the hidden field to be rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique name of the hidden field to be rendered.","pos":[0,51]}]},{"pos":[166229,166272],"content":"The value to be emitted in the hidden form.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to be emitted in the hidden form.","pos":[0,43]}]},{"pos":[166821,167005],"content":"Allows a page to access the client <xref uid=\"langword_csharp_OnSubmit\" name=\"OnSubmit\" href=\"\"></xref> event. The script should be a function call to client code registered elsewhere.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows a page to access the client <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OnSubmit\" name=\"OnSubmit\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","pos":[0,110],"source":"Allows a page to access the client <xref uid=\"langword_csharp_OnSubmit\" name=\"OnSubmit\" href=\"\"></xref> event."},{"content":"The script should be a function call to client code registered elsewhere.","pos":[111,184]}]},{"pos":[167017,167214],"content":"The RegisterOnSubmitStatement method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RegisterOnSubmitStatement method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.","pos":[0,197],"nodes":[{"content":"The RegisterOnSubmitStatement method has been deprecated.","pos":[0,57]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[58,197],"source":" Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class."}]}]},{"pos":[168219,168261],"content":"Unique key that identifies a script block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unique key that identifies a script block.","pos":[0,42]}]},{"pos":[168324,168372],"content":"The client-side script to be sent to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client-side script to be sent to the client.","pos":[0,48]}]},{"pos":[168912,168977],"content":"Registers a control as one whose control state must be persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers a control as one whose control state must be persisted.","pos":[0,65]}]},{"pos":[168989,169298],"content":"Custom server controls that use control state must call the RegisterRequiresControlState method on each request because registration for control state is not carried over from request to request during a postback event. It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Custom server controls that use control state must call the RegisterRequiresControlState method on each request because registration for control state is not carried over from request to request during a postback event. It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.","pos":[0,309],"nodes":[{"content":"Custom server controls that use control state must call the RegisterRequiresControlState method on each request because registration for control state is not carried over from request to request during a postback event.","pos":[0,219]},{"content":"It is recommended that registration occur in the &lt;xref:System.Web.UI.Control.Init&gt; event.","pos":[220,309],"source":" It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event."}]}]},{"pos":[169795,169819],"content":"The control to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to register.","pos":[0,24]}]},{"pos":[169989,170077],"content":"The control to register is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The control to register is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[170188,170327],"content":"The RegisterRequiresControlState method can be called only before or during the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.PreRender\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The RegisterRequiresControlState method can be called only before or during the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."},{"pos":[170772,170874],"content":"Registers a control as one that requires postback handling when the page is posted back to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers a control as one that requires postback handling when the page is posted back to the server.","pos":[0,102]}]},{"pos":[170887,171458],"content":"The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised. When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events. For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](~/add/includes/ajax-current-ext-md.md).       Register controls with the page at or before the `Page_PreRender` event of the page life cycle.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The control to be registered must implement the &lt;xref:System.Web.UI.IPostBackDataHandler&gt; interface or an &lt;xref:System.Web.HttpException&gt; is raised.","pos":[0,148],"source":"The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised."},{"content":"When implemented by a control, the &lt;xref:System.Web.UI.IPostBackDataHandler&gt; interface enables handling of post back data and raising of any post back data changed events.","pos":[149,320],"source":" When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events."},{"content":"For more information on the server control event model, see <bpt id=\"p1\">[</bpt>ASP.NET Web Forms Server Control Event Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[321,467],"source":" For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"Register controls with the page at or before the <ph id=\"ph1\">`Page_PreRender`</ph> event of the page life cycle.","pos":[474,569],"source":"       Register controls with the page at or before the `Page_PreRender` event of the page life cycle."}]},{"pos":[172492,172521],"content":"The control to be registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to be registered.","pos":[0,29]}]},{"pos":[172687,172800],"content":"The control to register does not implement the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IPostBackDataHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The control to register does not implement the <xref href=\"System.Web.UI.IPostBackDataHandler\"></xref> interface."},{"pos":[173325,173484],"content":"Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <xref href=\"System.Web.UI.Page\"></xref> object."},{"pos":[173496,173781],"content":"Only one server control can be registered per page request. The RegisterRequiresRaiseEvent must be used when the control does not include its control ID in the form post data. Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Only one server control can be registered per page request. The RegisterRequiresRaiseEvent must be used when the control does not include its control ID in the form post data. Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.","pos":[0,285],"nodes":[{"content":"Only one server control can be registered per page request.","pos":[0,59]},{"content":"The RegisterRequiresRaiseEvent must be used when the control does not include its control ID in the form post data.","pos":[60,175]},{"content":"Also, the control that is registered must implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface.","pos":[176,285],"source":" Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface."}]}]},{"pos":[174649,174673],"content":"The control to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to register.","pos":[0,24]}]},{"pos":[175182,175255],"content":"Registers a control with the page as one requiring view-state encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers a control with the page as one requiring view-state encryption.","pos":[0,73]}]},{"pos":[175268,175711],"content":"If you are developing a custom control that deals with potentially sensitive information, call the RegisterRequiresViewStateEncryption method to register the control with the page and ensure view state for the control is encrypted.       The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode> or <xref:System.Web.UI.ViewStateEncryptionMode>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you are developing a custom control that deals with potentially sensitive information, call the RegisterRequiresViewStateEncryption method to register the control with the page and ensure view state for the control is encrypted.       The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode> or <xref:System.Web.UI.ViewStateEncryptionMode>.","pos":[0,441],"nodes":[{"content":"If you are developing a custom control that deals with potentially sensitive information, call the RegisterRequiresViewStateEncryption method to register the control with the page and ensure view state for the control is encrypted.","pos":[0,231]},{"content":"The entire page state will be encrypted if the &lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt; is set to &lt;xref:System.Web.UI.ViewStateEncryptionMode&gt; or &lt;xref:System.Web.UI.ViewStateEncryptionMode&gt;.","pos":[238,441],"source":"       The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode> or <xref:System.Web.UI.ViewStateEncryptionMode>."}]}]},{"pos":[176564,176751],"content":"The RegisterRequiresViewStateEncryption method must be called before or during the page <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>phase in the page life cycle.","needQuote":true,"needEscape":true,"source":"The RegisterRequiresViewStateEncryption method must be called before or during the page <xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"></xref>phase in the page life cycle."},{"pos":[177211,177265],"content":"Emits a client-side script block in the page response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Emits a client-side script block in the page response.","pos":[0,54]}]},{"pos":[177278,178292],"content":"Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the RegisterStartupScript method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element. Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.       Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance       Any script blocks with the same `key` parameter values are considered duplicates.      > [!NOTE] >  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.       The RegisterStartupScript method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Similar to the &lt;xref:System.Web.UI.Page.RegisterClientScriptBlock%2A&gt; method, the RegisterStartupScript method emits the script just before the closing tag of the &lt;xref:System.Web.UI.Page&gt; object's <ph id=\"ph1\">`&lt;form runat= server&gt;`</ph> element.","pos":[0,229],"source":"Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the RegisterStartupScript method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element."},{"content":"Be sure to include opening and closing <ph id=\"ph1\">`&lt;script&gt;`</ph> elements around the script block string specified in the <ph id=\"ph2\">`script`</ph> parameter.","pos":[230,356],"source":" Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter."},{"content":"Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance       Any script blocks with the same <ph id=\"ph1\">`key`</ph> parameter values are considered duplicates.","pos":[363,642],"source":"       Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance       Any script blocks with the same `key` parameter values are considered duplicates."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.","pos":[648,801],"source":"      > [!NOTE] >  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts."},{"content":"The RegisterStartupScript method has been deprecated.","pos":[808,861]},{"content":"Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.","pos":[862,1005],"source":" Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead."}]},{"pos":[179120,179162],"content":"Unique key that identifies a script block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unique key that identifies a script block.","pos":[0,42]}]},{"pos":[179225,179275],"content":"Content of script that will be sent to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Content of script that will be sent to the client.","pos":[0,50]}]},{"pos":[179724,179774],"content":"Causes page view state to be persisted, if called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes page view state to be persisted, if called.","pos":[0,50]}]},{"pos":[179787,180122],"content":"The RegisterViewStateHandler method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control. If this method is not invoked, the page view state will not be persisted.      > [!NOTE] >  Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RegisterViewStateHandler method is automatically called through the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control.","pos":[0,130],"source":"The RegisterViewStateHandler method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control."},{"content":"If this method is not invoked, the page view state will not be persisted.","pos":[131,204]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Typically, only the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control for the page calls this method.","pos":[210,332],"source":"      > [!NOTE] >  Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method."}]},{"pos":[180906,181068],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and calls on the child controls of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to render.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object and calls on the child controls of the <xref href=\"System.Web.UI.Page\"></xref> to render."},{"pos":[181080,181329],"content":"The Render method is responsible for creating the text and markup that is sent to the client browser. The default Render method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Render method is responsible for creating the text and markup that is sent to the client browser. The default Render method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.","pos":[0,249],"nodes":[{"content":"The Render method is responsible for creating the text and markup that is sent to the client browser.","pos":[0,101]},{"content":"The default Render method calls &lt;xref:System.Web.UI.Control.RenderChildren%2A&gt; to write the text and markup for the controls contained on the page.","pos":[102,249],"source":" The default Render method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page."}]}]},{"pos":[181516,181601],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that receives the page content.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that receives the page content."},{"pos":[181946,182029],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the requested page.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.HttpRequest\"></xref> object for the requested page."},{"pos":[182041,182134],"content":"The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.HttpRequest&gt; object contains information about the current HTTP request.","pos":[0,93],"source":"The <xref:System.Web.HttpRequest> object contains information about the current HTTP request."}]},{"pos":[182699,182780],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the page.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpRequest\"></xref> associated with the page."},{"pos":[182929,183013],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is not available.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Web.HttpRequest\"></xref> object is not available."},{"pos":[183438,183578],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is registered to participate in control state management.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Web.UI.Control\"></xref> object is registered to participate in control state management."},{"pos":[183591,184030],"content":"Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.       Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state. Use the RequiresControlState method to check for controls that are registered with the page as requiring control state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.       Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state. Use the RequiresControlState method to check for controls that are registered with the page as requiring control state.","pos":[0,437],"nodes":[{"content":"Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.","pos":[0,167]},{"content":"Custom controls using control state must call the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; method before saving control state.","pos":[174,317],"source":"       Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state."},{"content":"Use the RequiresControlState method to check for controls that are registered with the page as requiring control state.","pos":[318,437]}]}]},{"pos":[184208,184296],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to check for a control state requirement.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> to check for a control state requirement."},{"pos":[184355,184573],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> requires control state; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Web.UI.Control\"></xref> requires control state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>"},{"pos":[184937,185173],"content":"Gets the <xref href=\"System.Web.HttpResponse\"></xref> object associated with the <xref href=\"System.Web.UI.Page\"></xref> object. This object allows you to send HTTP response data to a client and contains information about that response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[0,128],"source":"Gets the <xref href=\"System.Web.HttpResponse\"></xref> object associated with the <xref href=\"System.Web.UI.Page\"></xref> object."},{"content":"This object allows you to send HTTP response data to a client and contains information about that response.","pos":[129,236]}]},{"pos":[185723,185805],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the page.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpResponse\"></xref> associated with the page."},{"pos":[185955,186028],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is not available.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpResponse\"></xref> object is not available."},{"pos":[186362,186457],"content":"Sets the encoding language for the current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the encoding language for the current <xref href=\"System.Web.HttpResponse\"></xref> object."},{"pos":[186469,186703],"content":"In most circumstances, do not set this property in code. Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`ResponseEncoding`</ph> attribute to the value you want using the  directive in the .aspx file.","pos":[57,155],"source":" Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[156,234]}]},{"pos":[186829,186935],"content":"A string that contains the encoding language for the current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string that contains the encoding language for the current <xref href=\"System.Web.HttpResponse\"></xref>."},{"pos":[187300,187496],"content":"Gets the &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> value of the current <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.Routing.RequestContext?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> instance.","pos":[0,196],"source":"Gets the &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance."}]},{"pos":[187509,188403],"content":"If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data. If the page runs in response to a physical URL instead of a route URL, this property is `null`. The following example shows how to extract the value of a URL parameter that is named `year`.       [Visual Basic]      ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(\"year\"))   ```       [C#]      ```   int year = Convert.ToInt32(Page.RouteData.Values[\"year\"])   ```       If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value \"2010\" when this code runs.       For more information about ASP.NET routing, see [ASP.NET Routing](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.","pos":[0,165]},{"content":"If the page runs in response to a physical URL instead of a route URL, this property is <ph id=\"ph1\">`null`</ph>.","pos":[166,261],"source":" If the page runs in response to a physical URL instead of a route URL, this property is `null`."},{"content":"The following example shows how to extract the value of a URL parameter that is named <ph id=\"ph1\">`year`</ph>.","pos":[262,355],"source":" The following example shows how to extract the value of a URL parameter that is named `year`."},{"content":"[Visual Basic]      <ph id=\"ph1\">```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(\"year\"))   ```</ph>       [C#]      <ph id=\"ph2\">```   int year = Convert.ToInt32(Page.RouteData.Values[\"year\"])   ```</ph>       If the route is defined by using the URL pattern <ph id=\"ph3\">`{locale}/{year}`</ph> for the domain <ph id=\"ph4\">`contoso.com`</ph>, and if the requested URL is <ph id=\"ph5\">`contoso.com/US/2010`</ph>, <ph id=\"ph6\">`year`</ph> will contain the value \"2010\" when this code runs.","pos":[362,760],"source":"       [Visual Basic]      ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(\"year\"))   ```       [C#]      ```   int year = Convert.ToInt32(Page.RouteData.Values[\"year\"])   ```       If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value \"2010\" when this code runs."},{"content":"For more information about ASP.NET routing, see <bpt id=\"p1\">[</bpt>ASP.NET Routing<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[767,872],"source":"       For more information about ASP.NET routing, see [ASP.NET Routing](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[188555,188746],"content":"The &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> value of the current <ph id=\"ph3\">&amp;lt;</ph>xref:System.Web.Routing.RequestContext?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> instance.","pos":[0,191],"source":"The &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance."}]},{"pos":[189271,189335],"content":"Saves any view-state and control-state information for the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves any view-state and control-state information for the page.","pos":[0,64]}]},{"pos":[189348,190877],"content":"The SavePageStateToPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request. Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SavePageStateToPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request. Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.","pos":[0,1523],"nodes":[{"content":"The SavePageStateToPersistenceMedium method uses the &lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt; method of the &lt;xref:System.Web.UI.PageStatePersister?displayProperty=fullName&gt; object referenced by the &lt;xref:System.Web.UI.Page.PageStatePersister%2A&gt; property to store view-state and control-state information for the page.","pos":[0,325],"source":"The SavePageStateToPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page."},{"content":"ASP.NET includes two descendents of the &lt;xref:System.Web.UI.PageStatePersister&gt; class, the &lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt; class that saves state information in a hidden field included in the ASP.NET page, and the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class that saves state in the &lt;xref:System.Web.UI.Page.Session%2A&gt; object associated with the request.","pos":[332,714],"source":"       ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request."},{"content":"Note that when using the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class the hidden VIEWSTATE field is still rendered as this is used to determine post back.","pos":[715,877],"source":" Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back."},{"content":"To save state in the location of your choice, you should create a new descendent of the &lt;xref:System.Web.UI.PageStatePersister&gt; class that saves and loads state to the persistence medium of your choice.","pos":[884,1086],"source":"       To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice."},{"content":"For an example of creating a new &lt;xref:System.Web.UI.PageStatePersister&gt; object, see the &lt;xref:System.Web.UI.PageStatePersister&gt; class.","pos":[1087,1222],"source":" For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class."},{"content":"If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the &lt;xref:System.Web.UI.Page&gt; state in anything other than a hidden field.","pos":[1229,1400],"source":"       If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field."},{"content":"If you choose to do so, you must also override the &lt;xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A&gt; method.","pos":[1401,1523],"source":" If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method."}]}]},{"pos":[191051,191120],"content":"An <xref:System.Object> in which to store the view-state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; in which to store the view-state information.","pos":[0,69],"source":"An <xref:System.Object> in which to store the view-state information."}]},{"pos":[191538,191664],"content":"Occurs after the page has completed saving all view state and control state information for the page and controls on the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs after the page has completed saving all view state and control state information for the page and controls on the page.","pos":[0,126]}]},{"pos":[191677,192142],"content":"State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event. The SaveStateComplete event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.       This is the last event raised before the page is rendered to the requesting browser.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"State information for controls on the Web page is saved after the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.","pos":[0,116],"source":"State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event."},{"content":"The SaveStateComplete event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.","pos":[117,267]},{"content":"This is the last event raised before the page is rendered to the requesting browser.","pos":[274,358]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[365,461],"source":"       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[192275,192287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[192588,192754],"content":"Gets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, which is an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Web.HttpServerUtility\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets the <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> object, which is an instance of the <xref href=\"System.Web.HttpServerUtility\"></xref> class."},{"pos":[192766,192942],"content":"This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property provides access to the frequently used &lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt; and &lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt; methods, among others.","pos":[0,176],"source":"This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others."}]},{"pos":[193857,193966],"content":"The current <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"The current <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> object associated with the page."},{"pos":[194311,194422],"content":"Gets the current <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Session\" name=\"Session\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object provided by ASP.NET.","needQuote":true,"needEscape":true,"source":"Gets the current <xref uid=\"langword_csharp_Session\" name=\"Session\" href=\"\"></xref> object provided by ASP.NET."},{"pos":[194434,194943],"content":"This property provides information about the current request's session. A `Session` object is maintained for each user that requests a page or document from an ASP.NET application. Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application. For more information about session state, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property provides information about the current request's session.","pos":[0,71]},{"content":"A <ph id=\"ph1\">`Session`</ph> object is maintained for each user that requests a page or document from an ASP.NET application.","pos":[72,180],"source":" A `Session` object is maintained for each user that requests a page or document from an ASP.NET application."},{"content":"Variables stored in the <ph id=\"ph1\">`Session`</ph> object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.","pos":[181,390],"source":" Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application."},{"content":"For more information about session state, see <bpt id=\"p1\">[</bpt>ASP.NET Session State Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[391,509],"source":" For more information about session state, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[195508,195539],"content":"The current session-state data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current session-state data.","pos":[0,31]}]},{"pos":[195688,195795],"content":"Occurs when the session information is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the session information is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[196141,196209],"content":"Sets the browser focus to the control with the specified identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the browser focus to the control with the specified identifier.","pos":[0,68]}]},{"pos":[196222,196611],"content":"Use the SetFocus method to make the control with the specified ID string the active control in the Web page displayed by the browser. The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.      > [!NOTE] >  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SetFocus method to make the control with the specified ID string the active control in the Web page displayed by the browser.","pos":[0,133]},{"content":"The SetFocus method must be called before the page is prepared for rendering to the client in the &lt;xref:System.Web.UI.Control.PreRender&gt; event.","pos":[134,277],"source":" The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.","pos":[283,386],"source":"      > [!NOTE] >  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later."}]},{"pos":[197349,197387],"content":"The ID of the control to set focus to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID of the control to set focus to.","pos":[0,38]}]},{"pos":[197545,197631],"content":"<ph id=\"ph1\">&lt;code&gt;clientID&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>clientID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[198293,198341],"content":"Sets the browser focus to the specified control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the browser focus to the specified control.","pos":[0,48]}]},{"pos":[198354,198724],"content":"Use the SetFocus method to make the specified control the active control on the Web page displayed by the browser. The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.      > [!NOTE] >  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SetFocus method to make the specified control the active control on the Web page displayed by the browser.","pos":[0,114]},{"content":"The SetFocus method must be called before the page is prepared for rendering to the client in the &lt;xref:System.Web.UI.Control.PreRender&gt; event.","pos":[115,258],"source":" The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.","pos":[264,367],"source":"      > [!NOTE] >  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later."}]},{"pos":[199483,199512],"content":"The control to receive focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to receive focus.","pos":[0,29]}]},{"pos":[199670,199755],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[200426,200506],"content":"Gets or sets a value that indicates whether the query string value is validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the query string value is validated.","pos":[0,80]}]},{"pos":[200639,200997],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if query string validation should be skipped (the query string should not be validated); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if query string validation should take place as normal. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if query string validation should be skipped (the query string should not be validated); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if query string validation should take place as normal.","pos":[0,279],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if query string validation should be skipped (the query string should not be validated); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if query string validation should take place as normal."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[280,358],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[201400,201497],"content":"Gets or sets a value indicating whether smart navigation is enabled. This property is deprecated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether smart navigation is enabled. This property is deprecated.","pos":[0,97],"nodes":[{"content":"Gets or sets a value indicating whether smart navigation is enabled.","pos":[0,68]},{"content":"This property is deprecated.","pos":[69,97]}]}]},{"pos":[201510,202628],"content":"In most circumstances, do not set this property in code. Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets this property.      > [!NOTE] >  In ASP.NET version 2.0, the SmartNavigation property is deprecated. Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.       When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:      -   Eliminating the flash caused by navigation.      -   Persisting the scroll position when moving from page to page.      -   Persisting element focus between navigations.      -   Retaining only the last page state in the browser's history.       Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return. Consider this carefully when deciding whether to set this property to `true`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`SmartNavigation`</ph> attribute to <ph id=\"ph2\">`true`</ph> in the  directive in the .aspx file.","pos":[57,139],"source":" Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets this property.","pos":[140,219]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In ASP.NET version 2.0, the SmartNavigation property is deprecated.","pos":[225,305],"source":"      > [!NOTE] >  In ASP.NET version 2.0, the SmartNavigation property is deprecated."},{"content":"Use the &lt;xref:System.Web.UI.Page.SetFocus%2A&gt; method and the &lt;xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A&gt; property instead.","pos":[306,446],"source":" Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead."},{"content":"When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:      -   Eliminating the flash caused by navigation.","pos":[453,673]},{"content":"-   Persisting the scroll position when moving from page to page.","pos":[679,744]},{"content":"-   Persisting element focus between navigations.","pos":[750,799]},{"content":"-   Retaining only the last page state in the browser's history.","pos":[805,869]},{"content":"Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.","pos":[876,1025]},{"content":"Consider this carefully when deciding whether to set this property to <ph id=\"ph1\">`true`</ph>.","pos":[1026,1103],"source":" Consider this carefully when deciding whether to set this property to `true`."}]},{"pos":[202753,202920],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if smart navigation is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if smart navigation is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[203314,203406],"content":"Gets or sets the name of the theme that is applied to the page early in the page life cycle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the theme that is applied to the page early in the page life cycle.","pos":[0,92]}]},{"pos":[203419,204361],"content":"This property does not refer directly to a cascading style sheet (CSS). The property contains the name of an ASP.NET theme, which can  include CSS files within it.       The StyleSheetTheme property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle. This means that settings on the page take precedence over settings in the style sheet theme. For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).       You typically set a value for this property in the page directive or by overriding the property. For information, see the following topics:      -   [How to: Apply ASP.NET Themes](~/add/includes/ajax-current-ext-md.md)      -   [How to: Apply ASP.NET Themes Programmatically](~/add/includes/ajax-current-ext-md.md))","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property does not refer directly to a cascading style sheet (CSS).","pos":[0,71]},{"content":"The property contains the name of an ASP.NET theme, which can  include CSS files within it.","pos":[72,163]},{"content":"The StyleSheetTheme property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the &lt;xref:System.Web.UI.Page.Theme%2A&gt; property specifies the name of a theme that is applied to a page later in the page life cycle.","pos":[170,426],"source":"       The StyleSheetTheme property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle."},{"content":"This means that settings on the page take precedence over settings in the style sheet theme.","pos":[427,519]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[520,612],"source":" For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."},{"content":"You typically set a value for this property in the page directive or by overriding the property.","pos":[619,715]},{"content":"For information, see the following topics:      -   <bpt id=\"p1\">[</bpt>How to: Apply ASP.NET Themes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">[</bpt>How to: Apply ASP.NET Themes Programmatically<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>)","pos":[716,934],"source":" For information, see the following topics:      -   [How to: Apply ASP.NET Themes](~/add/includes/ajax-current-ext-md.md)      -   [How to: Apply ASP.NET Themes Programmatically](~/add/includes/ajax-current-ext-md.md))"}]},{"pos":[204495,204574],"content":"The name of the theme that is applied to the page early in the page life cycle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the theme that is applied to the page early in the page life cycle.","pos":[0,79]}]},{"pos":[204747,204878],"content":"An attempt was made to set the StyleSheetTheme property after the <xref:System.Web.UI.Page.FrameworkInitialize*> method was called.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to set the StyleSheetTheme property after the &lt;xref:System.Web.UI.Page.FrameworkInitialize*&gt; method was called.","pos":[0,131],"source":"An attempt was made to set the StyleSheetTheme property after the <xref:System.Web.UI.Page.FrameworkInitialize*> method was called."}]},{"pos":[204973,205148],"content":"StyleSheetTheme is set to an invalid theme name. This exception is thrown when the <xref:System.Web.UI.Page.FrameworkInitialize*> method is called, not by the property setter.","needQuote":true,"needEscape":true,"nodes":[{"content":"StyleSheetTheme is set to an invalid theme name. This exception is thrown when the <xref:System.Web.UI.Page.FrameworkInitialize*> method is called, not by the property setter.","pos":[0,175],"nodes":[{"content":"StyleSheetTheme is set to an invalid theme name.","pos":[0,48]},{"content":"This exception is thrown when the &lt;xref:System.Web.UI.Page.FrameworkInitialize*&gt; method is called, not by the property setter.","pos":[49,175],"source":" This exception is thrown when the <xref:System.Web.UI.Page.FrameworkInitialize*> method is called, not by the property setter."}]}]},{"pos":[205427,205467],"content":"Gets or sets the name of the page theme.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the page theme.","pos":[0,40]}]},{"pos":[205480,206191],"content":"The Theme property sets the name of the theme used for the page. If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property. For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).       The Theme property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the Theme property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.       The specified theme must exist as either an application or a global theme. If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Theme property sets the name of the theme used for the page.","pos":[0,64]},{"content":"If you want the settings on the page to take precedence over the settings in the theme, use the &lt;xref:System.Web.UI.Page.StyleSheetTheme%2A&gt; property.","pos":[65,215],"source":" If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[216,308],"source":" For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."},{"content":"The Theme property must be set prior to the &lt;xref:System.Web.UI.Page.PreInit&gt; event; setting the Theme property after the &lt;xref:System.Web.UI.Page.PreInit&gt; event will cause an &lt;xref:System.InvalidOperationException&gt; exception.","pos":[315,541],"source":"       The Theme property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the Theme property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception."},{"content":"The specified theme must exist as either an application or a global theme.","pos":[548,622]},{"content":"If the theme does not exist, an &lt;xref:System.Web.HttpException&gt; exception is thrown.","pos":[623,707],"source":" If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown."}]},{"pos":[206604,206631],"content":"The name of the page theme.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the page theme.","pos":[0,27]}]},{"pos":[206794,206904],"content":"An attempt was made to set Theme after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page.PreInit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event has occurred.","needQuote":true,"needEscape":true,"source":"An attempt was made to set Theme after the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event has occurred."},{"pos":[206999,207037],"content":"Theme is set to an invalid theme name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Theme is set to an invalid theme name.","pos":[0,38]}]},{"pos":[207316,207352],"content":"Gets or sets the title for the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the title for the page.","pos":[0,36]}]},{"pos":[207365,207600],"content":"Use the Title property to set the page title in the HTML header sent to the requesting browser.      > [!NOTE] >  The page must contain a `head` element that has the attribute `runat=\"server\"`, otherwise the title will not render.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Title property to set the page title in the HTML header sent to the requesting browser.","pos":[0,95]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The page must contain a <ph id=\"ph2\">`head`</ph> element that has the attribute <ph id=\"ph3\">`runat=\"server\"`</ph>, otherwise the title will not render.","pos":[101,230],"source":"      > [!NOTE] >  The page must contain a `head` element that has the attribute `runat=\"server\"`, otherwise the title will not render."}]},{"pos":[207716,207738],"content":"The title of the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The title of the page.","pos":[0,22]}]},{"pos":[207901,207958],"content":"The Title property requires a header control on the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Title property requires a header control on the page.","pos":[0,57]}]},{"pos":[208237,208326],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.TraceContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current Web request.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.TraceContext\"></xref> object for the current Web request."},{"pos":[208339,208912],"content":"Tracing tracks and presents the execution details about a Web request. For trace data to be visible in a rendered page, you must enable tracing at the page or application level.       Tracing on a page is disabled by default. To enable tracing for a page, use the  directive `<% @ Page trace=\"true\" %>`. To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application. For more information, see [ASP.NET Tracing Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Tracing tracks and presents the execution details about a Web request.","pos":[0,70]},{"content":"For trace data to be visible in a rendered page, you must enable tracing at the page or application level.","pos":[71,177]},{"content":"Tracing on a page is disabled by default.","pos":[184,225]},{"content":"To enable tracing for a page, use the  directive <ph id=\"ph1\">`&lt;% @ Page trace=\"true\" %&gt;`</ph>.","pos":[226,303],"source":" To enable tracing for a page, use the  directive `<% @ Page trace=\"true\" %>`."},{"content":"To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.","pos":[304,476]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Tracing Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[477,569],"source":" For more information, see [ASP.NET Tracing Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[209758,209852],"content":"Data from the <bpt id=\"p1\">&lt;xref href=\"System.Web.TraceContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current Web request.","needQuote":true,"needEscape":true,"source":"Data from the <xref href=\"System.Web.TraceContext\"></xref> object for the current Web request."},{"pos":[210221,210327],"content":"Sets a value indicating whether tracing is enabled for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets a value indicating whether tracing is enabled for the <xref href=\"System.Web.UI.Page\"></xref> object."},{"pos":[210339,210547],"content":"In most circumstances, do not set this property in code. Set the `Trace` attribute to `true` in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`Trace`</ph> attribute to <ph id=\"ph2\">`true`</ph> in the  directive in the .aspx file.","pos":[57,129],"source":" Set the `Trace` attribute to `true` in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[130,208]}]},{"pos":[210668,210918],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if tracing is enabled for the page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if tracing is enabled for the page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if tracing is enabled for the page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,250],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[211304,211370],"content":"Sets the mode in which trace statements are displayed on the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the mode in which trace statements are displayed on the page.","pos":[0,66]}]},{"pos":[211382,211584],"content":"In most circumstances, do not set this property in code. Set the `TraceMode` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`TraceMode`</ph> attribute in the  directive in the .aspx file.","pos":[57,123],"source":" Set the `TraceMode` attribute in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[124,202]}]},{"pos":[211729,211802],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.TraceMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration members.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.TraceMode\"></xref> enumeration members."},{"pos":[212195,212246],"content":"Sets the level of transaction support for the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the level of transaction support for the page.","pos":[0,51]}]},{"pos":[212258,212462],"content":"In most circumstances, do not set this property in code. Set the `Transaction` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In most circumstances, do not set this property in code.","pos":[0,56]},{"content":"Set the <ph id=\"ph1\">`Transaction`</ph> attribute in the  directive in the .aspx file.","pos":[57,125],"source":" Set the `Transaction` attribute in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the property.","pos":[126,204]}]},{"pos":[212586,212709],"content":"An integer that represents one of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.TransactionOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration members.","needQuote":true,"needEscape":true,"source":"An integer that represents one of the <xref href=\"System.EnterpriseServices.TransactionOption\"></xref> enumeration members."},{"pos":[213300,213312],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[213371,213383],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[214158,214170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[214265,214277],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[214336,214348],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[214719,214836],"content":"Sets the user interface (UI) ID for the <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the page.","needQuote":true,"needEscape":true,"source":"Sets the user interface (UI) ID for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page."},{"pos":[214849,215269],"content":"This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property. The culture is a property of the executing thread       Set the `UICulture` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the value of this property. In addition, you can also explicitly set the value of the UICulture property in the  of the Web.config file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a shortcut for the &lt;xref:System.Threading.Thread.CurrentThread%2A&gt; property.","pos":[0,93],"source":"This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property."},{"content":"The culture is a property of the executing thread       Set the <ph id=\"ph1\">`UICulture`</ph> attribute in the  directive in the .aspx file.","pos":[94,216],"source":" The culture is a property of the executing thread       Set the `UICulture` attribute in the  directive in the .aspx file."},{"content":"When the page is requested, the dynamically generated class sets the value of this property.","pos":[217,309]},{"content":"In addition, you can also explicitly set the value of the UICulture property in the  of the Web.config file.","pos":[310,418]}]},{"pos":[215389,215399],"content":"The UI ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The UI ID.","pos":[0,10]}]},{"pos":[215812,215881],"content":"Gets a unique suffix to append to the file path for caching browsers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique suffix to append to the file path for caching browsers.","pos":[0,69]}]},{"pos":[215893,216103],"content":"The UniqueFilePathSuffix property returns a string that is appended to the end of a file path when required for caching browsers. The string is used to identify the file path associated with a specific request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UniqueFilePathSuffix property returns a string that is appended to the end of a file path when required for caching browsers. The string is used to identify the file path associated with a specific request.","pos":[0,210],"nodes":[{"content":"The UniqueFilePathSuffix property returns a string that is appended to the end of a file path when required for caching browsers.","pos":[0,129]},{"content":"The string is used to identify the file path associated with a specific request.","pos":[130,210]}]}]},{"pos":[216239,216336],"content":"A unique suffix appended to the file path. The default is \"__ufps=\" plus a unique 6-digit number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique suffix appended to the file path. The default is \"__ufps=\" plus a unique 6-digit number.","pos":[0,97],"nodes":[{"content":"A unique suffix appended to the file path.","pos":[0,42]},{"content":"The default is \"__ufps=\" plus a unique 6-digit number.","pos":[43,97]}]}]},{"pos":[216785,216887],"content":"Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.","pos":[0,102]}]},{"pos":[217081,217251],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if unobtrusive JavaScript is used; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unobtrusive JavaScript is used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[217801,217862],"content":"Stops persistence of control state for the specified control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops persistence of control state for the specified control.","pos":[0,61]}]},{"pos":[217875,218485],"content":"Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted. Registration for control state is not carried over from request to request during a postback. Use the UnregisterRequiresControlState method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.       Internally, the UnregisterRequiresControlState method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted. Registration for control state is not carried over from request to request during a postback. Use the UnregisterRequiresControlState method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.       Internally, the UnregisterRequiresControlState method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.","pos":[0,608],"nodes":[{"content":"Custom server controls that use control state must call the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; on each request during before the state is persisted.","pos":[0,171],"source":"Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted."},{"content":"Registration for control state is not carried over from request to request during a postback.","pos":[172,265]},{"content":"Use the UnregisterRequiresControlState method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.","pos":[266,420]},{"content":"Internally, the UnregisterRequiresControlState method is invoked when using the &lt;xref:System.Web.UI.Control.RemovedControl%2A&gt; method to remove a control from a controls collection.","pos":[427,608],"source":"       Internally, the UnregisterRequiresControlState method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection."}]}]},{"pos":[218673,218767],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to stop persistence of control state.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> for which to stop persistence of control state."},{"pos":[218939,219050],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[219558,219570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[220324,220336],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[220431,220443],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[220786,220842],"content":"Gets information about the user making the page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets information about the user making the page request.","pos":[0,56]}]},{"pos":[220855,221216],"content":"An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.       This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.       This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.","pos":[0,359],"nodes":[{"content":"An &lt;xref:System.Security.Principal.IPrincipal&gt; object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,201],"source":"An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong."},{"content":"This property uses the &lt;xref:System.Web.HttpContext&gt; object's &lt;xref:System.Web.HttpContext.User%2A&gt; property to determine where the request originates.","pos":[208,359],"source":"       This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates."}]}]},{"pos":[221768,221864],"content":"An <xref:System.Security.Principal.IPrincipal> that represents the user making the page request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Security.Principal.IPrincipal&gt; that represents the user making the page request.","pos":[0,96],"source":"An <xref:System.Security.Principal.IPrincipal> that represents the user making the page request."}]},{"pos":[222216,222310],"content":"Instructs any validation controls included on the page to validate their assigned information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instructs any validation controls included on the page to validate their assigned information.","pos":[0,94]}]},{"pos":[222323,224152],"content":"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default. These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.       To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.       When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> property and invokes the validation logic for each validation control in the current validation group. The validation group is determined by the control that posted the page to the server. If no validation group is specified, then no validation group is used.      > [!NOTE] >  The behavior of page validation has changed. In [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], controls no longer call the Validate method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> method instead. If you use the Validate method on an [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is invoked when a user clicks any ASP.NET server control that has the <ph id=\"ph1\">`CausesValidation`</ph> property set to <ph id=\"ph2\">`true`</ph>, which is the default.","pos":[0,146],"source":"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default."},{"content":"These include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; Web server controls, the &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, and &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt; HTML server controls, and controls that can automatically post back to the server such as the &lt;xref:System.Web.UI.WebControls.TextBox&gt;, &lt;xref:System.Web.UI.WebControls.CheckBox&gt;, &lt;xref:System.Web.UI.WebControls.ListControl&gt;, and &lt;xref:System.Web.UI.WebControls.BulletedList&gt; controls.","pos":[147,759],"source":" These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls."},{"content":"To disable validation for any button control on the page, set the button control's <ph id=\"ph1\">`CausesValidation`</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[766,888],"source":"       To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`."},{"content":"When this method is invoked, it iterates through the validation controls contained in the &lt;xref:System.Web.UI.ValidatorCollection&gt; object associated with the &lt;xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName&gt; property and invokes the validation logic for each validation control in the current validation group.","pos":[895,1220],"source":"       When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> property and invokes the validation logic for each validation control in the current validation group."},{"content":"The validation group is determined by the control that posted the page to the server.","pos":[1221,1306]},{"content":"If no validation group is specified, then no validation group is used.","pos":[1307,1377]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The behavior of page validation has changed.","pos":[1383,1440],"source":"      > [!NOTE] >  The behavior of page validation has changed."},{"content":"In <ph id=\"ph1\">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph>, controls no longer call the Validate method; they use the &lt;xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName&gt; method instead.","pos":[1441,1657],"source":" In [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], controls no longer call the Validate method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> method instead."},{"content":"If you use the Validate method on an <ph id=\"ph1\">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph> page, validation groups are ignored and all controls are validated.","pos":[1658,1822],"source":" If you use the Validate method on an [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated."}]},{"pos":[225304,225411],"content":"Instructs the validation controls in the specified validation group to validate their assigned information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instructs the validation controls in the specified validation group to validate their assigned information.","pos":[0,107]}]},{"pos":[225424,226651],"content":"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default. These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.       To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.       The Validate method validates the specified validation group. After calling the Validate method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is invoked when a user clicks any ASP.NET server control that has the <ph id=\"ph1\">`CausesValidation`</ph> property set to <ph id=\"ph2\">`true`</ph>, which is the default.","pos":[0,146],"source":"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default."},{"content":"These include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; Web server controls, the &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, and &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt; HTML server controls, and controls that can automatically post back to the server such as the &lt;xref:System.Web.UI.WebControls.TextBox&gt;, &lt;xref:System.Web.UI.WebControls.CheckBox&gt;, &lt;xref:System.Web.UI.WebControls.ListControl&gt;, and &lt;xref:System.Web.UI.WebControls.BulletedList&gt; controls.","pos":[147,759],"source":" These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls."},{"content":"To disable validation for any button control on the page, set the button control's <ph id=\"ph1\">`CausesValidation`</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[766,888],"source":"       To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`."},{"content":"The Validate method validates the specified validation group.","pos":[895,956]},{"content":"After calling the Validate method on a validation group, the &lt;xref:System.Web.UI.Page.IsValid%2A&gt; method will return <ph id=\"ph1\">`true`</ph> only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.","pos":[957,1223],"source":" After calling the Validate method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid."}]},{"pos":[227490,227544],"content":"The validation group name of the controls to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validation group name of the controls to validate.","pos":[0,54]}]},{"pos":[227951,228074],"content":"Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.","pos":[0,123]}]},{"pos":[228086,228229],"content":"The value <xref:System.Web.UI.ValidateRequestMode> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value &lt;xref:System.Web.UI.ValidateRequestMode&gt; is not used in the &lt;xref:System.Web.UI.Page&gt; class because there is nothing to inherit from.","pos":[0,143],"source":"The value <xref:System.Web.UI.ValidateRequestMode> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from."}]},{"pos":[228414,228545],"content":"A value that indicates whether the page checks client input. The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the page checks client input.","pos":[0,60]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ValidateRequestMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[61,131],"source":" The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>."}]},{"pos":[228918,228995],"content":"Gets a collection of all validation controls contained on the requested page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all validation controls contained on the requested page.","pos":[0,77]}]},{"pos":[229008,229737],"content":"You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance. This collection contains all the validation server controls that are contained in a page.       Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method causes validation logic to be executed for each validation server control in the current validation group. If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> property returns `false`.       For more information on validation controls, see [ASP.NET Validation Controls](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use this property to manipulate the methods and properties of the &lt;xref:System.Web.UI.ValidatorCollection&gt; object associated with the current &lt;xref:System.Web.UI.Page&gt; instance.","pos":[0,185],"source":"You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance."},{"content":"This collection contains all the validation server controls that are contained in a page.","pos":[186,275]},{"content":"Calling the &lt;xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName&gt; method causes validation logic to be executed for each validation server control in the current validation group.","pos":[282,470],"source":"       Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method causes validation logic to be executed for each validation server control in the current validation group."},{"content":"If any of these controls do not pass, the &lt;xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName&gt; property returns <ph id=\"ph1\">`false`</ph>.","pos":[471,600],"source":" If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> property returns `false`."},{"content":"For more information on validation controls, see <bpt id=\"p1\">[</bpt>ASP.NET Validation Controls<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,725],"source":"       For more information on validation controls, see [ASP.NET Validation Controls](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[229900,229938],"content":"The collection of validation controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of validation controls.","pos":[0,38]}]},{"pos":[230458,230605],"content":"Confirms that an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlForm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is rendered for the specified ASP.NET server control at run time.","needQuote":true,"needEscape":true,"source":"Confirms that an <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> control is rendered for the specified ASP.NET server control at run time."},{"pos":[230618,231846],"content":"Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags. Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method. Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.       Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat=\"server\">`) tags. These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.       When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag. This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script. A composite server control does not need to make this call.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Controls that are required to be inside <ph id=\"ph1\">`&lt;form runat=server&gt;`</ph> tags can call this method before they render so that an error message is shown if they are placed outside the tags.","pos":[0,177],"source":"Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags."},{"content":"Controls that post back or depend on registered script blocks should call this method in an override of the &lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt; method.","pos":[178,357],"source":" Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method."},{"content":"Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.","pos":[358,501]},{"content":"Server controls that post back or use client-side script will not work if they are not enclosed in the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control (&lt;<ph id=\"ph1\">`form runat=\"server\"&gt;`</ph>) tags.","pos":[508,700],"source":"       Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat=\"server\">`) tags."},{"content":"These controls can call this method when they render to provide a clear error message when they are not enclosed in the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; control.","pos":[701,872],"source":" These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control."},{"content":"When you develop a custom server control, it is common to call this method when you override the <ph id=\"ph1\">`Render`</ph> method for any kind of input tag.","pos":[879,1018],"source":"       When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag."},{"content":"This is particularly important if the input control calls &lt;xref:System.Web.UI.Page.GetPostBackEventReference%2A&gt;, or if it emits client script.","pos":[1019,1162],"source":" This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script."},{"content":"A composite server control does not need to make this call.","pos":[1163,1222]}]},{"pos":[232670,232786],"content":"The ASP.NET server control that is required in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlForm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The ASP.NET server control that is required in the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> control."},{"pos":[232955,233129],"content":"The specified server control is not contained between the opening and closing tags of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlControls.HtmlForm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> server control at run time.","needQuote":true,"needEscape":true,"source":"The specified server control is not contained between the opening and closing tags of the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> server control at run time."},{"pos":[233232,233318],"content":"The control to verify is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The control to verify is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[233687,233738],"content":"Gets or sets the encryption mode of the view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encryption mode of the view state.","pos":[0,51]}]},{"pos":[233751,234686],"content":"The ViewStateEncryptionMode property cannot be set in code. It can only be set in the  directive or in the < element of the configuration file. Values set in the  directive override any values set in the configuration file.       The syntax for setting this property in the  directive is as follows:      ```vb#   <%@ Page Language=\"VB\" ViewStateEncryptionMode=\"Always\" %>      ```      ```c#   <%@ Page Language=\"C#\" ViewStateEncryptionMode=\"Always\" %>   ```       The syntax for setting this property in the configuration file is as follows:      ```vb#   <system.web>     <pages viewStateEncryptionMode=\"Always\" />   </system.web>      ```      ```c#   <system.web>     <pages viewStateEncryptionMode=\"Always\" />   </system.web>   ```       Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ViewStateEncryptionMode property cannot be set in code.","pos":[0,59]},{"content":"It can only be set in the  directive or in the &lt; element of the configuration file.","pos":[60,143],"source":" It can only be set in the  directive or in the < element of the configuration file."},{"content":"Values set in the  directive override any values set in the configuration file.","pos":[144,223]},{"content":"The syntax for setting this property in the  directive is as follows:      <ph id=\"ph1\">```vb#   &lt;%@ Page Language=\"VB\" ViewStateEncryptionMode=\"Always\" %&gt;      ```</ph>      <ph id=\"ph2\">```c#   &lt;%@ Page Language=\"C#\" ViewStateEncryptionMode=\"Always\" %&gt;   ```</ph>       The syntax for setting this property in the configuration file is as follows:      <ph id=\"ph3\">```vb#   &lt;system.web&gt;     &lt;pages viewStateEncryptionMode=\"Always\" /&gt;   &lt;/system.web&gt;      ```</ph>      <ph id=\"ph4\">```c#   &lt;system.web&gt;     &lt;pages viewStateEncryptionMode=\"Always\" /&gt;   &lt;/system.web&gt;   ```</ph>       Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.","pos":[230,895],"source":"       The syntax for setting this property in the  directive is as follows:      ```vb#   <%@ Page Language=\"VB\" ViewStateEncryptionMode=\"Always\" %>      ```      ```c#   <%@ Page Language=\"C#\" ViewStateEncryptionMode=\"Always\" %>   ```       The syntax for setting this property in the configuration file is as follows:      ```vb#   <system.web>     <pages viewStateEncryptionMode=\"Always\" />   </system.web>      ```      ```c#   <system.web>     <pages viewStateEncryptionMode=\"Always\" />   </system.web>   ```       Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control."}]},{"pos":[234875,235033],"content":"One of the <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref> values. The default value is <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateEncryptionMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,77],"source":"One of the <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateEncryptionMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[78,158],"source":" The default value is <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref>."}]},{"pos":[235218,235326],"content":"The value set is not a member of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateEncryptionMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"The value set is not a member of the <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref> enumeration."},{"pos":[235437,235611],"content":"The ViewStateEncryptionMode property can be set only in or before the page <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>phase in the page life cycle.","needQuote":true,"needEscape":true,"source":"The ViewStateEncryptionMode property can be set only in or before the page <xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"></xref>phase in the page life cycle."},{"pos":[235945,236049],"content":"Assigns an identifier to an individual user in the view-state variable associated with the current page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Assigns an identifier to an individual user in the view-state variable associated with the current page.","pos":[0,104]}]},{"pos":[236062,236877],"content":"Setting the ViewStateUserKey property can help you prevent attacks on your application from malicious users. It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack. For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557).       You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.      > [!NOTE] >  You must set this property during the `Page_Init` phase of page processing. Setting this property during the `Page_Load` phase throws an exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting the ViewStateUserKey property can help you prevent attacks on your application from malicious users.","pos":[0,108]},{"content":"It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.","pos":[109,269]},{"content":"For more information about Web attacks and about what you can do to help prevent them, see <bpt id=\"p1\">[</bpt>Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=163557)</ept>.","pos":[270,478],"source":" For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557)."},{"content":"You can set this property to any string value, such as the user's authenticated name or the &lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt; value.","pos":[485,644],"source":"       You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You must set this property during the <ph id=\"ph2\">`Page_Init`</ph> phase of page processing.","pos":[650,738],"source":"      > [!NOTE] >  You must set this property during the `Page_Init` phase of page processing."},{"content":"Setting this property during the <ph id=\"ph1\">`Page_Load`</ph> phase throws an exception.","pos":[739,810],"source":" Setting this property during the `Page_Load` phase throws an exception."}]},{"pos":[237004,237043],"content":"The identifier for the individual user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the individual user.","pos":[0,39]}]},{"pos":[237201,237276],"content":"The ViewStateUserKey property was accessed too late during page processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ViewStateUserKey property was accessed too late during page processing.","pos":[0,75]}]},{"pos":[237565,237668],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is rendered.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.Web.UI.Page\"></xref> object is rendered."},{"pos":[238312,238590],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.Page\"></xref> is to be rendered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Page\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is to be rendered; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,201],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.Page\"></xref> is to be rendered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[202,278],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Page\n  id: Page\n  children:\n  - System.Web.UI.Page.#ctor\n  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)\n  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)\n  - System.Web.UI.Page.Application\n  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)\n  - System.Web.UI.Page.AspCompatMode\n  - System.Web.UI.Page.AsyncMode\n  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)\n  - System.Web.UI.Page.AsyncTimeout\n  - System.Web.UI.Page.AutoPostBackControl\n  - System.Web.UI.Page.Buffer\n  - System.Web.UI.Page.Cache\n  - System.Web.UI.Page.ClientQueryString\n  - System.Web.UI.Page.ClientScript\n  - System.Web.UI.Page.ClientTarget\n  - System.Web.UI.Page.CodePage\n  - System.Web.UI.Page.ContentType\n  - System.Web.UI.Page.Context\n  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)\n  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)\n  - System.Web.UI.Page.Culture\n  - System.Web.UI.Page.DesignerInitialize\n  - System.Web.UI.Page.DeterminePostBackMode\n  - System.Web.UI.Page.DeterminePostBackModeUnvalidated\n  - System.Web.UI.Page.EnableEventValidation\n  - System.Web.UI.Page.EnableViewState\n  - System.Web.UI.Page.EnableViewStateMac\n  - System.Web.UI.Page.ErrorPage\n  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks\n  - System.Web.UI.Page.FileDependencies\n  - System.Web.UI.Page.FindControl(System.String)\n  - System.Web.UI.Page.Form\n  - System.Web.UI.Page.FrameworkInitialize\n  - System.Web.UI.Page.GetDataItem\n  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)\n  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)\n  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)\n  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)\n  - System.Web.UI.Page.GetTypeHashCode\n  - System.Web.UI.Page.GetValidators(System.String)\n  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])\n  - System.Web.UI.Page.Header\n  - System.Web.UI.Page.ID\n  - System.Web.UI.Page.IdSeparator\n  - System.Web.UI.Page.InitComplete\n  - System.Web.UI.Page.InitializeCulture\n  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)\n  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  - System.Web.UI.Page.IsAsync\n  - System.Web.UI.Page.IsCallback\n  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)\n  - System.Web.UI.Page.IsCrossPagePostBack\n  - System.Web.UI.Page.IsPostBack\n  - System.Web.UI.Page.IsPostBackEventControlRegistered\n  - System.Web.UI.Page.IsReusable\n  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)\n  - System.Web.UI.Page.IsValid\n  - System.Web.UI.Page.Items\n  - System.Web.UI.Page.LCID\n  - System.Web.UI.Page.LoadComplete\n  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium\n  - System.Web.UI.Page.MaintainScrollPositionOnPostBack\n  - System.Web.UI.Page.MapPath(System.String)\n  - System.Web.UI.Page.Master\n  - System.Web.UI.Page.MasterPageFile\n  - System.Web.UI.Page.MaxPageStateFieldLength\n  - System.Web.UI.Page.MetaDescription\n  - System.Web.UI.Page.MetaKeywords\n  - System.Web.UI.Page.ModelBindingExecutionContext\n  - System.Web.UI.Page.ModelState\n  - System.Web.UI.Page.OnInit(System.EventArgs)\n  - System.Web.UI.Page.OnInitComplete(System.EventArgs)\n  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)\n  - System.Web.UI.Page.OnPreInit(System.EventArgs)\n  - System.Web.UI.Page.OnPreLoad(System.EventArgs)\n  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)\n  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)\n  - System.Web.UI.Page.PageAdapter\n  - System.Web.UI.Page.PageStatePersister\n  - System.Web.UI.Page.postEventArgumentID\n  - System.Web.UI.Page.postEventSourceID\n  - System.Web.UI.Page.PreInit\n  - System.Web.UI.Page.PreLoad\n  - System.Web.UI.Page.PreRenderComplete\n  - System.Web.UI.Page.PreviousPage\n  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)\n  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)\n  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)\n  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)\n  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)\n  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)\n  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)\n  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)\n  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)\n  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)\n  - System.Web.UI.Page.RegisterRequiresViewStateEncryption\n  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)\n  - System.Web.UI.Page.RegisterViewStateHandler\n  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Page.Request\n  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)\n  - System.Web.UI.Page.Response\n  - System.Web.UI.Page.ResponseEncoding\n  - System.Web.UI.Page.RouteData\n  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)\n  - System.Web.UI.Page.SaveStateComplete\n  - System.Web.UI.Page.Server\n  - System.Web.UI.Page.Session\n  - System.Web.UI.Page.SetFocus(System.String)\n  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)\n  - System.Web.UI.Page.SkipFormActionValidation\n  - System.Web.UI.Page.SmartNavigation\n  - System.Web.UI.Page.StyleSheetTheme\n  - System.Web.UI.Page.Theme\n  - System.Web.UI.Page.Title\n  - System.Web.UI.Page.Trace\n  - System.Web.UI.Page.TraceEnabled\n  - System.Web.UI.Page.TraceModeValue\n  - System.Web.UI.Page.TransactionMode\n  - System.Web.UI.Page.TryUpdateModel``1(``0)\n  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  - System.Web.UI.Page.UICulture\n  - System.Web.UI.Page.UniqueFilePathSuffix\n  - System.Web.UI.Page.UnobtrusiveValidationMode\n  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)\n  - System.Web.UI.Page.UpdateModel``1(``0)\n  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  - System.Web.UI.Page.User\n  - System.Web.UI.Page.Validate\n  - System.Web.UI.Page.Validate(System.String)\n  - System.Web.UI.Page.ValidateRequestMode\n  - System.Web.UI.Page.Validators\n  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)\n  - System.Web.UI.Page.ViewStateEncryptionMode\n  - System.Web.UI.Page.ViewStateUserKey\n  - System.Web.UI.Page.Visible\n  langs:\n  - csharp\n  name: Page\n  nameWithType: Page\n  fullName: System.Web.UI.Page\n  type: Class\n  summary: Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.\n  remarks: \"The Page class is associated with files that have an .aspx extension. These files are compiled at run time as Page objects and cached in server memory.  \\n  \\n If you want to create a Web Forms page using the code-behind technique, derive from this class. Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.  \\n  \\n The Page object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.  \\n  \\n The Page class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed. For general information on these topics, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/add/includes/ajax-current-ext-md.md). For more specific information, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Display Safe Error Messages](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \\n  \\n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \\n  \\n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \\n  \\n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \\n  \\n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \\n  \\n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \\n  \\n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Load\")]\n\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(\"Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.ComponentModel.Designer(\"Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", typeof(System.ComponentModel.Design.IRootDesigner))]\n\n      [System.ComponentModel.DesignerCategory(\"ASPXCodeBehind\")]\n\n      [System.ComponentModel.ToolboxItem(false)]\n\n      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.TemplateControl\n  implements:\n  - System.Web.IHttpHandler\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnPreRender(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SaveViewState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.SkinID\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.TrackViewState\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.TemplateControl.AbortTransaction\n  - System.Web.UI.TemplateControl.AppRelativeVirtualPath\n  - System.Web.UI.TemplateControl.AutoHandlers\n  - System.Web.UI.TemplateControl.CommitTransaction\n  - System.Web.UI.TemplateControl.Construct\n  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)\n  - System.Web.UI.TemplateControl.EnableTheming\n  - System.Web.UI.TemplateControl.Error\n  - System.Web.UI.TemplateControl.Eval(System.String)\n  - System.Web.UI.TemplateControl.Eval(System.String,System.String)\n  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)\n  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)\n  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)\n  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)\n  - System.Web.UI.TemplateControl.LoadControl(System.String)\n  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])\n  - System.Web.UI.TemplateControl.LoadTemplate(System.String)\n  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)\n  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)\n  - System.Web.UI.TemplateControl.OnError(System.EventArgs)\n  - System.Web.UI.TemplateControl.ParseControl(System.String)\n  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)\n  - System.Web.UI.TemplateControl.ReadStringResource\n  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)\n  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)\n  - System.Web.UI.TemplateControl.SupportAutoEvents\n  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)\n  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)\n  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)\n  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)\n  - System.Web.UI.TemplateControl.XPath(System.String)\n  - System.Web.UI.TemplateControl.XPath(System.String,System.String)\n  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Web.UI.TemplateControl.XPathSelect(System.String)\n  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)\n  platform:\n  - net462\n- uid: System.Web.UI.Page.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Page()\n  nameWithType: Page.Page()\n  fullName: System.Web.UI.Page.Page()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.Page\"></xref> class.\n  remarks: The default constructor initializes all fields to their default values.\n  syntax:\n    content: public Page ();\n    parameters: []\n  overload: System.Web.UI.Page.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)\n  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AddContentTemplate(String,ITemplate)\n  nameWithType: Page.AddContentTemplate(String,ITemplate)\n  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.\n  syntax:\n    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);\n    parameters:\n    - id: templateName\n      type: System.String\n      description: The name of the content template to add.\n    - id: template\n      type: System.Web.UI.ITemplate\n      description: The content template\n  overload: System.Web.UI.Page.AddContentTemplate*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A content template with the same name already exists.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.\n  remarks: \"Use the AddOnPreRenderCompleteAsync method to add handlers to an asynchronous Web page.  \\n  \\n You can register multiple asynchronous handlers; however, only one handler runs at a time. If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.  \\n  \\n The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.  \\n  \\n First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called. When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called. If there are multiple asynchronous handlers, the next handler is called.  \\n  \\n After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.\"\n  example:\n  - \"The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]\"\n  syntax:\n    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The delegate for the <xref href=\"System.Web.BeginEventHandler\"></xref> method.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The delegate for the <xref href=\"System.Web.EndEventHandler\"></xref> method.\n  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref uid=\\\"langword_csharp_&lt;async&gt;\\\" name=\\\"&lt;async&gt;\\\" href=\\\"\\\"></xref> page directive is not set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The AddOnPreRenderCompleteAsync method is called after the <xref href=\\\"System.Web.UI.Control.PreRender\\\"></xref> event.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Web.UI.PageAsyncTask.BeginHandler*> or <xref:System.Web.UI.PageAsyncTask.EndHandler*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers beginning and ending  event handler delegates for an asynchronous page.\n  remarks: \"Use the AddOnPreRenderCompleteAsync method to add handlers that require state information to an asynchronous Web page. The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.  \\n  \\n You can register multiple asynchronous handlers; however, only one handler runs at a time. If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.  \\n  \\n The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.  \\n  \\n First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called. When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called. If there are multiple asynchronous handlers, the next handler is called.  \\n  \\n After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.\"\n  example:\n  - \"The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]\"\n  syntax:\n    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The delegate for the <xref href=\"System.Web.BeginEventHandler\"></xref> method.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The delegate for the <xref href=\"System.Web.EndEventHandler\"></xref> method.\n    - id: state\n      type: System.Object\n      description: An object containing state information for the event handlers.\n  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref uid=\\\"langword_csharp_&lt;async&gt;\\\" name=\\\"&lt;async&gt;\\\" href=\\\"\\\"></xref> page directive is not set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\\\"System.Web.UI.Control.PreRender\\\"></xref> event.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Web.UI.PageAsyncTask.BeginHandler*> or <xref:System.Web.UI.PageAsyncTask.EndHandler*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)\n  id: AddWrappedFileDependencies(System.Object)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AddWrappedFileDependencies(Object)\n  nameWithType: Page.AddWrappedFileDependencies(Object)\n  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Adds a list of dependent files that make up the current page. This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.\n  remarks: The AddWrappedFileDependencies method adds a list of files, such as user control files, that make up the current page. If any of these pages is modified, the entire page is compiled the next time it is requested. This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);\n    parameters:\n    - id: virtualFileDependencies\n      type: System.Object\n      description: An <xref:System.Object> containing the list of file names.\n  overload: System.Web.UI.Page.AddWrappedFileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Application\n  id: Application\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Application\n  nameWithType: Page.Application\n  fullName: System.Web.UI.Page.Application\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.HttpApplicationState\"></xref> object for the current Web request.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]\n     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]\n  syntax:\n    content: public System.Web.HttpApplicationState Application { get; }\n    return:\n      type: System.Web.HttpApplicationState\n      description: The current data in the <xref href=\"System.Web.HttpApplicationState\"></xref> class.\n  overload: System.Web.UI.Page.Application*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initiates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.\n  remarks: Do not call this method.\n  syntax:\n    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> with information about the current request.\n    - id: cb\n      type: System.AsyncCallback\n      description: The callback method.\n    - id: extraData\n      type: System.Object\n      description: Any extra data needed to process the request in the same manner as an ASP request.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> object.\n  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)\n  id: AspCompatEndProcessRequest(System.IAsyncResult)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AspCompatEndProcessRequest(IAsyncResult)\n  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)\n  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Terminates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.\n  remarks: Do not call this method.\n  syntax:\n    content: protected void AspCompatEndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The ASP page generated by the request.\n  overload: System.Web.UI.Page.AspCompatEndProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AspCompatMode\n  id: AspCompatMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AspCompatMode\n  nameWithType: Page.AspCompatMode\n  fullName: System.Web.UI.Page.AspCompatMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.\n  remarks: \"When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread. This allows the page to call STA components, such as components developed with Visual Basic 6.0. Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects. These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.  \\n  \\n In most circumstances, do not set this property in code. Set the `aspcompat` attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\"\n  syntax:\n    content: protected bool AspCompatMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page supports Active Server Pages (ASP) code; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.AspCompatMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AsyncMode\n  id: AsyncMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AsyncMode\n  nameWithType: Page.AsyncMode\n  fullName: System.Web.UI.Page.AsyncMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets a value indicating whether the page is processed synchronously or asynchronously.\n  remarks: \"The AsyncMode property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated. Use the `Async` attribute in  directive to set this value.  \\n  \\n Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive.\"\n  syntax:\n    content: protected bool AsyncMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is processed asynchronously; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.AsyncMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Begins processing an asynchronous page request.\n  syntax:\n    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the request.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to notify when the process is complete.\n    - id: extraData\n      type: System.Object\n      description: State data for the asynchronous method.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that references the asynchronous request.\n  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)\n  id: AsyncPageEndProcessRequest(System.IAsyncResult)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AsyncPageEndProcessRequest(IAsyncResult)\n  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)\n  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Ends processing an asynchronous page request.\n  syntax:\n    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> referencing a pending asynchronous request.\n  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AsyncTimeout\n  id: AsyncTimeout\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AsyncTimeout\n  nameWithType: Page.AsyncTimeout\n  fullName: System.Web.UI.Page.AsyncTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.\n  remarks: \"The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks. In most circumstances, do not set this property in code. Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive. Values set in the page configuration section are overwritten by the page directive.  \\n  \\n Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler. If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.\"\n  example:\n  - \"The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \\n  \\n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \\n  \\n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]\"\n  syntax:\n    content: public TimeSpan AsyncTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that contains the allowed time interval for completion of the asynchronous task. The default time interval is 45 seconds.\n  overload: System.Web.UI.Page.AsyncTimeout*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property was set to a negative value.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.AutoPostBackControl\n  id: AutoPostBackControl\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: AutoPostBackControl\n  nameWithType: Page.AutoPostBackControl\n  fullName: System.Web.UI.Page.AutoPostBackControl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the control in the page that is used to perform postbacks.\n  syntax:\n    content: public System.Web.UI.Control AutoPostBackControl { get; set; }\n    return:\n      type: System.Web.UI.Control\n      description: The control that is used to perform postbacks.\n  overload: System.Web.UI.Page.AutoPostBackControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Buffer\n  id: Buffer\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Buffer\n  nameWithType: Page.Buffer\n  fullName: System.Web.UI.Page.Buffer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets a value indicating whether the page output is buffered.\n  remarks: \"In most circumstances, do not set this property in code. Set the Buffer attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.  \\n  \\n> [!NOTE]\\n>  The Buffer property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.\"\n  syntax:\n    content: public bool Buffer { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if page output is buffered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Cache\n  id: Cache\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Cache\n  nameWithType: Page.Cache\n  fullName: System.Web.UI.Page.Cache\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.Caching.Cache\"></xref> object associated with the application in which the page resides.\n  remarks: An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests. The cache is not specifically associated with a page or user session. It is used primarily to enhance application performance. For more information, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md). For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \\n  \\n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]\"\n  syntax:\n    content: public System.Web.Caching.Cache Cache { get; }\n    return:\n      type: System.Web.Caching.Cache\n      description: The <xref href=\"System.Web.Caching.Cache\"></xref> associated with the page's application.\n  overload: System.Web.UI.Page.Cache*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: An instance of <xref href=\"System.Web.Caching.Cache\"></xref> is not created.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ClientQueryString\n  id: ClientQueryString\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ClientQueryString\n  nameWithType: Page.ClientQueryString\n  fullName: System.Web.UI.Page.ClientQueryString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the query string portion of the requested URL.\n  remarks: The ClientQueryString property contains the query string portion of the URL requested by the browser. For example, if the requested URL is \"http://www.contoso.com/default.aspx?id=100\", the ClientQueryString property will contain \"id=100\". The ClientQueryString property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName> method to decode the query string.\n  syntax:\n    content: public string ClientQueryString { get; }\n    return:\n      type: System.String\n      description: The query string portion of the requested URL.\n  overload: System.Web.UI.Page.ClientQueryString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ClientScript\n  id: ClientScript\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ClientScript\n  nameWithType: Page.ClientScript\n  fullName: System.Web.UI.Page.ClientScript\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a <xref href=\"System.Web.UI.ClientScriptManager\"></xref> object used to manage, register, and add script to the page.\n  remarks: \"Use the ClientScript property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page. For more information, see the <xref:System.Web.UI.ClientScriptManager> class.  \\n  \\n The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.\"\n  example:\n  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.\n  syntax:\n    content: public System.Web.UI.ClientScriptManager ClientScript { get; }\n    return:\n      type: System.Web.UI.ClientScriptManager\n      description: A <xref href=\"System.Web.UI.ClientScriptManager\"></xref> object.\n  overload: System.Web.UI.Page.ClientScript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ClientTarget\n  id: ClientTarget\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ClientTarget\n  nameWithType: Page.ClientTarget\n  fullName: System.Web.UI.Page.ClientTarget\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.\n  remarks: \"If you do not set the ClientTarget property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> property reflects the capabilities of the client browser. If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.  \\n  \\n The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:  \\n  \\n-   `uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.  \\n  \\n-   `downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script. You can use this alias to determine how Web pages would work in a browser that has client script disabled.  \\n  \\n You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive.  \\n  \\n You can define additional aliases in the `clientTarget` section of the application-level Web.config file. For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922).\"\n  example:\n  - \"The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n   <clientTarget>  \\n    <add alias=\\\"ie302\\\" useragent=\\\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\\\" />  \\n   </clientTarget>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public string ClientTarget { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that specifies the browser capabilities that you want to override.\n  overload: System.Web.UI.Page.ClientTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.CodePage\n  id: CodePage\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: CodePage\n  nameWithType: Page.CodePage\n  fullName: System.Web.UI.Page.CodePage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the code page identifier for the current <xref href=\"System.Web.UI.Page\"></xref>.\n  remarks: In most circumstances, do not set this property in code. Set the `CodePage` attribute to the value you want using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: public int CodePage { get; set; }\n    return:\n      type: System.Int32\n      description: An integer that represents the code page identifier for the current <xref href=\"System.Web.UI.Page\"></xref>.\n  overload: System.Web.UI.Page.CodePage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ContentType\n  id: ContentType\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: Page.ContentType\n  fullName: System.Web.UI.Page.ContentType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the HTTP MIME type for the <xref href=\"System.Web.HttpResponse\"></xref> object associated with the page.\n  remarks: In most circumstances, do not set this property in code. Set the `ContentType` attribute using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: public string ContentType { get; set; }\n    return:\n      type: System.String\n      description: The HTTP MIME type associated with the current page.\n  overload: System.Web.UI.Page.ContentType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Context\n  id: Context\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Context\n  nameWithType: Page.Context\n  fullName: System.Web.UI.Page.Context\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.HttpContext\"></xref> object associated with the page.\n  remarks: This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.\n  example:\n  - \"The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \\n  \\n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]\"\n  syntax:\n    content: protected override System.Web.HttpContext Context { get; }\n    return:\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> object that contains information associated with the current page.\n  overload: System.Web.UI.Page.Context*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)\n  id: CreateHtmlTextWriter(System.IO.TextWriter)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: CreateHtmlTextWriter(TextWriter)\n  nameWithType: Page.CreateHtmlTextWriter(TextWriter)\n  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Creates an <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object to render the page's content.\n  remarks: The CreateHtmlTextWriter method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request. You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section. Override the CreateHtmlTextWriter method to perform custom lookup.\n  example:\n  - \"The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \\n  \\n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]\"\n  syntax:\n    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);\n    parameters:\n    - id: tw\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> used to create the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref>.\n    return:\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> or <xref href=\"System.Web.UI.Html32TextWriter\"></xref>.\n  overload: System.Web.UI.Page.CreateHtmlTextWriter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)\n  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: CreateHtmlTextWriterFromType(TextWriter,Type)\n  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)\n  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Creates a specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object to render the page's content.\n  remarks: This method is used internally in page adapters.\n  syntax:\n    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);\n    parameters:\n    - id: tw\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> used to create the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref>.\n    - id: writerType\n      type: System.Type\n      description: The type of text writer to create.\n    return:\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that renders the content of the page.\n  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <code>writerType</code> parameter is set to an invalid type.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Culture\n  id: Culture\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: Page.Culture\n  fullName: System.Web.UI.Page.Culture\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the culture ID for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page.\n  remarks: \"Set the `Culture` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the value of this property. In addition, you can also explicitly set the value of the Culture property programmatically or in the  element of the Web.config file.  \\n  \\n The Culture property is used to help localize page content. You can set it to any valid culture ID. For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French. You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it. The automatic language detection can be qualified with a default value such as `auto:en-us`.  \\n  \\n For more information, see the <xref:System.Globalization.CultureInfo> class overview.\"\n  syntax:\n    content: public string Culture { get; set; }\n    return:\n      type: System.String\n      description: A valid culture ID.\n  overload: System.Web.UI.Page.Culture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.DesignerInitialize\n  id: DesignerInitialize\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: DesignerInitialize()\n  nameWithType: Page.DesignerInitialize()\n  fullName: System.Web.UI.Page.DesignerInitialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs any initialization of the instance of the <xref href=\"System.Web.UI.Page\"></xref> class that is required by RAD designers. This method is used only at design time.\n  syntax:\n    content: public void DesignerInitialize ();\n    parameters: []\n  overload: System.Web.UI.Page.DesignerInitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.DeterminePostBackMode\n  id: DeterminePostBackMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: DeterminePostBackMode()\n  nameWithType: Page.DeterminePostBackMode()\n  fullName: System.Web.UI.Page.DeterminePostBackMode()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> of data posted back to the page using either a POST or a GET command.\n  remarks: The DeterminePostBackMode method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page. The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred. The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the DeterminePostBackMode method is called.\n  syntax:\n    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();\n    parameters: []\n    return:\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the form data. If the postback used the POST command, the form information is returned from the <xref:System.Web.UI.Page.Context*> object. If the postback used the GET command, the query string information is returned. If the page is being requested for the first time, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Web.UI.Page.DeterminePostBackMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated\n  id: DeterminePostBackModeUnvalidated\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: DeterminePostBackModeUnvalidated()\n  nameWithType: Page.DeterminePostBackModeUnvalidated()\n  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.\n  remarks: For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.\n  syntax:\n    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();\n    parameters: []\n    return:\n      type: System.Collections.Specialized.NameValueCollection\n      description: An object that contains the unvalidated form data.\n  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.EnableEventValidation\n  id: EnableEventValidation\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: EnableEventValidation\n  nameWithType: Page.EnableEventValidation\n  fullName: System.Web.UI.Page.EnableEventValidation\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether the page validates postback and callback events.\n  remarks: \"When the EnableEventValidation property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control. A control registers its events during rendering and then validates the events during postback or callback handling. For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception. All event-driven controls in ASP.NET use this feature by default.  \\n  \\n If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.  \\n  \\n> [!IMPORTANT]\\n>  This feature reduces the risk of unauthorized or malicious postback requests and callbacks. It is strongly recommended that you do not disable event validation.  \\n  \\n You set the EnableEventValidation property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file. If you set this property in code, you must set it before the page is initialized.\"\n  syntax:\n    content: public virtual bool EnableEventValidation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page validates postback and callback events; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.EnableEventValidation*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The EnableEventValidation property was set after the page was initialized.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.EnableViewState\n  id: EnableViewState\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: EnableViewState\n  nameWithType: Page.EnableViewState\n  fullName: System.Web.UI.Page.EnableViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.\n  remarks: \"For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.  \\n  \\n Even if EnableViewState is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.\"\n  example:\n  - \"The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]\"\n  syntax:\n    content: public override bool EnableViewState { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page maintains its view state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.EnableViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.EnableViewStateMac\n  id: EnableViewStateMac\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: EnableViewStateMac\n  nameWithType: Page.EnableViewStateMac\n  fullName: System.Web.UI.Page.EnableViewStateMac\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.\n  remarks: \"A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser. When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.  \\n  \\n Do not set this property in code. Set the `EnableViewStateMac` attribute using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.  \\n  \\n> [!IMPORTANT]\\n>  This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state. The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.\"\n  syntax:\n    content: public bool EnableViewStateMac { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the view state should be MAC checked and encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.EnableViewStateMac*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ErrorPage\n  id: ErrorPage\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ErrorPage\n  nameWithType: Page.ErrorPage\n  fullName: System.Web.UI.Page.ErrorPage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]\n     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]\n  syntax:\n    content: public string ErrorPage { get; set; }\n    return:\n      type: System.String\n      description: The error page to which the browser is redirected.\n  overload: System.Web.UI.Page.ErrorPage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks\n  id: ExecuteRegisteredAsyncTasks\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ExecuteRegisteredAsyncTasks()\n  nameWithType: Page.ExecuteRegisteredAsyncTasks()\n  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Starts the execution of an asynchronous task.\n  remarks: \"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task.  \\n  \\n The ExecuteRegisteredAsyncTasks method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page. This automatic call to ExecuteRegisteredAsyncTasks occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event. Call the ExecuteRegisteredAsyncTasks method for tasks you want to be invoked at times other than the automatic call to this method. Note, asynchronous tasks will be executed only once even though ExecuteRegisteredAsyncTasks may be called more than once.  \\n  \\n The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the ExecuteRegisteredAsyncTasks method. The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence. If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \\n  \\n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \\n  \\n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]\"\n  syntax:\n    content: public void ExecuteRegisteredAsyncTasks ();\n    parameters: []\n  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is an exception in the asynchronous task.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.FileDependencies\n  id: FileDependencies\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: FileDependencies\n  nameWithType: Page.FileDependencies\n  fullName: System.Web.UI.Page.FileDependencies\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets an array of files that the current <xref href=\"System.Web.HttpResponse\"></xref> object is dependent upon.\n  remarks: \"This property has been deprecated. Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.  \\n  \\n In most circumstances, do not set this property in code. Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\"\n  syntax:\n    content: protected System.Collections.ArrayList FileDependencies { set; }\n    return:\n      type: System.Collections.ArrayList\n      description: The array of files that the current <xref href=\"System.Web.HttpResponse\"></xref> object is dependent upon.\n  overload: System.Web.UI.Page.FileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.FindControl(System.String)\n  id: FindControl(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: FindControl(String)\n  nameWithType: Page.FindControl(String)\n  fullName: System.Web.UI.Page.FindControl(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Searches the page naming container for a server control with the specified identifier.\n  remarks: The FindControl method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time. The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page. To access controls in a subordinate naming container, call the `FindControl` method of that container.\n  example:\n  - \"The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \\n  \\n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]\"\n  syntax:\n    content: public override System.Web.UI.Control FindControl (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The identifier for the control to be found.\n    return:\n      type: System.Web.UI.Control\n      description: The specified control, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified control does not exist.\n  overload: System.Web.UI.Page.FindControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Form\n  id: Form\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Form\n  nameWithType: Page.Form\n  fullName: System.Web.UI.Page.Form\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the HTML form for the page.\n  remarks: Use the Form property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.\n  syntax:\n    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }\n    return:\n      type: System.Web.UI.HtmlControls.HtmlForm\n      description: The <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> object associated with the page.\n  overload: System.Web.UI.Page.Form*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.FrameworkInitialize\n  id: FrameworkInitialize\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: FrameworkInitialize()\n  nameWithType: Page.FrameworkInitialize()\n  fullName: System.Web.UI.Page.FrameworkInitialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes the control tree during page generation based on the declarative nature of the page.\n  remarks: The FrameworkInitialize method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page. The FrameworkInitialize method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page. Ordinarily, you should not over need to override this method. If overriding, be sure to call the base class's FrameworkInitialize method.\n  syntax:\n    content: protected override void FrameworkInitialize ();\n    parameters: []\n  overload: System.Web.UI.Page.FrameworkInitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetDataItem\n  id: GetDataItem\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetDataItem()\n  nameWithType: Page.GetDataItem()\n  fullName: System.Web.UI.Page.GetDataItem()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the data item at the top of the data-binding context stack.\n  syntax:\n    content: public object GetDataItem ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object at the top of the data binding context stack.\n  overload: System.Web.UI.Page.GetDataItem*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no data-binding context for the page.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)\n  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetPostBackClientEvent(Control,String)\n  nameWithType: Page.GetPostBackClientEvent(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.\n  remarks: See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.\n  syntax:\n    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The server control that receives the client event postback.\n    - id: argument\n      type: System.String\n      description: A <xref:System.String> that is passed to &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;.\n    return:\n      type: System.String\n      description: The string that represents the client event.\n  overload: System.Web.UI.Page.GetPostBackClientEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)\n  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetPostBackClientHyperlink(Control,String)\n  nameWithType: Page.GetPostBackClientHyperlink(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a reference, with <xref uid=\"langword_csharp_javascript:\" name=\"javascript:\" href=\"\"></xref> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.\n  remarks: See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.\n  syntax:\n    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The server control to process the postback.\n    - id: argument\n      type: System.String\n      description: The parameter passed to the server control.\n    return:\n      type: System.String\n      description: A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.\n  overload: System.Web.UI.Page.GetPostBackClientHyperlink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)\n  id: GetPostBackEventReference(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetPostBackEventReference(Control)\n  nameWithType: Page.GetPostBackEventReference(Control)\n  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <xref href=\"System.Web.UI.Control\"></xref> object.\n  remarks: This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.\n  example:\n  - >-\n    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]\n     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]\n  syntax:\n    content: public string GetPostBackEventReference (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The server control to process the postback on the server.\n    return:\n      type: System.String\n      description: A string that, when treated as script on the client, initiates the postback.\n  overload: System.Web.UI.Page.GetPostBackEventReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)\n  id: GetPostBackEventReference(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetPostBackEventReference(Control,String)\n  nameWithType: Page.GetPostBackEventReference(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.\n  remarks: This method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.\n  example:\n  - >-\n    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]\n     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]\n  syntax:\n    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The server control to process the postback.\n    - id: argument\n      type: System.String\n      description: The parameter passed to the server control.\n    return:\n      type: System.String\n      description: A string that, when treated as script on the client, initiates the postback.\n  overload: System.Web.UI.Page.GetPostBackEventReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetTypeHashCode\n  id: GetTypeHashCode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetTypeHashCode()\n  nameWithType: Page.GetTypeHashCode()\n  fullName: System.Web.UI.Page.GetTypeHashCode()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Retrieves a hash code that is generated by <xref href=\"System.Web.UI.Page\"></xref> objects that are generated at run time. This hash code is unique to the <xref href=\"System.Web.UI.Page\"></xref> object's control hierarchy.\n  remarks: Do not override this method.\n  syntax:\n    content: public virtual int GetTypeHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code generated at run time. The default is 0.\n  overload: System.Web.UI.Page.GetTypeHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetValidators(System.String)\n  id: GetValidators(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetValidators(String)\n  nameWithType: Page.GetValidators(String)\n  fullName: System.Web.UI.Page.GetValidators(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a collection of control validators for a specified validation group.\n  remarks: \"The GetValidators method returns all the validation objects associated with a specific validation group. You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.  \\n  \\n To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.\"\n  example:\n  - \"The following code example uses the GetValidators method to return the default validation group.  \\n  \\n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);\n    parameters:\n    - id: validationGroup\n      type: System.String\n      description: The validation group to return, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to return the default validation group.\n    return:\n      type: System.Web.UI.ValidatorCollection\n      description: A <xref href=\"System.Web.UI.ValidatorCollection\"></xref> that contains the control validators for the specified validation group.\n  overload: System.Web.UI.Page.GetValidators*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])\n  id: GetWrappedFileDependencies(System.String[])\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: GetWrappedFileDependencies(String[])\n  nameWithType: Page.GetWrappedFileDependencies(String[])\n  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns a list of physical file names that correspond to a list of virtual file locations.\n  remarks: The GetWrappedFileDependencies method gets a list of files, such as user control files, that make up the current page. If any of these pages are modified, the entire page is compiled the next time it is requested. Do not override this method.\n  syntax:\n    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);\n    parameters:\n    - id: virtualFileDependencies\n      type: System.String[]\n      description: A string array of virtual file locations.\n    return:\n      type: System.Object\n      description: An object containing a list of physical file locations.\n  overload: System.Web.UI.Page.GetWrappedFileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Header\n  id: Header\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Header\n  nameWithType: Page.Header\n  fullName: System.Web.UI.Page.Header\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the document header for the page if the <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element is defined with a <xref uid=\"langword_csharp_runat=server\" name=\"runat=server\" href=\"\"></xref> in the page declaration.\n  remarks: \"The Header property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page. The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.  \\n  \\n> [!NOTE]\\n>  Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported. When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page. For more information, see [Microsoft Ajax Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \\n  \\n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }\n    return:\n      type: System.Web.UI.HtmlControls.HtmlHead\n      description: An <xref href=\"System.Web.UI.HtmlControls.HtmlHead\"></xref> containing the page header.\n  overload: System.Web.UI.Page.Header*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ID\n  id: ID\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ID\n  nameWithType: Page.ID\n  fullName: System.Web.UI.Page.ID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets an identifier for a particular instance of the <xref href=\"System.Web.UI.Page\"></xref> class.\n  syntax:\n    content: public override string ID { get; set; }\n    return:\n      type: System.String\n      description: The identifier for the instance of the <xref href=\"System.Web.UI.Page\"></xref> class. The default value is '_Page'.\n  overload: System.Web.UI.Page.ID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IdSeparator\n  id: IdSeparator\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IdSeparator\n  nameWithType: Page.IdSeparator\n  fullName: System.Web.UI.Page.IdSeparator\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the character used to separate control identifiers when building a unique ID for a control on a page.\n  syntax:\n    content: public virtual char IdSeparator { get; }\n    return:\n      type: System.Char\n      description: The character used to separate control identifiers. The default is set by the <xref href=\"System.Web.UI.Adapters.PageAdapter\"></xref> instance that renders the page. The IdSeparator is a server-side field and should not be modified.\n  overload: System.Web.UI.Page.IdSeparator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.InitComplete\n  id: InitComplete\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: InitComplete\n  nameWithType: Page.InitComplete\n  fullName: System.Web.UI.Page.InitComplete\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs when page initialization is complete.\n  remarks: \"The InitComplete event is called at the end of the page's initialization stage. At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated. You can access server controls, but they will not yet contain information returned from the user.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler InitComplete;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.InitializeCulture\n  id: InitializeCulture\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: InitializeCulture()\n  nameWithType: Page.InitializeCulture()\n  fullName: System.Web.UI.Page.InitializeCulture()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the <xref:System.Web.UI.Page.Culture*> and <xref:System.Web.UI.Page.UICulture*> for the current thread of the page.\n  remarks: The InitializeCulture method contains no coding logic. Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the InitializeCulture method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.\n  syntax:\n    content: protected virtual void InitializeCulture ();\n    parameters: []\n  overload: System.Web.UI.Page.InitializeCulture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)\n  id: InitOutputCache(System.Web.UI.OutputCacheParameters)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: InitOutputCache(OutputCacheParameters)\n  nameWithType: Page.InitOutputCache(OutputCacheParameters)\n  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes the output cache for the current page request based on an <xref href=\"System.Web.UI.OutputCacheParameters\"></xref> object.\n  remarks: You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);\n    parameters:\n    - id: cacheSettings\n      type: System.Web.UI.OutputCacheParameters\n      description: An <xref href=\"System.Web.UI.OutputCacheParameters\"></xref> that contains the cache settings.\n  overload: System.Web.UI.Page.InitOutputCache*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The cache profile was not found.  \\n  \\n \\\\- or -  \\n  \\n A missing directive or configuration settings profile attribute.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The output cache settings location is invalid.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes the output cache for the current page request.\n  remarks: You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);\n    parameters:\n    - id: duration\n      type: System.Int32\n      description: The amount of time that objects stored in the output cache are valid.\n    - id: varyByHeader\n      type: System.String\n      description: A semicolon-separated list of headers that content from the output cache will vary by.\n    - id: varyByCustom\n      type: System.String\n      description: The <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header.\n    - id: location\n      type: System.Web.UI.OutputCacheLocation\n      description: One of the <xref href=\"System.Web.UI.OutputCacheLocation\"></xref> values.\n    - id: varyByParam\n      type: System.String\n      description: A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.\n  overload: System.Web.UI.Page.InitOutputCache*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An invalid value is specified for <code>location</code>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes the output cache for the current page request.\n  remarks: You should not call this method. To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class. The latter are accessible through `Response.Cache` syntax in the page's code. For more information, see [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);\n    parameters:\n    - id: duration\n      type: System.Int32\n      description: The amount of time that objects stored in the output cache are valid.\n    - id: varyByContentEncoding\n      type: System.String\n      description: A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.\n    - id: varyByHeader\n      type: System.String\n      description: A semicolon-separated list of headers that content from the output cache will vary by.\n    - id: varyByCustom\n      type: System.String\n      description: The <xref uid=\"langword_csharp_Vary\" name=\"Vary\" href=\"\"></xref> HTTP header.\n    - id: location\n      type: System.Web.UI.OutputCacheLocation\n      description: One of the <xref href=\"System.Web.UI.OutputCacheLocation\"></xref> values.\n    - id: varyByParam\n      type: System.String\n      description: A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.\n  overload: System.Web.UI.Page.InitOutputCache*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An invalid value is specified for <code>location</code>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsAsync\n  id: IsAsync\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsAsync\n  nameWithType: Page.IsAsync\n  fullName: System.Web.UI.Page.IsAsync\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the page is processed asynchronously.\n  remarks: Use the IsAsync property to determine whether the Web page is running in asynchronous mode. This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous. For more information about asynchronous programming, see [Asynchronous Operations](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsAsync { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is in asynchronous mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>;\n  overload: System.Web.UI.Page.IsAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsCallback\n  id: IsCallback\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsCallback\n  nameWithType: Page.IsCallback\n  fullName: System.Web.UI.Page.IsCallback\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the page request is the result of a callback.\n  remarks: For more information, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsCallback { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page request is the result of a callback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)\n  id: IsClientScriptBlockRegistered(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsClientScriptBlockRegistered(String)\n  nameWithType: Page.IsClientScriptBlockRegistered(String)\n  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the client script block with the specified key is registered with the page.\n  remarks: \"Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.  \\n  \\n The IsClientScriptBlockRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \\n  \\n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]\"\n  syntax:\n    content: public bool IsClientScriptBlockRegistered (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The string key of the client script to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the script block is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsCrossPagePostBack\n  id: IsCrossPagePostBack\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsCrossPagePostBack\n  nameWithType: Page.IsCrossPagePostBack\n  fullName: System.Web.UI.Page.IsCrossPagePostBack\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the page is involved in a cross-page postback.\n  remarks: \"ASP.NET provides two mechanisms for transferring control from one page to another. You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.  \\n  \\n In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page. If, for example, Page A posts to Page B, Page A's IsCrossPagePostBack property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.\"\n  syntax:\n    content: public bool IsCrossPagePostBack { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is participating in a cross-page request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsCrossPagePostBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsPostBack\n  id: IsPostBack\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsPostBack\n  nameWithType: Page.IsPostBack\n  fullName: System.Web.UI.Page.IsPostBack\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.\n  remarks: For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \\n  \\n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \\n  \\n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]\"\n  syntax:\n    content: public bool IsPostBack { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the page is being loaded in response to a client postback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsPostBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsPostBackEventControlRegistered\n  id: IsPostBackEventControlRegistered\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsPostBackEventControlRegistered\n  nameWithType: Page.IsPostBackEventControlRegistered\n  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the control in the page that performs postbacks has been registered.\n  syntax:\n    content: public bool IsPostBackEventControlRegistered { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has been registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsReusable\n  id: IsReusable\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsReusable\n  nameWithType: Page.IsReusable\n  fullName: System.Web.UI.Page.IsReusable\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.Page\"></xref> object can be reused.\n  syntax:\n    content: public bool IsReusable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.Page.IsReusable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)\n  id: IsStartupScriptRegistered(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsStartupScriptRegistered(String)\n  nameWithType: Page.IsStartupScriptRegistered(String)\n  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the client startup script is registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: \"Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> to avoid unnecessarily assembling the client-side script. This is particularly important if the script requires a large amount of server resources to create.  \\n  \\n The IsStartupScriptRegistered method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \\n  \\n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]\"\n  syntax:\n    content: public bool IsStartupScriptRegistered (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The string key of the startup script to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the startup script is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsStartupScriptRegistered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.IsValid\n  id: IsValid\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: Page.IsValid\n  fullName: System.Web.UI.Page.IsValid\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether page validation succeeded.\n  remarks: \"For this property to return `true`, all validation server controls in the current validation group must validate successfully. You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing. These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.  \\n  \\n If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.\"\n  example:\n  - \"The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \\\"Page is valid!\\\" Otherwise, it is set to \\\"Some of the required fields are empty.\\\"  \\n  \\n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]\"\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if page validation succeeded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.IsValid*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The IsValid property is called before validation has occurred.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Items\n  id: Items\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Items\n  nameWithType: Page.Items\n  fullName: System.Web.UI.Page.Items\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a list of objects stored in the page context.\n  remarks: \"Use the Items property to store objects with the same lifetime as the page request. This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.  \\n  \\n Objects added to the Items property are available throughout the lifetime of the page, so you can add objects to the Items property in events early in the page life cycle and access those objects in later events.\"\n  syntax:\n    content: public System.Collections.IDictionary Items { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: A reference to an <xref:System.Collections.IDictionary> containing objects stored in the page context.\n  overload: System.Web.UI.Page.Items*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.LCID\n  id: LCID\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: LCID\n  nameWithType: Page.LCID\n  fullName: System.Web.UI.Page.LCID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the locale identifier for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page.\n  remarks: In most circumstances, do not set this property in code. The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.\n  syntax:\n    content: public int LCID { get; set; }\n    return:\n      type: System.Int32\n      description: The locale identifier to pass to the <xref href=\"System.Threading.Thread\"></xref>.\n  overload: System.Web.UI.Page.LCID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.LoadComplete\n  id: LoadComplete\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: LoadComplete\n  nameWithType: Page.LoadComplete\n  fullName: System.Web.UI.Page.LoadComplete\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs at the end of the load stage of the page's life cycle.\n  remarks: \"The LoadComplete event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler LoadComplete;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium\n  id: LoadPageStateFromPersistenceMedium\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: LoadPageStateFromPersistenceMedium()\n  nameWithType: Page.LoadPageStateFromPersistenceMedium()\n  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Loads any saved view-state information to the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: \"The LoadPageStateFromPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.  \\n  \\n ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.  \\n  \\n To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.\"\n  syntax:\n    content: protected virtual object LoadPageStateFromPersistenceMedium ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The saved view state.\n  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack\n  id: MaintainScrollPositionOnPostBack\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MaintainScrollPositionOnPostBack\n  nameWithType: Page.MaintainScrollPositionOnPostBack\n  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. This property replaces the obsolete <xref:System.Web.UI.Page.SmartNavigation*> property.\n  remarks: \"When Web pages are posted back to the server, the user is returned to the top of the page. On long Web pages, this means that the user has to scroll the page back to the last position on the page.  \\n  \\n When the MaintainScrollPositionOnPostBack property is set to `true`, the user is instead returned to the last position on the page.  \\n  \\n You set the MaintainScrollPositionOnPostBack property in the [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive.\"\n  syntax:\n    content: public bool MaintainScrollPositionOnPostBack { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client position should be maintained; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MapPath(System.String)\n  id: MapPath(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MapPath(String)\n  nameWithType: Page.MapPath(String)\n  fullName: System.Web.UI.Page.MapPath(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.\n  remarks: >-\n    > [!CAUTION]\n\n    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.\n  example:\n  - \"The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \\n  \\n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]\"\n  syntax:\n    content: public string MapPath (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: A <xref:System.String> that represents the virtual path.\n    return:\n      type: System.String\n      description: The physical path associated with the virtual path or application-relative path.\n  overload: System.Web.UI.Page.MapPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Master\n  id: Master\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Master\n  nameWithType: Page.Master\n  fullName: System.Web.UI.Page.Master\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the master page that determines the overall look of the page.\n  remarks: \"The Master property returns the <xref:System.Web.UI.MasterPage> object associated with this page. This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.  \\n  \\n The Master property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property. If you access the Master property on a page that does not reference a master page, `null` is returned. The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.\"\n  syntax:\n    content: public System.Web.UI.MasterPage Master { get; }\n    return:\n      type: System.Web.UI.MasterPage\n      description: The <xref href=\"System.Web.UI.MasterPage\"></xref> associated with this page if it exists; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.Master*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MasterPageFile\n  id: MasterPageFile\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MasterPageFile\n  nameWithType: Page.MasterPageFile\n  fullName: System.Web.UI.Page.MasterPageFile\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the virtual path of the master page.\n  remarks: \"The MasterPageFile property is a virtual path (from the root of the application) of the master page file associated with this page. The MasterPageFile property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the MasterPageFile property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception. If the MasterPageFile property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.  \\n  \\n Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.\"\n  syntax:\n    content: public virtual string MasterPageFile { get; set; }\n    return:\n      type: System.String\n      description: The virtual path of the master page.\n  overload: System.Web.UI.Page.MasterPageFile*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The MasterPageFile property is set after the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event is complete.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The file specified in the MasterPageFile property does not exist.  \\n  \\n \\\\- or -  \\n  \\n The page does not have a <xref href=\\\"System.Web.UI.WebControls.Content\\\"></xref> control as the top level control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MaxPageStateFieldLength\n  id: MaxPageStateFieldLength\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MaxPageStateFieldLength\n  nameWithType: Page.MaxPageStateFieldLength\n  fullName: System.Web.UI.Page.MaxPageStateFieldLength\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the maximum length for the page's state field.\n  remarks: \"When the MaxPageStateFieldLength property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the MaxPageStateFieldLength property.  \\n  \\n Setting the MaxPageStateFieldLength property to a negative number (the default) indicates that the view-state field should not be separated into chunks. Setting the MaxPageStateFieldLength to a small number may result in poor performance.  \\n  \\n Set the value of the MaxPageStateFieldLength property in the  of the Web.config file.\"\n  syntax:\n    content: public int MaxPageStateFieldLength { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum length, in bytes, for the page's state field. The default is -1.\n  overload: System.Web.UI.Page.MaxPageStateFieldLength*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The MaxPageStateFieldLength property is not equal to -1 or a positive number.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The MaxPageStateFieldLength property was set after the page was initialized.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MetaDescription\n  id: MetaDescription\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MetaDescription\n  nameWithType: Page.MetaDescription\n  fullName: System.Web.UI.Page.MetaDescription\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the content of the \"description\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element.\n  remarks: \"HTML `meta` elements can be used to improve search-engine listings. The \\\"description\\\" `meta` element is used by some search engines to improve listing previews.  \\n  \\n If there is no \\\"description\\\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered. If the page markup already has a \\\"description\\\" `meta` element, this property gets or sets the `content` attribute of the `meta` element.  \\n  \\n You can also set this property in the  directive.\"\n  example:\n  - \"If you set the MetaDescription property of a page to \\\"ASP.NET Overview\\\", the following element will appear in the rendered HTML:  \\n  \\n `<meta name=\\\"description\\\" content=\\\"ASP.NET Overview\\\" />`\"\n  syntax:\n    content: public string MetaDescription { get; set; }\n    return:\n      type: System.String\n      description: The content of the \"description\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element.\n  overload: System.Web.UI.Page.MetaDescription*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The page does not have a header control (a <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element with the <xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"></xref> attribute set to \"server\").\n  platform:\n  - net462\n- uid: System.Web.UI.Page.MetaKeywords\n  id: MetaKeywords\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: MetaKeywords\n  nameWithType: Page.MetaKeywords\n  fullName: System.Web.UI.Page.MetaKeywords\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the content of the \"keywords\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element.\n  remarks: \"HTML `meta` elements can be used to improve search-engine listings. The \\\"keywords\\\" `meta` element is either not used at all or is given very little weight by the major search engines.  \\n  \\n If there is no \\\"keywords\\\" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered. If the page markup already has a \\\"keywords\\\" `meta` element, this property gets or sets the `content` attribute of the `meta` element.  \\n  \\n You can also set this property in the  directive.\"\n  example:\n  - \"If you set the MetaKeywords property of a page to \\\"HTML,CSS,XML,JavaScript\\\", the following element will appear in the rendered HTML:  \\n  \\n `<meta name=\\\"keywords\\\" content=\\\" HTML,CSS,XML,JavaScript\\\" />`\"\n  syntax:\n    content: public string MetaKeywords { get; set; }\n    return:\n      type: System.String\n      description: The content of the \"keywords\" <xref uid=\"langword_csharp_meta\" name=\"meta\" href=\"\"></xref> element.\n  overload: System.Web.UI.Page.MetaKeywords*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The page does not have a header control (a <xref uid=\"langword_csharp_head\" name=\"head\" href=\"\"></xref> element with the <xref uid=\"langword_csharp_runat\" name=\"runat\" href=\"\"></xref> attribute set to \"server\").\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ModelBindingExecutionContext\n  id: ModelBindingExecutionContext\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ModelBindingExecutionContext\n  nameWithType: Page.ModelBindingExecutionContext\n  fullName: System.Web.UI.Page.ModelBindingExecutionContext\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the model binding execution context.\n  syntax:\n    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }\n    return:\n      type: System.Web.ModelBinding.ModelBindingExecutionContext\n      description: The model binding execution context. If the model binding execution context is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, a new one is created and returned.\n  overload: System.Web.UI.Page.ModelBindingExecutionContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ModelState\n  id: ModelState\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ModelState\n  nameWithType: Page.ModelState\n  fullName: System.Web.UI.Page.ModelState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the model state dictionary object that contains the state of the model and of model-binding validation.\n  remarks: For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).\n  syntax:\n    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }\n    return:\n      type: System.Web.ModelBinding.ModelStateDictionary\n      description: The model state dictionary object.\n  overload: System.Web.UI.Page.ModelState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnInit(System.EventArgs)\n  id: OnInit(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnInit(EventArgs)\n  nameWithType: Page.OnInit(EventArgs)\n  fullName: System.Web.UI.Page.OnInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event to initialize the page.\n  remarks: \"The OnInit method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance. In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated. A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls. Other server controls are not guaranteed to be created and ready for access.  \\n  \\n The OnInit method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnInit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)\n  id: OnInitComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnInitComplete(EventArgs)\n  nameWithType: Page.OnInitComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.InitComplete\"></xref> event after page initialization.\n  remarks: \"The OnInitComplete method is called after page initialization is complete. In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated. You can access server controls, but they will not yet contain information returned from the user.  \\n  \\n The OnInitComplete method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnInitComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnInitComplete (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnInitComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)\n  id: OnLoadComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnLoadComplete(EventArgs)\n  nameWithType: Page.OnLoadComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.LoadComplete\"></xref> event at the end of the page load stage.\n  remarks: \"The OnLoadComplete method is called at the end of the page load stage. At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnLoadComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLoadComplete (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnLoadComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)\n  id: OnPreInit(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnPreInit(EventArgs)\n  nameWithType: Page.OnPreInit(EventArgs)\n  fullName: System.Web.UI.Page.OnPreInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event at the beginning of page initialization.\n  remarks: \"The OnPreInit method is called at the beginning of the page initialization stage.  \\n  \\n After the OnPreInit method is called, personalization information is loaded and the page theme, if any, is initialized. This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnPreInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPreInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnPreInit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)\n  id: OnPreLoad(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnPreLoad(EventArgs)\n  nameWithType: Page.OnPreLoad(EventArgs)\n  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.PreLoad\"></xref> event after postback data is loaded into the page server controls but before the <xref:System.Web.UI.Control.OnLoad*> event.\n  remarks: \"The OnPreLoad method is called after all postback data returned from the user is loaded. At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.  \\n  \\n Controls created in the OnPreLoad method will also be loaded with view-state and postback data.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnPreLoad method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPreLoad (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnPreLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)\n  id: OnPreRenderComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnPreRenderComplete(EventArgs)\n  nameWithType: Page.OnPreRenderComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.PreRenderComplete\"></xref> event after the OnPreRenderComplete event and before the page is rendered.\n  remarks: \"The OnPreRenderComplete method is called when the prerendering stage of the page life cycle is complete. At this stage of the page life cycle, all controls are created and the page is ready to render the output.  \\n  \\n This is the last event called before the page's view state is saved.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnPreRenderComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPreRenderComplete (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.Page.OnPreRenderComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)\n  id: OnSaveStateComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: OnSaveStateComplete(EventArgs)\n  nameWithType: Page.OnSaveStateComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Page.SaveStateComplete\"></xref> event after the page state has been saved to the persistence medium.\n  remarks: \"The OnSaveStateComplete method is called when the state information for the control has been written to the persistence medium for the page. State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnSaveStateComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSaveStateComplete (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref:System.EventArgs> object containing the event data.\n  overload: System.Web.UI.Page.OnSaveStateComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PageAdapter\n  id: PageAdapter\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PageAdapter\n  nameWithType: Page.PageAdapter\n  fullName: System.Web.UI.Page.PageAdapter\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the adapter that renders the page for the specific requesting browser.\n  remarks: \"The PageAdapter property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.  \\n  \\n The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object. When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.\"\n  syntax:\n    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }\n    return:\n      type: System.Web.UI.Adapters.PageAdapter\n      description: The <xref href=\"System.Web.UI.Adapters.PageAdapter\"></xref> that renders the page.\n  overload: System.Web.UI.Page.PageAdapter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PageStatePersister\n  id: PageStatePersister\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PageStatePersister\n  nameWithType: Page.PageStatePersister\n  fullName: System.Web.UI.Page.PageStatePersister\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.PageStatePersister\"></xref> object associated with the page.\n  remarks: \"HTTP requests and responses are inherently stateless. To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.  \\n  \\n Page developers will typically not need to use the PageStatePersister property. The PageStatePersister property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.\"\n  syntax:\n    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }\n    return:\n      type: System.Web.UI.PageStatePersister\n      description: A <xref href=\"System.Web.UI.PageStatePersister\"></xref> associated with the page.\n  overload: System.Web.UI.Page.PageStatePersister*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.postEventArgumentID\n  id: postEventArgumentID\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: postEventArgumentID\n  nameWithType: Page.postEventArgumentID\n  fullName: System.Web.UI.Page.postEventArgumentID\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: A string that defines the EVENTARGUMENT hidden field in the rendered page.\n  syntax:\n    content: public const string postEventArgumentID;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.postEventSourceID\n  id: postEventSourceID\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: postEventSourceID\n  nameWithType: Page.postEventSourceID\n  fullName: System.Web.UI.Page.postEventSourceID\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: A string that defines the EVENTTARGET hidden field in the rendered page.\n  syntax:\n    content: public const string postEventSourceID;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PreInit\n  id: PreInit\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PreInit\n  nameWithType: Page.PreInit\n  fullName: System.Web.UI.Page.PreInit\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs before page initialization.\n  remarks: \"This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback. You can also check the values of profile properties.  \\n  \\n The event enables you to set values that are used later in the page life cycle. You can dynamically set a master page or a theme for the requested page, and create dynamic controls.  \\n  \\n For more information about how the PreInit event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event EventHandler PreInit;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PreLoad\n  id: PreLoad\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PreLoad\n  nameWithType: Page.PreLoad\n  fullName: System.Web.UI.Page.PreLoad\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs before the page <xref href=\"System.Web.UI.Control.Load\"></xref> event.\n  remarks: 'The PreLoad event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event. There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PreLoad;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PreRenderComplete\n  id: PreRenderComplete\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PreRenderComplete\n  nameWithType: Page.PreRenderComplete\n  fullName: System.Web.UI.Page.PreRenderComplete\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs before the page content is rendered.\n  remarks: \"The PreRenderComplete event is raised when the pre-render stage of the page life cycle is complete. At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.  \\n  \\n This is the last event raised before the page's view state is saved.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PreRenderComplete;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.PreviousPage\n  id: PreviousPage\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: PreviousPage\n  nameWithType: Page.PreviousPage\n  fullName: System.Web.UI.Page.PreviousPage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the page that transferred control to the current page.\n  remarks: \"When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page. You can use the PreviousPage property to access that information.  \\n  \\n If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the PreviousPage property contains `null`.\"\n  example:\n  - \"The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\\\"path\\\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \\n  \\n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \\n  \\n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]\"\n  syntax:\n    content: public System.Web.UI.Page PreviousPage { get; }\n    return:\n      type: System.Web.UI.Page\n      description: The <xref href=\"System.Web.UI.Page\"></xref> representing the page that transferred control to the current page.\n  overload: System.Web.UI.Page.PreviousPage*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The current user is not allowed to access the previous page.  \\n  \\n -or-  \\n  \\n ASP.NET routing is in use and the previous page's URL is a routed URL. When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file. Because this is not the case with a routed URL, the check fails.\"\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)\n  id: ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ProcessRequest(HttpContext)\n  nameWithType: Page.ProcessRequest(HttpContext)\n  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the intrinsic server objects of the <xref href=\"System.Web.UI.Page\"></xref> object, such as the <xref:System.Web.UI.Page.Context*>, <xref:System.Web.UI.Page.Request*>, <xref:System.Web.UI.Page.Response*>, and <xref:System.Web.UI.Page.Application*> properties.\n  remarks: You should not call this method.\n  syntax:\n    content: public virtual void ProcessRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> object that provides references to the intrinsic server objects (for example, <xref:System.Web.HttpContext.Request*>, <xref:System.Web.HttpContext.Response*>, and <xref:System.Web.HttpContext.Session*>) used to service HTTP requests.\n  overload: System.Web.UI.Page.ProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)\n  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RaisePostBackEvent(IPostBackEventHandler,String)\n  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)\n  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Notifies the server control that caused the postback that it should handle an incoming postback event.\n  remarks: The <xref:System.Web.UI.Page> object calls the RaisePostBackEvent method when a postback occurs. This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.\n  example:\n  - \"The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \\n  \\n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]\"\n  syntax:\n    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);\n    parameters:\n    - id: sourceControl\n      type: System.Web.UI.IPostBackEventHandler\n      description: The ASP.NET server control that caused the postback. This control must implement the <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interface.\n    - id: eventArgument\n      type: System.String\n      description: The postback argument.\n  overload: System.Web.UI.Page.RaisePostBackEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)\n  id: RegisterArrayDeclaration(System.String,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterArrayDeclaration(String,String)\n  nameWithType: Page.RegisterArrayDeclaration(String,String)\n  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Declares a value that is declared as an ECMAScript array declaration when the page is rendered.\n  remarks: \"This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.  \\n  \\n The RegisterArrayDeclaration method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.\"\n  example:\n  - \"The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \\n  \\n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]\"\n  syntax:\n    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);\n    parameters:\n    - id: arrayName\n      type: System.String\n      description: The name of the array in which to declare the value.\n    - id: arrayValue\n      type: System.String\n      description: The value to place in the array.\n  overload: System.Web.UI.Page.RegisterArrayDeclaration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)\n  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterAsyncTask(PageAsyncTask)\n  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)\n  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers a new asynchronous task with the page.\n  remarks: \"Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class. When the task is defined, use the RegisterAsyncTask method to register the task with the page. After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.  \\n  \\n The RegisterAsyncTask method can be used with both synchronous and asynchronous pages.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \\n  \\n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \\n  \\n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]\"\n  syntax:\n    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);\n    parameters:\n    - id: task\n      type: System.Web.UI.PageAsyncTask\n      description: A <xref href=\"System.Web.UI.PageAsyncTask\"></xref> that defines the asynchronous task.\n  overload: System.Web.UI.Page.RegisterAsyncTask*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The asynchronous task is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)\n  id: RegisterClientScriptBlock(System.String,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterClientScriptBlock(String,String)\n  nameWithType: Page.RegisterClientScriptBlock(String,String)\n  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Emits client-side script blocks to the response.\n  remarks: \"The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element. Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.  \\n  \\n Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance. Using a key also decreases the likelihood of different controls' script blocks interfering with each other.  \\n  \\n Any script blocks with the same `key` parameter values are considered duplicates.  \\n  \\n> [!NOTE]\\n>  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.  \\n  \\n The RegisterClientScriptBlock method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.\"\n  example:\n  - \"The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \\n  \\n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]\"\n  syntax:\n    content: public virtual void RegisterClientScriptBlock (string key, string script);\n    parameters:\n    - id: key\n      type: System.String\n      description: Unique key that identifies a script block.\n    - id: script\n      type: System.String\n      description: Content of script that is sent to the client.\n  overload: System.Web.UI.Page.RegisterClientScriptBlock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)\n  id: RegisterHiddenField(System.String,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterHiddenField(String,String)\n  nameWithType: Page.RegisterHiddenField(String,String)\n  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Allows server controls to automatically register a hidden field on the form. The field will be sent to the <xref href=\"System.Web.UI.Page\"></xref> object when the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> server control is rendered.\n  remarks: The RegisterHiddenField method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.\n  example:\n  - \"The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \\\"Welcome to Microsoft!\\\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \\n  \\n> [!IMPORTANT]\\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]\"\n  syntax:\n    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);\n    parameters:\n    - id: hiddenFieldName\n      type: System.String\n      description: The unique name of the hidden field to be rendered.\n    - id: hiddenFieldInitialValue\n      type: System.String\n      description: The value to be emitted in the hidden form.\n  overload: System.Web.UI.Page.RegisterHiddenField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)\n  id: RegisterOnSubmitStatement(System.String,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterOnSubmitStatement(String,String)\n  nameWithType: Page.RegisterOnSubmitStatement(String,String)\n  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Allows a page to access the client <xref uid=\"langword_csharp_OnSubmit\" name=\"OnSubmit\" href=\"\"></xref> event. The script should be a function call to client code registered elsewhere.\n  remarks: The RegisterOnSubmitStatement method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.\n  example:\n  - \"The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \\n  \\n> [!IMPORTANT]\\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]\"\n  syntax:\n    content: public void RegisterOnSubmitStatement (string key, string script);\n    parameters:\n    - id: key\n      type: System.String\n      description: Unique key that identifies a script block.\n    - id: script\n      type: System.String\n      description: The client-side script to be sent to the client.\n  overload: System.Web.UI.Page.RegisterOnSubmitStatement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)\n  id: RegisterRequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterRequiresControlState(Control)\n  nameWithType: Page.RegisterRequiresControlState(Control)\n  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers a control as one whose control state must be persisted.\n  remarks: Custom server controls that use control state must call the RegisterRequiresControlState method on each request because registration for control state is not carried over from request to request during a postback event. It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.\n  example:\n  - \"The following code example shows a custom server control calling the RegisterRequiresControlState method.  \\n  \\n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]\"\n  syntax:\n    content: public void RegisterRequiresControlState (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to register.\n  overload: System.Web.UI.Page.RegisterRequiresControlState*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The control to register is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The RegisterRequiresControlState method can be called only before or during the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)\n  id: RegisterRequiresPostBack(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterRequiresPostBack(Control)\n  nameWithType: Page.RegisterRequiresPostBack(Control)\n  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers a control as one that requires postback handling when the page is posted back to the server.\n  remarks: \"The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised. When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events. For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Register controls with the page at or before the `Page_PreRender` event of the page life cycle.\"\n  example:\n  - \"The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]\"\n  syntax:\n    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to be registered.\n  overload: System.Web.UI.Page.RegisterRequiresPostBack*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The control to register does not implement the <xref href=\"System.Web.UI.IPostBackDataHandler\"></xref> interface.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)\n  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)\n  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)\n  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: Only one server control can be registered per page request. The RegisterRequiresRaiseEvent must be used when the control does not include its control ID in the form post data. Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.\n  example:\n  - \"The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \\n  \\n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]\"\n  syntax:\n    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);\n    parameters:\n    - id: control\n      type: System.Web.UI.IPostBackEventHandler\n      description: The control to register.\n  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption\n  id: RegisterRequiresViewStateEncryption\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterRequiresViewStateEncryption()\n  nameWithType: Page.RegisterRequiresViewStateEncryption()\n  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Registers a control with the page as one requiring view-state encryption.\n  remarks: \"If you are developing a custom control that deals with potentially sensitive information, call the RegisterRequiresViewStateEncryption method to register the control with the page and ensure view state for the control is encrypted.  \\n  \\n The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode> or <xref:System.Web.UI.ViewStateEncryptionMode>.\"\n  example:\n  - \"The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \\n  \\n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]\"\n  syntax:\n    content: public void RegisterRequiresViewStateEncryption ();\n    parameters: []\n  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The RegisterRequiresViewStateEncryption method must be called before or during the page <xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"></xref>phase in the page life cycle.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)\n  id: RegisterStartupScript(System.String,System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterStartupScript(String,String)\n  nameWithType: Page.RegisterStartupScript(String,String)\n  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Emits a client-side script block in the page response.\n  remarks: \"Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the RegisterStartupScript method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element. Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.  \\n  \\n Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance  \\n  \\n Any script blocks with the same `key` parameter values are considered duplicates.  \\n  \\n> [!NOTE]\\n>  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.  \\n  \\n The RegisterStartupScript method has been deprecated. Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.\"\n  example:\n  - \"The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \\n  \\n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]\"\n  syntax:\n    content: public virtual void RegisterStartupScript (string key, string script);\n    parameters:\n    - id: key\n      type: System.String\n      description: Unique key that identifies a script block.\n    - id: script\n      type: System.String\n      description: Content of script that will be sent to the client.\n  overload: System.Web.UI.Page.RegisterStartupScript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RegisterViewStateHandler\n  id: RegisterViewStateHandler\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RegisterViewStateHandler()\n  nameWithType: Page.RegisterViewStateHandler()\n  fullName: System.Web.UI.Page.RegisterViewStateHandler()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Causes page view state to be persisted, if called.\n  remarks: \"The RegisterViewStateHandler method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control. If this method is not invoked, the page view state will not be persisted.  \\n  \\n> [!NOTE]\\n>  Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.\"\n  example:\n  - >-\n    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]\n     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]\n  syntax:\n    content: public void RegisterViewStateHandler ();\n    parameters: []\n  overload: System.Web.UI.Page.RegisterViewStateHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: Page.Render(HtmlTextWriter)\n  fullName: System.Web.UI.Page.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes the <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object and calls on the child controls of the <xref href=\"System.Web.UI.Page\"></xref> to render.\n  remarks: The Render method is responsible for creating the text and markup that is sent to the client browser. The default Render method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that receives the page content.\n  overload: System.Web.UI.Page.Render*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Request\n  id: Request\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Request\n  nameWithType: Page.Request\n  fullName: System.Web.UI.Page.Request\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.HttpRequest\"></xref> object for the requested page.\n  remarks: The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.\n  example:\n  - \"The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \\n  \\n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpRequest Request { get; }\n    return:\n      type: System.Web.HttpRequest\n      description: The current <xref href=\"System.Web.HttpRequest\"></xref> associated with the page.\n  overload: System.Web.UI.Page.Request*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Occurs when the <xref href=\"System.Web.HttpRequest\"></xref> object is not available.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)\n  id: RequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RequiresControlState(Control)\n  nameWithType: Page.RequiresControlState(Control)\n  fullName: System.Web.UI.Page.RequiresControlState(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the specified <xref href=\"System.Web.UI.Control\"></xref> object is registered to participate in control state management.\n  remarks: \"Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.  \\n  \\n Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state. Use the RequiresControlState method to check for controls that are registered with the page as requiring control state.\"\n  syntax:\n    content: public bool RequiresControlState (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> to check for a control state requirement.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Web.UI.Control\"></xref> requires control state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>\n  overload: System.Web.UI.Page.RequiresControlState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Response\n  id: Response\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Response\n  nameWithType: Page.Response\n  fullName: System.Web.UI.Page.Response\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.HttpResponse\"></xref> object associated with the <xref href=\"System.Web.UI.Page\"></xref> object. This object allows you to send HTTP response data to a client and contains information about that response.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \\n  \\n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpResponse Response { get; }\n    return:\n      type: System.Web.HttpResponse\n      description: The current <xref href=\"System.Web.HttpResponse\"></xref> associated with the page.\n  overload: System.Web.UI.Page.Response*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.HttpResponse\"></xref> object is not available.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ResponseEncoding\n  id: ResponseEncoding\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ResponseEncoding\n  nameWithType: Page.ResponseEncoding\n  fullName: System.Web.UI.Page.ResponseEncoding\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the encoding language for the current <xref href=\"System.Web.HttpResponse\"></xref> object.\n  remarks: In most circumstances, do not set this property in code. Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: public string ResponseEncoding { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the encoding language for the current <xref href=\"System.Web.HttpResponse\"></xref>.\n  overload: System.Web.UI.Page.ResponseEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.RouteData\n  id: RouteData\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: RouteData\n  nameWithType: Page.RouteData\n  fullName: System.Web.UI.Page.RouteData\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance.\n  remarks: \"If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data. If the page runs in response to a physical URL instead of a route URL, this property is `null`. The following example shows how to extract the value of a URL parameter that is named `year`.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nDim year As Integer = Convert.ToInt32(Page.RouteData.Values(\\\"year\\\"))  \\n```  \\n  \\n [C#]  \\n  \\n```  \\nint year = Convert.ToInt32(Page.RouteData.Values[\\\"year\\\"])  \\n```  \\n  \\n If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value \\\"2010\\\" when this code runs.  \\n  \\n For more information about ASP.NET routing, see [ASP.NET Routing](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Web.Routing.RouteData RouteData { get; }\n    return:\n      type: System.Web.Routing.RouteData\n      description: The &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; value of the current &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instance.\n  overload: System.Web.UI.Page.RouteData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)\n  id: SavePageStateToPersistenceMedium(System.Object)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SavePageStateToPersistenceMedium(Object)\n  nameWithType: Page.SavePageStateToPersistenceMedium(Object)\n  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Saves any view-state and control-state information for the page.\n  remarks: \"The SavePageStateToPersistenceMedium method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=fullName> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.  \\n  \\n ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request. Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.  \\n  \\n To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice. For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field. If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.\"\n  syntax:\n    content: protected virtual void SavePageStateToPersistenceMedium (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: An <xref:System.Object> in which to store the view-state information.\n  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SaveStateComplete\n  id: SaveStateComplete\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SaveStateComplete\n  nameWithType: Page.SaveStateComplete\n  fullName: System.Web.UI.Page.SaveStateComplete\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs after the page has completed saving all view state and control state information for the page and controls on the page.\n  remarks: \"State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event. The SaveStateComplete event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.  \\n  \\n This is the last event raised before the page is rendered to the requesting browser.  \\n  \\n For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event EventHandler SaveStateComplete;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Server\n  id: Server\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Server\n  nameWithType: Page.Server\n  fullName: System.Web.UI.Page.Server\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> object, which is an instance of the <xref href=\"System.Web.HttpServerUtility\"></xref> class.\n  remarks: This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.\n  example:\n  - \"The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \\n  \\n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]\"\n  syntax:\n    content: public System.Web.HttpServerUtility Server { get; }\n    return:\n      type: System.Web.HttpServerUtility\n      description: The current <xref uid=\"langword_csharp_Server\" name=\"Server\" href=\"\"></xref> object associated with the page.\n  overload: System.Web.UI.Page.Server*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Session\n  id: Session\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Session\n  nameWithType: Page.Session\n  fullName: System.Web.UI.Page.Session\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the current <xref uid=\"langword_csharp_Session\" name=\"Session\" href=\"\"></xref> object provided by ASP.NET.\n  remarks: This property provides information about the current request's session. A `Session` object is maintained for each user that requests a page or document from an ASP.NET application. Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application. For more information about session state, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \\n  \\n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }\n    return:\n      type: System.Web.SessionState.HttpSessionState\n      description: The current session-state data.\n  overload: System.Web.UI.Page.Session*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Occurs when the session information is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SetFocus(System.String)\n  id: SetFocus(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SetFocus(String)\n  nameWithType: Page.SetFocus(String)\n  fullName: System.Web.UI.Page.SetFocus(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the browser focus to the control with the specified identifier.\n  remarks: \"Use the SetFocus method to make the control with the specified ID string the active control in the Web page displayed by the browser. The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.  \\n  \\n> [!NOTE]\\n>  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.\"\n  example:\n  - \"The following code example sets the focus to the second text box on a Web page.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]\"\n  syntax:\n    content: public void SetFocus (string clientID);\n    parameters:\n    - id: clientID\n      type: System.String\n      description: The ID of the control to set focus to.\n  overload: System.Web.UI.Page.SetFocus*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clientID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"SetFocus is called when the control is not part of a Web Forms page.  \\n  \\n \\\\- or -  \\n  \\n SetFocus is called after the <xref href=\\\"System.Web.UI.Control.PreRender\\\"></xref> event.\"\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)\n  id: SetFocus(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SetFocus(Control)\n  nameWithType: Page.SetFocus(Control)\n  fullName: System.Web.UI.Page.SetFocus(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the browser focus to the specified control.\n  remarks: \"Use the SetFocus method to make the specified control the active control on the Web page displayed by the browser. The SetFocus method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.  \\n  \\n> [!NOTE]\\n>  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.\"\n  example:\n  - \"The following code example sets the focus to the second text box on a Web page.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]\"\n  syntax:\n    content: public void SetFocus (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to receive focus.\n  overload: System.Web.UI.Page.SetFocus*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"SetFocus is called when the control is not part of a Web Forms page.  \\n  \\n \\\\- or -  \\n  \\n SetFocus is called after the <xref href=\\\"System.Web.UI.Control.PreRender\\\"></xref> event.\"\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SkipFormActionValidation\n  id: SkipFormActionValidation\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SkipFormActionValidation\n  nameWithType: Page.SkipFormActionValidation\n  fullName: System.Web.UI.Page.SkipFormActionValidation\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the query string value is validated.\n  syntax:\n    content: public bool SkipFormActionValidation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if query string validation should be skipped (the query string should not be validated); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if query string validation should take place as normal. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.SkipFormActionValidation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.SmartNavigation\n  id: SmartNavigation\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: SmartNavigation\n  nameWithType: Page.SmartNavigation\n  fullName: System.Web.UI.Page.SmartNavigation\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether smart navigation is enabled. This property is deprecated.\n  remarks: \"In most circumstances, do not set this property in code. Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets this property.  \\n  \\n> [!NOTE]\\n>  In ASP.NET version 2.0, the SmartNavigation property is deprecated. Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.  \\n  \\n When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:  \\n  \\n-   Eliminating the flash caused by navigation.  \\n  \\n-   Persisting the scroll position when moving from page to page.  \\n  \\n-   Persisting element focus between navigations.  \\n  \\n-   Retaining only the last page state in the browser's history.  \\n  \\n Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return. Consider this carefully when deciding whether to set this property to `true`.\"\n  syntax:\n    content: public bool SmartNavigation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if smart navigation is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.SmartNavigation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.StyleSheetTheme\n  id: StyleSheetTheme\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: StyleSheetTheme\n  nameWithType: Page.StyleSheetTheme\n  fullName: System.Web.UI.Page.StyleSheetTheme\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the theme that is applied to the page early in the page life cycle.\n  remarks: \"This property does not refer directly to a cascading style sheet (CSS). The property contains the name of an ASP.NET theme, which can  include CSS files within it.  \\n  \\n The StyleSheetTheme property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle. This means that settings on the page take precedence over settings in the style sheet theme. For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You typically set a value for this property in the page directive or by overriding the property. For information, see the following topics:  \\n  \\n-   [How to: Apply ASP.NET Themes](~/add/includes/ajax-current-ext-md.md)  \\n  \\n-   [How to: Apply ASP.NET Themes Programmatically](~/add/includes/ajax-current-ext-md.md))\"\n  syntax:\n    content: public virtual string StyleSheetTheme { get; set; }\n    return:\n      type: System.String\n      description: The name of the theme that is applied to the page early in the page life cycle.\n  overload: System.Web.UI.Page.StyleSheetTheme*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to set the StyleSheetTheme property after the <xref:System.Web.UI.Page.FrameworkInitialize*> method was called.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: StyleSheetTheme is set to an invalid theme name. This exception is thrown when the <xref:System.Web.UI.Page.FrameworkInitialize*> method is called, not by the property setter.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Theme\n  id: Theme\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Theme\n  nameWithType: Page.Theme\n  fullName: System.Web.UI.Page.Theme\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the page theme.\n  remarks: \"The Theme property sets the name of the theme used for the page. If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property. For more information, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The Theme property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the Theme property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.  \\n  \\n The specified theme must exist as either an application or a global theme. If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.\"\n  example:\n  - \"The following code example sets the Theme property to a name passed in the query string.  \\n  \\n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]\"\n  syntax:\n    content: public virtual string Theme { get; set; }\n    return:\n      type: System.String\n      description: The name of the page theme.\n  overload: System.Web.UI.Page.Theme*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to set Theme after the <xref href=\"System.Web.UI.Page.PreInit\"></xref> event has occurred.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Theme is set to an invalid theme name.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Title\n  id: Title\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Title\n  nameWithType: Page.Title\n  fullName: System.Web.UI.Page.Title\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the title for the page.\n  remarks: \"Use the Title property to set the page title in the HTML header sent to the requesting browser.  \\n  \\n> [!NOTE]\\n>  The page must contain a `head` element that has the attribute `runat=\\\"server\\\"`, otherwise the title will not render.\"\n  syntax:\n    content: public string Title { get; set; }\n    return:\n      type: System.String\n      description: The title of the page.\n  overload: System.Web.UI.Page.Title*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The Title property requires a header control on the page.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Trace\n  id: Trace\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Trace\n  nameWithType: Page.Trace\n  fullName: System.Web.UI.Page.Trace\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.TraceContext\"></xref> object for the current Web request.\n  remarks: \"Tracing tracks and presents the execution details about a Web request. For trace data to be visible in a rendered page, you must enable tracing at the page or application level.  \\n  \\n Tracing on a page is disabled by default. To enable tracing for a page, use the  directive `<% @ Page trace=\\\"true\\\" %>`. To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application. For more information, see [ASP.NET Tracing Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \\n  \\n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]\"\n  syntax:\n    content: public System.Web.TraceContext Trace { get; }\n    return:\n      type: System.Web.TraceContext\n      description: Data from the <xref href=\"System.Web.TraceContext\"></xref> object for the current Web request.\n  overload: System.Web.UI.Page.Trace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.TraceEnabled\n  id: TraceEnabled\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: TraceEnabled\n  nameWithType: Page.TraceEnabled\n  fullName: System.Web.UI.Page.TraceEnabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets a value indicating whether tracing is enabled for the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: In most circumstances, do not set this property in code. Set the `Trace` attribute to `true` in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: public bool TraceEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if tracing is enabled for the page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.TraceEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.TraceModeValue\n  id: TraceModeValue\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: TraceModeValue\n  nameWithType: Page.TraceModeValue\n  fullName: System.Web.UI.Page.TraceModeValue\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the mode in which trace statements are displayed on the page.\n  remarks: In most circumstances, do not set this property in code. Set the `TraceMode` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: public System.Web.TraceMode TraceModeValue { get; set; }\n    return:\n      type: System.Web.TraceMode\n      description: One of the <xref href=\"System.Web.TraceMode\"></xref> enumeration members.\n  overload: System.Web.UI.Page.TraceModeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.TransactionMode\n  id: TransactionMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: TransactionMode\n  nameWithType: Page.TransactionMode\n  fullName: System.Web.UI.Page.TransactionMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the level of transaction support for the page.\n  remarks: In most circumstances, do not set this property in code. Set the `Transaction` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the property.\n  syntax:\n    content: protected int TransactionMode { get; set; }\n    return:\n      type: System.Int32\n      description: An integer that represents one of the <xref href=\"System.EnterpriseServices.TransactionOption\"></xref> enumeration members.\n  overload: System.Web.UI.Page.TransactionMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.TryUpdateModel``1(``0)\n  id: TryUpdateModel``1(``0)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: TryUpdateModel(TModel)\n  nameWithType: Page.TryUpdateModel(TModel)\n  fullName: System.Web.UI.Page.TryUpdateModel(TModel)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  syntax:\n    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'\n    parameters:\n    - id: model\n      type: TModel\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Web.UI.Page.TryUpdateModel<TModel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: TryUpdateModel(TModel,IValueProvider)\n  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)\n  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  syntax:\n    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'\n    parameters:\n    - id: model\n      type: TModel\n      description: To be added.\n    - id: valueProvider\n      type: System.Web.ModelBinding.IValueProvider\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Web.UI.Page.TryUpdateModel<TModel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UICulture\n  id: UICulture\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UICulture\n  nameWithType: Page.UICulture\n  fullName: System.Web.UI.Page.UICulture\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets the user interface (UI) ID for the <xref href=\"System.Threading.Thread\"></xref> object associated with the page.\n  remarks: \"This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property. The culture is a property of the executing thread  \\n  \\n Set the `UICulture` attribute in the  directive in the .aspx file. When the page is requested, the dynamically generated class sets the value of this property. In addition, you can also explicitly set the value of the UICulture property in the  of the Web.config file.\"\n  syntax:\n    content: public string UICulture { get; set; }\n    return:\n      type: System.String\n      description: The UI ID.\n  overload: System.Web.UI.Page.UICulture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UniqueFilePathSuffix\n  id: UniqueFilePathSuffix\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UniqueFilePathSuffix\n  nameWithType: Page.UniqueFilePathSuffix\n  fullName: System.Web.UI.Page.UniqueFilePathSuffix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a unique suffix to append to the file path for caching browsers.\n  remarks: The UniqueFilePathSuffix property returns a string that is appended to the end of a file path when required for caching browsers. The string is used to identify the file path associated with a specific request.\n  syntax:\n    content: protected virtual string UniqueFilePathSuffix { get; }\n    return:\n      type: System.String\n      description: A unique suffix appended to the file path. The default is \"__ufps=\" plus a unique 6-digit number.\n  overload: System.Web.UI.Page.UniqueFilePathSuffix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UnobtrusiveValidationMode\n  id: UnobtrusiveValidationMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UnobtrusiveValidationMode\n  nameWithType: Page.UnobtrusiveValidationMode\n  fullName: System.Web.UI.Page.UnobtrusiveValidationMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.\n  syntax:\n    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }\n    return:\n      type: System.Web.UI.UnobtrusiveValidationMode\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unobtrusive JavaScript is used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.UnobtrusiveValidationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)\n  id: UnregisterRequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UnregisterRequiresControlState(Control)\n  nameWithType: Page.UnregisterRequiresControlState(Control)\n  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Stops persistence of control state for the specified control.\n  remarks: \"Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted. Registration for control state is not carried over from request to request during a postback. Use the UnregisterRequiresControlState method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.  \\n  \\n Internally, the UnregisterRequiresControlState method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.\"\n  syntax:\n    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> for which to stop persistence of control state.\n  overload: System.Web.UI.Page.UnregisterRequiresControlState*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Web.UI.Control\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UpdateModel``1(``0)\n  id: UpdateModel``1(``0)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UpdateModel(TModel)\n  nameWithType: Page.UpdateModel(TModel)\n  fullName: System.Web.UI.Page.UpdateModel(TModel)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  syntax:\n    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'\n    parameters:\n    - id: model\n      type: TModel\n      description: To be added.\n  overload: System.Web.UI.Page.UpdateModel<TModel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: UpdateModel(TModel,IValueProvider)\n  nameWithType: Page.UpdateModel(TModel,IValueProvider)\n  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  syntax:\n    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'\n    parameters:\n    - id: model\n      type: TModel\n      description: To be added.\n    - id: valueProvider\n      type: System.Web.ModelBinding.IValueProvider\n      description: To be added.\n  overload: System.Web.UI.Page.UpdateModel<TModel>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.User\n  id: User\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: User\n  nameWithType: Page.User\n  fullName: System.Web.UI.Page.User\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets information about the user making the page request.\n  remarks: \"An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.  \\n  \\n This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.\"\n  example:\n  - \"The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \\n  \\n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]\"\n  syntax:\n    content: public System.Security.Principal.IPrincipal User { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: An <xref:System.Security.Principal.IPrincipal> that represents the user making the page request.\n  overload: System.Web.UI.Page.User*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Validate\n  id: Validate\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Validate()\n  nameWithType: Page.Validate()\n  fullName: System.Web.UI.Page.Validate()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Instructs any validation controls included on the page to validate their assigned information.\n  remarks: \"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default. These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.  \\n  \\n To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.  \\n  \\n When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> property and invokes the validation logic for each validation control in the current validation group. The validation group is determined by the control that posted the page to the server. If no validation group is specified, then no validation group is used.  \\n  \\n> [!NOTE]\\n>  The behavior of page validation has changed. In [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], controls no longer call the Validate method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> method instead. If you use the Validate method on an [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.\"\n  example:\n  - \"The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]\"\n  syntax:\n    content: public virtual void Validate ();\n    parameters: []\n  overload: System.Web.UI.Page.Validate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Validate(System.String)\n  id: Validate(System.String)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Validate(String)\n  nameWithType: Page.Validate(String)\n  fullName: System.Web.UI.Page.Validate(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Instructs the validation controls in the specified validation group to validate their assigned information.\n  remarks: \"This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default. These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.  \\n  \\n To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.  \\n  \\n The Validate method validates the specified validation group. After calling the Validate method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.\"\n  example:\n  - \"The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]\"\n  syntax:\n    content: public virtual void Validate (string validationGroup);\n    parameters:\n    - id: validationGroup\n      type: System.String\n      description: The validation group name of the controls to validate.\n  overload: System.Web.UI.Page.Validate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ValidateRequestMode\n  id: ValidateRequestMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ValidateRequestMode\n  nameWithType: Page.ValidateRequestMode\n  fullName: System.Web.UI.Page.ValidateRequestMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.\n  remarks: The value <xref:System.Web.UI.ValidateRequestMode> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.\n  syntax:\n    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }\n    return:\n      type: System.Web.UI.ValidateRequestMode\n      description: A value that indicates whether the page checks client input. The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>.\n  overload: System.Web.UI.Page.ValidateRequestMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Validators\n  id: Validators\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Validators\n  nameWithType: Page.Validators\n  fullName: System.Web.UI.Page.Validators\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a collection of all validation controls contained on the requested page.\n  remarks: \"You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance. This collection contains all the validation server controls that are contained in a page.  \\n  \\n Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method causes validation logic to be executed for each validation server control in the current validation group. If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> property returns `false`.  \\n  \\n For more information on validation controls, see [ASP.NET Validation Controls](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Web.UI.ValidatorCollection Validators { get; }\n    return:\n      type: System.Web.UI.ValidatorCollection\n      description: The collection of validation controls.\n  overload: System.Web.UI.Page.Validators*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)\n  id: VerifyRenderingInServerForm(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: VerifyRenderingInServerForm(Control)\n  nameWithType: Page.VerifyRenderingInServerForm(Control)\n  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Confirms that an <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> control is rendered for the specified ASP.NET server control at run time.\n  remarks: \"Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags. Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method. Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.  \\n  \\n Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat=\\\"server\\\">`) tags. These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \\n  \\n When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag. This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script. A composite server control does not need to make this call.\"\n  example:\n  - \"The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \\n  \\n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]\"\n  syntax:\n    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The ASP.NET server control that is required in the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> control.\n  overload: System.Web.UI.Page.VerifyRenderingInServerForm*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The specified server control is not contained between the opening and closing tags of the <xref href=\"System.Web.UI.HtmlControls.HtmlForm\"></xref> server control at run time.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The control to verify is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ViewStateEncryptionMode\n  id: ViewStateEncryptionMode\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ViewStateEncryptionMode\n  nameWithType: Page.ViewStateEncryptionMode\n  fullName: System.Web.UI.Page.ViewStateEncryptionMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the encryption mode of the view state.\n  remarks: \"The ViewStateEncryptionMode property cannot be set in code. It can only be set in the  directive or in the < element of the configuration file. Values set in the  directive override any values set in the configuration file.  \\n  \\n The syntax for setting this property in the  directive is as follows:  \\n  \\n```vb#  \\n<%@ Page Language=\\\"VB\\\" ViewStateEncryptionMode=\\\"Always\\\" %>  \\n  \\n```  \\n  \\n```c#  \\n<%@ Page Language=\\\"C#\\\" ViewStateEncryptionMode=\\\"Always\\\" %>  \\n```  \\n  \\n The syntax for setting this property in the configuration file is as follows:  \\n  \\n```vb#  \\n<system.web>  \\n  <pages viewStateEncryptionMode=\\\"Always\\\" />  \\n</system.web>  \\n  \\n```  \\n  \\n```c#  \\n<system.web>  \\n  <pages viewStateEncryptionMode=\\\"Always\\\" />  \\n</system.web>  \\n```  \\n  \\n Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.\"\n  syntax:\n    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }\n    return:\n      type: System.Web.UI.ViewStateEncryptionMode\n      description: One of the <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref> values. The default value is <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref>.\n  overload: System.Web.UI.Page.ViewStateEncryptionMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is not a member of the <xref href=\"System.Web.UI.ViewStateEncryptionMode\"></xref> enumeration.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The ViewStateEncryptionMode property can be set only in or before the page <xref uid=\"langword_csharp_PreRender\" name=\"PreRender\" href=\"\"></xref>phase in the page life cycle.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.ViewStateUserKey\n  id: ViewStateUserKey\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: ViewStateUserKey\n  nameWithType: Page.ViewStateUserKey\n  fullName: System.Web.UI.Page.ViewStateUserKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Assigns an identifier to an individual user in the view-state variable associated with the current page.\n  remarks: \"Setting the ViewStateUserKey property can help you prevent attacks on your application from malicious users. It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack. For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557).  \\n  \\n You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.  \\n  \\n> [!NOTE]\\n>  You must set this property during the `Page_Init` phase of page processing. Setting this property during the `Page_Load` phase throws an exception.\"\n  syntax:\n    content: public string ViewStateUserKey { get; set; }\n    return:\n      type: System.String\n      description: The identifier for the individual user.\n  overload: System.Web.UI.Page.ViewStateUserKey*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The ViewStateUserKey property was accessed too late during page processing.\n  platform:\n  - net462\n- uid: System.Web.UI.Page.Visible\n  id: Visible\n  parent: System.Web.UI.Page\n  langs:\n  - csharp\n  name: Visible\n  nameWithType: Page.Visible\n  fullName: System.Web.UI.Page.Visible\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Web.UI.Page\"></xref> object is rendered.\n  remarks: ''\n  example:\n  - \"The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \\n  \\n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]\"\n  syntax:\n    content: public override bool Visible { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.Page\"></xref> is to be rendered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.Page.Visible*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.TemplateControl\n  isExternal: false\n  name: System.Web.UI.TemplateControl\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.UI.Page.#ctor\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Page()\n  nameWithType: Page.Page()\n  fullName: System.Web.UI.Page.Page()\n- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddContentTemplate(String,ITemplate)\n  nameWithType: Page.AddContentTemplate(String,ITemplate)\n  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ITemplate\n  parent: System.Web.UI\n  isExternal: false\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)\n- uid: System.Web.BeginEventHandler\n  parent: System.Web\n  isExternal: false\n  name: BeginEventHandler\n  nameWithType: BeginEventHandler\n  fullName: System.Web.BeginEventHandler\n- uid: System.Web.EndEventHandler\n  parent: System.Web\n  isExternal: false\n  name: EndEventHandler\n  nameWithType: EndEventHandler\n  fullName: System.Web.EndEventHandler\n- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddWrappedFileDependencies(Object)\n  nameWithType: Page.AddWrappedFileDependencies(Object)\n  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)\n- uid: System.Web.UI.Page.Application\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Application\n  nameWithType: Page.Application\n  fullName: System.Web.UI.Page.Application\n- uid: System.Web.HttpApplicationState\n  parent: System.Web\n  isExternal: false\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatEndProcessRequest(IAsyncResult)\n  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)\n  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)\n- uid: System.Web.UI.Page.AspCompatMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatMode\n  nameWithType: Page.AspCompatMode\n  fullName: System.Web.UI.Page.AspCompatMode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.Page.AsyncMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncMode\n  nameWithType: Page.AsyncMode\n  fullName: System.Web.UI.Page.AsyncMode\n- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)\n- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncPageEndProcessRequest(IAsyncResult)\n  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)\n  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)\n- uid: System.Web.UI.Page.AsyncTimeout\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncTimeout\n  nameWithType: Page.AsyncTimeout\n  fullName: System.Web.UI.Page.AsyncTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.UI.Page.AutoPostBackControl\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AutoPostBackControl\n  nameWithType: Page.AutoPostBackControl\n  fullName: System.Web.UI.Page.AutoPostBackControl\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.UI.Page.Buffer\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Buffer\n  nameWithType: Page.Buffer\n  fullName: System.Web.UI.Page.Buffer\n- uid: System.Web.UI.Page.Cache\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Cache\n  nameWithType: Page.Cache\n  fullName: System.Web.UI.Page.Cache\n- uid: System.Web.Caching.Cache\n  parent: System.Web.Caching\n  isExternal: false\n  name: Cache\n  nameWithType: Cache\n  fullName: System.Web.Caching.Cache\n- uid: System.Web.UI.Page.ClientQueryString\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientQueryString\n  nameWithType: Page.ClientQueryString\n  fullName: System.Web.UI.Page.ClientQueryString\n- uid: System.Web.UI.Page.ClientScript\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientScript\n  nameWithType: Page.ClientScript\n  fullName: System.Web.UI.Page.ClientScript\n- uid: System.Web.UI.ClientScriptManager\n  parent: System.Web.UI\n  isExternal: false\n  name: ClientScriptManager\n  nameWithType: ClientScriptManager\n  fullName: System.Web.UI.ClientScriptManager\n- uid: System.Web.UI.Page.ClientTarget\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientTarget\n  nameWithType: Page.ClientTarget\n  fullName: System.Web.UI.Page.ClientTarget\n- uid: System.Web.UI.Page.CodePage\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CodePage\n  nameWithType: Page.CodePage\n  fullName: System.Web.UI.Page.CodePage\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.Page.ContentType\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ContentType\n  nameWithType: Page.ContentType\n  fullName: System.Web.UI.Page.ContentType\n- uid: System.Web.UI.Page.Context\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Context\n  nameWithType: Page.Context\n  fullName: System.Web.UI.Page.Context\n- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CreateHtmlTextWriter(TextWriter)\n  nameWithType: Page.CreateHtmlTextWriter(TextWriter)\n  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CreateHtmlTextWriterFromType(TextWriter,Type)\n  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)\n  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.Page.Culture\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Culture\n  nameWithType: Page.Culture\n  fullName: System.Web.UI.Page.Culture\n- uid: System.Web.UI.Page.DesignerInitialize\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DesignerInitialize()\n  nameWithType: Page.DesignerInitialize()\n  fullName: System.Web.UI.Page.DesignerInitialize()\n- uid: System.Web.UI.Page.DeterminePostBackMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DeterminePostBackMode()\n  nameWithType: Page.DeterminePostBackMode()\n  fullName: System.Web.UI.Page.DeterminePostBackMode()\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DeterminePostBackModeUnvalidated()\n  nameWithType: Page.DeterminePostBackModeUnvalidated()\n  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()\n- uid: System.Web.UI.Page.EnableEventValidation\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableEventValidation\n  nameWithType: Page.EnableEventValidation\n  fullName: System.Web.UI.Page.EnableEventValidation\n- uid: System.Web.UI.Page.EnableViewState\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableViewState\n  nameWithType: Page.EnableViewState\n  fullName: System.Web.UI.Page.EnableViewState\n- uid: System.Web.UI.Page.EnableViewStateMac\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableViewStateMac\n  nameWithType: Page.EnableViewStateMac\n  fullName: System.Web.UI.Page.EnableViewStateMac\n- uid: System.Web.UI.Page.ErrorPage\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ErrorPage\n  nameWithType: Page.ErrorPage\n  fullName: System.Web.UI.Page.ErrorPage\n- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ExecuteRegisteredAsyncTasks()\n  nameWithType: Page.ExecuteRegisteredAsyncTasks()\n  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()\n- uid: System.Web.UI.Page.FileDependencies\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FileDependencies\n  nameWithType: Page.FileDependencies\n  fullName: System.Web.UI.Page.FileDependencies\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Web.UI.Page.FindControl(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FindControl(String)\n  nameWithType: Page.FindControl(String)\n  fullName: System.Web.UI.Page.FindControl(String)\n- uid: System.Web.UI.Page.Form\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Form\n  nameWithType: Page.Form\n  fullName: System.Web.UI.Page.Form\n- uid: System.Web.UI.HtmlControls.HtmlForm\n  parent: System.Web.UI.HtmlControls\n  isExternal: false\n  name: HtmlForm\n  nameWithType: HtmlForm\n  fullName: System.Web.UI.HtmlControls.HtmlForm\n- uid: System.Web.UI.Page.FrameworkInitialize\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FrameworkInitialize()\n  nameWithType: Page.FrameworkInitialize()\n  fullName: System.Web.UI.Page.FrameworkInitialize()\n- uid: System.Web.UI.Page.GetDataItem\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetDataItem()\n  nameWithType: Page.GetDataItem()\n  fullName: System.Web.UI.Page.GetDataItem()\n- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackClientEvent(Control,String)\n  nameWithType: Page.GetPostBackClientEvent(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)\n- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackClientHyperlink(Control,String)\n  nameWithType: Page.GetPostBackClientHyperlink(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)\n- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackEventReference(Control)\n  nameWithType: Page.GetPostBackEventReference(Control)\n  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)\n- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackEventReference(Control,String)\n  nameWithType: Page.GetPostBackEventReference(Control,String)\n  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)\n- uid: System.Web.UI.Page.GetTypeHashCode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetTypeHashCode()\n  nameWithType: Page.GetTypeHashCode()\n  fullName: System.Web.UI.Page.GetTypeHashCode()\n- uid: System.Web.UI.Page.GetValidators(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetValidators(String)\n  nameWithType: Page.GetValidators(String)\n  fullName: System.Web.UI.Page.GetValidators(String)\n- uid: System.Web.UI.ValidatorCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: ValidatorCollection\n  nameWithType: ValidatorCollection\n  fullName: System.Web.UI.ValidatorCollection\n- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetWrappedFileDependencies(String[])\n  nameWithType: Page.GetWrappedFileDependencies(String[])\n  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.Page.Header\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Header\n  nameWithType: Page.Header\n  fullName: System.Web.UI.Page.Header\n- uid: System.Web.UI.HtmlControls.HtmlHead\n  parent: System.Web.UI.HtmlControls\n  isExternal: false\n  name: HtmlHead\n  nameWithType: HtmlHead\n  fullName: System.Web.UI.HtmlControls.HtmlHead\n- uid: System.Web.UI.Page.ID\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ID\n  nameWithType: Page.ID\n  fullName: System.Web.UI.Page.ID\n- uid: System.Web.UI.Page.IdSeparator\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IdSeparator\n  nameWithType: Page.IdSeparator\n  fullName: System.Web.UI.Page.IdSeparator\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Web.UI.Page.InitComplete\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitComplete\n  nameWithType: Page.InitComplete\n  fullName: System.Web.UI.Page.InitComplete\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.UI.Page.InitializeCulture\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitializeCulture()\n  nameWithType: Page.InitializeCulture()\n  fullName: System.Web.UI.Page.InitializeCulture()\n- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitOutputCache(OutputCacheParameters)\n  nameWithType: Page.InitOutputCache(OutputCacheParameters)\n  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)\n- uid: System.Web.UI.OutputCacheParameters\n  parent: System.Web.UI\n  isExternal: false\n  name: OutputCacheParameters\n  nameWithType: OutputCacheParameters\n  fullName: System.Web.UI.OutputCacheParameters\n- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)\n- uid: System.Web.UI.OutputCacheLocation\n  parent: System.Web.UI\n  isExternal: false\n  name: OutputCacheLocation\n  nameWithType: OutputCacheLocation\n  fullName: System.Web.UI.OutputCacheLocation\n- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)\n- uid: System.Web.UI.Page.IsAsync\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsAsync\n  nameWithType: Page.IsAsync\n  fullName: System.Web.UI.Page.IsAsync\n- uid: System.Web.UI.Page.IsCallback\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsCallback\n  nameWithType: Page.IsCallback\n  fullName: System.Web.UI.Page.IsCallback\n- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsClientScriptBlockRegistered(String)\n  nameWithType: Page.IsClientScriptBlockRegistered(String)\n  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)\n- uid: System.Web.UI.Page.IsCrossPagePostBack\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsCrossPagePostBack\n  nameWithType: Page.IsCrossPagePostBack\n  fullName: System.Web.UI.Page.IsCrossPagePostBack\n- uid: System.Web.UI.Page.IsPostBack\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsPostBack\n  nameWithType: Page.IsPostBack\n  fullName: System.Web.UI.Page.IsPostBack\n- uid: System.Web.UI.Page.IsPostBackEventControlRegistered\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsPostBackEventControlRegistered\n  nameWithType: Page.IsPostBackEventControlRegistered\n  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered\n- uid: System.Web.UI.Page.IsReusable\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsReusable\n  nameWithType: Page.IsReusable\n  fullName: System.Web.UI.Page.IsReusable\n- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsStartupScriptRegistered(String)\n  nameWithType: Page.IsStartupScriptRegistered(String)\n  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)\n- uid: System.Web.UI.Page.IsValid\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsValid\n  nameWithType: Page.IsValid\n  fullName: System.Web.UI.Page.IsValid\n- uid: System.Web.UI.Page.Items\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Items\n  nameWithType: Page.Items\n  fullName: System.Web.UI.Page.Items\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.UI.Page.LCID\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: LCID\n  nameWithType: Page.LCID\n  fullName: System.Web.UI.Page.LCID\n- uid: System.Web.UI.Page.LoadComplete\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: LoadComplete\n  nameWithType: Page.LoadComplete\n  fullName: System.Web.UI.Page.LoadComplete\n- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: LoadPageStateFromPersistenceMedium()\n  nameWithType: Page.LoadPageStateFromPersistenceMedium()\n  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()\n- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MaintainScrollPositionOnPostBack\n  nameWithType: Page.MaintainScrollPositionOnPostBack\n  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack\n- uid: System.Web.UI.Page.MapPath(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MapPath(String)\n  nameWithType: Page.MapPath(String)\n  fullName: System.Web.UI.Page.MapPath(String)\n- uid: System.Web.UI.Page.Master\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Master\n  nameWithType: Page.Master\n  fullName: System.Web.UI.Page.Master\n- uid: System.Web.UI.MasterPage\n  parent: System.Web.UI\n  isExternal: false\n  name: MasterPage\n  nameWithType: MasterPage\n  fullName: System.Web.UI.MasterPage\n- uid: System.Web.UI.Page.MasterPageFile\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MasterPageFile\n  nameWithType: Page.MasterPageFile\n  fullName: System.Web.UI.Page.MasterPageFile\n- uid: System.Web.UI.Page.MaxPageStateFieldLength\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MaxPageStateFieldLength\n  nameWithType: Page.MaxPageStateFieldLength\n  fullName: System.Web.UI.Page.MaxPageStateFieldLength\n- uid: System.Web.UI.Page.MetaDescription\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MetaDescription\n  nameWithType: Page.MetaDescription\n  fullName: System.Web.UI.Page.MetaDescription\n- uid: System.Web.UI.Page.MetaKeywords\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MetaKeywords\n  nameWithType: Page.MetaKeywords\n  fullName: System.Web.UI.Page.MetaKeywords\n- uid: System.Web.UI.Page.ModelBindingExecutionContext\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ModelBindingExecutionContext\n  nameWithType: Page.ModelBindingExecutionContext\n  fullName: System.Web.UI.Page.ModelBindingExecutionContext\n- uid: System.Web.ModelBinding.ModelBindingExecutionContext\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ModelBindingExecutionContext\n  nameWithType: ModelBindingExecutionContext\n  fullName: System.Web.ModelBinding.ModelBindingExecutionContext\n- uid: System.Web.UI.Page.ModelState\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ModelState\n  nameWithType: Page.ModelState\n  fullName: System.Web.UI.Page.ModelState\n- uid: System.Web.ModelBinding.ModelStateDictionary\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ModelStateDictionary\n  nameWithType: ModelStateDictionary\n  fullName: System.Web.ModelBinding.ModelStateDictionary\n- uid: System.Web.UI.Page.OnInit(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: Page.OnInit(EventArgs)\n  fullName: System.Web.UI.Page.OnInit(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnInitComplete(EventArgs)\n  nameWithType: Page.OnInitComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)\n- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnLoadComplete(EventArgs)\n  nameWithType: Page.OnLoadComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)\n- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreInit(EventArgs)\n  nameWithType: Page.OnPreInit(EventArgs)\n  fullName: System.Web.UI.Page.OnPreInit(EventArgs)\n- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreLoad(EventArgs)\n  nameWithType: Page.OnPreLoad(EventArgs)\n  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)\n- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreRenderComplete(EventArgs)\n  nameWithType: Page.OnPreRenderComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)\n- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnSaveStateComplete(EventArgs)\n  nameWithType: Page.OnSaveStateComplete(EventArgs)\n  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)\n- uid: System.Web.UI.Page.PageAdapter\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PageAdapter\n  nameWithType: Page.PageAdapter\n  fullName: System.Web.UI.Page.PageAdapter\n- uid: System.Web.UI.Adapters.PageAdapter\n  parent: System.Web.UI.Adapters\n  isExternal: false\n  name: PageAdapter\n  nameWithType: PageAdapter\n  fullName: System.Web.UI.Adapters.PageAdapter\n- uid: System.Web.UI.Page.PageStatePersister\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PageStatePersister\n  nameWithType: Page.PageStatePersister\n  fullName: System.Web.UI.Page.PageStatePersister\n- uid: System.Web.UI.PageStatePersister\n  parent: System.Web.UI\n  isExternal: false\n  name: PageStatePersister\n  nameWithType: PageStatePersister\n  fullName: System.Web.UI.PageStatePersister\n- uid: System.Web.UI.Page.postEventArgumentID\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: postEventArgumentID\n  nameWithType: Page.postEventArgumentID\n  fullName: System.Web.UI.Page.postEventArgumentID\n- uid: System.Web.UI.Page.postEventSourceID\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: postEventSourceID\n  nameWithType: Page.postEventSourceID\n  fullName: System.Web.UI.Page.postEventSourceID\n- uid: System.Web.UI.Page.PreInit\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PreInit\n  nameWithType: Page.PreInit\n  fullName: System.Web.UI.Page.PreInit\n- uid: System.Web.UI.Page.PreLoad\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PreLoad\n  nameWithType: Page.PreLoad\n  fullName: System.Web.UI.Page.PreLoad\n- uid: System.Web.UI.Page.PreRenderComplete\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PreRenderComplete\n  nameWithType: Page.PreRenderComplete\n  fullName: System.Web.UI.Page.PreRenderComplete\n- uid: System.Web.UI.Page.PreviousPage\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PreviousPage\n  nameWithType: Page.PreviousPage\n  fullName: System.Web.UI.Page.PreviousPage\n- uid: System.Web.UI.Page\n  parent: System.Web.UI\n  isExternal: false\n  name: Page\n  nameWithType: Page\n  fullName: System.Web.UI.Page\n- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ProcessRequest(HttpContext)\n  nameWithType: Page.ProcessRequest(HttpContext)\n  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)\n- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RaisePostBackEvent(IPostBackEventHandler,String)\n  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)\n  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)\n- uid: System.Web.UI.IPostBackEventHandler\n  parent: System.Web.UI\n  isExternal: false\n  name: IPostBackEventHandler\n  nameWithType: IPostBackEventHandler\n  fullName: System.Web.UI.IPostBackEventHandler\n- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterArrayDeclaration(String,String)\n  nameWithType: Page.RegisterArrayDeclaration(String,String)\n  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)\n- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterAsyncTask(PageAsyncTask)\n  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)\n  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)\n- uid: System.Web.UI.PageAsyncTask\n  parent: System.Web.UI\n  isExternal: false\n  name: PageAsyncTask\n  nameWithType: PageAsyncTask\n  fullName: System.Web.UI.PageAsyncTask\n- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterClientScriptBlock(String,String)\n  nameWithType: Page.RegisterClientScriptBlock(String,String)\n  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)\n- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterHiddenField(String,String)\n  nameWithType: Page.RegisterHiddenField(String,String)\n  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)\n- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterOnSubmitStatement(String,String)\n  nameWithType: Page.RegisterOnSubmitStatement(String,String)\n  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)\n- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresControlState(Control)\n  nameWithType: Page.RegisterRequiresControlState(Control)\n  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)\n- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresPostBack(Control)\n  nameWithType: Page.RegisterRequiresPostBack(Control)\n  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)\n- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)\n  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)\n  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)\n- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresViewStateEncryption()\n  nameWithType: Page.RegisterRequiresViewStateEncryption()\n  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()\n- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterStartupScript(String,String)\n  nameWithType: Page.RegisterStartupScript(String,String)\n  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)\n- uid: System.Web.UI.Page.RegisterViewStateHandler\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterViewStateHandler()\n  nameWithType: Page.RegisterViewStateHandler()\n  fullName: System.Web.UI.Page.RegisterViewStateHandler()\n- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: Page.Render(HtmlTextWriter)\n  fullName: System.Web.UI.Page.Render(HtmlTextWriter)\n- uid: System.Web.UI.Page.Request\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Request\n  nameWithType: Page.Request\n  fullName: System.Web.UI.Page.Request\n- uid: System.Web.HttpRequest\n  parent: System.Web\n  isExternal: false\n  name: HttpRequest\n  nameWithType: HttpRequest\n  fullName: System.Web.HttpRequest\n- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RequiresControlState(Control)\n  nameWithType: Page.RequiresControlState(Control)\n  fullName: System.Web.UI.Page.RequiresControlState(Control)\n- uid: System.Web.UI.Page.Response\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Response\n  nameWithType: Page.Response\n  fullName: System.Web.UI.Page.Response\n- uid: System.Web.HttpResponse\n  parent: System.Web\n  isExternal: false\n  name: HttpResponse\n  nameWithType: HttpResponse\n  fullName: System.Web.HttpResponse\n- uid: System.Web.UI.Page.ResponseEncoding\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ResponseEncoding\n  nameWithType: Page.ResponseEncoding\n  fullName: System.Web.UI.Page.ResponseEncoding\n- uid: System.Web.UI.Page.RouteData\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RouteData\n  nameWithType: Page.RouteData\n  fullName: System.Web.UI.Page.RouteData\n- uid: System.Web.Routing.RouteData\n  parent: System.Web.Routing\n  isExternal: true\n  name: RouteData\n  nameWithType: RouteData\n  fullName: System.Web.Routing.RouteData\n- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SavePageStateToPersistenceMedium(Object)\n  nameWithType: Page.SavePageStateToPersistenceMedium(Object)\n  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)\n- uid: System.Web.UI.Page.SaveStateComplete\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SaveStateComplete\n  nameWithType: Page.SaveStateComplete\n  fullName: System.Web.UI.Page.SaveStateComplete\n- uid: System.Web.UI.Page.Server\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Server\n  nameWithType: Page.Server\n  fullName: System.Web.UI.Page.Server\n- uid: System.Web.HttpServerUtility\n  parent: System.Web\n  isExternal: false\n  name: HttpServerUtility\n  nameWithType: HttpServerUtility\n  fullName: System.Web.HttpServerUtility\n- uid: System.Web.UI.Page.Session\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Session\n  nameWithType: Page.Session\n  fullName: System.Web.UI.Page.Session\n- uid: System.Web.SessionState.HttpSessionState\n  parent: System.Web.SessionState\n  isExternal: false\n  name: HttpSessionState\n  nameWithType: HttpSessionState\n  fullName: System.Web.SessionState.HttpSessionState\n- uid: System.Web.UI.Page.SetFocus(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SetFocus(String)\n  nameWithType: Page.SetFocus(String)\n  fullName: System.Web.UI.Page.SetFocus(String)\n- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SetFocus(Control)\n  nameWithType: Page.SetFocus(Control)\n  fullName: System.Web.UI.Page.SetFocus(Control)\n- uid: System.Web.UI.Page.SkipFormActionValidation\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SkipFormActionValidation\n  nameWithType: Page.SkipFormActionValidation\n  fullName: System.Web.UI.Page.SkipFormActionValidation\n- uid: System.Web.UI.Page.SmartNavigation\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SmartNavigation\n  nameWithType: Page.SmartNavigation\n  fullName: System.Web.UI.Page.SmartNavigation\n- uid: System.Web.UI.Page.StyleSheetTheme\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: StyleSheetTheme\n  nameWithType: Page.StyleSheetTheme\n  fullName: System.Web.UI.Page.StyleSheetTheme\n- uid: System.Web.UI.Page.Theme\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Theme\n  nameWithType: Page.Theme\n  fullName: System.Web.UI.Page.Theme\n- uid: System.Web.UI.Page.Title\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Title\n  nameWithType: Page.Title\n  fullName: System.Web.UI.Page.Title\n- uid: System.Web.UI.Page.Trace\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Trace\n  nameWithType: Page.Trace\n  fullName: System.Web.UI.Page.Trace\n- uid: System.Web.TraceContext\n  parent: System.Web\n  isExternal: false\n  name: TraceContext\n  nameWithType: TraceContext\n  fullName: System.Web.TraceContext\n- uid: System.Web.UI.Page.TraceEnabled\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TraceEnabled\n  nameWithType: Page.TraceEnabled\n  fullName: System.Web.UI.Page.TraceEnabled\n- uid: System.Web.UI.Page.TraceModeValue\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TraceModeValue\n  nameWithType: Page.TraceModeValue\n  fullName: System.Web.UI.Page.TraceModeValue\n- uid: System.Web.TraceMode\n  parent: System.Web\n  isExternal: false\n  name: TraceMode\n  nameWithType: TraceMode\n  fullName: System.Web.TraceMode\n- uid: System.Web.UI.Page.TransactionMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TransactionMode\n  nameWithType: Page.TransactionMode\n  fullName: System.Web.UI.Page.TransactionMode\n- uid: System.Web.UI.Page.TryUpdateModel``1(``0)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TryUpdateModel(TModel)\n  nameWithType: Page.TryUpdateModel(TModel)\n  fullName: System.Web.UI.Page.TryUpdateModel(TModel)\n- uid: TModel\n  isExternal: true\n  name: TModel\n  nameWithType: TModel\n  fullName: TModel\n- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TryUpdateModel(TModel,IValueProvider)\n  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)\n  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)\n- uid: System.Web.ModelBinding.IValueProvider\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: IValueProvider\n  nameWithType: IValueProvider\n  fullName: System.Web.ModelBinding.IValueProvider\n- uid: System.Web.UI.Page.UICulture\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UICulture\n  nameWithType: Page.UICulture\n  fullName: System.Web.UI.Page.UICulture\n- uid: System.Web.UI.Page.UniqueFilePathSuffix\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UniqueFilePathSuffix\n  nameWithType: Page.UniqueFilePathSuffix\n  fullName: System.Web.UI.Page.UniqueFilePathSuffix\n- uid: System.Web.UI.Page.UnobtrusiveValidationMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UnobtrusiveValidationMode\n  nameWithType: Page.UnobtrusiveValidationMode\n  fullName: System.Web.UI.Page.UnobtrusiveValidationMode\n- uid: System.Web.UI.UnobtrusiveValidationMode\n  parent: System.Web.UI\n  isExternal: false\n  name: UnobtrusiveValidationMode\n  nameWithType: UnobtrusiveValidationMode\n  fullName: System.Web.UI.UnobtrusiveValidationMode\n- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UnregisterRequiresControlState(Control)\n  nameWithType: Page.UnregisterRequiresControlState(Control)\n  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)\n- uid: System.Web.UI.Page.UpdateModel``1(``0)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UpdateModel(TModel)\n  nameWithType: Page.UpdateModel(TModel)\n  fullName: System.Web.UI.Page.UpdateModel(TModel)\n- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UpdateModel(TModel,IValueProvider)\n  nameWithType: Page.UpdateModel(TModel,IValueProvider)\n  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)\n- uid: System.Web.UI.Page.User\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: User\n  nameWithType: Page.User\n  fullName: System.Web.UI.Page.User\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.UI.Page.Validate\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Validate()\n  nameWithType: Page.Validate()\n  fullName: System.Web.UI.Page.Validate()\n- uid: System.Web.UI.Page.Validate(System.String)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Validate(String)\n  nameWithType: Page.Validate(String)\n  fullName: System.Web.UI.Page.Validate(String)\n- uid: System.Web.UI.Page.ValidateRequestMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: Page.ValidateRequestMode\n  fullName: System.Web.UI.Page.ValidateRequestMode\n- uid: System.Web.UI.ValidateRequestMode\n  parent: System.Web.UI\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: ValidateRequestMode\n  fullName: System.Web.UI.ValidateRequestMode\n- uid: System.Web.UI.Page.Validators\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Validators\n  nameWithType: Page.Validators\n  fullName: System.Web.UI.Page.Validators\n- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: VerifyRenderingInServerForm(Control)\n  nameWithType: Page.VerifyRenderingInServerForm(Control)\n  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)\n- uid: System.Web.UI.Page.ViewStateEncryptionMode\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ViewStateEncryptionMode\n  nameWithType: Page.ViewStateEncryptionMode\n  fullName: System.Web.UI.Page.ViewStateEncryptionMode\n- uid: System.Web.UI.ViewStateEncryptionMode\n  parent: System.Web.UI\n  isExternal: false\n  name: ViewStateEncryptionMode\n  nameWithType: ViewStateEncryptionMode\n  fullName: System.Web.UI.ViewStateEncryptionMode\n- uid: System.Web.UI.Page.ViewStateUserKey\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ViewStateUserKey\n  nameWithType: Page.ViewStateUserKey\n  fullName: System.Web.UI.Page.ViewStateUserKey\n- uid: System.Web.UI.Page.Visible\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Visible\n  nameWithType: Page.Visible\n  fullName: System.Web.UI.Page.Visible\n- uid: System.Web.UI.Page.#ctor*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Page\n  nameWithType: Page.Page\n- uid: System.Web.UI.Page.AddContentTemplate*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddContentTemplate\n  nameWithType: Page.AddContentTemplate\n- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddOnPreRenderCompleteAsync\n  nameWithType: Page.AddOnPreRenderCompleteAsync\n- uid: System.Web.UI.Page.AddWrappedFileDependencies*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AddWrappedFileDependencies\n  nameWithType: Page.AddWrappedFileDependencies\n- uid: System.Web.UI.Page.Application*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Application\n  nameWithType: Page.Application\n- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatBeginProcessRequest\n  nameWithType: Page.AspCompatBeginProcessRequest\n- uid: System.Web.UI.Page.AspCompatEndProcessRequest*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatEndProcessRequest\n  nameWithType: Page.AspCompatEndProcessRequest\n- uid: System.Web.UI.Page.AspCompatMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AspCompatMode\n  nameWithType: Page.AspCompatMode\n- uid: System.Web.UI.Page.AsyncMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncMode\n  nameWithType: Page.AsyncMode\n- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncPageBeginProcessRequest\n  nameWithType: Page.AsyncPageBeginProcessRequest\n- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncPageEndProcessRequest\n  nameWithType: Page.AsyncPageEndProcessRequest\n- uid: System.Web.UI.Page.AsyncTimeout*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AsyncTimeout\n  nameWithType: Page.AsyncTimeout\n- uid: System.Web.UI.Page.AutoPostBackControl*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: AutoPostBackControl\n  nameWithType: Page.AutoPostBackControl\n- uid: System.Web.UI.Page.Buffer*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Buffer\n  nameWithType: Page.Buffer\n- uid: System.Web.UI.Page.Cache*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Cache\n  nameWithType: Page.Cache\n- uid: System.Web.UI.Page.ClientQueryString*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientQueryString\n  nameWithType: Page.ClientQueryString\n- uid: System.Web.UI.Page.ClientScript*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientScript\n  nameWithType: Page.ClientScript\n- uid: System.Web.UI.Page.ClientTarget*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ClientTarget\n  nameWithType: Page.ClientTarget\n- uid: System.Web.UI.Page.CodePage*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CodePage\n  nameWithType: Page.CodePage\n- uid: System.Web.UI.Page.ContentType*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ContentType\n  nameWithType: Page.ContentType\n- uid: System.Web.UI.Page.Context*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Context\n  nameWithType: Page.Context\n- uid: System.Web.UI.Page.CreateHtmlTextWriter*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CreateHtmlTextWriter\n  nameWithType: Page.CreateHtmlTextWriter\n- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: CreateHtmlTextWriterFromType\n  nameWithType: Page.CreateHtmlTextWriterFromType\n- uid: System.Web.UI.Page.Culture*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Culture\n  nameWithType: Page.Culture\n- uid: System.Web.UI.Page.DesignerInitialize*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DesignerInitialize\n  nameWithType: Page.DesignerInitialize\n- uid: System.Web.UI.Page.DeterminePostBackMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DeterminePostBackMode\n  nameWithType: Page.DeterminePostBackMode\n- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: DeterminePostBackModeUnvalidated\n  nameWithType: Page.DeterminePostBackModeUnvalidated\n- uid: System.Web.UI.Page.EnableEventValidation*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableEventValidation\n  nameWithType: Page.EnableEventValidation\n- uid: System.Web.UI.Page.EnableViewState*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableViewState\n  nameWithType: Page.EnableViewState\n- uid: System.Web.UI.Page.EnableViewStateMac*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: EnableViewStateMac\n  nameWithType: Page.EnableViewStateMac\n- uid: System.Web.UI.Page.ErrorPage*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ErrorPage\n  nameWithType: Page.ErrorPage\n- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ExecuteRegisteredAsyncTasks\n  nameWithType: Page.ExecuteRegisteredAsyncTasks\n- uid: System.Web.UI.Page.FileDependencies*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FileDependencies\n  nameWithType: Page.FileDependencies\n- uid: System.Web.UI.Page.FindControl*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FindControl\n  nameWithType: Page.FindControl\n- uid: System.Web.UI.Page.Form*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Form\n  nameWithType: Page.Form\n- uid: System.Web.UI.Page.FrameworkInitialize*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: FrameworkInitialize\n  nameWithType: Page.FrameworkInitialize\n- uid: System.Web.UI.Page.GetDataItem*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetDataItem\n  nameWithType: Page.GetDataItem\n- uid: System.Web.UI.Page.GetPostBackClientEvent*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackClientEvent\n  nameWithType: Page.GetPostBackClientEvent\n- uid: System.Web.UI.Page.GetPostBackClientHyperlink*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackClientHyperlink\n  nameWithType: Page.GetPostBackClientHyperlink\n- uid: System.Web.UI.Page.GetPostBackEventReference*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetPostBackEventReference\n  nameWithType: Page.GetPostBackEventReference\n- uid: System.Web.UI.Page.GetTypeHashCode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetTypeHashCode\n  nameWithType: Page.GetTypeHashCode\n- uid: System.Web.UI.Page.GetValidators*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetValidators\n  nameWithType: Page.GetValidators\n- uid: System.Web.UI.Page.GetWrappedFileDependencies*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: GetWrappedFileDependencies\n  nameWithType: Page.GetWrappedFileDependencies\n- uid: System.Web.UI.Page.Header*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Header\n  nameWithType: Page.Header\n- uid: System.Web.UI.Page.ID*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ID\n  nameWithType: Page.ID\n- uid: System.Web.UI.Page.IdSeparator*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IdSeparator\n  nameWithType: Page.IdSeparator\n- uid: System.Web.UI.Page.InitializeCulture*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitializeCulture\n  nameWithType: Page.InitializeCulture\n- uid: System.Web.UI.Page.InitOutputCache*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: InitOutputCache\n  nameWithType: Page.InitOutputCache\n- uid: System.Web.UI.Page.IsAsync*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsAsync\n  nameWithType: Page.IsAsync\n- uid: System.Web.UI.Page.IsCallback*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsCallback\n  nameWithType: Page.IsCallback\n- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsClientScriptBlockRegistered\n  nameWithType: Page.IsClientScriptBlockRegistered\n- uid: System.Web.UI.Page.IsCrossPagePostBack*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsCrossPagePostBack\n  nameWithType: Page.IsCrossPagePostBack\n- uid: System.Web.UI.Page.IsPostBack*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsPostBack\n  nameWithType: Page.IsPostBack\n- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsPostBackEventControlRegistered\n  nameWithType: Page.IsPostBackEventControlRegistered\n- uid: System.Web.UI.Page.IsReusable*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsReusable\n  nameWithType: Page.IsReusable\n- uid: System.Web.UI.Page.IsStartupScriptRegistered*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsStartupScriptRegistered\n  nameWithType: Page.IsStartupScriptRegistered\n- uid: System.Web.UI.Page.IsValid*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: IsValid\n  nameWithType: Page.IsValid\n- uid: System.Web.UI.Page.Items*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Items\n  nameWithType: Page.Items\n- uid: System.Web.UI.Page.LCID*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: LCID\n  nameWithType: Page.LCID\n- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: LoadPageStateFromPersistenceMedium\n  nameWithType: Page.LoadPageStateFromPersistenceMedium\n- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MaintainScrollPositionOnPostBack\n  nameWithType: Page.MaintainScrollPositionOnPostBack\n- uid: System.Web.UI.Page.MapPath*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MapPath\n  nameWithType: Page.MapPath\n- uid: System.Web.UI.Page.Master*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Master\n  nameWithType: Page.Master\n- uid: System.Web.UI.Page.MasterPageFile*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MasterPageFile\n  nameWithType: Page.MasterPageFile\n- uid: System.Web.UI.Page.MaxPageStateFieldLength*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MaxPageStateFieldLength\n  nameWithType: Page.MaxPageStateFieldLength\n- uid: System.Web.UI.Page.MetaDescription*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MetaDescription\n  nameWithType: Page.MetaDescription\n- uid: System.Web.UI.Page.MetaKeywords*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: MetaKeywords\n  nameWithType: Page.MetaKeywords\n- uid: System.Web.UI.Page.ModelBindingExecutionContext*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ModelBindingExecutionContext\n  nameWithType: Page.ModelBindingExecutionContext\n- uid: System.Web.UI.Page.ModelState*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ModelState\n  nameWithType: Page.ModelState\n- uid: System.Web.UI.Page.OnInit*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnInit\n  nameWithType: Page.OnInit\n- uid: System.Web.UI.Page.OnInitComplete*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnInitComplete\n  nameWithType: Page.OnInitComplete\n- uid: System.Web.UI.Page.OnLoadComplete*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnLoadComplete\n  nameWithType: Page.OnLoadComplete\n- uid: System.Web.UI.Page.OnPreInit*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreInit\n  nameWithType: Page.OnPreInit\n- uid: System.Web.UI.Page.OnPreLoad*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreLoad\n  nameWithType: Page.OnPreLoad\n- uid: System.Web.UI.Page.OnPreRenderComplete*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnPreRenderComplete\n  nameWithType: Page.OnPreRenderComplete\n- uid: System.Web.UI.Page.OnSaveStateComplete*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: OnSaveStateComplete\n  nameWithType: Page.OnSaveStateComplete\n- uid: System.Web.UI.Page.PageAdapter*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PageAdapter\n  nameWithType: Page.PageAdapter\n- uid: System.Web.UI.Page.PageStatePersister*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PageStatePersister\n  nameWithType: Page.PageStatePersister\n- uid: System.Web.UI.Page.PreviousPage*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: PreviousPage\n  nameWithType: Page.PreviousPage\n- uid: System.Web.UI.Page.ProcessRequest*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ProcessRequest\n  nameWithType: Page.ProcessRequest\n- uid: System.Web.UI.Page.RaisePostBackEvent*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RaisePostBackEvent\n  nameWithType: Page.RaisePostBackEvent\n- uid: System.Web.UI.Page.RegisterArrayDeclaration*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterArrayDeclaration\n  nameWithType: Page.RegisterArrayDeclaration\n- uid: System.Web.UI.Page.RegisterAsyncTask*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterAsyncTask\n  nameWithType: Page.RegisterAsyncTask\n- uid: System.Web.UI.Page.RegisterClientScriptBlock*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterClientScriptBlock\n  nameWithType: Page.RegisterClientScriptBlock\n- uid: System.Web.UI.Page.RegisterHiddenField*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterHiddenField\n  nameWithType: Page.RegisterHiddenField\n- uid: System.Web.UI.Page.RegisterOnSubmitStatement*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterOnSubmitStatement\n  nameWithType: Page.RegisterOnSubmitStatement\n- uid: System.Web.UI.Page.RegisterRequiresControlState*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresControlState\n  nameWithType: Page.RegisterRequiresControlState\n- uid: System.Web.UI.Page.RegisterRequiresPostBack*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresPostBack\n  nameWithType: Page.RegisterRequiresPostBack\n- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresRaiseEvent\n  nameWithType: Page.RegisterRequiresRaiseEvent\n- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterRequiresViewStateEncryption\n  nameWithType: Page.RegisterRequiresViewStateEncryption\n- uid: System.Web.UI.Page.RegisterStartupScript*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterStartupScript\n  nameWithType: Page.RegisterStartupScript\n- uid: System.Web.UI.Page.RegisterViewStateHandler*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RegisterViewStateHandler\n  nameWithType: Page.RegisterViewStateHandler\n- uid: System.Web.UI.Page.Render*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Render\n  nameWithType: Page.Render\n- uid: System.Web.UI.Page.Request*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Request\n  nameWithType: Page.Request\n- uid: System.Web.UI.Page.RequiresControlState*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RequiresControlState\n  nameWithType: Page.RequiresControlState\n- uid: System.Web.UI.Page.Response*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Response\n  nameWithType: Page.Response\n- uid: System.Web.UI.Page.ResponseEncoding*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ResponseEncoding\n  nameWithType: Page.ResponseEncoding\n- uid: System.Web.UI.Page.RouteData*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: RouteData\n  nameWithType: Page.RouteData\n- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SavePageStateToPersistenceMedium\n  nameWithType: Page.SavePageStateToPersistenceMedium\n- uid: System.Web.UI.Page.Server*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Server\n  nameWithType: Page.Server\n- uid: System.Web.UI.Page.Session*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Session\n  nameWithType: Page.Session\n- uid: System.Web.UI.Page.SetFocus*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SetFocus\n  nameWithType: Page.SetFocus\n- uid: System.Web.UI.Page.SkipFormActionValidation*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SkipFormActionValidation\n  nameWithType: Page.SkipFormActionValidation\n- uid: System.Web.UI.Page.SmartNavigation*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: SmartNavigation\n  nameWithType: Page.SmartNavigation\n- uid: System.Web.UI.Page.StyleSheetTheme*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: StyleSheetTheme\n  nameWithType: Page.StyleSheetTheme\n- uid: System.Web.UI.Page.Theme*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Theme\n  nameWithType: Page.Theme\n- uid: System.Web.UI.Page.Title*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Title\n  nameWithType: Page.Title\n- uid: System.Web.UI.Page.Trace*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Trace\n  nameWithType: Page.Trace\n- uid: System.Web.UI.Page.TraceEnabled*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TraceEnabled\n  nameWithType: Page.TraceEnabled\n- uid: System.Web.UI.Page.TraceModeValue*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TraceModeValue\n  nameWithType: Page.TraceModeValue\n- uid: System.Web.UI.Page.TransactionMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TransactionMode\n  nameWithType: Page.TransactionMode\n- uid: System.Web.UI.Page.TryUpdateModel<TModel>*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: TryUpdateModel<TModel>\n  nameWithType: Page.TryUpdateModel<TModel>\n- uid: System.Web.UI.Page.UICulture*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UICulture\n  nameWithType: Page.UICulture\n- uid: System.Web.UI.Page.UniqueFilePathSuffix*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UniqueFilePathSuffix\n  nameWithType: Page.UniqueFilePathSuffix\n- uid: System.Web.UI.Page.UnobtrusiveValidationMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UnobtrusiveValidationMode\n  nameWithType: Page.UnobtrusiveValidationMode\n- uid: System.Web.UI.Page.UnregisterRequiresControlState*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UnregisterRequiresControlState\n  nameWithType: Page.UnregisterRequiresControlState\n- uid: System.Web.UI.Page.UpdateModel<TModel>*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: UpdateModel<TModel>\n  nameWithType: Page.UpdateModel<TModel>\n- uid: System.Web.UI.Page.User*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: User\n  nameWithType: Page.User\n- uid: System.Web.UI.Page.Validate*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Validate\n  nameWithType: Page.Validate\n- uid: System.Web.UI.Page.ValidateRequestMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: Page.ValidateRequestMode\n- uid: System.Web.UI.Page.Validators*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Validators\n  nameWithType: Page.Validators\n- uid: System.Web.UI.Page.VerifyRenderingInServerForm*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: VerifyRenderingInServerForm\n  nameWithType: Page.VerifyRenderingInServerForm\n- uid: System.Web.UI.Page.ViewStateEncryptionMode*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ViewStateEncryptionMode\n  nameWithType: Page.ViewStateEncryptionMode\n- uid: System.Web.UI.Page.ViewStateUserKey*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: ViewStateUserKey\n  nameWithType: Page.ViewStateUserKey\n- uid: System.Web.UI.Page.Visible*\n  parent: System.Web.UI.Page\n  isExternal: false\n  name: Visible\n  nameWithType: Page.Visible\n"}