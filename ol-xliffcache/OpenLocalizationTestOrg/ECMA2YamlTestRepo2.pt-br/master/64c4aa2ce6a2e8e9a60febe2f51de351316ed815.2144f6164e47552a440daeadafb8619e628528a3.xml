{"nodes":[{"pos":[537,821],"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items.","pos":[0,160]},{"content":"The children of this control must implement <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[161,284],"source":" The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>."}]},{"pos":[833,961],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.SelectionPattern&gt; control pattern.","pos":[0,128],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern."}]},{"pos":[1800,1926],"content":"Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.","pos":[0,126]}]},{"pos":[1938,2122],"content":"This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","pos":[0,184],"nodes":[{"content":"This property may be dynamic.","pos":[0,29]},{"content":"For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","pos":[30,184]}]}]},{"pos":[2772,2940],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if multiple selection is allowed; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if multiple selection is allowed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3510,3585],"content":"Retrieves a UI Automation provider for each child element that is selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a UI Automation provider for each child element that is selected.","pos":[0,75]}]},{"pos":[3597,3690],"content":"A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.","pos":[0,93]}]},{"pos":[4423,4463],"content":"A collection of UI Automation providers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of UI Automation providers.","pos":[0,40]}]},{"pos":[5059,5173],"content":"Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.","pos":[0,114]}]},{"pos":[5185,5442],"content":"This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that IsSelectionRequired is `false`. However, after an item is selected, the control must always have at least one item selected.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property can be dynamic.","pos":[0,29]},{"content":"For example, the initial state of a control might not have any items selected by default, meaning that IsSelectionRequired is <ph id=\"ph1\">`false`</ph>.","pos":[30,164],"source":" For example, the initial state of a control might not have any items selected by default, meaning that IsSelectionRequired is `false`."},{"content":"However, after an item is selected, the control must always have at least one item selected.","pos":[165,257]}]},{"pos":[6090,6250],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if selection is required; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selection is required; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.ISelectionProvider\n  id: ISelectionProvider\n  children:\n  - System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  - System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  - System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  langs:\n  - csharp\n  name: ISelectionProvider\n  nameWithType: ISelectionProvider\n  fullName: System.Windows.Automation.Provider.ISelectionProvider\n  type: Interface\n  summary: Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>.\n  remarks: Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"fb8b03af-3bdf-48d4-bd36-1a65793be168\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface ISelectionProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  id: CanSelectMultiple\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.\n  remarks: This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.\n  example:\n  - \"The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.  \\n  \\n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#canselectmultiple)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#canselectmultiple)]\"\n  syntax:\n    content: public bool CanSelectMultiple { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if multiple selection is allowed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  id: GetSelection\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: GetSelection()\n  nameWithType: ISelectionProvider.GetSelection()\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection()\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Retrieves a UI Automation provider for each child element that is selected.\n  remarks: A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.\n  example:\n  - \"The following example shows one possible implementation of this method for a list box that supports only single selection.  \\n  \\n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#getselection)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#getselection)]\"\n  syntax:\n    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n      description: A collection of UI Automation providers.\n  overload: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  id: IsSelectionRequired\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.\n  remarks: This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that IsSelectionRequired is `false`. However, after an item is selected, the control must always have at least one item selected.\n  example:\n  - \"The following example shows an implementation of this method for a list that requires an item to be selected at all times.  \\n  \\n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#isselectionrequired)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#isselectionrequired)]\"\n  syntax:\n    content: public bool IsSelectionRequired { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selection is required; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: GetSelection()\n  nameWithType: ISelectionProvider.GetSelection()\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection()\n- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n  parent: System.Windows.Automation.Provider\n  isExternal: false\n  name: IRawElementProviderSimple\n  nameWithType: IRawElementProviderSimple\n  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n  spec.csharp:\n  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple\n    name: IRawElementProviderSimple\n    nameWithType: IRawElementProviderSimple\n    fullName: IRawElementProviderSimple[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: GetSelection\n  nameWithType: ISelectionProvider.GetSelection\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n"}