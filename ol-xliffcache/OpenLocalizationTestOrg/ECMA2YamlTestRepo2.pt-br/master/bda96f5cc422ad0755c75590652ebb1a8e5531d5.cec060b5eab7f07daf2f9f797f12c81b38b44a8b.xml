{"nodes":[{"pos":[326,498],"content":"Represents the method that will handle the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the method that will handle the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event of a <xref href=\"System.Windows.Forms.Control\"></xref>."},{"pos":[510,912],"content":"When you create a QueryContinueDragEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you create a QueryContinueDragEventHandler delegate, you identify the method that will handle the event.","pos":[0,109]},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[110,203]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[204,290]},{"content":"For more information about handling events with delegates, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[291,402],"source":" For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.QueryContinueDragEventHandler\n  id: QueryContinueDragEventHandler\n  langs:\n  - csharp\n  name: QueryContinueDragEventHandler\n  nameWithType: QueryContinueDragEventHandler\n  fullName: System.Windows.Forms.QueryContinueDragEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event of a <xref href=\"System.Windows.Forms.Control\"></xref>.\n  remarks: When you create a QueryContinueDragEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the QueryContinueDragEventHandler delegate with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.q_2_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.q_2_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.q_2_1.cs)]\"\n  syntax:\n    content: public delegate void QueryContinueDragEventHandler(object sender, QueryContinueDragEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}