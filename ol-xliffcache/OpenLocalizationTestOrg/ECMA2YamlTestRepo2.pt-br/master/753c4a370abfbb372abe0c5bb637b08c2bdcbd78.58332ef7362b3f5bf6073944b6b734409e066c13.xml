{"nodes":[{"pos":[671,723],"content":"Provides validation of an <xref:System.Int32> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides validation of an &lt;xref:System.Int32&gt; value.","pos":[0,52],"source":"Provides validation of an <xref:System.Int32> value."}]},{"pos":[736,1837],"content":"The IntegerValidator class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the IntegerValidator class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.       The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IntegerValidator class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the IntegerValidator class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.       The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.","pos":[0,1099],"nodes":[{"content":"The IntegerValidator class is used to ensure that an integer meets specific criteria.","pos":[0,85]},{"content":"The criteria for validation are established when an instance of the IntegerValidator class is created.","pos":[86,188]},{"content":"The &lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt; constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.","pos":[189,367],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value."},{"content":"The &lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt; constructor with three parameters checks both the minimum and maximum &lt;xref:System.Int32&gt; values, as well as whether the value to be validated is within the specified range.","pos":[368,601],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range."},{"content":"The &lt;xref:System.Configuration.IntegerValidator.%23ctor%2A&gt; constructor with four parameters checks the previous three parameters and also checks whether the &lt;xref:System.Int32&gt; value is equal to a specific resolution.","pos":[602,820],"source":" The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution."},{"content":"The &lt;xref:System.Configuration.IntegerValidator.CanValidate%2A&gt; method determines whether the object type being validated matches the expected type.","pos":[827,975],"source":"       The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type."},{"content":"The object being validated is passed as a parameter of the &lt;xref:System.Configuration.IntegerValidator.Validate%2A&gt; method.","pos":[976,1099],"source":" The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method."}]}]},{"pos":[2894,2993],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."},{"pos":[3005,3126],"content":"This IntegerValidator constructor ensures that the integer being verified adheres to both a minimum and a maximum length.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This IntegerValidator constructor ensures that the integer being verified adheres to both a minimum and a maximum length.","pos":[0,121]}]},{"pos":[3283,3346],"content":"An <xref:System.Int32> object that specifies the minimum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the minimum value.","pos":[0,63],"source":"An <xref:System.Int32> object that specifies the minimum value."}]},{"pos":[3410,3473],"content":"An <xref:System.Int32> object that specifies the maximum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the maximum value.","pos":[0,63],"source":"An <xref:System.Int32> object that specifies the maximum value."}]},{"pos":[4097,4196],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."},{"pos":[4208,4599],"content":"When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this IntegerValidator constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When creating an instance of  the &lt;xref:System.Configuration.IntegerValidator&gt; class, this IntegerValidator constructor checks both the minimum and maximum &lt;xref:System.Int32&gt; values, as well as whether the validation range is exclusive.","pos":[0,237],"source":"When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this IntegerValidator constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive."},{"content":"When the <ph id=\"ph1\">`rangeIsExclusive`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, the &lt;xref:System.Int32&gt; value must not be between the <ph id=\"ph3\">`minValue`</ph> and <ph id=\"ph4\">`maxValue`</ph> parameter values.","pos":[238,391],"source":" When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values."}]},{"pos":[5227,5290],"content":"An <xref:System.Int32> object that specifies the minimum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the minimum value.","pos":[0,63],"source":"An <xref:System.Int32> object that specifies the minimum value."}]},{"pos":[5354,5417],"content":"An <xref:System.Int32> object that specifies the maximum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the maximum value.","pos":[0,63],"source":"An <xref:System.Int32> object that specifies the maximum value."}]},{"pos":[5491,5752],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify that the validation range is exclusive.","pos":[0,111],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify that the validation range is exclusive."},{"content":"Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.","pos":[112,261]}]},{"pos":[6420,6519],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IntegerValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class."},{"pos":[6531,6645],"content":"The &lt;xref:System.Int32&gt; value being validated must be equal to the <ph id=\"ph1\">`resolution`</ph> value in order to pass validation.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation."},{"pos":[6841,6926],"content":"An <xref:System.Int32> object that specifies the minimum length of the integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the minimum length of the integer value.","pos":[0,85],"source":"An <xref:System.Int32> object that specifies the minimum length of the integer value."}]},{"pos":[6990,7075],"content":"An <xref:System.Int32> object that specifies the maximum length of the integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies the maximum length of the integer value.","pos":[0,85],"source":"An <xref:System.Int32> object that specifies the maximum length of the integer value."}]},{"pos":[7149,7236],"content":"A <xref:System.Boolean> value that specifies whether the validation range is exclusive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that specifies whether the validation range is exclusive.","pos":[0,87],"source":"A <xref:System.Boolean> value that specifies whether the validation range is exclusive."}]},{"pos":[7302,7376],"content":"An <xref:System.Int32> object that specifies a value that must be matched.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; object that specifies a value that must be matched.","pos":[0,74],"source":"An <xref:System.Int32> object that specifies a value that must be matched."}]},{"pos":[8185,8244],"content":"Determines whether the type of the object can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the type of the object can be validated.","pos":[0,59]}]},{"pos":[8844,8867],"content":"The type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the object.","pos":[0,23]}]},{"pos":[8926,9134],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter matches an &lt;xref:System.Int32&gt; value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches an <xref:System.Int32> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9646,9697],"content":"Determines whether the value of an object is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]},{"pos":[9709,10016],"content":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the Validate method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the Validate method.","pos":[0,307],"nodes":[{"content":"An &lt;xref:System.Configuration.IntegerValidator&gt; object contains the rules necessary to validate an integer object.","pos":[0,114],"source":"An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object."},{"content":"The rules are established when an instance of the &lt;xref:System.Configuration.IntegerValidator&gt; class is created.","pos":[115,227],"source":" The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created."},{"content":"The integer object to validate is passed as a parameter of the Validate method.","pos":[228,307]}]}]},{"pos":[10602,10628],"content":"The value to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to be validated.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.IntegerValidator\n  id: IntegerValidator\n  children:\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  - System.Configuration.IntegerValidator.CanValidate(System.Type)\n  - System.Configuration.IntegerValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: IntegerValidator\n  nameWithType: IntegerValidator\n  fullName: System.Configuration.IntegerValidator\n  type: Class\n  summary: Provides validation of an <xref:System.Int32> value.\n  remarks: \"The IntegerValidator class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the IntegerValidator class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.  \\n  \\n The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to use the IntegerValidator type.  \\n  \\n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]\"\n  syntax:\n    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32,Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: This IntegerValidator constructor ensures that the integer being verified adheres to both a minimum and a maximum length.\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the minimum value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the maximum value.\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  id: '#ctor(System.Int32,System.Int32,System.Boolean)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32,Int32,Boolean)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this IntegerValidator constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.\n  example:\n  - \"The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]\"\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the minimum value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the maximum value.\n    - id: rangeIsExclusive\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: IntegerValidator(Int32,Int32,Boolean,Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IntegerValidator\"></xref> class.\n  remarks: The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.\n  syntax:\n    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);\n    parameters:\n    - id: minValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the minimum length of the integer value.\n    - id: maxValue\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies the maximum length of the integer value.\n    - id: rangeIsExclusive\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that specifies whether the validation range is exclusive.\n    - id: resolution\n      type: System.Int32\n      description: An <xref:System.Int32> object that specifies a value that must be matched.\n  overload: System.Configuration.IntegerValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>resolution</code> is less than <xref uid=\\\"langword_csharp_0\\\" name=\\\"0\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>minValue</code> is greater than <code>maxValue</code>.\"\n  platform:\n  - net462\n- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: IntegerValidator.CanValidate(Type)\n  fullName: System.Configuration.IntegerValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the type of the object can be validated.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]\"\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches an <xref:System.Int32> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.IntegerValidator.CanValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.IntegerValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.IntegerValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: IntegerValidator.Validate(Object)\n  fullName: System.Configuration.IntegerValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the Validate method.\n  example:\n  - \"The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \\n  \\n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]\"\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to be validated.\n  overload: System.Configuration.IntegerValidator.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32,Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32,Int32,Boolean)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator(Int32,Int32,Boolean,Int32)\n  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)\n  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)\n- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: IntegerValidator.CanValidate(Type)\n  fullName: System.Configuration.IntegerValidator.CanValidate(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.IntegerValidator.Validate(System.Object)\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: IntegerValidator.Validate(Object)\n  fullName: System.Configuration.IntegerValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.IntegerValidator.#ctor*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: IntegerValidator\n  nameWithType: IntegerValidator.IntegerValidator\n- uid: System.Configuration.IntegerValidator.CanValidate*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: IntegerValidator.CanValidate\n- uid: System.Configuration.IntegerValidator.Validate*\n  parent: System.Configuration.IntegerValidator\n  isExternal: false\n  name: Validate\n  nameWithType: IntegerValidator.Validate\n"}