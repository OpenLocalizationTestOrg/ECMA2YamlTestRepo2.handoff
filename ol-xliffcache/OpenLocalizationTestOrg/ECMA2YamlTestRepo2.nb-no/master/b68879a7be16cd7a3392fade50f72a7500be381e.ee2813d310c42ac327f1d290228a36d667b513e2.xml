{"nodes":[{"pos":[882,967],"content":"Provides workflow compilation options for the current compilation or validation task.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides workflow compilation options for the current compilation or validation task.","pos":[0,85]}]},{"pos":[980,1226],"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       This class can only be created on a scope basis, using the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope%2A&gt; method.","needQuote":false,"needEscape":true,"extradata":"MT","source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       This class can only be created on a scope basis, using the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope%2A> method."},{"pos":[2027,2186],"content":"Gets a value that indicates whether <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*> is enabled at the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether &lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*&gt; is enabled at the current scope.","pos":[0,159],"source":"Gets a value that indicates whether <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*> is enabled at the current scope."}]},{"pos":[2198,2518],"content":"<xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> indicates whether the types in the workflow being compiled are checked against a list that allows or excludes types based on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A&gt; indicates whether the types in the workflow being compiled are checked against a list that allows or excludes types based on the value of the &lt;xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized%2A&gt; property.","pos":[0,320],"source":"<xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> indicates whether the types in the workflow being compiled are checked against a list that allows or excludes types based on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized%2A> property."}]},{"pos":[2632,2873],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*&gt; is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*> is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3604,3733],"content":"Initializes a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class at the current scope.","needQuote":true,"needEscape":true,"source":"Initializes a <xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"></xref> class at the current scope."},{"pos":[3745,3962],"content":"The <ph id=\"ph1\">`serviceProvider`</ph> parameter is the general property bag for the scope; if it contains an &lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService&gt; the context is set according to that service.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `serviceProvider` parameter is the general property bag for the scope; if it contains an <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService> the context is set according to that service."},{"pos":[4157,4209],"content":"The workflow compiler options for the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow compiler options for the current scope.","pos":[0,52]}]},{"pos":[4272,4297],"content":"A reference to the scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scope.","pos":[0,25]}]},{"pos":[4907,5043],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is available at the current scope.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"></xref> that is available at the current scope."},{"pos":[5275,5451],"content":"The workflow compilation context that is available at the current scope, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no compilation scope is initialized.","needQuote":true,"needEscape":true,"source":"The workflow compilation context that is available at the current scope, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no compilation scope is initialized."},{"pos":[6116,6187],"content":"Returns a list of types that the compiler allows in compiled workflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of types that the compiler allows in compiled workflows.","pos":[0,71]}]},{"pos":[6481,6544],"content":"A list of types that the compiler allows in compiled workflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of types that the compiler allows in compiled workflows.","pos":[0,63]}]},{"pos":[7166,7329],"content":"Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language*> that is available at the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the workflow compiler options &lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language*&gt; that is available at the current scope.","pos":[0,163],"source":"Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language*> that is available at the current scope."}]},{"pos":[7442,7532],"content":"The workflow compiler options programming language that is available at the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow compiler options programming language that is available at the current scope.","pos":[0,90]}]},{"pos":[8169,8337],"content":"Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace*> that is available at the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the workflow compiler options &lt;xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace*&gt; that is available at the current scope.","pos":[0,168],"source":"Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace*> that is available at the current scope."}]},{"pos":[8455,8539],"content":"The workflow compiler options root namespace that is available at the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow compiler options root namespace that is available at the current scope.","pos":[0,84]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  id: WorkflowCompilationContext\n  children:\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language\n  - System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace\n  langs:\n  - csharp\n  name: WorkflowCompilationContext\n  nameWithType: WorkflowCompilationContext\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  type: Class\n  summary: Provides workflow compilation options for the current compilation or validation task.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n This class can only be created on a scope basis, using the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope%2A> method.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class WorkflowCompilationContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes\n  id: CheckTypes\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: CheckTypes\n  nameWithType: WorkflowCompilationContext.CheckTypes\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets a value that indicates whether <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*> is enabled at the current scope.\n  remarks: <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> indicates whether the types in the workflow being compiled are checked against a list that allows or excludes types based on the value of the <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized%2A> property.\n  syntax:\n    content: public bool CheckTypes { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes*> is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(System.IServiceProvider)\n  id: CreateScope(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: CreateScope(IServiceProvider)\n  nameWithType: WorkflowCompilationContext.CreateScope(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Initializes a <xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"></xref> class at the current scope.\n  remarks: The `serviceProvider` parameter is the general property bag for the scope; if it contains an <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService> the context is set according to that service.\n  syntax:\n    content: public static IDisposable CreateScope (IServiceProvider serviceProvider);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: The workflow compiler options for the current scope.\n    return:\n      type: System.IDisposable\n      description: A reference to the scope.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current\n  id: Current\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: Current\n  nameWithType: WorkflowCompilationContext.Current\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets the <xref href=\"System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\"></xref> that is available at the current scope.\n  syntax:\n    content: public static System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext Current { get; }\n    return:\n      type: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n      description: The workflow compilation context that is available at the current scope, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no compilation scope is initialized.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes\n  id: GetAuthorizedTypes\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: GetAuthorizedTypes()\n  nameWithType: WorkflowCompilationContext.GetAuthorizedTypes()\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Returns a list of types that the compiler allows in compiled workflows.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Workflow.ComponentModel.Compiler.AuthorizedType> GetAuthorizedTypes ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Workflow.ComponentModel.Compiler.AuthorizedType}\n      description: A list of types that the compiler allows in compiled workflows.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language\n  id: Language\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: Language\n  nameWithType: WorkflowCompilationContext.Language\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language*> that is available at the current scope.\n  syntax:\n    content: public string Language { get; }\n    return:\n      type: System.String\n      description: The workflow compiler options programming language that is available at the current scope.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace\n  id: RootNamespace\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  langs:\n  - csharp\n  name: RootNamespace\n  nameWithType: WorkflowCompilationContext.RootNamespace\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets the workflow compiler options <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace*> that is available at the current scope.\n  syntax:\n    content: public string RootNamespace { get; }\n    return:\n      type: System.String\n      description: The workflow compiler options root namespace that is available at the current scope.\n  overload: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: CheckTypes\n  nameWithType: WorkflowCompilationContext.CheckTypes\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: CreateScope(IServiceProvider)\n  nameWithType: WorkflowCompilationContext.CreateScope(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(IServiceProvider)\n- uid: System.IDisposable\n  parent: System\n  isExternal: true\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: Current\n  nameWithType: WorkflowCompilationContext.Current\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: WorkflowCompilationContext\n  nameWithType: WorkflowCompilationContext\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: GetAuthorizedTypes()\n  nameWithType: WorkflowCompilationContext.GetAuthorizedTypes()\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes()\n- uid: System.Collections.Generic.IList{System.Workflow.ComponentModel.Compiler.AuthorizedType}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<AuthorizedType>\n  nameWithType: IList<AuthorizedType>\n  fullName: System.Collections.Generic.IList<System.Workflow.ComponentModel.Compiler.AuthorizedType>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Workflow.ComponentModel.Compiler.AuthorizedType>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Compiler.AuthorizedType\n    name: AuthorizedType\n    nameWithType: AuthorizedType\n    fullName: AuthorizedType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: Language\n  nameWithType: WorkflowCompilationContext.Language\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: RootNamespace\n  nameWithType: WorkflowCompilationContext.RootNamespace\n  fullName: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: CheckTypes\n  nameWithType: WorkflowCompilationContext.CheckTypes\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: CreateScope\n  nameWithType: WorkflowCompilationContext.CreateScope\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: Current\n  nameWithType: WorkflowCompilationContext.Current\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: GetAuthorizedTypes\n  nameWithType: WorkflowCompilationContext.GetAuthorizedTypes\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: Language\n  nameWithType: WorkflowCompilationContext.Language\n- uid: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace*\n  parent: System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext\n  isExternal: false\n  name: RootNamespace\n  nameWithType: WorkflowCompilationContext.RootNamespace\n"}