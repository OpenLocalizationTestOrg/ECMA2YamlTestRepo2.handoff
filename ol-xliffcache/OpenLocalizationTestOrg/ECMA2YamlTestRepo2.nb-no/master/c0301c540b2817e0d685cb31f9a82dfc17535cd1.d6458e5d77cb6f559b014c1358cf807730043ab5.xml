{"nodes":[{"pos":[736,784],"content":"Indicates how a type library should be produced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates how a type library should be produced.","pos":[0,48]}]},{"pos":[796,889],"content":"Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used with &lt;xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A&gt;.","pos":[0,93],"source":"Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>."}]},{"pos":[1565,1661],"content":"Allows the caller to explicitly resolve type library references without consulting the registry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows the caller to explicitly resolve type library references without consulting the registry.","pos":[0,96]}]},{"pos":[1805,1817],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2280,2449],"content":"When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library. All data types are transformed appropriately.","needQuote":true,"needEscape":true,"nodes":[{"content":"When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library. All data types are transformed appropriately.","pos":[0,169],"nodes":[{"content":"When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library.","pos":[0,123]},{"content":"All data types are transformed appropriately.","pos":[124,169]}]}]},{"pos":[2582,2594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3057,3226],"content":"When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library. All data types are transformed appropriately.","needQuote":true,"needEscape":true,"nodes":[{"content":"When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library. All data types are transformed appropriately.","pos":[0,169],"nodes":[{"content":"When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library.","pos":[0,123]},{"content":"All data types are transformed appropriately.","pos":[124,169]}]}]},{"pos":[3359,3371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3789,3829],"content":"Specifies no flags. This is the default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies no flags. This is the default.","pos":[0,40],"nodes":[{"content":"Specifies no flags.","pos":[0,19]},{"content":"This is the default.","pos":[20,40]}]}]},{"pos":[3953,3965],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4403,5287],"content":"When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <xref uid=\"langword_csharp_System.Windows.Forms.HorizontalAlignment\" name=\"System.Windows.Forms.HorizontalAlignment\" href=\"\"></xref> is exported as <xref uid=\"langword_csharp_System_Windows_Forms_HorizontalAlignment\" name=\"System_Windows_Forms_HorizontalAlignment\" href=\"\"></xref>. When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name. Set the OldNames flag or use the <xref uid=\"langword_csharp_/oldnames\" name=\"/oldnames\" href=\"\"></xref> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name. Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_System.Windows.Forms.HorizontalAlignment\" name=\"System.Windows.Forms.HorizontalAlignment\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is exported as <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_System_Windows_Forms_HorizontalAlignment\" name=\"System_Windows_Forms_HorizontalAlignment\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,428],"source":"When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <xref uid=\"langword_csharp_System.Windows.Forms.HorizontalAlignment\" name=\"System.Windows.Forms.HorizontalAlignment\" href=\"\"></xref> is exported as <xref uid=\"langword_csharp_System_Windows_Forms_HorizontalAlignment\" name=\"System_Windows_Forms_HorizontalAlignment\" href=\"\"></xref>."},{"content":"When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name.","pos":[429,556]},{"content":"Set the OldNames flag or use the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_/oldnames\" name=\"/oldnames\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name.","pos":[557,767],"source":" Set the OldNames flag or use the <xref uid=\"langword_csharp_/oldnames\" name=\"/oldnames\" href=\"\"></xref> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name."},{"content":"Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.","pos":[768,884]}]},{"pos":[5415,5427],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5940,6275],"content":"Exports references to types that were imported from COM as <xref uid=\"langword_csharp_IUnknown\" name=\"IUnknown\" href=\"\"></xref> if the type does not have a registered type library. Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exports references to types that were imported from COM as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IUnknown\" name=\"IUnknown\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type does not have a registered type library.","pos":[0,180],"source":"Exports references to types that were imported from COM as <xref uid=\"langword_csharp_IUnknown\" name=\"IUnknown\" href=\"\"></xref> if the type does not have a registered type library."},{"content":"Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.","pos":[181,335]}]},{"pos":[6418,6430],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags\n  id: TypeLibExporterFlags\n  children:\n  - System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences\n  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit\n  - System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit\n  - System.Runtime.InteropServices.TypeLibExporterFlags.None\n  - System.Runtime.InteropServices.TypeLibExporterFlags.OldNames\n  - System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered\n  langs:\n  - csharp\n  name: TypeLibExporterFlags\n  nameWithType: TypeLibExporterFlags\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags\n  type: Enum\n  summary: Indicates how a type library should be produced.\n  remarks: Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum TypeLibExporterFlags\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences\n  id: CallerResolvedReferences\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: CallerResolvedReferences\n  nameWithType: TypeLibExporterFlags.CallerResolvedReferences\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Allows the caller to explicitly resolve type library references without consulting the registry.\n  syntax:\n    content: CallerResolvedReferences\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit\n  id: ExportAs32Bit\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: ExportAs32Bit\n  nameWithType: TypeLibExporterFlags.ExportAs32Bit\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library. All data types are transformed appropriately.\n  syntax:\n    content: ExportAs32Bit\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit\n  id: ExportAs64Bit\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: ExportAs64Bit\n  nameWithType: TypeLibExporterFlags.ExportAs64Bit\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library. All data types are transformed appropriately.\n  syntax:\n    content: ExportAs64Bit\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.None\n  id: None\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: None\n  nameWithType: TypeLibExporterFlags.None\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.None\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Specifies no flags. This is the default.\n  syntax:\n    content: None\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames\n  id: OldNames\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: OldNames\n  nameWithType: TypeLibExporterFlags.OldNames\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <xref uid=\"langword_csharp_System.Windows.Forms.HorizontalAlignment\" name=\"System.Windows.Forms.HorizontalAlignment\" href=\"\"></xref> is exported as <xref uid=\"langword_csharp_System_Windows_Forms_HorizontalAlignment\" name=\"System_Windows_Forms_HorizontalAlignment\" href=\"\"></xref>. When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name. Set the OldNames flag or use the <xref uid=\"langword_csharp_/oldnames\" name=\"/oldnames\" href=\"\"></xref> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name. Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.\n  syntax:\n    content: OldNames\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered\n  id: OnlyReferenceRegistered\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  langs:\n  - csharp\n  name: OnlyReferenceRegistered\n  nameWithType: TypeLibExporterFlags.OnlyReferenceRegistered\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Exports references to types that were imported from COM as <xref uid=\"langword_csharp_IUnknown\" name=\"IUnknown\" href=\"\"></xref> if the type does not have a registered type library. Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.\n  syntax:\n    content: OnlyReferenceRegistered\n    return:\n      type: System.Runtime.InteropServices.TypeLibExporterFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: CallerResolvedReferences\n  nameWithType: TypeLibExporterFlags.CallerResolvedReferences\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: TypeLibExporterFlags\n  nameWithType: TypeLibExporterFlags\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: ExportAs32Bit\n  nameWithType: TypeLibExporterFlags.ExportAs32Bit\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: ExportAs64Bit\n  nameWithType: TypeLibExporterFlags.ExportAs64Bit\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.None\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: None\n  nameWithType: TypeLibExporterFlags.None\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.None\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: OldNames\n  nameWithType: TypeLibExporterFlags.OldNames\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OldNames\n- uid: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered\n  parent: System.Runtime.InteropServices.TypeLibExporterFlags\n  isExternal: false\n  name: OnlyReferenceRegistered\n  nameWithType: TypeLibExporterFlags.OnlyReferenceRegistered\n  fullName: System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered\n"}