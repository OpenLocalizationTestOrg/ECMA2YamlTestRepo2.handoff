{"nodes":[{"pos":[369,585],"content":"Represents the method that handles the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Represents the method that handles the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> object."},{"pos":[598,1506],"content":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised before a Web Parts control is added to a Web Parts zone. You can specify which Web Parts controls can be added to a zone by customizing how the event is handled. The method specified in the WebPartAuthorizationEventHandler delegate is called when an <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised.       Page developers can provide custom handlers for Web Parts events by adding an `OnAuthorizeWebPart` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&gt; event is raised before a Web Parts control is added to a Web Parts zone.","pos":[0,150],"source":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised before a Web Parts control is added to a Web Parts zone."},{"content":"You can specify which Web Parts controls can be added to a zone by customizing how the event is handled.","pos":[151,255]},{"content":"The method specified in the WebPartAuthorizationEventHandler delegate is called when an &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&gt; event is raised.","pos":[256,434],"source":" The method specified in the WebPartAuthorizationEventHandler delegate is called when an <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised."},{"content":"Page developers can provide custom handlers for Web Parts events by adding an <ph id=\"ph1\">`OnAuthorizeWebPart`</ph> attribute to the <ph id=\"ph2\">`&lt;asp:webpartmanager&gt;`</ph> element in a page, and assigning a custom method name to the attribute.","pos":[441,651],"source":"       Page developers can provide custom handlers for Web Parts events by adding an `OnAuthorizeWebPart` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute."},{"content":"A custom handler can also be assigned programmatically.","pos":[652,707]},{"content":"For more information on programmatically assigning an event handler, see <bpt id=\"p1\">[</bpt>NIB: How to: Connect Event Handler Methods to Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)</ept>.","pos":[708,906],"source":" For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler\n  id: WebPartAuthorizationEventHandler\n  langs:\n  - csharp\n  name: WebPartAuthorizationEventHandler\n  nameWithType: WebPartAuthorizationEventHandler\n  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler\n  type: Delegate\n  summary: Represents the method that handles the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> object.\n  remarks: \"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised before a Web Parts control is added to a Web Parts zone. You can specify which Web Parts controls can be added to a zone by customizing how the event is handled. The method specified in the WebPartAuthorizationEventHandler delegate is called when an <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised.  \\n  \\n Page developers can provide custom handlers for Web Parts events by adding an `OnAuthorizeWebPart` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).\"\n  syntax:\n    content: public delegate void WebPartAuthorizationEventHandler(object sender, WebPartAuthorizationEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}