{"nodes":[{"pos":[444,1168],"content":"SqlCredential provides a more secure way to specify the password for a login attempt using [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication.       SqlCredential is comprised of a user id and a password that will be used for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication. The password in a SqlCredential object is of type <xref href=\"System.Security.SecureString\"></xref>.       SqlCredential cannot be inherited.       Windows Authentication (<xref uid=\"langword_csharp_Integrated Security = true\" name=\"Integrated Security = true\" href=\"\"></xref>) remains the most secure way to log in to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database.","needQuote":false,"needEscape":true,"nodes":[{"content":"SqlCredential provides a more secure way to specify the password for a login attempt using <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> Authentication.","pos":[0,164],"source":"SqlCredential provides a more secure way to specify the password for a login attempt using [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication."},{"content":"SqlCredential is comprised of a user id and a password that will be used for <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> Authentication.","pos":[171,321],"source":"       SqlCredential is comprised of a user id and a password that will be used for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication."},{"content":"The password in a SqlCredential object is of type <bpt id=\"p1\">&lt;xref href=\"System.Security.SecureString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[322,422],"source":" The password in a SqlCredential object is of type <xref href=\"System.Security.SecureString\"></xref>."},{"content":"SqlCredential cannot be inherited.","pos":[429,463]},{"content":"Windows Authentication (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integrated Security = true\" name=\"Integrated Security = true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) remains the most secure way to log in to a <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> database.","pos":[470,710],"source":"       Windows Authentication (<xref uid=\"langword_csharp_Integrated Security = true\" name=\"Integrated Security = true\" href=\"\"></xref>) remains the most secure way to log in to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database."}]},{"pos":[1182,3044],"content":"Use <xref:System.Data.SqlClient.SqlConnection.Credential%2A> to get or set a connection's SqlCredential object. Use <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> to change the password for a SqlCredential object. For information on how a SqlCredential object affects connection pool behavior, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).       An <xref:System.InvalidOperationException> exception will be raised if a non-null SqlCredential object is used in a connection with any of the following connection string keywords:      -   `Integrated Security = true`      -   `Password`      -   `User ID`      -   `Context Connection = true`       The following sample connects to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database using <xref:System.Data.SqlClient.SqlConnection.Credential%2A>:      ```   // change connection string in the APP.CONFIG file   <connectionStrings>     <add name=\"MyConnString\"          connectionString=\"Initial Catalog=myDB;Server=myServer\"          providerName=\"System.Data.SqlClient\" />   </connectionStrings>      // then use the following snippet:   using System.Configuration;      System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();   System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();      Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);   ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];      using (SqlConnection conn = new SqlConnection(connString.ConnectionString))   {   SecureString pwd = txtPwd.SecurePassword;   pwd.MakeReadOnly();   SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);   conn.Credential = cred;   conn.Open();   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use &lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt; to get or set a connection's SqlCredential object.","pos":[0,111],"source":"Use <xref:System.Data.SqlClient.SqlConnection.Credential%2A> to get or set a connection's SqlCredential object."},{"content":"Use &lt;xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A&gt; to change the password for a SqlCredential object.","pos":[112,227],"source":" Use <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> to change the password for a SqlCredential object."},{"content":"For information on how a SqlCredential object affects connection pool behavior, see <bpt id=\"p1\">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[228,393],"source":" For information on how a SqlCredential object affects connection pool behavior, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md)."},{"content":"An &lt;xref:System.InvalidOperationException&gt; exception will be raised if a non-null SqlCredential object is used in a connection with any of the following connection string keywords:      -   <ph id=\"ph1\">`Integrated Security = true`</ph><ph id=\"ph2\">      -   </ph><ph id=\"ph3\">`Password`</ph><ph id=\"ph4\">      -   </ph><ph id=\"ph5\">`User ID`</ph><ph id=\"ph6\">      -   </ph><ph id=\"ph7\">`Context Connection = true`</ph>       The following sample connects to a <ph id=\"ph8\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> database using &lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;:      <ph id=\"ph9\">```   // change connection string in the APP.CONFIG file   &lt;connectionStrings&gt;     &lt;add name=\"MyConnString\"          connectionString=\"Initial Catalog=myDB;Server=myServer\"          providerName=\"System.Data.SqlClient\" /&gt;   &lt;/connectionStrings&gt;      // then use the following snippet:   using System.Configuration;      System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();   System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();      Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);   ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];      using (SqlConnection conn = new SqlConnection(connString.ConnectionString))   {   SecureString pwd = txtPwd.SecurePassword;   pwd.MakeReadOnly();   SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);   conn.Credential = cred;   conn.Open();   ```</ph>","pos":[400,1818],"source":"       An <xref:System.InvalidOperationException> exception will be raised if a non-null SqlCredential object is used in a connection with any of the following connection string keywords:      -   `Integrated Security = true`      -   `Password`      -   `User ID`      -   `Context Connection = true`       The following sample connects to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database using <xref:System.Data.SqlClient.SqlConnection.Credential%2A>:      ```   // change connection string in the APP.CONFIG file   <connectionStrings>     <add name=\"MyConnString\"          connectionString=\"Initial Catalog=myDB;Server=myServer\"          providerName=\"System.Data.SqlClient\" />   </connectionStrings>      // then use the following snippet:   using System.Configuration;      System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();   System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();      Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);   ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];      using (SqlConnection conn = new SqlConnection(connString.ConnectionString))   {   SecureString pwd = txtPwd.SecurePassword;   pwd.MakeReadOnly();   SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);   conn.Credential = cred;   conn.Open();   ```"}]},{"pos":[3703,3786],"content":"Creates an object of type <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCredential\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an object of type <xref href=\"System.Data.SqlClient.SqlCredential\"></xref>."},{"pos":[3798,4009],"content":"The constructor does not accept null parameters. A <xref:System.String.Empty> value is allowed. An attempt to pass a null parameter in the constructor will raise an <xref:System.ArgumentNullException> exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The constructor does not accept null parameters. A <xref:System.String.Empty> value is allowed. An attempt to pass a null parameter in the constructor will raise an <xref:System.ArgumentNullException> exception.","pos":[0,211],"nodes":[{"content":"The constructor does not accept null parameters.","pos":[0,48]},{"content":"A &lt;xref:System.String.Empty&gt; value is allowed.","pos":[49,95],"source":" A <xref:System.String.Empty> value is allowed."},{"content":"An attempt to pass a null parameter in the constructor will raise an &lt;xref:System.ArgumentNullException&gt; exception.","pos":[96,211],"source":" An attempt to pass a null parameter in the constructor will raise an <xref:System.ArgumentNullException> exception."}]}]},{"pos":[4188,4200],"content":"The user id.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user id.","pos":[0,12]}]},{"pos":[4280,4501],"content":"The password; a <xref href=\"System.Security.SecureString\"></xref> value marked as read-only.  Passing a read/write <xref href=\"System.Security.SecureString\"></xref> parameter will raise an <xref:System.ArgumentException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password; a <bpt id=\"p1\">&lt;xref href=\"System.Security.SecureString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value marked as read-only.","pos":[0,92],"source":"The password; a <xref href=\"System.Security.SecureString\"></xref> value marked as read-only."},{"content":"Passing a read/write <bpt id=\"p1\">&lt;xref href=\"System.Security.SecureString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter will raise an &lt;xref:System.ArgumentException&gt;.","pos":[94,221],"source":"  Passing a read/write <xref href=\"System.Security.SecureString\"></xref> parameter will raise an <xref:System.ArgumentException>."}]},{"pos":[4936,5038],"content":"Returns the password component of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCredential\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the password component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object."},{"pos":[5188,5290],"content":"Returns the password component of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCredential\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the password component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object."},{"pos":[5718,5819],"content":"Returns the user ID component of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCredential\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the user ID component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object."},{"pos":[5930,6032],"content":"Returns the user ID component of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlClient.SqlCredential\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object..","needQuote":true,"needEscape":true,"source":"Returns the user ID component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object.."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlCredential\n  id: SqlCredential\n  children:\n  - System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)\n  - System.Data.SqlClient.SqlCredential.Password\n  - System.Data.SqlClient.SqlCredential.UserId\n  langs:\n  - csharp\n  name: SqlCredential\n  nameWithType: SqlCredential\n  fullName: System.Data.SqlClient.SqlCredential\n  type: Class\n  summary: \"SqlCredential provides a more secure way to specify the password for a login attempt using [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication.  \\n  \\n SqlCredential is comprised of a user id and a password that will be used for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication. The password in a SqlCredential object is of type <xref href=\\\"System.Security.SecureString\\\"></xref>.  \\n  \\n SqlCredential cannot be inherited.  \\n  \\n Windows Authentication (<xref uid=\\\"langword_csharp_Integrated Security = true\\\" name=\\\"Integrated Security = true\\\" href=\\\"\\\"></xref>) remains the most secure way to log in to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database.\"\n  remarks: \"Use <xref:System.Data.SqlClient.SqlConnection.Credential%2A> to get or set a connection's SqlCredential object. Use <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> to change the password for a SqlCredential object. For information on how a SqlCredential object affects connection pool behavior, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n An <xref:System.InvalidOperationException> exception will be raised if a non-null SqlCredential object is used in a connection with any of the following connection string keywords:  \\n  \\n-   `Integrated Security = true`  \\n  \\n-   `Password`  \\n  \\n-   `User ID`  \\n  \\n-   `Context Connection = true`  \\n  \\n The following sample connects to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database using <xref:System.Data.SqlClient.SqlConnection.Credential%2A>:  \\n  \\n```  \\n// change connection string in the APP.CONFIG file  \\n<connectionStrings>  \\n  <add name=\\\"MyConnString\\\"  \\n       connectionString=\\\"Initial Catalog=myDB;Server=myServer\\\"  \\n       providerName=\\\"System.Data.SqlClient\\\" />  \\n</connectionStrings>  \\n  \\n// then use the following snippet:  \\nusing System.Configuration;  \\n  \\nSystem.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();  \\nSystem.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();  \\n  \\nConfiguration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);  \\nConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];  \\n  \\nusing (SqlConnection conn = new SqlConnection(connString.ConnectionString))  \\n{  \\nSecureString pwd = txtPwd.SecurePassword;  \\npwd.MakeReadOnly();  \\nSqlCredential cred = new SqlCredential(txtUserId.Text, pwd);  \\nconn.Credential = cred;  \\nconn.Open();  \\n```\"\n  syntax:\n    content: public sealed class SqlCredential\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)\n  id: '#ctor(System.String,System.Security.SecureString)'\n  parent: System.Data.SqlClient.SqlCredential\n  langs:\n  - csharp\n  name: SqlCredential(String,SecureString)\n  nameWithType: SqlCredential.SqlCredential(String,SecureString)\n  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Creates an object of type <xref href=\"System.Data.SqlClient.SqlCredential\"></xref>.\n  remarks: The constructor does not accept null parameters. A <xref:System.String.Empty> value is allowed. An attempt to pass a null parameter in the constructor will raise an <xref:System.ArgumentNullException> exception.\n  syntax:\n    content: public SqlCredential (string userId, System.Security.SecureString password);\n    parameters:\n    - id: userId\n      type: System.String\n      description: The user id.\n    - id: password\n      type: System.Security.SecureString\n      description: The password; a <xref href=\"System.Security.SecureString\"></xref> value marked as read-only.  Passing a read/write <xref href=\"System.Security.SecureString\"></xref> parameter will raise an <xref:System.ArgumentException>.\n  overload: System.Data.SqlClient.SqlCredential.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlCredential.Password\n  id: Password\n  parent: System.Data.SqlClient.SqlCredential\n  langs:\n  - csharp\n  name: Password\n  nameWithType: SqlCredential.Password\n  fullName: System.Data.SqlClient.SqlCredential.Password\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Returns the password component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object.\n  syntax:\n    content: public System.Security.SecureString Password { get; }\n    return:\n      type: System.Security.SecureString\n      description: Returns the password component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object.\n  overload: System.Data.SqlClient.SqlCredential.Password*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlClient.SqlCredential.UserId\n  id: UserId\n  parent: System.Data.SqlClient.SqlCredential\n  langs:\n  - csharp\n  name: UserId\n  nameWithType: SqlCredential.UserId\n  fullName: System.Data.SqlClient.SqlCredential.UserId\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Returns the user ID component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object.\n  syntax:\n    content: public string UserId { get; }\n    return:\n      type: System.String\n      description: Returns the user ID component of the <xref href=\"System.Data.SqlClient.SqlCredential\"></xref> object..\n  overload: System.Data.SqlClient.SqlCredential.UserId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: SqlCredential(String,SecureString)\n  nameWithType: SqlCredential.SqlCredential(String,SecureString)\n  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Data.SqlClient.SqlCredential.Password\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: Password\n  nameWithType: SqlCredential.Password\n  fullName: System.Data.SqlClient.SqlCredential.Password\n- uid: System.Data.SqlClient.SqlCredential.UserId\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: UserId\n  nameWithType: SqlCredential.UserId\n  fullName: System.Data.SqlClient.SqlCredential.UserId\n- uid: System.Data.SqlClient.SqlCredential.#ctor*\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: SqlCredential\n  nameWithType: SqlCredential.SqlCredential\n- uid: System.Data.SqlClient.SqlCredential.Password*\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: Password\n  nameWithType: SqlCredential.Password\n- uid: System.Data.SqlClient.SqlCredential.UserId*\n  parent: System.Data.SqlClient.SqlCredential\n  isExternal: false\n  name: UserId\n  nameWithType: SqlCredential.UserId\n"}