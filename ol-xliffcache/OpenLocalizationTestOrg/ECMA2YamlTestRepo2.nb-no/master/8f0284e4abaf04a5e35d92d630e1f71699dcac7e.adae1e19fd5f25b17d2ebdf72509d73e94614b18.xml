{"nodes":[{"pos":[986,998],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1034,1046],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3788,3800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4701,4713],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4791,4803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5557,5569],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6262,6274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.IndexerReference`2\n  id: IndexerReference`2\n  children:\n  - System.Activities.Expressions.IndexerReference`2.#ctor\n  - System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.IndexerReference`2.Indices\n  - System.Activities.Expressions.IndexerReference`2.Operand\n  langs:\n  - csharp\n  name: IndexerReference<TOperand,TItem>\n  nameWithType: IndexerReference<TOperand,TItem>\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Indices\")]\n\n      public sealed class IndexerReference<TOperand,TItem> : System.Activities.CodeActivity<System.Activities.Location<TItem>>\n    typeParameters:\n    - id: TOperand\n      description: To be added.\n    - id: TItem\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.IndexerReference`2.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.IndexerReference`2\n  langs:\n  - csharp\n  name: IndexerReference()\n  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference()\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.IndexerReference()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public IndexerReference ();\n    parameters: []\n  overload: System.Activities.Expressions.IndexerReference`2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.IndexerReference`2\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.IndexerReference`2.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.IndexerReference`2\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override System.Activities.Location<TItem> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location{TItem}\n      description: To be added.\n  overload: System.Activities.Expressions.IndexerReference`2.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.IndexerReference`2.Indices\n  id: Indices\n  parent: System.Activities.Expressions.IndexerReference`2\n  langs:\n  - csharp\n  name: Indices\n  nameWithType: IndexerReference<TOperand,TItem>.Indices\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Indices\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.InArgument> Indices { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.InArgument}\n      description: To be added.\n  overload: System.Activities.Expressions.IndexerReference`2.Indices*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.IndexerReference`2.Operand\n  id: Operand\n  parent: System.Activities.Expressions.IndexerReference`2\n  langs:\n  - csharp\n  name: Operand\n  nameWithType: IndexerReference<TOperand,TItem>.Operand\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Operand\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<TOperand> Operand { get; set; }\n    return:\n      type: System.Activities.InArgument{TOperand}\n      description: To be added.\n  overload: System.Activities.Expressions.IndexerReference`2.Operand*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<TItem>>\n- uid: System.Activities.Expressions.IndexerReference`2.#ctor\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: IndexerReference()\n  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference()\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.IndexerReference()\n- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)\n- uid: System.Activities.Location{TItem}\n  parent: System.Activities\n  isExternal: false\n  name: Location<TItem>\n  nameWithType: Location<TItem>\n  fullName: System.Activities.Location<TItem>\n  spec.csharp:\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: Location<TItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TItem\n    name: TItem\n    nameWithType: TItem\n    fullName: TItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.IndexerReference`2.Indices\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Indices\n  nameWithType: IndexerReference<TOperand,TItem>.Indices\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Indices\n- uid: System.Collections.ObjectModel.Collection{System.Activities.InArgument}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<InArgument>\n  nameWithType: Collection<InArgument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.InArgument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.InArgument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.InArgument\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.IndexerReference`2.Operand\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Operand\n  nameWithType: IndexerReference<TOperand,TItem>.Operand\n  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Operand\n- uid: System.Activities.InArgument{TOperand}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TOperand>\n  nameWithType: InArgument<TOperand>\n  fullName: System.Activities.InArgument<TOperand>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<TOperand>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TOperand\n    name: TOperand\n    nameWithType: TOperand\n    fullName: TOperand\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.IndexerReference`2.#ctor*\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: IndexerReference<TOperand,TItem>\n  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>\n- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata*\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata\n- uid: System.Activities.Expressions.IndexerReference`2.Execute*\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Execute\n  nameWithType: IndexerReference<TOperand,TItem>.Execute\n- uid: System.Activities.Expressions.IndexerReference`2.Indices*\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Indices\n  nameWithType: IndexerReference<TOperand,TItem>.Indices\n- uid: System.Activities.Expressions.IndexerReference`2.Operand*\n  parent: System.Activities.Expressions.IndexerReference`2\n  isExternal: false\n  name: Operand\n  nameWithType: IndexerReference<TOperand,TItem>.Operand\n"}