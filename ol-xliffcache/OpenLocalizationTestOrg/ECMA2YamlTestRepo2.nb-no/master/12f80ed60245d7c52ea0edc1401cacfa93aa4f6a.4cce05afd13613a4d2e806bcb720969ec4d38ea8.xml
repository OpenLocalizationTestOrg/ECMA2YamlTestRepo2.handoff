{"nodes":[{"pos":[4244,4305],"content":"Represents the process model for implementing XML encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the process model for implementing XML encryption.","pos":[0,61]}]},{"pos":[4318,6619],"content":"The EncryptedXml class is the main class used for XML encryption in the .NET Framework. XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data. The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.       Use the EncryptedXml class whenever you need to share encrypted XML data between applications or organizations in a standard way. Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.       XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data. The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.       The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element. Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.       Use one of the following methods to exchange key information:      -   Do not include any key information. If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.      -   Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element. Both parties must agree on the key location ahead of time and this location must be kept secret.      -   Include a string name that maps to a key in the `<KeyName>` element. Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.      -   Include an encrypted key in the `<EncryptedKey>` element. Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data. You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EncryptedXml class is the main class used for XML encryption in the .NET Framework.","pos":[0,87]},{"content":"XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.","pos":[88,207]},{"content":"The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.","pos":[208,374]},{"content":"Use the EncryptedXml class whenever you need to share encrypted XML data between applications or organizations in a standard way.","pos":[381,510]},{"content":"Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.","pos":[511,630]},{"content":"XML encryption replaces any plain text XML element or document with the <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.","pos":[637,836],"source":"       XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data."},{"content":"The <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.","pos":[837,1032],"source":" The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text."},{"content":"The <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element is similar to the <ph id=\"ph2\">`&lt;EncryptedData&gt;`</ph> element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the <ph id=\"ph3\">`&lt;EncryptedData&gt;`</ph> element.","pos":[1039,1236],"source":"       The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element."},{"content":"Note that the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element and the <ph id=\"ph2\">`&lt;EncryptedData&gt;`</ph> element will never contain an unencrypted key.","pos":[1237,1348],"source":" Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key."},{"content":"Use one of the following methods to exchange key information:      -   Do not include any key information.","pos":[1355,1461]},{"content":"If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.","pos":[1462,1573]},{"content":"-   Include the location of the key in the Uniform Resource Identifier (URI) attribute of the <ph id=\"ph1\">`&lt;RetrievalMethod&gt;`</ph> element.","pos":[1579,1701],"source":"      -   Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element."},{"content":"Both parties must agree on the key location ahead of time and this location must be kept secret.","pos":[1702,1798]},{"content":"-   Include a string name that maps to a key in the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element.","pos":[1804,1876],"source":"      -   Include a string name that maps to a key in the `<KeyName>` element."},{"content":"Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.","pos":[1877,1998]},{"content":"-   Include an encrypted key in the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[2004,2065],"source":"      -   Include an encrypted key in the `<EncryptedKey>` element."},{"content":"Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.","pos":[2066,2169]},{"content":"You can optionally include a name or location of the key that will decrypt the key in the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[2170,2285],"source":" You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element."}]},{"pos":[10053,10160],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class."},{"pos":[10172,10264],"content":"This is the default constructor for the main class for XML encryption in the .NET Framework.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the default constructor for the main class for XML encryption in the .NET Framework.","pos":[0,92]}]},{"pos":[13260,13400],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified XML document.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class using the specified XML document."},{"pos":[13412,13647],"content":"Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.  The `document` parameter comprises the XML elements that later form the encrypted XML.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to create an &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; object when you want to specify the XML document to encrypt.","pos":[0,147],"source":"Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt."},{"content":"The <ph id=\"ph1\">`document`</ph> parameter comprises the XML elements that later form the encrypted XML.","pos":[149,235],"source":"  The `document` parameter comprises the XML elements that later form the encrypted XML."}]},{"pos":[14975,15126],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to initialize the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlDocument\"></xref> object used to initialize the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object."},{"pos":[15804,15957],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified XML document and evidence.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class using the specified XML document and evidence."},{"pos":[15969,16233],"content":"Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence. The `document` parameter comprises the XML elements that later form the encrypted XML.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to create an &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; object when you want to specify the XML document to encrypt and provide security evidence.","pos":[0,177],"source":"Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence."},{"content":"The <ph id=\"ph1\">`document`</ph> parameter comprises the XML elements that later form the encrypted XML.","pos":[178,264],"source":" The `document` parameter comprises the XML elements that later form the encrypted XML."}]},{"pos":[16443,16594],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to initialize the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlDocument\"></xref> object used to initialize the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object."},{"pos":[16677,16811],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Policy.Evidence\"></xref> object associated with the <xref href=\"System.Xml.XmlDocument\"></xref> object."},{"pos":[17446,17524],"content":"Defines a mapping between a key name and a symmetric key or an asymmetric key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a mapping between a key name and a symmetric key or an asymmetric key.","pos":[0,78]}]},{"pos":[17537,17887],"content":"The AddKeyNameMapping method allows you to map a symmetric key or an asymmetric key to a string name. This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.       Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AddKeyNameMapping method allows you to map a symmetric key or an asymmetric key to a string name.","pos":[0,101]},{"content":"This method adds the values of the <ph id=\"ph1\">`keyName`</ph> and <ph id=\"ph2\">`keyObject`</ph> parameters to a table of valid key name mappings.","pos":[102,212],"source":" This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings."},{"content":"Use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A&gt; method to clear the key name mappings table.","pos":[219,348],"source":"       Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table."}]},{"pos":[18641,18672],"content":"The name to map to <ph id=\"ph1\">`keyObject`</ph>.","needQuote":true,"needEscape":true,"source":"The name to map to `keyObject`."},{"pos":[18738,18776],"content":"The symmetric key to map to <ph id=\"ph1\">`keyName`</ph>.","needQuote":true,"needEscape":true,"source":"The symmetric key to map to `keyName`."},{"pos":[18971,19231],"content":"The value of the <code>keyName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>keyObject</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"The value of the <code>keyName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[119,244],"source":"       -or-       The value of the <code>keyObject</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[19381,19474],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an RSA algorithm or a symmetric key.","needQuote":true,"needEscape":true,"source":"The value of the <code>keyObject</code> parameter is not an RSA algorithm or a symmetric key."},{"pos":[19945,19973],"content":"Resets all key name mapping.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets all key name mapping.","pos":[0,28]}]},{"pos":[19985,20140],"content":"Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to clear all key name mapping that you have set using the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A&gt; method.","pos":[0,155],"source":"Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method."}]},{"pos":[21030,21185],"content":"Decrypts an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element using the specified symmetric algorithm.","needQuote":true,"needEscape":true,"source":"Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element using the specified symmetric algorithm."},{"pos":[21198,21774],"content":"Use the DecryptData method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.       Note that the DecryptData method only decrypts top-level <`EncryptedData`> tags.  In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.  See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DecryptData method to decrypt an &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; element using a symmetric key.","pos":[0,125],"source":"Use the DecryptData method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key."},{"content":"Note that the DecryptData method only decrypts top-level &lt;<ph id=\"ph1\">`EncryptedData`</ph>&gt; tags.","pos":[132,212],"source":"       Note that the DecryptData method only decrypts top-level <`EncryptedData`> tags."},{"content":"In cases where one or more &lt;<ph id=\"ph1\">`EncryptedData`</ph>&gt; tags have been encrypted and are contained within higher level &lt;<ph id=\"ph2\">`EncryptedData`</ph>&gt; tags, you can call the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A&gt; method separately for each one.","pos":[214,466],"source":"  In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one."},{"content":"See the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A&gt; method for a code example.","pos":[468,574],"source":"  See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example."}]},{"pos":[22619,22639],"content":"The data to decrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to decrypt.","pos":[0,20]}]},{"pos":[22748,22798],"content":"The symmetric key used to decrypt <ph id=\"ph1\">`encryptedData`</ph>.","needQuote":true,"needEscape":true,"source":"The symmetric key used to decrypt `encryptedData`."},{"pos":[22856,22912],"content":"A byte array that contains the raw decrypted plain text.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the raw decrypted plain text.","pos":[0,56]}]},{"pos":[23101,23376],"content":"The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,118],"source":"The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[125,259],"source":"       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[23823,24082],"content":"Decrypts all <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements of the XML document that were specified during initialization of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Decrypts all <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> elements of the XML document that were specified during initialization of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class."},{"pos":[24095,25268],"content":"The DecryptDocument method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization. After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.       The DecryptDocument method decrypts only top-level `<EncryptedData>` elements.  If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the DecryptDocument method repeatedly until all the `<EncryptedData>` elements have been decrypted.      > [!NOTE] >  The DecryptDocument method decrypts only valid XML data. To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.       To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider. If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \"Unknown Error\" will be thrown when you decrypt an XML document.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DecryptDocument method decrypts all <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> elements of the XML document loaded during initialization.","pos":[0,116],"source":"The DecryptDocument method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization."},{"content":"After you call this method, all <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> elements in the document are replaced with plain text versions.","pos":[117,230],"source":" After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions."},{"content":"The DecryptDocument method decrypts only top-level <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> elements.","pos":[237,315],"source":"       The DecryptDocument method decrypts only top-level `<EncryptedData>` elements."},{"content":"If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the DecryptDocument method repeatedly until all the <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> elements have been decrypted.","pos":[317,527],"source":"  If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the DecryptDocument method repeatedly until all the `<EncryptedData>` elements have been decrypted."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The DecryptDocument method decrypts only valid XML data.","pos":[533,602],"source":"      > [!NOTE] >  The DecryptDocument method decrypts only valid XML data."},{"content":"To decrypt arbitrary data, use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A&gt; method.","pos":[603,713],"source":" To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method."},{"content":"To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.","pos":[720,894]},{"content":"If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a &lt;xref:System.Security.Cryptography.CryptographicException&gt; with an \"Unknown Error\" will be thrown when you decrypt an XML document.","pos":[895,1164],"source":" If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \"Unknown Error\" will be thrown when you decrypt an XML document."}]},{"pos":[27268,27333],"content":"The cryptographic key used to decrypt the document was not found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cryptographic key used to decrypt the document was not found.","pos":[0,65]}]},{"pos":[27929,28042],"content":"Determines the key represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Determines the key represented by the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> element."},{"pos":[28055,28528],"content":"The DecryptEncryptedKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.       This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DecryptEncryptedKey method decrypts an encrypted key contained within the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element of an XML document.","pos":[0,122],"source":"The DecryptEncryptedKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document."},{"content":"This recursive method finds the key represented by the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object.","pos":[129,244],"source":"       This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object."},{"content":"Note that an &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object can contain another &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object that specifies its &lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt; value.","pos":[245,471],"source":" Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value."}]},{"pos":[28773,28885],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the key to retrieve.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> object that contains the key to retrieve."},{"pos":[28943,28978],"content":"A byte array that contains the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the key.","pos":[0,35]}]},{"pos":[29174,29291],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <code>encryptedKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[29440,29618],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).","needQuote":true,"needEscape":true,"source":"The value of the <code>encryptedKey</code> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael)."},{"pos":[30240,30381],"content":"Decrypts an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element using a symmetric algorithm.","needQuote":true,"needEscape":true,"source":"Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element using a symmetric algorithm."},{"pos":[30393,30731],"content":"The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document. This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A&gt; method decrypts an encrypted key contained within the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element of an XML document.","pos":[0,169],"source":"The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document."},{"content":"This method accepts a value for the <ph id=\"ph1\">`symmetricAlgorithm`</ph> parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).","pos":[170,338],"source":" This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael)."}]},{"pos":[30952,31100],"content":"An array of bytes that represents an encrypted <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"An array of bytes that represents an encrypted <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element."},{"pos":[31209,31253],"content":"The symmetric key used to decrypt <ph id=\"ph1\">`keyData`</ph>.","needQuote":true,"needEscape":true,"source":"The symmetric key used to decrypt `keyData`."},{"pos":[31311,31357],"content":"A byte array that contains the plain text key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the plain text key.","pos":[0,46]}]},{"pos":[31545,31814],"content":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[119,253],"source":"       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[31964,32146],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).","needQuote":true,"needEscape":true,"source":"The value of the <code>symmetricAlgorithm</code> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael)."},{"pos":[32747,32890],"content":"Decrypts an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element using an asymmetric algorithm.","needQuote":true,"needEscape":true,"source":"Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element using an asymmetric algorithm."},{"pos":[32902,33183],"content":"The DecryptKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document. This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DecryptKey method decrypts an encrypted key contained within the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element of an XML document.","pos":[0,113],"source":"The DecryptKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document."},{"content":"This method accepts a value for the <ph id=\"ph1\">`rsa`</ph> parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).","pos":[114,281],"source":" This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding)."}]},{"pos":[33388,33536],"content":"An array of bytes that represents an encrypted <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"An array of bytes that represents an encrypted <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element."},{"pos":[33615,33660],"content":"The asymmetric key used to decrypt <ph id=\"ph1\">`keyData`</ph>.","needQuote":true,"needEscape":true,"source":"The asymmetric key used to decrypt `keyData`."},{"pos":[33725,33808],"content":"A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).","pos":[0,83]}]},{"pos":[33866,33912],"content":"A byte array that contains the plain text key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the plain text key.","pos":[0,46]}]},{"pos":[34100,34354],"content":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>rsa</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rsa</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[119,238],"source":"       -or-       The value of the <code>rsa</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[34802,34990],"content":"Gets or sets the evidence of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from which the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is constructed.","needQuote":true,"needEscape":true,"source":"Gets or sets the evidence of the <xref href=\"System.Xml.XmlDocument\"></xref> object from which the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object is constructed."},{"pos":[35002,35389],"content":"If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the DocumentEvidence property.  If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the DocumentEvidence property.  If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.","pos":[0,387],"nodes":[{"content":"If the XML document used to create the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; object has any security evidence, you should add the evidence to the DocumentEvidence property.","pos":[0,187],"source":"If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the DocumentEvidence property."},{"content":"If you do not set this property, any associated &lt;xref:System.Security.Cryptography.Xml.CipherReference&gt; objects will not be dereferenced because they will not be granted the required permission set.","pos":[189,387],"source":"  If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set."}]}]},{"pos":[35558,35621],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Policy.Evidence\"></xref> object."},{"pos":[36121,36171],"content":"Gets or sets the encoding used for XML encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encoding used for XML encryption.","pos":[0,50]}]},{"pos":[36183,36371],"content":"UTF-8 encoding is the default encoding for XML encryption. You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"UTF-8 encoding is the default encoding for XML encryption. You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.","pos":[0,188],"nodes":[{"content":"UTF-8 encoding is the default encoding for XML encryption.","pos":[0,58]},{"content":"You can use this property to specify other types of encoding from the &lt;xref:System.Text.Encoding&gt; class, such as UTF-16 or ASCII.","pos":[59,188],"source":" You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII."}]}]},{"pos":[36510,36548],"content":"An <xref:System.Text.Encoding> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Text.Encoding&gt; object.","pos":[0,38],"source":"An <xref:System.Text.Encoding> object."}]},{"pos":[37292,37367],"content":"Encrypts the outer XML of an element using the specified X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the outer XML of an element using the specified X.509 certificate.","pos":[0,75]}]},{"pos":[37380,38595],"content":"The Encrypt method is a convenient way to encrypt the outer XML of an element using a certificate. This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object. The Encrypt method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.       If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.       To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider. If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \"Unknown Error\" will be thrown when you decrypt an XML document.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Encrypt method is a convenient way to encrypt the outer XML of an element using a certificate.","pos":[0,98]},{"content":"This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt; object.","pos":[99,331],"source":" This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object."},{"content":"The Encrypt method then returns the resulting XML as an &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; element.","pos":[332,450],"source":" The Encrypt method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element."},{"content":"If you need more control over the encryption, so you can place the encrypted information into a <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element or specify whether the entire XML element or just its contents should be encrypted, use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A&gt; method overloads.","pos":[457,758],"source":"       If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads."},{"content":"To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.","pos":[765,939]},{"content":"If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a &lt;xref:System.Security.Cryptography.CryptographicException&gt; with an \"Unknown Error\" will be thrown when you decrypt an XML document.","pos":[940,1209],"source":" If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \"Unknown Error\" will be thrown when you decrypt an XML document."}]},{"pos":[39509,39536],"content":"The XML element to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML element to encrypt.","pos":[0,27]}]},{"pos":[39653,39697],"content":"The X.509 certificate to use for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 certificate to use for encryption.","pos":[0,44]}]},{"pos":[39788,39906],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element that represents the encrypted XML data.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> element that represents the encrypted XML data."},{"pos":[40091,40358],"content":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>certificate</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[124,251],"source":"       -or-       The value of the <code>certificate</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[40462,40554],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not represent an RSA key algorithm.","needQuote":true,"needEscape":true,"source":"The value of the <code>certificate</code> parameter does not represent an RSA key algorithm."},{"pos":[41085,41171],"content":"Encrypts the outer XML of an element using the specified key in the key mapping table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the outer XML of an element using the specified key in the key mapping table.","pos":[0,86]}]},{"pos":[41184,41734],"content":"This method is a convenient way to encrypt the outer XML of an element using a key name. If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.       For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a convenient way to encrypt the outer XML of an element using a key name.","pos":[0,88]},{"content":"If you need more control over the encryption, so you can place the encrypted information into a <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element or specify whether the entire XML element or just its contents should be encrypted, use the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A&gt; method overloads.","pos":[89,390],"source":" If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads."},{"content":"For a list of all supported algorithms, see the list of constant fields associated with the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; class.","pos":[397,548],"source":"       For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class."}]},{"pos":[42418,42445],"content":"The XML element to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML element to encrypt.","pos":[0,27]}]},{"pos":[42509,42563],"content":"A key name that can be found in the key mapping table.","needQuote":true,"needEscape":true,"nodes":[{"content":"A key name that can be found in the key mapping table.","pos":[0,54]}]},{"pos":[42654,42771],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the encrypted XML data.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that represents the encrypted XML data."},{"pos":[42956,43219],"content":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>keyName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[124,247],"source":"       -or-       The value of the <code>keyName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[43370,43569],"content":"The value of the <code>keyName</code> parameter does not match a registered key name pair.       -or-       The cryptographic key described by the <code>keyName</code> parameter is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not match a registered key name pair.","pos":[0,90],"source":"The value of the <code>keyName</code> parameter does not match a registered key name pair."},{"content":"-or-       The cryptographic key described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[97,195],"source":"       -or-       The cryptographic key described by the <code>keyName</code> parameter is not supported."}]},{"pos":[44197,44279],"content":"Encrypts data in the specified byte array using the specified symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts data in the specified byte array using the specified symmetric algorithm.","pos":[0,82]}]},{"pos":[44291,44473],"content":"The returned byte array can be placed into a `<CipherValue>` element. This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The returned byte array can be placed into a <ph id=\"ph1\">`&lt;CipherValue&gt;`</ph> element.","pos":[0,69],"source":"The returned byte array can be placed into a `<CipherValue>` element."},{"content":"This method assumes that the data specified in the <ph id=\"ph1\">`plaintext`</ph> parameter is a byte array that contains XML data.","pos":[70,182],"source":" This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data."}]},{"pos":[46387,46407],"content":"The data to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to encrypt.","pos":[0,20]}]},{"pos":[46516,46562],"content":"The symmetric algorithm to use for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symmetric algorithm to use for encryption.","pos":[0,46]}]},{"pos":[46620,46651],"content":"A byte array of encrypted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array of encrypted data.","pos":[0,31]}]},{"pos":[46840,47111],"content":"The value of the <code>plaintext</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">plaintext</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,114],"source":"The value of the <code>plaintext</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[121,255],"source":"       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[47261,47324],"content":"The data could not be encrypted using the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data could not be encrypted using the specified parameters.","pos":[0,63]}]},{"pos":[48033,48120],"content":"Encrypts the specified element or its contents using the specified symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypts the specified element or its contents using the specified symmetric algorithm.","pos":[0,87]}]},{"pos":[48132,48205],"content":"The returned byte array data is the value of the <ph id=\"ph1\">`&lt;CipherValue&gt;`</ph> element.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The returned byte array data is the value of the `<CipherValue>` element."},{"pos":[49011,49050],"content":"The element or its contents to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element or its contents to encrypt.","pos":[0,39]}]},{"pos":[49159,49205],"content":"The symmetric algorithm to use for encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symmetric algorithm to use for encryption.","pos":[0,46]}]},{"pos":[49270,49469],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to encrypt only the contents of the element; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to encrypt the entire element.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encrypt only the contents of the element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to encrypt the entire element."},{"pos":[49527,49573],"content":"A byte array that contains the encrypted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the encrypted data.","pos":[0,46]}]},{"pos":[49762,50036],"content":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[124,258],"source":"       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50659,50841],"content":"Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element."},{"pos":[50854,51320],"content":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element. This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).       Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.  You must manually create the `<EncryptedKey>` element within your document.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element.","pos":[0,107],"source":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element."},{"content":"This method accepts a value for the <ph id=\"ph1\">`symmetricAlgorithm`</ph> parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).","pos":[108,276],"source":" This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael)."},{"content":"Note that this method does not automatically place the encrypted key within an <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[283,387],"source":"       Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element."},{"content":"You must manually create the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element within your document.","pos":[389,464],"source":"  You must manually create the `<EncryptedKey>` element within your document."}]},{"pos":[51542,51561],"content":"The key to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to encrypt.","pos":[0,19]}]},{"pos":[51670,51714],"content":"The symmetric key used to encrypt <ph id=\"ph1\">`keyData`</ph>.","needQuote":true,"needEscape":true,"source":"The symmetric key used to encrypt `keyData`."},{"pos":[51772,51859],"content":"A byte array that represents the encrypted value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A byte array that represents the encrypted value of the <code>keyData</code> parameter."},{"pos":[52047,52316],"content":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[119,253],"source":"       -or-       The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[52466,52650],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).","needQuote":true,"needEscape":true,"source":"The value of the <code>symmetricAlgorithm</code> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael)."},{"pos":[53251,53407],"content":"Encrypts the key that a recipient uses to decrypt an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Encrypts the key that a recipient uses to decrypt an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element."},{"pos":[53420,53863],"content":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element. This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).       Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.  You must manually create the `<EncryptedKey>` element within your document.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element.","pos":[0,107],"source":"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element."},{"content":"This method accepts a value for <ph id=\"ph1\">`rsa`</ph> that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).","pos":[108,253],"source":" This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP)."},{"content":"Note that this method does not automatically place the encrypted key within an <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[260,364],"source":"       Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element."},{"content":"You must manually create the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element within your document.","pos":[366,441],"source":"  You must manually create the `<EncryptedKey>` element within your document."}]},{"pos":[54678,54697],"content":"The key to encrypt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to encrypt.","pos":[0,19]}]},{"pos":[54776,54821],"content":"The asymmetric key used to encrypt <ph id=\"ph1\">`keyData`</ph>.","needQuote":true,"needEscape":true,"source":"The asymmetric key used to encrypt `keyData`."},{"pos":[54886,54969],"content":"A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).","pos":[0,83]}]},{"pos":[55027,55114],"content":"A byte array that represents the encrypted value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A byte array that represents the encrypted value of the <code>keyData</code> parameter."},{"pos":[55302,55556],"content":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>rsa</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"The value of the <code>keyData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rsa</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[119,238],"source":"       -or-       The value of the <code>rsa</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[56187,56322],"content":"Retrieves the decryption initialization vector (IV) from an <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the decryption initialization vector (IV) from an <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object."},{"pos":[56335,56839],"content":"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV). The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.       For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Given an &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; object, this method retrieves the decryption initialization vector (IV).","pos":[0,135],"source":"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV)."},{"content":"The default behavior retrieves the IV as the first bytes of the &lt;xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A&gt; byte array.","pos":[136,277],"source":" The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array."},{"content":"For a list of Uniform Resource Identifier (URI) values supported by the <ph id=\"ph1\">`symmetricAlgorithmUri`</ph> parameter, see the list of constant fields associated with the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; class.","pos":[284,502],"source":"       For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class."}]},{"pos":[57114,57250],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the initialization vector (IV) to retrieve.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that contains the initialization vector (IV) to retrieve."},{"pos":[57328,57451],"content":"The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <ph id=\"ph1\">`encryptedData`</ph> value.","needQuote":true,"needEscape":true,"source":"The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the `encryptedData` value."},{"pos":[57509,57578],"content":"A byte array that contains the decryption initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the decryption initialization vector (IV).","pos":[0,69]}]},{"pos":[57770,57888],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[58038,58315],"content":"The value of the <code>encryptedData</code> parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null.       -or-       The value of the <code>symmetricAlgorithmUrisymAlgUri</code> parameter is not a supported algorithm.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has an &lt;xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*&gt; property that is null.","pos":[0,155],"source":"The value of the <code>encryptedData</code> parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">symmetricAlgorithmUrisymAlgUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a supported algorithm.","pos":[162,273],"source":"       -or-       The value of the <code>symmetricAlgorithmUrisymAlgUri</code> parameter is not a supported algorithm."}]},{"pos":[58951,59074],"content":"Retrieves the decryption key from the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the decryption key from the specified <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object."},{"pos":[59086,59650],"content":"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data. If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping. Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the GetDecryptionKey method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data. If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping. Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the GetDecryptionKey method.","pos":[0,564],"nodes":[{"content":"Given an &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; object, this method looks for the decryption key that can be used to retrieve the plain text data.","pos":[0,161],"source":"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data."},{"content":"If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.","pos":[162,331]},{"content":"Otherwise, if a retrieval method or an &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object is specified, the method loads the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object and calls the GetDecryptionKey method.","pos":[332,564],"source":" Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the GetDecryptionKey method."}]}]},{"pos":[59966,60090],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the decryption key to retrieve.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that contains the decryption key to retrieve."},{"pos":[60168,60211],"content":"The size of the decryption key to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the decryption key to retrieve.","pos":[0,43]}]},{"pos":[60303,60416],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the decryption key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.SymmetricAlgorithm\"></xref> object associated with the decryption key."},{"pos":[60609,60727],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[60877,61097],"content":"The encryptedData parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null.       -or-       The encrypted key cannot be retrieved using the specified parameters.","needQuote":false,"needEscape":true,"nodes":[{"content":"The encryptedData parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null.       -or-       The encrypted key cannot be retrieved using the specified parameters.","pos":[0,216],"nodes":[{"content":"The encryptedData parameter has an &lt;xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*&gt; property that is null.","pos":[0,129],"source":"The encryptedData parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null."},{"content":"-or-       The encrypted key cannot be retrieved using the specified parameters.","pos":[136,216]}]}]},{"pos":[61659,61739],"content":"Determines how to resolve internal Uniform Resource Identifier (URI) references.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines how to resolve internal Uniform Resource Identifier (URI) references.","pos":[0,80]}]},{"pos":[61751,61956],"content":"The GetIdElement method determines how to resolve internal Uniform Resource Identifiers (URIs). It looks for elements with a specified value or for elements with an ID attribute that has a specified value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetIdElement method determines how to resolve internal Uniform Resource Identifiers (URIs). It looks for elements with a specified value or for elements with an ID attribute that has a specified value.","pos":[0,205],"nodes":[{"content":"The GetIdElement method determines how to resolve internal Uniform Resource Identifiers (URIs).","pos":[0,95]},{"content":"It looks for elements with a specified value or for elements with an ID attribute that has a specified value.","pos":[96,205]}]}]},{"pos":[62170,62266],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains an element with an ID value.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlDocument\"></xref> object that contains an element with an ID value."},{"pos":[62330,62368],"content":"A string that represents the ID value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the ID value.","pos":[0,38]}]},{"pos":[62434,62586],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlElement\"></xref> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved."},{"pos":[63062,63115],"content":"Gets or sets the cipher mode used for XML encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the cipher mode used for XML encryption.","pos":[0,53]}]},{"pos":[63127,63365],"content":"Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption. You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption. You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.","pos":[0,238],"nodes":[{"content":"Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.","pos":[0,79]},{"content":"You can use this property to specify other cipher modes of the &lt;xref:System.Security.Cryptography.CipherMode&gt; enumeration, such as Cipher Feedback (CFB) mode.","pos":[80,238],"source":" You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode."}]}]},{"pos":[63538,63617],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Cryptography.CipherMode\"></xref> values."},{"pos":[64100,64154],"content":"Gets or sets the padding mode used for XML encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the padding mode used for XML encryption.","pos":[0,54]}]},{"pos":[64166,64386],"content":"ISO-10126 padding is the default padding mode for XML encryption. You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ISO-10126 padding is the default padding mode for XML encryption. You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.","pos":[0,220],"nodes":[{"content":"ISO-10126 padding is the default padding mode for XML encryption.","pos":[0,65]},{"content":"You can use this property to specify other padding modes of the &lt;xref:System.Security.Cryptography.PaddingMode&gt; enumeration, such as ANSI X9.23 or PKCS#5.","pos":[66,220],"source":" You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5."}]}]},{"pos":[64564,64699],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.PaddingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of padding used for encryption.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Cryptography.PaddingMode\"></xref> values that specifies the type of padding used for encryption."},{"pos":[65195,65255],"content":"Gets or sets the recipient of the encrypted key information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the recipient of the encrypted key information.","pos":[0,60]}]},{"pos":[65268,65650],"content":"You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.       Use the Recipient property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.       Use the Recipient property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.","pos":[0,380],"nodes":[{"content":"You can access the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; object referenced by a key name by examining the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A&gt; property.","pos":[0,201],"source":"You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property."},{"content":"Use the Recipient property to identify the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt; element that the current recipient can decrypt to retrieve a decryption key.","pos":[208,380],"source":"       Use the Recipient property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key."}]}]},{"pos":[65770,65817],"content":"The recipient of the encrypted key information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recipient of the encrypted key information.","pos":[0,47]}]},{"pos":[66454,66614],"content":"Replaces an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element with a specified decrypted sequence of bytes.","needQuote":true,"needEscape":true,"source":"Replaces an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element with a specified decrypted sequence of bytes."},{"pos":[66626,66735],"content":"The ReplaceData method replaces an <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element with the value of the <ph id=\"ph2\">`decryptedData`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The ReplaceData method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter."},{"pos":[67479,67597],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element to replace.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element to replace."},{"pos":[67667,67717],"content":"The decrypted data to replace <ph id=\"ph1\">`inputElement`</ph> with.","needQuote":true,"needEscape":true,"source":"The decrypted data to replace `inputElement` with."},{"pos":[67906,68175],"content":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>decryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">decryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[124,253],"source":"       -or-       The value of the <code>decryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[68883,69008],"content":"Replaces the specified element with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Replaces the specified element with the specified <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object."},{"pos":[69020,69142],"content":"The ReplaceElement method replaces the <ph id=\"ph1\">`inputElement`</ph> parameter with the value specified by the <ph id=\"ph2\">`encryptedData`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The ReplaceElement method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter."},{"pos":[69950,70084],"content":"The element to replace with an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedData&amp;gt;\" name=\"&amp;lt;EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The element to replace with an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element."},{"pos":[70187,70311],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to replace the <ph id=\"ph1\">`inputElement`</ph> parameter with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object to replace the `inputElement` parameter with."},{"pos":[70376,70575],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to replace only the contents of the element; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to replace the entire element.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to replace only the contents of the element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to replace the entire element."},{"pos":[70767,71036],"content":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"The value of the <code>inputElement</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[124,253],"source":"       -or-       The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[71444,71587],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used by the Document Object Model (DOM) to resolve external XML references.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Xml.XmlResolver\"></xref> object used by the Document Object Model (DOM) to resolve external XML references."},{"pos":[71599,71764],"content":"This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property contains an &lt;xref:System.Xml.XmlResolver&gt; object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.","pos":[0,165],"source":"This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas."}]},{"pos":[71907,71961],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlResolver\"></xref> object."},{"pos":[72503,72715],"content":"Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow. This might happen if the digital signature XML contains the URI which then points back to the original XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow. This might happen if the digital signature XML contains the URI which then points back to the original XML.","pos":[0,212],"nodes":[{"content":"Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.","pos":[0,104]},{"content":"This might happen if the digital signature XML contains the URI which then points back to the original XML.","pos":[105,212]}]}]},{"pos":[72839,72867],"content":"Returns <xref:System.Int32>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Int32&gt;.","pos":[0,28],"source":"Returns <xref:System.Int32>."}]},{"pos":[73436,73637],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","pos":[0,201],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).","pos":[0,177]},{"content":"This field is constant.","pos":[178,201]}]}]},{"pos":[73649,73743],"content":"The value of the XmlEncAES128KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes128\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES128KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes128\".","pos":[0,94]}]},{"pos":[73868,73880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74336,74519],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","pos":[0,183],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).","pos":[0,159]},{"content":"This field is constant.","pos":[160,183]}]}]},{"pos":[74531,74619],"content":"The value of the XmlEncAES128Url field is \"http://www.w3.org/2001/04/xmlenc#aes128-cbc\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES128Url field is \"http://www.w3.org/2001/04/xmlenc#aes128-cbc\".","pos":[0,88]}]},{"pos":[75290,75302],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75793,75994],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","pos":[0,201],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).","pos":[0,177]},{"content":"This field is constant.","pos":[178,201]}]}]},{"pos":[76006,76100],"content":"The value of the XmlEncAES192KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes192\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES192KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes192\".","pos":[0,94]}]},{"pos":[76225,76237],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76693,76876],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","pos":[0,183],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).","pos":[0,159]},{"content":"This field is constant.","pos":[160,183]}]}]},{"pos":[76888,76976],"content":"The value of the XmlEncAES192Url field is \"http://www.w3.org/2001/04/xmlenc#aes192-cbc\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES192Url field is \"http://www.w3.org/2001/04/xmlenc#aes192-cbc\".","pos":[0,88]}]},{"pos":[77647,77659],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78150,78351],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.","pos":[0,201],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).","pos":[0,177]},{"content":"This field is constant.","pos":[178,201]}]}]},{"pos":[78363,78457],"content":"The value of the XmlEncAES256KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes256\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES256KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes256\".","pos":[0,94]}]},{"pos":[78582,78594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79050,79233],"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.","pos":[0,183],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).","pos":[0,159]},{"content":"This field is constant.","pos":[160,183]}]}]},{"pos":[79245,79333],"content":"The value of the XmlEncAES256Url field is \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncAES256Url field is \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\".","pos":[0,88]}]},{"pos":[80004,80016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80457,80592],"content":"Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm. This field is constant.","pos":[0,135],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.","pos":[0,111]},{"content":"This field is constant.","pos":[112,135]}]}]},{"pos":[80604,80686],"content":"The value of the XmlEncDESUrl field is \"http://www.w3.org/2001/04/xmlenc#des-cbc\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncDESUrl field is \"http://www.w3.org/2001/04/xmlenc#des-cbc\".","pos":[0,82]}]},{"pos":[81351,81363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81859,81977],"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content. This field is constant.","pos":[0,118],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.","pos":[0,94]},{"content":"This field is constant.","pos":[95,118]}]}]},{"pos":[81989,82082],"content":"The value of the XmlEncElementContentUrl field is \"http://www.w3.org/2001/04/xmlenc#Content\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncElementContentUrl field is \"http://www.w3.org/2001/04/xmlenc#Content\".","pos":[0,93]}]},{"pos":[82208,82220],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82681,82794],"content":"Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element. This field is constant.","pos":[0,113],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.","pos":[0,89]},{"content":"This field is constant.","pos":[90,113]}]}]},{"pos":[82806,82892],"content":"The value of the XmlEncElementUrl field is \"http://www.w3.org/2001/04/xmlenc#Element\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncElementUrl field is \"http://www.w3.org/2001/04/xmlenc#Element\".","pos":[0,86]}]},{"pos":[83561,83573],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84059,84266],"content":"Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","pos":[0,183],"source":"Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element."},{"content":"This field is constant.","pos":[184,207]}]},{"pos":[84278,84374],"content":"The value of the XmlEncEncryptedKeyUrl field is \"http://www.w3.org/2001/04/xmlenc#EncryptedKey\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncEncryptedKeyUrl field is \"http://www.w3.org/2001/04/xmlenc#EncryptedKey\".","pos":[0,96]}]},{"pos":[84498,84510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84981,85105],"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing. This field is constant.","pos":[0,124],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.","pos":[0,100]},{"content":"This field is constant.","pos":[101,124]}]}]},{"pos":[85117,85198],"content":"The value of the XmlEncNamespaceUrl field is \"http://www.w3.org/2001/04/xmlenc#\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncNamespaceUrl field is \"http://www.w3.org/2001/04/xmlenc#\".","pos":[0,81]}]},{"pos":[85319,85331],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85782,85939],"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm. This field is constant.","pos":[0,157],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.","pos":[0,133]},{"content":"This field is constant.","pos":[134,157]}]}]},{"pos":[85951,86035],"content":"The value of the XmlEncRSA15Url field is \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncRSA15Url field is \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\".","pos":[0,84]}]},{"pos":[86767,86779],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87240,87401],"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm. This field is constant.","pos":[0,161],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.","pos":[0,137]},{"content":"This field is constant.","pos":[138,161]}]}]},{"pos":[87413,87506],"content":"The value of the XmlEncRSAOAEPUrl field is \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncRSAOAEPUrl field is \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\".","pos":[0,93]}]},{"pos":[87625,87637],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[88093,88202],"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm. This field is constant.","pos":[0,109],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.","pos":[0,85]},{"content":"This field is constant.","pos":[86,109]}]}]},{"pos":[88214,88298],"content":"The value of the XmlEncSHA256Url field is \"http://www.w3.org/2001/04/xmlenc#sha256\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncSHA256Url field is \"http://www.w3.org/2001/04/xmlenc#sha256\".","pos":[0,84]}]},{"pos":[88416,88428],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[88884,88993],"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm. This field is constant.","pos":[0,109],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.","pos":[0,85]},{"content":"This field is constant.","pos":[86,109]}]}]},{"pos":[89005,89089],"content":"The value of the XmlEncSHA512Url field is \"http://www.w3.org/2001/04/xmlenc#sha512\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncSHA512Url field is \"http://www.w3.org/2001/04/xmlenc#sha512\".","pos":[0,84]}]},{"pos":[89207,89219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89725,89845],"content":"Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm. This field is constant.","pos":[0,120],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.","pos":[0,96]},{"content":"This field is constant.","pos":[97,120]}]}]},{"pos":[89857,89957],"content":"The value of the XmlEncTripleDESKeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-tripledes\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncTripleDESKeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-tripledes\".","pos":[0,100]}]},{"pos":[90085,90097],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[90568,90680],"content":"Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm. This field is constant.","pos":[0,112],"nodes":[{"content":"Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.","pos":[0,88]},{"content":"This field is constant.","pos":[89,112]}]}]},{"pos":[90692,90786],"content":"The value of the XmlEncTripleDESUrl field is \"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the XmlEncTripleDESUrl field is \"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\".","pos":[0,94]}]},{"pos":[91460,91472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.EncryptedXml\n  id: EncryptedXml\n  children:\n  - System.Security.Cryptography.Xml.EncryptedXml.#ctor\n  - System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)\n  - System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)\n  - System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)\n  - System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings\n  - System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)\n  - System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument\n  - System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)\n  - System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  - System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  - System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence\n  - System.Security.Cryptography.Xml.EncryptedXml.Encoding\n  - System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)\n  - System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  - System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)\n  - System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  - System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  - System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  - System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  - System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  - System.Security.Cryptography.Xml.EncryptedXml.Mode\n  - System.Security.Cryptography.Xml.EncryptedXml.Padding\n  - System.Security.Cryptography.Xml.EncryptedXml.Recipient\n  - System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])\n  - System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)\n  - System.Security.Cryptography.Xml.EncryptedXml.Resolver\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  - System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl\n  langs:\n  - csharp\n  name: EncryptedXml\n  nameWithType: EncryptedXml\n  fullName: System.Security.Cryptography.Xml.EncryptedXml\n  type: Class\n  summary: Represents the process model for implementing XML encryption.\n  remarks: \"The EncryptedXml class is the main class used for XML encryption in the .NET Framework. XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data. The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.  \\n  \\n Use the EncryptedXml class whenever you need to share encrypted XML data between applications or organizations in a standard way. Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.  \\n  \\n XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data. The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.  \\n  \\n The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element. Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.  \\n  \\n Use one of the following methods to exchange key information:  \\n  \\n-   Do not include any key information. If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.  \\n  \\n-   Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element. Both parties must agree on the key location ahead of time and this location must be kept secret.  \\n  \\n-   Include a string name that maps to a key in the `<KeyName>` element. Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.  \\n  \\n-   Include an encrypted key in the `<EncryptedKey>` element. Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data. You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.\"\n  example:\n  - \"The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \\n  \\n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/t-system.security.crypto_84_1.cpp)]\\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_1.vb)]\\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/t-system.security.crypto_84_1.cs)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/t-system.security.crypto_84_2.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_2.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/t-system.security.crypto_84_2.cs)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_3.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/t-system.security.crypto_84_3.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/t-system.security.crypto_84_3.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_84_4.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_4.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/t-system.security.crypto_84_4.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/t-system.security.crypto_84_5.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/t-system.security.crypto_84_5.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/t-system.security.crypto_84_5.vb)]\"\n  syntax:\n    content: public class EncryptedXml\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptedXml()\n  nameWithType: EncryptedXml.EncryptedXml()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml()\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class.\n  remarks: This is the default constructor for the main class for XML encryption in the .NET Framework.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/m-system.security.crypto_40_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/m-system.security.crypto_40_1.cs)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_2.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/m-system.security.crypto_40_2.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/m-system.security.crypto_40_2.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_40_3.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_3.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_40_3.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/m-system.security.crypto_40_4.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/m-system.security.crypto_40_4.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/m-system.security.crypto_40_4.vb)]\"\n  syntax:\n    content: public EncryptedXml ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)\n  id: '#ctor(System.Xml.XmlDocument)'\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptedXml(XmlDocument)\n  nameWithType: EncryptedXml.EncryptedXml(XmlDocument)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class using the specified XML document.\n  remarks: Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.  The `document` parameter comprises the XML elements that later form the encrypted XML.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/bed2a575-be89-45fe-b5dc-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/bed2a575-be89-45fe-b5dc-_1.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/bed2a575-be89-45fe-b5dc-_1.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/bed2a575-be89-45fe-b5dc-_2.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/bed2a575-be89-45fe-b5dc-_2.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/bed2a575-be89-45fe-b5dc-_2.cpp)]\"\n  syntax:\n    content: public EncryptedXml (System.Xml.XmlDocument document);\n    parameters:\n    - id: document\n      type: System.Xml.XmlDocument\n      description: An <xref href=\"System.Xml.XmlDocument\"></xref> object used to initialize the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)\n  id: '#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)'\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptedXml(XmlDocument,Evidence)\n  nameWithType: EncryptedXml.EncryptedXml(XmlDocument,Evidence)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument,Evidence)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class using the specified XML document and evidence.\n  remarks: Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence. The `document` parameter comprises the XML elements that later form the encrypted XML.\n  syntax:\n    content: public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: document\n      type: System.Xml.XmlDocument\n      description: An <xref href=\"System.Xml.XmlDocument\"></xref> object used to initialize the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: An <xref href=\"System.Security.Policy.Evidence\"></xref> object associated with the <xref href=\"System.Xml.XmlDocument\"></xref> object.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)\n  id: AddKeyNameMapping(System.String,System.Object)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: AddKeyNameMapping(String,Object)\n  nameWithType: EncryptedXml.AddKeyNameMapping(String,Object)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(String,Object)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Defines a mapping between a key name and a symmetric key or an asymmetric key.\n  remarks: \"The AddKeyNameMapping method allows you to map a symmetric key or an asymmetric key to a string name. This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/cpp/a586411f-1e2f-4c31-afeb-_1.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/csharp/a586411f-1e2f-4c31-afeb-_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/visualbasic/a586411f-1e2f-4c31-afeb-_1.vb)]\"\n  syntax:\n    content: public void AddKeyNameMapping (string keyName, object keyObject);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The name to map to `keyObject`.\n    - id: keyObject\n      type: System.Object\n      description: The symmetric key to map to `keyName`.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>keyName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>keyObject</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <code>keyObject</code> parameter is not an RSA algorithm or a symmetric key.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings\n  id: ClearKeyNameMappings\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: ClearKeyNameMappings()\n  nameWithType: EncryptedXml.ClearKeyNameMappings()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Resets all key name mapping.\n  remarks: Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.\n  syntax:\n    content: public void ClearKeyNameMappings ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)\n  id: DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DecryptData(EncryptedData,SymmetricAlgorithm)\n  nameWithType: EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element using the specified symmetric algorithm.\n  remarks: \"Use the DecryptData method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.  \\n  \\n Note that the DecryptData method only decrypts top-level <`EncryptedData`> tags.  In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.  See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/ff5da254-8fa1-47c6-b66b-_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/ff5da254-8fa1-47c6-b66b-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/ff5da254-8fa1-47c6-b66b-_1.cs)]\"\n  syntax:\n    content: public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);\n    parameters:\n    - id: encryptedData\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: The data to decrypt.\n    - id: symmetricAlgorithm\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: The symmetric key used to decrypt `encryptedData`.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the raw decrypted plain text.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>encryptedData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument\n  id: DecryptDocument\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DecryptDocument()\n  nameWithType: EncryptedXml.DecryptDocument()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Decrypts all <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> elements of the XML document that were specified during initialization of the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> class.\n  remarks: \"The DecryptDocument method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization. After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.  \\n  \\n The DecryptDocument method decrypts only top-level `<EncryptedData>` elements.  If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the DecryptDocument method repeatedly until all the `<EncryptedData>` elements have been decrypted.  \\n  \\n> [!NOTE]\\n>  The DecryptDocument method decrypts only valid XML data. To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.  \\n  \\n To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider. If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \\\"Unknown Error\\\" will be thrown when you decrypt an XML document.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_11_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_1.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_11_1.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/m-system.security.crypto_11_2.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/m-system.security.crypto_11_2.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_2.vb)]  \\n  \\n The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.  \\n  \\n [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/add/codesnippet/visualbasic/m-system.security.crypto_11_3.vb)]\\n [!code-cs[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/add/codesnippet/csharp/m-system.security.crypto_11_3.cs)]\"\n  syntax:\n    content: public void DecryptDocument ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The cryptographic key used to decrypt the document was not found.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)\n  id: DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DecryptEncryptedKey(EncryptedKey)\n  nameWithType: EncryptedXml.DecryptEncryptedKey(EncryptedKey)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines the key represented by the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> element.\n  remarks: \"The DecryptEncryptedKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.  \\n  \\n This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.\"\n  syntax:\n    content: public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);\n    parameters:\n    - id: encryptedKey\n      type: System.Security.Cryptography.Xml.EncryptedKey\n      description: The <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> object that contains the key to retrieve.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the key.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>encryptedKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <code>encryptedKey</code> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  id: DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DecryptKey(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element using a symmetric algorithm.\n  remarks: The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document. This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).\n  syntax:\n    content: public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);\n    parameters:\n    - id: keyData\n      type: System.Byte[]\n      description: An array of bytes that represents an encrypted <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element.\n    - id: symmetricAlgorithm\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: The symmetric key used to decrypt `keyData`.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the plain text key.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>keyData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <code>symmetricAlgorithm</code> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  id: DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DecryptKey(Byte[],RSA,Boolean)\n  nameWithType: EncryptedXml.DecryptKey(Byte[],RSA,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],RSA,Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Decrypts an <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element using an asymmetric algorithm.\n  remarks: The DecryptKey method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document. This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).\n  syntax:\n    content: public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);\n    parameters:\n    - id: keyData\n      type: System.Byte[]\n      description: An array of bytes that represents an encrypted <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element.\n    - id: rsa\n      type: System.Security.Cryptography.RSA\n      description: The asymmetric key used to decrypt `keyData`.\n    - id: useOAEP\n      type: System.Boolean\n      description: A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the plain text key.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>keyData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>rsa</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence\n  id: DocumentEvidence\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: DocumentEvidence\n  nameWithType: EncryptedXml.DocumentEvidence\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the evidence of the <xref href=\"System.Xml.XmlDocument\"></xref> object from which the <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object is constructed.\n  remarks: If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the DocumentEvidence property.  If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.\n  syntax:\n    content: public System.Security.Policy.Evidence DocumentEvidence { get; set; }\n    return:\n      type: System.Security.Policy.Evidence\n      description: An <xref href=\"System.Security.Policy.Evidence\"></xref> object.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding\n  id: Encoding\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: EncryptedXml.Encoding\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encoding\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the encoding used for XML encryption.\n  remarks: UTF-8 encoding is the default encoding for XML encryption. You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.\n  syntax:\n    content: public System.Text.Encoding Encoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: An <xref:System.Text.Encoding> object.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Encoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Encrypt(XmlElement,X509Certificate2)\n  nameWithType: EncryptedXml.Encrypt(XmlElement,X509Certificate2)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,X509Certificate2)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts the outer XML of an element using the specified X.509 certificate.\n  remarks: \"The Encrypt method is a convenient way to encrypt the outer XML of an element using a certificate. This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object. The Encrypt method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.  \\n  \\n If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.  \\n  \\n To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider. If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an \\\"Unknown Error\\\" will be thrown when you decrypt an XML document.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using an X.509 certificate. This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/cpp/7bb06d56-e2dc-41d6-92d8-_1.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/csharp/7bb06d56-e2dc-41d6-92d8-_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/add/codesnippet/visualbasic/7bb06d56-e2dc-41d6-92d8-_1.vb)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: inputElement\n      type: System.Xml.XmlElement\n      description: The XML element to encrypt.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The X.509 certificate to use for encryption.\n    return:\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: An <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> element that represents the encrypted XML data.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>inputElement</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>certificate</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The value of the <code>certificate</code> parameter does not represent an RSA key algorithm.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)\n  id: Encrypt(System.Xml.XmlElement,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Encrypt(XmlElement,String)\n  nameWithType: EncryptedXml.Encrypt(XmlElement,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,String)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts the outer XML of an element using the specified key in the key mapping table.\n  remarks: \"This method is a convenient way to encrypt the outer XML of an element using a key name. If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.  \\n  \\n For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/cpp/2d0ce5a9-0f26-45bd-862b-_1.cpp)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/csharp/2d0ce5a9-0f26-45bd-862b-_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/add/codesnippet/visualbasic/2d0ce5a9-0f26-45bd-862b-_1.vb)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);\n    parameters:\n    - id: inputElement\n      type: System.Xml.XmlElement\n      description: The XML element to encrypt.\n    - id: keyName\n      type: System.String\n      description: A key name that can be found in the key mapping table.\n    return:\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: An <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that represents the encrypted XML data.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>inputElement</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>keyName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <code>keyName</code> parameter does not match a registered key name pair.  \\n  \\n -or-  \\n  \\n The cryptographic key described by the <code>keyName</code> parameter is not supported.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  id: EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptData(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts data in the specified byte array using the specified symmetric algorithm.\n  remarks: The returned byte array can be placed into a `<CipherValue>` element. This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_1.cs)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_2.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_2.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_2.cpp)]  \\n  \\n The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/b0a4c1de-8575-4f7f-8804-_3.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/b0a4c1de-8575-4f7f-8804-_3.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/b0a4c1de-8575-4f7f-8804-_3.cpp)]\"\n  syntax:\n    content: public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);\n    parameters:\n    - id: plaintext\n      type: System.Byte[]\n      description: The data to encrypt.\n    - id: symmetricAlgorithm\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: The symmetric algorithm to use for encryption.\n    return:\n      type: System.Byte[]\n      description: A byte array of encrypted data.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>plaintext</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The data could not be encrypted using the specified parameters.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)\n  id: EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n  nameWithType: EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts the specified element or its contents using the specified symmetric algorithm.\n  remarks: The returned byte array data is the value of the `<CipherValue>` element.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/58e919c7-3675-40a5-8022-_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/58e919c7-3675-40a5-8022-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/58e919c7-3675-40a5-8022-_1.cs)]\"\n  syntax:\n    content: public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);\n    parameters:\n    - id: inputElement\n      type: System.Xml.XmlElement\n      description: The element or its contents to encrypt.\n    - id: symmetricAlgorithm\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: The symmetric algorithm to use for encryption.\n    - id: content\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encrypt only the contents of the element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to encrypt the entire element.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the encrypted data.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>inputElement</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  id: EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptKey(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element.\n  remarks: \"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element. This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).  \\n  \\n Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.  You must manually create the `<EncryptedKey>` element within your document.\"\n  syntax:\n    content: public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);\n    parameters:\n    - id: keyData\n      type: System.Byte[]\n      description: The key to encrypt.\n    - id: symmetricAlgorithm\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: The symmetric key used to encrypt `keyData`.\n    return:\n      type: System.Byte[]\n      description: A byte array that represents the encrypted value of the <code>keyData</code> parameter.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>keyData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithm</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <code>symmetricAlgorithm</code> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  id: EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: EncryptKey(Byte[],RSA,Boolean)\n  nameWithType: EncryptedXml.EncryptKey(Byte[],RSA,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],RSA,Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Encrypts the key that a recipient uses to decrypt an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element.\n  remarks: \"Use the EncryptKey method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element. This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).  \\n  \\n Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.  You must manually create the `<EncryptedKey>` element within your document.\"\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/f1ea466e-2516-4b63-bd31-_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/f1ea466e-2516-4b63-bd31-_1.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/f1ea466e-2516-4b63-bd31-_1.cpp)]\"\n  syntax:\n    content: public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);\n    parameters:\n    - id: keyData\n      type: System.Byte[]\n      description: The key to encrypt.\n    - id: rsa\n      type: System.Security.Cryptography.RSA\n      description: The asymmetric key used to encrypt `keyData`.\n    - id: useOAEP\n      type: System.Boolean\n      description: A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).\n    return:\n      type: System.Byte[]\n      description: A byte array that represents the encrypted value of the <code>keyData</code> parameter.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>keyData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>rsa</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  id: GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: GetDecryptionIV(EncryptedData,String)\n  nameWithType: EncryptedXml.GetDecryptionIV(EncryptedData,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(EncryptedData,String)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Retrieves the decryption initialization vector (IV) from an <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object.\n  remarks: \"Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV). The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.  \\n  \\n For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.\"\n  syntax:\n    content: public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);\n    parameters:\n    - id: encryptedData\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that contains the initialization vector (IV) to retrieve.\n    - id: symmetricAlgorithmUri\n      type: System.String\n      description: The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the `encryptedData` value.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the decryption initialization vector (IV).\n  overload: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <code>encryptedData</code> parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null.  \\n  \\n -or-  \\n  \\n The value of the <code>symmetricAlgorithmUrisymAlgUri</code> parameter is not a supported algorithm.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  id: GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: GetDecryptionKey(EncryptedData,String)\n  nameWithType: EncryptedXml.GetDecryptionKey(EncryptedData,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData,String)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Retrieves the decryption key from the specified <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object.\n  remarks: Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data. If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping. Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the GetDecryptionKey method.\n  syntax:\n    content: public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);\n    parameters:\n    - id: encryptedData\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object that contains the decryption key to retrieve.\n    - id: symmetricAlgorithmUri\n      type: System.String\n      description: The size of the decryption key to retrieve.\n    return:\n      type: System.Security.Cryptography.SymmetricAlgorithm\n      description: A <xref href=\"System.Security.Cryptography.SymmetricAlgorithm\"></xref> object associated with the decryption key.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>encryptedData</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The encryptedData parameter has an <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*> property that is null.  \\n  \\n -or-  \\n  \\n The encrypted key cannot be retrieved using the specified parameters.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  id: GetIdElement(System.Xml.XmlDocument,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: GetIdElement(XmlDocument,String)\n  nameWithType: EncryptedXml.GetIdElement(XmlDocument,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(XmlDocument,String)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines how to resolve internal Uniform Resource Identifier (URI) references.\n  remarks: The GetIdElement method determines how to resolve internal Uniform Resource Identifiers (URIs). It looks for elements with a specified value or for elements with an ID attribute that has a specified value.\n  syntax:\n    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);\n    parameters:\n    - id: document\n      type: System.Xml.XmlDocument\n      description: An <xref href=\"System.Xml.XmlDocument\"></xref> object that contains an element with an ID value.\n    - id: idValue\n      type: System.String\n      description: A string that represents the ID value.\n    return:\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode\n  id: Mode\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: EncryptedXml.Mode\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Mode\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the cipher mode used for XML encryption.\n  remarks: Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption. You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.\n  syntax:\n    content: public System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: One of the <xref href=\"System.Security.Cryptography.CipherMode\"></xref> values.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Mode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding\n  id: Padding\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: EncryptedXml.Padding\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Padding\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the padding mode used for XML encryption.\n  remarks: ISO-10126 padding is the default padding mode for XML encryption. You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.\n  syntax:\n    content: public System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: One of the <xref href=\"System.Security.Cryptography.PaddingMode\"></xref> values that specifies the type of padding used for encryption.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Padding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient\n  id: Recipient\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Recipient\n  nameWithType: EncryptedXml.Recipient\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Recipient\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the recipient of the encrypted key information.\n  remarks: \"You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.  \\n  \\n Use the Recipient property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.\"\n  syntax:\n    content: public string Recipient { get; set; }\n    return:\n      type: System.String\n      description: The recipient of the encrypted key information.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Recipient*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])\n  id: ReplaceData(System.Xml.XmlElement,System.Byte[])\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: ReplaceData(XmlElement,Byte[])\n  nameWithType: EncryptedXml.ReplaceData(XmlElement,Byte[])\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(XmlElement,Byte[])\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Replaces an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element with a specified decrypted sequence of bytes.\n  remarks: The ReplaceData method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/0a737bfb-9606-4369-9de9-_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/0a737bfb-9606-4369-9de9-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/0a737bfb-9606-4369-9de9-_1.cs)]\"\n  syntax:\n    content: public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);\n    parameters:\n    - id: inputElement\n      type: System.Xml.XmlElement\n      description: The <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element to replace.\n    - id: decryptedData\n      type: System.Byte[]\n      description: The decrypted data to replace `inputElement` with.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>inputElement</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>decryptedData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)\n  id: ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: ReplaceElement(XmlElement,EncryptedData,Boolean)\n  nameWithType: EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Replaces the specified element with the specified <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object.\n  remarks: The ReplaceElement method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/3d927817-a643-42d1-b283-_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/3d927817-a643-42d1-b283-_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/3d927817-a643-42d1-b283-_1.cs)]\"\n  syntax:\n    content: public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);\n    parameters:\n    - id: inputElement\n      type: System.Xml.XmlElement\n      description: The element to replace with an <xref uid=\"langword_csharp_&lt;EncryptedData&gt;\" name=\"&lt;EncryptedData&gt;\" href=\"\"></xref> element.\n    - id: encryptedData\n      type: System.Security.Cryptography.Xml.EncryptedData\n      description: The <xref href=\"System.Security.Cryptography.Xml.EncryptedData\"></xref> object to replace the `inputElement` parameter with.\n    - id: content\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to replace only the contents of the element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to replace the entire element.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The value of the <code>inputElement</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <code>encryptedData</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver\n  id: Resolver\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: Resolver\n  nameWithType: EncryptedXml.Resolver\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Resolver\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the <xref href=\"System.Xml.XmlResolver\"></xref> object used by the Document Object Model (DOM) to resolve external XML references.\n  remarks: This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.\n  syntax:\n    content: public System.Xml.XmlResolver Resolver { get; set; }\n    return:\n      type: System.Xml.XmlResolver\n      description: An <xref href=\"System.Xml.XmlResolver\"></xref> object.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.Resolver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth\n  id: XmlDSigSearchDepth\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlDSigSearchDepth\n  nameWithType: EncryptedXml.XmlDSigSearchDepth\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow. This might happen if the digital signature XML contains the URI which then points back to the original XML.\n  syntax:\n    content: public int XmlDSigSearchDepth { get; set; }\n    return:\n      type: System.Int32\n      description: Returns <xref:System.Int32>.\n  overload: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl\n  id: XmlEncAES128KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES128KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES128KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.\n  remarks: The value of the XmlEncAES128KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes128\".\n  syntax:\n    content: public const string XmlEncAES128KeyWrapUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url\n  id: XmlEncAES128Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES128Url\n  nameWithType: EncryptedXml.XmlEncAES128Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.\n  remarks: The value of the XmlEncAES128Url field is \"http://www.w3.org/2001/04/xmlenc#aes128-cbc\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_11_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_11_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_11_1.cs)]\"\n  syntax:\n    content: public const string XmlEncAES128Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl\n  id: XmlEncAES192KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES192KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES192KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.\n  remarks: The value of the XmlEncAES192KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes192\".\n  syntax:\n    content: public const string XmlEncAES192KeyWrapUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url\n  id: XmlEncAES192Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES192Url\n  nameWithType: EncryptedXml.XmlEncAES192Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.\n  remarks: The value of the XmlEncAES192Url field is \"http://www.w3.org/2001/04/xmlenc#aes192-cbc\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_10_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_10_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_10_1.cs)]\"\n  syntax:\n    content: public const string XmlEncAES192Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl\n  id: XmlEncAES256KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES256KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES256KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm). This field is constant.\n  remarks: The value of the XmlEncAES256KeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-aes256\".\n  syntax:\n    content: public const string XmlEncAES256KeyWrapUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url\n  id: XmlEncAES256Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncAES256Url\n  nameWithType: EncryptedXml.XmlEncAES256Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm). This field is constant.\n  remarks: The value of the XmlEncAES256Url field is \"http://www.w3.org/2001/04/xmlenc#aes256-cbc\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_12_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_12_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_12_1.cs)]\"\n  syntax:\n    content: public const string XmlEncAES256Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl\n  id: XmlEncDESUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncDESUrl\n  nameWithType: EncryptedXml.XmlEncDESUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm. This field is constant.\n  remarks: The value of the XmlEncDESUrl field is \"http://www.w3.org/2001/04/xmlenc#des-cbc\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_5_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_5_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_5_1.cs)]\"\n  syntax:\n    content: public const string XmlEncDESUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl\n  id: XmlEncElementContentUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncElementContentUrl\n  nameWithType: EncryptedXml.XmlEncElementContentUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content. This field is constant.\n  remarks: The value of the XmlEncElementContentUrl field is \"http://www.w3.org/2001/04/xmlenc#Content\".\n  syntax:\n    content: public const string XmlEncElementContentUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl\n  id: XmlEncElementUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncElementUrl\n  nameWithType: EncryptedXml.XmlEncElementUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element. This field is constant.\n  remarks: The value of the XmlEncElementUrl field is \"http://www.w3.org/2001/04/xmlenc#Element\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_7_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_7_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_7_1.cs)]\"\n  syntax:\n    content: public const string XmlEncElementUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl\n  id: XmlEncEncryptedKeyUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncEncryptedKeyUrl\n  nameWithType: EncryptedXml.XmlEncEncryptedKeyUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element. This field is constant.\n  remarks: The value of the XmlEncEncryptedKeyUrl field is \"http://www.w3.org/2001/04/xmlenc#EncryptedKey\".\n  syntax:\n    content: public const string XmlEncEncryptedKeyUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl\n  id: XmlEncNamespaceUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncNamespaceUrl\n  nameWithType: EncryptedXml.XmlEncNamespaceUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing. This field is constant.\n  remarks: The value of the XmlEncNamespaceUrl field is \"http://www.w3.org/2001/04/xmlenc#\".\n  syntax:\n    content: public const string XmlEncNamespaceUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\n  id: XmlEncRSA15Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncRSA15Url\n  nameWithType: EncryptedXml.XmlEncRSA15Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm. This field is constant.\n  remarks: The value of the XmlEncRSA15Url field is \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using an asymmetric key. This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/f-system.security.crypto_2_1.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_2_1.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/f-system.security.crypto_2_1.cpp)]\"\n  syntax:\n    content: public const string XmlEncRSA15Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\n  id: XmlEncRSAOAEPUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncRSAOAEPUrl\n  nameWithType: EncryptedXml.XmlEncRSAOAEPUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm. This field is constant.\n  remarks: The value of the XmlEncRSAOAEPUrl field is \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\".\n  syntax:\n    content: public const string XmlEncRSAOAEPUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url\n  id: XmlEncSHA256Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncSHA256Url\n  nameWithType: EncryptedXml.XmlEncSHA256Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm. This field is constant.\n  remarks: The value of the XmlEncSHA256Url field is \"http://www.w3.org/2001/04/xmlenc#sha256\".\n  syntax:\n    content: public const string XmlEncSHA256Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url\n  id: XmlEncSHA512Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncSHA512Url\n  nameWithType: EncryptedXml.XmlEncSHA512Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm. This field is constant.\n  remarks: The value of the XmlEncSHA512Url field is \"http://www.w3.org/2001/04/xmlenc#sha512\".\n  syntax:\n    content: public const string XmlEncSHA512Url;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  id: XmlEncTripleDESKeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncTripleDESKeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm. This field is constant.\n  remarks: The value of the XmlEncTripleDESKeyWrapUrl field is \"http://www.w3.org/2001/04/xmlenc#kw-tripledes\".\n  syntax:\n    content: public const string XmlEncTripleDESKeyWrapUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl\n  id: XmlEncTripleDESUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  langs:\n  - csharp\n  name: XmlEncTripleDESUrl\n  nameWithType: EncryptedXml.XmlEncTripleDESUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm. This field is constant.\n  remarks: The value of the XmlEncTripleDESUrl field is \"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\".\n  example:\n  - \"The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/f-system.security.crypto_13_1.cpp)]\\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/f-system.security.crypto_13_1.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/f-system.security.crypto_13_1.cs)]\"\n  syntax:\n    content: public const string XmlEncTripleDESUrl;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptedXml()\n  nameWithType: EncryptedXml.EncryptedXml()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml()\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptedXml(XmlDocument)\n  nameWithType: EncryptedXml.EncryptedXml(XmlDocument)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument)\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptedXml(XmlDocument,Evidence)\n  nameWithType: EncryptedXml.EncryptedXml(XmlDocument,Evidence)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptedXml(XmlDocument,Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: AddKeyNameMapping(String,Object)\n  nameWithType: EncryptedXml.AddKeyNameMapping(String,Object)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ClearKeyNameMappings()\n  nameWithType: EncryptedXml.ClearKeyNameMappings()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings()\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptData(EncryptedData,SymmetricAlgorithm)\n  nameWithType: EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptData(EncryptedData,SymmetricAlgorithm)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.Xml.EncryptedData\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: EncryptedData\n  nameWithType: EncryptedData\n  fullName: System.Security.Cryptography.Xml.EncryptedData\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SymmetricAlgorithm\n  nameWithType: SymmetricAlgorithm\n  fullName: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptDocument()\n  nameWithType: EncryptedXml.DecryptDocument()\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptEncryptedKey(EncryptedKey)\n  nameWithType: EncryptedXml.DecryptEncryptedKey(EncryptedKey)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey)\n- uid: System.Security.Cryptography.Xml.EncryptedKey\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: EncryptedKey\n  nameWithType: EncryptedKey\n  fullName: System.Security.Cryptography.Xml.EncryptedKey\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptKey(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],SymmetricAlgorithm)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptKey(Byte[],RSA,Boolean)\n  nameWithType: EncryptedXml.DecryptKey(Byte[],RSA,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[],RSA,Boolean)\n- uid: System.Security.Cryptography.RSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DocumentEvidence\n  nameWithType: EncryptedXml.DocumentEvidence\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Encoding\n  nameWithType: EncryptedXml.Encoding\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Encrypt(XmlElement,X509Certificate2)\n  nameWithType: EncryptedXml.Encrypt(XmlElement,X509Certificate2)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,X509Certificate2)\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Encrypt(XmlElement,String)\n  nameWithType: EncryptedXml.Encrypt(XmlElement,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement,String)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptData(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(Byte[],SymmetricAlgorithm)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n  nameWithType: EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptData(XmlElement,SymmetricAlgorithm,Boolean)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptKey(Byte[],SymmetricAlgorithm)\n  nameWithType: EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],SymmetricAlgorithm)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptKey(Byte[],RSA,Boolean)\n  nameWithType: EncryptedXml.EncryptKey(Byte[],RSA,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(Byte[],RSA,Boolean)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetDecryptionIV(EncryptedData,String)\n  nameWithType: EncryptedXml.GetDecryptionIV(EncryptedData,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(EncryptedData,String)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetDecryptionKey(EncryptedData,String)\n  nameWithType: EncryptedXml.GetDecryptionKey(EncryptedData,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData,String)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetIdElement(XmlDocument,String)\n  nameWithType: EncryptedXml.GetIdElement(XmlDocument,String)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(XmlDocument,String)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Mode\n  nameWithType: EncryptedXml.Mode\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Padding\n  nameWithType: EncryptedXml.Padding\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Recipient\n  nameWithType: EncryptedXml.Recipient\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Recipient\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ReplaceData(XmlElement,Byte[])\n  nameWithType: EncryptedXml.ReplaceData(XmlElement,Byte[])\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(XmlElement,Byte[])\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ReplaceElement(XmlElement,EncryptedData,Boolean)\n  nameWithType: EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(XmlElement,EncryptedData,Boolean)\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Resolver\n  nameWithType: EncryptedXml.Resolver\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.Resolver\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlDSigSearchDepth\n  nameWithType: EncryptedXml.XmlDSigSearchDepth\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES128KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES128KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES128Url\n  nameWithType: EncryptedXml.XmlEncAES128Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES192KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES192KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES192Url\n  nameWithType: EncryptedXml.XmlEncAES192Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES256KeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncAES256KeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncAES256Url\n  nameWithType: EncryptedXml.XmlEncAES256Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncDESUrl\n  nameWithType: EncryptedXml.XmlEncDESUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncElementContentUrl\n  nameWithType: EncryptedXml.XmlEncElementContentUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncElementUrl\n  nameWithType: EncryptedXml.XmlEncElementUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncEncryptedKeyUrl\n  nameWithType: EncryptedXml.XmlEncEncryptedKeyUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncNamespaceUrl\n  nameWithType: EncryptedXml.XmlEncNamespaceUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncRSA15Url\n  nameWithType: EncryptedXml.XmlEncRSA15Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncRSAOAEPUrl\n  nameWithType: EncryptedXml.XmlEncRSAOAEPUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncSHA256Url\n  nameWithType: EncryptedXml.XmlEncSHA256Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncSHA512Url\n  nameWithType: EncryptedXml.XmlEncSHA512Url\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncTripleDESKeyWrapUrl\n  nameWithType: EncryptedXml.XmlEncTripleDESKeyWrapUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlEncTripleDESUrl\n  nameWithType: EncryptedXml.XmlEncTripleDESUrl\n  fullName: System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl\n- uid: System.Security.Cryptography.Xml.EncryptedXml.#ctor*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptedXml\n  nameWithType: EncryptedXml.EncryptedXml\n- uid: System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: AddKeyNameMapping\n  nameWithType: EncryptedXml.AddKeyNameMapping\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ClearKeyNameMappings\n  nameWithType: EncryptedXml.ClearKeyNameMappings\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptData*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptData\n  nameWithType: EncryptedXml.DecryptData\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptDocument\n  nameWithType: EncryptedXml.DecryptDocument\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptEncryptedKey\n  nameWithType: EncryptedXml.DecryptEncryptedKey\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DecryptKey*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DecryptKey\n  nameWithType: EncryptedXml.DecryptKey\n- uid: System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: DocumentEvidence\n  nameWithType: EncryptedXml.DocumentEvidence\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encoding*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Encoding\n  nameWithType: EncryptedXml.Encoding\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Encrypt*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Encrypt\n  nameWithType: EncryptedXml.Encrypt\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptData*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptData\n  nameWithType: EncryptedXml.EncryptData\n- uid: System.Security.Cryptography.Xml.EncryptedXml.EncryptKey*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: EncryptKey\n  nameWithType: EncryptedXml.EncryptKey\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetDecryptionIV\n  nameWithType: EncryptedXml.GetDecryptionIV\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetDecryptionKey\n  nameWithType: EncryptedXml.GetDecryptionKey\n- uid: System.Security.Cryptography.Xml.EncryptedXml.GetIdElement*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: GetIdElement\n  nameWithType: EncryptedXml.GetIdElement\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Mode*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Mode\n  nameWithType: EncryptedXml.Mode\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Padding*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Padding\n  nameWithType: EncryptedXml.Padding\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Recipient*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Recipient\n  nameWithType: EncryptedXml.Recipient\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceData*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ReplaceData\n  nameWithType: EncryptedXml.ReplaceData\n- uid: System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: ReplaceElement\n  nameWithType: EncryptedXml.ReplaceElement\n- uid: System.Security.Cryptography.Xml.EncryptedXml.Resolver*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: Resolver\n  nameWithType: EncryptedXml.Resolver\n- uid: System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth*\n  parent: System.Security.Cryptography.Xml.EncryptedXml\n  isExternal: false\n  name: XmlDSigSearchDepth\n  nameWithType: EncryptedXml.XmlDSigSearchDepth\n"}