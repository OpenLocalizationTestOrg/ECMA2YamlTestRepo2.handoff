{"nodes":[{"pos":[634,785],"content":"Defines constants that inform <xref:System.Windows.Forms.ContainerControl.ValidateChildren*> about how it should validate a container's child controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines constants that inform &lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren*&gt; about how it should validate a container's child controls.","pos":[0,151],"source":"Defines constants that inform <xref:System.Windows.Forms.ContainerControl.ValidateChildren*> about how it should validate a container's child controls."}]},{"pos":[798,1720],"content":"By default, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> will validate all enabled controls in a container, such as a form. Use this enumeration to restrict the types of controls whose <xref:System.Windows.Forms.Control.Validating> event is raised.       You can combine these enumerated values together with a bitwise OR operation. Combining parameters with a bitwise OR operator will result in a logical AND operation. For example, calling `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` will only raise the <xref:System.Windows.Forms.Control.Validating> event on controls that are both immediate children of the container AND are enabled.       If you do not specify ImmediateChildren when you call <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, the method will require that you validate all child controls in the control hierarchy.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, &lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt; will validate all enabled controls in a container, such as a form.","pos":[0,143],"source":"By default, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> will validate all enabled controls in a container, such as a form."},{"content":"Use this enumeration to restrict the types of controls whose &lt;xref:System.Windows.Forms.Control.Validating&gt; event is raised.","pos":[144,268],"source":" Use this enumeration to restrict the types of controls whose <xref:System.Windows.Forms.Control.Validating> event is raised."},{"content":"You can combine these enumerated values together with a bitwise OR operation.","pos":[275,352]},{"content":"Combining parameters with a bitwise OR operator will result in a logical AND operation.","pos":[353,440]},{"content":"For example, calling <ph id=\"ph1\">`ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)`</ph> will only raise the &lt;xref:System.Windows.Forms.Control.Validating&gt; event on controls that are both immediate children of the container AND are enabled.","pos":[441,705],"source":" For example, calling `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` will only raise the <xref:System.Windows.Forms.Control.Validating> event on controls that are both immediate children of the container AND are enabled."},{"content":"If you do not specify ImmediateChildren when you call &lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt;, the method will require that you validate all child controls in the control hierarchy.","pos":[712,918],"source":"       If you do not specify ImmediateChildren when you call <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, the method will require that you validate all child controls in the control hierarchy."}]},{"pos":[2693,2849],"content":"Validates child controls whose &lt;xref:System.Windows.Forms.Control.Enabled*&gt; property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Validates child controls whose <xref:System.Windows.Forms.Control.Enabled*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[2967,2979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3438,4154],"content":"Validates child controls that are directly hosted within the container. Does not validate any of the children of these children. For example, if you have a <xref href=\"System.Windows.Forms.Form\"></xref> that contains a custom <xref href=\"System.Windows.Forms.UserControl\"></xref>, and the <xref href=\"System.Windows.Forms.UserControl\"></xref> contains a <xref href=\"System.Windows.Forms.Button\"></xref>, using ImmediateChildren will cause the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.UserControl\"></xref> to occur, but not the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.Button\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates child controls that are directly hosted within the container.","pos":[0,71]},{"content":"Does not validate any of the children of these children.","pos":[72,128]},{"content":"For example, if you have a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a custom <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.UserControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.UserControl\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> contains a <bpt id=\"p4\">&lt;xref href=\"System.Windows.Forms.Button\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, using ImmediateChildren will cause the <bpt id=\"p5\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> event of the <bpt id=\"p6\">&lt;xref href=\"System.Windows.Forms.UserControl\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> to occur, but not the <bpt id=\"p7\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> event of the <bpt id=\"p8\">&lt;xref href=\"System.Windows.Forms.Button\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","pos":[129,716],"source":" For example, if you have a <xref href=\"System.Windows.Forms.Form\"></xref> that contains a custom <xref href=\"System.Windows.Forms.UserControl\"></xref>, and the <xref href=\"System.Windows.Forms.UserControl\"></xref> contains a <xref href=\"System.Windows.Forms.Button\"></xref>, using ImmediateChildren will cause the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.UserControl\"></xref> to occur, but not the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.Button\"></xref>."}]},{"pos":[4282,4294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4688,4798],"content":"Validates all child controls, and all children of these child controls, regardless of their property settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates all child controls, and all children of these child controls, regardless of their property settings.","pos":[0,110]}]},{"pos":[4913,4925],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5349,5395],"content":"Validates child controls that can be selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates child controls that can be selected.","pos":[0,46]}]},{"pos":[5516,5528],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5937,6102],"content":"Validates child controls that have a <xref:System.Windows.Forms.Control.TabStop*> value set, which means that the user can navigate to the control using the TAB key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates child controls that have a &lt;xref:System.Windows.Forms.Control.TabStop*&gt; value set, which means that the user can navigate to the control using the TAB key.","pos":[0,165],"source":"Validates child controls that have a <xref:System.Windows.Forms.Control.TabStop*> value set, which means that the user can navigate to the control using the TAB key."}]},{"pos":[6220,6232],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6641,6797],"content":"Validates child controls whose &lt;xref:System.Windows.Forms.Control.Visible*&gt; property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Validates child controls whose <xref:System.Windows.Forms.Control.Visible*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[6915,6927],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ValidationConstraints\n  id: ValidationConstraints\n  children:\n  - System.Windows.Forms.ValidationConstraints.Enabled\n  - System.Windows.Forms.ValidationConstraints.ImmediateChildren\n  - System.Windows.Forms.ValidationConstraints.None\n  - System.Windows.Forms.ValidationConstraints.Selectable\n  - System.Windows.Forms.ValidationConstraints.TabStop\n  - System.Windows.Forms.ValidationConstraints.Visible\n  langs:\n  - csharp\n  name: ValidationConstraints\n  nameWithType: ValidationConstraints\n  fullName: System.Windows.Forms.ValidationConstraints\n  type: Enum\n  summary: Defines constants that inform <xref:System.Windows.Forms.ContainerControl.ValidateChildren*> about how it should validate a container's child controls.\n  remarks: \"By default, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> will validate all enabled controls in a container, such as a form. Use this enumeration to restrict the types of controls whose <xref:System.Windows.Forms.Control.Validating> event is raised.  \\n  \\n You can combine these enumerated values together with a bitwise OR operation. Combining parameters with a bitwise OR operator will result in a logical AND operation. For example, calling `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` will only raise the <xref:System.Windows.Forms.Control.Validating> event on controls that are both immediate children of the container AND are enabled.  \\n  \\n If you do not specify ImmediateChildren when you call <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, the method will require that you validate all child controls in the control hierarchy.\"\n  example:\n  - \"The following code example will only cause the <xref:System.Windows.Forms.Control.Validating> event to be raised for immediate children of the form whose <xref:System.Windows.Forms.Control.Enabled%2A> property is `true`.  \\n  \\n [!code-vb[ValidateChildrenWithConstraints#1](~/add/codesnippet/visualbasic/t-system.windows.forms.v_5_1.vb)]\\n [!code-cs[ValidateChildrenWithConstraints#1](~/add/codesnippet/csharp/t-system.windows.forms.v_5_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum ValidationConstraints\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.Enabled\n  id: Enabled\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: ValidationConstraints.Enabled\n  fullName: System.Windows.Forms.ValidationConstraints.Enabled\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates child controls whose <xref:System.Windows.Forms.Control.Enabled*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: Enabled\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.ImmediateChildren\n  id: ImmediateChildren\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: ImmediateChildren\n  nameWithType: ValidationConstraints.ImmediateChildren\n  fullName: System.Windows.Forms.ValidationConstraints.ImmediateChildren\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates child controls that are directly hosted within the container. Does not validate any of the children of these children. For example, if you have a <xref href=\"System.Windows.Forms.Form\"></xref> that contains a custom <xref href=\"System.Windows.Forms.UserControl\"></xref>, and the <xref href=\"System.Windows.Forms.UserControl\"></xref> contains a <xref href=\"System.Windows.Forms.Button\"></xref>, using ImmediateChildren will cause the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.UserControl\"></xref> to occur, but not the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event of the <xref href=\"System.Windows.Forms.Button\"></xref>.\n  syntax:\n    content: ImmediateChildren\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.None\n  id: None\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: None\n  nameWithType: ValidationConstraints.None\n  fullName: System.Windows.Forms.ValidationConstraints.None\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates all child controls, and all children of these child controls, regardless of their property settings.\n  syntax:\n    content: None\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.Selectable\n  id: Selectable\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: Selectable\n  nameWithType: ValidationConstraints.Selectable\n  fullName: System.Windows.Forms.ValidationConstraints.Selectable\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates child controls that can be selected.\n  syntax:\n    content: Selectable\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.TabStop\n  id: TabStop\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: TabStop\n  nameWithType: ValidationConstraints.TabStop\n  fullName: System.Windows.Forms.ValidationConstraints.TabStop\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates child controls that have a <xref:System.Windows.Forms.Control.TabStop*> value set, which means that the user can navigate to the control using the TAB key.\n  syntax:\n    content: TabStop\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ValidationConstraints.Visible\n  id: Visible\n  parent: System.Windows.Forms.ValidationConstraints\n  langs:\n  - csharp\n  name: Visible\n  nameWithType: ValidationConstraints.Visible\n  fullName: System.Windows.Forms.ValidationConstraints.Visible\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Validates child controls whose <xref:System.Windows.Forms.Control.Visible*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: Visible\n    return:\n      type: System.Windows.Forms.ValidationConstraints\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Windows.Forms.ValidationConstraints.Enabled\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: Enabled\n  nameWithType: ValidationConstraints.Enabled\n  fullName: System.Windows.Forms.ValidationConstraints.Enabled\n- uid: System.Windows.Forms.ValidationConstraints\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ValidationConstraints\n  nameWithType: ValidationConstraints\n  fullName: System.Windows.Forms.ValidationConstraints\n- uid: System.Windows.Forms.ValidationConstraints.ImmediateChildren\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: ImmediateChildren\n  nameWithType: ValidationConstraints.ImmediateChildren\n  fullName: System.Windows.Forms.ValidationConstraints.ImmediateChildren\n- uid: System.Windows.Forms.ValidationConstraints.None\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: None\n  nameWithType: ValidationConstraints.None\n  fullName: System.Windows.Forms.ValidationConstraints.None\n- uid: System.Windows.Forms.ValidationConstraints.Selectable\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: Selectable\n  nameWithType: ValidationConstraints.Selectable\n  fullName: System.Windows.Forms.ValidationConstraints.Selectable\n- uid: System.Windows.Forms.ValidationConstraints.TabStop\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: TabStop\n  nameWithType: ValidationConstraints.TabStop\n  fullName: System.Windows.Forms.ValidationConstraints.TabStop\n- uid: System.Windows.Forms.ValidationConstraints.Visible\n  parent: System.Windows.Forms.ValidationConstraints\n  isExternal: false\n  name: Visible\n  nameWithType: ValidationConstraints.Visible\n  fullName: System.Windows.Forms.ValidationConstraints.Visible\n"}