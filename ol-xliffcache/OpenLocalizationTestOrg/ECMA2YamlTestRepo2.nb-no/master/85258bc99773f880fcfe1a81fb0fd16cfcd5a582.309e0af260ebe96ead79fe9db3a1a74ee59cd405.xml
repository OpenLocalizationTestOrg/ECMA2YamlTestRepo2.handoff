{"nodes":[{"pos":[660,830],"content":"This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.","pos":[0,170],"nodes":[{"content":"This class converts a parameter in a query string to an object of the appropriate type.","pos":[0,87]},{"content":"It can also convert a parameter from an object to its query string representation.","pos":[88,170]}]}]},{"pos":[843,2772],"content":"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.      ```   [ServiceContract]   interface Calculator   {      [WebGet(UriTemplate=\"Add?n1={n1}&n2={n2}\")]      [OperationContract]      long Add(long n1, long n2);   }   ```       A [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService. The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5. The QueryStringConverter receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.       You can derive a class from QueryStringConverter to control how query string parameters are mapped into a service operation's parameters.       The QueryStringConverter supports the following types by default:      -   <xref:System.Byte>      -   <xref:System.SByte>      -   <xref:System.Int16>      -   <xref:System.Int32>      -   <xref:System.Int64>      -   <xref:System.UInt16>      -   <xref:System.UInt32>      -   <xref:System.UInt64>      -   <xref:System.Single>      -   <xref:System.Double>      -   <xref:System.Char>      -   <xref:System.Decimal>      -   <xref:System.Boolean>      -   <xref:System.String>      -   <xref:System.DateTime>      -   <xref:System.TimeSpan>      -   <xref:System.Guid>      -   <xref:System.Byte> array      -   <xref:System.Uri>      -   <xref:System.Object>      -   <xref:System.DateTimeOffset>      -   Enums      -   Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Parameters can be specified in a query string within a URL.","pos":[0,59]},{"content":"This class takes those parameters specified in a string and converts them into objects.","pos":[60,147]},{"content":"For example, the following contract is defined.","pos":[148,195]},{"content":"<ph id=\"ph1\">```   [ServiceContract]   interface Calculator   {      [WebGet(UriTemplate=\"Add?n1={n1}&amp;n2={n2}\")]      [OperationContract]      long Add(long n1, long n2);   }   ```</ph>       A <ph id=\"ph2\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service implements this interface and exposes it on an endpoint with the &lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt; at http://localhost:8000/MyCalcService.","pos":[201,603],"source":"```   [ServiceContract]   interface Calculator   {      [WebGet(UriTemplate=\"Add?n1={n1}&n2={n2}\")]      [OperationContract]      long Add(long n1, long n2);   }   ```       A [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService."},{"content":"The <ph id=\"ph1\">`Add`</ph> service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&amp;n2=5.","pos":[604,723],"source":" The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5."},{"content":"The QueryStringConverter receives this URL and converts the two parameters (n1 and n2) specified in the URL into two <ph id=\"ph1\">`long`</ph> objects with the appropriate values.","pos":[724,884],"source":" The QueryStringConverter receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values."},{"content":"You can derive a class from QueryStringConverter to control how query string parameters are mapped into a service operation's parameters.","pos":[891,1028]},{"content":"The QueryStringConverter supports the following types by default:      -   &lt;xref:System.Byte&gt;      -   &lt;xref:System.SByte&gt;      -   &lt;xref:System.Int16&gt;      -   &lt;xref:System.Int32&gt;      -   &lt;xref:System.Int64&gt;      -   &lt;xref:System.UInt16&gt;      -   &lt;xref:System.UInt32&gt;      -   &lt;xref:System.UInt64&gt;      -   &lt;xref:System.Single&gt;      -   &lt;xref:System.Double&gt;      -   &lt;xref:System.Char&gt;      -   &lt;xref:System.Decimal&gt;      -   &lt;xref:System.Boolean&gt;      -   &lt;xref:System.String&gt;      -   &lt;xref:System.DateTime&gt;      -   &lt;xref:System.TimeSpan&gt;      -   &lt;xref:System.Guid&gt;      -   &lt;xref:System.Byte&gt; array      -   &lt;xref:System.Uri&gt;      -   &lt;xref:System.Object&gt;      -   &lt;xref:System.DateTimeOffset&gt;      -   Enums      -   Types that have a <ph id=\"ph1\">`TypeConverterAttribute`</ph> that can convert the type to and from a string representation.","pos":[1035,1865],"source":"       The QueryStringConverter supports the following types by default:      -   <xref:System.Byte>      -   <xref:System.SByte>      -   <xref:System.Int16>      -   <xref:System.Int32>      -   <xref:System.Int64>      -   <xref:System.UInt16>      -   <xref:System.UInt32>      -   <xref:System.UInt64>      -   <xref:System.Single>      -   <xref:System.Double>      -   <xref:System.Char>      -   <xref:System.Decimal>      -   <xref:System.Boolean>      -   <xref:System.String>      -   <xref:System.DateTime>      -   <xref:System.TimeSpan>      -   <xref:System.Guid>      -   <xref:System.Byte> array      -   <xref:System.Uri>      -   <xref:System.Object>      -   <xref:System.DateTimeOffset>      -   Enums      -   Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation."}]},{"pos":[3718,3831],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"></xref> class."},{"pos":[4840,4931],"content":"Determines whether the specified type can be converted to and from a string representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified type can be converted to and from a string representation.","pos":[0,91]}]},{"pos":[5462,5496],"content":"The <xref:System.Type> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert.","pos":[0,34],"source":"The <xref:System.Type> to convert."}]},{"pos":[5555,5612],"content":"A value that specifies whether the type can be converted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies whether the type can be converted.","pos":[0,57]}]},{"pos":[6295,6351],"content":"Converts a query string parameter to the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a query string parameter to the specified type.","pos":[0,56]}]},{"pos":[6363,6489],"content":"If the <ph id=\"ph1\">`parameterType`</ph> is a value type and the parameter is <ph id=\"ph2\">`null`</ph>, then the default value of the <ph id=\"ph3\">`parameterType`</ph> is returned.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned."},{"pos":[6963,7006],"content":"The string form of the parameter and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string form of the parameter and value.","pos":[0,43]}]},{"pos":[7074,7125],"content":"The <xref:System.Type> to convert the parameter to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the parameter to.","pos":[0,51],"source":"The <xref:System.Type> to convert the parameter to."}]},{"pos":[7183,7207],"content":"The converted parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted parameter.","pos":[0,24]}]},{"pos":[7398,7451],"content":"The provided string does not have the correct format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provided string does not have the correct format.","pos":[0,53]}]},{"pos":[8041,8095],"content":"Converts a parameter to a query string representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a parameter to a query string representation.","pos":[0,54]}]},{"pos":[8608,8633],"content":"The parameter to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter to convert.","pos":[0,25]}]},{"pos":[8701,8752],"content":"The <xref:System.Type> of the parameter to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the parameter to convert.","pos":[0,51],"source":"The <xref:System.Type> of the parameter to convert."}]},{"pos":[8810,8839],"content":"The parameter name and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter name and value.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter\n  id: QueryStringConverter\n  children:\n  - System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  - System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  langs:\n  - csharp\n  name: QueryStringConverter\n  nameWithType: QueryStringConverter\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter\n  type: Class\n  summary: This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.\n  remarks: \"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.  \\n  \\n```  \\n[ServiceContract]  \\ninterface Calculator  \\n{  \\n   [WebGet(UriTemplate=\\\"Add?n1={n1}&n2={n2}\\\")]  \\n   [OperationContract]  \\n   long Add(long n1, long n2);  \\n}  \\n```  \\n  \\n A [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService. The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5. The QueryStringConverter receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.  \\n  \\n You can derive a class from QueryStringConverter to control how query string parameters are mapped into a service operation's parameters.  \\n  \\n The QueryStringConverter supports the following types by default:  \\n  \\n-   <xref:System.Byte>  \\n  \\n-   <xref:System.SByte>  \\n  \\n-   <xref:System.Int16>  \\n  \\n-   <xref:System.Int32>  \\n  \\n-   <xref:System.Int64>  \\n  \\n-   <xref:System.UInt16>  \\n  \\n-   <xref:System.UInt32>  \\n  \\n-   <xref:System.UInt64>  \\n  \\n-   <xref:System.Single>  \\n  \\n-   <xref:System.Double>  \\n  \\n-   <xref:System.Char>  \\n  \\n-   <xref:System.Decimal>  \\n  \\n-   <xref:System.Boolean>  \\n  \\n-   <xref:System.String>  \\n  \\n-   <xref:System.DateTime>  \\n  \\n-   <xref:System.TimeSpan>  \\n  \\n-   <xref:System.Guid>  \\n  \\n-   <xref:System.Byte> array  \\n  \\n-   <xref:System.Uri>  \\n  \\n-   <xref:System.Object>  \\n  \\n-   <xref:System.DateTimeOffset>  \\n  \\n-   Enums  \\n  \\n-   Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.\"\n  example:\n  - \"The following code shows how to use the QueryStringConverter class to convert between a string and a 32-bit integer.  \\n  \\n [!code-vb[QueryStringConverter#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_3_1.vb)]\\n [!code-cs[QueryStringConverter#0](~/add/codesnippet/csharp/t-system.servicemodel.di_3_1.cs)]\"\n  syntax:\n    content: public class QueryStringConverter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: QueryStringConverter()\n  nameWithType: QueryStringConverter.QueryStringConverter()\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.QueryStringConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.  \\n  \\n [!code-vb[QueryStringConverter#1](~/add/codesnippet/visualbasic/m-system.servicemodel.di_0_1.vb)]\\n [!code-cs[QueryStringConverter#1](~/add/codesnippet/csharp/m-system.servicemodel.di_0_1.cs)]\"\n  syntax:\n    content: public QueryStringConverter ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  id: CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: CanConvert(Type)\n  nameWithType: QueryStringConverter.CanConvert(Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the specified type can be converted to and from a string representation.\n  remarks: ''\n  example:\n  - \"The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.  \\n  \\n [!code-vb[QueryStringConverter#2](~/add/codesnippet/visualbasic/m-system.servicemodel.di_2_1.vb)]\\n [!code-cs[QueryStringConverter#2](~/add/codesnippet/csharp/m-system.servicemodel.di_2_1.cs)]\"\n  syntax:\n    content: public virtual bool CanConvert (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> to convert.\n    return:\n      type: System.Boolean\n      description: A value that specifies whether the type can be converted.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  id: ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: ConvertStringToValue(String,Type)\n  nameWithType: QueryStringConverter.ConvertStringToValue(String,Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(String,Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Converts a query string parameter to the specified type.\n  remarks: If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.\n  example:\n  - \"The following code shows how to convert a string to the specified type.  \\n  \\n [!code-vb[QueryStringConverter#2](~/add/codesnippet/visualbasic/ee6d3c2e-1d57-42a1-a8dd-_1.vb)]\\n [!code-cs[QueryStringConverter#2](~/add/codesnippet/csharp/ee6d3c2e-1d57-42a1-a8dd-_1.cs)]\"\n  syntax:\n    content: public virtual object ConvertStringToValue (string parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.String\n      description: The string form of the parameter and value.\n    - id: parameterType\n      type: System.Type\n      description: The <xref:System.Type> to convert the parameter to.\n    return:\n      type: System.Object\n      description: The converted parameter.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: The provided string does not have the correct format.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  id: ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: ConvertValueToString(Object,Type)\n  nameWithType: QueryStringConverter.ConvertValueToString(Object,Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(Object,Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Converts a parameter to a query string representation.\n  remarks: ''\n  example:\n  - \"The following code shows how to convert a typed value into a string representation of the value.  \\n  \\n [!code-vb[QueryStringConverter#3](~/add/codesnippet/visualbasic/6edfb790-d20b-4419-8935-_1.vb)]\\n [!code-cs[QueryStringConverter#3](~/add/codesnippet/csharp/6edfb790-d20b-4419-8935-_1.cs)]\"\n  syntax:\n    content: public virtual string ConvertValueToString (object parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.Object\n      description: The parameter to convert.\n    - id: parameterType\n      type: System.Type\n      description: The <xref:System.Type> of the parameter to convert.\n    return:\n      type: System.String\n      description: The parameter name and value.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: QueryStringConverter()\n  nameWithType: QueryStringConverter.QueryStringConverter()\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.QueryStringConverter()\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: CanConvert(Type)\n  nameWithType: QueryStringConverter.CanConvert(Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue(String,Type)\n  nameWithType: QueryStringConverter.ConvertStringToValue(String,Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(String,Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertValueToString(Object,Type)\n  nameWithType: QueryStringConverter.ConvertValueToString(Object,Type)\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(Object,Type)\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: QueryStringConverter\n  nameWithType: QueryStringConverter.QueryStringConverter\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: CanConvert\n  nameWithType: QueryStringConverter.CanConvert\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue\n  nameWithType: QueryStringConverter.ConvertStringToValue\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertValueToString\n  nameWithType: QueryStringConverter.ConvertValueToString\n"}