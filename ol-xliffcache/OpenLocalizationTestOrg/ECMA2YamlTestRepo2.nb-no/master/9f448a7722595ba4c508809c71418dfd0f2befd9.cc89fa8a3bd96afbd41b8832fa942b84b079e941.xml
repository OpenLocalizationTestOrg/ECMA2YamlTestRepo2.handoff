{"nodes":[{"pos":[225,299],"content":"Filters the classes represented in an array of <xref:System.Type> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Filters the classes represented in an array of &lt;xref:System.Type&gt; objects.","pos":[0,74],"source":"Filters the classes represented in an array of <xref:System.Type> objects."}]},{"pos":[311,820],"content":"The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`TypeFilter`</ph> delegate is used to filter a list of classes.","pos":[0,62],"source":"The `TypeFilter` delegate is used to filter a list of classes."},{"content":"Specifically, you use it to filter the classes represented in an array of &lt;xref:System.Type&gt; objects.","pos":[63,164],"source":" Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects."},{"content":"The &lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt; method uses this delegate to filter the list of interfaces that it returns.","pos":[165,306],"source":" The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns."},{"content":"Every derived class of &lt;xref:System.Delegate&gt; and &lt;xref:System.MulticastDelegate&gt; has a constructor and a <ph id=\"ph1\">`DynamicInvoke`</ph> method.","pos":[307,436],"source":" Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method."},{"content":"See the Visual C++ code example given in the description for <ph id=\"ph1\">`Delegate`</ph>.","pos":[437,509],"source":" See the Visual C++ code example given in the description for `Delegate`."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.TypeFilter\n  id: TypeFilter\n  langs:\n  - csharp\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n  type: Delegate\n  summary: Filters the classes represented in an array of <xref:System.Type> objects.\n  remarks: The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`.\n  example:\n  - \"This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \\n  \\n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public delegate bool TypeFilter(Type m, object filterCriteria);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}