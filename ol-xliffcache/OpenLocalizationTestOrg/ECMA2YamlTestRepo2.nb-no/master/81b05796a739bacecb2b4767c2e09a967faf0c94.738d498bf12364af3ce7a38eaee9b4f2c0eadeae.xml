{"nodes":[{"pos":[1257,1314],"content":"Specifies generic undo/redo functionality at design time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies generic undo/redo functionality at design time.","pos":[0,57]}]},{"pos":[1327,3824],"content":"The UndoEngine abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.       The UndoEngine class takes advantage of the following characteristics of objects running within the designer:      -   All interesting objects can be persisted to some format by the designer loader.      -   All objects raise property-change notifications when a property is changed.      -   <xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.       With these features, UndoEngine can fabricate any undo units it needs automatically.      > [!NOTE] >  Do not change property values directly. The UndoEngine class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.       UndoEngine monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when UndoEngine is created.      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Saves property and object values for a component before and after a change is made.|   |<xref:System.ComponentModel.Design.IComponentChangeService>|Notifies the undo engine of changes made to components.|   |<xref:System.ComponentModel.Design.IDesignerHost>|Used to track transactions.|      > [!NOTE] >  Because the UndoEngine class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.       The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UndoEngine abstract class provides a default implementation of undo functionality at design time.","pos":[0,101]},{"content":"An undo unit represents a single unit of undoable work.","pos":[102,157]},{"content":"This unit is added to a stack and the user can then walk the stack to undo each action.","pos":[158,245]},{"content":"Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.","pos":[246,373]},{"content":"The UndoEngine class takes advantage of the following characteristics of objects running within the designer:      -   All interesting objects can be persisted to some format by the designer loader.","pos":[380,578]},{"content":"-   All objects raise property-change notifications when a property is changed.","pos":[584,663]},{"content":"-   &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.","pos":[669,838],"source":"      -   <xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions."},{"content":"With these features, UndoEngine can fabricate any undo units it needs automatically.","pos":[845,929]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not change property values directly.","pos":[935,987],"source":"      > [!NOTE] >  Do not change property values directly."},{"content":"The UndoEngine class requires you to use the appropriate &lt;xref:System.ComponentModel.TypeDescriptor&gt; to change property values.","pos":[988,1115],"source":" The UndoEngine class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values."},{"content":"UndoEngine monitors for change notifications to create undo units, and the units themselves consist of serialized object states.","pos":[1122,1250]},{"content":"The following table shows the services that must be available when UndoEngine is created.","pos":[1251,1340]},{"content":"|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;|Saves property and object values for a component before and after a change is made.|   |&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;|Notifies the undo engine of changes made to components.|   |&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;|Used to track transactions.|      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because the UndoEngine class requires &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt; and &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;, it is available only at design time.","pos":[1346,2011],"source":"      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Saves property and object values for a component before and after a change is made.|   |<xref:System.ComponentModel.Design.IComponentChangeService>|Notifies the undo engine of changes made to components.|   |<xref:System.ComponentModel.Design.IDesignerHost>|Used to track transactions.|      > [!NOTE] >  Because the UndoEngine class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time."},{"content":"The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.","pos":[2018,2116]},{"content":"As a result, the undo engine has control over the duration of an undoable action.","pos":[2117,2198]},{"content":"Also, because transactions can be named, undoable actions inherit their names from the current transaction.","pos":[2199,2306]},{"content":"If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \"Change property 'Text'\").","pos":[2307,2469]}]},{"pos":[4480,4581],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> class."},{"pos":[4593,4713],"content":"The &lt;xref:System.ComponentModel.Design.UndoEngine&gt; requires several services from the <ph id=\"ph1\">`provider`</ph> parameter to be useful.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful."},{"pos":[4877,4906],"content":"A parenting service provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"A parenting service provider.","pos":[0,29]}]},{"pos":[5082,5168],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5271,5467],"content":"A required service cannot be found. See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services. If you have removed this service, ensure that you provide a replacement.","needQuote":true,"needEscape":true,"nodes":[{"content":"A required service cannot be found.","pos":[0,35]},{"content":"See <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for required services.","pos":[36,123],"source":" See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services."},{"content":"If you have removed this service, ensure that you provide a replacement.","pos":[124,196]}]},{"pos":[6240,6252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6851,6921],"content":"Creates a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new &lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;.","pos":[0,70],"source":"Creates a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>."}]},{"pos":[6934,7392],"content":"The default implementation of the CreateUndoUnit method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.       By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of the CreateUndoUnit method simply returns a new &lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;.","pos":[0,133],"source":"The default implementation of the CreateUndoUnit method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>."},{"content":"By default, &lt;xref:System.ComponentModel.Design.UndoEngine&gt; does nothing with the <ph id=\"ph1\">`primary`</ph> parameter, but some implementations of undo, such as those involving the COM <ph id=\"ph2\">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> design pattern, may need to identify the difference between a primary unit and its children.","pos":[140,456],"source":"       By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children."}]},{"pos":[7604,7635],"content":"The name of the unit to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the unit to create.","pos":[0,31]}]},{"pos":[7700,7907],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create the first of a series of nested units; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to create subsequent nested units.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create the first of a series of nested units; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to create subsequent nested units."},{"pos":[8000,8084],"content":"A new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> with a specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt; with a specified name.","pos":[0,84],"source":"A new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> with a specified name."}]},{"pos":[8965,8977],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9443,9539],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>."},{"pos":[10116,10268],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> and optionally releases the managed resources."},{"pos":[10423,10632],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[11086,11171],"content":"Enables or disables the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Enables or disables the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>."},{"pos":[11287,11502],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is enabled; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12053,12080],"content":"Gets the requested service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the requested service.","pos":[0,27]}]},{"pos":[12241,12273],"content":"The type of service to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]},{"pos":[12331,12363],"content":"The requested service, if found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested service, if found.","pos":[0,32]}]},{"pos":[12552,12641],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12744,12874],"content":"<code>serviceType</code> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is required but cannot be found.","pos":[0,57],"source":"<code>serviceType</code> is required but cannot be found."},{"content":"If you have removed this service, ensure that you provide a replacement.","pos":[58,130]}]},{"pos":[13307,13334],"content":"Gets the requested service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the requested service.","pos":[0,27]}]},{"pos":[13487,13519],"content":"The type of service to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]},{"pos":[13577,13702],"content":"The requested service, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the requested service is not found.","needQuote":true,"needEscape":true,"source":"The requested service, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the requested service is not found."},{"pos":[13883,13972],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14425,14511],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"></xref> event."},{"pos":[14659,14715],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[15243,15328],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"></xref> event."},{"pos":[15475,15531],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[15983,16037],"content":"Occurs immediately before an undo action is performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs immediately before an undo action is performed.","pos":[0,54]}]},{"pos":[16159,16171],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16599,16642],"content":"Indicates if an undo action is in progress.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates if an undo action is in progress.","pos":[0,43]}]},{"pos":[16760,16929],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an undo action is in progress; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an undo action is in progress; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17382,17435],"content":"Occurs immediately after an undo action is performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs immediately after an undo action is performed.","pos":[0,53]}]},{"pos":[17447,17513],"content":"The Undone event is always raised, even if an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Undone event is always raised, even if an exception is thrown.","pos":[0,66]}]},{"pos":[17634,17646],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.UndoEngine\n  id: UndoEngine\n  children:\n  - System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  - System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  - System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  - System.ComponentModel.Design.UndoEngine.Dispose\n  - System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  - System.ComponentModel.Design.UndoEngine.Enabled\n  - System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  - System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  - System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  - System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  - System.ComponentModel.Design.UndoEngine.Undoing\n  - System.ComponentModel.Design.UndoEngine.UndoInProgress\n  - System.ComponentModel.Design.UndoEngine.Undone\n  langs:\n  - csharp\n  name: UndoEngine\n  nameWithType: UndoEngine\n  fullName: System.ComponentModel.Design.UndoEngine\n  type: Class\n  summary: Specifies generic undo/redo functionality at design time.\n  remarks: \"The UndoEngine abstract class provides a default implementation of undo functionality at design time. An undo unit represents a single unit of undoable work. This unit is added to a stack and the user can then walk the stack to undo each action. Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.  \\n  \\n The UndoEngine class takes advantage of the following characteristics of objects running within the designer:  \\n  \\n-   All interesting objects can be persisted to some format by the designer loader.  \\n  \\n-   All objects raise property-change notifications when a property is changed.  \\n  \\n-   <xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.  \\n  \\n With these features, UndoEngine can fabricate any undo units it needs automatically.  \\n  \\n> [!NOTE]\\n>  Do not change property values directly. The UndoEngine class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.  \\n  \\n UndoEngine monitors for change notifications to create undo units, and the units themselves consist of serialized object states. The following table shows the services that must be available when UndoEngine is created.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Saves property and object values for a component before and after a change is made.|  \\n|<xref:System.ComponentModel.Design.IComponentChangeService>|Notifies the undo engine of changes made to components.|  \\n|<xref:System.ComponentModel.Design.IDesignerHost>|Used to track transactions.|  \\n  \\n> [!NOTE]\\n>  Because the UndoEngine class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.  \\n  \\n The undo engine tracks transactions and creates a single undo unit that encompasses a transaction. As a result, the undo engine has control over the duration of an undoable action. Also, because transactions can be named, undoable actions inherit their names from the current transaction. If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, \\\"Change property 'Text'\\\").\"\n  syntax:\n    content: 'public abstract class UndoEngine : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: UndoEngine(IServiceProvider)\n  nameWithType: UndoEngine.UndoEngine(IServiceProvider)\n  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> class.\n  remarks: The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful.\n  syntax:\n    content: protected UndoEngine (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: A parenting service provider.\n  overload: System.ComponentModel.Design.UndoEngine.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A required service cannot be found. See <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> for required services. If you have removed this service, ensure that you provide a replacement.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  id: AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: AddUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  syntax:\n    content: protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);\n    parameters:\n    - id: unit\n      type: System.ComponentModel.Design.UndoEngine.UndoUnit\n      description: To be added.\n  overload: System.ComponentModel.Design.UndoEngine.AddUndoUnit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  id: CreateUndoUnit(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: CreateUndoUnit(String,Boolean)\n  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)\n  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.\n  remarks: \"The default implementation of the CreateUndoUnit method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.  \\n  \\n By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.\"\n  syntax:\n    content: protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the unit to create.\n    - id: primary\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create the first of a series of nested units; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to create subsequent nested units.\n    return:\n      type: System.ComponentModel.Design.UndoEngine.UndoUnit\n      description: A new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> with a specified name.\n  overload: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  id: DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: DiscardUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  syntax:\n    content: protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);\n    parameters:\n    - id: unit\n      type: System.ComponentModel.Design.UndoEngine.UndoUnit\n      description: To be added.\n  overload: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UndoEngine.Dispose()\n  fullName: System.ComponentModel.Design.UndoEngine.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.UndoEngine.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: UndoEngine.Dispose(Boolean)\n  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.ComponentModel.Design.UndoEngine.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.Enabled\n  id: Enabled\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n  fullName: System.ComponentModel.Design.UndoEngine.Enabled\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Enables or disables the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref>.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ComponentModel.Design.UndoEngine\"></xref> is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.UndoEngine.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  id: GetRequiredService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: GetRequiredService(Type)\n  nameWithType: UndoEngine.GetRequiredService(Type)\n  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested service.\n  syntax:\n    content: protected object GetRequiredService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: The requested service, if found.\n  overload: System.ComponentModel.Design.UndoEngine.GetRequiredService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>serviceType</code> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: UndoEngine.GetService(Type)\n  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested service.\n  syntax:\n    content: protected object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: The requested service, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the requested service is not found.\n  overload: System.ComponentModel.Design.UndoEngine.GetService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  id: OnUndoing(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: OnUndoing(EventArgs)\n  nameWithType: UndoEngine.OnUndoing(EventArgs)\n  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undoing\"></xref> event.\n  syntax:\n    content: protected virtual void OnUndoing (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.UndoEngine.OnUndoing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  id: OnUndone(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: OnUndone(EventArgs)\n  nameWithType: UndoEngine.OnUndone(EventArgs)\n  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.UndoEngine.Undone\"></xref> event.\n  syntax:\n    content: protected virtual void OnUndone (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.UndoEngine.OnUndone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.Undoing\n  id: Undoing\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Undoing\n  nameWithType: UndoEngine.Undoing\n  fullName: System.ComponentModel.Design.UndoEngine.Undoing\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs immediately before an undo action is performed.\n  syntax:\n    content: public event EventHandler Undoing;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress\n  id: UndoInProgress\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Indicates if an undo action is in progress.\n  syntax:\n    content: public bool UndoInProgress { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an undo action is in progress; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.UndoEngine.UndoInProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.UndoEngine.Undone\n  id: Undone\n  parent: System.ComponentModel.Design.UndoEngine\n  langs:\n  - csharp\n  name: Undone\n  nameWithType: UndoEngine.Undone\n  fullName: System.ComponentModel.Design.UndoEngine.Undone\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs immediately after an undo action is performed.\n  remarks: The Undone event is always raised, even if an exception is thrown.\n  syntax:\n    content: public event EventHandler Undone;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoEngine(IServiceProvider)\n  nameWithType: UndoEngine.UndoEngine(IServiceProvider)\n  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: AddUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)\n- uid: System.ComponentModel.Design.UndoEngine.UndoUnit\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: UndoEngine+UndoUnit\n  nameWithType: UndoEngine+UndoUnit\n  fullName: System.ComponentModel.Design.UndoEngine+UndoUnit\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: CreateUndoUnit(String,Boolean)\n  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)\n  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: DiscardUndoUnit(UndoEngine+UndoUnit)\n  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)\n- uid: System.ComponentModel.Design.UndoEngine.Dispose\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose()\n  nameWithType: UndoEngine.Dispose()\n  fullName: System.ComponentModel.Design.UndoEngine.Dispose()\n- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: UndoEngine.Dispose(Boolean)\n  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)\n- uid: System.ComponentModel.Design.UndoEngine.Enabled\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n  fullName: System.ComponentModel.Design.UndoEngine.Enabled\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetRequiredService(Type)\n  nameWithType: UndoEngine.GetRequiredService(Type)\n  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: UndoEngine.GetService(Type)\n  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndoing(EventArgs)\n  nameWithType: UndoEngine.OnUndoing(EventArgs)\n  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndone(EventArgs)\n  nameWithType: UndoEngine.OnUndone(EventArgs)\n  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)\n- uid: System.ComponentModel.Design.UndoEngine.Undoing\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Undoing\n  nameWithType: UndoEngine.Undoing\n  fullName: System.ComponentModel.Design.UndoEngine.Undoing\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress\n- uid: System.ComponentModel.Design.UndoEngine.Undone\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Undone\n  nameWithType: UndoEngine.Undone\n  fullName: System.ComponentModel.Design.UndoEngine.Undone\n- uid: System.ComponentModel.Design.UndoEngine.#ctor*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoEngine\n  nameWithType: UndoEngine.UndoEngine\n- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: AddUndoUnit\n  nameWithType: UndoEngine.AddUndoUnit\n- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: CreateUndoUnit\n  nameWithType: UndoEngine.CreateUndoUnit\n- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: DiscardUndoUnit\n  nameWithType: UndoEngine.DiscardUndoUnit\n- uid: System.ComponentModel.Design.UndoEngine.Dispose*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Dispose\n  nameWithType: UndoEngine.Dispose\n- uid: System.ComponentModel.Design.UndoEngine.Enabled*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: Enabled\n  nameWithType: UndoEngine.Enabled\n- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetRequiredService\n  nameWithType: UndoEngine.GetRequiredService\n- uid: System.ComponentModel.Design.UndoEngine.GetService*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: GetService\n  nameWithType: UndoEngine.GetService\n- uid: System.ComponentModel.Design.UndoEngine.OnUndoing*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndoing\n  nameWithType: UndoEngine.OnUndoing\n- uid: System.ComponentModel.Design.UndoEngine.OnUndone*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: OnUndone\n  nameWithType: UndoEngine.OnUndone\n- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress*\n  parent: System.ComponentModel.Design.UndoEngine\n  isExternal: false\n  name: UndoInProgress\n  nameWithType: UndoEngine.UndoInProgress\n"}