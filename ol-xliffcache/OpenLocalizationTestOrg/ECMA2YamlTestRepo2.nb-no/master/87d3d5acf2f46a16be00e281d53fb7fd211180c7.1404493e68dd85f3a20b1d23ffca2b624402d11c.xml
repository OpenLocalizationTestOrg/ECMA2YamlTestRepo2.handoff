{"nodes":[{"pos":[704,882],"content":"Represents a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> exception block of a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_try/catch\" name=\"try/catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> statement.","needQuote":true,"needEscape":true,"source":"Represents a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> exception block of a <xref uid=\"langword_csharp_try/catch\" name=\"try/catch\" href=\"\"></xref> statement."},{"pos":[895,1382],"content":"CodeCatchClause can be used to represent a `catch` exception block of a `try/catch` statement.       The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch. The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught. The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeCatchClause can be used to represent a <ph id=\"ph1\">`catch`</ph> exception block of a <ph id=\"ph2\">`try/catch`</ph> statement.","pos":[0,94],"source":"CodeCatchClause can be used to represent a `catch` exception block of a `try/catch` statement."},{"content":"The &lt;xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A&gt; property specifies the type of exception to catch.","pos":[101,215],"source":"       The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch."},{"content":"The &lt;xref:System.CodeDom.CodeCatchClause.LocalName%2A&gt; property specifies a name for the variable representing the exception that has been caught.","pos":[216,362],"source":" The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught."},{"content":"The &lt;xref:System.CodeDom.CodeCatchClause.Statements%2A&gt; collection property contains the statements for the <ph id=\"ph1\">`catch`</ph> block.","pos":[363,485],"source":" The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block."}]},{"pos":[2518,2610],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class."},{"pos":[3158,3308],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified local variable name for the exception.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception."},{"pos":[3456,3552],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]},{"pos":[4151,4320],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified local variable name for the exception and exception type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception and exception type."},{"pos":[4521,4617],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]},{"pos":[4711,4813],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the type of exception to catch.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch."},{"pos":[5522,5713],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified local variable name for the exception, exception type and statement collection.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception, exception type and statement collection."},{"pos":[5957,6053],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]},{"pos":[6147,6249],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the type of exception to catch.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch."},{"pos":[6333,6450],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the contents of the catch block.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.CodeDom.CodeStatement\"></xref> objects that represent the contents of the catch block."},{"pos":[6905,6975],"content":"Gets or sets the type of the exception to handle with the catch block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of the exception to handle with the catch block.","pos":[0,70]}]},{"pos":[6987,7097],"content":"If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a value for this property is not specified, the value of this property defaults to &lt;xref:System.Exception&gt;.","pos":[0,110],"source":"If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>."}]},{"pos":[7270,7377],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the type of the exception to handle.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the exception to handle."},{"pos":[7800,7935],"content":"Gets or sets the variable name of the exception that the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> clause handles.","needQuote":true,"needEscape":true,"source":"Gets or sets the variable name of the exception that the <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> clause handles."},{"pos":[7947,8105],"content":"This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.","pos":[0,158],"nodes":[{"content":"This property specifies the name of the local variable for the exception.","pos":[0,73]},{"content":"This local variable is optional.","pos":[74,106]},{"content":"By default, the clause does not have this variable.","pos":[107,158]}]}]},{"pos":[8224,8347],"content":"The name for the exception variable that the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> clause handles.","needQuote":true,"needEscape":true,"source":"The name for the exception variable that the <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> clause handles."},{"pos":[8766,8809],"content":"Gets the statements within the catch block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the statements within the catch block.","pos":[0,43]}]},{"pos":[8981,9092],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeStatementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the statements within the catch block.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements within the catch block."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeCatchClause\n  id: CodeCatchClause\n  children:\n  - System.CodeDom.CodeCatchClause.#ctor\n  - System.CodeDom.CodeCatchClause.#ctor(System.String)\n  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  - System.CodeDom.CodeCatchClause.CatchExceptionType\n  - System.CodeDom.CodeCatchClause.LocalName\n  - System.CodeDom.CodeCatchClause.Statements\n  langs:\n  - csharp\n  name: CodeCatchClause\n  nameWithType: CodeCatchClause\n  fullName: System.CodeDom.CodeCatchClause\n  type: Class\n  summary: Represents a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> exception block of a <xref uid=\"langword_csharp_try/catch\" name=\"try/catch\" href=\"\"></xref> statement.\n  remarks: \"CodeCatchClause can be used to represent a `catch` exception block of a `try/catch` statement.  \\n  \\n The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch. The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught. The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.\"\n  example:\n  - \"The following example code demonstrates using CodeCatchClause objects to define exception handling clauses of a try...catch block.  \\n  \\n [!code-cs[CodeTryCatchFinallyExample#2](~/add/codesnippet/csharp/t-system.codedom.codecat_1_1.cs)]\\n [!code-cpp[CodeTryCatchFinallyExample#2](~/add/codesnippet/cpp/t-system.codedom.codecat_1_1.cpp)]\\n [!code-vb[CodeTryCatchFinallyExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecat_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeCatchClause\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause()\n  nameWithType: CodeCatchClause.CodeCatchClause()\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class.\n  syntax:\n    content: public CodeCatchClause ();\n    parameters: []\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String)\n  nameWithType: CodeCatchClause.CodeCatchClause(String)\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception.\n  syntax:\n    content: public CodeCatchClause (string localName);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReference)'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String,CodeTypeReference)\n  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference)\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception and exception type.\n  syntax:\n    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n    - id: catchExceptionType\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception, exception type and statement collection.\n  syntax:\n    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, System.CodeDom.CodeStatement[] statements);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n    - id: catchExceptionType\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.\n    - id: statements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of <xref href=\"System.CodeDom.CodeStatement\"></xref> objects that represent the contents of the catch block.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType\n  id: CatchExceptionType\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n  fullName: System.CodeDom.CodeCatchClause.CatchExceptionType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the type of the exception to handle with the catch block.\n  remarks: If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the exception to handle.\n  overload: System.CodeDom.CodeCatchClause.CatchExceptionType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.LocalName\n  id: LocalName\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n  fullName: System.CodeDom.CodeCatchClause.LocalName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the variable name of the exception that the <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> clause handles.\n  remarks: This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.\n  syntax:\n    content: public string LocalName { get; set; }\n    return:\n      type: System.String\n      description: The name for the exception variable that the <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> clause handles.\n  overload: System.CodeDom.CodeCatchClause.LocalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCatchClause.Statements\n  id: Statements\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n  fullName: System.CodeDom.CodeCatchClause.Statements\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the statements within the catch block.\n  syntax:\n    content: public System.CodeDom.CodeStatementCollection Statements { get; }\n    return:\n      type: System.CodeDom.CodeStatementCollection\n      description: A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements within the catch block.\n  overload: System.CodeDom.CodeCatchClause.Statements*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.CodeDom.CodeCatchClause.#ctor\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause()\n  nameWithType: CodeCatchClause.CodeCatchClause()\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause()\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String)\n  nameWithType: CodeCatchClause.CodeCatchClause(String)\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String,CodeTypeReference)\n  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference)\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])\n- uid: System.CodeDom.CodeStatement[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeStatement\n    name: CodeStatement\n    nameWithType: CodeStatement\n    fullName: CodeStatement[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n  fullName: System.CodeDom.CodeCatchClause.CatchExceptionType\n- uid: System.CodeDom.CodeCatchClause.LocalName\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n  fullName: System.CodeDom.CodeCatchClause.LocalName\n- uid: System.CodeDom.CodeCatchClause.Statements\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n  fullName: System.CodeDom.CodeCatchClause.Statements\n- uid: System.CodeDom.CodeStatementCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatementCollection\n  nameWithType: CodeStatementCollection\n  fullName: System.CodeDom.CodeStatementCollection\n- uid: System.CodeDom.CodeCatchClause.#ctor*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause\n  nameWithType: CodeCatchClause.CodeCatchClause\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n- uid: System.CodeDom.CodeCatchClause.LocalName*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n- uid: System.CodeDom.CodeCatchClause.Statements*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n"}