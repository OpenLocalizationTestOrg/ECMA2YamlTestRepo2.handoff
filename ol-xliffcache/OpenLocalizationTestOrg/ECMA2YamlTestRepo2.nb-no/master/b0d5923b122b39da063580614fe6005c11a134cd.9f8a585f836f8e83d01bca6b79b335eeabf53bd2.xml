{"nodes":[{"pos":[1344,1431],"content":"A helper class to enable impersonation while serializing the body of the reply message.","needQuote":true,"needEscape":true,"nodes":[{"content":"A helper class to enable impersonation while serializing the body of the reply message.","pos":[0,87]}]},{"pos":[2219,2258],"content":"Creates a copy of the message property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a copy of the message property.","pos":[0,39]}]},{"pos":[2458,2491],"content":"The copy of the message property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The copy of the message property.","pos":[0,33]}]},{"pos":[3109,3147],"content":"Gets the name of the message property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the message property.","pos":[0,38]}]},{"pos":[3263,3296],"content":"The name of the message property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the message property.","pos":[0,33]}]},{"pos":[4222,4394],"content":"Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.","pos":[0,172]}]},{"pos":[4677,4781],"content":"When this method returns, contains the impersonated context. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the impersonated context. This parameter is treated as uninitialized.","pos":[0,104],"nodes":[{"content":"When this method returns, contains the impersonated context.","pos":[0,60]},{"content":"This parameter is treated as uninitialized.","pos":[61,104]}]}]},{"pos":[4878,5022],"content":"When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.","pos":[0,144],"nodes":[{"content":"When this method returns, contains the original principal on the thread before invoking this method.","pos":[0,100]},{"content":"This parameter is treated as uninitialized.","pos":[101,144]}]}]},{"pos":[5100,5406],"content":"When this method returns, contains a value that indicates whether the principal was set on the thread by this method. This parameter returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the operation context was not available to impersonate. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a value that indicates whether the principal was set on the thread by this method.","pos":[0,117]},{"content":"This parameter returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation context was not available to impersonate.","pos":[118,262],"source":" This parameter returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the operation context was not available to impersonate."},{"content":"This parameter is treated as uninitialized.","pos":[263,306]}]},{"pos":[6335,6413],"content":"Reverts impersonation and sets the specified original principal on the thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverts impersonation and sets the specified original principal on the thread.","pos":[0,78]}]},{"pos":[6683,6719],"content":"The impersonation context to revert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The impersonation context to revert.","pos":[0,36]}]},{"pos":[6816,6860],"content":"The original principal to set on the thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original principal to set on the thread.","pos":[0,44]}]},{"pos":[6938,7181],"content":"A value that indicates whether the thread principal was set during impersonation. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the principal was set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the thread principal was set during impersonation.","pos":[0,81]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the principal was set; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[82,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the principal was set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[8202,8342],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property from the specified message.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified message."},{"pos":[8630,8677],"content":"The message from which to extract the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message from which to extract the property.","pos":[0,47]}]},{"pos":[8802,8972],"content":"When this method returns, contains the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property extracted from the message.","needQuote":true,"needEscape":true,"source":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message."},{"pos":[9031,9194],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the  property was found; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the  property was found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10254,10448],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property from the specified &lt;xref:System.ServiceModel.Channels.MessageProperties&gt; object..","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified <xref:System.ServiceModel.Channels.MessageProperties> object.."},{"pos":[10762,10827],"content":"The message properties object from which to extract the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message properties object from which to extract the property.","pos":[0,65]}]},{"pos":[10952,11122],"content":"When this method returns, contains the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property extracted from the message.","needQuote":true,"needEscape":true,"source":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message."},{"pos":[11181,11344],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the  property was found; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the  property was found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  id: ImpersonateOnSerializingReplyMessageProperty\n  children:\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  langs:\n  - csharp\n  name: ImpersonateOnSerializingReplyMessageProperty\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  type: Class\n  summary: A helper class to enable impersonation while serializing the body of the reply message.\n  syntax:\n    content: 'public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.Channels.IMessageProperty\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  id: CreateCopy\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: CreateCopy()\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a copy of the message property.\n  syntax:\n    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.IMessageProperty\n      description: The copy of the message property.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  id: Name\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the name of the message property.\n  syntax:\n    content: public static string Name { get; }\n    return:\n      type: System.String\n      description: The name of the message property.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  id: StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: StartImpersonation(IDisposable,IPrincipal,Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.\n  syntax:\n    content: public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);\n    parameters:\n    - id: impersonationContext\n      type: System.IDisposable\n      description: When this method returns, contains the impersonated context. This parameter is treated as uninitialized.\n    - id: originalPrincipal\n      type: System.Security.Principal.IPrincipal\n      description: When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.\n    - id: isThreadPrincipalSet\n      type: System.Boolean\n      description: When this method returns, contains a value that indicates whether the principal was set on the thread by this method. This parameter returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the operation context was not available to impersonate. This parameter is treated as uninitialized.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  id: StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: StopImpersonation(IDisposable,IPrincipal,Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Reverts impersonation and sets the specified original principal on the thread.\n  syntax:\n    content: public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);\n    parameters:\n    - id: impersonationContext\n      type: System.IDisposable\n      description: The impersonation context to revert.\n    - id: originalPrincipal\n      type: System.Security.Principal.IPrincipal\n      description: The original principal to set on the thread.\n    - id: isThreadPrincipalSet\n      type: System.Boolean\n      description: A value that indicates whether the thread principal was set during impersonation. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the principal was set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified message.\n  syntax:\n    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message from which to extract the property.\n    - id: property\n      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n      description: When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the  property was found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified <xref:System.ServiceModel.Channels.MessageProperties> object..\n  syntax:\n    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);\n    parameters:\n    - id: properties\n      type: System.ServiceModel.Channels.MessageProperties\n      description: The message properties object from which to extract the property.\n    - id: property\n      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n      description: When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the  property was found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: CreateCopy()\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n- uid: System.ServiceModel.Channels.IMessageProperty\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: IMessageProperty\n  nameWithType: IMessageProperty\n  fullName: System.ServiceModel.Channels.IMessageProperty\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StartImpersonation(IDisposable,IPrincipal,Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)\n- uid: System.IDisposable\n  parent: System\n  isExternal: true\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StopImpersonation(IDisposable,IPrincipal,Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: ImpersonateOnSerializingReplyMessageProperty\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)\n- uid: System.ServiceModel.Channels.MessageProperties\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: MessageProperties\n  nameWithType: MessageProperties\n  fullName: System.ServiceModel.Channels.MessageProperties\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: CreateCopy\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StartImpersonation\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StopImpersonation\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet\n"}