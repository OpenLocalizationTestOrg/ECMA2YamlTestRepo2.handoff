<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d721e5b91a3e148c9bca72d1586e6fee9f768666</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.Application.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6183a4faa330279bb1b9b556d61abdd99cbff791</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7097551a42dd68647cbc47d596bcd243b1190fe8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides <bpt id="p1">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Application class has methods to start and stop applications and threads, and to process Windows messages, as follows:      -   &lt;xref:System.Windows.Forms.Application.Run%2A&gt; starts an application message loop on the current thread and, optionally, makes a form visible.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Forms.Application.Exit%2A&gt; or &lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt; stops a message loop.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt; processes messages while your program is in a loop.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt; adds a message filter to the application message pump to monitor Windows messages.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Forms.IMessageFilter&gt; lets you stop an event from being raised or perform special operations before invoking an event handler.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class has &lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt; and &lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt; properties to get or set culture information for the current thread.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create an instance of this class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adds a message filter to monitor Windows messages as they are routed to their destinations.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message filters are unique to a specific thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent a message from being dispatched, the <ph id="ph1">`value`</ph> parameter instance that you pass to this method must override the &lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt; method with the code to handle the message.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method must return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Adding message filters to the message pump for an application can degrade performance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The implementation of the <bpt id="p1">&lt;xref href="System.Windows.Forms.IMessageFilter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface you want to install.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the caller can quit this application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`false`</ph> if it is called from a &lt;xref:System.Windows.Forms.Control&gt; being hosted within a Web browser.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, the &lt;xref:System.Windows.Forms.Control&gt; cannot quit the &lt;xref:System.Windows.Forms.Application&gt;.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the caller can quit this application; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Occurs when the application is about to shut down.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must attach the event handlers to the &lt;xref:System.Windows.Forms.Application.Exit%2A&gt; event to perform unhandled, required tasks before the application stops running.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach any event handlers attached to this event in the ApplicationExit event handler itself.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not detach these handlers, they will remain attached to the event and continue to consume memory.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the path for the application data that is shared among all users.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The path for the application data that is shared among all users.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the registry key for the application data that is shared among all users.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the registry key of the application data that is shared among all users.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the company name associated with the application.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The company name.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture information for the current thread.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; representing the culture information for the current thread.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets the current input language for the current thread.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.InputLanguage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the current input language for the current thread.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Processes all Windows messages currently in the message queue.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you run a Windows Form, it creates the new form, which then waits for events to handle.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time the form handles an event, it processes all the code associated with that event.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other events wait in the queue.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>While your code handles the event, your application does not respond.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the window does not repaint if another window is dragged on top.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call DoEvents in your code, your application can handle the other events.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have a form that adds data to a &lt;xref:System.Windows.Forms.ListBox&gt; and add DoEvents to your code, your form repaints when another window is dragged over it.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you remove DoEvents from your code, your form will not repaint until the click event handler of the button is finished executing.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on messaging, see <bpt id="p1">[</bpt>User Input in Windows Forms<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike Visual Basic 6.0, the DoEvents method does not call the &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you use this method in a loop to process messages.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Calling this method causes the current thread to be suspended while all waiting window messages are processed.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message causes an event to be triggered, then other areas of your application code may execute.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause your application to exhibit unexpected behaviors that are difficult to debug.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming, see <bpt id="p1">[</bpt>Asynchronous Programming Model (APM)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enables visual styles for the application.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables visual styles for the application.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual styles are the colors, fonts, and other visual elements that form an operating system theme.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls will draw with visual styles if the control and the operating system support it.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>To have an effect, EnableVisualStyles must be called before creating any controls in the application; typically, EnableVisualStyles is the first line in the <ph id="ph1">`Main`</ph> function.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>A separate manifest is not required to enable visual styles when calling EnableVisualStyles.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Prior to the .NET Framework 2.0, the <ph id="ph2">`FlatStyle`</ph> property of some controls, such as controls that derive from &lt;xref:System.Windows.Forms.ButtonBase&gt;, had to be set to &lt;xref:System.Windows.Forms.FlatStyle?displayProperty=fullName&gt; in order for the controls to be drawn with visual styles.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In applications written with the .NET Framework 2.0, this is no longer necessary.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method will have no effect for controls hosted in Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Occurs when the application is about to enter a modal state.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!CAUTION]</ph> &gt;  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>