{"nodes":[{"pos":[910,922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1649,1661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1707,1719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2353,2365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2422,2434],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3130,3142],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3191,3203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3890,3902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4606,4618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4668,4680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IListContract`1\n  id: IListContract`1\n  children:\n  - System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  - System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  - System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IListContract<C>\n  nameWithType: IListContract<C>\n  fullName: System.AddIn.Contract.Collections.IListContract<C>\n  type: Interface\n  syntax:\n    content: 'public interface IListContract<C> : System.AddIn.Contract.Collections.ICollectionContract<C>, System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'\n    typeParameters:\n    - id: C\n      description: To be added.\n  implements:\n  - System.AddIn.Contract.Collections.ICollectionContract<C>\n  - System.AddIn.Contract.Collections.IEnumerableContract<C>\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public C GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: C\n      description: To be added.\n  overload: System.AddIn.Contract.Collections.IListContract`1.GetItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.IndexOf(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public int IndexOf (C item);\n    parameters:\n    - id: item\n      type: C\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.AddIn.Contract.Collections.IListContract`1.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: Insert(Int32,C)\n  nameWithType: IListContract<C>.Insert(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.Insert(Int32,C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void Insert (int index, C item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: C\n      description: To be added.\n  overload: System.AddIn.Contract.Collections.IListContract`1.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32,C)\n  nameWithType: IListContract<C>.SetItem(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.SetItem(Int32,C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void SetItem (int index, C value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: C\n      description: To be added.\n  overload: System.AddIn.Contract.Collections.IListContract`1.SetItem*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.GetItem(Int32)\n- uid: C\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.IndexOf(C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: Insert(Int32,C)\n  nameWithType: IListContract<C>.Insert(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.Insert(Int32,C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.RemoveAt(Int32)\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: SetItem(Int32,C)\n  nameWithType: IListContract<C>.SetItem(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.SetItem(Int32,C)\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: GetItem\n  nameWithType: IListContract<C>.GetItem\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: IListContract<C>.IndexOf\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: Insert\n  nameWithType: IListContract<C>.Insert\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: IListContract<C>.RemoveAt\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem*\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: SetItem\n  nameWithType: IListContract<C>.SetItem\n"}