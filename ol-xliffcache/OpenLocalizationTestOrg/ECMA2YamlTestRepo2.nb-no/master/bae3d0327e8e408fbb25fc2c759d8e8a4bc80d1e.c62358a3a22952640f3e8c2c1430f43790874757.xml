{"nodes":[{"pos":[849,861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3004,3016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3954,3966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4039,4051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4835,4847],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1\n  id: EnvironmentLocationReference`1\n  children:\n  - System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference\n  langs:\n  - csharp\n  name: EnvironmentLocationReference<T>\n  nameWithType: EnvironmentLocationReference<T>\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>\n  type: Class\n  syntax:\n    content: 'public class EnvironmentLocationReference<T> : System.Activities.CodeActivity<System.Activities.Location<T>>'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: EnvironmentLocationReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: EnvironmentLocationReference<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override sealed System.Activities.Location<T> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location`1\n      description: To be added.\n  overload: System.Activities.Expressions.EnvironmentLocationReference`1.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference\n  id: LocationReference\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  langs:\n  - csharp\n  name: LocationReference\n  nameWithType: EnvironmentLocationReference<T>.LocationReference\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.LocationReference\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public virtual System.Activities.LocationReference LocationReference { get; }\n    return:\n      type: System.Activities.LocationReference\n      description: To be added.\n  overload: System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<T>>\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: EnvironmentLocationReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: EnvironmentLocationReference<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.Execute(CodeActivityContext)\n- uid: System.Activities.Location`1\n  parent: System.Activities\n  isExternal: false\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: EnvironmentLocationReference<T>.LocationReference\n  fullName: System.Activities.Expressions.EnvironmentLocationReference<T>.LocationReference\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata*\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: EnvironmentLocationReference<T>.CacheMetadata\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.Execute*\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: Execute\n  nameWithType: EnvironmentLocationReference<T>.Execute\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference*\n  parent: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: EnvironmentLocationReference<T>.LocationReference\n"}