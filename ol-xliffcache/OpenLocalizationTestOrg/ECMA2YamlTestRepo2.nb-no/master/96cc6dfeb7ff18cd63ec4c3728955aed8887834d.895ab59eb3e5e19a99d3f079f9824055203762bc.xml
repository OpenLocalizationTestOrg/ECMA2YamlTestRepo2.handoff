{"nodes":[{"pos":[662,765],"content":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.IEnumMoniker?displayProperty=fullName&gt; instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use <ph id=\"ph1\">&amp;lt;</ph>xref:System.Runtime.InteropServices.ComTypes.IEnumMoniker?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instead.","pos":[0,103],"source":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.IEnumMoniker?displayProperty=fullName&gt; instead."}]},{"pos":[777,855],"content":"For more information about the <ph id=\"ph1\">`IEnumMoniker`</ph> interface, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about the `IEnumMoniker` interface, see the MSDN Library."},{"pos":[1837,1924],"content":"Creates another enumerator that contains the same enumeration state as the current one.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates another enumerator that contains the same enumeration state as the current one.","pos":[0,87]}]},{"pos":[1936,2007],"content":"For more information about <ph id=\"ph1\">`IEnumMoniker::Clone`</ph>, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about `IEnumMoniker::Clone`, see the MSDN Library."},{"pos":[2223,2289],"content":"On successful return, a reference to the newly created enumerator.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, a reference to the newly created enumerator.","pos":[0,66]}]},{"pos":[2991,3057],"content":"Retrieves a specified number of items in the enumeration sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a specified number of items in the enumeration sequence.","pos":[0,66]}]},{"pos":[3069,3139],"content":"For more information about <ph id=\"ph1\">`IEnumMoniker::Next`</ph>, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about `IEnumMoniker::Next`, see the MSDN Library."},{"pos":[3341,3385],"content":"The number of monikers to return in <ph id=\"ph1\">`rgelt`</ph>.","needQuote":true,"needEscape":true,"source":"The number of monikers to return in `rgelt`."},{"pos":[3479,3540],"content":"On successful return, a reference to the enumerated monikers.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, a reference to the enumerated monikers.","pos":[0,61]}]},{"pos":[3608,3697],"content":"On successful return, a reference to the actual number of monikers enumerated in <ph id=\"ph1\">`rgelt`</ph>.","needQuote":true,"needEscape":true,"source":"On successful return, a reference to the actual number of monikers enumerated in `rgelt`."},{"pos":[3754,3976],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">pceltFetched</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter equals the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">celt</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref> if the <code>pceltFetched</code> parameter equals the <code>celt</code> parameter; otherwise, <xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"></xref>."},{"pos":[4456,4505],"content":"Resets the enumeration sequence to the beginning.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the enumeration sequence to the beginning.","pos":[0,49]}]},{"pos":[4517,4588],"content":"For more information about <ph id=\"ph1\">`IEnumMoniker::Reset`</ph>, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about `IEnumMoniker::Reset`, see the MSDN Library."},{"pos":[4708,4795],"content":"An HRESULT with the value <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An HRESULT with the value <xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref>."},{"pos":[5314,5381],"content":"Skips over a specified number of items in the enumeration sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Skips over a specified number of items in the enumeration sequence.","pos":[0,67]}]},{"pos":[5393,5463],"content":"For more information about <ph id=\"ph1\">`IEnumMoniker::Skip`</ph>, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about `IEnumMoniker::Skip`, see the MSDN Library."},{"pos":[5590,5640],"content":"The number of elements to skip in the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements to skip in the enumeration.","pos":[0,50]}]},{"pos":[5697,5910],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the number of elements skipped equals the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">celt</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref> if the number of elements skipped equals the <code>celt</code> parameter; otherwise, <xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker\n  id: UCOMIEnumMoniker\n  children:\n  - System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  - System.Runtime.InteropServices.UCOMIEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)\n  - System.Runtime.InteropServices.UCOMIEnumMoniker.Reset\n  - System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(System.Int32)\n  langs:\n  - csharp\n  name: UCOMIEnumMoniker\n  nameWithType: UCOMIEnumMoniker\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker\n  type: Interface\n  summary: Use &lt;xref:System.Runtime.InteropServices.ComTypes.IEnumMoniker?displayProperty=fullName&gt; instead.\n  remarks: For more information about the `IEnumMoniker` interface, see the MSDN Library.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use System.Runtime.InteropServices.ComTypes.IEnumMoniker instead. http://go.microsoft.com/fwlink/?linkid=14202\", false)]\n\n      [System.Runtime.InteropServices.Guid(\"00000102-0000-0000-C000-000000000046\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface UCOMIEnumMoniker\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  id: Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  langs:\n  - csharp\n  name: Clone(UCOMIEnumMoniker)\n  nameWithType: UCOMIEnumMoniker.Clone(UCOMIEnumMoniker)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(UCOMIEnumMoniker)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Creates another enumerator that contains the same enumeration state as the current one.\n  remarks: For more information about `IEnumMoniker::Clone`, see the MSDN Library.\n  syntax:\n    content: public void Clone (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenum);\n    parameters:\n    - id: ppenum\n      type: System.Runtime.InteropServices.UCOMIEnumMoniker\n      description: On successful return, a reference to the newly created enumerator.\n  overload: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)\n  id: Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  langs:\n  - csharp\n  name: Next(Int32,UCOMIMoniker[],Int32)\n  nameWithType: UCOMIEnumMoniker.Next(Int32,UCOMIMoniker[],Int32)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Next(Int32,UCOMIMoniker[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves a specified number of items in the enumeration sequence.\n  remarks: For more information about `IEnumMoniker::Next`, see the MSDN Library.\n  syntax:\n    content: public int Next (int celt, System.Runtime.InteropServices.UCOMIMoniker[] rgelt, out int pceltFetched);\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: The number of monikers to return in `rgelt`.\n    - id: rgelt\n      type: System.Runtime.InteropServices.UCOMIMoniker[]\n      description: On successful return, a reference to the enumerated monikers.\n    - id: pceltFetched\n      type: System.Int32\n      description: On successful return, a reference to the actual number of monikers enumerated in `rgelt`.\n    return:\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref> if the <code>pceltFetched</code> parameter equals the <code>celt</code> parameter; otherwise, <xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.UCOMIEnumMoniker.Next*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset\n  id: Reset\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: UCOMIEnumMoniker.Reset()\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Resets the enumeration sequence to the beginning.\n  remarks: For more information about `IEnumMoniker::Reset`, see the MSDN Library.\n  syntax:\n    content: public int Reset ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An HRESULT with the value <xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(System.Int32)\n  id: Skip(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  langs:\n  - csharp\n  name: Skip(Int32)\n  nameWithType: UCOMIEnumMoniker.Skip(Int32)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Skips over a specified number of items in the enumeration sequence.\n  remarks: For more information about `IEnumMoniker::Skip`, see the MSDN Library.\n  syntax:\n    content: public int Skip (int celt);\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: The number of elements to skip in the enumeration.\n    return:\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_S_OK\" name=\"S_OK\" href=\"\"></xref> if the number of elements skipped equals the <code>celt</code> parameter; otherwise, <xref uid=\"langword_csharp_S_FALSE\" name=\"S_FALSE\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Clone(UCOMIEnumMoniker)\n  nameWithType: UCOMIEnumMoniker.Clone(UCOMIEnumMoniker)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(UCOMIEnumMoniker)\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIEnumMoniker\n  nameWithType: UCOMIEnumMoniker\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Next(Int32,UCOMIMoniker[],Int32)\n  nameWithType: UCOMIEnumMoniker.Next(Int32,UCOMIMoniker[],Int32)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Next(Int32,UCOMIMoniker[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.UCOMIMoniker[]\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIMoniker\n  nameWithType: UCOMIMoniker\n  fullName: System.Runtime.InteropServices.UCOMIMoniker[]\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.UCOMIMoniker\n    name: UCOMIMoniker\n    nameWithType: UCOMIMoniker\n    fullName: UCOMIMoniker[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Reset()\n  nameWithType: UCOMIEnumMoniker.Reset()\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset()\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Skip(Int32)\n  nameWithType: UCOMIEnumMoniker.Skip(Int32)\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(Int32)\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Clone*\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Clone\n  nameWithType: UCOMIEnumMoniker.Clone\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Next*\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Next\n  nameWithType: UCOMIEnumMoniker.Next\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Reset*\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Reset\n  nameWithType: UCOMIEnumMoniker.Reset\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker.Skip*\n  parent: System.Runtime.InteropServices.UCOMIEnumMoniker\n  isExternal: false\n  name: Skip\n  nameWithType: UCOMIEnumMoniker.Skip\n"}