{"nodes":[{"pos":[1018,1123],"content":"A looping activity that executes contained activities at least once, until a condition is no longer true.","needQuote":true,"needEscape":true,"nodes":[{"content":"A looping activity that executes contained activities at least once, until a condition is no longer true.","pos":[0,105]}]},{"pos":[2719,2813],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.DoWhile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class."},{"pos":[3461,3555],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.DoWhile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class."},{"pos":[3750,3810],"content":"The condition under which the activity continues to iterate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The condition under which the activity continues to iterate.","pos":[0,60]}]},{"pos":[4579,4673],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.DoWhile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class."},{"pos":[4971,5031],"content":"The condition under which the activity continues to iterate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The condition under which the activity continues to iterate.","pos":[0,60]}]},{"pos":[5457,5512],"content":"The child activity to be executed with every iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child activity to be executed with every iteration.","pos":[0,55]}]},{"pos":[5659,5678],"content":"The child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child activity.","pos":[0,19]}]},{"pos":[6512,6524],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6983,7116],"content":"The &lt;xref:System.Activities.Activity%E2%80%991&gt; checked at the end of the loop to determine whether the loop is executed again.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Activities.Activity%E2%80%991<ph id=\"ph2\">&amp;gt;</ph> checked at the end of the loop to determine whether the loop is executed again.","pos":[0,133],"source":"The &lt;xref:System.Activities.Activity%E2%80%991&gt; checked at the end of the loop to determine whether the loop is executed again."}]},{"pos":[7290,7330],"content":"The condition for re-executing the loop.","needQuote":true,"needEscape":true,"nodes":[{"content":"The condition for re-executing the loop.","pos":[0,40]}]},{"pos":[8124,8136],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9284,9296],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9382,9394],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9864,10009],"content":"The collection of &lt;xref:System.Activity.Variable&gt; objects associated with the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.DoWhile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"The collection of <xref:System.Activity.Variable> objects associated with the <xref href=\"System.Activities.Statements.DoWhile\"></xref> activity."},{"pos":[10242,10270],"content":"The collection of variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of variables.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.DoWhile\n  id: DoWhile\n  children:\n  - System.Activities.Statements.DoWhile.#ctor\n  - System.Activities.Statements.DoWhile.#ctor(System.Activities.Activity{System.Boolean})\n  - System.Activities.Statements.DoWhile.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  - System.Activities.Statements.DoWhile.Body\n  - System.Activities.Statements.DoWhile.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.DoWhile.Condition\n  - System.Activities.Statements.DoWhile.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.DoWhile.Variables\n  langs:\n  - csharp\n  name: DoWhile\n  nameWithType: DoWhile\n  fullName: System.Activities.Statements.DoWhile\n  type: Class\n  summary: A looping activity that executes contained activities at least once, until a condition is no longer true.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class DoWhile : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: DoWhile()\n  nameWithType: DoWhile.DoWhile()\n  fullName: System.Activities.Statements.DoWhile.DoWhile()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class.\n  syntax:\n    content: public DoWhile ();\n    parameters: []\n  overload: System.Activities.Statements.DoWhile.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.#ctor(System.Activities.Activity{System.Boolean})\n  id: '#ctor(System.Activities.Activity{System.Boolean})'\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: DoWhile(Activity<Boolean>)\n  nameWithType: DoWhile.DoWhile(Activity<Boolean>)\n  fullName: System.Activities.Statements.DoWhile.DoWhile(Activity<Boolean>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class.\n  syntax:\n    content: public DoWhile (System.Activities.Activity<bool> condition);\n    parameters:\n    - id: condition\n      type: System.Activities.Activity{System.Boolean}\n      description: The condition under which the activity continues to iterate.\n  overload: System.Activities.Statements.DoWhile.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})'\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: DoWhile(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: DoWhile.DoWhile(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.DoWhile.DoWhile(Expression<Func<ActivityContext,Boolean>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.DoWhile\"></xref> class.\n  syntax:\n    content: public DoWhile (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,bool>> condition);\n    parameters:\n    - id: condition\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n      description: The condition under which the activity continues to iterate.\n  overload: System.Activities.Statements.DoWhile.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.Body\n  id: Body\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: Body\n  nameWithType: DoWhile.Body\n  fullName: System.Activities.Statements.DoWhile.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The child activity to be executed with every iteration.\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The child activity.\n  overload: System.Activities.Statements.DoWhile.Body*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: DoWhile.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.DoWhile.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.DoWhile.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.Condition\n  id: Condition\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: DoWhile.Condition\n  fullName: System.Activities.Statements.DoWhile.Condition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The &lt;xref:System.Activities.Activity%E2%80%991&gt; checked at the end of the loop to determine whether the loop is executed again.\n  syntax:\n    content: public System.Activities.Activity<bool> Condition { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: The condition for re-executing the loop.\n  overload: System.Activities.Statements.DoWhile.Condition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: DoWhile.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.DoWhile.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.DoWhile.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: DoWhile.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.DoWhile.Variables\n  id: Variables\n  parent: System.Activities.Statements.DoWhile\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: DoWhile.Variables\n  fullName: System.Activities.Statements.DoWhile.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of <xref:System.Activity.Variable> objects associated with the <xref href=\"System.Activities.Statements.DoWhile\"></xref> activity.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of variables.\n  overload: System.Activities.Statements.DoWhile.Variables*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.DoWhile.#ctor\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: DoWhile()\n  nameWithType: DoWhile.DoWhile()\n  fullName: System.Activities.Statements.DoWhile.DoWhile()\n- uid: System.Activities.Statements.DoWhile.#ctor(System.Activities.Activity{System.Boolean})\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: DoWhile(Activity<Boolean>)\n  nameWithType: DoWhile.DoWhile(Activity<Boolean>)\n  fullName: System.Activities.Statements.DoWhile.DoWhile(Activity<Boolean>)\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.DoWhile.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: DoWhile(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: DoWhile.DoWhile(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.DoWhile.DoWhile(Expression<Func<ActivityContext,Boolean>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ActivityContext,Boolean>>\n  nameWithType: Expression<Func<ActivityContext,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.ActivityContext,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.DoWhile.Body\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Body\n  nameWithType: DoWhile.Body\n  fullName: System.Activities.Statements.DoWhile.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.DoWhile.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: DoWhile.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.DoWhile.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.DoWhile.Condition\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Condition\n  nameWithType: DoWhile.Condition\n  fullName: System.Activities.Statements.DoWhile.Condition\n- uid: System.Activities.Statements.DoWhile.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: DoWhile.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.DoWhile.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: DoWhile.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.DoWhile.Variables\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Variables\n  nameWithType: DoWhile.Variables\n  fullName: System.Activities.Statements.DoWhile.Variables\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Variable>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.DoWhile.#ctor*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: DoWhile\n  nameWithType: DoWhile.DoWhile\n- uid: System.Activities.Statements.DoWhile.Body*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Body\n  nameWithType: DoWhile.Body\n- uid: System.Activities.Statements.DoWhile.CacheMetadata*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: DoWhile.CacheMetadata\n- uid: System.Activities.Statements.DoWhile.Condition*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Condition\n  nameWithType: DoWhile.Condition\n- uid: System.Activities.Statements.DoWhile.Execute*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Execute\n  nameWithType: DoWhile.Execute\n- uid: System.Activities.Statements.DoWhile.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: DoWhile.OnCreateDynamicUpdateMap\n- uid: System.Activities.Statements.DoWhile.Variables*\n  parent: System.Activities.Statements.DoWhile\n  isExternal: false\n  name: Variables\n  nameWithType: DoWhile.Variables\n"}