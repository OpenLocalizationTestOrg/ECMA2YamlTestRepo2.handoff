{"nodes":[{"pos":[290,452],"content":"Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.","pos":[0,162],"nodes":[{"content":"Defines the behavior for populating a templated ASP.NET server control with child controls.","pos":[0,91]},{"content":"The child controls represent the inline templates defined on the page.","pos":[92,162]}]}]},{"pos":[464,574],"content":"This interface is used by custom server controls, but never implemented by them. ASP.NET always implements it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This interface is used by custom server controls, but never implemented by them. ASP.NET always implements it.","pos":[0,110],"nodes":[{"content":"This interface is used by custom server controls, but never implemented by them.","pos":[0,80]},{"content":"ASP.NET always implements it.","pos":[81,110]}]}]},{"pos":[1417,1620],"content":"When implemented by a class, defines the <xref href=\"System.Web.UI.Control\"></xref> object that child controls and templates belong to. These child controls are in turn defined within an inline template.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a class, defines the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that child controls and templates belong to.","pos":[0,135],"source":"When implemented by a class, defines the <xref href=\"System.Web.UI.Control\"></xref> object that child controls and templates belong to."},{"content":"These child controls are in turn defined within an inline template.","pos":[136,203]}]},{"pos":[1632,1772],"content":"When developing templated server controls, you do not need to implement this method; the .NET Framework provides the implementation for you.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When developing templated server controls, you do not need to implement this method; the .NET Framework provides the implementation for you.","pos":[0,140]}]},{"pos":[2158,2274],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to contain the instances of controls from the inline template.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> object to contain the instances of controls from the inline template."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ITemplate\n  id: ITemplate\n  children:\n  - System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)\n  langs:\n  - csharp\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n  type: Interface\n  summary: Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.\n  remarks: This interface is used by custom server controls, but never implemented by them. ASP.NET always implements it.\n  example:\n  - \"The following code example demonstrates a simple templated server control that uses the ITemplate interface to create a templated property.  \\n  \\n [!code-cs[Classic ITemplate Example#1](~/add/codesnippet/csharp/t-system.web.ui.itemplate_1.cs)]\\n [!code-vb[Classic ITemplate Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.itemplate_1.vb)]\"\n  syntax:\n    content: public interface ITemplate\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)\n  id: InstantiateIn(System.Web.UI.Control)\n  parent: System.Web.UI.ITemplate\n  langs:\n  - csharp\n  name: InstantiateIn(Control)\n  nameWithType: ITemplate.InstantiateIn(Control)\n  fullName: System.Web.UI.ITemplate.InstantiateIn(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When implemented by a class, defines the <xref href=\"System.Web.UI.Control\"></xref> object that child controls and templates belong to. These child controls are in turn defined within an inline template.\n  remarks: When developing templated server controls, you do not need to implement this method; the .NET Framework provides the implementation for you.\n  example:\n  - >-\n    [!code-vb[ITemplate_Interface#2](~/add/codesnippet/visualbasic/m-system.web.ui.itemplat_1.vb)]\n     [!code-cs[ITemplate_Interface#2](~/add/codesnippet/csharp/m-system.web.ui.itemplat_1.cs)]\n  syntax:\n    content: public void InstantiateIn (System.Web.UI.Control container);\n    parameters:\n    - id: container\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> object to contain the instances of controls from the inline template.\n  overload: System.Web.UI.ITemplate.InstantiateIn*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)\n  parent: System.Web.UI.ITemplate\n  isExternal: false\n  name: InstantiateIn(Control)\n  nameWithType: ITemplate.InstantiateIn(Control)\n  fullName: System.Web.UI.ITemplate.InstantiateIn(Control)\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.UI.ITemplate.InstantiateIn*\n  parent: System.Web.UI.ITemplate\n  isExternal: false\n  name: InstantiateIn\n  nameWithType: ITemplate.InstantiateIn\n"}