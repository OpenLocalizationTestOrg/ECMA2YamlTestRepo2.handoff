{"nodes":[{"pos":[857,912],"content":"The exception that is thrown when a parse error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown when a parse error occurs.","pos":[0,55]}]},{"pos":[924,1164],"content":"The HttpParseException class is an HTTP-specific exception class that enables ASP.NET to output parser exception information. For more information on throwing and handling exceptions, see [Exceptions](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HttpParseException class is an HTTP-specific exception class that enables ASP.NET to output parser exception information.","pos":[0,125]},{"content":"For more information on throwing and handling exceptions, see <bpt id=\"p1\">[</bpt>Exceptions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[126,240],"source":" For more information on throwing and handling exceptions, see [Exceptions](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3125,3216],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpParseException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class."},{"pos":[3775,3897],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpParseException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with a specified error message."},{"pos":[4474,4529],"content":"The exception message to specify when the error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception message to specify when the error occurs.","pos":[0,55]}]},{"pos":[5080,5231],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpParseException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with a specified error message and a reference to the inner."},{"pos":[5404,5459],"content":"The exception message to specify when the error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception message to specify when the error occurs.","pos":[0,55]}]},{"pos":[5533,5833],"content":"The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <ph id=\"ph1\">`innerException`</ph> parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> block that handles the inner exception.","pos":[58,300],"source":" If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception."}]},{"pos":[6526,6732],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpParseException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with specific information about the source code being compiled and the line number on which the exception occurred.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with specific information about the source code being compiled and the line number on which the exception occurred."},{"pos":[6954,7009],"content":"The exception message to specify when the error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception message to specify when the error occurs.","pos":[0,55]}]},{"pos":[7083,7369],"content":"The exception that is the cause of the current exception. If `innerException` is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If <ph id=\"ph1\">`innerException`</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> block that handles the inner exception.","pos":[58,286],"source":" If `innerException` is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception."}]},{"pos":[7437,7472],"content":"The virtual path for the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path for the exception.","pos":[0,35]}]},{"pos":[7539,7596],"content":"The source code being compiled when the exception occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source code being compiled when the exception occurs.","pos":[0,57]}]},{"pos":[7656,7704],"content":"The line number on which the exception occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The line number on which the exception occurred.","pos":[0,48]}]},{"pos":[8108,8169],"content":"Gets the name of the file being parsed when the error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the file being parsed when the error occurs.","pos":[0,61]}]},{"pos":[8181,8335],"content":"The FileName property returns the physical path to the source file that has the error unless the physical path is <ph id=\"ph1\">`null`</ph>, in which case it returns <ph id=\"ph2\">`null`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The FileName property returns the physical path to the source file that has the error unless the physical path is `null`, in which case it returns `null`."},{"pos":[8448,8687],"content":"The physical path to the source file that is being parsed when the error occurs; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the physical path is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The physical path to the source file that is being parsed when the error occurs; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the physical path is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9413,9570],"content":"When overridden in a derived class, sets the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with information about the exception.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with information about the exception."},{"pos":[9582,9848],"content":"The GetObjectData method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the SerializationInfo transmitted over the stream.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetObjectData method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the SerializationInfo transmitted over the stream.","pos":[0,266],"nodes":[{"content":"The GetObjectData method sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; object with all the exception object data targeted for serialization.","pos":[0,155],"source":"The GetObjectData method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization."},{"content":"During deserialization, the exception is reconstituted from the SerializationInfo transmitted over the stream.","pos":[156,266]}]}]},{"pos":[10989,11132],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the serialized object data about the exception being thrown.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."},{"pos":[11228,11354],"content":"The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains contextual information about the source or destination.","pos":[0,126],"source":"The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination."}]},{"pos":[11528,11624],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11942,12005],"content":"Gets the number of the line being parsed when the error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of the line being parsed when the error occurs.","pos":[0,63]}]},{"pos":[12110,12204],"content":"The number of the line being parsed when the error occurs. This value is 1-based, not 0-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of the line being parsed when the error occurs. This value is 1-based, not 0-based.","pos":[0,94],"nodes":[{"content":"The number of the line being parsed when the error occurs.","pos":[0,58]},{"content":"This value is 1-based, not 0-based.","pos":[59,94]}]}]},{"pos":[12627,12676],"content":"Gets the parser errors for the current exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parser errors for the current exception.","pos":[0,49]}]},{"pos":[12838,12898],"content":"A collection of the parser errors for the current exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the parser errors for the current exception.","pos":[0,60]}]},{"pos":[13324,13386],"content":"Gets the virtual path to source file that generated the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the virtual path to source file that generated the error.","pos":[0,62]}]},{"pos":[13502,13563],"content":"The virtual path to the source file that generated the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to the source file that generated the error.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpParseException\n  id: HttpParseException\n  children:\n  - System.Web.HttpParseException.#ctor\n  - System.Web.HttpParseException.#ctor(System.String)\n  - System.Web.HttpParseException.#ctor(System.String,System.Exception)\n  - System.Web.HttpParseException.#ctor(System.String,System.Exception,System.String,System.String,System.Int32)\n  - System.Web.HttpParseException.FileName\n  - System.Web.HttpParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Web.HttpParseException.Line\n  - System.Web.HttpParseException.ParserErrors\n  - System.Web.HttpParseException.VirtualPath\n  langs:\n  - csharp\n  name: HttpParseException\n  nameWithType: HttpParseException\n  fullName: System.Web.HttpParseException\n  type: Class\n  summary: The exception that is thrown when a parse error occurs.\n  remarks: The HttpParseException class is an HTTP-specific exception class that enables ASP.NET to output parser exception information. For more information on throwing and handling exceptions, see [Exceptions](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example demonstrates how to use the HttpParseException to customize errors generated during page parsing. In this example, a customized <xref:System.Web.UI.HtmlControls.HtmlSelect> control is defined. If child elements of the custom control are not of a specified type then an HttpParseException is thrown in the overridden <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> method of a custom <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder>. To generate a parse exception, change the child element literal `MyCustomOption` to any other string.  \\n  \\n [!code-cs[HttpParseException#1](~/add/codesnippet/csharp/t-system.web.httpparseex_1.aspx)]\\n [!code-vb[HttpParseException#1](~/add/codesnippet/visualbasic/t-system.web.httpparseex_1.aspx)]  \\n  \\n [!code-vb[HttpParseException#2](~/add/codesnippet/visualbasic/t-system.web.httpparseex_2.vb)]\\n [!code-cs[HttpParseException#2](~/add/codesnippet/csharp/t-system.web.httpparseex_2.cs)]\"\n  syntax:\n    content: 'public sealed class HttpParseException : System.Web.HttpException'\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  - System.Runtime.InteropServices.ExternalException\n  - System.Web.HttpException\n  implements: []\n  inheritedMembers:\n  - System.Runtime.InteropServices.ExternalException.ErrorCode\n  - System.Runtime.InteropServices.ExternalException.ToString\n  - System.Web.HttpException.CreateFromLastError(System.String)\n  - System.Web.HttpException.GetHtmlErrorMessage\n  - System.Web.HttpException.GetHttpCode\n  - System.Web.HttpException.WebEventCode\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: HttpParseException()\n  nameWithType: HttpParseException.HttpParseException()\n  fullName: System.Web.HttpParseException.HttpParseException()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class.\n  syntax:\n    content: public HttpParseException ();\n    parameters: []\n  overload: System.Web.HttpParseException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: HttpParseException(String)\n  nameWithType: HttpParseException.HttpParseException(String)\n  fullName: System.Web.HttpParseException.HttpParseException(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with a specified error message.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Web.HttpException.%23ctor%2A> constructor.  For a complete, working code example, see the <xref:System.Web.HttpParseException> overview topic.  \\n  \\n [!code-vb[HttpParseException#3](~/add/codesnippet/visualbasic/m-system.web.httpparseex_1.vb)]\\n [!code-cs[HttpParseException#3](~/add/codesnippet/csharp/m-system.web.httpparseex_1.cs)]\"\n  syntax:\n    content: public HttpParseException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message to specify when the error occurs.\n  overload: System.Web.HttpParseException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: HttpParseException(String,Exception)\n  nameWithType: HttpParseException.HttpParseException(String,Exception)\n  fullName: System.Web.HttpParseException.HttpParseException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with a specified error message and a reference to the inner.\n  syntax:\n    content: public HttpParseException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message to specify when the error occurs.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.\n  overload: System.Web.HttpParseException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.#ctor(System.String,System.Exception,System.String,System.String,System.Int32)\n  id: '#ctor(System.String,System.Exception,System.String,System.String,System.Int32)'\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: HttpParseException(String,Exception,String,String,Int32)\n  nameWithType: HttpParseException.HttpParseException(String,Exception,String,String,Int32)\n  fullName: System.Web.HttpParseException.HttpParseException(String,Exception,String,String,Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpParseException\"></xref> class with specific information about the source code being compiled and the line number on which the exception occurred.\n  syntax:\n    content: public HttpParseException (string message, Exception innerException, string virtualPath, string sourceCode, int line);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message to specify when the error occurs.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If `innerException` is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path for the exception.\n    - id: sourceCode\n      type: System.String\n      description: The source code being compiled when the exception occurs.\n    - id: line\n      type: System.Int32\n      description: The line number on which the exception occurred.\n  overload: System.Web.HttpParseException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.FileName\n  id: FileName\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: HttpParseException.FileName\n  fullName: System.Web.HttpParseException.FileName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the name of the file being parsed when the error occurs.\n  remarks: The FileName property returns the physical path to the source file that has the error unless the physical path is `null`, in which case it returns `null`.\n  syntax:\n    content: public string FileName { get; }\n    return:\n      type: System.String\n      description: The physical path to the source file that is being parsed when the error occurs; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the physical path is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.HttpParseException.FileName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: HttpParseException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Web.HttpParseException.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with information about the exception.\n  remarks: The GetObjectData method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the SerializationInfo transmitted over the stream.\n  example:\n  - \"The following code example shows how to define a derived serializable <xref:System.Exception> class that implements the GetObjectData method, which makes minor changes to two properties, and then calls the base class to perform the serialization. The example forces a divide-by-0 error, and then creates an instance of the derived <xref:System.Exception>. The code serializes the instance to a file, deserializes the file into a new <xref:System.Exception>, which it throws, and then catches and displays the exception's data.  \\n  \\n [!code-cs[System.Exception.GetObjectData#1](~/add/codesnippet/csharp/6cb4e3e6-a72d-483a-994d-_1.cs)]\\n [!code-cpp[System.Exception.GetObjectData#1](~/add/codesnippet/cpp/6cb4e3e6-a72d-483a-994d-_1.cpp)]\\n [!code-vb[System.Exception.GetObjectData#1](~/add/codesnippet/visualbasic/6cb4e3e6-a72d-483a-994d-_1.vb)]\"\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.\n  overload: System.Web.HttpParseException.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.Line\n  id: Line\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: Line\n  nameWithType: HttpParseException.Line\n  fullName: System.Web.HttpParseException.Line\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of the line being parsed when the error occurs.\n  syntax:\n    content: public int Line { get; }\n    return:\n      type: System.Int32\n      description: The number of the line being parsed when the error occurs. This value is 1-based, not 0-based.\n  overload: System.Web.HttpParseException.Line*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.ParserErrors\n  id: ParserErrors\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: ParserErrors\n  nameWithType: HttpParseException.ParserErrors\n  fullName: System.Web.HttpParseException.ParserErrors\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the parser errors for the current exception.\n  syntax:\n    content: public System.Web.ParserErrorCollection ParserErrors { get; }\n    return:\n      type: System.Web.ParserErrorCollection\n      description: A collection of the parser errors for the current exception.\n  overload: System.Web.HttpParseException.ParserErrors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpParseException.VirtualPath\n  id: VirtualPath\n  parent: System.Web.HttpParseException\n  langs:\n  - csharp\n  name: VirtualPath\n  nameWithType: HttpParseException.VirtualPath\n  fullName: System.Web.HttpParseException.VirtualPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the virtual path to source file that generated the error.\n  syntax:\n    content: public string VirtualPath { get; }\n    return:\n      type: System.String\n      description: The virtual path to the source file that generated the error.\n  overload: System.Web.HttpParseException.VirtualPath*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.HttpException\n  isExternal: false\n  name: System.Web.HttpException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.HttpParseException.#ctor\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: HttpParseException()\n  nameWithType: HttpParseException.HttpParseException()\n  fullName: System.Web.HttpParseException.HttpParseException()\n- uid: System.Web.HttpParseException.#ctor(System.String)\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: HttpParseException(String)\n  nameWithType: HttpParseException.HttpParseException(String)\n  fullName: System.Web.HttpParseException.HttpParseException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpParseException.#ctor(System.String,System.Exception)\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: HttpParseException(String,Exception)\n  nameWithType: HttpParseException.HttpParseException(String,Exception)\n  fullName: System.Web.HttpParseException.HttpParseException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.HttpParseException.#ctor(System.String,System.Exception,System.String,System.String,System.Int32)\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: HttpParseException(String,Exception,String,String,Int32)\n  nameWithType: HttpParseException.HttpParseException(String,Exception,String,String,Int32)\n  fullName: System.Web.HttpParseException.HttpParseException(String,Exception,String,String,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpParseException.FileName\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: FileName\n  nameWithType: HttpParseException.FileName\n  fullName: System.Web.HttpParseException.FileName\n- uid: System.Web.HttpParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: HttpParseException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Web.HttpParseException.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Web.HttpParseException.Line\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: Line\n  nameWithType: HttpParseException.Line\n  fullName: System.Web.HttpParseException.Line\n- uid: System.Web.HttpParseException.ParserErrors\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: ParserErrors\n  nameWithType: HttpParseException.ParserErrors\n  fullName: System.Web.HttpParseException.ParserErrors\n- uid: System.Web.ParserErrorCollection\n  parent: System.Web\n  isExternal: false\n  name: ParserErrorCollection\n  nameWithType: ParserErrorCollection\n  fullName: System.Web.ParserErrorCollection\n- uid: System.Web.HttpParseException.VirtualPath\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: VirtualPath\n  nameWithType: HttpParseException.VirtualPath\n  fullName: System.Web.HttpParseException.VirtualPath\n- uid: System.Web.HttpParseException.#ctor*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: HttpParseException\n  nameWithType: HttpParseException.HttpParseException\n- uid: System.Web.HttpParseException.FileName*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: FileName\n  nameWithType: HttpParseException.FileName\n- uid: System.Web.HttpParseException.GetObjectData*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: HttpParseException.GetObjectData\n- uid: System.Web.HttpParseException.Line*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: Line\n  nameWithType: HttpParseException.Line\n- uid: System.Web.HttpParseException.ParserErrors*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: ParserErrors\n  nameWithType: HttpParseException.ParserErrors\n- uid: System.Web.HttpParseException.VirtualPath*\n  parent: System.Web.HttpParseException\n  isExternal: false\n  name: VirtualPath\n  nameWithType: HttpParseException.VirtualPath\n"}