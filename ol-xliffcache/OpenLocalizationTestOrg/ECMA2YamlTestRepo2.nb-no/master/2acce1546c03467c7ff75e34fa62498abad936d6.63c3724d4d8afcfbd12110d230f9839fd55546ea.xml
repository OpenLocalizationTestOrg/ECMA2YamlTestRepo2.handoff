{"nodes":[{"pos":[1104,1193],"content":"Specifies whether a member is typically used for binding. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether a member is typically used for binding. This class cannot be inherited.","pos":[0,89],"nodes":[{"content":"Specifies whether a member is typically used for binding.","pos":[0,57]},{"content":"This class cannot be inherited.","pos":[58,89]}]}]},{"pos":[1206,2804],"content":"You can specify this attribute for multiple members, typically properties, on a control.       If a property has been marked with the BindableAttribute set to `true`, then a property change notification should be raised for that property. This means that if the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property is <xref:System.ComponentModel.BindableAttribute.Yes>, then two-way data binding is supported. If <xref:System.ComponentModel.BindableAttribute.Bindable%2A> is <xref:System.ComponentModel.BindableAttribute.No>, you can still bind to the property, but it should not be shown in the default set of properties to bind to, because it might or might not raise a property change notification.      > [!NOTE] >  When you mark a property with <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.      > [!CAUTION] >  You can use this attribute at design time only. Nothing prevents you from binding to any property during run time.       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can specify this attribute for multiple members, typically properties, on a control.","pos":[0,88]},{"content":"If a property has been marked with the BindableAttribute set to <ph id=\"ph1\">`true`</ph>, then a property change notification should be raised for that property.","pos":[95,238],"source":"       If a property has been marked with the BindableAttribute set to `true`, then a property change notification should be raised for that property."},{"content":"This means that if the &lt;xref:System.ComponentModel.BindableAttribute.Bindable%2A&gt; property is &lt;xref:System.ComponentModel.BindableAttribute.Yes&gt;, then two-way data binding is supported.","pos":[239,424],"source":" This means that if the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property is <xref:System.ComponentModel.BindableAttribute.Yes>, then two-way data binding is supported."},{"content":"If &lt;xref:System.ComponentModel.BindableAttribute.Bindable%2A&gt; is &lt;xref:System.ComponentModel.BindableAttribute.No&gt;, you can still bind to the property, but it should not be shown in the default set of properties to bind to, because it might or might not raise a property change notification.","pos":[425,716],"source":" If <xref:System.ComponentModel.BindableAttribute.Bindable%2A> is <xref:System.ComponentModel.BindableAttribute.No>, you can still bind to the property, but it should not be shown in the default set of properties to bind to, because it might or might not raise a property change notification."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you mark a property with &lt;xref:System.ComponentModel.BindableAttribute.%23ctor%2A&gt; set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member &lt;xref:System.ComponentModel.BindableAttribute.Yes&gt;.","pos":[722,947],"source":"      > [!NOTE] >  When you mark a property with <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>."},{"content":"For a property marked with the &lt;xref:System.ComponentModel.BindableAttribute.%23ctor%2A&gt; set to <ph id=\"ph1\">`false`</ph>, the value is &lt;xref:System.ComponentModel.BindableAttribute.No&gt;.","pos":[948,1116],"source":" For a property marked with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>."},{"content":"Therefore, to check the value of this attribute in your code, you must specify the attribute as &lt;xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName&gt; or &lt;xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName&gt;.","pos":[1117,1367],"source":" Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  You can use this attribute at design time only.","pos":[1373,1436],"source":"      > [!CAUTION] >  You can use this attribute at design time only."},{"content":"Nothing prevents you from binding to any property during run time.","pos":[1437,1503]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1510,1588],"source":"       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5456,5578],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a Boolean value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class with a Boolean value."},{"pos":[5590,6204],"content":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you mark a property with the &lt;xref:System.ComponentModel.BindableAttribute&gt; set to <ph id=\"ph1\">`true`</ph>, the value of this attribute is set to the constant member &lt;xref:System.ComponentModel.BindableAttribute.Yes&gt;.","pos":[0,205],"source":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>."},{"content":"For a property marked with the &lt;xref:System.ComponentModel.BindableAttribute&gt; set to <ph id=\"ph1\">`false`</ph>, the value is &lt;xref:System.ComponentModel.BindableAttribute.No&gt;.","pos":[206,363],"source":" For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>."},{"content":"Therefore, to check the value of this attribute in your code, you must specify the attribute as &lt;xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName&gt; or &lt;xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName&gt;.","pos":[364,614],"source":" Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>."}]},{"pos":[7040,7204],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use property for binding; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use property for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7809,7992],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with one of the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.BindableSupport\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class with one of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values."},{"pos":[8004,8618],"content":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you mark a property with the &lt;xref:System.ComponentModel.BindableAttribute&gt; set to <ph id=\"ph1\">`true`</ph>, the value of this attribute is set to the constant member &lt;xref:System.ComponentModel.BindableAttribute.Yes&gt;.","pos":[0,205],"source":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>."},{"content":"For a property marked with the &lt;xref:System.ComponentModel.BindableAttribute&gt; set to <ph id=\"ph1\">`false`</ph>, the value is &lt;xref:System.ComponentModel.BindableAttribute.No&gt;.","pos":[206,363],"source":" For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>."},{"content":"Therefore, to check the value of this attribute in your code, you must specify the attribute as &lt;xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName&gt; or &lt;xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName&gt;.","pos":[364,614],"source":" Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>."}]},{"pos":[9498,9575],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableSupport\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values."},{"pos":[10239,10340],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class."},{"pos":[10537,10701],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use property for binding; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use property for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10792,10870],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindingDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.ComponentModel.BindingDirection\"></xref> values."},{"pos":[11604,11705],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class."},{"pos":[11952,12029],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableSupport\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values."},{"pos":[12120,12198],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindingDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.ComponentModel.BindingDirection\"></xref> values."},{"pos":[12648,12718],"content":"Gets a value indicating that a property is typically used for binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating that a property is typically used for binding.","pos":[0,70]}]},{"pos":[14122,14304],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is typically used for binding; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is typically used for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14749,14945],"content":"Specifies the default value for the <xref href=\"System.ComponentModel.BindableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.BindableAttribute.No\"></xref>. This field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the default value for the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which is <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.BindableAttribute.No\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"Specifies the default value for the <xref href=\"System.ComponentModel.BindableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.BindableAttribute.No\"></xref>."},{"content":"This field is read-only.","pos":[172,196]}]},{"pos":[14957,15325],"content":"When you mark a property with this value, the <xref:System.ComponentModel.BindableAttribute> is set to the constant member <xref:System.ComponentModel.BindableAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you mark a property with this value, the <xref:System.ComponentModel.BindableAttribute> is set to the constant member <xref:System.ComponentModel.BindableAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.","pos":[0,368],"nodes":[{"content":"When you mark a property with this value, the &lt;xref:System.ComponentModel.BindableAttribute&gt; is set to the constant member &lt;xref:System.ComponentModel.BindableAttribute&gt;.","pos":[0,170],"source":"When you mark a property with this value, the <xref:System.ComponentModel.BindableAttribute> is set to the constant member <xref:System.ComponentModel.BindableAttribute>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as &lt;xref:System.ComponentModel.BindableAttribute?displayProperty=fullName&gt;.","pos":[171,368],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>."}]}]},{"pos":[15504,15516],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15912,15996],"content":"Gets a value indicating the direction or directions of this property's data binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating the direction or directions of this property's data binding.","pos":[0,84]}]},{"pos":[16167,16213],"content":"The direction of this property’s data binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The direction of this property’s data binding.","pos":[0,46]}]},{"pos":[16709,16811],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.ComponentModel.BindableAttribute\"></xref> objects are equal."},{"pos":[16952,16974],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[17033,17340],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if it is not equal.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.ComponentModel.BindableAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.BindableAttribute\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not equal."},{"pos":[17810,17911],"content":"Serves as a hash function for the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Serves as a hash function for the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class."},{"pos":[18046,18135],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BindableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.ComponentModel.BindableAttribute\"></xref>."},{"pos":[18645,18689],"content":"Determines if this attribute is the default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if this attribute is the default.","pos":[0,44]}]},{"pos":[18834,19033],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the attribute is the default value for this attribute class; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is the default value for this attribute class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19463,19548],"content":"Specifies that a property is not typically used for binding. This field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that a property is not typically used for binding. This field is read-only.","pos":[0,85],"nodes":[{"content":"Specifies that a property is not typically used for binding.","pos":[0,60]},{"content":"This field is read-only.","pos":[61,85]}]}]},{"pos":[19561,19963],"content":"The No field is the default setting for the <xref:System.ComponentModel.BindableAttribute>.       When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `false,` the value of this attribute is set to the constant member No. Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as No.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The No field is the default setting for the &lt;xref:System.ComponentModel.BindableAttribute&gt;.","pos":[0,91],"source":"The No field is the default setting for the <xref:System.ComponentModel.BindableAttribute>."},{"content":"When you mark a property with the &lt;xref:System.ComponentModel.BindableAttribute.%23ctor%2A&gt; constructor of the value <ph id=\"ph1\">`false,`</ph> the value of this attribute is set to the constant member No.","pos":[98,285],"source":"       When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `false,` the value of this attribute is set to the constant member No."},{"content":"Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as No.","pos":[286,400]}]},{"pos":[20138,20150],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20513,20594],"content":"Specifies that a property is typically used for binding. This field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that a property is typically used for binding. This field is read-only.","pos":[0,81],"nodes":[{"content":"Specifies that a property is typically used for binding.","pos":[0,56]},{"content":"This field is read-only.","pos":[57,81]}]}]},{"pos":[20606,20945],"content":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `true`, the value of the <xref:System.ComponentModel.BindableAttribute> is set to the constant member Yes. Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you mark a property with the &lt;xref:System.ComponentModel.BindableAttribute.%23ctor%2A&gt; constructor of the value <ph id=\"ph1\">`true`</ph>, the value of the &lt;xref:System.ComponentModel.BindableAttribute&gt; is set to the constant member Yes.","pos":[0,223],"source":"When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `true`, the value of the <xref:System.ComponentModel.BindableAttribute> is set to the constant member Yes."},{"content":"Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.","pos":[224,339]}]},{"pos":[21120,21132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.BindableAttribute\n  id: BindableAttribute\n  children:\n  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)\n  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)\n  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)\n  - System.ComponentModel.BindableAttribute.Bindable\n  - System.ComponentModel.BindableAttribute.Default\n  - System.ComponentModel.BindableAttribute.Direction\n  - System.ComponentModel.BindableAttribute.Equals(System.Object)\n  - System.ComponentModel.BindableAttribute.GetHashCode\n  - System.ComponentModel.BindableAttribute.IsDefaultAttribute\n  - System.ComponentModel.BindableAttribute.No\n  - System.ComponentModel.BindableAttribute.Yes\n  langs:\n  - csharp\n  name: BindableAttribute\n  nameWithType: BindableAttribute\n  fullName: System.ComponentModel.BindableAttribute\n  type: Class\n  summary: Specifies whether a member is typically used for binding. This class cannot be inherited.\n  remarks: \"You can specify this attribute for multiple members, typically properties, on a control.  \\n  \\n If a property has been marked with the BindableAttribute set to `true`, then a property change notification should be raised for that property. This means that if the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property is <xref:System.ComponentModel.BindableAttribute.Yes>, then two-way data binding is supported. If <xref:System.ComponentModel.BindableAttribute.Bindable%2A> is <xref:System.ComponentModel.BindableAttribute.No>, you can still bind to the property, but it should not be shown in the default set of properties to bind to, because it might or might not raise a property change notification.  \\n  \\n> [!NOTE]\\n>  When you mark a property with <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.  \\n  \\n> [!CAUTION]\\n>  You can use this attribute at design time only. Nothing prevents you from binding to any property during run time.  \\n  \\n For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example marks a property as appropriate to bind data to.  \\n  \\n [!code-cs[Classic BindableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._142_1.cs)]\\n [!code-vb[Classic BindableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._142_1.vb)]\\n [!code-cpp[Classic BindableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._142_1.cpp)]  \\n  \\n The next code example shows how to check the value of the BindableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Finally, the code returns the attributes for this property and saves them in the attributes variable. The code example presents two different ways to check the value of the BindableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property to check the value.  \\n  \\n [!code-cs[Classic BindableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._142_2.cs)]\\n [!code-vb[Classic BindableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._142_2.vb)]\\n [!code-cpp[Classic BindableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._142_2.cpp)]  \\n  \\n If you marked a class with the BindableAttribute, use the following code example to check the value.  \\n  \\n [!code-cs[Classic BindableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._142_3.cs)]\\n [!code-vb[Classic BindableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._142_3.vb)]\\n [!code-cpp[Classic BindableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._142_3.cpp)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class BindableAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: BindableAttribute(Boolean)\n  nameWithType: BindableAttribute.BindableAttribute(Boolean)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class with a Boolean value.\n  remarks: When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.\n  example:\n  - \"The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \\n  \\n [!code-cs[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._14_1.cs)]\\n [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._14_1.vb)]\\n [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._14_1.cpp)]\"\n  syntax:\n    content: public BindableAttribute (bool bindable);\n    parameters:\n    - id: bindable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use property for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BindableAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)\n  id: '#ctor(System.ComponentModel.BindableSupport)'\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: BindableAttribute(BindableSupport)\n  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class with one of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values.\n  remarks: When you mark a property with the <xref:System.ComponentModel.BindableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BindableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.BindableAttribute> set to `false`, the value is <xref:System.ComponentModel.BindableAttribute.No>. Therefore, to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.\n  example:\n  - \"The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \\n  \\n [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/cpp/f23f7ef8-7d45-4e98-96fc-_1.cpp)]\\n [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/visualbasic/f23f7ef8-7d45-4e98-96fc-_1.vb)]\\n [!code-cs[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/csharp/f23f7ef8-7d45-4e98-96fc-_1.cs)]\"\n  syntax:\n    content: public BindableAttribute (System.ComponentModel.BindableSupport flags);\n    parameters:\n    - id: flags\n      type: System.ComponentModel.BindableSupport\n      description: One of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values.\n  overload: System.ComponentModel.BindableAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)\n  id: '#ctor(System.Boolean,System.ComponentModel.BindingDirection)'\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: BindableAttribute(Boolean,BindingDirection)\n  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class.\n  syntax:\n    content: public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);\n    parameters:\n    - id: bindable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use property for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: direction\n      type: System.ComponentModel.BindingDirection\n      description: One of the <xref href=\"System.ComponentModel.BindingDirection\"></xref> values.\n  overload: System.ComponentModel.BindableAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)\n  id: '#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)'\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: BindableAttribute(BindableSupport,BindingDirection)\n  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class.\n  syntax:\n    content: public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);\n    parameters:\n    - id: flags\n      type: System.ComponentModel.BindableSupport\n      description: One of the <xref href=\"System.ComponentModel.BindableSupport\"></xref> values.\n    - id: direction\n      type: System.ComponentModel.BindingDirection\n      description: One of the <xref href=\"System.ComponentModel.BindingDirection\"></xref> values.\n  overload: System.ComponentModel.BindableAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.Bindable\n  id: Bindable\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: Bindable\n  nameWithType: BindableAttribute.Bindable\n  fullName: System.ComponentModel.BindableAttribute.Bindable\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating that a property is typically used for binding.\n  remarks: ''\n  example:\n  - \"The following code example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by doing the following:  \\n  \\n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \\n  \\n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \\n  \\n-   Saving the attributes for this property in the attributes variable.  \\n  \\n Then, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BindableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \\n  \\n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see  \\n  \\n [Assembly Names](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._3_1.cs)]\\n [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._3_1.cpp)]\\n [!code-vb[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._3_1.vb)]\"\n  syntax:\n    content: public bool Bindable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is typically used for binding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BindableAttribute.Bindable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.Default\n  id: Default\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: BindableAttribute.Default\n  fullName: System.ComponentModel.BindableAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies the default value for the <xref href=\"System.ComponentModel.BindableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.BindableAttribute.No\"></xref>. This field is read-only.\n  remarks: When you mark a property with this value, the <xref:System.ComponentModel.BindableAttribute> is set to the constant member <xref:System.ComponentModel.BindableAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.BindableAttribute Default;\n    return:\n      type: System.ComponentModel.BindableAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.Direction\n  id: Direction\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: BindableAttribute.Direction\n  fullName: System.ComponentModel.BindableAttribute.Direction\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating the direction or directions of this property's data binding.\n  syntax:\n    content: public System.ComponentModel.BindingDirection Direction { get; }\n    return:\n      type: System.ComponentModel.BindingDirection\n      description: The direction of this property’s data binding.\n  overload: System.ComponentModel.BindableAttribute.Direction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: BindableAttribute.Equals(Object)\n  fullName: System.ComponentModel.BindableAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Determines whether two <xref href=\"System.ComponentModel.BindableAttribute\"></xref> objects are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.ComponentModel.BindableAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.BindableAttribute\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not equal.\n  overload: System.ComponentModel.BindableAttribute.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: BindableAttribute.GetHashCode()\n  fullName: System.ComponentModel.BindableAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Serves as a hash function for the <xref href=\"System.ComponentModel.BindableAttribute\"></xref> class.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.BindableAttribute\"></xref>.\n  overload: System.ComponentModel.BindableAttribute.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: BindableAttribute.IsDefaultAttribute()\n  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Determines if this attribute is the default.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the attribute is the default value for this attribute class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BindableAttribute.IsDefaultAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.No\n  id: No\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: BindableAttribute.No\n  fullName: System.ComponentModel.BindableAttribute.No\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies that a property is not typically used for binding. This field is read-only.\n  remarks: \"The No field is the default setting for the <xref:System.ComponentModel.BindableAttribute>.  \\n  \\n When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `false,` the value of this attribute is set to the constant member No. Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as No.\"\n  syntax:\n    content: public static readonly System.ComponentModel.BindableAttribute No;\n    return:\n      type: System.ComponentModel.BindableAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BindableAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.BindableAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: BindableAttribute.Yes\n  fullName: System.ComponentModel.BindableAttribute.Yes\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies that a property is typically used for binding. This field is read-only.\n  remarks: When you mark a property with the <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> constructor of the value `true`, the value of the <xref:System.ComponentModel.BindableAttribute> is set to the constant member Yes. Therefore, to check whether the attribute is set to this value in your code, you must specify the attribute as Yes.\n  syntax:\n    content: public static readonly System.ComponentModel.BindableAttribute Yes;\n    return:\n      type: System.ComponentModel.BindableAttribute\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: BindableAttribute(Boolean)\n  nameWithType: BindableAttribute.BindableAttribute(Boolean)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: BindableAttribute(BindableSupport)\n  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)\n- uid: System.ComponentModel.BindableSupport\n  parent: System.ComponentModel\n  isExternal: false\n  name: BindableSupport\n  nameWithType: BindableSupport\n  fullName: System.ComponentModel.BindableSupport\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: BindableAttribute(Boolean,BindingDirection)\n  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)\n- uid: System.ComponentModel.BindingDirection\n  parent: System.ComponentModel\n  isExternal: false\n  name: BindingDirection\n  nameWithType: BindingDirection\n  fullName: System.ComponentModel.BindingDirection\n- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: BindableAttribute(BindableSupport,BindingDirection)\n  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)\n  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)\n- uid: System.ComponentModel.BindableAttribute.Bindable\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Bindable\n  nameWithType: BindableAttribute.Bindable\n  fullName: System.ComponentModel.BindableAttribute.Bindable\n- uid: System.ComponentModel.BindableAttribute.Default\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Default\n  nameWithType: BindableAttribute.Default\n  fullName: System.ComponentModel.BindableAttribute.Default\n- uid: System.ComponentModel.BindableAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: BindableAttribute\n  nameWithType: BindableAttribute\n  fullName: System.ComponentModel.BindableAttribute\n- uid: System.ComponentModel.BindableAttribute.Direction\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Direction\n  nameWithType: BindableAttribute.Direction\n  fullName: System.ComponentModel.BindableAttribute.Direction\n- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: BindableAttribute.Equals(Object)\n  fullName: System.ComponentModel.BindableAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.BindableAttribute.GetHashCode\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: BindableAttribute.GetHashCode()\n  fullName: System.ComponentModel.BindableAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: BindableAttribute.IsDefaultAttribute()\n  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.BindableAttribute.No\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: No\n  nameWithType: BindableAttribute.No\n  fullName: System.ComponentModel.BindableAttribute.No\n- uid: System.ComponentModel.BindableAttribute.Yes\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: BindableAttribute.Yes\n  fullName: System.ComponentModel.BindableAttribute.Yes\n- uid: System.ComponentModel.BindableAttribute.#ctor*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: BindableAttribute\n  nameWithType: BindableAttribute.BindableAttribute\n- uid: System.ComponentModel.BindableAttribute.Bindable*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Bindable\n  nameWithType: BindableAttribute.Bindable\n- uid: System.ComponentModel.BindableAttribute.Direction*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Direction\n  nameWithType: BindableAttribute.Direction\n- uid: System.ComponentModel.BindableAttribute.Equals*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: BindableAttribute.Equals\n- uid: System.ComponentModel.BindableAttribute.GetHashCode*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: BindableAttribute.GetHashCode\n- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.BindableAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: BindableAttribute.IsDefaultAttribute\n"}