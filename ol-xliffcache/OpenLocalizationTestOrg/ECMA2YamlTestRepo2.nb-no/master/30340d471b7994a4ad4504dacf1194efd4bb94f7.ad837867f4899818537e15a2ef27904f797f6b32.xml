{"nodes":[{"pos":[684,780],"content":"Configures the global cache settings for an ASP.NET application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures the global cache settings for an ASP.NET application. This class cannot be inherited.","pos":[0,96],"nodes":[{"content":"Configures the global cache settings for an ASP.NET application.","pos":[0,64]},{"content":"This class cannot be inherited.","pos":[65,96]}]}]},{"pos":[793,2119],"content":"The CacheSection class provides a way to programmatically access and modify the `<cache>` section of a configuration file.       The ASP.NET caching feature is implemented by the <xref:System.Web.Caching.Cache> class. For more information, see [Caching](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The CacheSection can write information into the related section of the configuration file according to the restrictions defined by the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>. Any attempt to write in a configuration file at a level not allowed in the hierarchy will result in an error message generated by the parser. However, you can use this class to read configuration information at any level in the hierarchy.       A cache is an application-specific hash table used to store frequently accessed data. Application and session state are similar to the cache, the application state being the most similar, due to its application-wide scope. One of the biggest differences between the cache and the application-state mechanism is that the cache supports dependencies These dependencies make it possible to build applications that automatically remove cached items when certain events occur.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CacheSection class provides a way to programmatically access and modify the <ph id=\"ph1\">`&lt;cache&gt;`</ph> section of a configuration file.","pos":[0,122],"source":"The CacheSection class provides a way to programmatically access and modify the `<cache>` section of a configuration file."},{"content":"The ASP.NET caching feature is implemented by the &lt;xref:System.Web.Caching.Cache&gt; class.","pos":[129,217],"source":"       The ASP.NET caching feature is implemented by the <xref:System.Web.Caching.Cache> class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[218,293],"source":" For more information, see [Caching](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The CacheSection can write information into the related section of the configuration file according to the restrictions defined by the section property &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt; whose value is &lt;xref:System.Configuration.ConfigurationAllowDefinition&gt;.","pos":[299,602],"source":"      > [!NOTE] >  The CacheSection can write information into the related section of the configuration file according to the restrictions defined by the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>."},{"content":"Any attempt to write in a configuration file at a level not allowed in the hierarchy will result in an error message generated by the parser.","pos":[603,744]},{"content":"However, you can use this class to read configuration information at any level in the hierarchy.","pos":[745,841]},{"content":"A cache is an application-specific hash table used to store frequently accessed data.","pos":[848,933]},{"content":"Application and session state are similar to the cache, the application state being the most similar, due to its application-wide scope.","pos":[934,1070]},{"content":"One of the biggest differences between the cache and the application-state mechanism is that the cache supports dependencies These dependencies make it possible to build applications that automatically remove cached items when certain events occur.","pos":[1071,1319]}]},{"pos":[6993,7092],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.CacheSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.CacheSection\"></xref> class."},{"pos":[7104,7392],"content":"The CacheSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.CacheSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CacheSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.CacheSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","pos":[0,288],"nodes":[{"content":"The CacheSection constructor is not intended to be used directly from your code.","pos":[0,80]},{"content":"It is called by the ASP.NET configuration system.","pos":[81,130]},{"content":"You obtain an instance of the &lt;xref:System.Web.Configuration.CacheSection&gt; class by using the &lt;xref:System.Configuration.Configuration.GetSection%2A&gt; method.","pos":[131,288],"source":" You obtain an instance of the <xref:System.Web.Configuration.CacheSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."}]}]},{"pos":[8201,8274],"content":"Gets or sets a value indicating whether the cache expiration is disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the cache expiration is disabled.","pos":[0,73]}]},{"pos":[8287,9015],"content":"If the DisableExpiration property is set to `true`, the cached items never expire. This setting is intended to help debug cache behavior in application code. Use caution when disabling cache expiration, as this might result in items being cached longer than they are valid.      > [!NOTE] >  To add a page to the output cache, you must establish an expiration policy for that page. You can do this declaratively with the [@ OutputCache](http://msdn.microsoft.com/en-us/28a9e101-fb44-4198-9cb6-b8a52312fec2) directive or programmatically using the <xref:System.Web.HttpCachePolicy.SetExpires%2A> method. For more information, see [How to: Set Expiration Values for ASP.NET Page Caching](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the DisableExpiration property is set to <ph id=\"ph1\">`true`</ph>, the cached items never expire.","pos":[0,82],"source":"If the DisableExpiration property is set to `true`, the cached items never expire."},{"content":"This setting is intended to help debug cache behavior in application code.","pos":[83,157]},{"content":"Use caution when disabling cache expiration, as this might result in items being cached longer than they are valid.","pos":[158,273]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To add a page to the output cache, you must establish an expiration policy for that page.","pos":[279,381],"source":"      > [!NOTE] >  To add a page to the output cache, you must establish an expiration policy for that page."},{"content":"You can do this declaratively with the <bpt id=\"p1\">[</bpt>@ OutputCache<ept id=\"p1\">](http://msdn.microsoft.com/en-us/28a9e101-fb44-4198-9cb6-b8a52312fec2)</ept> directive or programmatically using the &lt;xref:System.Web.HttpCachePolicy.SetExpires%2A&gt; method.","pos":[382,602],"source":" You can do this declaratively with the [@ OutputCache](http://msdn.microsoft.com/en-us/28a9e101-fb44-4198-9cb6-b8a52312fec2) directive or programmatically using the <xref:System.Web.HttpCachePolicy.SetExpires%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Set Expiration Values for ASP.NET Page Caching<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[603,725],"source":" For more information, see [How to: Set Expiration Values for ASP.NET Page Caching](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[9474,9725],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache expiration is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the cache expiration is disabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache expiration is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[173,251],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[10256,10336],"content":"Gets or sets a value indicating whether the cache memory collection is disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the cache memory collection is disabled.","pos":[0,80]}]},{"pos":[10349,10910],"content":"If the DisableMemoryCollection property is set to `true`, calls to the cache-related API will have no effect.       If the DisableMemoryCollection property is set to `true`, the cache does not attempt to collect unused items. Use caution when using this setting, as disabling memory collection can quickly lead to Out of Memory conditions for the application.       This setting has no effect on the ASP.NET internal cache or on the output cache. For more information about the different types of cache, see [Caching](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the DisableMemoryCollection property is set to <ph id=\"ph1\">`true`</ph>, calls to the cache-related API will have no effect.","pos":[0,109],"source":"If the DisableMemoryCollection property is set to `true`, calls to the cache-related API will have no effect."},{"content":"If the DisableMemoryCollection property is set to <ph id=\"ph1\">`true`</ph>, the cache does not attempt to collect unused items.","pos":[116,225],"source":"       If the DisableMemoryCollection property is set to `true`, the cache does not attempt to collect unused items."},{"content":"Use caution when using this setting, as disabling memory collection can quickly lead to Out of Memory conditions for the application.","pos":[226,359]},{"content":"This setting has no effect on the ASP.NET internal cache or on the output cache.","pos":[366,446]},{"content":"For more information about the different types of cache, see <bpt id=\"p1\">[</bpt>Caching<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[447,557],"source":" For more information about the different types of cache, see [Caching](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[11381,11639],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache memory collection is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the cache memory collection is disabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,179],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache memory collection is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[180,258],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12226,12305],"content":"Gets or sets a value indicating the maximum percentage of virtual memory usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the maximum percentage of virtual memory usage.","pos":[0,79]}]},{"pos":[12317,12521],"content":"The PercentagePhysicalMemoryUsedLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PercentagePhysicalMemoryUsedLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","pos":[0,204],"nodes":[{"content":"The PercentagePhysicalMemoryUsedLimit property specifies the threshold for high pressure conditions.","pos":[0,100]},{"content":"As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","pos":[101,204]}]}]},{"pos":[12916,12989],"content":"The maximum percentage of virtual memory usage. The default value is 90%.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum percentage of virtual memory usage. The default value is 90%.","pos":[0,73],"nodes":[{"content":"The maximum percentage of virtual memory usage.","pos":[0,47]},{"content":"The default value is 90%.","pos":[48,73]}]}]},{"pos":[13506,13592],"content":"Gets or sets a value indicating the maximum size of the working-process private space.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the maximum size of the working-process private space.","pos":[0,86]}]},{"pos":[13604,13792],"content":"The PrivateBytesLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PrivateBytesLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","pos":[0,188],"nodes":[{"content":"The PrivateBytesLimit property specifies the threshold for high pressure conditions.","pos":[0,84]},{"content":"As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.","pos":[85,188]}]}]},{"pos":[14172,14280],"content":"The maximum number, in bytes, of the private space allocated to the working process. The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number, in bytes, of the private space allocated to the working process. The default value is 0.","pos":[0,108],"nodes":[{"content":"The maximum number, in bytes, of the private space allocated to the working process.","pos":[0,84]},{"content":"The default value is 0.","pos":[85,108]}]}]},{"pos":[14796,14898],"content":"Gets or sets a value indicating the time interval between polling for the worker-process memory usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the time interval between polling for the worker-process memory usage.","pos":[0,102]}]},{"pos":[14910,15068],"content":"This polling is expensive and might need to be adjusted as a tradeoff between reaction speed of the cache-trimming algorithm and number of polling calls made.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This polling is expensive and might need to be adjusted as a tradeoff between reaction speed of the cache-trimming algorithm and number of polling calls made.","pos":[0,158]}]},{"pos":[15202,15304],"content":"The time interval between polling for the worker process memory usage. The default value is 2 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time interval between polling for the worker process memory usage. The default value is 2 minutes.","pos":[0,102],"nodes":[{"content":"The time interval between polling for the worker process memory usage.","pos":[0,70]},{"content":"The default value is 2 minutes.","pos":[71,102]}]}]},{"pos":[15973,15985],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.CacheSection\n  id: CacheSection\n  children:\n  - System.Web.Configuration.CacheSection.#ctor\n  - System.Web.Configuration.CacheSection.DisableExpiration\n  - System.Web.Configuration.CacheSection.DisableMemoryCollection\n  - System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit\n  - System.Web.Configuration.CacheSection.PrivateBytesLimit\n  - System.Web.Configuration.CacheSection.PrivateBytesPollTime\n  - System.Web.Configuration.CacheSection.Properties\n  langs:\n  - csharp\n  name: CacheSection\n  nameWithType: CacheSection\n  fullName: System.Web.Configuration.CacheSection\n  type: Class\n  summary: Configures the global cache settings for an ASP.NET application. This class cannot be inherited.\n  remarks: \"The CacheSection class provides a way to programmatically access and modify the `<cache>` section of a configuration file.  \\n  \\n The ASP.NET caching feature is implemented by the <xref:System.Web.Caching.Cache> class. For more information, see [Caching](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  The CacheSection can write information into the related section of the configuration file according to the restrictions defined by the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>. Any attempt to write in a configuration file at a level not allowed in the hierarchy will result in an error message generated by the parser. However, you can use this class to read configuration information at any level in the hierarchy.  \\n  \\n A cache is an application-specific hash table used to store frequently accessed data. Application and session state are similar to the cache, the application state being the most similar, due to its application-wide scope. One of the biggest differences between the cache and the application-state mechanism is that the cache supports dependencies These dependencies make it possible to build applications that automatically remove cached items when certain events occur.\"\n  example:\n  - \"The following code example shows a page and the related code file used to  access the  CacheSection section attributes.  \\n  \\n [!code-cs[System.Web.Configuration.CacheSection#11](~/add/codesnippet/csharp/t-system.web.configurati_81_1.aspx)]\\n [!code-vb[System.Web.Configuration.CacheSection#11](~/add/codesnippet/visualbasic/t-system.web.configurati_81_1.aspx)]  \\n  \\n [!code-vb[System.Web.Configuration.CacheSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_81_2.vb)]\\n [!code-cs[System.Web.Configuration.CacheSection#1](~/add/codesnippet/csharp/t-system.web.configurati_81_2.cs)]\"\n  syntax:\n    content: 'public sealed class CacheSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: CacheSection()\n  nameWithType: CacheSection.CacheSection()\n  fullName: System.Web.Configuration.CacheSection.CacheSection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.CacheSection\"></xref> class.\n  remarks: The CacheSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.CacheSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.\n  example:\n  - >-\n    [!code-vb[System.Web.Configuration.CacheSection#2](~/add/codesnippet/visualbasic/m-system.web.configurati_30_1.vb)]\n     [!code-cs[System.Web.Configuration.CacheSection#2](~/add/codesnippet/csharp/m-system.web.configurati_30_1.cs)]\n  syntax:\n    content: public CacheSection ();\n    parameters: []\n  overload: System.Web.Configuration.CacheSection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.DisableExpiration\n  id: DisableExpiration\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: DisableExpiration\n  nameWithType: CacheSection.DisableExpiration\n  fullName: System.Web.Configuration.CacheSection.DisableExpiration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cache expiration is disabled.\n  remarks: \"If the DisableExpiration property is set to `true`, the cached items never expire. This setting is intended to help debug cache behavior in application code. Use caution when disabling cache expiration, as this might result in items being cached longer than they are valid.  \\n  \\n> [!NOTE]\\n>  To add a page to the output cache, you must establish an expiration policy for that page. You can do this declaratively with the [@ OutputCache](http://msdn.microsoft.com/en-us/28a9e101-fb44-4198-9cb6-b8a52312fec2) directive or programmatically using the <xref:System.Web.HttpCachePolicy.SetExpires%2A> method. For more information, see [How to: Set Expiration Values for ASP.NET Page Caching](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example shows how to use the DisableExpiration property.  \\n  \\n [!code-vb[System.Web.Configuration.CacheSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_391_1.vb)]\\n [!code-cs[System.Web.Configuration.CacheSection#4](~/add/codesnippet/csharp/p-system.web.configurati_391_1.cs)]\"\n  syntax:\n    content: public bool DisableExpiration { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache expiration is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.CacheSection.DisableExpiration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.DisableMemoryCollection\n  id: DisableMemoryCollection\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: DisableMemoryCollection\n  nameWithType: CacheSection.DisableMemoryCollection\n  fullName: System.Web.Configuration.CacheSection.DisableMemoryCollection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cache memory collection is disabled.\n  remarks: \"If the DisableMemoryCollection property is set to `true`, calls to the cache-related API will have no effect.  \\n  \\n If the DisableMemoryCollection property is set to `true`, the cache does not attempt to collect unused items. Use caution when using this setting, as disabling memory collection can quickly lead to Out of Memory conditions for the application.  \\n  \\n This setting has no effect on the ASP.NET internal cache or on the output cache. For more information about the different types of cache, see [Caching](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example shows how to use the DisableMemoryCollection property.  \\n  \\n [!code-vb[System.Web.Configuration.CacheSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_298_1.vb)]\\n [!code-cs[System.Web.Configuration.CacheSection#3](~/add/codesnippet/csharp/p-system.web.configurati_298_1.cs)]\"\n  syntax:\n    content: public bool DisableMemoryCollection { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache memory collection is disabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.CacheSection.DisableMemoryCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit\n  id: PercentagePhysicalMemoryUsedLimit\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: PercentagePhysicalMemoryUsedLimit\n  nameWithType: CacheSection.PercentagePhysicalMemoryUsedLimit\n  fullName: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating the maximum percentage of virtual memory usage.\n  remarks: The PercentagePhysicalMemoryUsedLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.\n  example:\n  - >-\n    [!code-vb[System.Web.Configuration.CacheSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_357_1.vb)]\n     [!code-cs[System.Web.Configuration.CacheSection#7](~/add/codesnippet/csharp/p-system.web.configurati_357_1.cs)]\n  syntax:\n    content: public int PercentagePhysicalMemoryUsedLimit { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum percentage of virtual memory usage. The default value is 90%.\n  overload: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.PrivateBytesLimit\n  id: PrivateBytesLimit\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: PrivateBytesLimit\n  nameWithType: CacheSection.PrivateBytesLimit\n  fullName: System.Web.Configuration.CacheSection.PrivateBytesLimit\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating the maximum size of the working-process private space.\n  remarks: The PrivateBytesLimit property specifies the threshold for high pressure conditions. As this threshold is approached, the cache system gradually begins more aggressive scavenging measures.\n  example:\n  - >-\n    [!code-vb[System.Web.Configuration.CacheSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_382_1.vb)]\n     [!code-cs[System.Web.Configuration.CacheSection#6](~/add/codesnippet/csharp/p-system.web.configurati_382_1.cs)]\n  syntax:\n    content: public long PrivateBytesLimit { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum number, in bytes, of the private space allocated to the working process. The default value is 0.\n  overload: System.Web.Configuration.CacheSection.PrivateBytesLimit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.PrivateBytesPollTime\n  id: PrivateBytesPollTime\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: PrivateBytesPollTime\n  nameWithType: CacheSection.PrivateBytesPollTime\n  fullName: System.Web.Configuration.CacheSection.PrivateBytesPollTime\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating the time interval between polling for the worker-process memory usage.\n  remarks: This polling is expensive and might need to be adjusted as a tradeoff between reaction speed of the cache-trimming algorithm and number of polling calls made.\n  syntax:\n    content: public TimeSpan PrivateBytesPollTime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time interval between polling for the worker process memory usage. The default value is 2 minutes.\n  overload: System.Web.Configuration.CacheSection.PrivateBytesPollTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.CacheSection.Properties\n  id: Properties\n  parent: System.Web.Configuration.CacheSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: CacheSection.Properties\n  fullName: System.Web.Configuration.CacheSection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.CacheSection.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.CacheSection.#ctor\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: CacheSection()\n  nameWithType: CacheSection.CacheSection()\n  fullName: System.Web.Configuration.CacheSection.CacheSection()\n- uid: System.Web.Configuration.CacheSection.DisableExpiration\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: DisableExpiration\n  nameWithType: CacheSection.DisableExpiration\n  fullName: System.Web.Configuration.CacheSection.DisableExpiration\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.CacheSection.DisableMemoryCollection\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: DisableMemoryCollection\n  nameWithType: CacheSection.DisableMemoryCollection\n  fullName: System.Web.Configuration.CacheSection.DisableMemoryCollection\n- uid: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PercentagePhysicalMemoryUsedLimit\n  nameWithType: CacheSection.PercentagePhysicalMemoryUsedLimit\n  fullName: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.CacheSection.PrivateBytesLimit\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PrivateBytesLimit\n  nameWithType: CacheSection.PrivateBytesLimit\n  fullName: System.Web.Configuration.CacheSection.PrivateBytesLimit\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.Configuration.CacheSection.PrivateBytesPollTime\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PrivateBytesPollTime\n  nameWithType: CacheSection.PrivateBytesPollTime\n  fullName: System.Web.Configuration.CacheSection.PrivateBytesPollTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.Configuration.CacheSection.Properties\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: Properties\n  nameWithType: CacheSection.Properties\n  fullName: System.Web.Configuration.CacheSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.CacheSection.#ctor*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: CacheSection\n  nameWithType: CacheSection.CacheSection\n- uid: System.Web.Configuration.CacheSection.DisableExpiration*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: DisableExpiration\n  nameWithType: CacheSection.DisableExpiration\n- uid: System.Web.Configuration.CacheSection.DisableMemoryCollection*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: DisableMemoryCollection\n  nameWithType: CacheSection.DisableMemoryCollection\n- uid: System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PercentagePhysicalMemoryUsedLimit\n  nameWithType: CacheSection.PercentagePhysicalMemoryUsedLimit\n- uid: System.Web.Configuration.CacheSection.PrivateBytesLimit*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PrivateBytesLimit\n  nameWithType: CacheSection.PrivateBytesLimit\n- uid: System.Web.Configuration.CacheSection.PrivateBytesPollTime*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: PrivateBytesPollTime\n  nameWithType: CacheSection.PrivateBytesPollTime\n- uid: System.Web.Configuration.CacheSection.Properties*\n  parent: System.Web.Configuration.CacheSection\n  isExternal: false\n  name: Properties\n  nameWithType: CacheSection.Properties\n"}