{"nodes":[{"pos":[386,453],"content":"Provides access to the application domain and process of an add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the application domain and process of an add-in.","pos":[0,67]}]},{"pos":[466,1874],"content":"Use this class to load add-ins into a desired environment, which can be one of the following:      -   An existing application domain for which you have the <xref:System.AppDomain> object.      -   An application domain that was automatically generated to activate an add-in.      -   An existing external process.       To obtain the AddInEnvironment object for an add-in, pass the add-in's application domain to the AddInEnvironment class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's AddInEnvironment object.       After you obtain the AddInEnvironment object, you can do the following:      -   Pass that AddInEnvironment object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the AddInEnvironment object.      -   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this class to load add-ins into a desired environment, which can be one of the following:      -   An existing application domain for which you have the <xref:System.AppDomain> object.      -   An application domain that was automatically generated to activate an add-in.      -   An existing external process.       To obtain the AddInEnvironment object for an add-in, pass the add-in's application domain to the AddInEnvironment class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's AddInEnvironment object.       After you obtain the AddInEnvironment object, you can do the following:      -   Pass that AddInEnvironment object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the AddInEnvironment object.      -   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.","pos":[0,1394],"nodes":[{"content":"Use this class to load add-ins into a desired environment, which can be one of the following:      -   An existing application domain for which you have the &lt;xref:System.AppDomain&gt; object.","pos":[0,188],"source":"Use this class to load add-ins into a desired environment, which can be one of the following:      -   An existing application domain for which you have the <xref:System.AppDomain> object."},{"content":"-   An application domain that was automatically generated to activate an add-in.","pos":[194,275]},{"content":"-   An existing external process.","pos":[281,314]},{"content":"To obtain the AddInEnvironment object for an add-in, pass the add-in's application domain to the AddInEnvironment class constructor.","pos":[321,453]},{"content":"Alternatively, you can use the &lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt; property of the &lt;xref:System.AddIn.Hosting.AddInController&gt; class to obtain the add-in's AddInEnvironment object.","pos":[454,662],"source":" Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's AddInEnvironment object."},{"content":"After you obtain the AddInEnvironment object, you can do the following:      -   Pass that AddInEnvironment object to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.","pos":[669,870],"source":"       After you obtain the AddInEnvironment object, you can do the following:      -   Pass that AddInEnvironment object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."},{"content":"The add-in will be activated in the application domain and process that is represented by the AddInEnvironment object.","pos":[871,989]},{"content":"-   Use the &lt;xref:System.AddIn.Hosting.AddInEnvironment.Process%2A&gt; property to obtain an &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object.","pos":[995,1133],"source":"      -   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object."},{"content":"Then pass that object to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.","pos":[1134,1242],"source":" Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."},{"content":"The add-in will be activated in the process that is represented by the &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object but in a new application domain.","pos":[1243,1394],"source":" The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain."}]}]},{"pos":[2472,2571],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.AddInEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> class."},{"pos":[2583,2991],"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.","pos":[0,408],"nodes":[{"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object.","pos":[0,184],"source":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object."},{"content":"Otherwise, you can use the &lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt; property of the &lt;xref:System.AddIn.Hosting.AddInController&gt; class to obtain the &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object.","pos":[185,408],"source":" Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object."}]}]},{"pos":[3146,3194],"content":"The application domain that contains the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application domain that contains the add-in.","pos":[0,48]}]},{"pos":[3368,3455],"content":"<ph id=\"ph1\">&lt;code&gt;appDomain&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>appDomain</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3568,3666],"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","pos":[0,98],"nodes":[{"content":"Full-trust permission is demanded.","pos":[0,34]},{"content":"A caller in the call chain does not have sufficient permission.","pos":[35,98]}]}]},{"pos":[4033,4163],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the process in which the add-in is running.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object that represents the process in which the add-in is running."},{"pos":[4176,4763],"content":"You can use this property to activate multiple add-ins in the same process but in different domains.       Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.       If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use this property to activate multiple add-ins in the same process but in different domains.       Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.       If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.","pos":[0,583],"nodes":[{"content":"You can use this property to activate multiple add-ins in the same process but in different domains.","pos":[0,100]},{"content":"Pass the &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object obtained with this property to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.","pos":[107,278],"source":"       Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."},{"content":"If you want to activate them in the same domain in an external process you should pass the &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object directly to the &lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName&gt; method overload.","pos":[285,583],"source":"       If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload."}]}]},{"pos":[4923,4966],"content":"The process in which the add-in is running.","needQuote":true,"needEscape":true,"nodes":[{"content":"The process in which the add-in is running.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInEnvironment\n  id: AddInEnvironment\n  children:\n  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  - System.AddIn.Hosting.AddInEnvironment.Process\n  langs:\n  - csharp\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInEnvironment\n  type: Class\n  summary: Provides access to the application domain and process of an add-in.\n  remarks: \"Use this class to load add-ins into a desired environment, which can be one of the following:  \\n  \\n-   An existing application domain for which you have the <xref:System.AppDomain> object.  \\n  \\n-   An application domain that was automatically generated to activate an add-in.  \\n  \\n-   An existing external process.  \\n  \\n To obtain the AddInEnvironment object for an add-in, pass the add-in's application domain to the AddInEnvironment class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's AddInEnvironment object.  \\n  \\n After you obtain the AddInEnvironment object, you can do the following:  \\n  \\n-   Pass that AddInEnvironment object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the AddInEnvironment object.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.\"\n  syntax:\n    content: public sealed class AddInEnvironment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  id: '#ctor(System.AppDomain)'\n  parent: System.AddIn.Hosting.AddInEnvironment\n  langs:\n  - csharp\n  name: AddInEnvironment(AppDomain)\n  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)\n  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)\n  type: Constructor\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> class.\n  remarks: If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.\n  syntax:\n    content: public AddInEnvironment (AppDomain appDomain);\n    parameters:\n    - id: appDomain\n      type: System.AppDomain\n      description: The application domain that contains the add-in.\n  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>appDomain</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInEnvironment.Process\n  id: Process\n  parent: System.AddIn.Hosting.AddInEnvironment\n  langs:\n  - csharp\n  name: Process\n  nameWithType: AddInEnvironment.Process\n  fullName: System.AddIn.Hosting.AddInEnvironment.Process\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object that represents the process in which the add-in is running.\n  remarks: \"You can use this property to activate multiple add-ins in the same process but in different domains.  \\n  \\n Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.  \\n  \\n If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.\"\n  syntax:\n    content: public System.AddIn.Hosting.AddInProcess Process { get; }\n    return:\n      type: System.AddIn.Hosting.AddInProcess\n      description: The process in which the add-in is running.\n  overload: System.AddIn.Hosting.AddInEnvironment.Process*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: AddInEnvironment(AppDomain)\n  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)\n  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AddIn.Hosting.AddInEnvironment.Process\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: Process\n  nameWithType: AddInEnvironment.Process\n  fullName: System.AddIn.Hosting.AddInEnvironment.Process\n- uid: System.AddIn.Hosting.AddInProcess\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInProcess\n  nameWithType: AddInProcess\n  fullName: System.AddIn.Hosting.AddInProcess\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInEnvironment.Process*\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: Process\n  nameWithType: AddInEnvironment.Process\n"}