{"nodes":[{"pos":[2896,2908],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3744,3756],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4562,4574],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5890,5902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5961,5973],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6772,6784],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6850,6862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7482,7494],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8274,8286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9145,9157],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9223,9235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10090,10102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10168,10180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10839,10851],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11576,11588],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11647,11659],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12593,12605],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12671,12683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13527,13539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14439,14451],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15325,15337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16275,16287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17151,17163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17220,17232],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18855,18867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18926,18938],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19815,19827],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19884,19896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20821,20833],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20895,20907],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21748,21760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22600,22612],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23500,23512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23570,23582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24450,24462],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25335,25347],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.TextElementCollection`1\n  id: TextElementCollection`1\n  children:\n  - System.Windows.Documents.TextElementCollection`1.Add(`0)\n  - System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  - System.Windows.Documents.TextElementCollection`1.Clear\n  - System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  - System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.Count\n  - System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  - System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  - System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  - System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  - System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: TextElementCollection<TextElementType>\n  nameWithType: TextElementCollection<TextElementType>\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>\n  type: Class\n  syntax:\n    content: 'public class TextElementCollection<TextElementType> : System.Collections.Generic.ICollection<TextElementType>, System.Collections.Generic.IEnumerable<TextElementType>, System.Collections.IList where TextElementType : TextElement'\n    typeParameters:\n    - id: TextElementType\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<TextElementType>\n  - System.Collections.Generic.IEnumerable<TextElementType>\n  - System.Collections.IList\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Add(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void Add (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  id: AddRange(System.Collections.IEnumerable)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: AddRange(IEnumerable)\n  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void AddRange (System.Collections.IEnumerable range);\n    parameters:\n    - id: range\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.Clear\n  id: Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextElementCollection<TextElementType>.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.Documents.TextElementCollection`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Contains(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool Contains (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: CopyTo(TextElementType[],Int32)\n  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void CopyTo (TextElementType[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: TextElementType[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.Count\n  id: Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TextElementCollection<TextElementType>.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TextElementType> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TextElementType}\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  id: InsertAfter(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: InsertAfter(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void InsertAfter (TextElementType previousSibling, TextElementType newItem);\n    parameters:\n    - id: previousSibling\n      type: TextElementType\n      description: To be added.\n    - id: newItem\n      type: TextElementType\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.InsertAfter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  id: InsertBefore(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: InsertBefore(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void InsertBefore (TextElementType nextSibling, TextElementType newItem);\n    parameters:\n    - id: nextSibling\n      type: TextElementType\n      description: To be added.\n    - id: newItem\n      type: TextElementType\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.InsertBefore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Remove(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool Remove (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void ICollection.CopyTo (Array array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Add(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)\n- uid: TextElementType\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: AddRange(IEnumerable)\n  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Windows.Documents.TextElementCollection`1.Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: TextElementCollection<TextElementType>.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()\n- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Contains(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: CopyTo(TextElementType[],Int32)\n  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n- uid: TextElementType[]\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType[]\n  spec.csharp:\n  - uid: TextElementType\n    name: TextElementType\n    nameWithType: TextElementType\n    fullName: TextElementType[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: TextElementCollection<TextElementType>.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count\n- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{TextElementType}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<TextElementType>\n  nameWithType: IEnumerator<TextElementType>\n  fullName: System.Collections.Generic.IEnumerator<TextElementType>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<TextElementType>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TextElementType\n    name: TextElementType\n    nameWithType: TextElementType\n    fullName: TextElementType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertAfter(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertBefore(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly\n- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Remove(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Windows.Documents.TextElementCollection`1.Add*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Add\n  nameWithType: TextElementCollection<TextElementType>.Add\n- uid: System.Windows.Documents.TextElementCollection`1.AddRange*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: AddRange\n  nameWithType: TextElementCollection<TextElementType>.AddRange\n- uid: System.Windows.Documents.TextElementCollection`1.Clear*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Clear\n  nameWithType: TextElementCollection<TextElementType>.Clear\n- uid: System.Windows.Documents.TextElementCollection`1.Contains*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: TextElementCollection<TextElementType>.Contains\n- uid: System.Windows.Documents.TextElementCollection`1.CopyTo*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: TextElementCollection<TextElementType>.CopyTo\n- uid: System.Windows.Documents.TextElementCollection`1.Count*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: TextElementCollection<TextElementType>.Count\n- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TextElementCollection<TextElementType>.GetEnumerator\n- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertAfter\n  nameWithType: TextElementCollection<TextElementType>.InsertAfter\n- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertBefore\n  nameWithType: TextElementCollection<TextElementType>.InsertBefore\n- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.IsReadOnly\n- uid: System.Windows.Documents.TextElementCollection`1.Remove*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Remove\n  nameWithType: TextElementCollection<TextElementType>.Remove\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt*\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt\n"}