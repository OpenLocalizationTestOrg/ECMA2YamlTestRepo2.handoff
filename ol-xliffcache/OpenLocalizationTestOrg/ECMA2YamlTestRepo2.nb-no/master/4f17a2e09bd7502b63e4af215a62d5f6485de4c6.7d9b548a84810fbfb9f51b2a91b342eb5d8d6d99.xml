{"nodes":[{"pos":[1009,1092],"content":"Represents a base class for key identifier clauses that are based upon binary data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a base class for key identifier clauses that are based upon binary data.","pos":[0,83]}]},{"pos":[1104,1682],"content":"Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.","pos":[0,578],"nodes":[{"content":"Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created.","pos":[0,126]},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[127,272]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.","pos":[273,497]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[498,578]}]}]},{"pos":[3027,3268],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned."},{"pos":[3476,3614],"content":"The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.","pos":[0,138],"nodes":[{"content":"The key identifier clause type.","pos":[0,31]},{"content":"Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.","pos":[32,138],"source":" Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property."}]}]},{"pos":[3689,3785],"content":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.","pos":[0,96],"source":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier."}]},{"pos":[3854,4056],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone the array passed into the <ph id=\"ph1\">`identificationData`</ph> parameter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to clone the array passed into the `identificationData` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4246,4342],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>identificationData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4457,4504],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.","needQuote":true,"needEscape":true,"source":"<code>identificationData</code> is zero length."},{"pos":[5248,5514],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length."},{"pos":[5527,5925],"content":"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.       Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the <ph id=\"ph1\">`derivationNonce`</ph> and <ph id=\"ph2\">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.","pos":[0,156],"source":"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token."},{"content":"Regardless of the value passed into the <ph id=\"ph1\">`cloneBuffer`</ph> parameter, the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the <ph id=\"ph2\">`identificationData`</ph> parameter.","pos":[163,396],"source":"       Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter."}]},{"pos":[6180,6318],"content":"The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.","pos":[0,138],"nodes":[{"content":"The key identifier clause type.","pos":[0,31]},{"content":"Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.","pos":[32,138],"source":" Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property."}]}]},{"pos":[6393,6614],"content":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method.","pos":[0,221],"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.","pos":[0,96],"source":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier."},{"content":"Sets the binary data that is returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method.","pos":[97,221],"source":" Sets the binary data that is returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method."}]}]},{"pos":[6683,6885],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone the array passed into the <ph id=\"ph1\">`identificationData`</ph> parameter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to clone the array passed into the `identificationData` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6957,7180],"content":"An array of <xref:System.Byte> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.Byte> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*> method.","pos":[0,223],"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the nonce that was used to create a derived key.","pos":[0,93],"source":"An array of <xref:System.Byte> that contains the nonce that was used to create a derived key."},{"content":"Sets the value that is returned by the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt; method.","pos":[94,223],"source":" Sets the value that is returned by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*> method."}]}]},{"pos":[7252,7393],"content":"The size of the derived key. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the derived key. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*> property.","pos":[0,141],"nodes":[{"content":"The size of the derived key.","pos":[0,28]},{"content":"Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt; property.","pos":[29,141],"source":" Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*> property."}]}]},{"pos":[7583,7679],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>identificationData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7794,7841],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.","needQuote":true,"needEscape":true,"source":"<code>identificationData</code> is zero length."},{"pos":[8294,8350],"content":"Gets the binary data that represents the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the binary data that represents the key identifier.","pos":[0,56]}]},{"pos":[8362,8559],"content":"Regardless of the value passed into the constructor's <ph id=\"ph1\">`cloneBuffer`</ph> parameter, the GetBuffer method always returns a clone of the array passed into the constructor's <ph id=\"ph2\">`identificationData`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Regardless of the value passed into the constructor's `cloneBuffer` parameter, the GetBuffer method always returns a clone of the array passed into the constructor's `identificationData` parameter."},{"pos":[8687,8783],"content":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.","pos":[0,96],"source":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier."}]},{"pos":[9345,9401],"content":"Gets the binary data that represents the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the binary data that represents the key identifier.","pos":[0,56]}]},{"pos":[9414,9797],"content":"The array returned by the GetRawBuffer method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.       The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The array returned by the GetRawBuffer method is a clone of the constructor's <ph id=\"ph1\">`identificationData`</ph> parameter when the value passed into the <ph id=\"ph2\">`cloneBuffer`</ph> is <ph id=\"ph3\">`true`</ph>; otherwise it is same array.","pos":[0,192],"source":"The array returned by the GetRawBuffer method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array."},{"content":"The &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the constructor's <ph id=\"ph1\">`identificationData`</ph> parameter.","pos":[199,381],"source":"       The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter."}]},{"pos":[9932,10028],"content":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.","pos":[0,96],"source":"An array of <xref:System.Byte> that contains the binary data that represents the key identifier."}]},{"pos":[10616,10730],"content":"Returns a value that indicates whether the binary data for the current instance matches the specified binary data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the binary data for the current instance matches the specified binary data.","pos":[0,114]}]},{"pos":[10865,10910],"content":"An array of <xref:System.Byte> to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; to compare to.","pos":[0,45],"source":"An array of <xref:System.Byte> to compare to."}]},{"pos":[10969,11254],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p2\"> &lt;/code&gt;</ept>is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>data </code>is equivalent to the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11984,12113],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","pos":[0,129]}]},{"pos":[12378,12471],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to compare to."},{"pos":[12530,12992],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keyIdentifierClause</ph><ept id=\"p2\">&lt;/code&gt;</ept> is of type <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method is identical for the <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">keyIdentifierClause</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameter and the current instance; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>keyIdentifierClause</code> is of type <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> and the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method is identical for the <code>keyIdentifierClause</code> parameter and the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13619,13766],"content":"Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.","pos":[0,147]}]},{"pos":[13913,13958],"content":"An array of <xref:System.Byte> to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; to compare to.","pos":[0,45],"source":"An array of <xref:System.Byte> to compare to."}]},{"pos":[14020,14074],"content":"The index in the array at which the comparison starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index in the array at which the comparison starts.","pos":[0,54]}]},{"pos":[14133,14545],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the binary data in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p2\"> &lt;/code&gt;</ept>parameter starting at the index specified in the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method (starting at index zero); otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binary data in the <code>data </code>parameter starting at the index specified in the <code>offset</code> parameter is equivalent to the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method (starting at index zero); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  id: BinaryKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  type: Class\n  summary: Represents a base class for key identifier clauses that are based upon binary data.\n  remarks: Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.\n  syntax:\n    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  id: '#ctor(System.String,System.Byte[],System.Boolean)'\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.\n  syntax:\n    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);\n    parameters:\n    - id: clauseType\n      type: System.String\n      description: The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.\n    - id: identificationData\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the binary data that represents the key identifier.\n    - id: cloneBuffer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to clone the array passed into the `identificationData` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identificationData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>identificationData</code> is zero length.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.\n  remarks: \"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.  \\n  \\n Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.\"\n  syntax:\n    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);\n    parameters:\n    - id: clauseType\n      type: System.String\n      description: The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property.\n    - id: identificationData\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method.\n    - id: cloneBuffer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to clone the array passed into the `identificationData` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: derivationNonce\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*> method.\n    - id: derivationLength\n      type: System.Int32\n      description: The size of the derived key. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*> property.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identificationData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>identificationData</code> is zero length.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  id: GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the binary data that represents the key identifier.\n  remarks: Regardless of the value passed into the constructor's `cloneBuffer` parameter, the GetBuffer method always returns a clone of the array passed into the constructor's `identificationData` parameter.\n  syntax:\n    content: public byte[] GetBuffer ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the binary data that represents the key identifier.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  id: GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the binary data that represents the key identifier.\n  remarks: \"The array returned by the GetRawBuffer method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.  \\n  \\n The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.\"\n  syntax:\n    content: protected byte[] GetRawBuffer ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the binary data that represents the key identifier.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  id: Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the binary data for the current instance matches the specified binary data.\n  syntax:\n    content: public bool Matches (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>data </code>is equivalent to the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.\n  syntax:\n    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>keyIdentifierClause</code> is of type <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> and the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method is identical for the <code>keyIdentifierClause</code> parameter and the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  id: Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(Byte[],Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.\n  syntax:\n    content: public bool Matches (byte[] data, int offset);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> to compare to.\n    - id: offset\n      type: System.Int32\n      description: The index in the array at which the comparison starts.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binary data in the <code>data </code>parameter starting at the index specified in the <code>offset</code> parameter is equivalent to the binary data returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*> method (starting at index zero); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[],Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: BinaryKeyIdentifierClause.Matches\n"}