{"nodes":[{"pos":[1383,1506],"content":"Represents a configuration element that specifies the token issued as a service credential. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that specifies the token issued as a service credential. This class cannot be inherited.","pos":[0,123],"nodes":[{"content":"Represents a configuration element that specifies the token issued as a service credential.","pos":[0,91]},{"content":"This class cannot be inherited.","pos":[92,123]}]}]},{"pos":[4956,5077],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"></xref> class."},{"pos":[5774,5841],"content":"Gets a collection of audience URIs that are allowed in the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of audience URIs that are allowed in the element.","pos":[0,67]}]},{"pos":[5853,5966],"content":"For more information on this property, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;allowedAudienceUris<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](../Topic/%3CallowedAudienceUris%3E.md)</ept>","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information on this property, see [\\&lt;allowedAudienceUris\\&gt;](../Topic/%3CallowedAudienceUris%3E.md)"},{"pos":[6209,6271],"content":"A collection of audience URIs that are allowed in the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of audience URIs that are allowed in the element.","pos":[0,62]}]},{"pos":[6928,7018],"content":"Gets or sets a value that specifies whether untrusted RSA certificate issuers are allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether untrusted RSA certificate issuers are allowed.","pos":[0,90]}]},{"pos":[7030,7198],"content":"Certificates are signed by certification authorities (CAs) to verify authenticity. An untrusted issuer is a CA that is not specified to be trusted to sign certificates.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Certificates are signed by certification authorities (CAs) to verify authenticity. An untrusted issuer is a CA that is not specified to be trusted to sign certificates.","pos":[0,168],"nodes":[{"content":"Certificates are signed by certification authorities (CAs) to verify authenticity.","pos":[0,82]},{"content":"An untrusted issuer is a CA that is not specified to be trusted to sign certificates.","pos":[83,168]}]}]},{"pos":[7331,7517],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if untrusted RSA certificate issuers are accepted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if untrusted RSA certificate issuers are accepted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8134,8368],"content":"Gets or sets a value that specifies whether the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token's <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> should be validated.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."},{"pos":[8566,8864],"content":"A valid value of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security token's <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> should be validated.","needQuote":true,"needEscape":true,"source":"A valid value of <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."},{"pos":[9522,9567],"content":"Gets or sets the certificate validation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the certificate validation mode.","pos":[0,45]}]},{"pos":[9799,10176],"content":"A valid value of <xref:System.ServiceModel.Security.X509CertificateValidationMode>. If set to <xref:System.ServiceModel.Security.X509CertificateValidationMode>, then a <xref uid=\"langword_csharp_customCertificateValidator\" name=\"customCertificateValidator\" href=\"\"></xref> must also be supplied. The default is <xref:System.ServiceModel.Security.X509CertificateValidationMode>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid value of &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;.","pos":[0,83],"source":"A valid value of <xref:System.ServiceModel.Security.X509CertificateValidationMode>."},{"content":"If set to &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;, then a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_customCertificateValidator\" name=\"customCertificateValidator\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> must also be supplied.","pos":[84,295],"source":" If set to <xref:System.ServiceModel.Security.X509CertificateValidationMode>, then a <xref uid=\"langword_csharp_customCertificateValidator\" name=\"customCertificateValidator\" href=\"\"></xref> must also be supplied."},{"content":"The default is &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt;.","pos":[296,377],"source":" The default is <xref:System.ServiceModel.Security.X509CertificateValidationMode>."}]},{"pos":[10940,11087],"content":"Copies the content of the specified configuration element to this <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Copies the content of the specified configuration element to this <xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"></xref>."},{"pos":[11318,11355],"content":"A configuration element to copy from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A configuration element to copy from.","pos":[0,37]}]},{"pos":[11550,11641],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or empty.","needQuote":true,"needEscape":true,"source":"<code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty."},{"pos":[11786,11822],"content":"The configuration file is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration file is read-only.","pos":[0,36]}]},{"pos":[12399,12465],"content":"Gets or sets the type and assembly used to validate a custom type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type and assembly used to validate a custom type.","pos":[0,66]}]},{"pos":[12605,12658],"content":"The type and assembly used to validate a custom type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type and assembly used to validate a custom type.","pos":[0,53]}]},{"pos":[13291,13388],"content":"Gets a collection of configuration elements that specify certificates issued by a trusted issuer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of configuration elements that specify certificates issued by a trusted issuer.","pos":[0,97]}]},{"pos":[13649,13741],"content":"A collection of configuration elements that specify certificates issued by a trusted issuer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of configuration elements that specify certificates issued by a trusted issuer.","pos":[0,92]}]},{"pos":[14526,14538],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15136,15260],"content":"Gets or sets the revocation mode that specifies whether a revocation check occurs, and if it is performed online or offline.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the revocation mode that specifies whether a revocation check occurs, and if it is performed online or offline.","pos":[0,124]}]},{"pos":[15493,15513],"content":"The revocation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The revocation mode.","pos":[0,20]}]},{"pos":[16135,16264],"content":"Gets or sets the type of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used for the service credential.","needQuote":true,"needEscape":true,"source":"Gets or sets the type of <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is used for the service credential."},{"pos":[16392,16508],"content":"The type of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used for the service credential.","needQuote":true,"needEscape":true,"source":"The type of <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is used for the service credential."},{"pos":[17144,17201],"content":"Gets or sets the location of the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the location of the X.509 certificate store.","pos":[0,57]}]},{"pos":[17430,17528],"content":"A valid value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A valid value of <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  id: IssuedTokenServiceElement\n  children:\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType\n  - System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation\n  langs:\n  - csharp\n  name: IssuedTokenServiceElement\n  nameWithType: IssuedTokenServiceElement\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  type: Class\n  summary: Represents a configuration element that specifies the token issued as a service credential. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class IssuedTokenServiceElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: IssuedTokenServiceElement()\n  nameWithType: IssuedTokenServiceElement.IssuedTokenServiceElement()\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.IssuedTokenServiceElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"></xref> class.\n  syntax:\n    content: public IssuedTokenServiceElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris\n  id: AllowedAudienceUris\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: AllowedAudienceUris\n  nameWithType: IssuedTokenServiceElement.AllowedAudienceUris\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a collection of audience URIs that are allowed in the element.\n  remarks: For more information on this property, see [\\&lt;allowedAudienceUris\\&gt;](../Topic/%3CallowedAudienceUris%3E.md)\n  syntax:\n    content: public System.ServiceModel.Configuration.AllowedAudienceUriElementCollection AllowedAudienceUris { get; }\n    return:\n      type: System.ServiceModel.Configuration.AllowedAudienceUriElementCollection\n      description: A collection of audience URIs that are allowed in the element.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  id: AllowUntrustedRsaIssuers\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: AllowUntrustedRsaIssuers\n  nameWithType: IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether untrusted RSA certificate issuers are allowed.\n  remarks: Certificates are signed by certification authorities (CAs) to verify authenticity. An untrusted issuer is a CA that is not specified to be trusted to sign certificates.\n  syntax:\n    content: public bool AllowUntrustedRsaIssuers { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if untrusted RSA certificate issuers are accepted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode\n  id: AudienceUriMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: AudienceUriMode\n  nameWithType: IssuedTokenServiceElement.AudienceUriMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  syntax:\n    content: public System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: A valid value of <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode\n  id: CertificateValidationMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: CertificateValidationMode\n  nameWithType: IssuedTokenServiceElement.CertificateValidationMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the certificate validation mode.\n  syntax:\n    content: public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }\n    return:\n      type: System.ServiceModel.Security.X509CertificateValidationMode\n      description: A valid value of <xref:System.ServiceModel.Security.X509CertificateValidationMode>. If set to <xref:System.ServiceModel.Security.X509CertificateValidationMode>, then a <xref uid=\"langword_csharp_customCertificateValidator\" name=\"customCertificateValidator\" href=\"\"></xref> must also be supplied. The default is <xref:System.ServiceModel.Security.X509CertificateValidationMode>.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)\n  id: Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: Copy(IssuedTokenServiceElement)\n  nameWithType: IssuedTokenServiceElement.Copy(IssuedTokenServiceElement)\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(IssuedTokenServiceElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration element to this <xref href=\"System.ServiceModel.Configuration.IssuedTokenServiceElement\"></xref>.\n  syntax:\n    content: public void Copy (System.ServiceModel.Configuration.IssuedTokenServiceElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.IssuedTokenServiceElement\n      description: A configuration element to copy from.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The configuration file is read-only.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType\n  id: CustomCertificateValidatorType\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: CustomCertificateValidatorType\n  nameWithType: IssuedTokenServiceElement.CustomCertificateValidatorType\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type and assembly used to validate a custom type.\n  syntax:\n    content: public string CustomCertificateValidatorType { get; set; }\n    return:\n      type: System.String\n      description: The type and assembly used to validate a custom type.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates\n  id: KnownCertificates\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: KnownCertificates\n  nameWithType: IssuedTokenServiceElement.KnownCertificates\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a collection of configuration elements that specify certificates issued by a trusted issuer.\n  syntax:\n    content: public System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection KnownCertificates { get; }\n    return:\n      type: System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection\n      description: A collection of configuration elements that specify certificates issued by a trusted issuer.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: IssuedTokenServiceElement.Properties\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode\n  id: RevocationMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: RevocationMode\n  nameWithType: IssuedTokenServiceElement.RevocationMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the revocation mode that specifies whether a revocation check occurs, and if it is performed online or offline.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: The revocation mode.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType\n  id: SamlSerializerType\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: SamlSerializerType\n  nameWithType: IssuedTokenServiceElement.SamlSerializerType\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is used for the service credential.\n  syntax:\n    content: public string SamlSerializerType { get; set; }\n    return:\n      type: System.String\n      description: The type of <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> that is used for the service credential.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation\n  id: TrustedStoreLocation\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  langs:\n  - csharp\n  name: TrustedStoreLocation\n  nameWithType: IssuedTokenServiceElement.TrustedStoreLocation\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the location of the X.509 certificate store.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: A valid value of <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>.\n  overload: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: IssuedTokenServiceElement()\n  nameWithType: IssuedTokenServiceElement.IssuedTokenServiceElement()\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.IssuedTokenServiceElement()\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AllowedAudienceUris\n  nameWithType: IssuedTokenServiceElement.AllowedAudienceUris\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris\n- uid: System.ServiceModel.Configuration.AllowedAudienceUriElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: AllowedAudienceUriElementCollection\n  nameWithType: AllowedAudienceUriElementCollection\n  fullName: System.ServiceModel.Configuration.AllowedAudienceUriElementCollection\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AllowUntrustedRsaIssuers\n  nameWithType: IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: IssuedTokenServiceElement.AudienceUriMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: CertificateValidationMode\n  nameWithType: IssuedTokenServiceElement.CertificateValidationMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode\n- uid: System.ServiceModel.Security.X509CertificateValidationMode\n  parent: System.ServiceModel.Security\n  isExternal: true\n  name: X509CertificateValidationMode\n  nameWithType: X509CertificateValidationMode\n  fullName: System.ServiceModel.Security.X509CertificateValidationMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: Copy(IssuedTokenServiceElement)\n  nameWithType: IssuedTokenServiceElement.Copy(IssuedTokenServiceElement)\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(IssuedTokenServiceElement)\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: IssuedTokenServiceElement\n  nameWithType: IssuedTokenServiceElement\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: CustomCertificateValidatorType\n  nameWithType: IssuedTokenServiceElement.CustomCertificateValidatorType\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: KnownCertificates\n  nameWithType: IssuedTokenServiceElement.KnownCertificates\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates\n- uid: System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: X509CertificateTrustedIssuerElementCollection\n  nameWithType: X509CertificateTrustedIssuerElementCollection\n  fullName: System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: IssuedTokenServiceElement.Properties\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: RevocationMode\n  nameWithType: IssuedTokenServiceElement.RevocationMode\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509RevocationMode\n  nameWithType: X509RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: SamlSerializerType\n  nameWithType: IssuedTokenServiceElement.SamlSerializerType\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: TrustedStoreLocation\n  nameWithType: IssuedTokenServiceElement.TrustedStoreLocation\n  fullName: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: IssuedTokenServiceElement\n  nameWithType: IssuedTokenServiceElement.IssuedTokenServiceElement\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AllowedAudienceUris\n  nameWithType: IssuedTokenServiceElement.AllowedAudienceUris\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AllowUntrustedRsaIssuers\n  nameWithType: IssuedTokenServiceElement.AllowUntrustedRsaIssuers\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: IssuedTokenServiceElement.AudienceUriMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: CertificateValidationMode\n  nameWithType: IssuedTokenServiceElement.CertificateValidationMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: Copy\n  nameWithType: IssuedTokenServiceElement.Copy\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: CustomCertificateValidatorType\n  nameWithType: IssuedTokenServiceElement.CustomCertificateValidatorType\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: KnownCertificates\n  nameWithType: IssuedTokenServiceElement.KnownCertificates\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.Properties*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: IssuedTokenServiceElement.Properties\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: RevocationMode\n  nameWithType: IssuedTokenServiceElement.RevocationMode\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: SamlSerializerType\n  nameWithType: IssuedTokenServiceElement.SamlSerializerType\n- uid: System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation*\n  parent: System.ServiceModel.Configuration.IssuedTokenServiceElement\n  isExternal: false\n  name: TrustedStoreLocation\n  nameWithType: IssuedTokenServiceElement.TrustedStoreLocation\n"}