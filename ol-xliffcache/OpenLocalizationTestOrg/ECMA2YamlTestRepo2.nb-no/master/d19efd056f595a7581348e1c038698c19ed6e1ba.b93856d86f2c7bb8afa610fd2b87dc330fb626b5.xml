{"nodes":[{"pos":[1901,1987],"content":"Provides a container for all model binders for the application, listed by binder type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a container for all model binders for the application, listed by binder type.","pos":[0,86]}]},{"pos":[3256,3363],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.ModelBinderDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelBinderDictionary\"></xref> class."},{"pos":[4176,4218],"content":"Adds the specified item to the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified item to the dictionary.","pos":[0,42]}]},{"pos":[4501,4537],"content":"The object to add to the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add to the dictionary.","pos":[0,36]}]},{"pos":[5149,5191],"content":"Adds the specified item to the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified item to the dictionary.","pos":[0,42]}]},{"pos":[5360,5387],"content":"The key of the item to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the item to add.","pos":[0,27]}]},{"pos":[5472,5501],"content":"The value of the item to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the item to add.","pos":[0,29]}]},{"pos":[5972,6010],"content":"Removes all items from the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all items from the dictionary.","pos":[0,38]}]},{"pos":[6837,6911],"content":"Determines whether the model binder dictionary contains a specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the model binder dictionary contains a specified value.","pos":[0,74]}]},{"pos":[7199,7222],"content":"The item to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to search for.","pos":[0,23]}]},{"pos":[7281,7447],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p2\">&lt;/code&gt;</ept> is found; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> is found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7991,8085],"content":"Determines whether the model binder dictionary contains an element that has the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the model binder dictionary contains an element that has the specified key.","pos":[0,94]}]},{"pos":[8218,8240],"content":"The key to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to search for.","pos":[0,22]}]},{"pos":[8299,8464],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept> is found; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9271,9365],"content":"Copies the elements of the model binder dictionary to an array, starting at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the model binder dictionary to an array, starting at a specified index.","pos":[0,94]}]},{"pos":[9673,9759],"content":"The destination array. The array must be one-dimensional and have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination array. The array must be one-dimensional and have zero-based indexing.","pos":[0,86],"nodes":[{"content":"The destination array.","pos":[0,22]},{"content":"The array must be one-dimensional and have zero-based indexing.","pos":[23,86]}]}]},{"pos":[9825,9881],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying starts.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying starts."},{"pos":[10351,10394],"content":"Gets the number of items in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of items in the dictionary.","pos":[0,43]}]},{"pos":[10500,10538],"content":"The number of items in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items in the dictionary.","pos":[0,38]}]},{"pos":[11047,11085],"content":"Gets or sets the default model binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the default model binder.","pos":[0,38]}]},{"pos":[11261,11286],"content":"The default model binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default model binder.","pos":[0,25]}]},{"pos":[11807,11880],"content":"Returns an enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through the collection.","pos":[0,73]}]},{"pos":[12244,12309],"content":"An enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]},{"pos":[12811,12875],"content":"Gets a value that indicates whether the dictionary is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the dictionary is read-only.","pos":[0,64]}]},{"pos":[12989,13156],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13669,13801],"content":"Gets or sets the specified key in an object that implements the <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.IModelBinder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Gets or sets the specified key in an object that implements the <xref href=\"System.Web.ModelBinding.IModelBinder\"></xref> interface."},{"pos":[13971,13984],"content":"The item key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item key.","pos":[0,13]}]},{"pos":[14065,14104],"content":"The element that has the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that has the specified key.","pos":[0,39]}]},{"pos":[14567,14626],"content":"Gets a collection that contains the keys in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains the keys in the dictionary.","pos":[0,59]}]},{"pos":[14811,14865],"content":"A collection that contains the keys in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the keys in the dictionary.","pos":[0,54]}]},{"pos":[15617,15704],"content":"Removes the first occurrence of the specified element from the model binder dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the first occurrence of the specified element from the model binder dictionary.","pos":[0,87]}]},{"pos":[15990,16009],"content":"The item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to remove.","pos":[0,19]}]},{"pos":[16068,16331],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p2\">&lt;/code&gt;</ept> was successfully removed from the dictionary; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p4\">&lt;/code&gt;</ept> was not removed or was not found in the dictionary.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> was successfully removed from the dictionary; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>item</code> was not removed or was not found in the dictionary."},{"pos":[16848,16928],"content":"Removes the element that has the specified key from the model binder dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the element that has the specified key from the model binder dictionary.","pos":[0,80]}]},{"pos":[17056,17086],"content":"The key of the item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the item to remove.","pos":[0,30]}]},{"pos":[17145,17382],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element was successfully removed; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p3\">&lt;/code&gt;</ept> was note removed or was not found in the dictionary.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element was successfully removed; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>key</code> was note removed or was not found in the dictionary."},{"pos":[18065,18136],"content":"Returns an enumerator that can be used to iterate through a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through a collection.","pos":[0,71]}]},{"pos":[18148,18361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelBinderDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelBinderDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,213],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.ModelBinding.ModelBinderDictionary&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.","pos":[60,213],"source":" It can be used only when the <xref:System.Web.ModelBinding.ModelBinderDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[18539,18604],"content":"An enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]},{"pos":[19299,19356],"content":"Gets the value that is associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value that is associated with the specified key.","pos":[0,57]}]},{"pos":[19537,19565],"content":"The key of the value to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the value to get.","pos":[0,28]}]},{"pos":[19650,19857],"content":"When this method returns, the value that is associated with the specified key, if the key is found; otherwise, the default value for the type of the `value` parameter. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, the value that is associated with the specified key, if the key is found; otherwise, the default value for the type of the <ph id=\"ph1\">`value`</ph> parameter.","pos":[0,167],"source":"When this method returns, the value that is associated with the specified key, if the key is found; otherwise, the default value for the type of the `value` parameter."},{"content":"This parameter is passed uninitialized.","pos":[168,207]}]},{"pos":[19916,20117],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains an element that has the specified key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains an element that has the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20597,20671],"content":"Gets a collection that contains the values in the model binder dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains the values in the model binder dictionary.","pos":[0,74]}]},{"pos":[20915,20984],"content":"A collection that contains the values in the model binder dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the values in the model binder dictionary.","pos":[0,69]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ModelBinding.ModelBinderDictionary\n  id: ModelBinderDictionary\n  children:\n  - System.Web.ModelBinding.ModelBinderDictionary.#ctor\n  - System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  - System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)\n  - System.Web.ModelBinding.ModelBinderDictionary.Clear\n  - System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  - System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)\n  - System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)\n  - System.Web.ModelBinding.ModelBinderDictionary.Count\n  - System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder\n  - System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator\n  - System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly\n  - System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)\n  - System.Web.ModelBinding.ModelBinderDictionary.Keys\n  - System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  - System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)\n  - System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator\n  - System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)\n  - System.Web.ModelBinding.ModelBinderDictionary.Values\n  langs:\n  - csharp\n  name: ModelBinderDictionary\n  nameWithType: ModelBinderDictionary\n  fullName: System.Web.ModelBinding.ModelBinderDictionary\n  type: Class\n  summary: Provides a container for all model binders for the application, listed by binder type.\n  syntax:\n    content: 'public class ModelBinderDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>>, System.Collections.Generic.IDictionary<Type,System.Web.ModelBinding.IModelBinder>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>\n  - System.Collections.Generic.IDictionary<System.Type,System.Web.ModelBinding.IModelBinder>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor\n  id: '#ctor'\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: ModelBinderDictionary()\n  nameWithType: ModelBinderDictionary.ModelBinderDictionary()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.ModelBinderDictionary()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelBinderDictionary\"></xref> class.\n  syntax:\n    content: public ModelBinderDictionary ();\n    parameters: []\n  overload: System.Web.ModelBinding.ModelBinderDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  id: Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Add(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds the specified item to the dictionary.\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}\n      description: The object to add to the dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)\n  id: Add(System.Type,System.Web.ModelBinding.IModelBinder)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Add(Type,IModelBinder)\n  nameWithType: ModelBinderDictionary.Add(Type,IModelBinder)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(Type,IModelBinder)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds the specified item to the dictionary.\n  syntax:\n    content: public void Add (Type key, System.Web.ModelBinding.IModelBinder value);\n    parameters:\n    - id: key\n      type: System.Type\n      description: The key of the item to add.\n    - id: value\n      type: System.Web.ModelBinding.IModelBinder\n      description: The value of the item to add.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear\n  id: Clear\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ModelBinderDictionary.Clear()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes all items from the dictionary.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Determines whether the model binder dictionary contains a specified value.\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}\n      description: The item to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> is found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)\n  id: ContainsKey(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: ContainsKey(Type)\n  nameWithType: ModelBinderDictionary.ContainsKey(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Determines whether the model binder dictionary contains an element that has the specified key.\n  syntax:\n    content: public bool ContainsKey (Type key);\n    parameters:\n    - id: key\n      type: System.Type\n      description: The key to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n  nameWithType: ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Copies the elements of the model binder dictionary to an array, starting at a specified index.\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[]\n      description: The destination array. The array must be one-dimensional and have zero-based indexing.\n    - id: arrayIndex\n      type: System.Int32\n      description: The zero-based index in `array` at which copying starts.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Count\n  id: Count\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ModelBinderDictionary.Count\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets the number of items in the dictionary.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder\n  id: DefaultBinder\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: DefaultBinder\n  nameWithType: ModelBinderDictionary.DefaultBinder\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets or sets the default model binder.\n  syntax:\n    content: public System.Web.ModelBinding.IModelBinder DefaultBinder { get; set; }\n    return:\n      type: System.Web.ModelBinding.IModelBinder\n      description: The default model binder.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ModelBinderDictionary.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Returns an enumerator that can be used to iterate through the collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}}\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ModelBinderDictionary.IsReadOnly\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a value that indicates whether the dictionary is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)\n  id: Item(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Item(Type)\n  nameWithType: ModelBinderDictionary.Item(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Item(Type)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets or sets the specified key in an object that implements the <xref href=\"System.Web.ModelBinding.IModelBinder\"></xref> interface.\n  syntax:\n    content: public System.Web.ModelBinding.IModelBinder this[Type key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Type\n      description: The item key.\n    return:\n      type: System.Web.ModelBinding.IModelBinder\n      description: The element that has the specified key.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys\n  id: Keys\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ModelBinderDictionary.Keys\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a collection that contains the keys in the dictionary.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Type> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Type}\n      description: A collection that contains the keys in the dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes the first occurrence of the specified element from the model binder dictionary.\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}\n      description: The item to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> was successfully removed from the dictionary; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>item</code> was not removed or was not found in the dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)\n  id: Remove(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Remove(Type)\n  nameWithType: ModelBinderDictionary.Remove(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes the element that has the specified key from the model binder dictionary.\n  syntax:\n    content: public bool Remove (Type key);\n    parameters:\n    - id: key\n      type: System.Type\n      description: The key of the item to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element was successfully removed; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>key</code> was note removed or was not found in the dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Returns an enumerator that can be used to iterate through a collection.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelBinderDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)\n  id: TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: TryGetValue(Type,IModelBinder)\n  nameWithType: ModelBinderDictionary.TryGetValue(Type,IModelBinder)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(Type,IModelBinder)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets the value that is associated with the specified key.\n  syntax:\n    content: public bool TryGetValue (Type key, out System.Web.ModelBinding.IModelBinder value);\n    parameters:\n    - id: key\n      type: System.Type\n      description: The key of the value to get.\n    - id: value\n      type: System.Web.ModelBinding.IModelBinder\n      description: When this method returns, the value that is associated with the specified key, if the key is found; otherwise, the default value for the type of the `value` parameter. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains an element that has the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Values\n  id: Values\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ModelBinderDictionary.Values\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Values\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a collection that contains the values in the model binder dictionary.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Web.ModelBinding.IModelBinder> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Web.ModelBinding.IModelBinder}\n      description: A collection that contains the values in the model binder dictionary.\n  overload: System.Web.ModelBinding.ModelBinderDictionary.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: ModelBinderDictionary()\n  nameWithType: ModelBinderDictionary.ModelBinderDictionary()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.ModelBinderDictionary()\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Add(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)\n- uid: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<Type,IModelBinder>\n  nameWithType: KeyValuePair<Type,IModelBinder>\n  fullName: System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.IModelBinder\n    name: IModelBinder\n    nameWithType: IModelBinder\n    fullName: IModelBinder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Add(Type,IModelBinder)\n  nameWithType: ModelBinderDictionary.Add(Type,IModelBinder)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(Type,IModelBinder)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.ModelBinding.IModelBinder\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: IModelBinder\n  nameWithType: IModelBinder\n  fullName: System.Web.ModelBinding.IModelBinder\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: ModelBinderDictionary.Clear()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Clear()\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Contains(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: ContainsKey(Type)\n  nameWithType: ModelBinderDictionary.ContainsKey(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(Type)\n- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n  nameWithType: ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<Type,IModelBinder>\n  nameWithType: KeyValuePair<Type,IModelBinder>\n  fullName: System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.IModelBinder\n    name: IModelBinder\n    nameWithType: IModelBinder\n    fullName: IModelBinder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Count\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelBinderDictionary.Count\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Count\n- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: DefaultBinder\n  nameWithType: ModelBinderDictionary.DefaultBinder\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder\n- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ModelBinderDictionary.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<Type,IModelBinder>>\n  nameWithType: IEnumerator<KeyValuePair<Type,IModelBinder>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.IModelBinder\n    name: IModelBinder\n    nameWithType: IModelBinder\n    fullName: IModelBinder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelBinderDictionary.IsReadOnly\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Item(Type)\n  nameWithType: ModelBinderDictionary.Item(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Item(Type)\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelBinderDictionary.Keys\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Keys\n- uid: System.Collections.Generic.ICollection{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<Type>\n  nameWithType: ICollection<Type>\n  fullName: System.Collections.Generic.ICollection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Remove(KeyValuePair<Type,IModelBinder>)\n  nameWithType: ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Remove(Type)\n  nameWithType: ModelBinderDictionary.Remove(Type)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(Type)\n- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: TryGetValue(Type,IModelBinder)\n  nameWithType: ModelBinderDictionary.TryGetValue(Type,IModelBinder)\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(Type,IModelBinder)\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Values\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelBinderDictionary.Values\n  fullName: System.Web.ModelBinding.ModelBinderDictionary.Values\n- uid: System.Collections.Generic.ICollection{System.Web.ModelBinding.IModelBinder}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<IModelBinder>\n  nameWithType: ICollection<IModelBinder>\n  fullName: System.Collections.Generic.ICollection<System.Web.ModelBinding.IModelBinder>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Web.ModelBinding.IModelBinder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ModelBinding.IModelBinder\n    name: IModelBinder\n    nameWithType: IModelBinder\n    fullName: IModelBinder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: ModelBinderDictionary\n  nameWithType: ModelBinderDictionary.ModelBinderDictionary\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Add*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Add\n  nameWithType: ModelBinderDictionary.Add\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Clear\n  nameWithType: ModelBinderDictionary.Clear\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Contains\n  nameWithType: ModelBinderDictionary.Contains\n- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: ContainsKey\n  nameWithType: ModelBinderDictionary.ContainsKey\n- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: CopyTo\n  nameWithType: ModelBinderDictionary.CopyTo\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Count*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelBinderDictionary.Count\n- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: DefaultBinder\n  nameWithType: ModelBinderDictionary.DefaultBinder\n- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ModelBinderDictionary.GetEnumerator\n- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelBinderDictionary.IsReadOnly\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Item*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Item\n  nameWithType: ModelBinderDictionary.Item\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelBinderDictionary.Keys\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Remove\n  nameWithType: ModelBinderDictionary.Remove\n- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: TryGetValue\n  nameWithType: ModelBinderDictionary.TryGetValue\n- uid: System.Web.ModelBinding.ModelBinderDictionary.Values*\n  parent: System.Web.ModelBinding.ModelBinderDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelBinderDictionary.Values\n"}