{"nodes":[{"pos":[1045,1208],"content":"A WCF-specific implementation of a <xref:System.Xml.Linq.XName> type converter that does not require <xref:System.Xml.Linq.XName> instances to specify a namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"A WCF-specific implementation of a &lt;xref:System.Xml.Linq.XName&gt; type converter that does not require &lt;xref:System.Xml.Linq.XName&gt; instances to specify a namespace.","pos":[0,163],"source":"A WCF-specific implementation of a <xref:System.Xml.Linq.XName> type converter that does not require <xref:System.Xml.Linq.XName> instances to specify a namespace."}]},{"pos":[5203,5326],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\"></xref> class."},{"pos":[6220,6340],"content":"Gets a value that indicates whether this converter can convert an object of one type to an <xref:System.Xml.Linq.XName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this converter can convert an object of one type to an &lt;xref:System.Xml.Linq.XName&gt;.","pos":[0,120],"source":"Gets a value that indicates whether this converter can convert an object of one type to an <xref:System.Xml.Linq.XName>."}]},{"pos":[6583,6610],"content":"The type descriptor context","needQuote":true,"needEscape":true,"nodes":[{"content":"The type descriptor context","pos":[0,27]}]},{"pos":[6675,6700],"content":"The type to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert from.","pos":[0,25]}]},{"pos":[6759,6939],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7753,7892],"content":"Gets a value that indicates whether this converter can convert an <xref:System.Xml.Linq.XName> instance to an object of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this converter can convert an &lt;xref:System.Xml.Linq.XName&gt; instance to an object of the specified type.","pos":[0,139],"source":"Gets a value that indicates whether this converter can convert an <xref:System.Xml.Linq.XName> instance to an object of the specified type."}]},{"pos":[8138,8166],"content":"The type descriptor context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type descriptor context.","pos":[0,28]}]},{"pos":[8236,8259],"content":"The type to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert to.","pos":[0,23]}]},{"pos":[8318,8498],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9417,9489],"content":"Converts the specified value to a <xref:System.Xml.Linq.XName> instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value to a &lt;xref:System.Xml.Linq.XName&gt; instance.","pos":[0,72],"source":"Converts the specified value to a <xref:System.Xml.Linq.XName> instance."}]},{"pos":[9501,9600],"content":"This method will not add a default namespace if one is not specified in the object being converted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method will not add a default namespace if one is not specified in the object being converted.","pos":[0,99]}]},{"pos":[9881,9909],"content":"The type descriptor context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type descriptor context.","pos":[0,28]}]},{"pos":[9992,10012],"content":"The current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current culture.","pos":[0,20]}]},{"pos":[10074,10096],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[10154,10174],"content":"The converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted value.","pos":[0,20]}]},{"pos":[11121,11205],"content":"Converts a <xref:System.Xml.Linq.XName> instance to an object of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a &lt;xref:System.Xml.Linq.XName&gt; instance to an object of the specified type.","pos":[0,84],"source":"Converts a <xref:System.Xml.Linq.XName> instance to an object of the specified type."}]},{"pos":[11217,11437],"content":"This method returns an unqualified local name if no namespace has been provided in the <xref:System.Xml.Linq.XName> being converted. An unqualified local name is a <xref:System.Xml.Linq.XName> that contains no namespace.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns an unqualified local name if no namespace has been provided in the <xref:System.Xml.Linq.XName> being converted. An unqualified local name is a <xref:System.Xml.Linq.XName> that contains no namespace.","pos":[0,220],"nodes":[{"content":"This method returns an unqualified local name if no namespace has been provided in the &lt;xref:System.Xml.Linq.XName&gt; being converted.","pos":[0,132],"source":"This method returns an unqualified local name if no namespace has been provided in the <xref:System.Xml.Linq.XName> being converted."},{"content":"An unqualified local name is a &lt;xref:System.Xml.Linq.XName&gt; that contains no namespace.","pos":[133,220],"source":" An unqualified local name is a <xref:System.Xml.Linq.XName> that contains no namespace."}]}]},{"pos":[11738,11766],"content":"The type descriptor context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type descriptor context.","pos":[0,28]}]},{"pos":[11849,11869],"content":"The current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current culture.","pos":[0,20]}]},{"pos":[11931,11952],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[12022,12055],"content":"The type to convert the value to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert the value to.","pos":[0,33]}]},{"pos":[12113,12133],"content":"The converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted value.","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  id: ServiceXNameTypeConverter\n  children:\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: ServiceXNameTypeConverter\n  nameWithType: ServiceXNameTypeConverter\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  type: Class\n  summary: A WCF-specific implementation of a <xref:System.Xml.Linq.XName> type converter that does not require <xref:System.Xml.Linq.XName> instances to specify a namespace.\n  syntax:\n    content: 'public class ServiceXNameTypeConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  langs:\n  - csharp\n  name: ServiceXNameTypeConverter()\n  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter()\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ServiceXNameTypeConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\"></xref> class.\n  syntax:\n    content: public ServiceXNameTypeConverter ();\n    parameters: []\n  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Gets a value that indicates whether this converter can convert an object of one type to an <xref:System.Xml.Linq.XName>.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The type descriptor context\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Gets a value that indicates whether this converter can convert an <xref:System.Xml.Linq.XName> instance to an object of the specified type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The type descriptor context.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Converts the specified value to a <xref:System.Xml.Linq.XName> instance.\n  remarks: This method will not add a default namespace if one is not specified in the object being converted.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The type descriptor context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The current culture.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted value.\n  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Converts a <xref:System.Xml.Linq.XName> instance to an object of the specified type.\n  remarks: This method returns an unqualified local name if no namespace has been provided in the <xref:System.Xml.Linq.XName> being converted. An unqualified local name is a <xref:System.Xml.Linq.XName> that contains no namespace.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The type descriptor context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The current culture.\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the value to.\n    return:\n      type: System.Object\n      description: The converted value.\n  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ServiceXNameTypeConverter()\n  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter()\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ServiceXNameTypeConverter()\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor*\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ServiceXNameTypeConverter\n  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom*\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ServiceXNameTypeConverter.CanConvertFrom\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo*\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ServiceXNameTypeConverter.CanConvertTo\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom*\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ServiceXNameTypeConverter.ConvertFrom\n- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo*\n  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ServiceXNameTypeConverter.ConvertTo\n"}