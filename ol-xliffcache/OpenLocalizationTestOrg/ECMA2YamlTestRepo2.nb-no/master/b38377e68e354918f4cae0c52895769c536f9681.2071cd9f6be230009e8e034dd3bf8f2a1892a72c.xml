{"nodes":[{"pos":[734,864],"content":"Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.","pos":[0,130]}]},{"pos":[877,1272],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       WorkflowSchedulerService is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       WorkflowSchedulerService is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host.","pos":[0,232],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       WorkflowSchedulerService is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host."},{"content":"These include &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt; and &lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;.","pos":[233,392],"source":" These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>."}]},{"pos":[2708,2863],"content":"When implemented in a derived class, initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"></xref> class."},{"pos":[4215,4319],"content":"When overridden in a derived class, cancels the scheduled work item with the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">timerId</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, cancels the scheduled work item with the given <code>timerId</code>."},{"pos":[4331,4431],"content":"Cancel removes from the pending work items queue a previous request to schedule a workflow instance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Cancel removes from the pending work items queue a previous request to schedule a workflow instance.","pos":[0,100]}]},{"pos":[4579,4658],"content":"The <xref:System.Guid> associated with the existing scheduled thread to cancel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the existing scheduled thread to cancel.","pos":[0,79],"source":"The <xref:System.Guid> associated with the existing scheduled thread to cancel."}]},{"pos":[5352,5489],"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.","pos":[0,137]}]},{"pos":[5501,5614],"content":"Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Threading.WaitCallback&gt; constructor to create your delegate method to run in the new thread.","pos":[0,113],"source":"Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread."}]},{"pos":[5834,5940],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Threading.WaitCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> multicast delegate that represents the method to run.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run."},{"pos":[6013,6072],"content":"A <xref:System.Guid> that represents the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; that represents the workflow instance.","pos":[0,59],"source":"A <xref:System.Guid> that represents the workflow instance."}]},{"pos":[6866,7063],"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref:System.DateTime>).","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (&lt;xref:System.DateTime&gt;).","pos":[0,197],"source":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref:System.DateTime>)."}]},{"pos":[7315,7421],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Threading.WaitCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> multicast delegate that represents the method to run.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run."},{"pos":[7494,7560],"content":"A <xref:System.Guid> that represents the workflow instance to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; that represents the workflow instance to add.","pos":[0,66],"source":"A <xref:System.Guid> that represents the workflow instance to add."}]},{"pos":[7626,7688],"content":"The <xref:System.DateTime> to begin running the workflow item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.DateTime&gt; to begin running the workflow item.","pos":[0,62],"source":"The <xref:System.DateTime> to begin running the workflow item."}]},{"pos":[7750,7807],"content":"A <xref:System.Guid> that represents the scheduled timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Guid&gt; that represents the scheduled timer.","pos":[0,57],"source":"A <xref:System.Guid> that represents the scheduled timer."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  id: WorkflowSchedulerService\n  children:\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  langs:\n  - csharp\n  name: WorkflowSchedulerService\n  nameWithType: WorkflowSchedulerService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  type: Class\n  summary: Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n WorkflowSchedulerService is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public abstract class WorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  inheritance:\n  - System.Object\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: WorkflowSchedulerService()\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.WorkflowSchedulerService()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates creating an instance of a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> object (that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) and adding it to the runtime. This example is from the Nested Exception Handlers SDK sample, from the Program.cs file. For more information, see [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \\n  \\n [!code-cs[WF_Samples#161](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#161)]\\n [!code-vb[WF_Samples#161](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#161)]\"\n  syntax:\n    content: protected WorkflowSchedulerService ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  id: Cancel(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Cancel(Guid)\n  nameWithType: WorkflowSchedulerService.Cancel(Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, cancels the scheduled work item with the given <code>timerId</code>.\n  remarks: Cancel removes from the pending work items queue a previous request to schedule a workflow instance.\n  syntax:\n    content: protected abstract void Cancel (Guid timerId);\n    parameters:\n    - id: timerId\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the existing scheduled thread to cancel.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  id: Schedule(System.Threading.WaitCallback,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Schedule(WaitCallback,Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.\n  remarks: Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.\n  syntax:\n    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);\n    parameters:\n    - id: callback\n      type: System.Threading.WaitCallback\n      description: A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.\n    - id: workflowInstanceId\n      type: System.Guid\n      description: A <xref:System.Guid> that represents the workflow instance.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Schedule(WaitCallback,Guid,DateTime,Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref:System.DateTime>).\n  syntax:\n    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);\n    parameters:\n    - id: callback\n      type: System.Threading.WaitCallback\n      description: A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.\n    - id: workflowInstanceId\n      type: System.Guid\n      description: A <xref:System.Guid> that represents the workflow instance to add.\n    - id: whenUtc\n      type: System.DateTime\n      description: The <xref:System.DateTime> to begin running the workflow item.\n    - id: timerId\n      type: System.Guid\n      description: A <xref:System.Guid> that represents the scheduled timer.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: WorkflowSchedulerService()\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.WorkflowSchedulerService()\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Cancel(Guid)\n  nameWithType: WorkflowSchedulerService.Cancel(Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule(WaitCallback,Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid)\n- uid: System.Threading.WaitCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitCallback\n  nameWithType: WaitCallback\n  fullName: System.Threading.WaitCallback\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule(WaitCallback,Guid,DateTime,Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: WorkflowSchedulerService\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Cancel\n  nameWithType: WorkflowSchedulerService.Cancel\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule\n  nameWithType: WorkflowSchedulerService.Schedule\n"}