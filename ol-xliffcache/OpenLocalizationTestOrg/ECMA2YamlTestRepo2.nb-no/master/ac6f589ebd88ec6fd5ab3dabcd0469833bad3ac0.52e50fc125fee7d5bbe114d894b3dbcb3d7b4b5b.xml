{"nodes":[{"pos":[389,463],"content":"Determines whether the object should be enlisted during the prepare phase.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the object should be enlisted during the prepare phase.","pos":[0,74]}]},{"pos":[476,2052],"content":"This enumeration is passed into the <xref:System.Transactions.Transaction.EnlistVolatile%2A> and <xref:System.Transactions.Transaction.EnlistDurable%2A> and methods to notify the transaction manager whether the resource manager needs to create another enlistment during the Prepare phase. For more information on enlistment, see [Enlisting Resources as Participants in a Transaction](http://msdn.microsoft.com/en-us/7bf66ce7-4190-4910-89d7-df4ad43e9f31).       If EnlistDuringPrepareRequired is specified during enlistment, the resource manager indicates that it wants to receive a Prepare notification while new enlistments are still allowed for the transaction. A resource manager who acts as a cache for another durable resource, such as a backend database, would probably use this option during enlistment. When the caching resource gets its Prepare notification, it transfers its content to the durable resource. By doing so, the durable resource enlists on the transaction to become a participant of the 2 Phase Commit (2PC) protocol. Before this happens, only the caching resource (not the durable resource) was enlisted.       If None is specified, the enlistment indicates that it will not receive a Prepare notification until it is too late to create new enlistments in 2PC. In our preceding scenario, if a caching resource specifies this option during enlistment, and attempts to flush its cache during the Prepare notification, the durable resource gets an exception when it attempts on enlisting since it is too late.       None should be used as a default.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This enumeration is passed into the &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt; and &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; and methods to notify the transaction manager whether the resource manager needs to create another enlistment during the Prepare phase.","pos":[0,288],"source":"This enumeration is passed into the <xref:System.Transactions.Transaction.EnlistVolatile%2A> and <xref:System.Transactions.Transaction.EnlistDurable%2A> and methods to notify the transaction manager whether the resource manager needs to create another enlistment during the Prepare phase."},{"content":"For more information on enlistment, see <bpt id=\"p1\">[</bpt>Enlisting Resources as Participants in a Transaction<ept id=\"p1\">](http://msdn.microsoft.com/en-us/7bf66ce7-4190-4910-89d7-df4ad43e9f31)</ept>.","pos":[289,454],"source":" For more information on enlistment, see [Enlisting Resources as Participants in a Transaction](http://msdn.microsoft.com/en-us/7bf66ce7-4190-4910-89d7-df4ad43e9f31)."},{"content":"If EnlistDuringPrepareRequired is specified during enlistment, the resource manager indicates that it wants to receive a Prepare notification while new enlistments are still allowed for the transaction.","pos":[461,663]},{"content":"A resource manager who acts as a cache for another durable resource, such as a backend database, would probably use this option during enlistment.","pos":[664,810]},{"content":"When the caching resource gets its Prepare notification, it transfers its content to the durable resource.","pos":[811,917]},{"content":"By doing so, the durable resource enlists on the transaction to become a participant of the 2 Phase Commit (2PC) protocol.","pos":[918,1040]},{"content":"Before this happens, only the caching resource (not the durable resource) was enlisted.","pos":[1041,1128]},{"content":"If None is specified, the enlistment indicates that it will not receive a Prepare notification until it is too late to create new enlistments in 2PC.","pos":[1135,1284]},{"content":"In our preceding scenario, if a caching resource specifies this option during enlistment, and attempts to flush its cache during the Prepare notification, the durable resource gets an exception when it attempts on enlisting since it is too late.","pos":[1285,1530]},{"content":"None should be used as a default.","pos":[1537,1570]}]},{"pos":[2639,2713],"content":"The object must enlist during the initial phase of the commitment process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object must enlist during the initial phase of the commitment process.","pos":[0,74]}]},{"pos":[2846,2858],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3231,3321],"content":"The object does not require enlistment during the initial phase of the commitment process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object does not require enlistment during the initial phase of the commitment process.","pos":[0,90]}]},{"pos":[3431,3443],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.EnlistmentOptions\n  id: EnlistmentOptions\n  children:\n  - System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired\n  - System.Transactions.EnlistmentOptions.None\n  langs:\n  - csharp\n  name: EnlistmentOptions\n  nameWithType: EnlistmentOptions\n  fullName: System.Transactions.EnlistmentOptions\n  type: Enum\n  summary: Determines whether the object should be enlisted during the prepare phase.\n  remarks: \"This enumeration is passed into the <xref:System.Transactions.Transaction.EnlistVolatile%2A> and <xref:System.Transactions.Transaction.EnlistDurable%2A> and methods to notify the transaction manager whether the resource manager needs to create another enlistment during the Prepare phase. For more information on enlistment, see [Enlisting Resources as Participants in a Transaction](http://msdn.microsoft.com/en-us/7bf66ce7-4190-4910-89d7-df4ad43e9f31).  \\n  \\n If EnlistDuringPrepareRequired is specified during enlistment, the resource manager indicates that it wants to receive a Prepare notification while new enlistments are still allowed for the transaction. A resource manager who acts as a cache for another durable resource, such as a backend database, would probably use this option during enlistment. When the caching resource gets its Prepare notification, it transfers its content to the durable resource. By doing so, the durable resource enlists on the transaction to become a participant of the 2 Phase Commit (2PC) protocol. Before this happens, only the caching resource (not the durable resource) was enlisted.  \\n  \\n If None is specified, the enlistment indicates that it will not receive a Prepare notification until it is too late to create new enlistments in 2PC. In our preceding scenario, if a caching resource specifies this option during enlistment, and attempts to flush its cache during the Prepare notification, the durable resource gets an exception when it attempts on enlisting since it is too late.  \\n  \\n None should be used as a default.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum EnlistmentOptions\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired\n  id: EnlistDuringPrepareRequired\n  parent: System.Transactions.EnlistmentOptions\n  langs:\n  - csharp\n  name: EnlistDuringPrepareRequired\n  nameWithType: EnlistmentOptions.EnlistDuringPrepareRequired\n  fullName: System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired\n  type: Field\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: The object must enlist during the initial phase of the commitment process.\n  syntax:\n    content: EnlistDuringPrepareRequired\n    return:\n      type: System.Transactions.EnlistmentOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.EnlistmentOptions.None\n  id: None\n  parent: System.Transactions.EnlistmentOptions\n  langs:\n  - csharp\n  name: None\n  nameWithType: EnlistmentOptions.None\n  fullName: System.Transactions.EnlistmentOptions.None\n  type: Field\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: The object does not require enlistment during the initial phase of the commitment process.\n  syntax:\n    content: None\n    return:\n      type: System.Transactions.EnlistmentOptions\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired\n  parent: System.Transactions.EnlistmentOptions\n  isExternal: false\n  name: EnlistDuringPrepareRequired\n  nameWithType: EnlistmentOptions.EnlistDuringPrepareRequired\n  fullName: System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired\n- uid: System.Transactions.EnlistmentOptions\n  parent: System.Transactions\n  isExternal: false\n  name: EnlistmentOptions\n  nameWithType: EnlistmentOptions\n  fullName: System.Transactions.EnlistmentOptions\n- uid: System.Transactions.EnlistmentOptions.None\n  parent: System.Transactions.EnlistmentOptions\n  isExternal: false\n  name: None\n  nameWithType: EnlistmentOptions.None\n  fullName: System.Transactions.EnlistmentOptions.None\n"}