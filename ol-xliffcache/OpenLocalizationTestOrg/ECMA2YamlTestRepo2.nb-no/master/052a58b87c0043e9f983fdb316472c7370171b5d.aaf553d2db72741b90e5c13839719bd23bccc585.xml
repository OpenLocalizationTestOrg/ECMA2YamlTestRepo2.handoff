{"nodes":[{"pos":[1076,1233],"content":"Contains a collection of <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> classes defined on the workflow. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> classes defined on the workflow.","pos":[0,125],"source":"Contains a collection of <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> classes defined on the workflow."},{"content":"This class cannot be inherited.","pos":[126,157]}]},{"pos":[2684,2800],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> class."},{"pos":[3546,3706],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> to the <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>."},{"pos":[3910,4074],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> to add to the <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>."},{"pos":[4267,4353],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.Rule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is runtime initialized.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.Rule\"></xref> is runtime initialized."},{"pos":[4456,4538],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>item</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5081,5205],"content":"Determines the difference between two <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> classes.","needQuote":true,"needEscape":true,"source":"Determines the difference between two <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> classes."},{"pos":[5472,5563],"content":"The original <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The original <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>."},{"pos":[5637,5741],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with proposed changes.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> with proposed changes."},{"pos":[5871,6078],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChangeAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> classes that account for the differences between the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">originalDefinition</ph><ept id=\"p2\">&lt;/code&gt;</ept> and the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">changedDefinition</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Workflow.ComponentModel.WorkflowChangeAction\"></xref> classes that account for the differences between the <code>originalDefinition</code> and the <code>changedDefinition</code>."},{"pos":[7012,7024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7082,7094],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8039,8051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8145,8157],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8910,8922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9846,9858],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9952,9964],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection\n  id: RuleConditionCollection\n  children:\n  - System.Workflow.Activities.Rules.RuleConditionCollection.#ctor\n  - System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)\n  - System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)\n  - System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem(System.Workflow.Activities.Rules.RuleCondition)\n  - System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  - System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem(System.Int32)\n  - System.Workflow.Activities.Rules.RuleConditionCollection.SetItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  langs:\n  - csharp\n  name: RuleConditionCollection\n  nameWithType: RuleConditionCollection\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection\n  type: Class\n  summary: Contains a collection of <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> classes defined on the workflow. This class cannot be inherited.\n  remarks: ''\n  example:\n  - \"The following code example shows how to dynamically update a condition that is part of the RuleConditionCollection. This code example is part of the ChangingRules SDK Sample from the Program.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Changing Rules](http://msdn.microsoft.com/en-us/68b2d284-34f0-4382-8944-9b21903d2287).  \\n  \\n [!code-cs[wf_samples#96](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#96)]\\n [!code-vb[wf_samples#96](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#96)]\"\n  syntax:\n    content: 'public sealed class RuleConditionCollection : System.Collections.ObjectModel.KeyedCollection<string,System.Workflow.Activities.Rules.RuleCondition>, System.Workflow.ComponentModel.IWorkflowChangeDiff'\n  inheritance:\n  - System.Collections.ObjectModel.KeyedCollection`2\n  implements:\n  - System.Workflow.ComponentModel.IWorkflowChangeDiff\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: RuleConditionCollection()\n  nameWithType: RuleConditionCollection.RuleConditionCollection()\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.RuleConditionCollection()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of a <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> class.\n  syntax:\n    content: public RuleConditionCollection ();\n    parameters: []\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)\n  id: Add(System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: Add(RuleCondition)\n  nameWithType: RuleConditionCollection.Add(RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.Add(RuleCondition)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Adds a <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> to the <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>.\n  syntax:\n    content: public void Add (System.Workflow.Activities.Rules.RuleCondition item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.Rules.RuleCondition\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleCondition\"></xref> to add to the <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.Add*\n  exceptions:\n  - type: System.Data.ReadOnlyException\n    commentId: T:System.Data.ReadOnlyException\n    description: The <xref href=\"System.Workflow.Activities.Rules.Rule\"></xref> is runtime initialized.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>item</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)\n  id: Diff(System.Object,System.Object)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: Diff(Object,Object)\n  nameWithType: RuleConditionCollection.Diff(Object,Object)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.Diff(Object,Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Determines the difference between two <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> classes.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Workflow.ComponentModel.WorkflowChangeAction> Diff (object originalDefinition, object changedDefinition);\n    parameters:\n    - id: originalDefinition\n      type: System.Object\n      description: The original <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref>.\n    - id: changedDefinition\n      type: System.Object\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleConditionCollection\"></xref> with proposed changes.\n    return:\n      type: System.Collections.Generic.IList{System.Workflow.ComponentModel.WorkflowChangeAction}\n      description: A list of <xref href=\"System.Workflow.ComponentModel.WorkflowChangeAction\"></xref> classes that account for the differences between the <code>originalDefinition</code> and the <code>changedDefinition</code>.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.Diff*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem(System.Workflow.Activities.Rules.RuleCondition)\n  id: GetKeyForItem(System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: GetKeyForItem(RuleCondition)\n  nameWithType: RuleConditionCollection.GetKeyForItem(RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem(RuleCondition)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  syntax:\n    content: protected override string GetKeyForItem (System.Workflow.Activities.Rules.RuleCondition item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.Rules.RuleCondition\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  id: InsertItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,RuleCondition)\n  nameWithType: RuleConditionCollection.InsertItem(Int32,RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem(Int32,RuleCondition)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  syntax:\n    content: protected override void InsertItem (int index, System.Workflow.Activities.Rules.RuleCondition item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.Workflow.Activities.Rules.RuleCondition\n      description: To be added.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: RuleConditionCollection.RemoveItem(Int32)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  syntax:\n    content: protected override void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  id: SetItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,RuleCondition)\n  nameWithType: RuleConditionCollection.SetItem(Int32,RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem(Int32,RuleCondition)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  syntax:\n    content: protected override void SetItem (int index, System.Workflow.Activities.Rules.RuleCondition item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.Workflow.Activities.Rules.RuleCondition\n      description: To be added.\n  overload: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ObjectModel.KeyedCollection`2\n  isExternal: false\n  name: System.Collections.ObjectModel.KeyedCollection<System.String,System.Workflow.Activities.Rules.RuleCondition>\n- uid: System.Data.ReadOnlyException\n  parent: System.Data\n  isExternal: false\n  name: ReadOnlyException\n  nameWithType: ReadOnlyException\n  fullName: System.Data.ReadOnlyException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.#ctor\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: RuleConditionCollection()\n  nameWithType: RuleConditionCollection.RuleConditionCollection()\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.RuleConditionCollection()\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: Add(RuleCondition)\n  nameWithType: RuleConditionCollection.Add(RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.Add(RuleCondition)\n- uid: System.Workflow.Activities.Rules.RuleCondition\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleCondition\n  nameWithType: RuleCondition\n  fullName: System.Workflow.Activities.Rules.RuleCondition\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: Diff(Object,Object)\n  nameWithType: RuleConditionCollection.Diff(Object,Object)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.Diff(Object,Object)\n- uid: System.Collections.Generic.IList{System.Workflow.ComponentModel.WorkflowChangeAction}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<WorkflowChangeAction>\n  nameWithType: IList<WorkflowChangeAction>\n  fullName: System.Collections.Generic.IList<System.Workflow.ComponentModel.WorkflowChangeAction>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Workflow.ComponentModel.WorkflowChangeAction>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.WorkflowChangeAction\n    name: WorkflowChangeAction\n    nameWithType: WorkflowChangeAction\n    fullName: WorkflowChangeAction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem(System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: GetKeyForItem(RuleCondition)\n  nameWithType: RuleConditionCollection.GetKeyForItem(RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem(RuleCondition)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: InsertItem(Int32,RuleCondition)\n  nameWithType: RuleConditionCollection.InsertItem(Int32,RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem(Int32,RuleCondition)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem(System.Int32)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: RuleConditionCollection.RemoveItem(Int32)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem(Int32)\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem(System.Int32,System.Workflow.Activities.Rules.RuleCondition)\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: SetItem(Int32,RuleCondition)\n  nameWithType: RuleConditionCollection.SetItem(Int32,RuleCondition)\n  fullName: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem(Int32,RuleCondition)\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: RuleConditionCollection\n  nameWithType: RuleConditionCollection.RuleConditionCollection\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Add*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: Add\n  nameWithType: RuleConditionCollection.Add\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.Diff*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: Diff\n  nameWithType: RuleConditionCollection.Diff\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.GetKeyForItem*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: GetKeyForItem\n  nameWithType: RuleConditionCollection.GetKeyForItem\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.InsertItem*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: RuleConditionCollection.InsertItem\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.RemoveItem*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: RemoveItem\n  nameWithType: RuleConditionCollection.RemoveItem\n- uid: System.Workflow.Activities.Rules.RuleConditionCollection.SetItem*\n  parent: System.Workflow.Activities.Rules.RuleConditionCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: RuleConditionCollection.SetItem\n"}