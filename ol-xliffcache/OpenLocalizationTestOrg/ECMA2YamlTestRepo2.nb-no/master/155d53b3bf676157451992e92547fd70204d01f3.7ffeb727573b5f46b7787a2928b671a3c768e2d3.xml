{"nodes":[{"pos":[2458,2514],"content":"Represents the SQL spatial functions for the SQL client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the SQL spatial functions for the SQL client.","pos":[0,56]}]},{"pos":[3179,3365],"content":"Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.","pos":[0,186]}]},{"pos":[3573,3593],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[3651,3749],"content":"The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance.","pos":[0,98]}]},{"pos":[4362,4548],"content":"Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.","pos":[0,186]}]},{"pos":[4752,4771],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[4829,4926],"content":"The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geometry instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geometry instance.","pos":[0,97]}]},{"pos":[5943,6133],"content":"Returns a geometric object representing the union of all point values whose distance from a geography instance is less than or equal to a specified value, allowing for a specified tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a geometric object representing the union of all point values whose distance from a geography instance is less than or equal to a specified value, allowing for a specified tolerance.","pos":[0,190]}]},{"pos":[6457,6477],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[6559,6572],"content":"The distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance.","pos":[0,13]}]},{"pos":[6655,6679],"content":"The specified tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified tolerance.","pos":[0,24]}]},{"pos":[6762,6825],"content":"Specifying whether the tolerance value is relative or absolute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifying whether the tolerance value is relative or absolute.","pos":[0,63]}]},{"pos":[6901,7014],"content":"The union of all point values whose distance from a geography instance is less than or equal to a specified value","needQuote":true,"needEscape":true,"nodes":[{"content":"The union of all point values whose distance from a geography instance is less than or equal to a specified value","pos":[0,113]}]},{"pos":[8037,8226],"content":"Returns a geometric object representing the union of all point values whose distance from a geometry instance is less than or equal to a specified value, allowing for a specified tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a geometric object representing the union of all point values whose distance from a geometry instance is less than or equal to a specified value, allowing for a specified tolerance.","pos":[0,189]}]},{"pos":[8545,8564],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[8646,8659],"content":"The distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance.","pos":[0,13]}]},{"pos":[8742,8766],"content":"The specified tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified tolerance.","pos":[0,24]}]},{"pos":[8849,8912],"content":"Specifying whether the tolerance value is relative or absolute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifying whether the tolerance value is relative or absolute.","pos":[0,63]}]},{"pos":[8987,9099],"content":"The union of all point values whose distance from a geometry instance is less than or equal to a specified value","needQuote":true,"needEscape":true,"nodes":[{"content":"The union of all point values whose distance from a geometry instance is less than or equal to a specified value","pos":[0,112]}]},{"pos":[9753,9875],"content":"Returns the maximum angle between the point returned by EnvelopeCenter() and a point in the geography instance in degrees.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the maximum angle between the point returned by EnvelopeCenter() and a point in the geography instance in degrees.","pos":[0,122]}]},{"pos":[10098,10118],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[10193,10258],"content":"the maximum angle between the point returned by EnvelopeCenter().","needQuote":true,"needEscape":true,"nodes":[{"content":"the maximum angle between the point returned by EnvelopeCenter().","pos":[0,65]}]},{"pos":[10911,11006],"content":"Returns a point that can be used as the center of a bounding circle for the geography instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a point that can be used as the center of a bounding circle for the geography instance.","pos":[0,95]}]},{"pos":[11245,11265],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[11341,11425],"content":"A SqlGeography value that specifies the location of the center of a bounding circle.","needQuote":true,"needEscape":true,"nodes":[{"content":"A SqlGeography value that specifies the location of the center of a bounding circle.","pos":[0,84]}]},{"pos":[12139,12295],"content":"Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeography instance, assuming an index is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeography instance, assuming an index is available.","pos":[0,156]}]},{"pos":[12557,12577],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[12666,12752],"content":"Another geography instance to compare against the instance on which Filter is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another geography instance to compare against the instance on which Filter is invoked.","pos":[0,86]}]},{"pos":[12828,13041],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a geography instance potentially intersects another SqlGeography instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a geography instance potentially intersects another SqlGeography instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13737,13892],"content":"Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeometry instance, assuming an index is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeometry instance, assuming an index is available.","pos":[0,155]}]},{"pos":[14148,14167],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[14254,14340],"content":"Another geography instance to compare against the instance on which Filter is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another geography instance to compare against the instance on which Filter is invoked.","pos":[0,86]}]},{"pos":[14416,14629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a geography instance potentially intersects another SqlGeography instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a geography instance potentially intersects another SqlGeography instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15304,15373],"content":"Tests if the SqlGeography instance is the same as the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tests if the SqlGeography instance is the same as the specified type.","pos":[0,69]}]},{"pos":[15616,15636],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[15709,15793],"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","pos":[0,84]}]},{"pos":[15869,15953],"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","pos":[0,84]}]},{"pos":[16627,16695],"content":"Tests if the SqlGeometry instance is the same as the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tests if the SqlGeometry instance is the same as the specified type.","pos":[0,68]}]},{"pos":[16934,16953],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[17026,17110],"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","pos":[0,84]}]},{"pos":[17186,17270],"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies one of the 12 types exposed in the geography type hierarchy.","pos":[0,84]}]},{"pos":[17890,18004],"content":"Converts an invalid geometry instance into a geometry instance with a valid Open Geospatial Consortium (OGC) type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an invalid geometry instance into a geometry instance with a valid Open Geospatial Consortium (OGC) type.","pos":[0,114]}]},{"pos":[18233,18252],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[18327,18359],"content":"The converted geometry instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted geometry instance.","pos":[0,32]}]},{"pos":[18978,19034],"content":"Returns the total number of rings in a Polygon instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the total number of rings in a Polygon instance.","pos":[0,56]}]},{"pos":[19249,19269],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[19343,19369],"content":"The total number of rings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of rings.","pos":[0,26]}]},{"pos":[20251,20371],"content":"Constructs a geography instance representing a Point instance from its x and y values and a spatial reference ID (SRID).","needQuote":true,"needEscape":true,"nodes":[{"content":"Constructs a geography instance representing a Point instance from its x and y values and a spatial reference ID (SRID).","pos":[0,120]}]},{"pos":[20644,20690],"content":"The x-coordinate of the Point being generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the Point being generated.","pos":[0,46]}]},{"pos":[20773,20818],"content":"The y-coordinate of the Point being generated","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the Point being generated","pos":[0,45]}]},{"pos":[20909,20944],"content":"The SRID of the geography instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SRID of the geography instance.","pos":[0,35]}]},{"pos":[21020,21055],"content":"The constructed geography instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constructed geography instance.","pos":[0,35]}]},{"pos":[21938,22057],"content":"Constructs a geometry instance representing a Point instance from its x and y values and a spatial reference ID (SRID).","needQuote":true,"needEscape":true,"nodes":[{"content":"Constructs a geometry instance representing a Point instance from its x and y values and a spatial reference ID (SRID).","pos":[0,119]}]},{"pos":[22336,22382],"content":"The x-coordinate of the Point being generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the Point being generated.","pos":[0,46]}]},{"pos":[22467,22512],"content":"The y-coordinate of the Point being generated","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the Point being generated","pos":[0,45]}]},{"pos":[22603,22638],"content":"The SRID of the geography instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SRID of the geography instance.","pos":[0,35]}]},{"pos":[22713,22747],"content":"The constructed geometry instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constructed geometry instance.","pos":[0,34]}]},{"pos":[23473,23621],"content":"Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.","pos":[0,148]}]},{"pos":[23880,23900],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[23983,24076],"content":"The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.","pos":[0,93],"nodes":[{"content":"The tolerance to input to the Douglas-Peucker algorithm.","pos":[0,56]},{"content":"tolerance must be a positive number.","pos":[57,93]}]}]},{"pos":[24152,24213],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Data.Spatial.DbGeography\"></xref>."},{"pos":[24927,25075],"content":"Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.","pos":[0,148]}]},{"pos":[25329,25348],"content":"The geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value.","pos":[0,19]}]},{"pos":[25431,25524],"content":"The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.","pos":[0,93],"nodes":[{"content":"The tolerance to input to the Douglas-Peucker algorithm.","pos":[0,56]},{"content":"tolerance must be a positive number.","pos":[57,93]}]}]},{"pos":[25599,25659],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Data.Spatial.DbGeometry\"></xref>."},{"pos":[26369,26445],"content":"Returns the specified ring of the SqlGeography instance: 1 ≤ n ≤ NumRings().","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns the specified ring of the SqlGeography instance: 1 ≤ n ≤ NumRings().","pos":[0,76]}]},{"pos":[26697,26717],"content":"The geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value.","pos":[0,20]}]},{"pos":[26795,26869],"content":"An int expression between 1 and the number of rings in a polygon instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An int expression between 1 and the number of rings in a polygon instance.","pos":[0,74]}]},{"pos":[26945,27007],"content":"A SqlGeography object that represents the ring specified by n.","needQuote":true,"needEscape":true,"nodes":[{"content":"A SqlGeography object that represents the ring specified by n.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  id: SqlSpatialFunctions\n  children:\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeography)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeometry)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(System.Data.Spatial.DbGeography)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(System.Data.Spatial.DbGeography)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeography,System.String)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeometry,System.String)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(System.Data.Spatial.DbGeometry)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(System.Data.Spatial.DbGeography)\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeography,System.Nullable{System.Double})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeometry,System.Nullable{System.Double})\n  - System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(System.Data.Spatial.DbGeography,System.Nullable{System.Int32})\n  langs:\n  - csharp\n  name: SqlSpatialFunctions\n  nameWithType: SqlSpatialFunctions\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  type: Class\n  summary: Represents the SQL spatial functions for the SQL client.\n  syntax:\n    content: public static class SqlSpatialFunctions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeography)\n  id: AsTextZM(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: AsTextZM(DbGeography)\n  nameWithType: SqlSpatialFunctions.AsTextZM(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.\n  syntax:\n    content: public static string AsTextZM (System.Data.Spatial.DbGeography geographyValue);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    return:\n      type: System.String\n      description: The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeometry)\n  id: AsTextZM(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: AsTextZM(DbGeometry)\n  nameWithType: SqlSpatialFunctions.AsTextZM(DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns the Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geography instance augmented with any Z (elevation) and M (measure) values carried by the instance.\n  syntax:\n    content: public static string AsTextZM (System.Data.Spatial.DbGeometry geometryValue);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    return:\n      type: System.String\n      description: The Open Geospatial Consortium (OGC) Well-Known Text (WKT) representation of a geometry instance.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  id: BufferWithTolerance(System.Data.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  nameWithType: SqlSpatialFunctions.BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns a geometric object representing the union of all point values whose distance from a geography instance is less than or equal to a specified value, allowing for a specified tolerance.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography BufferWithTolerance (System.Data.Spatial.DbGeography geographyValue, Nullable<double> distance, Nullable<double> tolerance, Nullable<bool> relative);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    - id: distance\n      type: System.Nullable{System.Double}\n      description: The distance.\n    - id: tolerance\n      type: System.Nullable{System.Double}\n      description: The specified tolerance.\n    - id: relative\n      type: System.Nullable{System.Boolean}\n      description: Specifying whether the tolerance value is relative or absolute.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The union of all point values whose distance from a geography instance is less than or equal to a specified value\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  id: BufferWithTolerance(System.Data.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  nameWithType: SqlSpatialFunctions.BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns a geometric object representing the union of all point values whose distance from a geometry instance is less than or equal to a specified value, allowing for a specified tolerance.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry BufferWithTolerance (System.Data.Spatial.DbGeometry geometryValue, Nullable<double> distance, Nullable<double> tolerance, Nullable<bool> relative);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    - id: distance\n      type: System.Nullable{System.Double}\n      description: The distance.\n    - id: tolerance\n      type: System.Nullable{System.Double}\n      description: The specified tolerance.\n    - id: relative\n      type: System.Nullable{System.Boolean}\n      description: Specifying whether the tolerance value is relative or absolute.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The union of all point values whose distance from a geometry instance is less than or equal to a specified value\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(System.Data.Spatial.DbGeography)\n  id: EnvelopeAngle(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: EnvelopeAngle(DbGeography)\n  nameWithType: SqlSpatialFunctions.EnvelopeAngle(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns the maximum angle between the point returned by EnvelopeCenter() and a point in the geography instance in degrees.\n  syntax:\n    content: public static Nullable<double> EnvelopeAngle (System.Data.Spatial.DbGeography geographyValue);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    return:\n      type: System.Nullable{System.Double}\n      description: the maximum angle between the point returned by EnvelopeCenter().\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(System.Data.Spatial.DbGeography)\n  id: EnvelopeCenter(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: EnvelopeCenter(DbGeography)\n  nameWithType: SqlSpatialFunctions.EnvelopeCenter(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns a point that can be used as the center of a bounding circle for the geography instance.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography EnvelopeCenter (System.Data.Spatial.DbGeography geographyValue);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A SqlGeography value that specifies the location of the center of a bounding circle.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)\n  id: Filter(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: Filter(DbGeography,DbGeography)\n  nameWithType: SqlSpatialFunctions.Filter(DbGeography,DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(DbGeography,DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeography instance, assuming an index is available.\n  syntax:\n    content: public static Nullable<bool> Filter (System.Data.Spatial.DbGeography geographyValue, System.Data.Spatial.DbGeography geographyOther);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    - id: geographyOther\n      type: System.Data.Spatial.DbGeography\n      description: Another geography instance to compare against the instance on which Filter is invoked.\n    return:\n      type: System.Nullable{System.Boolean}\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a geography instance potentially intersects another SqlGeography instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)\n  id: Filter(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: Filter(DbGeometry,DbGeometry)\n  nameWithType: SqlSpatialFunctions.Filter(DbGeometry,DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(DbGeometry,DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Offers a fast, index-only intersection method to determine if a geography instance intersects another SqlGeometry instance, assuming an index is available.\n  syntax:\n    content: public static Nullable<bool> Filter (System.Data.Spatial.DbGeometry geometryValue, System.Data.Spatial.DbGeometry geometryOther);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    - id: geometryOther\n      type: System.Data.Spatial.DbGeometry\n      description: Another geography instance to compare against the instance on which Filter is invoked.\n    return:\n      type: System.Nullable{System.Boolean}\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if a geography instance potentially intersects another SqlGeography instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeography,System.String)\n  id: InstanceOf(System.Data.Spatial.DbGeography,System.String)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: InstanceOf(DbGeography,String)\n  nameWithType: SqlSpatialFunctions.InstanceOf(DbGeography,String)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(DbGeography,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Tests if the SqlGeography instance is the same as the specified type.\n  syntax:\n    content: public static Nullable<bool> InstanceOf (System.Data.Spatial.DbGeography geographyValue, string geometryTypeName);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    - id: geometryTypeName\n      type: System.String\n      description: A string that specifies one of the 12 types exposed in the geography type hierarchy.\n    return:\n      type: System.Nullable{System.Boolean}\n      description: A string that specifies one of the 12 types exposed in the geography type hierarchy.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeometry,System.String)\n  id: InstanceOf(System.Data.Spatial.DbGeometry,System.String)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: InstanceOf(DbGeometry,String)\n  nameWithType: SqlSpatialFunctions.InstanceOf(DbGeometry,String)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(DbGeometry,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Tests if the SqlGeometry instance is the same as the specified type.\n  syntax:\n    content: public static Nullable<bool> InstanceOf (System.Data.Spatial.DbGeometry geometryValue, string geometryTypeName);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    - id: geometryTypeName\n      type: System.String\n      description: A string that specifies one of the 12 types exposed in the geography type hierarchy.\n    return:\n      type: System.Nullable{System.Boolean}\n      description: A string that specifies one of the 12 types exposed in the geography type hierarchy.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(System.Data.Spatial.DbGeometry)\n  id: MakeValid(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: MakeValid(DbGeometry)\n  nameWithType: SqlSpatialFunctions.MakeValid(DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Converts an invalid geometry instance into a geometry instance with a valid Open Geospatial Consortium (OGC) type.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MakeValid (System.Data.Spatial.DbGeometry geometryValue);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The converted geometry instance.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(System.Data.Spatial.DbGeography)\n  id: NumRings(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: NumRings(DbGeography)\n  nameWithType: SqlSpatialFunctions.NumRings(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns the total number of rings in a Polygon instance.\n  syntax:\n    content: public static Nullable<int> NumRings (System.Data.Spatial.DbGeography geographyValue);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    return:\n      type: System.Nullable{System.Int32}\n      description: The total number of rings.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  id: PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Constructs a geography instance representing a Point instance from its x and y values and a spatial reference ID (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PointGeography (Nullable<double> latitude, Nullable<double> longitude, Nullable<int> spatialReferenceId);\n    parameters:\n    - id: latitude\n      type: System.Nullable{System.Double}\n      description: The x-coordinate of the Point being generated.\n    - id: longitude\n      type: System.Nullable{System.Double}\n      description: The y-coordinate of the Point being generated\n    - id: spatialReferenceId\n      type: System.Nullable{System.Int32}\n      description: The SRID of the geography instance.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The constructed geography instance.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  id: PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Constructs a geometry instance representing a Point instance from its x and y values and a spatial reference ID (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry PointGeometry (Nullable<double> xCoordinate, Nullable<double> yCoordinate, Nullable<int> spatialReferenceId);\n    parameters:\n    - id: xCoordinate\n      type: System.Nullable{System.Double}\n      description: The x-coordinate of the Point being generated.\n    - id: yCoordinate\n      type: System.Nullable{System.Double}\n      description: The y-coordinate of the Point being generated\n    - id: spatialReferenceId\n      type: System.Nullable{System.Int32}\n      description: The SRID of the geography instance.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The constructed geometry instance.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeography,System.Nullable{System.Double})\n  id: Reduce(System.Data.Spatial.DbGeography,System.Nullable{System.Double})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: Reduce(DbGeography,Nullable<Double>)\n  nameWithType: SqlSpatialFunctions.Reduce(DbGeography,Nullable<Double>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(DbGeography,Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography Reduce (System.Data.Spatial.DbGeography geographyValue, Nullable<double> tolerance);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    - id: tolerance\n      type: System.Nullable{System.Double}\n      description: The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Returns <xref href=\"System.Data.Spatial.DbGeography\"></xref>.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeometry,System.Nullable{System.Double})\n  id: Reduce(System.Data.Spatial.DbGeometry,System.Nullable{System.Double})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: Reduce(DbGeometry,Nullable<Double>)\n  nameWithType: SqlSpatialFunctions.Reduce(DbGeometry,Nullable<Double>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(DbGeometry,Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: Returns an approximation of the given geography instance produced by running the Douglas-Peucker algorithm on the instance with the given tolerance.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry Reduce (System.Data.Spatial.DbGeometry geometryValue, Nullable<double> tolerance);\n    parameters:\n    - id: geometryValue\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value.\n    - id: tolerance\n      type: System.Nullable{System.Double}\n      description: The tolerance to input to the Douglas-Peucker algorithm. tolerance must be a positive number.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: Returns <xref href=\"System.Data.Spatial.DbGeometry\"></xref>.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(System.Data.Spatial.DbGeography,System.Nullable{System.Int32})\n  id: RingN(System.Data.Spatial.DbGeography,System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  langs:\n  - csharp\n  name: RingN(DbGeography,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.RingN(DbGeography,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(DbGeography,Nullable<Int32>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects.SqlClient\n  summary: 'Returns the specified ring of the SqlGeography instance: 1 ≤ n ≤ NumRings().'\n  syntax:\n    content: public static System.Data.Spatial.DbGeography RingN (System.Data.Spatial.DbGeography geographyValue, Nullable<int> index);\n    parameters:\n    - id: geographyValue\n      type: System.Data.Spatial.DbGeography\n      description: The geography value.\n    - id: index\n      type: System.Nullable{System.Int32}\n      description: An int expression between 1 and the number of rings in a polygon instance.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A SqlGeography object that represents the ring specified by n.\n  overload: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: AsTextZM(DbGeography)\n  nameWithType: SqlSpatialFunctions.AsTextZM(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(DbGeography)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: AsTextZM(DbGeometry)\n  nameWithType: SqlSpatialFunctions.AsTextZM(DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeometry\n  nameWithType: DbGeometry\n  fullName: System.Data.Spatial.DbGeometry\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  nameWithType: SqlSpatialFunctions.BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(DbGeography,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: true\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  nameWithType: SqlSpatialFunctions.BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(DbGeometry,Nullable<Double>,Nullable<Double>,Nullable<Boolean>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: EnvelopeAngle(DbGeography)\n  nameWithType: SqlSpatialFunctions.EnvelopeAngle(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(DbGeography)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: EnvelopeCenter(DbGeography)\n  nameWithType: SqlSpatialFunctions.EnvelopeCenter(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(DbGeography)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Filter(DbGeography,DbGeography)\n  nameWithType: SqlSpatialFunctions.Filter(DbGeography,DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(DbGeography,DbGeography)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Filter(DbGeometry,DbGeometry)\n  nameWithType: SqlSpatialFunctions.Filter(DbGeometry,DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(DbGeometry,DbGeometry)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeography,System.String)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: InstanceOf(DbGeography,String)\n  nameWithType: SqlSpatialFunctions.InstanceOf(DbGeography,String)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(DbGeography,String)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeometry,System.String)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: InstanceOf(DbGeometry,String)\n  nameWithType: SqlSpatialFunctions.InstanceOf(DbGeometry,String)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(DbGeometry,String)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: MakeValid(DbGeometry)\n  nameWithType: SqlSpatialFunctions.MakeValid(DbGeometry)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(DbGeometry)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(System.Data.Spatial.DbGeography)\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: NumRings(DbGeography)\n  nameWithType: SqlSpatialFunctions.NumRings(DbGeography)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(DbGeography)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(Nullable<Double>,Nullable<Double>,Nullable<Int32>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeography,System.Nullable{System.Double})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Reduce(DbGeography,Nullable<Double>)\n  nameWithType: SqlSpatialFunctions.Reduce(DbGeography,Nullable<Double>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(DbGeography,Nullable<Double>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeometry,System.Nullable{System.Double})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Reduce(DbGeometry,Nullable<Double>)\n  nameWithType: SqlSpatialFunctions.Reduce(DbGeometry,Nullable<Double>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(DbGeometry,Nullable<Double>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(System.Data.Spatial.DbGeography,System.Nullable{System.Int32})\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: RingN(DbGeography,Nullable<Int32>)\n  nameWithType: SqlSpatialFunctions.RingN(DbGeography,Nullable<Int32>)\n  fullName: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(DbGeography,Nullable<Int32>)\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: AsTextZM\n  nameWithType: SqlSpatialFunctions.AsTextZM\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: BufferWithTolerance\n  nameWithType: SqlSpatialFunctions.BufferWithTolerance\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: EnvelopeAngle\n  nameWithType: SqlSpatialFunctions.EnvelopeAngle\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: EnvelopeCenter\n  nameWithType: SqlSpatialFunctions.EnvelopeCenter\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Filter\n  nameWithType: SqlSpatialFunctions.Filter\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: InstanceOf\n  nameWithType: SqlSpatialFunctions.InstanceOf\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: MakeValid\n  nameWithType: SqlSpatialFunctions.MakeValid\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: NumRings\n  nameWithType: SqlSpatialFunctions.NumRings\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: PointGeography\n  nameWithType: SqlSpatialFunctions.PointGeography\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: PointGeometry\n  nameWithType: SqlSpatialFunctions.PointGeometry\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: Reduce\n  nameWithType: SqlSpatialFunctions.Reduce\n- uid: System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN*\n  parent: System.Data.Objects.SqlClient.SqlSpatialFunctions\n  isExternal: false\n  name: RingN\n  nameWithType: SqlSpatialFunctions.RingN\n"}