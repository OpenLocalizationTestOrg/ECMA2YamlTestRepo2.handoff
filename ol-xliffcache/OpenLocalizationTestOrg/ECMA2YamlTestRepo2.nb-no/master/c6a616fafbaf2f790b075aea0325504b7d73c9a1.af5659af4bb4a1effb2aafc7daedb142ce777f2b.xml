{"nodes":[{"pos":[430,541],"content":"Provides a property and methods for writing event and exception information to the application's log listeners.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a property and methods for writing event and exception information to the application's log listeners.","pos":[0,111]}]},{"pos":[554,1888],"content":"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).       The `My.Application.Log` object is available only for client applications. For Web applications, use `My.Log`. For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.       The following table lists examples of tasks involving the `My.Application.Log` object.      |To|See|   |--------|---------|   |Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|   |Write exception information to the application's log listeners|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|   |Determine where `My.Application.Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md)|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.Log`</ph> object provides a straightforward entry point from which to access the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>'s logging services.","pos":[0,173],"source":"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]'s logging services."},{"content":"The <ph id=\"ph1\">`WriteEntry`</ph> and <ph id=\"ph2\">`WriteException`</ph> methods write messages to the application's log listeners.","pos":[174,270],"source":" The `WriteEntry` and `WriteException` methods write messages to the application's log listeners."},{"content":"The listeners can be configured by the application's configuration file.","pos":[271,343]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Working with Application Logs<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[344,552],"source":" For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md)."},{"content":"The <ph id=\"ph1\">`My.Application.Log`</ph> object is available only for client applications.","pos":[559,633],"source":"       The `My.Application.Log` object is available only for client applications."},{"content":"For Web applications, use <ph id=\"ph1\">`My.Log`</ph>.","pos":[634,669],"source":" For Web applications, use `My.Log`."},{"content":"For more information, see &lt;xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName&gt;.","pos":[670,762],"source":" For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>."},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Application.Log`</ph> object.","pos":[769,855],"source":"       The following table lists examples of tasks involving the `My.Application.Log` object."},{"content":"|To|See|   |--------|---------|   |Write event information to the application's log listeners|<bpt id=\"p1\">[</bpt>How to: Write Log Messages<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Write exception information to the application's log listeners|<bpt id=\"p2\">[</bpt>How to: Log Exceptions<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Determine where <ph id=\"ph1\">`My.Application.Log`</ph> writes information|<bpt id=\"p3\">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept><ph id=\"ph2\">|</ph>","pos":[861,1324],"source":"      |To|See|   |--------|---------|   |Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|   |Write exception information to the application's log listeners|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|   |Determine where `My.Application.Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md)|"}]},{"pos":[3517,3615],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.AspLog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class."},{"pos":[4729,4827],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.AspLog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class."},{"pos":[5513,5629],"content":"<xref:System.String>. The name to give to the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*> property object.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.String>. The name to give to the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*> property object.","pos":[0,116],"nodes":[{"content":"&lt;xref:System.String&gt;.","pos":[0,21],"source":"<xref:System.String>."},{"content":"The name to give to the &lt;xref:Microsoft.VisualBasic.Logging.Log.TraceSource*&gt; property object.","pos":[22,116],"source":" The name to give to the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*> property object."}]}]},{"pos":[6248,6413],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and adds it to the &lt;xref:System.Diagnostics.TraceSource.Listeners*&gt; collection.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"></xref> and adds it to the <xref:System.Diagnostics.TraceSource.Listeners*> collection."},{"pos":[6426,7055],"content":"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels> and greater. The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.       The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method creates a new &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;, sets its name to <ph id=\"ph1\">`FileLog`</ph>, and configures it to log messages with severity level &lt;xref:System.Diagnostics.SourceLevels&gt; and greater.","pos":[0,218],"source":"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels> and greater."},{"content":"The new &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; object is then added to the &lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt; collection.","pos":[219,375],"source":" The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection."},{"content":"The &lt;xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A&gt; calls the method if the &lt;xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A&gt; property has not been configured.","pos":[382,551],"source":"       The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured."},{"content":"The trace source can be configured in the application's configuration file.","pos":[552,627]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Logging.AspLog\n  id: AspLog\n  children:\n  - Microsoft.VisualBasic.Logging.AspLog.#ctor\n  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  langs:\n  - csharp\n  name: AspLog\n  nameWithType: AspLog\n  fullName: Microsoft.VisualBasic.Logging.AspLog\n  type: Class\n  summary: Provides a property and methods for writing event and exception information to the application's log listeners.\n  remarks: \"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The `My.Application.Log` object is available only for client applications. For Web applications, use `My.Log`. For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.  \\n  \\n The following table lists examples of tasks involving the `My.Application.Log` object.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Write event information to the application's log listeners|[How to: Write Log Messages](~/add/includes/ajax-current-ext-md.md)|  \\n|Write exception information to the application's log listeners|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|  \\n|Determine where `My.Application.Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md)|\"\n  example:\n  - \"This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\\\(Visual%20Basic\\\\).md).  \\n  \\n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]\"\n  syntax:\n    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'\n  inheritance:\n  - System.Object\n  - Microsoft.VisualBasic.Logging.Log\n  implements: []\n  inheritedMembers:\n  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter\n  - Microsoft.VisualBasic.Logging.Log.TraceSource\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: AspLog()\n  nameWithType: AspLog.AspLog()\n  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.\n  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public AspLog ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: AspLog(String)\n  nameWithType: AspLog.AspLog(String)\n  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.\n  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public AspLog (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: <xref:System.String>. The name to give to the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*> property object.\n  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  id: InitializeWithDefaultsSinceNoConfigExists\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: InitializeWithDefaultsSinceNoConfigExists()\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Creates a new <xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"></xref> and adds it to the <xref:System.Diagnostics.TraceSource.Listeners*> collection.\n  remarks: \"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels> and greater. The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.  \\n  \\n The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.\"\n  syntax:\n    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: Microsoft.VisualBasic.Logging.Log\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog()\n  nameWithType: AspLog.AspLog()\n  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog(String)\n  nameWithType: AspLog.AspLog(String)\n  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: InitializeWithDefaultsSinceNoConfigExists()\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog\n  nameWithType: AspLog.AspLog\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: InitializeWithDefaultsSinceNoConfigExists\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists\n"}