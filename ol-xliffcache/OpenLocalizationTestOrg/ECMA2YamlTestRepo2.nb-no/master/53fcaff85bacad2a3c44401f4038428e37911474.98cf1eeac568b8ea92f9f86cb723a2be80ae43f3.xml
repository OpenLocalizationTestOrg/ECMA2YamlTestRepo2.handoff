{"nodes":[{"pos":[784,961],"content":"Provides an implementation of the OLE DB <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IAccessor\" name=\"IAccessor\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface for use by applications upgraded from Visual Basic 6.0.","needQuote":true,"needEscape":true,"source":"Provides an implementation of the OLE DB <xref uid=\"langword_csharp_IAccessor\" name=\"IAccessor\" href=\"\"></xref> interface for use by applications upgraded from Visual Basic 6.0."},{"pos":[2574,2621],"content":"Adds a reference count to an existing accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a reference count to an existing accessor.","pos":[0,47]}]},{"pos":[3369,3439],"content":"The handle of the accessor for which to increment the reference count.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the accessor for which to increment the reference count.","pos":[0,70]}]},{"pos":[3504,3652],"content":"A pointer to memory in which to return the reference count of the accessor handle. If `cRefCount` is a null pointer, no reference count is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to memory in which to return the reference count of the accessor handle.","pos":[0,82]},{"content":"If <ph id=\"ph1\">`cRefCount`</ph> is a null pointer, no reference count is returned.","pos":[83,148],"source":" If `cRefCount` is a null pointer, no reference count is returned."}]},{"pos":[4595,4638],"content":"Creates an accessor from a set of bindings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an accessor from a set of bindings.","pos":[0,43]}]},{"pos":[5506,5585],"content":"A bitmask that describes the properties of the accessor and how it can be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitmask that describes the properties of the accessor and how it can be used.","pos":[0,79]}]},{"pos":[5650,5689],"content":"The number of bindings in the accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bindings in the accessor.","pos":[0,39]}]},{"pos":[5792,5886],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Compatibility.VB6.DBBINDING\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"Microsoft.VisualBasic.Compatibility.VB6.DBBINDING\"></xref> structures."},{"pos":[5951,6056],"content":"The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.","pos":[0,105]}]},{"pos":[6121,6195],"content":"A pointer to memory in which to return the handle of the created accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to memory in which to return the handle of the created accessor.","pos":[0,74]}]},{"pos":[6263,6372],"content":"A pointer to an array of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A pointer to an array of <xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"></xref> values."},{"pos":[7120,7156],"content":"Returns the bindings in an accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the bindings in an accessor.","pos":[0,36]}]},{"pos":[7947,8007],"content":"The handle of the accessor for which to return the bindings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the accessor for which to return the bindings.","pos":[0,60]}]},{"pos":[8076,8205],"content":"A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.","pos":[0,129]}]},{"pos":[8270,8348],"content":"A pointer to memory in which to return the number of bindings in the accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to memory in which to return the number of bindings in the accessor.","pos":[0,78]}]},{"pos":[8415,8554],"content":"A pointer to memory in which to return an array of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"A pointer to memory in which to return an array of <xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"></xref> structures."},{"pos":[9222,9243],"content":"Releases an accessor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases an accessor.","pos":[0,21]}]},{"pos":[9992,10030],"content":"The handle of the accessor to release.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the accessor to release.","pos":[0,38]}]},{"pos":[10095,10187],"content":"A pointer to memory in which to return the remaining reference count of the accessor handle.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to memory in which to return the remaining reference count of the accessor handle.","pos":[0,92]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  id: IAccessor\n  children:\n  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)\n  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)\n  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)\n  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)\n  langs:\n  - csharp\n  name: IAccessor\n  nameWithType: IAccessor\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  type: Interface\n  summary: Provides an implementation of the OLE DB <xref uid=\"langword_csharp_IAccessor\" name=\"IAccessor\" href=\"\"></xref> interface for use by applications upgraded from Visual Basic 6.0.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862\")]\n\n      [System.Runtime.InteropServices.Guid(\"0c733a8c-2a1c-11ce-ade5-00aa0044773d\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IAccessor\n  implements: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)\n  id: AddRefAccessor(System.Int32,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  langs:\n  - csharp\n  name: AddRefAccessor(Int32,Int32)\n  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Adds a reference count to an existing accessor.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void AddRefAccessor (int hAccessor, out int cRefCount);\n    parameters:\n    - id: hAccessor\n      type: System.Int32\n      description: The handle of the accessor for which to increment the reference count.\n    - id: cRefCount\n      type: System.Int32\n      description: A pointer to memory in which to return the reference count of the accessor handle. If `cRefCount` is a null pointer, no reference count is returned.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)\n  id: CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  langs:\n  - csharp\n  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Creates an accessor from a set of bindings.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);\n    parameters:\n    - id: accessorFlags\n      type: System.Int32\n      description: A bitmask that describes the properties of the accessor and how it can be used.\n    - id: cBindings\n      type: System.Int32\n      description: The number of bindings in the accessor.\n    - id: bindings\n      type: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]\n      description: An array of <xref href=\"Microsoft.VisualBasic.Compatibility.VB6.DBBINDING\"></xref> structures.\n    - id: cbRowSize\n      type: System.Int32\n      description: The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.\n    - id: hAccessor\n      type: System.Int32\n      description: A pointer to memory in which to return the handle of the created accessor.\n    - id: pBindStatus\n      type: System.IntPtr\n      description: A pointer to an array of <xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"></xref> values.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)\n  id: GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  langs:\n  - csharp\n  name: GetBindings(Int32,Int32,Int32,IntPtr)\n  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Returns the bindings in an accessor.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);\n    parameters:\n    - id: hAccessor\n      type: System.Int32\n      description: The handle of the accessor for which to return the bindings.\n    - id: accessorFlags\n      type: System.Int32\n      description: A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.\n    - id: cBindings\n      type: System.Int32\n      description: A pointer to memory in which to return the number of bindings in the accessor.\n    - id: rgBindings\n      type: System.IntPtr\n      description: A pointer to memory in which to return an array of <xref uid=\"langword_csharp_DBBINDSTATUS\" name=\"DBBINDSTATUS\" href=\"\"></xref> structures.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)\n  id: ReleaseAccessor(System.Int32,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  langs:\n  - csharp\n  name: ReleaseAccessor(Int32,Int32)\n  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic.Compatibility.Data\n  namespace: Microsoft.VisualBasic.Compatibility.VB6\n  summary: Releases an accessor.\n  remarks: >-\n    > [!NOTE]\n\n    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.\n  syntax:\n    content: public void ReleaseAccessor (int hAccessor, out int cRefCount);\n    parameters:\n    - id: hAccessor\n      type: System.Int32\n      description: The handle of the accessor to release.\n    - id: cRefCount\n      type: System.Int32\n      description: A pointer to memory in which to return the remaining reference count of the accessor handle.\n  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: AddRefAccessor(Int32,Int32)\n  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)\n- uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]\n  parent: Microsoft.VisualBasic.Compatibility.VB6\n  isExternal: false\n  name: DBBINDING\n  nameWithType: DBBINDING\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]\n  spec.csharp:\n  - uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING\n    name: DBBINDING\n    nameWithType: DBBINDING\n    fullName: DBBINDING[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: GetBindings(Int32,Int32,Int32,IntPtr)\n  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: ReleaseAccessor(Int32,Int32)\n  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)\n  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: AddRefAccessor\n  nameWithType: IAccessor.AddRefAccessor\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: CreateAccessor\n  nameWithType: IAccessor.CreateAccessor\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: GetBindings\n  nameWithType: IAccessor.GetBindings\n- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*\n  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor\n  isExternal: false\n  name: ReleaseAccessor\n  nameWithType: IAccessor.ReleaseAccessor\n"}