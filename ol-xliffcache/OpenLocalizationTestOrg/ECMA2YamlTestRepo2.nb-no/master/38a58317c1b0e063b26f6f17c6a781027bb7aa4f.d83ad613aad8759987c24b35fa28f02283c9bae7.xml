{"nodes":[{"pos":[1304,1404],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource.Selecting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Selecting\"></xref> event."},{"pos":[1417,3791],"content":"The LinqDataSourceSelectEventArgs object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event of the <xref:System.Web.UI.WebControls.LinqDataSource> control. You use the LinqDataSourceSelectEventArgs object to manually specify what data is returned, and how the data is sorted and paged when it is returned. You can programmatically add or remove parameters to the GroupBy, OrderBy, OrderGroupsBy, Select, and Where clauses by using the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>, and <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A> collections.       The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property enables you to change the data object that is used for the query. If you assign an object to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property, that object will be used for queries instead of the object specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control.       The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property enables you to customize how returned data is sorted and paged. The data-bound control passes sorting and paging properties through the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property. If you have to manually handle sorting or paging, set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property or <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control to `false`. You can then perform the customized query for sorting or paging in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.       If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The LinqDataSourceSelectEventArgs object is passed to event handlers for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[0,204],"source":"The LinqDataSourceSelectEventArgs object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event of the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"You use the LinqDataSourceSelectEventArgs object to manually specify what data is returned, and how the data is sorted and paged when it is returned.","pos":[205,354]},{"content":"You can programmatically add or remove parameters to the GroupBy, OrderBy, OrderGroupsBy, Select, and Where clauses by using the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A&gt;, and &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A&gt; collections.","pos":[355,927],"source":" You can programmatically add or remove parameters to the GroupBy, OrderBy, OrderGroupsBy, Select, and Where clauses by using the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>, and <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A> collections."},{"content":"The &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property enables you to change the data object that is used for the query.","pos":[934,1085],"source":"       The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property enables you to change the data object that is used for the query."},{"content":"If you assign an object to the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property, that object will be used for queries instead of the object specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[1086,1409],"source":" If you assign an object to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property, that object will be used for queries instead of the object specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"The &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A&gt; property enables you to customize how returned data is sorted and paged.","pos":[1416,1568],"source":"       The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property enables you to customize how returned data is sorted and paged."},{"content":"The data-bound control passes sorting and paging properties through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A&gt; property.","pos":[1569,1726],"source":" The data-bound control passes sorting and paging properties through the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property."},{"content":"If you have to manually handle sorting or paging, set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt; property or &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control to <ph id=\"ph1\">`false`</ph>.","pos":[1727,2000],"source":" If you have to manually handle sorting or paging, set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property or <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control to `false`."},{"content":"You can then perform the customized query for sorting or paging in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[2001,2150],"source":" You can then perform the customized query for sorting or paging in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"If the &lt;xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, you must return a value for the &lt;xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A&gt; property.","pos":[2157,2368],"source":"       If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property."}]},{"pos":[6661,6778],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\"></xref> class."},{"pos":[7363,7580],"content":"The values that are passed from the data-bound control that determine how the data is paged and sorted. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values that are passed from the data-bound control that determine how the data is paged and sorted. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*> property.","pos":[0,217],"nodes":[{"content":"The values that are passed from the data-bound control that determine how the data is paged and sorted.","pos":[0,103]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*&gt; property.","pos":[104,217],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*> property."}]}]},{"pos":[7706,7895],"content":"The collection of parameters that is used to create the Where clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameters that is used to create the Where clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*> property.","pos":[0,189],"nodes":[{"content":"The collection of parameters that is used to create the Where clause.","pos":[0,69]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*&gt; property.","pos":[70,189],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*> property."}]}]},{"pos":[8005,8199],"content":"The collection of parameters that is used to create the Order By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameters that is used to create the Order By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*> property.","pos":[0,194],"nodes":[{"content":"The collection of parameters that is used to create the Order By clause.","pos":[0,72]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*&gt; property.","pos":[73,194],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*> property."}]}]},{"pos":[8327,8521],"content":"The collection of parameters that is used to create the Group By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameters that is used to create the Group By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*> property.","pos":[0,194],"nodes":[{"content":"The collection of parameters that is used to create the Group By clause.","pos":[0,72]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*&gt; property.","pos":[73,194],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*> property."}]}]},{"pos":[8655,8883],"content":"The collection of parameter that is used to create the clause that is used for sorting grouped data. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameter that is used to create the clause that is used for sorting grouped data. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*> property.","pos":[0,228],"nodes":[{"content":"The collection of parameter that is used to create the clause that is used for sorting grouped data.","pos":[0,100]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*&gt; property.","pos":[101,228],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*> property."}]}]},{"pos":[9010,9201],"content":"The collection of parameters that is used to create the Select clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of parameters that is used to create the Select clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*> property.","pos":[0,191],"nodes":[{"content":"The collection of parameters that is used to create the Select clause.","pos":[0,70]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*&gt; property.","pos":[71,191],"source":" For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*> property."}]}]},{"pos":[9751,9803],"content":"Gets values that determine how the data is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets values that determine how the data is returned.","pos":[0,52]}]},{"pos":[9816,11137],"content":"A data-bound control passes properties to the <xref:System.Web.UI.WebControls.LinqDataSource> control through the Arguments property in order to specify how paging and sorting should occur. If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically sorts or pages based on the properties from the data-bound control.       You can customize how the data is sorted and paged from a query by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> and <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> properties to `false` and then creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. In the event handler, use the Arguments property to retrieve the sorting and paging properties from the data-bound control. Then customize the query as needed, based on the properties from the Arguments property. If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A data-bound control passes properties to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control through the Arguments property in order to specify how paging and sorting should occur.","pos":[0,189],"source":"A data-bound control passes properties to the <xref:System.Web.UI.WebControls.LinqDataSource> control through the Arguments property in order to specify how paging and sorting should occur."},{"content":"If the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control automatically sorts or pages based on the properties from the data-bound control.","pos":[190,501],"source":" If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically sorts or pages based on the properties from the data-bound control."},{"content":"You can customize how the data is sorted and paged from a query by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; and &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt; properties to <ph id=\"ph1\">`false`</ph> and then creating a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[508,833],"source":"       You can customize how the data is sorted and paged from a query by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> and <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> properties to `false` and then creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"In the event handler, use the Arguments property to retrieve the sorting and paging properties from the data-bound control.","pos":[834,957]},{"content":"Then customize the query as needed, based on the properties from the Arguments property.","pos":[958,1046]},{"content":"If the &lt;xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A&gt; property of the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object is set to <ph id=\"ph1\">`true`</ph>, you must return a value for the &lt;xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A&gt; property.","pos":[1047,1319],"source":" If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property."}]},{"pos":[11311,11383],"content":"An object that contains values for determining how the data is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains values for determining how the data is returned.","pos":[0,72]}]},{"pos":[11977,12053],"content":"Gets the collection of parameters that is used to create the GroupBy clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of parameters that is used to create the GroupBy clause.","pos":[0,76]}]},{"pos":[12065,12630],"content":"You use the GroupByParameters property to access parameters for the GroupBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the GroupBy clause by adding or removing parameters from this collection. By default, the GroupByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the GroupByParameters property to access parameters for the GroupBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the GroupBy clause by adding or removing parameters from this collection. By default, the GroupByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","pos":[0,565],"nodes":[{"content":"You use the GroupByParameters property to access parameters for the GroupBy clause in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[0,168],"source":"You use the GroupByParameters property to access parameters for the GroupBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"You can modify the GroupBy clause by adding or removing parameters from this collection.","pos":[169,257]},{"content":"By default, the GroupByParameters property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object contains any parameters that you added to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[258,565],"source":" By default, the GroupByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control."}]}]},{"pos":[12853,12915],"content":"An object that contains the parameters for the GroupBy clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the parameters for the GroupBy clause.","pos":[0,62]}]},{"pos":[13517,13593],"content":"Gets the collection of parameters that is used to create the OrderBy clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of parameters that is used to create the OrderBy clause.","pos":[0,76]}]},{"pos":[13606,14457],"content":"You use the OrderByParameters property to access parameters for the OrderBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the OrderBy clause by adding or removing parameters from this collection. By default, the OrderByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.       When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, parameters in the OrderByParameters collection do not have to be named. The data will be ordered based on the sequence of the parameters in the OrderByParameters collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the OrderByParameters property to access parameters for the OrderBy clause in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[0,168],"source":"You use the OrderByParameters property to access parameters for the OrderBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"You can modify the OrderBy clause by adding or removing parameters from this collection.","pos":[169,257]},{"content":"By default, the OrderByParameters property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object contains any parameters that you added to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[258,556],"source":" By default, the OrderByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, parameters in the OrderByParameters collection do not have to be named.","pos":[563,747],"source":"       When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, parameters in the OrderByParameters collection do not have to be named."},{"content":"The data will be ordered based on the sequence of the parameters in the OrderByParameters collection.","pos":[748,849]}]},{"pos":[14659,14721],"content":"An object that contains the parameters for the OrderBy clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the parameters for the OrderBy clause.","pos":[0,62]}]},{"pos":[15353,15464],"content":"Gets the collection of parameters that are used to create the clause that specifies how grouped data is sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of parameters that are used to create the clause that specifies how grouped data is sorted.","pos":[0,111]}]},{"pos":[15477,16373],"content":"When you group data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, you can sort the grouped data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to one of the properties used for grouping the data.       You use the OrderGroupsByParameters property to access parameters for the Order Groups By clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Order Groups By clause by adding or removing parameters from this collection.       By default, the OrderGroupsByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added declaratively to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you group data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, you can sort the grouped data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to one of the properties used for grouping the data.       You use the OrderGroupsByParameters property to access parameters for the Order Groups By clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Order Groups By clause by adding or removing parameters from this collection.       By default, the OrderGroupsByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added declaratively to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","pos":[0,892],"nodes":[{"content":"When you group data by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property, you can sort the grouped data by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property to one of the properties used for grouping the data.","pos":[0,275],"source":"When you group data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, you can sort the grouped data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to one of the properties used for grouping the data."},{"content":"You use the OrderGroupsByParameters property to access parameters for the Order Groups By clause in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[282,464],"source":"       You use the OrderGroupsByParameters property to access parameters for the Order Groups By clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"You can modify the Order Groups By clause by adding or removing parameters from this collection.","pos":[465,561]},{"content":"By default, the OrderGroupsByParameters property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object contains any parameters that you added declaratively to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt; of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[568,892],"source":"       By default, the OrderGroupsByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added declaratively to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control."}]}]},{"pos":[16603,16699],"content":"An object that contains the parameters for the clause that specifies how grouped data is sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the parameters for the clause that specifies how grouped data is sorted.","pos":[0,96]}]},{"pos":[17252,17312],"content":"Gets or sets the data object that is used in the data query.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data object that is used in the data query.","pos":[0,60]}]},{"pos":[17325,19711],"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control applies its query expressions to the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you can manually change which object is queried by setting the Result property to an object. For example, you can use the Result property to query an in-memory collection in the Web page, or to get the results from a LINQ query expression. You can set the Result property to any object. If the object does not implement the <xref:System.Collections.Generic.IEnumerable%601> interface, the <xref:System.Web.UI.WebControls.LinqDataSource> control wraps the object in an object that does implement the <xref:System.Collections.Generic.IEnumerable%601> interface.       When the Result property is set to any value other than `null`, the <xref:System.Web.UI.WebControls.LinqDataSource> control does not query the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. Instead, it queries the object in the Result property.      > [!NOTE] >  When you set the Result property to an object, do not use `null` to represent an object that does not contain any data. The <xref:System.Web.UI.WebControls.LinqDataSource> control interprets `null` to mean that the Result property is not set, and it will create and query the object in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. To represent an object that does not contain data, set the Result property to an <xref:System.Collections.IList> or <xref:System.Collections.Generic.IList%601> object that does not contain any elements.       The <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>, <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, and <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> events are not raised when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object, and when two additional conditions apply. The conditions are that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control applies its query expressions to the object defined in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.","pos":[0,201],"source":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control applies its query expressions to the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."},{"content":"In a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event, you can manually change which object is queried by setting the Result property to an object.","pos":[202,380],"source":" In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you can manually change which object is queried by setting the Result property to an object."},{"content":"For example, you can use the Result property to query an in-memory collection in the Web page, or to get the results from a LINQ query expression.","pos":[381,527]},{"content":"You can set the Result property to any object.","pos":[528,574]},{"content":"If the object does not implement the &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control wraps the object in an object that does implement the &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface.","pos":[575,847],"source":" If the object does not implement the <xref:System.Collections.Generic.IEnumerable%601> interface, the <xref:System.Web.UI.WebControls.LinqDataSource> control wraps the object in an object that does implement the <xref:System.Collections.Generic.IEnumerable%601> interface."},{"content":"When the Result property is set to any value other than <ph id=\"ph1\">`null`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not query the object defined in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.","pos":[854,1089],"source":"       When the Result property is set to any value other than `null`, the <xref:System.Web.UI.WebControls.LinqDataSource> control does not query the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."},{"content":"Instead, it queries the object in the Result property.","pos":[1090,1144]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you set the Result property to an object, do not use <ph id=\"ph2\">`null`</ph> to represent an object that does not contain any data.","pos":[1150,1282],"source":"      > [!NOTE] >  When you set the Result property to an object, do not use `null` to represent an object that does not contain any data."},{"content":"The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control interprets <ph id=\"ph1\">`null`</ph> to mean that the Result property is not set, and it will create and query the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.","pos":[1283,1523],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control interprets `null` to mean that the Result property is not set, and it will create and query the object in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."},{"content":"To represent an object that does not contain data, set the Result property to an &lt;xref:System.Collections.IList&gt; or &lt;xref:System.Collections.Generic.IList%601&gt; object that does not contain any elements.","pos":[1524,1726],"source":" To represent an object that does not contain data, set the Result property to an <xref:System.Collections.IList> or <xref:System.Collections.Generic.IList%601> object that does not contain any elements."},{"content":"The &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;, and &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt; events are not raised when you programmatically set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property to an object, and when two additional conditions apply.","pos":[1733,2128],"source":"       The <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>, <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, and <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> events are not raised when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object, and when two additional conditions apply."},{"content":"The conditions are that either the original values do not have to be stored in view state, or the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property implements the &lt;xref:System.Data.Linq.ITable&gt; interface.","pos":[2129,2379],"source":" The conditions are that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface."}]},{"pos":[20609,20658],"content":"An object that represents the data for the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the data for the query.","pos":[0,49]}]},{"pos":[21244,21319],"content":"Gets the collection of parameters that is used to create the Select clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of parameters that is used to create the Select clause.","pos":[0,75]}]},{"pos":[21331,21882],"content":"You use the SelectParameters property to access parameters for the Select clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Select clause by adding or removing parameters from this collection. By default, the SelectParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the SelectParameters property to access parameters for the Select clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Select clause by adding or removing parameters from this collection. By default, the SelectParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.","pos":[0,551],"nodes":[{"content":"You use the SelectParameters property to access parameters for the Select clause in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[0,166],"source":"You use the SelectParameters property to access parameters for the Select clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"You can modify the Select clause by adding or removing parameters from this collection.","pos":[167,254]},{"content":"By default, the SelectParameters property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object contains any parameters that you added to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt; of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[255,551],"source":" By default, the SelectParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control."}]}]},{"pos":[23099,23160],"content":"An object that contains the parameters for the Select clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the parameters for the Select clause.","pos":[0,61]}]},{"pos":[23751,23825],"content":"Gets the collection of parameters that is used to create the Where clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of parameters that is used to create the Where clause.","pos":[0,74]}]},{"pos":[23838,25144],"content":"You use the WhereParameters property to access parameters for the Where clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Where clause by adding or removing parameters from this collection. By default, the WhereParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.       When you add parameters through the WhereParameters collection of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object, you must either include a placeholder for the parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property or set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`. For example, if you add a parameter named `ProductName` in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must either set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` or set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `ProductName=@ProductName`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the WhereParameters property to access parameters for the Where clause in a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.","pos":[0,164],"source":"You use the WhereParameters property to access parameters for the Where clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"You can modify the Where clause by adding or removing parameters from this collection.","pos":[165,251]},{"content":"By default, the WhereParameters property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object contains any parameters that you added to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; of the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.","pos":[252,546],"source":" By default, the WhereParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When you add parameters through the WhereParameters collection of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object, you must either include a placeholder for the parameter in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property or set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[553,928],"source":"       When you add parameters through the WhereParameters collection of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object, you must either include a placeholder for the parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property or set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`."},{"content":"For example, if you add a parameter named <ph id=\"ph1\">`ProductName`</ph> in the event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event, you must either set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt; property to <ph id=\"ph2\">`true`</ph> or set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property to <ph id=\"ph3\">`ProductName=@ProductName`</ph>.","pos":[929,1304],"source":" For example, if you add a parameter named `ProductName` in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must either set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` or set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `ProductName=@ProductName`."}]},{"pos":[26047,26107],"content":"An object that contains the parameters for the Where clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the parameters for the Where clause.","pos":[0,60]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  id: LinqDataSourceSelectEventArgs\n  children:\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters\n  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters\n  langs:\n  - csharp\n  name: LinqDataSourceSelectEventArgs\n  nameWithType: LinqDataSourceSelectEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Selecting\"></xref> event.\n  remarks: \"The LinqDataSourceSelectEventArgs object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event of the <xref:System.Web.UI.WebControls.LinqDataSource> control. You use the LinqDataSourceSelectEventArgs object to manually specify what data is returned, and how the data is sorted and paged when it is returned. You can programmatically add or remove parameters to the GroupBy, OrderBy, OrderGroupsBy, Select, and Where clauses by using the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>, and <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A> collections.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property enables you to change the data object that is used for the query. If you assign an object to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property, that object will be used for queries instead of the object specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property enables you to customize how returned data is sorted and paged. The data-bound control passes sorting and paging properties through the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> property. If you have to manually handle sorting or paging, set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property or <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control to `false`. You can then perform the customized query for sorting or paging in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.  \\n  \\n If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property.\"\n  example:\n  - \"The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the result of a search made by using language-integrated query (LINQ).  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_282_1.cs)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_282_1.vb)]  \\n  \\n The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to an array of string values that is defined in the Web page.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_282_2.cs)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_282_2.vb)]\"\n  syntax:\n    content: 'public class LinqDataSourceSelectEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})\n  id: '#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})'\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\"></xref> class.\n  syntax:\n    content: public LinqDataSourceSelectEventArgs (System.Web.UI.DataSourceSelectArguments arguments, System.Collections.Generic.IDictionary<string,object> whereParameters, System.Collections.Specialized.IOrderedDictionary orderByParameters, System.Collections.Generic.IDictionary<string,object> groupByParameters, System.Collections.Generic.IDictionary<string,object> orderGroupsByParameters, System.Collections.Generic.IDictionary<string,object> selectParameters);\n    parameters:\n    - id: arguments\n      type: System.Web.UI.DataSourceSelectArguments\n      description: The values that are passed from the data-bound control that determine how the data is paged and sorted. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*> property.\n    - id: whereParameters\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of parameters that is used to create the Where clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*> property.\n    - id: orderByParameters\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: The collection of parameters that is used to create the Order By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*> property.\n    - id: groupByParameters\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of parameters that is used to create the Group By clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*> property.\n    - id: orderGroupsByParameters\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of parameter that is used to create the clause that is used for sorting grouped data. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*> property.\n    - id: selectParameters\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of parameters that is used to create the Select clause. For more information, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*> property.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments\n  id: Arguments\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: Arguments\n  nameWithType: LinqDataSourceSelectEventArgs.Arguments\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets values that determine how the data is returned.\n  remarks: \"A data-bound control passes properties to the <xref:System.Web.UI.WebControls.LinqDataSource> control through the Arguments property in order to specify how paging and sorting should occur. If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically sorts or pages based on the properties from the data-bound control.  \\n  \\n You can customize how the data is sorted and paged from a query by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> and <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> properties to `false` and then creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. In the event handler, use the Arguments property to retrieve the sorting and paging properties from the data-bound control. Then customize the query as needed, based on the properties from the Arguments property. If the <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object is set to `true`, you must return a value for the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property.\"\n  syntax:\n    content: public System.Web.UI.DataSourceSelectArguments Arguments { get; }\n    return:\n      type: System.Web.UI.DataSourceSelectArguments\n      description: An object that contains values for determining how the data is returned.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters\n  id: GroupByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: GroupByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that is used to create the GroupBy clause.\n  remarks: You use the GroupByParameters property to access parameters for the GroupBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the GroupBy clause by adding or removing parameters from this collection. By default, the GroupByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> GroupByParameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An object that contains the parameters for the GroupBy clause.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters\n  id: OrderByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: OrderByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that is used to create the OrderBy clause.\n  remarks: \"You use the OrderByParameters property to access parameters for the OrderBy clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the OrderBy clause by adding or removing parameters from this collection. By default, the OrderByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \\n  \\n When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, parameters in the OrderByParameters collection do not have to be named. The data will be ordered based on the sequence of the parameters in the OrderByParameters collection.\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary OrderByParameters { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An object that contains the parameters for the OrderBy clause.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  id: OrderGroupsByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used to create the clause that specifies how grouped data is sorted.\n  remarks: \"When you group data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, you can sort the grouped data by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to one of the properties used for grouping the data.  \\n  \\n You use the OrderGroupsByParameters property to access parameters for the Order Groups By clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Order Groups By clause by adding or removing parameters from this collection.  \\n  \\n By default, the OrderGroupsByParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added declaratively to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> OrderGroupsByParameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An object that contains the parameters for the clause that specifies how grouped data is sorted.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result\n  id: Result\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: Result\n  nameWithType: LinqDataSourceSelectEventArgs.Result\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the data object that is used in the data query.\n  remarks: \"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control applies its query expressions to the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you can manually change which object is queried by setting the Result property to an object. For example, you can use the Result property to query an in-memory collection in the Web page, or to get the results from a LINQ query expression. You can set the Result property to any object. If the object does not implement the <xref:System.Collections.Generic.IEnumerable%601> interface, the <xref:System.Web.UI.WebControls.LinqDataSource> control wraps the object in an object that does implement the <xref:System.Collections.Generic.IEnumerable%601> interface.  \\n  \\n When the Result property is set to any value other than `null`, the <xref:System.Web.UI.WebControls.LinqDataSource> control does not query the object defined in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. Instead, it queries the object in the Result property.  \\n  \\n> [!NOTE]\\n>  When you set the Result property to an object, do not use `null` to represent an object that does not contain any data. The <xref:System.Web.UI.WebControls.LinqDataSource> control interprets `null` to mean that the Result property is not set, and it will create and query the object in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. To represent an object that does not contain data, set the Result property to an <xref:System.Collections.IList> or <xref:System.Collections.Generic.IList%601> object that does not contain any elements.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>, <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, and <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> events are not raised when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object, and when two additional conditions apply. The conditions are that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.\"\n  example:\n  - \"The following example shows how to set the Result property to the result of a LINQ query.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_995_1.cs)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_995_1.vb)]  \\n  \\n The following example shows how to set the Result property to an array of string values is defined in the Web page.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_995_2.cs)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_995_2.vb)]\"\n  syntax:\n    content: public object Result { get; set; }\n    return:\n      type: System.Object\n      description: An object that represents the data for the query.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters\n  id: SelectParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: SelectParameters\n  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that is used to create the Select clause.\n  remarks: You use the SelectParameters property to access parameters for the Select clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Select clause by adding or removing parameters from this collection. By default, the SelectParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.\n  example:\n  - \"The following example shows how to add a parameter to the SelectParameters collection. The added parameter is used to calculate an adjusted price for a product based on whether products are on discounted. The first part of the example shows the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_535_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_535_1.aspx)]  \\n  \\n The second part of the example shows the markup that defines the Select clause.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_535_2.aspx)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_535_2.aspx)]\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> SelectParameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An object that contains the parameters for the Select clause.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters\n  id: WhereParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  langs:\n  - csharp\n  name: WhereParameters\n  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that is used to create the Where clause.\n  remarks: \"You use the WhereParameters property to access parameters for the Where clause in a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. You can modify the Where clause by adding or removing parameters from this collection. By default, the WhereParameters property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object contains any parameters that you added to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> of the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \\n  \\n When you add parameters through the WhereParameters collection of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object, you must either include a placeholder for the parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property or set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`. For example, if you add a parameter named `ProductName` in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must either set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` or set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `ProductName=@ProductName`.\"\n  example:\n  - \"The following example shows how to add a parameter to the WhereParameters collection. The added parameter will limit the returned products to only those products with a value of \\\"Bike\\\" in the `Name` property. The <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is set to `true` so that the parameter is automatically included in the Where clause.  \\n  \\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_828_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_828_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> WhereParameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An object that contains the parameters for the Where clause.\n  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: System.ComponentModel.CancelEventArgs\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)\n- uid: System.Web.UI.DataSourceSelectArguments\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceSelectArguments\n  nameWithType: DataSourceSelectArguments\n  fullName: System.Web.UI.DataSourceSelectArguments\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: Arguments\n  nameWithType: LinqDataSourceSelectEventArgs.Arguments\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: GroupByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: OrderByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: LinqDataSourceSelectEventArgs.Result\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: SelectParameters\n  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: WhereParameters\n  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: LinqDataSourceSelectEventArgs\n  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: Arguments\n  nameWithType: LinqDataSourceSelectEventArgs.Arguments\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: GroupByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: OrderByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: LinqDataSourceSelectEventArgs.Result\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: SelectParameters\n  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*\n  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  isExternal: false\n  name: WhereParameters\n  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters\n"}