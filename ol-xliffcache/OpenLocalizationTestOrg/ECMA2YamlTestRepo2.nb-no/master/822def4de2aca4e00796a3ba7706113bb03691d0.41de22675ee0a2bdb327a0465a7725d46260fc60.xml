{"nodes":[{"pos":[823,890],"content":"Represents an evaluated item definition for a particular item-type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an evaluated item definition for a particular item-type.","pos":[0,67]}]},{"pos":[903,1497],"content":"Item definitions are not the same as items. Like items, item definitions can have metadata. Like properties, new metadata can override old metadata with the same name.       During evaluation, all the item definitions for an item type are collected together (assuming their conditions are true) to create one ProjectItemDefinition for each type. For this reason, a project item definition can refer to more than one project item definition element. The metadata within a project item definition, however, refers to a single project metadata element, which can be added, removed, and modified.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Item definitions are not the same as items. Like items, item definitions can have metadata. Like properties, new metadata can override old metadata with the same name.       During evaluation, all the item definitions for an item type are collected together (assuming their conditions are true) to create one ProjectItemDefinition for each type. For this reason, a project item definition can refer to more than one project item definition element. The metadata within a project item definition, however, refers to a single project metadata element, which can be added, removed, and modified.","pos":[0,592],"nodes":[{"content":"Item definitions are not the same as items.","pos":[0,43]},{"content":"Like items, item definitions can have metadata.","pos":[44,91]},{"content":"Like properties, new metadata can override old metadata with the same name.","pos":[92,167]},{"content":"During evaluation, all the item definitions for an item type are collected together (assuming their conditions are true) to create one ProjectItemDefinition for each type.","pos":[174,345]},{"content":"For this reason, a project item definition can refer to more than one project item definition element.","pos":[346,448]},{"content":"The metadata within a project item definition, however, refers to a single project metadata element, which can be added, removed, and modified.","pos":[449,592]}]}]},{"pos":[2208,2268],"content":"Get any metadata in the item definition with the given name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get any metadata in the item definition with the given name.","pos":[0,60]}]},{"pos":[2445,2482],"content":"The name of the metadata to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the metadata to retrieve.","pos":[0,37]}]},{"pos":[2569,2680],"content":"Get any metadata in the item definition with the given name. Returns null if no metadata exists with that name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get any metadata in the item definition with the given name. Returns null if no metadata exists with that name.","pos":[0,111],"nodes":[{"content":"Get any metadata in the item definition with the given name.","pos":[0,60]},{"content":"Returns null if no metadata exists with that name.","pos":[61,111]}]}]},{"pos":[3282,3352],"content":"Get the value of any metadata in the item that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get the value of any metadata in the item that has the specified name.","pos":[0,70]}]},{"pos":[3498,3559],"content":"The name of the item whose metadata value is to be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item whose metadata value is to be retrieved.","pos":[0,61]}]},{"pos":[3617,3715],"content":"Returns the value of any metadata in the item that has the specified name; otherwise returns null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of any metadata in the item that has the specified name; otherwise returns null.","pos":[0,98]}]},{"pos":[4230,4273],"content":"Gets the item type of this item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the item type of this item definition.","pos":[0,43]}]},{"pos":[4386,4432],"content":"Returns the item type of this item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the item type of this item definition.","pos":[0,46]}]},{"pos":[4939,5000],"content":"Gets an enumerator over all metadata for the item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator over all metadata for the item definition.","pos":[0,61]}]},{"pos":[5012,5043],"content":"This is a read-only collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is a read-only collection.","pos":[0,31]}]},{"pos":[5301,5365],"content":"Returns an enumerator over all metadata for the item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator over all metadata for the item definition.","pos":[0,64]}]},{"pos":[5897,5951],"content":"Gets the count of the metadata on the item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the count of the metadata on the item definition.","pos":[0,54]}]},{"pos":[6065,6122],"content":"Returns the count of the metadata on the item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the count of the metadata on the item definition.","pos":[0,57]}]},{"pos":[6629,6681],"content":"Gets the project that contains this item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the project that contains this item definition.","pos":[0,52]}]},{"pos":[6842,6918],"content":"Returns the project that contains this item definition, which is never null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the project that contains this item definition, which is never null.","pos":[0,76]}]},{"pos":[7565,7625],"content":"Sets the value of the given metadata in the item definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the given metadata in the item definition.","pos":[0,60]}]},{"pos":[7637,7718],"content":"The unevaluated value is assumed to contain character escape sequences as needed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The unevaluated value is assumed to contain character escape sequences as needed.","pos":[0,81]}]},{"pos":[7925,7957],"content":"The name of the metadata to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the metadata to set.","pos":[0,32]}]},{"pos":[8030,8072],"content":"The new unevaluated value of the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new unevaluated value of the metadata.","pos":[0,42]}]},{"pos":[8159,8200],"content":"Returns the metadata with the given name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the metadata with the given name.","pos":[0,41]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition\n  id: ProjectItemDefinition\n  children:\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.Project\n  - Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)\n  langs:\n  - csharp\n  name: ProjectItemDefinition\n  nameWithType: ProjectItemDefinition\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition\n  type: Class\n  summary: Represents an evaluated item definition for a particular item-type.\n  remarks: \"Item definitions are not the same as items. Like items, item definitions can have metadata. Like properties, new metadata can override old metadata with the same name.  \\n  \\n During evaluation, all the item definitions for an item type are collected together (assuming their conditions are true) to create one ProjectItemDefinition for each type. For this reason, a project item definition can refer to more than one project item definition element. The metadata within a project item definition, however, refers to a single project metadata element, which can be added, removed, and modified.\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{itemType} #Metadata={MetadataCount}\")]\n\n      public class ProjectItemDefinition\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)\n  id: GetMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: GetMetadata(String)\n  nameWithType: ProjectItemDefinition.GetMetadata(String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get any metadata in the item definition with the given name.\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata to retrieve.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectMetadata\n      description: Get any metadata in the item definition with the given name. Returns null if no metadata exists with that name.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)\n  id: GetMetadataValue(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: GetMetadataValue(String)\n  nameWithType: ProjectItemDefinition.GetMetadataValue(String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get the value of any metadata in the item that has the specified name.\n  syntax:\n    content: public string GetMetadataValue (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item whose metadata value is to be retrieved.\n    return:\n      type: System.String\n      description: Returns the value of any metadata in the item that has the specified name; otherwise returns null.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType\n  id: ItemType\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ProjectItemDefinition.ItemType\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the item type of this item definition.\n  syntax:\n    content: public string ItemType { get; }\n    return:\n      type: System.String\n      description: Returns the item type of this item definition.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata\n  id: Metadata\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: ProjectItemDefinition.Metadata\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all metadata for the item definition.\n  remarks: This is a read-only collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}\n      description: Returns an enumerator over all metadata for the item definition.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount\n  id: MetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: MetadataCount\n  nameWithType: ProjectItemDefinition.MetadataCount\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the count of the metadata on the item definition.\n  syntax:\n    content: public int MetadataCount { get; }\n    return:\n      type: System.Int32\n      description: Returns the count of the metadata on the item definition.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Project\n  id: Project\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: Project\n  nameWithType: ProjectItemDefinition.Project\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.Project\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the project that contains this item definition.\n  syntax:\n    content: public Microsoft.Build.Evaluation.Project Project { get; }\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: Returns the project that contains this item definition, which is never null.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.Project*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)\n  id: SetMetadataValue(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  langs:\n  - csharp\n  name: SetMetadataValue(String,String)\n  nameWithType: ProjectItemDefinition.SetMetadataValue(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Sets the value of the given metadata in the item definition.\n  remarks: The unevaluated value is assumed to contain character escape sequences as needed.\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata to set.\n    - id: unevaluatedValue\n      type: System.String\n      description: The new unevaluated value of the metadata.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectMetadata\n      description: Returns the metadata with the given name.\n  overload: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: GetMetadata(String)\n  nameWithType: ProjectItemDefinition.GetMetadata(String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(String)\n- uid: Microsoft.Build.Evaluation.ProjectMetadata\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectMetadata\n  nameWithType: ProjectMetadata\n  fullName: Microsoft.Build.Evaluation.ProjectMetadata\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: GetMetadataValue(String)\n  nameWithType: ProjectItemDefinition.GetMetadataValue(String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(String)\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: ItemType\n  nameWithType: ProjectItemDefinition.ItemType\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: Metadata\n  nameWithType: ProjectItemDefinition.Metadata\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ProjectMetadata>\n  nameWithType: IEnumerable<ProjectMetadata>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectMetadata\n    name: ProjectMetadata\n    nameWithType: ProjectMetadata\n    fullName: ProjectMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: MetadataCount\n  nameWithType: ProjectItemDefinition.MetadataCount\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Project\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: Project\n  nameWithType: ProjectItemDefinition.Project\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.Project\n- uid: Microsoft.Build.Evaluation.Project\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: Project\n  nameWithType: Project\n  fullName: Microsoft.Build.Evaluation.Project\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: SetMetadataValue(String,String)\n  nameWithType: ProjectItemDefinition.SetMetadataValue(String,String)\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(String,String)\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: GetMetadata\n  nameWithType: ProjectItemDefinition.GetMetadata\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: GetMetadataValue\n  nameWithType: ProjectItemDefinition.GetMetadataValue\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: ItemType\n  nameWithType: ProjectItemDefinition.ItemType\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: Metadata\n  nameWithType: ProjectItemDefinition.Metadata\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: MetadataCount\n  nameWithType: ProjectItemDefinition.MetadataCount\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.Project*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: Project\n  nameWithType: ProjectItemDefinition.Project\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue*\n  parent: Microsoft.Build.Evaluation.ProjectItemDefinition\n  isExternal: false\n  name: SetMetadataValue\n  nameWithType: ProjectItemDefinition.SetMetadataValue\n"}