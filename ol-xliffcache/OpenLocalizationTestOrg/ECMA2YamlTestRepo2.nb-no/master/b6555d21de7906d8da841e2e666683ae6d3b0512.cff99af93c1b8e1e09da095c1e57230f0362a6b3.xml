{"nodes":[{"pos":[2515,2587],"content":"Contains factory methods to create dynamic call site binders for CSharp.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains factory methods to create dynamic call site binders for CSharp.","pos":[0,72]}]},{"pos":[3820,3869],"content":"Initializes a new CSharp binary operation binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp binary operation binder.","pos":[0,49]}]},{"pos":[4308,4354],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[4445,4471],"content":"The binary operation kind.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binary operation kind.","pos":[0,26]}]},{"pos":[4533,4600],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[4745,4878],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[4969,5014],"content":"Returns a new CSharp binary operation binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp binary operation binder.","pos":[0,45]}]},{"pos":[5702,5742],"content":"Initializes a new CSharp convert binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp convert binder.","pos":[0,40]}]},{"pos":[6030,6076],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[6135,6158],"content":"The type to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert to.","pos":[0,23]}]},{"pos":[6220,6287],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[6378,6414],"content":"Returns a new CSharp convert binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp convert binder.","pos":[0,36]}]},{"pos":[7336,7378],"content":"Initializes a new CSharp get index binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp get index binder.","pos":[0,42]}]},{"pos":[7760,7806],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[7868,7935],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[8080,8213],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[8304,8342],"content":"Returns a new CSharp get index binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp get index binder.","pos":[0,38]}]},{"pos":[9319,9362],"content":"Initializes a new CSharp get member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp get member binder.","pos":[0,43]}]},{"pos":[9758,9804],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[9865,9895],"content":"The name of the member to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to get.","pos":[0,30]}]},{"pos":[9957,10024],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[10169,10302],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[10393,10432],"content":"Returns a new CSharp get member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp get member binder.","pos":[0,39]}]},{"pos":[11346,11385],"content":"Initializes a new CSharp invoke binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp invoke binder.","pos":[0,39]}]},{"pos":[11765,11811],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[11873,11940],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[12085,12218],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[12309,12344],"content":"Returns a new CSharp invoke binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp invoke binder.","pos":[0,35]}]},{"pos":[13310,13361],"content":"Initializes a new CSharp invoke constructor binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp invoke constructor binder.","pos":[0,51]}]},{"pos":[13752,13798],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[13860,13927],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[14072,14205],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[14296,14343],"content":"Returns a new CSharp invoke constructor binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp invoke constructor binder.","pos":[0,47]}]},{"pos":[15502,15548],"content":"Initializes a new CSharp invoke member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp invoke member binder.","pos":[0,46]}]},{"pos":[16007,16053],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[16114,16147],"content":"The name of the member to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to invoke.","pos":[0,33]}]},{"pos":[16255,16308],"content":"The list of type arguments specified for this invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of type arguments specified for this invoke.","pos":[0,53]}]},{"pos":[16370,16437],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[16582,16715],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[16806,16848],"content":"Returns a new CSharp invoke member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp invoke member binder.","pos":[0,42]}]},{"pos":[17543,17584],"content":"Initializes a new CSharp is event binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp is event binder.","pos":[0,41]}]},{"pos":[17874,17920],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[17981,18015],"content":"The name of the event to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the event to look for.","pos":[0,34]}]},{"pos":[18077,18144],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[18235,18272],"content":"Returns a new CSharp is event binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp is event binder.","pos":[0,37]}]},{"pos":[19194,19236],"content":"Initializes a new CSharp set index binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp set index binder.","pos":[0,42]}]},{"pos":[19618,19664],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[19726,19793],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[19938,20071],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[20162,20200],"content":"Returns a new CSharp set index binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp set index binder.","pos":[0,38]}]},{"pos":[21177,21220],"content":"Initializes a new CSharp set member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp set member binder.","pos":[0,43]}]},{"pos":[21616,21662],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[21723,21753],"content":"The name of the member to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to set.","pos":[0,30]}]},{"pos":[21815,21882],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[22027,22160],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[22251,22290],"content":"Returns a new CSharp set member binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp set member binder.","pos":[0,39]}]},{"pos":[23367,23415],"content":"Initializes a new CSharp unary operation binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new CSharp unary operation binder.","pos":[0,48]}]},{"pos":[23853,23899],"content":"The flags with which to initialize the binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"The flags with which to initialize the binder.","pos":[0,46]}]},{"pos":[23990,24015],"content":"The unary operation kind.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unary operation kind.","pos":[0,25]}]},{"pos":[24077,24144],"content":"The <xref:System.Type> that indicates where this operation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that indicates where this operation is used.","pos":[0,67],"source":"The <xref:System.Type> that indicates where this operation is used."}]},{"pos":[24289,24422],"content":"The sequence of <bpt id=\"p1\">&lt;xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for the arguments to this operation.","needQuote":true,"needEscape":true,"source":"The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation."},{"pos":[24513,24557],"content":"Returns a new CSharp unary operation binder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new CSharp unary operation binder.","pos":[0,44]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.CSharp.RuntimeBinder.Binder\n  id: Binder\n  children:\n  - Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)\n  - Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)\n  - Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  - Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  langs:\n  - csharp\n  name: Binder\n  nameWithType: Binder\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder\n  type: Class\n  summary: Contains factory methods to create dynamic call site binders for CSharp.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public static class Binder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp binary operation binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder BinaryOperation (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, System.Linq.Expressions.ExpressionType operation, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: operation\n      type: System.Linq.Expressions.ExpressionType\n      description: The binary operation kind.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp binary operation binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)\n  id: Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: Convert(CSharpBinderFlags,Type,Type)\n  nameWithType: Binder.Convert(CSharpBinderFlags,Type,Type)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Convert(CSharpBinderFlags,Type,Type)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp convert binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder Convert (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type type, Type context);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: type\n      type: System.Type\n      description: The type to convert to.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp convert binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp get index binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder GetIndex (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp get index binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp get member binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder GetMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: name\n      type: System.String\n      description: The name of the member to get.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp get member binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.GetMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp invoke binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder Invoke (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp invoke binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp invoke constructor binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder InvokeConstructor (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp invoke constructor binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp invoke member binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder InvokeMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, System.Collections.Generic.IEnumerable<Type> typeArguments, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: name\n      type: System.String\n      description: The name of the member to invoke.\n    - id: typeArguments\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: The list of type arguments specified for this invoke.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp invoke member binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)\n  id: IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: IsEvent(CSharpBinderFlags,String,Type)\n  nameWithType: Binder.IsEvent(CSharpBinderFlags,String,Type)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(CSharpBinderFlags,String,Type)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp is event binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder IsEvent (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: name\n      type: System.String\n      description: The name of the event to look for.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp is event binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp set index binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder SetIndex (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp set index binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp set member binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder SetMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: name\n      type: System.String\n      description: The name of the member to set.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp set member binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.SetMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  id: UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  langs:\n  - csharp\n  name: UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  type: Method\n  assemblies:\n  - Microsoft.CSharp\n  namespace: Microsoft.CSharp.RuntimeBinder\n  summary: Initializes a new CSharp unary operation binder.\n  syntax:\n    content: public static System.Runtime.CompilerServices.CallSiteBinder UnaryOperation (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, System.Linq.Expressions.ExpressionType operation, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);\n    parameters:\n    - id: flags\n      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n      description: The flags with which to initialize the binder.\n    - id: operation\n      type: System.Linq.Expressions.ExpressionType\n      description: The unary operation kind.\n    - id: context\n      type: System.Type\n      description: The <xref:System.Type> that indicates where this operation is used.\n    - id: argumentInfo\n      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n      description: The sequence of <xref href=\"Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\"></xref> instances for the arguments to this operation.\n    return:\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: Returns a new CSharp unary operation binder.\n  overload: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: true\n  name: CallSiteBinder\n  nameWithType: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n- uid: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n  parent: Microsoft.CSharp.RuntimeBinder\n  isExternal: false\n  name: CSharpBinderFlags\n  nameWithType: CSharpBinderFlags\n  fullName: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<CSharpArgumentInfo>\n  nameWithType: IEnumerable<CSharpArgumentInfo>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo\n    name: CSharpArgumentInfo\n    nameWithType: CSharpArgumentInfo\n    fullName: CSharpArgumentInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: Convert(CSharpBinderFlags,Type,Type)\n  nameWithType: Binder.Convert(CSharpBinderFlags,Type,Type)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Convert(CSharpBinderFlags,Type,Type)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: IsEvent(CSharpBinderFlags,String,Type)\n  nameWithType: Binder.IsEvent(CSharpBinderFlags,String,Type)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(CSharpBinderFlags,String,Type)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  nameWithType: Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n  fullName: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: BinaryOperation\n  nameWithType: Binder.BinaryOperation\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: Convert\n  nameWithType: Binder.Convert\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: GetIndex\n  nameWithType: Binder.GetIndex\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: GetMember\n  nameWithType: Binder.GetMember\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: Invoke\n  nameWithType: Binder.Invoke\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: InvokeConstructor\n  nameWithType: Binder.InvokeConstructor\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: InvokeMember\n  nameWithType: Binder.InvokeMember\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: IsEvent\n  nameWithType: Binder.IsEvent\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: SetIndex\n  nameWithType: Binder.SetIndex\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: SetMember\n  nameWithType: Binder.SetMember\n- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation*\n  parent: Microsoft.CSharp.RuntimeBinder.Binder\n  isExternal: false\n  name: UnaryOperation\n  nameWithType: Binder.UnaryOperation\n"}