{"nodes":[{"pos":[656,768],"content":"Provides additional event information about <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> processing.","needQuote":true,"needEscape":true,"source":"Provides additional event information about <xref href=\"System.Windows.Threading.Dispatcher\"></xref> processing."},{"pos":[1330,1391],"content":"Occurs when the dispatcher has no more operations to process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the dispatcher has no more operations to process.","pos":[0,61]}]},{"pos":[1403,1491],"content":"This event is raised by the dispatcher thread when there are no more pending work items.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This event is raised by the dispatcher thread when there are no more pending work items.","pos":[0,88]}]},{"pos":[1624,1636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2073,2109],"content":"Occurs when an operation is aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an operation is aborted.","pos":[0,36]}]},{"pos":[2121,2206],"content":"Any thread can abort an operation; therefore, this event can be raised by any thread.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Any thread can abort an operation; therefore, this event can be raised by any thread.","pos":[0,85]}]},{"pos":[2408,2420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2867,2902],"content":"Occurs when an operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an operation completes.","pos":[0,35]}]},{"pos":[2914,2994],"content":"This event is raised by the dispatcher thread after the operation has completed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This event is raised by the dispatcher thread after the operation has completed.","pos":[0,80]}]},{"pos":[3198,3210],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3642,3695],"content":"Occurs when an operation is posted to the dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an operation is posted to the dispatcher.","pos":[0,53]}]},{"pos":[3708,4159],"content":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.       This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority> is specified, or if the destination dispatcher is owned by a different thread.       Any thread can post operations; therefore, this event can be raised by any thread.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.       This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority> is specified, or if the destination dispatcher is owned by a different thread.       Any thread can post operations; therefore, this event can be raised by any thread.","pos":[0,447],"nodes":[{"content":"Typically, this event occurs during a call to &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;.","pos":[0,104],"source":"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>."},{"content":"This event can occur during a call to &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; if any priority other than &lt;xref:System.Windows.Threading.DispatcherPriority&gt; is specified, or if the destination dispatcher is owned by a different thread.","pos":[111,358],"source":"       This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority> is specified, or if the destination dispatcher is owned by a different thread."},{"content":"Any thread can post operations; therefore, this event can be raised by any thread.","pos":[365,447]}]}]},{"pos":[4361,4373],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4850,4902],"content":"Occurs when the priority of an operation is changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the priority of an operation is changed.","pos":[0,52]}]},{"pos":[4914,5014],"content":"Any thread can change the priority of operations; therefore, this event can be raised by any thread.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Any thread can change the priority of operations; therefore, this event can be raised by any thread.","pos":[0,100]}]},{"pos":[5224,5236],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5673,5709],"content":"Occurs when an operation is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an operation is invoked.","pos":[0,36]}]},{"pos":[5911,5923],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherHooks\n  id: DispatcherHooks\n  children:\n  - System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  - System.Windows.Threading.DispatcherHooks.OperationAborted\n  - System.Windows.Threading.DispatcherHooks.OperationCompleted\n  - System.Windows.Threading.DispatcherHooks.OperationPosted\n  - System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  - System.Windows.Threading.DispatcherHooks.OperationStarted\n  langs:\n  - csharp\n  name: DispatcherHooks\n  nameWithType: DispatcherHooks\n  fullName: System.Windows.Threading.DispatcherHooks\n  type: Class\n  summary: Provides additional event information about <xref href=\"System.Windows.Threading.Dispatcher\"></xref> processing.\n  syntax:\n    content: public sealed class DispatcherHooks\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  id: DispatcherInactive\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: DispatcherInactive\n  nameWithType: DispatcherHooks.DispatcherInactive\n  fullName: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the dispatcher has no more operations to process.\n  remarks: This event is raised by the dispatcher thread when there are no more pending work items.\n  syntax:\n    content: public event EventHandler DispatcherInactive;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.OperationAborted\n  id: OperationAborted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationAborted\n  nameWithType: DispatcherHooks.OperationAborted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationAborted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is aborted.\n  remarks: Any thread can abort an operation; therefore, this event can be raised by any thread.\n  syntax:\n    content: public event System.Windows.Threading.DispatcherHookEventHandler OperationAborted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.OperationCompleted\n  id: OperationCompleted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationCompleted\n  nameWithType: DispatcherHooks.OperationCompleted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationCompleted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation completes.\n  remarks: This event is raised by the dispatcher thread after the operation has completed.\n  syntax:\n    content: public event System.Windows.Threading.DispatcherHookEventHandler OperationCompleted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.OperationPosted\n  id: OperationPosted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationPosted\n  nameWithType: DispatcherHooks.OperationPosted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationPosted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is posted to the dispatcher.\n  remarks: \"Typically, this event occurs during a call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.  \\n  \\n This event can occur during a call to <xref:System.Windows.Threading.Dispatcher.Invoke%2A> if any priority other than <xref:System.Windows.Threading.DispatcherPriority> is specified, or if the destination dispatcher is owned by a different thread.  \\n  \\n Any thread can post operations; therefore, this event can be raised by any thread.\"\n  syntax:\n    content: public event System.Windows.Threading.DispatcherHookEventHandler OperationPosted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  id: OperationPriorityChanged\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationPriorityChanged\n  nameWithType: DispatcherHooks.OperationPriorityChanged\n  fullName: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the priority of an operation is changed.\n  remarks: Any thread can change the priority of operations; therefore, this event can be raised by any thread.\n  syntax:\n    content: public event System.Windows.Threading.DispatcherHookEventHandler OperationPriorityChanged;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherHooks.OperationStarted\n  id: OperationStarted\n  parent: System.Windows.Threading.DispatcherHooks\n  langs:\n  - csharp\n  name: OperationStarted\n  nameWithType: DispatcherHooks.OperationStarted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationStarted\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when an operation is invoked.\n  syntax:\n    content: public event System.Windows.Threading.DispatcherHookEventHandler OperationStarted;\n    return:\n      type: System.Windows.Threading.DispatcherHookEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: DispatcherInactive\n  nameWithType: DispatcherHooks.DispatcherInactive\n  fullName: System.Windows.Threading.DispatcherHooks.DispatcherInactive\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Threading.DispatcherHooks.OperationAborted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationAborted\n  nameWithType: DispatcherHooks.OperationAborted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationAborted\n- uid: System.Windows.Threading.DispatcherHookEventHandler\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherHookEventHandler\n  nameWithType: DispatcherHookEventHandler\n  fullName: System.Windows.Threading.DispatcherHookEventHandler\n- uid: System.Windows.Threading.DispatcherHooks.OperationCompleted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationCompleted\n  nameWithType: DispatcherHooks.OperationCompleted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationCompleted\n- uid: System.Windows.Threading.DispatcherHooks.OperationPosted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationPosted\n  nameWithType: DispatcherHooks.OperationPosted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationPosted\n- uid: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationPriorityChanged\n  nameWithType: DispatcherHooks.OperationPriorityChanged\n  fullName: System.Windows.Threading.DispatcherHooks.OperationPriorityChanged\n- uid: System.Windows.Threading.DispatcherHooks.OperationStarted\n  parent: System.Windows.Threading.DispatcherHooks\n  isExternal: false\n  name: OperationStarted\n  nameWithType: DispatcherHooks.OperationStarted\n  fullName: System.Windows.Threading.DispatcherHooks.OperationStarted\n"}