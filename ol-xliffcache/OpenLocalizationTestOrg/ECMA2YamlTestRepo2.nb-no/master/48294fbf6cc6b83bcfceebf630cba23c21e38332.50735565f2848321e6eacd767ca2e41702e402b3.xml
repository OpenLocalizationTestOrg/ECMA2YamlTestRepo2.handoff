{"nodes":[{"pos":[781,882],"content":"Specifies a custom virtual-directory hierarchy for a Web application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a custom virtual-directory hierarchy for a Web application. This class cannot be inherited.","pos":[0,101],"nodes":[{"content":"Specifies a custom virtual-directory hierarchy for a Web application.","pos":[0,69]},{"content":"This class cannot be inherited.","pos":[70,101]}]}]},{"pos":[1588,1723],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on supplied parameters.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> class based on supplied parameters."},{"pos":[1911,1983],"content":"A string value that specifies the absolute path to a physical directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string value that specifies the absolute path to a physical directory.","pos":[0,72]}]},{"pos":[2050,2158],"content":"A Boolean value that indicates whether the virtual directory is the application root of the Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether the virtual directory is the application root of the Web application.","pos":[0,108]}]},{"pos":[2858,2993],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on supplied parameters.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> class based on supplied parameters."},{"pos":[3208,3280],"content":"A string value that specifies the absolute path to a physical directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string value that specifies the absolute path to a physical directory.","pos":[0,72]}]},{"pos":[3347,3455],"content":"A Boolean value that indicates whether the virtual directory is the application root of the Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether the virtual directory is the application root of the Web application.","pos":[0,108]}]},{"pos":[3530,3565],"content":"The name of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the configuration file.","pos":[0,35]}]},{"pos":[4114,4162],"content":"Gets or sets the name of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the configuration file.","pos":[0,48]}]},{"pos":[4174,4249],"content":"If the name of the configuration file is not specified, Web.config is used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the name of the configuration file is not specified, Web.config is used.","pos":[0,75]}]},{"pos":[4377,4435],"content":"A value that indicates the name of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates the name of the configuration file.","pos":[0,58]}]},{"pos":[4625,4676],"content":"The selected value is null or an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value is null or an empty string (\"\").","pos":[0,51]}]},{"pos":[5095,5203],"content":"Gets or sets a value that indicates whether the virtual directory should be treated as the application root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the virtual directory should be treated as the application root.","pos":[0,108]}]},{"pos":[5321,5416],"content":"A value that indicates whether the virtual directory should be treated as the application root.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the virtual directory should be treated as the application root.","pos":[0,95]}]},{"pos":[5964,6042],"content":"Gets or sets a value that specifies the full server path of a Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the full server path of a Web application.","pos":[0,78]}]},{"pos":[6169,6234],"content":"A value that indicates the full server path of a Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates the full server path of a Web application.","pos":[0,65]}]},{"pos":[6423,6491],"content":"The selected value is invalid or fails internal security validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value is invalid or fails internal security validation.","pos":[0,68]}]},{"pos":[6945,7034],"content":"Gets a value that specifies the virtual directory relative to the root of the Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies the virtual directory relative to the root of the Web server.","pos":[0,89]}]},{"pos":[7155,7217],"content":"A value that indicates the relative Web-application directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates the relative Web-application directory.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.VirtualDirectoryMapping\n  id: VirtualDirectoryMapping\n  children:\n  - System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean)\n  - System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean,System.String)\n  - System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName\n  - System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot\n  - System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory\n  - System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory\n  langs:\n  - csharp\n  name: VirtualDirectoryMapping\n  nameWithType: VirtualDirectoryMapping\n  fullName: System.Web.Configuration.VirtualDirectoryMapping\n  type: Class\n  summary: Specifies a custom virtual-directory hierarchy for a Web application. This class cannot be inherited.\n  syntax:\n    content: public sealed class VirtualDirectoryMapping\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: VirtualDirectoryMapping(String,Boolean)\n  nameWithType: VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean)\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Creates a new instance of the <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> class based on supplied parameters.\n  syntax:\n    content: public VirtualDirectoryMapping (string physicalDirectory, bool isAppRoot);\n    parameters:\n    - id: physicalDirectory\n      type: System.String\n      description: A string value that specifies the absolute path to a physical directory.\n    - id: isAppRoot\n      type: System.Boolean\n      description: A Boolean value that indicates whether the virtual directory is the application root of the Web application.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean,System.String)\n  id: '#ctor(System.String,System.Boolean,System.String)'\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: VirtualDirectoryMapping(String,Boolean,String)\n  nameWithType: VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean,String)\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Creates a new instance of the <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> class based on supplied parameters.\n  syntax:\n    content: public VirtualDirectoryMapping (string physicalDirectory, bool isAppRoot, string configFileBaseName);\n    parameters:\n    - id: physicalDirectory\n      type: System.String\n      description: A string value that specifies the absolute path to a physical directory.\n    - id: isAppRoot\n      type: System.Boolean\n      description: A Boolean value that indicates whether the virtual directory is the application root of the Web application.\n    - id: configFileBaseName\n      type: System.String\n      description: The name of the configuration file.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName\n  id: ConfigFileBaseName\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: ConfigFileBaseName\n  nameWithType: VirtualDirectoryMapping.ConfigFileBaseName\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the configuration file.\n  remarks: If the name of the configuration file is not specified, Web.config is used.\n  syntax:\n    content: public string ConfigFileBaseName { get; set; }\n    return:\n      type: System.String\n      description: A value that indicates the name of the configuration file.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The selected value is null or an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot\n  id: IsAppRoot\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: IsAppRoot\n  nameWithType: VirtualDirectoryMapping.IsAppRoot\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value that indicates whether the virtual directory should be treated as the application root.\n  syntax:\n    content: public bool IsAppRoot { get; set; }\n    return:\n      type: System.Boolean\n      description: A value that indicates whether the virtual directory should be treated as the application root.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory\n  id: PhysicalDirectory\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: PhysicalDirectory\n  nameWithType: VirtualDirectoryMapping.PhysicalDirectory\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value that specifies the full server path of a Web application.\n  syntax:\n    content: public string PhysicalDirectory { get; set; }\n    return:\n      type: System.String\n      description: A value that indicates the full server path of a Web application.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The selected value is invalid or fails internal security validation.\n  platform:\n  - net462\n- uid: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory\n  id: VirtualDirectory\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  langs:\n  - csharp\n  name: VirtualDirectory\n  nameWithType: VirtualDirectoryMapping.VirtualDirectory\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets a value that specifies the virtual directory relative to the root of the Web server.\n  syntax:\n    content: public string VirtualDirectory { get; }\n    return:\n      type: System.String\n      description: A value that indicates the relative Web-application directory.\n  overload: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean)\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: VirtualDirectoryMapping(String,Boolean)\n  nameWithType: VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean)\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.Boolean,System.String)\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: VirtualDirectoryMapping(String,Boolean,String)\n  nameWithType: VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean,String)\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectoryMapping(String,Boolean,String)\n- uid: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: ConfigFileBaseName\n  nameWithType: VirtualDirectoryMapping.ConfigFileBaseName\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName\n- uid: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: IsAppRoot\n  nameWithType: VirtualDirectoryMapping.IsAppRoot\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot\n- uid: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: PhysicalDirectory\n  nameWithType: VirtualDirectoryMapping.PhysicalDirectory\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory\n- uid: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: VirtualDirectory\n  nameWithType: VirtualDirectoryMapping.VirtualDirectory\n  fullName: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory\n- uid: System.Web.Configuration.VirtualDirectoryMapping.#ctor*\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: VirtualDirectoryMapping\n  nameWithType: VirtualDirectoryMapping.VirtualDirectoryMapping\n- uid: System.Web.Configuration.VirtualDirectoryMapping.ConfigFileBaseName*\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: ConfigFileBaseName\n  nameWithType: VirtualDirectoryMapping.ConfigFileBaseName\n- uid: System.Web.Configuration.VirtualDirectoryMapping.IsAppRoot*\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: IsAppRoot\n  nameWithType: VirtualDirectoryMapping.IsAppRoot\n- uid: System.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory*\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: PhysicalDirectory\n  nameWithType: VirtualDirectoryMapping.PhysicalDirectory\n- uid: System.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory*\n  parent: System.Web.Configuration.VirtualDirectoryMapping\n  isExternal: false\n  name: VirtualDirectory\n  nameWithType: VirtualDirectoryMapping.VirtualDirectory\n"}