{"nodes":[{"pos":[509,830],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource.Updating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource.Deleting\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource.Inserting\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> events of the <bpt id=\"p4\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSource\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Web.UI.WebControls.SqlDataSource.Updating\"></xref>, <xref href=\"System.Web.UI.WebControls.SqlDataSource.Deleting\"></xref> and <xref href=\"System.Web.UI.WebControls.SqlDataSource.Inserting\"></xref> events of the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control."},{"pos":[843,3760],"content":"By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> events, you can perform any additional preprocessing required or cancel the database command entirely.       Because the SqlDataSourceCommandEventArgs class is derived from the <xref:System.ComponentModel.CancelEventArgs> class, you can cancel a pending <xref:System.Web.UI.WebControls.SqlDataSource> database command by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. You can examine and manipulate the <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection, and other command properties prior to running the command by accessing the <xref:System.Data.Common.DbCommand> object exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> property.       The SqlDataSourceCommandEventArgs class is used in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> methods to provide access to a <xref:System.Web.UI.WebControls.SqlDataSource> database command before it is run. The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation. The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control.      |Event|EventArgs|EventHandler|   |-----------|---------------|------------------|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.|SqlDataSourceCommandEventArgs|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By adding an event handler delegate to handle the &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;, or &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt; events, you can perform any additional preprocessing required or cancel the database command entirely.","pos":[0,326],"source":"By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> events, you can perform any additional preprocessing required or cancel the database command entirely."},{"content":"Because the SqlDataSourceCommandEventArgs class is derived from the &lt;xref:System.ComponentModel.CancelEventArgs&gt; class, you can cancel a pending &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; database command by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[333,631],"source":"       Because the SqlDataSourceCommandEventArgs class is derived from the <xref:System.ComponentModel.CancelEventArgs> class, you can cancel a pending <xref:System.Web.UI.WebControls.SqlDataSource> database command by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`."},{"content":"You can examine and manipulate the &lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;, &lt;xref:System.Data.Common.DbCommand.Parameters%2A&gt; collection, and other command properties prior to running the command by accessing the &lt;xref:System.Data.Common.DbCommand&gt; object exposed by the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A&gt; property.","pos":[632,997],"source":" You can examine and manipulate the <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection, and other command properties prior to running the command by accessing the <xref:System.Data.Common.DbCommand> object exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> property."},{"content":"The SqlDataSourceCommandEventArgs class is used in the &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;, and &lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt; methods to provide access to a &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; database command before it is run.","pos":[1004,1373],"source":"       The SqlDataSourceCommandEventArgs class is used in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> methods to provide access to a <xref:System.Web.UI.WebControls.SqlDataSource> database command before it is run."},{"content":"The &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control exposes many events that you can handle to work with the underlying data objects during the course of a data operation.","pos":[1374,1552],"source":" The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation."},{"content":"The following table lists the events and associated &lt;xref:System.EventArgs&gt; and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control.","pos":[1553,1816],"source":" The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control."},{"content":"|Event|EventArgs|EventHandler|   |-----------|---------------|------------------|   |&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt; occurs before the data is retrieved.|&lt;xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&gt;|&lt;xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler&gt;|   |&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt; occur before an insert, update, or delete operation is performed.|SqlDataSourceCommandEventArgs|&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler&gt;|   |&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt; occur after the data retrieval, insert, update, or delete operations completes.|&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;|&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler&gt;|","pos":[1822,2907],"source":"      |Event|EventArgs|EventHandler|   |-----------|---------------|------------------|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.|SqlDataSourceCommandEventArgs|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|"}]},{"pos":[5278,5440],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified database command object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> class, using the specified database command object."},{"pos":[5635,5904],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the cancelable &lt;xref:System.Web.UI.WebControls.SqlDataSource.Update<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert<ept id=\"p2\">*</ept>&gt;, or &lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete*&gt; command.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Common.DbCommand\"></xref> object that represents the cancelable <xref:System.Web.UI.WebControls.SqlDataSource.Update*>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert*>, or <xref:System.Web.UI.WebControls.SqlDataSource.Delete*> command."},{"pos":[6433,6467],"content":"Gets the pending database command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the pending database command.","pos":[0,34]}]},{"pos":[6479,7332],"content":"You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> before it is run by the <xref:System.Web.UI.WebControls.SqlDataSource> control. The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object directly. However, you can cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can handle the &lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;, or &lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt; event to examine and manipulate the properties of the &lt;xref:System.Data.Common.DbCommand&gt; before it is run by the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control.","pos":[0,362],"source":"You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> before it is run by the <xref:System.Web.UI.WebControls.SqlDataSource> control."},{"content":"The connection to the underlying data source is not yet open when the event handler delegate is called.","pos":[363,466]},{"content":"Therefore, you cannot cancel the database operation by calling the &lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt; method on the &lt;xref:System.Data.Common.DbCommand&gt; object directly.","pos":[467,646],"source":" Therefore, you cannot cancel the database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object directly."},{"content":"However, you can cancel the database operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[647,853],"source":" However, you can cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`."}]},{"pos":[10431,10536],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the pending database command.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Common.DbCommand\"></xref> object that represents the pending database command."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  id: SqlDataSourceCommandEventArgs\n  children:\n  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)\n  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command\n  langs:\n  - csharp\n  name: SqlDataSourceCommandEventArgs\n  nameWithType: SqlDataSourceCommandEventArgs\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.SqlDataSource.Updating\"></xref>, <xref href=\"System.Web.UI.WebControls.SqlDataSource.Deleting\"></xref> and <xref href=\"System.Web.UI.WebControls.SqlDataSource.Inserting\"></xref> events of the <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> control.\n  remarks: \"By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> events, you can perform any additional preprocessing required or cancel the database command entirely.  \\n  \\n Because the SqlDataSourceCommandEventArgs class is derived from the <xref:System.ComponentModel.CancelEventArgs> class, you can cancel a pending <xref:System.Web.UI.WebControls.SqlDataSource> database command by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. You can examine and manipulate the <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection, and other command properties prior to running the command by accessing the <xref:System.Data.Common.DbCommand> object exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> property.  \\n  \\n The SqlDataSourceCommandEventArgs class is used in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> methods to provide access to a <xref:System.Web.UI.WebControls.SqlDataSource> database command before it is run. The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation. The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \\n  \\n|Event|EventArgs|EventHandler|  \\n|-----------|---------------|------------------|  \\n|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  \\n|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.|SqlDataSourceCommandEventArgs|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  \\n|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|\"\n  example:\n  - \"The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \\n  \\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_15_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_15_1.aspx)]\"\n  syntax:\n    content: 'public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)\n  id: '#ctor(System.Data.Common.DbCommand)'\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  langs:\n  - csharp\n  name: SqlDataSourceCommandEventArgs(DbCommand)\n  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\"></xref> class, using the specified database command object.\n  syntax:\n    content: public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);\n    parameters:\n    - id: command\n      type: System.Data.Common.DbCommand\n      description: An <xref href=\"System.Data.Common.DbCommand\"></xref> object that represents the cancelable <xref:System.Web.UI.WebControls.SqlDataSource.Update*>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert*>, or <xref:System.Web.UI.WebControls.SqlDataSource.Delete*> command.\n  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command\n  id: Command\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  langs:\n  - csharp\n  name: Command\n  nameWithType: SqlDataSourceCommandEventArgs.Command\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the pending database command.\n  remarks: You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> before it is run by the <xref:System.Web.UI.WebControls.SqlDataSource> control. The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object directly. However, you can cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.\n  example:\n  - \"The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \\n  \\n The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \\n  \\n If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records, and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.  \\n  \\n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1040_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1040_1.aspx)]\"\n  syntax:\n    content: public System.Data.Common.DbCommand Command { get; }\n    return:\n      type: System.Data.Common.DbCommand\n      description: An <xref href=\"System.Data.Common.DbCommand\"></xref> object that represents the pending database command.\n  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: System.ComponentModel.CancelEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  isExternal: false\n  name: SqlDataSourceCommandEventArgs(DbCommand)\n  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  isExternal: false\n  name: Command\n  nameWithType: SqlDataSourceCommandEventArgs.Command\n  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  isExternal: false\n  name: SqlDataSourceCommandEventArgs\n  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs\n- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*\n  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs\n  isExternal: false\n  name: Command\n  nameWithType: SqlDataSourceCommandEventArgs.Command\n"}