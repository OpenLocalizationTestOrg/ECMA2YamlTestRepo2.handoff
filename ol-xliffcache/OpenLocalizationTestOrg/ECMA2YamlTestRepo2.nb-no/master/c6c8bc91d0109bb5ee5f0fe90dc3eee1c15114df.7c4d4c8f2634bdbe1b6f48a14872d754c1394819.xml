{"nodes":[{"pos":[480,609],"content":"Converts a control on the Web Forms page that can be validated with a validation control to a string containing the control's ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a control on the Web Forms page that can be validated with a validation control to a string containing the control's ID.","pos":[0,129]}]},{"pos":[622,1831],"content":"Not all controls can be validated with a validation control. This class creates a collection of control IDs on the Web Forms page that can be associated with a validation control. This collection is commonly used in a designer to display a list of controls on the Web Forms page that can be associated with a validation control.       When creating your own validation control, you can enable the designer to display a list of controls that support validation controls. Simply add an attribute to the string property that represents the control to validate, as follows:      ```vb#   <TypeConverter(GetType(ValidatedControlConverter))> _    Public Property ControlToValidate() As String       Get              // Add code to get the ID of the control to validate.       End Get       Set          // Add code to set the ID of the control to validate.       End Set    End Property   ```      ```c#   [TypeConverter(typeof(ValidatedControlConverter))]    public string ControlToValidate    {       get        {          // Add code to get the ID of the control to validate.       }       set       {          // Add code to set the ID of the control to validate.       }    }   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Not all controls can be validated with a validation control.","pos":[0,60]},{"content":"This class creates a collection of control IDs on the Web Forms page that can be associated with a validation control.","pos":[61,179]},{"content":"This collection is commonly used in a designer to display a list of controls on the Web Forms page that can be associated with a validation control.","pos":[180,328]},{"content":"When creating your own validation control, you can enable the designer to display a list of controls that support validation controls.","pos":[335,469]},{"content":"Simply add an attribute to the string property that represents the control to validate, as follows:      <ph id=\"ph1\">```vb#   &lt;TypeConverter(GetType(ValidatedControlConverter))&gt; _    Public Property ControlToValidate() As String       Get              // Add code to get the ID of the control to validate.       End Get       Set          // Add code to set the ID of the control to validate.       End Set    End Property   ```</ph>      <ph id=\"ph2\">```c#   [TypeConverter(typeof(ValidatedControlConverter))]    public string ControlToValidate    {       get        {          // Add code to get the ID of the control to validate.       }       set       {          // Add code to set the ID of the control to validate.       }    }   ```</ph>","pos":[470,1180],"source":" Simply add an attribute to the string property that represents the control to validate, as follows:      ```vb#   <TypeConverter(GetType(ValidatedControlConverter))> _    Public Property ControlToValidate() As String       Get              // Add code to get the ID of the control to validate.       End Get       Set          // Add code to set the ID of the control to validate.       End Set    End Property   ```      ```c#   [TypeConverter(typeof(ValidatedControlConverter))]    public string ControlToValidate    {       get        {          // Add code to get the ID of the control to validate.       }       set       {          // Add code to set the ID of the control to validate.       }    }   ```"}]},{"pos":[6422,6535],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidatedControlConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ValidatedControlConverter\"></xref> class."},{"pos":[7224,7343],"content":"Returns a value indicating whether the specified control should be added to the list of controls that can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the specified control should be added to the list of controls that can be validated.","pos":[0,119]}]},{"pos":[7355,7710],"content":"When the FilterControl method returns <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.ValidatedControlConverter&gt; instance will add the ID of the control specified in the control parameter to the &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned by the &lt;xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues%2A&gt; method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When the FilterControl method returns `true`, the <xref:System.Web.UI.WebControls.ValidatedControlConverter> instance will add the ID of the control specified in the control parameter to the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned by the <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues%2A> method."},{"pos":[7892,7913],"content":"The control to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to check.","pos":[0,21]}]},{"pos":[7972,8185],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control should be added to the list of controls that can be validated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control should be added to the list of controls that can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.ValidatedControlConverter\n  id: ValidatedControlConverter\n  children:\n  - System.Web.UI.WebControls.ValidatedControlConverter.#ctor\n  - System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(System.Web.UI.Control)\n  langs:\n  - csharp\n  name: ValidatedControlConverter\n  nameWithType: ValidatedControlConverter\n  fullName: System.Web.UI.WebControls.ValidatedControlConverter\n  type: Class\n  summary: Converts a control on the Web Forms page that can be validated with a validation control to a string containing the control's ID.\n  remarks: \"Not all controls can be validated with a validation control. This class creates a collection of control IDs on the Web Forms page that can be associated with a validation control. This collection is commonly used in a designer to display a list of controls on the Web Forms page that can be associated with a validation control.  \\n  \\n When creating your own validation control, you can enable the designer to display a list of controls that support validation controls. Simply add an attribute to the string property that represents the control to validate, as follows:  \\n  \\n```vb#  \\n<TypeConverter(GetType(ValidatedControlConverter))> _  \\n Public Property ControlToValidate() As String  \\n    Get      \\n       // Add code to get the ID of the control to validate.  \\n    End Get  \\n    Set  \\n       // Add code to set the ID of the control to validate.  \\n    End Set  \\n End Property  \\n```  \\n  \\n```c#  \\n[TypeConverter(typeof(ValidatedControlConverter))]  \\n public string ControlToValidate  \\n {  \\n    get   \\n    {  \\n       // Add code to get the ID of the control to validate.  \\n    }  \\n    set  \\n    {  \\n       // Add code to set the ID of the control to validate.  \\n    }  \\n }  \\n```\"\n  syntax:\n    content: 'public class ValidatedControlConverter : System.Web.UI.WebControls.ControlIDConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.ComponentModel.StringConverter\n  - System.Web.UI.WebControls.ControlIDConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  langs:\n  - csharp\n  name: ValidatedControlConverter()\n  nameWithType: ValidatedControlConverter.ValidatedControlConverter()\n  fullName: System.Web.UI.WebControls.ValidatedControlConverter.ValidatedControlConverter()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ValidatedControlConverter\"></xref> class.\n  syntax:\n    content: public ValidatedControlConverter ();\n    parameters: []\n  overload: System.Web.UI.WebControls.ValidatedControlConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(System.Web.UI.Control)\n  id: FilterControl(System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  langs:\n  - csharp\n  name: FilterControl(Control)\n  nameWithType: ValidatedControlConverter.FilterControl(Control)\n  fullName: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns a value indicating whether the specified control should be added to the list of controls that can be validated.\n  remarks: When the FilterControl method returns `true`, the <xref:System.Web.UI.WebControls.ValidatedControlConverter> instance will add the ID of the control specified in the control parameter to the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned by the <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues%2A> method.\n  syntax:\n    content: protected override bool FilterControl (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control should be added to the list of controls that can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.ControlIDConverter\n  isExternal: false\n  name: System.Web.UI.WebControls.ControlIDConverter\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.#ctor\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  isExternal: false\n  name: ValidatedControlConverter()\n  nameWithType: ValidatedControlConverter.ValidatedControlConverter()\n  fullName: System.Web.UI.WebControls.ValidatedControlConverter.ValidatedControlConverter()\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  isExternal: false\n  name: FilterControl(Control)\n  nameWithType: ValidatedControlConverter.FilterControl(Control)\n  fullName: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(Control)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.#ctor*\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  isExternal: false\n  name: ValidatedControlConverter\n  nameWithType: ValidatedControlConverter.ValidatedControlConverter\n- uid: System.Web.UI.WebControls.ValidatedControlConverter.FilterControl*\n  parent: System.Web.UI.WebControls.ValidatedControlConverter\n  isExternal: false\n  name: FilterControl\n  nameWithType: ValidatedControlConverter.FilterControl\n"}