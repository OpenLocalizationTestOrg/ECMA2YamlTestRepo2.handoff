{"nodes":[{"pos":[334,547],"content":"Represents the method that handles the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Represents the method that handles the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> object."},{"pos":[560,1653],"content":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method just before adding a control to a Web Parts zone. This event provides an opportunity to cancel the process before it is complete. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event is called after a control has been added to a Web Parts zone.       The method specified in the WebPartAddingEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised.       Page developers can provide custom handlers for the event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&gt; event is raised by the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A&gt; method just before adding a control to a Web Parts zone.","pos":[0,230],"source":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method just before adding a control to a Web Parts zone."},{"content":"This event provides an opportunity to cancel the process before it is complete.","pos":[231,310]},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&gt; event is called after a control has been added to a Web Parts zone.","pos":[311,452],"source":" The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event is called after a control has been added to a Web Parts zone."},{"content":"The method specified in the WebPartAddingEventHandler delegate is called when a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&gt; event is raised.","pos":[459,626],"source":"       The method specified in the WebPartAddingEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised."},{"content":"Page developers can provide custom handlers for the event by adding the <ph id=\"ph1\">`OnWebPartAdding`</ph> attribute to the <ph id=\"ph2\">`&lt;asp:webpartmanager&gt;`</ph> element in a page, and assigning a custom method name to the attribute.","pos":[633,834],"source":"       Page developers can provide custom handlers for the event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute."},{"content":"A custom handler can also be assigned programmatically.","pos":[835,890]},{"content":"For more information on programmatically assigning an event handler, see <bpt id=\"p1\">[</bpt>NIB: How to: Connect Event Handler Methods to Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)</ept>.","pos":[891,1089],"source":" For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler\n  id: WebPartAddingEventHandler\n  langs:\n  - csharp\n  name: WebPartAddingEventHandler\n  nameWithType: WebPartAddingEventHandler\n  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler\n  type: Delegate\n  summary: Represents the method that handles the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> object.\n  remarks: \"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method just before adding a control to a Web Parts zone. This event provides an opportunity to cancel the process before it is complete. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event is called after a control has been added to a Web Parts zone.  \\n  \\n The method specified in the WebPartAddingEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised.  \\n  \\n Page developers can provide custom handlers for the event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).\"\n  syntax:\n    content: public delegate void WebPartAddingEventHandler(object sender, WebPartAddingEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}