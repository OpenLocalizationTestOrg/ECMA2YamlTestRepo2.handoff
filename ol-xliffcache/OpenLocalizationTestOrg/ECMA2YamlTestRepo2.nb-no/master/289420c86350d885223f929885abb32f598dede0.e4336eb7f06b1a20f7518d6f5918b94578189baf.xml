{"nodes":[{"pos":[415,491],"content":"Enables serialization of custom exception data in security-transparent code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables serialization of custom exception data in security-transparent code.","pos":[0,76]}]},{"pos":[504,1235],"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the ISafeSerializationData interface and add custom data as shown in the example below.       The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the ISafeSerializationData interface and add custom data as shown in the example below.       The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.","pos":[0,729],"nodes":[{"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the &lt;xref:System.Exception.GetObjectData%2A&gt; method.","pos":[0,183],"source":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method."},{"content":"Starting with .NET Framework 4.0, that method is marked with the &lt;xref:System.Security.SecurityCriticalAttribute&gt; attribute which prevents execution in security-transparent code.","pos":[184,362],"source":" Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code."},{"content":"To work around this condition, implement the ISafeSerializationData interface and add custom data as shown in the example below.","pos":[363,491]},{"content":"The &lt;xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A&gt; method is called after serialization, and uses the &lt;xref:System.Runtime.Serialization.SafeSerializationEventArgs&gt; to restore the custom data.","pos":[498,729],"source":"       The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data."}]}]},{"pos":[2232,2288],"content":"This method is called when the instance is deserialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called when the instance is deserialized.","pos":[0,56]}]},{"pos":[2300,2451],"content":"The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The state object is stored in a private variable defined in the implementation of the &lt;xref:System.Runtime.Serialization.ISafeSerializationData&gt; class.","pos":[0,151],"source":"The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class."}]},{"pos":[2920,2970],"content":"An object that contains the state of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the state of the instance.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.ISafeSerializationData\n  id: ISafeSerializationData\n  children:\n  - System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  langs:\n  - csharp\n  name: ISafeSerializationData\n  nameWithType: ISafeSerializationData\n  fullName: System.Runtime.Serialization.ISafeSerializationData\n  type: Interface\n  summary: Enables serialization of custom exception data in security-transparent code.\n  remarks: \"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the ISafeSerializationData interface and add custom data as shown in the example below.  \\n  \\n The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.\"\n  example:\n  - \"The following example contains an implementation of the ISafeSerializationData interface that is used to store custom data that is serialized.  \\n  \\n [!code-vb[ISafeSerializationData#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_2_1.vb)]\\n [!code-cs[ISafeSerializationData#1](~/add/codesnippet/csharp/t-system.runtime.seriali_2_1.cs)]\"\n  syntax:\n    content: public interface ISafeSerializationData\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  id: CompleteDeserialization(System.Object)\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  langs:\n  - csharp\n  name: CompleteDeserialization(Object)\n  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)\n  fullName: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Serialization\n  summary: This method is called when the instance is deserialized.\n  remarks: The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class.\n  example:\n  - \"The following example restores the state of the exception after being deserialized.  \\n  \\n [!code-vb[ISafeSerializationData#2](~/add/codesnippet/visualbasic/6f34c893-b650-4b68-a165-_1.vb)]\\n [!code-cs[ISafeSerializationData#2](~/add/codesnippet/csharp/6f34c893-b650-4b68-a165-_1.cs)]\"\n  syntax:\n    content: public void CompleteDeserialization (object deserialized);\n    parameters:\n    - id: deserialized\n      type: System.Object\n      description: An object that contains the state of the instance.\n  overload: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  isExternal: false\n  name: CompleteDeserialization(Object)\n  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)\n  fullName: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  isExternal: false\n  name: CompleteDeserialization\n  nameWithType: ISafeSerializationData.CompleteDeserialization\n"}