{"nodes":[{"pos":[2227,2489],"content":"Provides a common base class for all site map data providers, and a way for developers to implement custom site map data providers that can be used with the ASP.NET site map infrastructure as persistent stores for <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Provides a common base class for all site map data providers, and a way for developers to implement custom site map data providers that can be used with the ASP.NET site map infrastructure as persistent stores for <xref href=\"System.Web.SiteMap\"></xref> objects."},{"pos":[2502,4995],"content":"The <xref:System.Web.StaticSiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes represent the default implementations of the abstract SiteMapProvider class. The <xref:System.Web.XmlSiteMapProvider> uses an XML file named Web.sitemap to store site map data. For more information on about the Web.sitemap file, see [ASP.NET Site Maps](~/add/includes/ajax-current-ext-md.md).       The SiteMapProvider class supports the concept of a site map provider hierarchy, by declaring the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties. A SiteMapProvider can be a child or parent of another provider. This enables scenarios where different content areas of a site are owned or implemented by different development groups that maintain their own site maps and site map providers.       All SiteMapProvider objects are configured in the Web.config files. Any site map providers that are declared in these configuration files are loaded at run time and are used to load and process site navigation data. The <xref:System.Web.SiteMap> object, which keeps track of all the providers that are available to it through its <xref:System.Web.SiteMap.Providers%2A> property collection, provides programmatic access to the navigation data that is managed by the providers. The following code example demonstrates the format that is used to declare a site map provider in a Web.config file.      ```   <siteMap defaultProvider=\"<name>\">     <providers>       <add         name=\"<friendly name>\"         type=\"<fully qualified class name>, <assembly name (optional)>\"          siteMapFile = \"<file name>\" />     </providers>   </siteMap>   ```       The site navigation data that is loaded by these providers is used by other components of the site map infrastructure, such as the <xref:System.Web.UI.WebControls.SiteMapPath> and <xref:System.Web.UI.WebControls.TreeView> controls, to display site map information for users.       If you implement your own site map provider, you can place the source file in the App_Code directory of your ASP.NET application, and then the assembly will be compiled automatically. You can also place your own site map provider in the Global Assembly Cache (GAC), and provide a fully-qualified reference to it in the Web.config file. For more information on compiler services, see [Working with Assemblies and the Global Assembly Cache](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.StaticSiteMapProvider&gt; and &lt;xref:System.Web.XmlSiteMapProvider&gt; classes represent the default implementations of the abstract SiteMapProvider class.","pos":[0,169],"source":"The <xref:System.Web.StaticSiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes represent the default implementations of the abstract SiteMapProvider class."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; uses an XML file named Web.sitemap to store site map data.","pos":[170,269],"source":" The <xref:System.Web.XmlSiteMapProvider> uses an XML file named Web.sitemap to store site map data."},{"content":"For more information on about the Web.sitemap file, see <bpt id=\"p1\">[</bpt>ASP.NET Site Maps<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[270,385],"source":" For more information on about the Web.sitemap file, see [ASP.NET Site Maps](~/add/includes/ajax-current-ext-md.md)."},{"content":"The SiteMapProvider class supports the concept of a site map provider hierarchy, by declaring the &lt;xref:System.Web.SiteMapProvider.RootProvider%2A&gt; and &lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt; properties.","pos":[392,607],"source":"       The SiteMapProvider class supports the concept of a site map provider hierarchy, by declaring the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties."},{"content":"A SiteMapProvider can be a child or parent of another provider.","pos":[608,671]},{"content":"This enables scenarios where different content areas of a site are owned or implemented by different development groups that maintain their own site maps and site map providers.","pos":[672,849]},{"content":"All SiteMapProvider objects are configured in the Web.config files.","pos":[856,923]},{"content":"Any site map providers that are declared in these configuration files are loaded at run time and are used to load and process site navigation data.","pos":[924,1071]},{"content":"The &lt;xref:System.Web.SiteMap&gt; object, which keeps track of all the providers that are available to it through its &lt;xref:System.Web.SiteMap.Providers%2A&gt; property collection, provides programmatic access to the navigation data that is managed by the providers.","pos":[1072,1331],"source":" The <xref:System.Web.SiteMap> object, which keeps track of all the providers that are available to it through its <xref:System.Web.SiteMap.Providers%2A> property collection, provides programmatic access to the navigation data that is managed by the providers."},{"content":"The following code example demonstrates the format that is used to declare a site map provider in a Web.config file.","pos":[1332,1448]},{"content":"<ph id=\"ph1\">```   &lt;siteMap defaultProvider=\"&lt;name&gt;\"&gt;     &lt;providers&gt;       &lt;add         name=\"&lt;friendly name&gt;\"         type=\"&lt;fully qualified class name&gt;, &lt;assembly name (optional)&gt;\"          siteMapFile = \"&lt;file name&gt;\" /&gt;     &lt;/providers&gt;   &lt;/siteMap&gt;   ```</ph>       The site navigation data that is loaded by these providers is used by other components of the site map infrastructure, such as the &lt;xref:System.Web.UI.WebControls.SiteMapPath&gt; and &lt;xref:System.Web.UI.WebControls.TreeView&gt; controls, to display site map information for users.","pos":[1454,1981],"source":"```   <siteMap defaultProvider=\"<name>\">     <providers>       <add         name=\"<friendly name>\"         type=\"<fully qualified class name>, <assembly name (optional)>\"          siteMapFile = \"<file name>\" />     </providers>   </siteMap>   ```       The site navigation data that is loaded by these providers is used by other components of the site map infrastructure, such as the <xref:System.Web.UI.WebControls.SiteMapPath> and <xref:System.Web.UI.WebControls.TreeView> controls, to display site map information for users."},{"content":"If you implement your own site map provider, you can place the source file in the App_Code directory of your ASP.NET application, and then the assembly will be compiled automatically.","pos":[1988,2171]},{"content":"You can also place your own site map provider in the Global Assembly Cache (GAC), and provide a fully-qualified reference to it in the Web.config file.","pos":[2172,2323]},{"content":"For more information on compiler services, see <bpt id=\"p1\">[</bpt>Working with Assemblies and the Global Assembly Cache<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2324,2466],"source":" For more information on compiler services, see [Working with Assemblies and the Global Assembly Cache](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[7053,7141],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.SiteMapProvider\"></xref> class."},{"pos":[7939,8064],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the node collection that is maintained by the site map provider.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Web.SiteMapNode\"></xref> object to the node collection that is maintained by the site map provider."},{"pos":[8076,8453],"content":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object to the node collection that is maintained by the site map provider. The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object to the node collection that is maintained by the site map provider. The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception.","pos":[0,377],"nodes":[{"content":"Classes deriving from the &lt;xref:System.Web.SiteMapProvider&gt; class can override the AddNode method and provide logic for adding a &lt;xref:System.Web.SiteMapNode&gt; object to the node collection that is maintained by the site map provider.","pos":[0,233],"source":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object to the node collection that is maintained by the site map provider."},{"content":"The default implementation of the &lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt; method throws a &lt;xref:System.NotImplementedException&gt; exception.","pos":[234,377],"source":" The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception."}]}]},{"pos":[8624,8729],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the node collection maintained by the provider.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the node collection maintained by the provider."},{"pos":[9282,9483],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the node collection that is maintained by the site map provider and specifies the parent <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Web.SiteMapNode\"></xref> object to the node collection that is maintained by the site map provider and specifies the parent <xref href=\"System.Web.SiteMapNode\"></xref> object."},{"pos":[9495,10330],"content":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object with a specified parent to the node collection that is maintained by the site map provider. For example, the <xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=fullName> method adds the <xref:System.Web.SiteMapNode> object that is specified by `node` to the <xref:System.Web.SiteMapNodeCollection> collection that is maintained by the <xref:System.Web.XmlSiteMapProvider> object and creates a parent/child relationship between the <xref:System.Web.SiteMapNode> object that is specified by `node` and `parentNode`. The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes deriving from the &lt;xref:System.Web.SiteMapProvider&gt; class can override the AddNode method and provide logic for adding a &lt;xref:System.Web.SiteMapNode&gt; object with a specified parent to the node collection that is maintained by the site map provider.","pos":[0,257],"source":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object with a specified parent to the node collection that is maintained by the site map provider."},{"content":"For example, the &lt;xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=fullName&gt; method adds the &lt;xref:System.Web.SiteMapNode&gt; object that is specified by <ph id=\"ph1\">`node`</ph> to the &lt;xref:System.Web.SiteMapNodeCollection&gt; collection that is maintained by the &lt;xref:System.Web.XmlSiteMapProvider&gt; object and creates a parent/child relationship between the &lt;xref:System.Web.SiteMapNode&gt; object that is specified by <ph id=\"ph2\">`node`</ph> and <ph id=\"ph3\">`parentNode`</ph>.","pos":[258,691],"source":" For example, the <xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=fullName> method adds the <xref:System.Web.SiteMapNode> object that is specified by `node` to the <xref:System.Web.SiteMapNodeCollection> collection that is maintained by the <xref:System.Web.XmlSiteMapProvider> object and creates a parent/child relationship between the <xref:System.Web.SiteMapNode> object that is specified by `node` and `parentNode`."},{"content":"The default implementation of the &lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt; method throws a &lt;xref:System.NotImplementedException&gt; exception.","pos":[692,835],"source":" The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception."}]},{"pos":[10536,10641],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the node collection maintained by the provider.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the node collection maintained by the provider."},{"pos":[10717,10794],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the parent of <ph id=\"ph1\">`node`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> that is the parent of `node`."},{"pos":[10963,10976],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[11317,11422],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the currently requested page.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the currently requested page."},{"pos":[11435,12182],"content":"The <xref:System.Web.SiteMapProvider.SiteMapResolve> event is raised before attempting to retrieve a <xref:System.Web.SiteMapNode> object, to enable event subscribers to return an instance of the <xref:System.Web.SiteMapNode> class. If there are no event subscribers, the <xref:System.Web.SiteMapProvider> class calls the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method using the current HTTP context to retrieve a <xref:System.Web.SiteMapNode> that represents the currently requested page.       If the currently requested page does not correspond with a <xref:System.Web.SiteMapNode>, `null` is returned. If security trimming is enabled and the user is not permitted to access the <xref:System.Web.SiteMapNode>, `null` is returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.SiteMapProvider.SiteMapResolve&gt; event is raised before attempting to retrieve a &lt;xref:System.Web.SiteMapNode&gt; object, to enable event subscribers to return an instance of the &lt;xref:System.Web.SiteMapNode&gt; class.","pos":[0,232],"source":"The <xref:System.Web.SiteMapProvider.SiteMapResolve> event is raised before attempting to retrieve a <xref:System.Web.SiteMapNode> object, to enable event subscribers to return an instance of the <xref:System.Web.SiteMapNode> class."},{"content":"If there are no event subscribers, the &lt;xref:System.Web.SiteMapProvider&gt; class calls the &lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt; method using the current HTTP context to retrieve a &lt;xref:System.Web.SiteMapNode&gt; that represents the currently requested page.","pos":[233,502],"source":" If there are no event subscribers, the <xref:System.Web.SiteMapProvider> class calls the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method using the current HTTP context to retrieve a <xref:System.Web.SiteMapNode> that represents the currently requested page."},{"content":"If the currently requested page does not correspond with a &lt;xref:System.Web.SiteMapNode&gt;, <ph id=\"ph1\">`null`</ph> is returned.","pos":[509,618],"source":"       If the currently requested page does not correspond with a <xref:System.Web.SiteMapNode>, `null` is returned."},{"content":"If security trimming is enabled and the user is not permitted to access the &lt;xref:System.Web.SiteMapNode&gt;, <ph id=\"ph1\">`null`</ph> is returned.","pos":[619,745],"source":" If security trimming is enabled and the user is not permitted to access the <xref:System.Web.SiteMapNode>, `null` is returned."}]},{"pos":[12881,13153],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the currently requested page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the <bpt id=\"p3\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is not found or cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user."},{"pos":[13598,13734],"content":"Gets or sets a Boolean value indicating whether localized values of <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attributes are returned.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value indicating whether localized values of <xref href=\"System.Web.SiteMapNode\"></xref> attributes are returned."},{"pos":[13746,14033],"content":"The EnableLocalization property is used for the get accessor of the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as additional <xref:System.Web.SiteMapNode.Attributes%2A> properties of a <xref:System.Web.SiteMapNode> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EnableLocalization property is used for the get accessor of the &lt;xref:System.Web.SiteMapNode.Title%2A&gt; and &lt;xref:System.Web.SiteMapNode.Description%2A&gt; properties, as well as additional &lt;xref:System.Web.SiteMapNode.Attributes%2A&gt; properties of a &lt;xref:System.Web.SiteMapNode&gt; object.","pos":[0,287],"source":"The EnableLocalization property is used for the get accessor of the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as additional <xref:System.Web.SiteMapNode.Attributes%2A> properties of a <xref:System.Web.SiteMapNode> object."}]},{"pos":[14160,14471],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a localized value of the <xref href=\"System.Web.SiteMapNode\"></xref> attributes are returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a localized value of the <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attributes are returned; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,232],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a localized value of the <xref href=\"System.Web.SiteMapNode\"></xref> attributes are returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[233,311],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14960,15105],"content":"When overridden in a derived class, retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the page at the specified URL.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the page at the specified URL."},{"pos":[15118,15961],"content":"Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract FindSiteMapNode method.       The URL provided can be a virtual or absolute URL. It might also be a URL that uses application-relative syntax, such as `~/apprelativedirectory`. Ensure that any implementation of the FindSiteMapNode method parse and handle application-relative syntax properly.       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain. Therefore, if a <xref:System.Web.SiteMapNode> provides a URL, it must be unique within the scope of the site map provider. If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes that derive from the &lt;xref:System.Web.SiteMapProvider&gt; class must implement the abstract FindSiteMapNode method.","pos":[0,120],"source":"Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract FindSiteMapNode method."},{"content":"The URL provided can be a virtual or absolute URL.","pos":[127,177]},{"content":"It might also be a URL that uses application-relative syntax, such as <ph id=\"ph1\">`~/apprelativedirectory`</ph>.","pos":[178,273],"source":" It might also be a URL that uses application-relative syntax, such as `~/apprelativedirectory`."},{"content":"Ensure that any implementation of the FindSiteMapNode method parse and handle application-relative syntax properly.","pos":[274,389]},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is the default site map provider for ASP.NET, uses the URL of a &lt;xref:System.Web.SiteMapNode&gt; object as a key in the various collections that the classes maintain.","pos":[396,613],"source":"       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain."},{"content":"Therefore, if a &lt;xref:System.Web.SiteMapNode&gt; provides a URL, it must be unique within the scope of the site map provider.","pos":[614,736],"source":" Therefore, if a <xref:System.Web.SiteMapNode> provides a URL, it must be unique within the scope of the site map provider."},{"content":"If no URL is provided, a unique identifier is generated to identify the &lt;xref:System.Web.SiteMapNode&gt;.","pos":[737,839],"source":" If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>."}]},{"pos":[17109,17208],"content":"A URL that identifies the page for which to retrieve a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A URL that identifies the page for which to retrieve a <xref href=\"System.Web.SiteMapNode\"></xref>."},{"pos":[17275,17654],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the page identified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">rawURL</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if no corresponding <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is found or if security trimming is enabled and the <bpt id=\"p5\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>rawURL</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> is found or if security trimming is enabled and the <xref href=\"System.Web.SiteMapNode\"></xref> cannot be returned for the current user."},{"pos":[18173,18352],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the currently requested page using the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the currently requested page using the specified <xref href=\"System.Web.HttpContext\"></xref> object."},{"pos":[18365,18888],"content":"The FindSiteMapNode method calls the abstract <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method to retrieve a <xref:System.Web.SiteMapNode> object for the currently requested page based on the raw URL or the virtual path of the request. If no corresponding <xref:System.Web.SiteMapNode> is found in the <xref:System.Web.SiteMap>, `null` is returned.       The <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method does not check whether a <xref:System.Web.SiteMapNode> is accessible to a user, by default.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FindSiteMapNode method calls the abstract &lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt; method to retrieve a &lt;xref:System.Web.SiteMapNode&gt; object for the currently requested page based on the raw URL or the virtual path of the request.","pos":[0,246],"source":"The FindSiteMapNode method calls the abstract <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method to retrieve a <xref:System.Web.SiteMapNode> object for the currently requested page based on the raw URL or the virtual path of the request."},{"content":"If no corresponding &lt;xref:System.Web.SiteMapNode&gt; is found in the &lt;xref:System.Web.SiteMap&gt;, <ph id=\"ph1\">`null`</ph> is returned.","pos":[247,359],"source":" If no corresponding <xref:System.Web.SiteMapNode> is found in the <xref:System.Web.SiteMap>, `null` is returned."},{"content":"The &lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt; method does not check whether a &lt;xref:System.Web.SiteMapNode&gt; is accessible to a user, by default.","pos":[366,521],"source":"       The <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method does not check whether a <xref:System.Web.SiteMapNode> is accessible to a user, by default."}]},{"pos":[19089,19203],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to match node information with the URL of the requested page.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpContext\"></xref> used to match node information with the URL of the requested page."},{"pos":[19270,19650],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the currently requested page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if no corresponding <bpt id=\"p3\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> can be found in the <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> or if the page context is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> can be found in the <xref href=\"System.Web.SiteMapNode\"></xref> or if the page context is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20171,20259],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based on a specified key.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object based on a specified key."},{"pos":[20272,21454],"content":"The <xref:System.Web.SiteMapProvider> implementation returns `null` in all cases. Classes that derive from the <xref:System.Web.SiteMapProvider> class can override the FindSiteMapNodeFromKey method to provide lookup functionality based on a unique key (instead of a URL, which is used by the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method). Implement the FindSiteMapNodeFromKey method if your site map provider implementation uses the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property of a <xref:System.Web.SiteMapNode> object as a primary identifier in a site map structure.       The <xref:System.Web.StaticSiteMapProvider> class provides an implementation that handles searching for site map nodes that do not define a URL.       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> as a key in the various collections that the classes maintain. Therefore, if a node provides a URL, it must be unique within the scope of the site map provider. If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.SiteMapProvider&gt; implementation returns <ph id=\"ph1\">`null`</ph> in all cases.","pos":[0,81],"source":"The <xref:System.Web.SiteMapProvider> implementation returns `null` in all cases."},{"content":"Classes that derive from the &lt;xref:System.Web.SiteMapProvider&gt; class can override the FindSiteMapNodeFromKey method to provide lookup functionality based on a unique key (instead of a URL, which is used by the &lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt; method).","pos":[82,353],"source":" Classes that derive from the <xref:System.Web.SiteMapProvider> class can override the FindSiteMapNodeFromKey method to provide lookup functionality based on a unique key (instead of a URL, which is used by the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method)."},{"content":"Implement the FindSiteMapNodeFromKey method if your site map provider implementation uses the &lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Web.SiteMapNode&gt; object as a primary identifier in a site map structure.","pos":[354,609],"source":" Implement the FindSiteMapNodeFromKey method if your site map provider implementation uses the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property of a <xref:System.Web.SiteMapNode> object as a primary identifier in a site map structure."},{"content":"The &lt;xref:System.Web.StaticSiteMapProvider&gt; class provides an implementation that handles searching for site map nodes that do not define a URL.","pos":[616,760],"source":"       The <xref:System.Web.StaticSiteMapProvider> class provides an implementation that handles searching for site map nodes that do not define a URL."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is the default site map provider for ASP.NET, uses the URL of a &lt;xref:System.Web.SiteMapNode&gt; as a key in the various collections that the classes maintain.","pos":[767,977],"source":"       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> as a key in the various collections that the classes maintain."},{"content":"Therefore, if a node provides a URL, it must be unique within the scope of the site map provider.","pos":[978,1075]},{"content":"If no URL is provided, a unique identifier is generated to identify the &lt;xref:System.Web.SiteMapNode&gt;.","pos":[1076,1178],"source":" If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>."}]},{"pos":[21629,21710],"content":"A lookup key with which a <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is created.","needQuote":true,"needEscape":true,"source":"A lookup key with which a <xref href=\"System.Web.SiteMapNode\"></xref> is created."},{"pos":[21777,22230],"content":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>key</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> is found or if security trimming is enabled and the <xref href=\"System.Web.SiteMapNode\"></xref> cannot be returned for the current user. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the page identified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if no corresponding <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is found or if security trimming is enabled and the <bpt id=\"p5\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> cannot be returned for the current user.","pos":[0,376],"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>key</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> is found or if security trimming is enabled and the <xref href=\"System.Web.SiteMapNode\"></xref> cannot be returned for the current user."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[377,453],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[22746,22866],"content":"When overridden in a derived class, retrieves the child nodes of a specific <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, retrieves the child nodes of a specific <xref href=\"System.Web.SiteMapNode\"></xref>."},{"pos":[22878,22996],"content":"Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract GetChildNodes method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes that derive from the &lt;xref:System.Web.SiteMapProvider&gt; class must implement the abstract GetChildNodes method.","pos":[0,118],"source":"Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract GetChildNodes method."}]},{"pos":[24046,24132],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to retrieve all child nodes.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve all child nodes."},{"pos":[24209,24497],"content":"A read-only <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the immediate child nodes of the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or an empty collection, if no child nodes exist.","needQuote":true,"needEscape":true,"source":"A read-only <xref href=\"System.Web.SiteMapNodeCollection\"></xref> that contains the immediate child nodes of the specified <xref href=\"System.Web.SiteMapNode\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty collection, if no child nodes exist."},{"pos":[25071,25261],"content":"Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.","pos":[0,190]}]},{"pos":[25274,26326],"content":"The default implementation of the GetCurrentNodeAndHintAncestorNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintAncestorNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode>, as well as the parent and ancestor nodes of the parent.       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve. If preferred, the parent and ancestor nodes can be linked to the <xref:System.Web.SiteMapNode> object that is returned by the GetCurrentNodeAndHintAncestorNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> property.       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of the GetCurrentNodeAndHintAncestorNodes method returns the &lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt; property; however, site map providers can override the GetCurrentNodeAndHintAncestorNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current &lt;xref:System.Web.SiteMapNode&gt;, as well as the parent and ancestor nodes of the parent.","pos":[0,418],"source":"The default implementation of the GetCurrentNodeAndHintAncestorNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintAncestorNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode>, as well as the parent and ancestor nodes of the parent."},{"content":"The <ph id=\"ph1\">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to retrieve.","pos":[425,525],"source":"       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve."},{"content":"If preferred, the parent and ancestor nodes can be linked to the &lt;xref:System.Web.SiteMapNode&gt; object that is returned by the GetCurrentNodeAndHintAncestorNodes method, using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; property.","pos":[526,758],"source":" If preferred, the parent and ancestor nodes can be linked to the <xref:System.Web.SiteMapNode> object that is returned by the GetCurrentNodeAndHintAncestorNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> property."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the &lt;xref:System.Web.XmlSiteMapProvider&gt; for specific &lt;xref:System.Web.SiteMapNode&gt; objects.","pos":[765,1048],"source":"       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects."}]},{"pos":[26517,26663],"content":"The number of ancestor site map node generations to get. A value of -1 indicates that all ancestors might be retrieved and cached by the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor site map node generations to get. A value of -1 indicates that all ancestors might be retrieved and cached by the provider.","pos":[0,146],"nodes":[{"content":"The number of ancestor site map node generations to get.","pos":[0,56]},{"content":"A value of -1 indicates that all ancestors might be retrieved and cached by the provider.","pos":[57,146]}]}]},{"pos":[26730,27002],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the currently requested page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the <bpt id=\"p3\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is not found or cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user."},{"pos":[27206,27243],"content":"<ph id=\"ph1\">&lt;code&gt;upLevel&lt;/code&gt;</ph> is less than -1.","needQuote":true,"needEscape":true,"source":"<code>upLevel</code> is less than -1."},{"pos":[27810,27996],"content":"Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.","pos":[0,186]}]},{"pos":[28009,29530],"content":"The default implementation of the GetCurrentNodeAndHintNeighborhoodNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintNeighborhoodNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode> object, as well as <xref:System.Web.SiteMapNode> objects that are in the proximity of the current <xref:System.Web.SiteMapNode>.       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve and cache, along with their immediate children. The `downLevel` parameter is used to specify how many levels of descendant nodes from the current <xref:System.Web.SiteMapNode> to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the       GetCurrentNodeAndHintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties. If there are fewer ancestor or child node levels than are specified by `upLevel` or `downLevel`, only those that are available are retrieved.       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of the GetCurrentNodeAndHintNeighborhoodNodes method returns the &lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt; property; however, site map providers can override the GetCurrentNodeAndHintNeighborhoodNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current &lt;xref:System.Web.SiteMapNode&gt; object, as well as &lt;xref:System.Web.SiteMapNode&gt; objects that are in the proximity of the current &lt;xref:System.Web.SiteMapNode&gt;.","pos":[0,498],"source":"The default implementation of the GetCurrentNodeAndHintNeighborhoodNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintNeighborhoodNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode> object, as well as <xref:System.Web.SiteMapNode> objects that are in the proximity of the current <xref:System.Web.SiteMapNode>."},{"content":"The <ph id=\"ph1\">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to retrieve and cache, along with their immediate children.","pos":[505,652],"source":"       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve and cache, along with their immediate children."},{"content":"The <ph id=\"ph1\">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the current &lt;xref:System.Web.SiteMapNode&gt; to retrieve.","pos":[653,793],"source":" The `downLevel` parameter is used to specify how many levels of descendant nodes from the current <xref:System.Web.SiteMapNode> to retrieve."},{"content":"If preferred, the ancestor and descendant nodes can be linked to the &lt;xref:System.Web.SiteMapNode&gt; that is returned by the       GetCurrentNodeAndHintNeighborhoodNodes method, using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; and &lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt; properties.","pos":[794,1083],"source":" If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the       GetCurrentNodeAndHintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties."},{"content":"If there are fewer ancestor or child node levels than are specified by <ph id=\"ph1\">`upLevel`</ph> or <ph id=\"ph2\">`downLevel`</ph>, only those that are available are retrieved.","pos":[1084,1225],"source":" If there are fewer ancestor or child node levels than are specified by `upLevel` or `downLevel`, only those that are available are retrieved."},{"content":"The &lt;xref:System.Web.XmlSiteMapProvider&gt; class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the &lt;xref:System.Web.XmlSiteMapProvider&gt; for specific &lt;xref:System.Web.SiteMapNode&gt; objects.","pos":[1232,1515],"source":"       The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects."}]},{"pos":[29740,29955],"content":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> generations to fetch.","pos":[0,88],"source":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch."},{"content":"0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.","pos":[89,215]}]},{"pos":[30020,30243],"content":"The number of child <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of child <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> generations to fetch.","pos":[0,85],"source":"The number of child <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch."},{"content":"0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.","pos":[86,223]}]},{"pos":[30310,30582],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the currently requested page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the <bpt id=\"p3\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is not found or cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user."},{"pos":[30790,30853],"content":"<ph id=\"ph1\">&lt;code&gt;upLevel&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;downLevel&lt;/code&gt;</ph> is less than -1.","needQuote":true,"needEscape":true,"source":"<code>upLevel</code> or <code>downLevel</code> is less than -1."},{"pos":[31289,31416],"content":"When overridden in a derived class, retrieves the parent node of a specific <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, retrieves the parent node of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object."},{"pos":[32404,32490],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to retrieve the parent node.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve the parent node."},{"pos":[32558,33198],"content":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the parent of <code>node</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> has no parent or security trimming is enabled and the parent node is not accessible to the current user.       <div class=\"alert NOTE\">    GetParentNode might also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the parent node belongs to a different provider. In this case, use the <xref:System.Web.SiteMapNode.ParentNode*> property of <code>node</code> instead.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the parent of <code>node</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> has no parent or security trimming is enabled and the parent node is not accessible to the current user.       ","pos":[0,330],"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">node</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if the <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> has no parent or security trimming is enabled and the parent node is not accessible to the current user.","pos":[0,323],"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the parent of <code>node</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> has no parent or security trimming is enabled and the parent node is not accessible to the current user."}]},{"content":"    GetParentNode might also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the parent node belongs to a different provider. In this case, use the <xref:System.Web.SiteMapNode.ParentNode*> property of <code>node</code> instead.      ","pos":[354,611],"nodes":[{"content":"GetParentNode might also return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the parent node belongs to a different provider.","pos":[4,148],"source":"    GetParentNode might also return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the parent node belongs to a different provider."},{"content":"In this case, use the &lt;xref:System.Web.SiteMapNode.ParentNode*&gt; property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">node</ph><ept id=\"p1\">&lt;/code&gt;</ept> instead.","pos":[149,251],"source":" In this case, use the <xref:System.Web.SiteMapNode.ParentNode*> property of <code>node</code> instead."}]}]},{"pos":[33922,34098],"content":"Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.","pos":[0,176]}]},{"pos":[34111,35380],"content":"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects.       The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node. If fewer levels exist than are requested, `null` is returned. The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of the &lt;xref:System.Web.SiteMapProvider&gt; class provides a non-optimized implementation of the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, calling the &lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A&gt; and &lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt; methods; however, site map providers can override the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other &lt;xref:System.Web.SiteMapNode&gt; objects.","pos":[0,636],"source":"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects."},{"content":"The <ph id=\"ph1\">`walkupLevels`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node.","pos":[643,780],"source":"       The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node."},{"content":"If fewer levels exist than are requested, <ph id=\"ph1\">`null`</ph> is returned.","pos":[781,842],"source":" If fewer levels exist than are requested, `null` is returned."},{"content":"The <ph id=\"ph1\">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve.","pos":[843,966],"source":" The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve."},{"content":"If preferred, the ancestor and descendant nodes can be linked to the &lt;xref:System.Web.SiteMapNode&gt; that is returned by the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; and &lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt; properties.","pos":[967,1267],"source":" If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties."}]},{"pos":[35631,35722],"content":"The number of ancestor node levels to traverse when retrieving the requested ancestor node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor node levels to traverse when retrieving the requested ancestor node.","pos":[0,91]}]},{"pos":[35801,35880],"content":"The number of descendant node levels to retrieve from the target ancestor node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of descendant node levels to retrieve from the target ancestor node.","pos":[0,79]}]},{"pos":[35947,36298],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents an ancestor <bpt id=\"p2\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of the currently requested page; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if the current or ancestor <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is not found or cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents an ancestor <xref href=\"System.Web.SiteMapNode\"></xref> of the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current or ancestor <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user."},{"pos":[36523,36604],"content":"<ph id=\"ph1\">&lt;code&gt;walkupLevels&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;relativeDepthFromWalkup&lt;/code&gt;</ph> is less than 0.","needQuote":true,"needEscape":true,"source":"<code>walkupLevels</code> or <code>relativeDepthFromWalkup</code> is less than 0."},{"pos":[37303,37493],"content":"Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and fetching its child nodes.","needQuote":true,"needEscape":true,"source":"Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <xref href=\"System.Web.SiteMapNode\"></xref> object and fetching its child nodes."},{"pos":[37506,39225],"content":"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.HintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects.  The GetParentNodeRelativeToNodeAndHintDownFromParent method is very similar to the <xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A> method.       The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node. If fewer levels exist than are requested, `null` is returned. The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties. If there are fewer ancestor node levels than specified by the `upLevel` parameter, `null` is returned.  It is up to the provider implementer to decide how to handle the situation where the number of available descendant node levels is less than the value that is specified by the `downLevel` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of the &lt;xref:System.Web.SiteMapProvider&gt; class provides a non-optimized implementation of the GetParentNodeRelativeToNodeAndHintDownFromParent method, calling the &lt;xref:System.Web.SiteMapProvider.HintAncestorNodes%2A&gt; and &lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt; methods; however, site map providers can override the GetParentNodeRelativeToNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other &lt;xref:System.Web.SiteMapNode&gt; objects.","pos":[0,605],"source":"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.HintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects."},{"content":"The GetParentNodeRelativeToNodeAndHintDownFromParent method is very similar to the &lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A&gt; method.","pos":[607,790],"source":"  The GetParentNodeRelativeToNodeAndHintDownFromParent method is very similar to the <xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A> method."},{"content":"The <ph id=\"ph1\">`walkupLevels`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node.","pos":[797,934],"source":"       The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node."},{"content":"If fewer levels exist than are requested, <ph id=\"ph1\">`null`</ph> is returned.","pos":[935,996],"source":" If fewer levels exist than are requested, `null` is returned."},{"content":"The <ph id=\"ph1\">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve.","pos":[997,1120],"source":" The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve."},{"content":"If preferred, the ancestor and descendant nodes can be linked to the &lt;xref:System.Web.SiteMapNode&gt; that is returned by the GetParentNodeRelativeToNodeAndHintDownFromParent method, using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; and &lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt; properties.","pos":[1121,1414],"source":" If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties."},{"content":"If there are fewer ancestor node levels than specified by the <ph id=\"ph1\">`upLevel`</ph> parameter, <ph id=\"ph2\">`null`</ph> is returned.","pos":[1415,1517],"source":" If there are fewer ancestor node levels than specified by the `upLevel` parameter, `null` is returned."},{"content":"It is up to the provider implementer to decide how to handle the situation where the number of available descendant node levels is less than the value that is specified by the <ph id=\"ph1\">`downLevel`</ph> parameter.","pos":[1519,1717],"source":"  It is up to the provider implementer to decide how to handle the situation where the number of available descendant node levels is less than the value that is specified by the `downLevel` parameter."}]},{"pos":[39500,39628],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that acts as a reference point for <ph id=\"ph1\">`walkupLevels`</ph> and <ph id=\"ph2\">`relativeDepthFromWalkup`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `walkupLevels` and `relativeDepthFromWalkup`."},{"pos":[39696,39787],"content":"The number of ancestor node levels to traverse when retrieving the requested ancestor node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor node levels to traverse when retrieving the requested ancestor node.","pos":[0,91]}]},{"pos":[39866,39945],"content":"The number of descendant node levels to retrieve from the target ancestor node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of descendant node levels to retrieve from the target ancestor node.","pos":[0,79]}]},{"pos":[40012,40308],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents an ancestor of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">node</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if the current or ancestor <bpt id=\"p4\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is not found or cannot be returned for the current user.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents an ancestor of <code>node</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current or ancestor <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user."},{"pos":[40526,40631],"content":"The value specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">walkupLevels</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relativeDepthFromWalkup</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than 0.","needQuote":true,"needEscape":true,"source":"The value specified for <code>walkupLevels</code> or <code>relativeDepthFromWalkup</code> is less than 0."},{"pos":[40734,40816],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[41181,41309],"content":"When overridden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.","pos":[0,128]}]},{"pos":[41321,41620],"content":"The GetRootNodeCore method enables a parent provider in a provider hierarchy to obtain a <xref:System.Web.SiteMapNode> object that acts as a frame of reference for building the provider hierarchy and the larger site map node hierarchy that is the sum of the site map data that each provider manages.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetRootNodeCore method enables a parent provider in a provider hierarchy to obtain a &lt;xref:System.Web.SiteMapNode&gt; object that acts as a frame of reference for building the provider hierarchy and the larger site map node hierarchy that is the sum of the site map data that each provider manages.","pos":[0,299],"source":"The GetRootNodeCore method enables a parent provider in a provider hierarchy to obtain a <xref:System.Web.SiteMapNode> object that acts as a frame of reference for building the provider hierarchy and the larger site map node hierarchy that is the sum of the site map data that each provider manages."}]},{"pos":[42065,42195],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root node of the set of nodes that the current provider manages.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the root node of the set of nodes that the current provider manages."},{"pos":[42794,42897],"content":"Retrieves the root node of all the nodes that are currently managed by the specified site map provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the root node of all the nodes that are currently managed by the specified site map provider.","pos":[0,103]}]},{"pos":[42909,43043],"content":"The default implementation calls the abstract &lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt; method on the specified <ph id=\"ph1\">`provider`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The default implementation calls the abstract <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A> method on the specified `provider`."},{"pos":[43267,43346],"content":"The provider that calls the <xref:System.Web.SiteMapProvider.GetRootNodeCore*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider that calls the &lt;xref:System.Web.SiteMapProvider.GetRootNodeCore*&gt;.","pos":[0,79],"source":"The provider that calls the <xref:System.Web.SiteMapProvider.GetRootNodeCore*>."}]},{"pos":[43413,43550],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root node of the set of nodes that is managed by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the root node of the set of nodes that is managed by <code>provider</code>."},{"pos":[44135,44353],"content":"Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <xref href=\"System.Web.SiteMapNode\"></xref> object."},{"pos":[44366,45249],"content":"The default HintAncestorNodes method only checks for an `upLevel` parameter that is less than -1 and a `node` parameter that is `null`. Because the <xref:System.Web.XmlSiteMapProvider> class caches site map information in memory, the HintAncestorNodes method is not used.       Site map providers can override the HintAncestorNodes method to perform an optimized retrieval of parent and ancestor nodes of the specified <xref:System.Web.SiteMapNode> object.       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>. If fewer levels exist than are requested, all available ancestor nodes are returned within the specified bound. If preferred, the parent node can be linked to the specified <xref:System.Web.SiteMapNode> using the <xref:System.Web.SiteMapNode.ParentNode%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default HintAncestorNodes method only checks for an <ph id=\"ph1\">`upLevel`</ph> parameter that is less than -1 and a <ph id=\"ph2\">`node`</ph> parameter that is <ph id=\"ph3\">`null`</ph>.","pos":[0,135],"source":"The default HintAncestorNodes method only checks for an `upLevel` parameter that is less than -1 and a `node` parameter that is `null`."},{"content":"Because the &lt;xref:System.Web.XmlSiteMapProvider&gt; class caches site map information in memory, the HintAncestorNodes method is not used.","pos":[136,271],"source":" Because the <xref:System.Web.XmlSiteMapProvider> class caches site map information in memory, the HintAncestorNodes method is not used."},{"content":"Site map providers can override the HintAncestorNodes method to perform an optimized retrieval of parent and ancestor nodes of the specified &lt;xref:System.Web.SiteMapNode&gt; object.","pos":[278,456],"source":"       Site map providers can override the HintAncestorNodes method to perform an optimized retrieval of parent and ancestor nodes of the specified <xref:System.Web.SiteMapNode> object."},{"content":"The <ph id=\"ph1\">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified &lt;xref:System.Web.SiteMapNode&gt;.","pos":[463,612],"source":"       The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>."},{"content":"If fewer levels exist than are requested, all available ancestor nodes are returned within the specified bound.","pos":[613,724]},{"content":"If preferred, the parent node can be linked to the specified &lt;xref:System.Web.SiteMapNode&gt; using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; property.","pos":[725,879],"source":" If preferred, the parent node can be linked to the specified <xref:System.Web.SiteMapNode> using the <xref:System.Web.SiteMapNode.ParentNode%2A> property."}]},{"pos":[45441,45534],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that acts as a reference point for <ph id=\"ph1\">`upLevel`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `upLevel`."},{"pos":[45597,45796],"content":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> generations to fetch.","pos":[0,88],"source":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch."},{"content":"0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.","pos":[89,199]}]},{"pos":[45983,46020],"content":"<ph id=\"ph1\">&lt;code&gt;upLevel&lt;/code&gt;</ph> is less than -1.","needQuote":true,"needEscape":true,"source":"<code>upLevel</code> is less than -1."},{"pos":[46123,46205],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[46769,46912],"content":"Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node.","pos":[0,143]}]},{"pos":[46925,47965],"content":"The default HintNeighborhoodNodes method only checks for an `upLevel` and `downLevel` parameters that are less than -1 and a `node` parameter that is `null`. Because the <xref:System.Web.XmlSiteMapProvider> object caches site map information in memory, the HintNeighborhoodNodes method is not used.       Site map providers can override the HintNeighborhoodNodes method to perform an optimized lookup of the <xref:System.Web.SiteMapNode> objects in the proximity of the specified <xref:System.Web.SiteMapNode>. The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>. The `downLevel` parameter is used to specify how many levels of child nodes from the current node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the HintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default HintNeighborhoodNodes method only checks for an <ph id=\"ph1\">`upLevel`</ph> and <ph id=\"ph2\">`downLevel`</ph> parameters that are less than -1 and a <ph id=\"ph3\">`node`</ph> parameter that is <ph id=\"ph4\">`null`</ph>.","pos":[0,157],"source":"The default HintNeighborhoodNodes method only checks for an `upLevel` and `downLevel` parameters that are less than -1 and a `node` parameter that is `null`."},{"content":"Because the &lt;xref:System.Web.XmlSiteMapProvider&gt; object caches site map information in memory, the HintNeighborhoodNodes method is not used.","pos":[158,298],"source":" Because the <xref:System.Web.XmlSiteMapProvider> object caches site map information in memory, the HintNeighborhoodNodes method is not used."},{"content":"Site map providers can override the HintNeighborhoodNodes method to perform an optimized lookup of the &lt;xref:System.Web.SiteMapNode&gt; objects in the proximity of the specified &lt;xref:System.Web.SiteMapNode&gt;.","pos":[305,510],"source":"       Site map providers can override the HintNeighborhoodNodes method to perform an optimized lookup of the <xref:System.Web.SiteMapNode> objects in the proximity of the specified <xref:System.Web.SiteMapNode>."},{"content":"The <ph id=\"ph1\">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified &lt;xref:System.Web.SiteMapNode&gt;.","pos":[511,660],"source":" The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>."},{"content":"The <ph id=\"ph1\">`downLevel`</ph> parameter is used to specify how many levels of child nodes from the current node to retrieve.","pos":[661,771],"source":" The `downLevel` parameter is used to specify how many levels of child nodes from the current node to retrieve."},{"content":"If preferred, the ancestor and descendant nodes can be linked to the &lt;xref:System.Web.SiteMapNode&gt; that is returned by the HintNeighborhoodNodes method, using the &lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt; and &lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt; properties.","pos":[772,1038],"source":" If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the HintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties."}]},{"pos":[48176,48269],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that acts as a reference point for <ph id=\"ph1\">`upLevel`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `upLevel`."},{"pos":[48332,48583],"content":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of `node`) might be retrieved and cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of ancestor <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> generations to fetch.","pos":[0,88],"source":"The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch."},{"content":"0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of <ph id=\"ph1\">`node`</ph>) might be retrieved and cached.","pos":[89,251],"source":" 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of `node`) might be retrieved and cached."}]},{"pos":[48648,48858],"content":"The number of descendant <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of descendant <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> generations to fetch.","pos":[0,90],"source":"The number of descendant <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch."},{"content":"0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.","pos":[91,210]}]},{"pos":[49049,49112],"content":"<ph id=\"ph1\">&lt;code&gt;upLevel&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;downLevel&lt;/code&gt;</ph> is less than -1.","needQuote":true,"needEscape":true,"source":"<code>upLevel</code> or <code>downLevel</code> is less than -1."},{"pos":[49215,49297],"content":"<ph id=\"ph1\">&lt;code&gt;node&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49847,50013],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation, including any resources that are needed to load site map data from persistent storage.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.SiteMapProvider\"></xref> implementation, including any resources that are needed to load site map data from persistent storage."},{"pos":[50026,51072],"content":"The Initialize method does not actually build a site map, it only prepares the state of the <xref:System.Web.SiteMapProvider> object to do so. The default implementation initializes the <xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A> property for the site map provider from the site navigation configuration.       Classes that derive from the <xref:System.Web.SiteMapProvider> can override the Initialize method to initialize any state and resources that are required to load site map data from persistent storage. For example, if your derived class is using files to store site map data, any file initialization can be performed in the Initialize method. If the derived class uses some other type of data store, such as a relational database, initializing a database connection might be performed.       Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the Initialize method with its <xref:System.Collections.Specialized.NameValueCollection> parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method does not actually build a site map, it only prepares the state of the <xref:System.Web.SiteMapProvider> object to do so. The default implementation initializes the <xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A> property for the site map provider from the site navigation configuration.       Classes that derive from the <xref:System.Web.SiteMapProvider> can override the Initialize method to initialize any state and resources that are required to load site map data from persistent storage. For example, if your derived class is using files to store site map data, any file initialization can be performed in the Initialize method. If the derived class uses some other type of data store, such as a relational database, initializing a database connection might be performed.       Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the Initialize method with its <xref:System.Collections.Specialized.NameValueCollection> parameter.","pos":[0,1042],"nodes":[{"content":"The Initialize method does not actually build a site map, it only prepares the state of the &lt;xref:System.Web.SiteMapProvider&gt; object to do so.","pos":[0,142],"source":"The Initialize method does not actually build a site map, it only prepares the state of the <xref:System.Web.SiteMapProvider> object to do so."},{"content":"The default implementation initializes the &lt;xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A&gt; property for the site map provider from the site navigation configuration.","pos":[143,321],"source":" The default implementation initializes the <xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A> property for the site map provider from the site navigation configuration."},{"content":"Classes that derive from the &lt;xref:System.Web.SiteMapProvider&gt; can override the Initialize method to initialize any state and resources that are required to load site map data from persistent storage.","pos":[328,528],"source":"       Classes that derive from the <xref:System.Web.SiteMapProvider> can override the Initialize method to initialize any state and resources that are required to load site map data from persistent storage."},{"content":"For example, if your derived class is using files to store site map data, any file initialization can be performed in the Initialize method.","pos":[529,669]},{"content":"If the derived class uses some other type of data store, such as a relational database, initializing a database connection might be performed.","pos":[670,812]},{"content":"Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the Initialize method with its &lt;xref:System.Collections.Specialized.NameValueCollection&gt; parameter.","pos":[819,1042],"source":"       Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the Initialize method with its <xref:System.Collections.Specialized.NameValueCollection> parameter."}]}]},{"pos":[52704,52794],"content":"The <xref:System.Configuration.Provider.ProviderBase.Name*> of the provider to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Configuration.Provider.ProviderBase.Name*&gt; of the provider to initialize.","pos":[0,90],"source":"The <xref:System.Configuration.Provider.ProviderBase.Name*> of the provider to initialize."}]},{"pos":[52898,53134],"content":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that can contain additional attributes to help initialize the provider. These attributes are read from the site map provider configuration in the Web.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can contain additional attributes to help initialize the provider.","pos":[0,145],"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that can contain additional attributes to help initialize the provider."},{"content":"These attributes are read from the site map provider configuration in the Web.config file.","pos":[146,236]}]},{"pos":[53745,53906],"content":"Retrieves a Boolean value indicating whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be viewed by the user in the specified context.","needQuote":true,"needEscape":true,"source":"Retrieves a Boolean value indicating whether the specified <xref href=\"System.Web.SiteMapNode\"></xref> object can be viewed by the user in the specified context."},{"pos":[53919,54709],"content":"The default behavior when security trimming is enabled is as described in the following table.      |Condition|Return Value|   |---------------|------------------|   |The <xref:System.Web.SiteMapNode.Roles%2A> exists on `node` and the current user is in at least one of the specified roles.<br /><br /> - or -<br /><br /> The current thread has an associated `WindowsIdentity` that has file access to the requested URL and the URL is located within the directory structure for the application.<br /><br /> - or -<br /><br /> The current user is authorized specifically for the requested URL in the `authorization` element for the current application and the URL is located within the directory structure for the application.|`true`|   |None of the preceding conditions is met.|`false`|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default behavior when security trimming is enabled is as described in the following table.      |Condition|Return Value|   |---------------|------------------|   |The <xref:System.Web.SiteMapNode.Roles%2A> exists on `node` and the current user is in at least one of the specified roles.","pos":[0,290],"nodes":[{"content":"The default behavior when security trimming is enabled is as described in the following table.","pos":[0,94]},{"content":"|Condition|Return Value|   |---------------|------------------|   |The &lt;xref:System.Web.SiteMapNode.Roles%2A&gt; exists on <ph id=\"ph1\">`node`</ph> and the current user is in at least one of the specified roles.","pos":[100,290],"source":"      |Condition|Return Value|   |---------------|------------------|   |The <xref:System.Web.SiteMapNode.Roles%2A> exists on `node` and the current user is in at least one of the specified roles."}]},{"content":"- or -","pos":[303,309]},{"content":"The current thread has an associated <ph id=\"ph1\">`WindowsIdentity`</ph> that has file access to the requested URL and the URL is located within the directory structure for the application.","pos":[322,493],"source":" The current thread has an associated `WindowsIdentity` that has file access to the requested URL and the URL is located within the directory structure for the application."},{"content":"- or -","pos":[506,512]},{"content":"The current user is authorized specifically for the requested URL in the <ph id=\"ph1\">`authorization`</ph> element for the current application and the URL is located within the directory structure for the application.|<ph id=\"ph2\">`true`</ph>|   |None of the preceding conditions is met.|<ph id=\"ph3\">`false`</ph><ph id=\"ph4\">|</ph>","pos":[525,785],"source":" The current user is authorized specifically for the requested URL in the `authorization` element for the current application and the URL is located within the directory structure for the application.|`true`|   |None of the preceding conditions is met.|`false`|"}]},{"pos":[54924,55003],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains user information.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpContext\"></xref> that contains user information."},{"pos":[55073,55151],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is requested by the user.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> that is requested by the user."},{"pos":[55210,55462],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if security trimming is enabled and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">node</ph><ept id=\"p2\">&lt;/code&gt;</ept> can be viewed by the user or security trimming is not enabled; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security trimming is enabled and <code>node</code> can be viewed by the user or security trimming is not enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[56201,56304],"content":"Gets or sets the parent <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of the current provider.","needQuote":true,"needEscape":true,"source":"Gets or sets the parent <xref href=\"System.Web.SiteMapProvider\"></xref> object of the current provider."},{"pos":[56316,56717],"content":"All classes that implement the abstract <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"All classes that implement the abstract <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.","pos":[0,401],"nodes":[{"content":"All classes that implement the abstract &lt;xref:System.Web.SiteMapProvider&gt; class can support the concept of a site map provider hierarchy.","pos":[0,137],"source":"All classes that implement the abstract <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy."},{"content":"Any hierarchical relationships between providers are maintained outside the scope of a &lt;xref:System.Web.SiteMapProviderCollection&gt; collection by the providers themselves.","pos":[138,308],"source":" Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves."},{"content":"For an example of a functional provider hierarchy, see &lt;xref:System.Web.XmlSiteMapProvider&gt;.","pos":[309,401],"source":" For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>."}]}]},{"pos":[57434,57517],"content":"The parent provider of the current <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The parent provider of the current <xref href=\"System.Web.SiteMapProvider\"></xref>."},{"pos":[58010,58152],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the node collection that is maintained by the site map provider.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Web.SiteMapNode\"></xref> object from the node collection that is maintained by the site map provider."},{"pos":[58164,58513],"content":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the RemoveNode method and provide logic for removing <xref:System.Web.SiteMapNode> objects from the node collection that is maintained by the site map provider. The default implementation of the RemoveNode method throws a <xref:System.NotImplementedException> exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the RemoveNode method and provide logic for removing <xref:System.Web.SiteMapNode> objects from the node collection that is maintained by the site map provider. The default implementation of the RemoveNode method throws a <xref:System.NotImplementedException> exception.","pos":[0,349],"nodes":[{"content":"Classes deriving from the &lt;xref:System.Web.SiteMapProvider&gt; class can override the RemoveNode method and provide logic for removing &lt;xref:System.Web.SiteMapNode&gt; objects from the node collection that is maintained by the site map provider.","pos":[0,239],"source":"Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the RemoveNode method and provide logic for removing <xref:System.Web.SiteMapNode> objects from the node collection that is maintained by the site map provider."},{"content":"The default implementation of the RemoveNode method throws a &lt;xref:System.NotImplementedException&gt; exception.","pos":[240,349],"source":" The default implementation of the RemoveNode method throws a <xref:System.NotImplementedException> exception."}]}]},{"pos":[58687,58797],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove from the node collection maintained by the provider.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.SiteMapNode\"></xref> to remove from the node collection maintained by the provider."},{"pos":[58969,58982],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[59443,59523],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider.SiteMapResolve\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.SiteMapProvider.SiteMapResolve\"></xref> event."},{"pos":[59535,59730],"content":"The <ph id=\"ph1\">`context`</ph> parameter and a reference to the provider that called the ResolveSiteMapNode method are passed to the constructor of any associated &lt;xref:System.Web.SiteMapResolveEventArgs&gt; object.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `context` parameter and a reference to the provider that called the ResolveSiteMapNode method are passed to the constructor of any associated <xref:System.Web.SiteMapResolveEventArgs> object."},{"pos":[59928,60016],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the site map currently exists.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpContext\"></xref> for which the site map currently exists."},{"pos":[60083,60405],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> provided by the event handler delegate that is registered to handle the event or, if more than one delegate is registered to handle the event, the return value of the last delegate in the delegate chain; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.SiteMapNode\"></xref> provided by the event handler delegate that is registered to handle the event or, if more than one delegate is registered to handle the event, the return value of the last delegate in the delegate chain; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[60822,60934],"content":"Get or sets the resource key that is used for localizing <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attributes.","needQuote":true,"needEscape":true,"source":"Get or sets the resource key that is used for localizing <xref href=\"System.Web.SiteMapNode\"></xref> attributes."},{"pos":[60946,61643],"content":"The ResourceKey property is used with the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method of the <xref:System.Web.SiteMapNode> class. For the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as any additional attributes that are defined in the <xref:System.Web.SiteMapNode.Attributes%2A> collection of the <xref:System.Web.SiteMapNode> object, the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method takes precedence over the <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A> when the localization is enabled with the <xref:System.Web.SiteMapProvider.EnableLocalization%2A> property set to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ResourceKey property is used with the &lt;xref:System.Web.SiteMapNode.GetImplicitResourceString%2A&gt; method of the &lt;xref:System.Web.SiteMapNode&gt; class.","pos":[0,151],"source":"The ResourceKey property is used with the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method of the <xref:System.Web.SiteMapNode> class."},{"content":"For the &lt;xref:System.Web.SiteMapNode.Title%2A&gt; and &lt;xref:System.Web.SiteMapNode.Description%2A&gt; properties, as well as any additional attributes that are defined in the &lt;xref:System.Web.SiteMapNode.Attributes%2A&gt; collection of the &lt;xref:System.Web.SiteMapNode&gt; object, the &lt;xref:System.Web.SiteMapNode.GetImplicitResourceString%2A&gt; method takes precedence over the &lt;xref:System.Web.SiteMapNode.GetExplicitResourceString%2A&gt; when the localization is enabled with the &lt;xref:System.Web.SiteMapProvider.EnableLocalization%2A&gt; property set to <ph id=\"ph1\">`true`</ph>.","pos":[152,697],"source":" For the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as any additional attributes that are defined in the <xref:System.Web.SiteMapNode.Attributes%2A> collection of the <xref:System.Web.SiteMapNode> object, the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method takes precedence over the <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A> when the localization is enabled with the <xref:System.Web.SiteMapProvider.EnableLocalization%2A> property set to `true`."}]},{"pos":[61764,61806],"content":"A string containing the resource key name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the resource key name.","pos":[0,42]}]},{"pos":[62201,62324],"content":"Gets the root <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of the site map data that the current provider represents.","needQuote":true,"needEscape":true,"source":"Gets the root <xref href=\"System.Web.SiteMapNode\"></xref> object of the site map data that the current provider represents."},{"pos":[62336,62442],"content":"The default implementation calls the abstract <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation calls the abstract &lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt; method.","pos":[0,106],"source":"The default implementation calls the abstract <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A> method."}]},{"pos":[63134,63301],"content":"The root <xref href=\"System.Web.SiteMapNode\"></xref> of the current site map data provider. The default implementation performs security trimming on the returned node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the current site map data provider.","pos":[0,91],"source":"The root <xref href=\"System.Web.SiteMapNode\"></xref> of the current site map data provider."},{"content":"The default implementation performs security trimming on the returned node.","pos":[92,167]}]},{"pos":[63713,63816],"content":"Gets the root <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the current provider hierarchy.","needQuote":true,"needEscape":true,"source":"Gets the root <xref href=\"System.Web.SiteMapProvider\"></xref> object in the current provider hierarchy."},{"pos":[63828,64220],"content":"All classes that implement the <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"All classes that implement the <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.","pos":[0,392],"nodes":[{"content":"All classes that implement the &lt;xref:System.Web.SiteMapProvider&gt; class can support the concept of a site map provider hierarchy.","pos":[0,128],"source":"All classes that implement the <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy."},{"content":"Any hierarchical relationships between providers are maintained outside the scope of a &lt;xref:System.Web.SiteMapProviderCollection&gt; collection by the providers themselves.","pos":[129,299],"source":" Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves."},{"content":"For an example of a functional provider hierarchy, see &lt;xref:System.Web.XmlSiteMapProvider&gt;.","pos":[300,392],"source":" For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>."}]}]},{"pos":[65246,65400],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.SiteMapProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the top-level site map provider in the provider hierarchy that the current provider belongs to.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.SiteMapProvider\"></xref> that is the top-level site map provider in the provider hierarchy that the current provider belongs to."},{"pos":[65608,65671],"content":"There is a circular reference to the current site map provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is a circular reference to the current site map provider.","pos":[0,63]}]},{"pos":[66072,66178],"content":"Gets a Boolean value indicating whether a site map provider filters site map nodes based on a user's role.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether a site map provider filters site map nodes based on a user's role.","pos":[0,106]}]},{"pos":[66190,66287],"content":"Security trimming cannot be set programmatically—it is set in the configuration for the provider.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Security trimming cannot be set programmatically—it is set in the configuration for the provider.","pos":[0,97]}]},{"pos":[66414,66610],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the provider is configured to filter nodes based on role; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provider is configured to filter nodes based on role; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[67044,67126],"content":"Occurs when the <xref:System.Web.SiteMapProvider.CurrentNode*> property is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the &lt;xref:System.Web.SiteMapProvider.CurrentNode*&gt; property is called.","pos":[0,82],"source":"Occurs when the <xref:System.Web.SiteMapProvider.CurrentNode*> property is called."}]},{"pos":[67139,67820],"content":"You can create a <xref:System.Web.SiteMapNode> representation of the currently requested page without implementing a custom site map provider by subscribing to the SiteMapResolve event. Subscribers attach a <xref:System.Web.SiteMapResolveEventHandler> object to receive notification when the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property is called and can return a custom <xref:System.Web.SiteMapNode> object instead of the default one that is returned by the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can create a &lt;xref:System.Web.SiteMapNode&gt; representation of the currently requested page without implementing a custom site map provider by subscribing to the SiteMapResolve event.","pos":[0,185],"source":"You can create a <xref:System.Web.SiteMapNode> representation of the currently requested page without implementing a custom site map provider by subscribing to the SiteMapResolve event."},{"content":"Subscribers attach a &lt;xref:System.Web.SiteMapResolveEventHandler&gt; object to receive notification when the &lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt; property is called and can return a custom &lt;xref:System.Web.SiteMapNode&gt; object instead of the default one that is returned by the &lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt; property.","pos":[186,530],"source":" Subscribers attach a <xref:System.Web.SiteMapResolveEventHandler> object to receive notification when the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property is called and can return a custom <xref:System.Web.SiteMapNode> object instead of the default one that is returned by the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[537,679],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[67993,68005],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SiteMapProvider\n  id: SiteMapProvider\n  children:\n  - System.Web.SiteMapProvider.#ctor\n  - System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.CurrentNode\n  - System.Web.SiteMapProvider.EnableLocalization\n  - System.Web.SiteMapProvider.FindSiteMapNode(System.String)\n  - System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)\n  - System.Web.SiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  - System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)\n  - System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.GetRootNodeCore\n  - System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)\n  - System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)\n  - System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)\n  - System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.ParentProvider\n  - System.Web.SiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  - System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)\n  - System.Web.SiteMapProvider.ResourceKey\n  - System.Web.SiteMapProvider.RootNode\n  - System.Web.SiteMapProvider.RootProvider\n  - System.Web.SiteMapProvider.SecurityTrimmingEnabled\n  - System.Web.SiteMapProvider.SiteMapResolve\n  langs:\n  - csharp\n  name: SiteMapProvider\n  nameWithType: SiteMapProvider\n  fullName: System.Web.SiteMapProvider\n  type: Class\n  summary: Provides a common base class for all site map data providers, and a way for developers to implement custom site map data providers that can be used with the ASP.NET site map infrastructure as persistent stores for <xref href=\"System.Web.SiteMap\"></xref> objects.\n  remarks: \"The <xref:System.Web.StaticSiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes represent the default implementations of the abstract SiteMapProvider class. The <xref:System.Web.XmlSiteMapProvider> uses an XML file named Web.sitemap to store site map data. For more information on about the Web.sitemap file, see [ASP.NET Site Maps](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The SiteMapProvider class supports the concept of a site map provider hierarchy, by declaring the <xref:System.Web.SiteMapProvider.RootProvider%2A> and <xref:System.Web.SiteMapProvider.ParentProvider%2A> properties. A SiteMapProvider can be a child or parent of another provider. This enables scenarios where different content areas of a site are owned or implemented by different development groups that maintain their own site maps and site map providers.  \\n  \\n All SiteMapProvider objects are configured in the Web.config files. Any site map providers that are declared in these configuration files are loaded at run time and are used to load and process site navigation data. The <xref:System.Web.SiteMap> object, which keeps track of all the providers that are available to it through its <xref:System.Web.SiteMap.Providers%2A> property collection, provides programmatic access to the navigation data that is managed by the providers. The following code example demonstrates the format that is used to declare a site map provider in a Web.config file.  \\n  \\n```  \\n<siteMap defaultProvider=\\\"<name>\\\">  \\n  <providers>  \\n    <add  \\n      name=\\\"<friendly name>\\\"  \\n      type=\\\"<fully qualified class name>, <assembly name (optional)>\\\"   \\n      siteMapFile = \\\"<file name>\\\" />  \\n  </providers>  \\n</siteMap>  \\n```  \\n  \\n The site navigation data that is loaded by these providers is used by other components of the site map infrastructure, such as the <xref:System.Web.UI.WebControls.SiteMapPath> and <xref:System.Web.UI.WebControls.TreeView> controls, to display site map information for users.  \\n  \\n If you implement your own site map provider, you can place the source file in the App_Code directory of your ASP.NET application, and then the assembly will be compiled automatically. You can also place your own site map provider in the Global Assembly Cache (GAC), and provide a fully-qualified reference to it in the Web.config file. For more information on compiler services, see [Working with Assemblies and the Global Assembly Cache](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to write a class that implements the abstract SiteMapProvider class. This example includes only a sample SiteMapProvider and a sample text file that works with it. To run the example you also need an entry in the Web.config file and an .aspx page. You can find these in the documentation for the <xref:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider%2A?displayProperty=fullName> property.  \\n  \\n The example uses a comma-delimited file that follows an expected structure to load sitemap information. The first line of the file represents the root node of the sitemap, and subsequent lines are subnodes. Each subnode identifies its parent node by URL. An example of a file that meets these criteria is shown below.  \\n  \\n```  \\ndefault.aspx,Home,MyCompany Home Page,  \\nsale.aspx,Now On Sale,Check Out These Great Deals!,default.aspx  \\ncatalog.aspx,Online Catalog,Browse Our Many Great Items!,default.aspx  \\n```  \\n  \\n The `SimpleTextSiteMapProvider` provides example implementations of all the SiteMapProvider properties and methods.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#1](~/add/codesnippet/visualbasic/t-system.web.sitemapprov_1_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#1](~/add/codesnippet/csharp/t-system.web.sitemapprov_1_1.cs)]\"\n  syntax:\n    content: 'public abstract class SiteMapProvider : System.Configuration.Provider.ProviderBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: SiteMapProvider()\n  nameWithType: SiteMapProvider.SiteMapProvider()\n  fullName: System.Web.SiteMapProvider.SiteMapProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.SiteMapProvider\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  The <xref:System.Web.SiteMapProvider> class is not instantiated directly. The SiteMapProvider constructor is called from the constructor of classes that are derived from the <xref:System.Web.StaticSiteMapProvider> class.\n  syntax:\n    content: protected SiteMapProvider ();\n    parameters: []\n  overload: System.Web.SiteMapProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)\n  id: AddNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: AddNode(SiteMapNode)\n  nameWithType: SiteMapProvider.AddNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.AddNode(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a <xref href=\"System.Web.SiteMapNode\"></xref> object to the node collection that is maintained by the site map provider.\n  remarks: Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object to the node collection that is maintained by the site map provider. The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception.\n  syntax:\n    content: protected virtual void AddNode (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the node collection maintained by the provider.\n  overload: System.Web.SiteMapProvider.AddNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  id: AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: AddNode(SiteMapNode,SiteMapNode)\n  nameWithType: SiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  fullName: System.Web.SiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a <xref href=\"System.Web.SiteMapNode\"></xref> object to the node collection that is maintained by the site map provider and specifies the parent <xref href=\"System.Web.SiteMapNode\"></xref> object.\n  remarks: Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the AddNode method and provide logic for adding a <xref:System.Web.SiteMapNode> object with a specified parent to the node collection that is maintained by the site map provider. For example, the <xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=fullName> method adds the <xref:System.Web.SiteMapNode> object that is specified by `node` to the <xref:System.Web.SiteMapNodeCollection> collection that is maintained by the <xref:System.Web.XmlSiteMapProvider> object and creates a parent/child relationship between the <xref:System.Web.SiteMapNode> object that is specified by `node` and `parentNode`. The default implementation of the <xref:System.Web.SiteMapProvider.AddNode%2A> method throws a <xref:System.NotImplementedException> exception.\n  syntax:\n    content: protected virtual void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> to add to the node collection maintained by the provider.\n    - id: parentNode\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> that is the parent of `node`.\n  overload: System.Web.SiteMapProvider.AddNode*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.CurrentNode\n  id: CurrentNode\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: CurrentNode\n  nameWithType: SiteMapProvider.CurrentNode\n  fullName: System.Web.SiteMapProvider.CurrentNode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the currently requested page.\n  remarks: \"The <xref:System.Web.SiteMapProvider.SiteMapResolve> event is raised before attempting to retrieve a <xref:System.Web.SiteMapNode> object, to enable event subscribers to return an instance of the <xref:System.Web.SiteMapNode> class. If there are no event subscribers, the <xref:System.Web.SiteMapProvider> class calls the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method using the current HTTP context to retrieve a <xref:System.Web.SiteMapNode> that represents the currently requested page.  \\n  \\n If the currently requested page does not correspond with a <xref:System.Web.SiteMapNode>, `null` is returned. If security trimming is enabled and the user is not permitted to access the <xref:System.Web.SiteMapNode>, `null` is returned.\"\n  example:\n  - \"The following code example demonstrates how to implement the CurrentNode property in a class that implements the abstract <xref:System.Web.SiteMapProvider> class.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/add/codesnippet/visualbasic/p-system.web.sitemapprov_0_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/add/codesnippet/csharp/p-system.web.sitemapprov_0_1.cs)]\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode CurrentNode { get; }\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.CurrentNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.EnableLocalization\n  id: EnableLocalization\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: EnableLocalization\n  nameWithType: SiteMapProvider.EnableLocalization\n  fullName: System.Web.SiteMapProvider.EnableLocalization\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a Boolean value indicating whether localized values of <xref href=\"System.Web.SiteMapNode\"></xref> attributes are returned.\n  remarks: The EnableLocalization property is used for the get accessor of the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as additional <xref:System.Web.SiteMapNode.Attributes%2A> properties of a <xref:System.Web.SiteMapNode> object.\n  syntax:\n    content: public bool EnableLocalization { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a localized value of the <xref href=\"System.Web.SiteMapNode\"></xref> attributes are returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.EnableLocalization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.FindSiteMapNode(System.String)\n  id: FindSiteMapNode(System.String)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: FindSiteMapNode(String)\n  nameWithType: SiteMapProvider.FindSiteMapNode(String)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNode(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the page at the specified URL.\n  remarks: \"Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract FindSiteMapNode method.  \\n  \\n The URL provided can be a virtual or absolute URL. It might also be a URL that uses application-relative syntax, such as `~/apprelativedirectory`. Ensure that any implementation of the FindSiteMapNode method parse and handle application-relative syntax properly.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> object as a key in the various collections that the classes maintain. Therefore, if a <xref:System.Web.SiteMapNode> provides a URL, it must be unique within the scope of the site map provider. If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>.\"\n  example:\n  - \"The following code example demonstrates how to implement the FindSiteMapNode method in a class that implements the abstract <xref:System.Web.SiteMapProvider> class. The `SimpleTextSiteMapProvider` uses a helper method, named `FindUrl`, to get the URL of the currently displayed page from the <xref:System.Web.HttpContext> object.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#5](~/add/codesnippet/visualbasic/m-system.web.sitemapprov_1_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#5](~/add/codesnippet/csharp/m-system.web.sitemapprov_1_1.cs)]  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#8](~/add/codesnippet/visualbasic/m-system.web.sitemapprov_1_2.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#8](~/add/codesnippet/csharp/m-system.web.sitemapprov_1_2.cs)]\"\n  syntax:\n    content: public abstract System.Web.SiteMapNode FindSiteMapNode (string rawUrl);\n    parameters:\n    - id: rawUrl\n      type: System.String\n      description: A URL that identifies the page for which to retrieve a <xref href=\"System.Web.SiteMapNode\"></xref>.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>rawURL</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> is found or if security trimming is enabled and the <xref href=\"System.Web.SiteMapNode\"></xref> cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.FindSiteMapNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)\n  id: FindSiteMapNode(System.Web.HttpContext)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: FindSiteMapNode(HttpContext)\n  nameWithType: SiteMapProvider.FindSiteMapNode(HttpContext)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNode(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object that represents the currently requested page using the specified <xref href=\"System.Web.HttpContext\"></xref> object.\n  remarks: \"The FindSiteMapNode method calls the abstract <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method to retrieve a <xref:System.Web.SiteMapNode> object for the currently requested page based on the raw URL or the virtual path of the request. If no corresponding <xref:System.Web.SiteMapNode> is found in the <xref:System.Web.SiteMap>, `null` is returned.  \\n  \\n The <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method does not check whether a <xref:System.Web.SiteMapNode> is accessible to a user, by default.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode FindSiteMapNode (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> used to match node information with the URL of the requested page.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> can be found in the <xref href=\"System.Web.SiteMapNode\"></xref> or if the page context is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.FindSiteMapNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  id: FindSiteMapNodeFromKey(System.String)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: FindSiteMapNodeFromKey(String)\n  nameWithType: SiteMapProvider.FindSiteMapNodeFromKey(String)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNodeFromKey(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves a <xref href=\"System.Web.SiteMapNode\"></xref> object based on a specified key.\n  remarks: \"The <xref:System.Web.SiteMapProvider> implementation returns `null` in all cases. Classes that derive from the <xref:System.Web.SiteMapProvider> class can override the FindSiteMapNodeFromKey method to provide lookup functionality based on a unique key (instead of a URL, which is used by the <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A> method). Implement the FindSiteMapNodeFromKey method if your site map provider implementation uses the <xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName> property of a <xref:System.Web.SiteMapNode> object as a primary identifier in a site map structure.  \\n  \\n The <xref:System.Web.StaticSiteMapProvider> class provides an implementation that handles searching for site map nodes that do not define a URL.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, uses the URL of a <xref:System.Web.SiteMapNode> as a key in the various collections that the classes maintain. Therefore, if a node provides a URL, it must be unique within the scope of the site map provider. If no URL is provided, a unique identifier is generated to identify the <xref:System.Web.SiteMapNode>.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: A lookup key with which a <xref href=\"System.Web.SiteMapNode\"></xref> is created.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the page identified by <code>key</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no corresponding <xref href=\"System.Web.SiteMapNode\"></xref> is found or if security trimming is enabled and the <xref href=\"System.Web.SiteMapNode\"></xref> cannot be returned for the current user. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.FindSiteMapNodeFromKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  id: GetChildNodes(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetChildNodes(SiteMapNode)\n  nameWithType: SiteMapProvider.GetChildNodes(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.GetChildNodes(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, retrieves the child nodes of a specific <xref href=\"System.Web.SiteMapNode\"></xref>.\n  remarks: Classes that derive from the <xref:System.Web.SiteMapProvider> class must implement the abstract GetChildNodes method.\n  example:\n  - \"The following code example demonstrates how to implement the GetChildNodes method in a class that implements the abstract <xref:System.Web.SiteMapProvider> class. The `SimpleTextSiteMapProvider` stores the hierarchical parent/child relationships in one <xref:System.Collections.Hashtable> object and all <xref:System.Web.SiteMapNode> objects in another. The GetChildNodes method performs a reverse-lookup using both <xref:System.Collections.ArrayList> objects.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/visualbasic/m-system.web.sitemapprov_2_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/csharp/m-system.web.sitemapprov_2_1.cs)]\"\n  syntax:\n    content: public abstract System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve all child nodes.\n    return:\n      type: System.Web.SiteMapNodeCollection\n      description: A read-only <xref href=\"System.Web.SiteMapNodeCollection\"></xref> that contains the immediate child nodes of the specified <xref href=\"System.Web.SiteMapNode\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty collection, if no child nodes exist.\n  overload: System.Web.SiteMapProvider.GetChildNodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)\n  id: GetCurrentNodeAndHintAncestorNodes(System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetCurrentNodeAndHintAncestorNodes(Int32)\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(Int32)\n  fullName: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.\n  remarks: \"The default implementation of the GetCurrentNodeAndHintAncestorNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintAncestorNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode>, as well as the parent and ancestor nodes of the parent.  \\n  \\n The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve. If preferred, the parent and ancestor nodes can be linked to the <xref:System.Web.SiteMapNode> object that is returned by the GetCurrentNodeAndHintAncestorNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> property.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode GetCurrentNodeAndHintAncestorNodes (int upLevel);\n    parameters:\n    - id: upLevel\n      type: System.Int32\n      description: The number of ancestor site map node generations to get. A value of -1 indicates that all ancestors might be retrieved and cached by the provider.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>upLevel</code> is less than -1.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)\n  id: GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.\n  remarks: \"The default implementation of the GetCurrentNodeAndHintNeighborhoodNodes method returns the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property; however, site map providers can override the GetCurrentNodeAndHintNeighborhoodNodes method and provide an optimized implementation that uses custom caching mechanisms to return the current <xref:System.Web.SiteMapNode> object, as well as <xref:System.Web.SiteMapNode> objects that are in the proximity of the current <xref:System.Web.SiteMapNode>.  \\n  \\n The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to retrieve and cache, along with their immediate children. The `downLevel` parameter is used to specify how many levels of descendant nodes from the current <xref:System.Web.SiteMapNode> to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the  \\n  \\n GetCurrentNodeAndHintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties. If there are fewer ancestor or child node levels than are specified by `upLevel` or `downLevel`, only those that are available are retrieved.  \\n  \\n The <xref:System.Web.XmlSiteMapProvider> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <xref:System.Web.XmlSiteMapProvider> for specific <xref:System.Web.SiteMapNode> objects.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode GetCurrentNodeAndHintNeighborhoodNodes (int upLevel, int downLevel);\n    parameters:\n    - id: upLevel\n      type: System.Int32\n      description: The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.\n    - id: downLevel\n      type: System.Int32\n      description: The number of child <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>upLevel</code> or <code>downLevel</code> is less than -1.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  id: GetParentNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetParentNode(SiteMapNode)\n  nameWithType: SiteMapProvider.GetParentNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.GetParentNode(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, retrieves the parent node of a specific <xref href=\"System.Web.SiteMapNode\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to implement the GetParentNode method in a class that implements the abstract <xref:System.Web.SiteMapProvider> class. The `SimpleTextSiteMapProvider` stores the hierarchical parent/child relationship between <xref:System.Web.SiteMapNode> objects in an <xref:System.Collections.IList> interface, such as an <xref:System.Collections.ArrayList> object.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/visualbasic/m-system.web.sitemapprov_3_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/csharp/m-system.web.sitemapprov_3_1.cs)]\"\n  syntax:\n    content: public abstract System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> for which to retrieve the parent node.\n    return:\n      type: System.Web.SiteMapNode\n      description: \"A <xref href=\\\"System.Web.SiteMapNode\\\"></xref> that represents the parent of <code>node</code>; otherwise, <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>, if the <xref href=\\\"System.Web.SiteMapNode\\\"></xref> has no parent or security trimming is enabled and the parent node is not accessible to the current user.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n GetParentNode might also return <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the parent node belongs to a different provider. In this case, use the <xref:System.Web.SiteMapNode.ParentNode*> property of <code>node</code> instead.  \\n  \\n</div>\"\n  overload: System.Web.SiteMapProvider.GetParentNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)\n  id: GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.\n  remarks: \"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects.  \\n  \\n The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node. If fewer levels exist than are requested, `null` is returned. The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToCurrentNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode GetParentNodeRelativeToCurrentNodeAndHintDownFromParent (int walkupLevels, int relativeDepthFromWalkup);\n    parameters:\n    - id: walkupLevels\n      type: System.Int32\n      description: The number of ancestor node levels to traverse when retrieving the requested ancestor node.\n    - id: relativeDepthFromWalkup\n      type: System.Int32\n      description: The number of descendant node levels to retrieve from the target ancestor node.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents an ancestor <xref href=\"System.Web.SiteMapNode\"></xref> of the currently requested page; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current or ancestor <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>walkupLevels</code> or <code>relativeDepthFromWalkup</code> is less than 0.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)\n  id: GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <xref href=\"System.Web.SiteMapNode\"></xref> object and fetching its child nodes.\n  remarks: \"The default implementation of the <xref:System.Web.SiteMapProvider> class provides a non-optimized implementation of the GetParentNodeRelativeToNodeAndHintDownFromParent method, calling the <xref:System.Web.SiteMapProvider.HintAncestorNodes%2A> and <xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A> methods; however, site map providers can override the GetParentNodeRelativeToNodeAndHintDownFromParent method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <xref:System.Web.SiteMapNode> objects.  The GetParentNodeRelativeToNodeAndHintDownFromParent method is very similar to the <xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A> method.  \\n  \\n The `walkupLevels` parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node. If fewer levels exist than are requested, `null` is returned. The `downLevel` parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the GetParentNodeRelativeToNodeAndHintDownFromParent method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties. If there are fewer ancestor node levels than specified by the `upLevel` parameter, `null` is returned.  It is up to the provider implementer to decide how to handle the situation where the number of available descendant node levels is less than the value that is specified by the `downLevel` parameter.\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode GetParentNodeRelativeToNodeAndHintDownFromParent (System.Web.SiteMapNode node, int walkupLevels, int relativeDepthFromWalkup);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `walkupLevels` and `relativeDepthFromWalkup`.\n    - id: walkupLevels\n      type: System.Int32\n      description: The number of ancestor node levels to traverse when retrieving the requested ancestor node.\n    - id: relativeDepthFromWalkup\n      type: System.Int32\n      description: The number of descendant node levels to retrieve from the target ancestor node.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents an ancestor of <code>node</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current or ancestor <xref href=\"System.Web.SiteMapNode\"></xref> is not found or cannot be returned for the current user.\n  overload: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for <code>walkupLevels</code> or <code>relativeDepthFromWalkup</code> is less than 0.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetRootNodeCore\n  id: GetRootNodeCore\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetRootNodeCore()\n  nameWithType: SiteMapProvider.GetRootNodeCore()\n  fullName: System.Web.SiteMapProvider.GetRootNodeCore()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.\n  remarks: The GetRootNodeCore method enables a parent provider in a provider hierarchy to obtain a <xref:System.Web.SiteMapNode> object that acts as a frame of reference for building the provider hierarchy and the larger site map node hierarchy that is the sum of the site map data that each provider manages.\n  example:\n  - >-\n    [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#3](~/add/codesnippet/visualbasic/m-system.web.sitemapprov_0_1.vb)]\n     [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#3](~/add/codesnippet/csharp/m-system.web.sitemapprov_0_1.cs)]\n  syntax:\n    content: protected abstract System.Web.SiteMapNode GetRootNodeCore ();\n    parameters: []\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the root node of the set of nodes that the current provider manages.\n  overload: System.Web.SiteMapProvider.GetRootNodeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)\n  id: GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: GetRootNodeCoreFromProvider(SiteMapProvider)\n  nameWithType: SiteMapProvider.GetRootNodeCoreFromProvider(SiteMapProvider)\n  fullName: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(SiteMapProvider)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves the root node of all the nodes that are currently managed by the specified site map provider.\n  remarks: The default implementation calls the abstract <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A> method on the specified `provider`.\n  syntax:\n    content: protected static System.Web.SiteMapNode GetRootNodeCoreFromProvider (System.Web.SiteMapProvider provider);\n    parameters:\n    - id: provider\n      type: System.Web.SiteMapProvider\n      description: The provider that calls the <xref:System.Web.SiteMapProvider.GetRootNodeCore*>.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> that represents the root node of the set of nodes that is managed by <code>provider</code>.\n  overload: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)\n  id: HintAncestorNodes(System.Web.SiteMapNode,System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: HintAncestorNodes(SiteMapNode,Int32)\n  nameWithType: SiteMapProvider.HintAncestorNodes(SiteMapNode,Int32)\n  fullName: System.Web.SiteMapProvider.HintAncestorNodes(SiteMapNode,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <xref href=\"System.Web.SiteMapNode\"></xref> object.\n  remarks: \"The default HintAncestorNodes method only checks for an `upLevel` parameter that is less than -1 and a `node` parameter that is `null`. Because the <xref:System.Web.XmlSiteMapProvider> class caches site map information in memory, the HintAncestorNodes method is not used.  \\n  \\n Site map providers can override the HintAncestorNodes method to perform an optimized retrieval of parent and ancestor nodes of the specified <xref:System.Web.SiteMapNode> object.  \\n  \\n The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>. If fewer levels exist than are requested, all available ancestor nodes are returned within the specified bound. If preferred, the parent node can be linked to the specified <xref:System.Web.SiteMapNode> using the <xref:System.Web.SiteMapNode.ParentNode%2A> property.\"\n  syntax:\n    content: public virtual void HintAncestorNodes (System.Web.SiteMapNode node, int upLevel);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `upLevel`.\n    - id: upLevel\n      type: System.Int32\n      description: The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.\n  overload: System.Web.SiteMapProvider.HintAncestorNodes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>upLevel</code> is less than -1.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)\n  id: HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n  nameWithType: SiteMapProvider.HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n  fullName: System.Web.SiteMapProvider.HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node.\n  remarks: \"The default HintNeighborhoodNodes method only checks for an `upLevel` and `downLevel` parameters that are less than -1 and a `node` parameter that is `null`. Because the <xref:System.Web.XmlSiteMapProvider> object caches site map information in memory, the HintNeighborhoodNodes method is not used.  \\n  \\n Site map providers can override the HintNeighborhoodNodes method to perform an optimized lookup of the <xref:System.Web.SiteMapNode> objects in the proximity of the specified <xref:System.Web.SiteMapNode>. The `upLevel` parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <xref:System.Web.SiteMapNode>. The `downLevel` parameter is used to specify how many levels of child nodes from the current node to retrieve. If preferred, the ancestor and descendant nodes can be linked to the <xref:System.Web.SiteMapNode> that is returned by the HintNeighborhoodNodes method, using the <xref:System.Web.SiteMapNode.ParentNode%2A> and <xref:System.Web.SiteMapNode.ChildNodes%2A> properties.\"\n  syntax:\n    content: public virtual void HintNeighborhoodNodes (System.Web.SiteMapNode node, int upLevel, int downLevel);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> that acts as a reference point for `upLevel`.\n    - id: upLevel\n      type: System.Int32\n      description: The number of ancestor <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of `node`) might be retrieved and cached.\n    - id: downLevel\n      type: System.Int32\n      description: The number of descendant <xref href=\"System.Web.SiteMapNode\"></xref> generations to fetch. 0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.\n  overload: System.Web.SiteMapProvider.HintNeighborhoodNodes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>upLevel</code> or <code>downLevel</code> is less than -1.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>node</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SiteMapProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.SiteMapProvider.Initialize(String,NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes the <xref href=\"System.Web.SiteMapProvider\"></xref> implementation, including any resources that are needed to load site map data from persistent storage.\n  remarks: \"The Initialize method does not actually build a site map, it only prepares the state of the <xref:System.Web.SiteMapProvider> object to do so. The default implementation initializes the <xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A> property for the site map provider from the site navigation configuration.  \\n  \\n Classes that derive from the <xref:System.Web.SiteMapProvider> can override the Initialize method to initialize any state and resources that are required to load site map data from persistent storage. For example, if your derived class is using files to store site map data, any file initialization can be performed in the Initialize method. If the derived class uses some other type of data store, such as a relational database, initializing a database connection might be performed.  \\n  \\n Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the Initialize method with its <xref:System.Collections.Specialized.NameValueCollection> parameter.\"\n  example:\n  - \"The following code example demonstrates how to override the Initialize method to prepare a Microsoft Access database connection.  \\n  \\n The connection string for the <xref:System.Data.OleDb.OleDbConnection> object is passed in the <xref:System.Collections.Specialized.NameValueCollection> parameter of the Initialize method. In this case, the connection string is provided by the provider-specific section in the Web.config file. Here, `accessSiteMapConnectionString` contains a connection string to a Microsoft Access database that hosts the site map data.  \\n  \\n```  \\n<siteMap defaultProvider=\\\"AccessSiteMapProvider\\\">  \\n  <providers>  \\n     <add  \\n       name=\\\"AccessSiteMapProvider\\\"  \\n       type=\\\"Samples.AspNet.AccessSiteMapProvider,Samples.AspNet\\\"  \\n       accessSiteMapConnectionString=\\\"PROVIDER=MICROSOFT.JET.OLEDB.4.0;DATA SOURCE=\\\\\\\\SomeUNCShare\\\\\\\\sitemap.mdb\\\"/>  \\n  </providers>   \\n </siteMap>  \\n```  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/add/codesnippet/csharp/2f9058bd-97d7-46f8-b840-_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/add/codesnippet/visualbasic/2f9058bd-97d7-46f8-b840-_1.vb)]\\n [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/add/codesnippet/cpp/2f9058bd-97d7-46f8-b840-_1.cpp)]\"\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.Configuration.Provider.ProviderBase.Name*> of the provider to initialize.\n    - id: attributes\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that can contain additional attributes to help initialize the provider. These attributes are read from the site map provider configuration in the Web.config file.\n  overload: System.Web.SiteMapProvider.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)\n  id: IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: IsAccessibleToUser(HttpContext,SiteMapNode)\n  nameWithType: SiteMapProvider.IsAccessibleToUser(HttpContext,SiteMapNode)\n  fullName: System.Web.SiteMapProvider.IsAccessibleToUser(HttpContext,SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Retrieves a Boolean value indicating whether the specified <xref href=\"System.Web.SiteMapNode\"></xref> object can be viewed by the user in the specified context.\n  remarks: \"The default behavior when security trimming is enabled is as described in the following table.  \\n  \\n|Condition|Return Value|  \\n|---------------|------------------|  \\n|The <xref:System.Web.SiteMapNode.Roles%2A> exists on `node` and the current user is in at least one of the specified roles.<br /><br /> - or -<br /><br /> The current thread has an associated `WindowsIdentity` that has file access to the requested URL and the URL is located within the directory structure for the application.<br /><br /> - or -<br /><br /> The current user is authorized specifically for the requested URL in the `authorization` element for the current application and the URL is located within the directory structure for the application.|`true`|  \\n|None of the preceding conditions is met.|`false`|\"\n  syntax:\n    content: public virtual bool IsAccessibleToUser (System.Web.HttpContext context, System.Web.SiteMapNode node);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> that contains user information.\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> that is requested by the user.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security trimming is enabled and <code>node</code> can be viewed by the user or security trimming is not enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.IsAccessibleToUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>context</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>node</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.ParentProvider\n  id: ParentProvider\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: ParentProvider\n  nameWithType: SiteMapProvider.ParentProvider\n  fullName: System.Web.SiteMapProvider.ParentProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the parent <xref href=\"System.Web.SiteMapProvider\"></xref> object of the current provider.\n  remarks: All classes that implement the abstract <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.\n  example:\n  - \"The following code example demonstrates how to implement the ParentProvider property in a class that implements the abstract <xref:System.Web.SiteMapProvider> class.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/add/codesnippet/visualbasic/p-system.web.sitemapprov_3_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/add/codesnippet/csharp/p-system.web.sitemapprov_3_1.cs)]\"\n  syntax:\n    content: public virtual System.Web.SiteMapProvider ParentProvider { get; set; }\n    return:\n      type: System.Web.SiteMapProvider\n      description: The parent provider of the current <xref href=\"System.Web.SiteMapProvider\"></xref>.\n  overload: System.Web.SiteMapProvider.ParentProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  id: RemoveNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: RemoveNode(SiteMapNode)\n  nameWithType: SiteMapProvider.RemoveNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.RemoveNode(SiteMapNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes the specified <xref href=\"System.Web.SiteMapNode\"></xref> object from the node collection that is maintained by the site map provider.\n  remarks: Classes deriving from the <xref:System.Web.SiteMapProvider> class can override the RemoveNode method and provide logic for removing <xref:System.Web.SiteMapNode> objects from the node collection that is maintained by the site map provider. The default implementation of the RemoveNode method throws a <xref:System.NotImplementedException> exception.\n  syntax:\n    content: protected virtual void RemoveNode (System.Web.SiteMapNode node);\n    parameters:\n    - id: node\n      type: System.Web.SiteMapNode\n      description: The <xref href=\"System.Web.SiteMapNode\"></xref> to remove from the node collection maintained by the provider.\n  overload: System.Web.SiteMapProvider.RemoveNode*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)\n  id: ResolveSiteMapNode(System.Web.HttpContext)\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: ResolveSiteMapNode(HttpContext)\n  nameWithType: SiteMapProvider.ResolveSiteMapNode(HttpContext)\n  fullName: System.Web.SiteMapProvider.ResolveSiteMapNode(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Raises the <xref href=\"System.Web.SiteMapProvider.SiteMapResolve\"></xref> event.\n  remarks: The `context` parameter and a reference to the provider that called the ResolveSiteMapNode method are passed to the constructor of any associated <xref:System.Web.SiteMapResolveEventArgs> object.\n  syntax:\n    content: protected System.Web.SiteMapNode ResolveSiteMapNode (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for which the site map currently exists.\n    return:\n      type: System.Web.SiteMapNode\n      description: A <xref href=\"System.Web.SiteMapNode\"></xref> provided by the event handler delegate that is registered to handle the event or, if more than one delegate is registered to handle the event, the return value of the last delegate in the delegate chain; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.ResolveSiteMapNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.ResourceKey\n  id: ResourceKey\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: ResourceKey\n  nameWithType: SiteMapProvider.ResourceKey\n  fullName: System.Web.SiteMapProvider.ResourceKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Get or sets the resource key that is used for localizing <xref href=\"System.Web.SiteMapNode\"></xref> attributes.\n  remarks: The ResourceKey property is used with the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method of the <xref:System.Web.SiteMapNode> class. For the <xref:System.Web.SiteMapNode.Title%2A> and <xref:System.Web.SiteMapNode.Description%2A> properties, as well as any additional attributes that are defined in the <xref:System.Web.SiteMapNode.Attributes%2A> collection of the <xref:System.Web.SiteMapNode> object, the <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> method takes precedence over the <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A> when the localization is enabled with the <xref:System.Web.SiteMapProvider.EnableLocalization%2A> property set to `true`.\n  syntax:\n    content: public string ResourceKey { get; set; }\n    return:\n      type: System.String\n      description: A string containing the resource key name.\n  overload: System.Web.SiteMapProvider.ResourceKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.RootNode\n  id: RootNode\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: RootNode\n  nameWithType: SiteMapProvider.RootNode\n  fullName: System.Web.SiteMapProvider.RootNode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the root <xref href=\"System.Web.SiteMapNode\"></xref> object of the site map data that the current provider represents.\n  remarks: The default implementation calls the abstract <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A> method.\n  example:\n  - \"The following code example demonstrates how to implement the RootNode property in a class that implements the abstract <xref:System.Web.SiteMapProvider> class.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/add/codesnippet/visualbasic/p-system.web.sitemapprov_4_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/add/codesnippet/csharp/p-system.web.sitemapprov_4_1.cs)]\"\n  syntax:\n    content: public virtual System.Web.SiteMapNode RootNode { get; }\n    return:\n      type: System.Web.SiteMapNode\n      description: The root <xref href=\"System.Web.SiteMapNode\"></xref> of the current site map data provider. The default implementation performs security trimming on the returned node.\n  overload: System.Web.SiteMapProvider.RootNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.RootProvider\n  id: RootProvider\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: RootProvider\n  nameWithType: SiteMapProvider.RootProvider\n  fullName: System.Web.SiteMapProvider.RootProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the root <xref href=\"System.Web.SiteMapProvider\"></xref> object in the current provider hierarchy.\n  remarks: All classes that implement the <xref:System.Web.SiteMapProvider> class can support the concept of a site map provider hierarchy. Any hierarchical relationships between providers are maintained outside the scope of a <xref:System.Web.SiteMapProviderCollection> collection by the providers themselves. For an example of a functional provider hierarchy, see <xref:System.Web.XmlSiteMapProvider>.\n  example:\n  - \"The following code example demonstrates how to implement the RootProvider property in a class that implements the abstract <xref:System.Web.SiteMapProvider> class. The `SimpleTextSiteMapProvider` uses simple logic to determine whether the current provider is part of a provider hierarchy. If the provider is part of a hierarchy, it uses the RootProvider property for the parent provider as its own. If the provider is not part of a hierarchy, the provider is its own root provider.  \\n  \\n This code example is part of a larger example provided for the <xref:System.Web.SiteMapProvider> class.  \\n  \\n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/add/codesnippet/visualbasic/p-system.web.sitemapprov_2_1.vb)]\\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/add/codesnippet/csharp/p-system.web.sitemapprov_2_1.cs)]\"\n  syntax:\n    content: public virtual System.Web.SiteMapProvider RootProvider { get; }\n    return:\n      type: System.Web.SiteMapProvider\n      description: An <xref href=\"System.Web.SiteMapProvider\"></xref> that is the top-level site map provider in the provider hierarchy that the current provider belongs to.\n  overload: System.Web.SiteMapProvider.RootProvider*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: There is a circular reference to the current site map provider.\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.SecurityTrimmingEnabled\n  id: SecurityTrimmingEnabled\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: SecurityTrimmingEnabled\n  nameWithType: SiteMapProvider.SecurityTrimmingEnabled\n  fullName: System.Web.SiteMapProvider.SecurityTrimmingEnabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a Boolean value indicating whether a site map provider filters site map nodes based on a user's role.\n  remarks: Security trimming cannot be set programmatically—it is set in the configuration for the provider.\n  syntax:\n    content: public bool SecurityTrimmingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provider is configured to filter nodes based on role; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SiteMapProvider.SecurityTrimmingEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SiteMapProvider.SiteMapResolve\n  id: SiteMapResolve\n  parent: System.Web.SiteMapProvider\n  langs:\n  - csharp\n  name: SiteMapResolve\n  nameWithType: SiteMapProvider.SiteMapResolve\n  fullName: System.Web.SiteMapProvider.SiteMapResolve\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the <xref:System.Web.SiteMapProvider.CurrentNode*> property is called.\n  remarks: \"You can create a <xref:System.Web.SiteMapNode> representation of the currently requested page without implementing a custom site map provider by subscribing to the SiteMapResolve event. Subscribers attach a <xref:System.Web.SiteMapResolveEventHandler> object to receive notification when the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property is called and can return a custom <xref:System.Web.SiteMapNode> object instead of the default one that is returned by the <xref:System.Web.SiteMapProvider.CurrentNode%2A> property.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.Web.SiteMapResolveEventHandler SiteMapResolve;\n    return:\n      type: System.Web.SiteMapResolveEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: System.Configuration.Provider.ProviderBase\n- uid: System.NotImplementedException\n  isExternal: true\n  name: System.NotImplementedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.Provider.ProviderException\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderException\n  nameWithType: ProviderException\n  fullName: System.Configuration.Provider.ProviderException\n- uid: System.Web.SiteMapProvider.#ctor\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: SiteMapProvider()\n  nameWithType: SiteMapProvider.SiteMapProvider()\n  fullName: System.Web.SiteMapProvider.SiteMapProvider()\n- uid: System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: AddNode(SiteMapNode)\n  nameWithType: SiteMapProvider.AddNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.AddNode(SiteMapNode)\n- uid: System.Web.SiteMapNode\n  parent: System.Web\n  isExternal: false\n  name: SiteMapNode\n  nameWithType: SiteMapNode\n  fullName: System.Web.SiteMapNode\n- uid: System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: AddNode(SiteMapNode,SiteMapNode)\n  nameWithType: SiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n  fullName: System.Web.SiteMapProvider.AddNode(SiteMapNode,SiteMapNode)\n- uid: System.Web.SiteMapProvider.CurrentNode\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: CurrentNode\n  nameWithType: SiteMapProvider.CurrentNode\n  fullName: System.Web.SiteMapProvider.CurrentNode\n- uid: System.Web.SiteMapProvider.EnableLocalization\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: EnableLocalization\n  nameWithType: SiteMapProvider.EnableLocalization\n  fullName: System.Web.SiteMapProvider.EnableLocalization\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.SiteMapProvider.FindSiteMapNode(System.String)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: FindSiteMapNode(String)\n  nameWithType: SiteMapProvider.FindSiteMapNode(String)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNode(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: FindSiteMapNode(HttpContext)\n  nameWithType: SiteMapProvider.FindSiteMapNode(HttpContext)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNode(HttpContext)\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.SiteMapProvider.FindSiteMapNodeFromKey(System.String)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: FindSiteMapNodeFromKey(String)\n  nameWithType: SiteMapProvider.FindSiteMapNodeFromKey(String)\n  fullName: System.Web.SiteMapProvider.FindSiteMapNodeFromKey(String)\n- uid: System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetChildNodes(SiteMapNode)\n  nameWithType: SiteMapProvider.GetChildNodes(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.GetChildNodes(SiteMapNode)\n- uid: System.Web.SiteMapNodeCollection\n  parent: System.Web\n  isExternal: false\n  name: SiteMapNodeCollection\n  nameWithType: SiteMapNodeCollection\n  fullName: System.Web.SiteMapNodeCollection\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetCurrentNodeAndHintAncestorNodes(Int32)\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(Int32)\n  fullName: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(Int32,Int32)\n- uid: System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNode(SiteMapNode)\n  nameWithType: SiteMapProvider.GetParentNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.GetParentNode(SiteMapNode)\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(Int32,Int32)\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n  fullName: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(SiteMapNode,Int32,Int32)\n- uid: System.Web.SiteMapProvider.GetRootNodeCore\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetRootNodeCore()\n  nameWithType: SiteMapProvider.GetRootNodeCore()\n  fullName: System.Web.SiteMapProvider.GetRootNodeCore()\n- uid: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetRootNodeCoreFromProvider(SiteMapProvider)\n  nameWithType: SiteMapProvider.GetRootNodeCoreFromProvider(SiteMapProvider)\n  fullName: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(SiteMapProvider)\n- uid: System.Web.SiteMapProvider\n  parent: System.Web\n  isExternal: false\n  name: SiteMapProvider\n  nameWithType: SiteMapProvider\n  fullName: System.Web.SiteMapProvider\n- uid: System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: HintAncestorNodes(SiteMapNode,Int32)\n  nameWithType: SiteMapProvider.HintAncestorNodes(SiteMapNode,Int32)\n  fullName: System.Web.SiteMapProvider.HintAncestorNodes(SiteMapNode,Int32)\n- uid: System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n  nameWithType: SiteMapProvider.HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n  fullName: System.Web.SiteMapProvider.HintNeighborhoodNodes(SiteMapNode,Int32,Int32)\n- uid: System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SiteMapProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.SiteMapProvider.Initialize(String,NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: IsAccessibleToUser(HttpContext,SiteMapNode)\n  nameWithType: SiteMapProvider.IsAccessibleToUser(HttpContext,SiteMapNode)\n  fullName: System.Web.SiteMapProvider.IsAccessibleToUser(HttpContext,SiteMapNode)\n- uid: System.Web.SiteMapProvider.ParentProvider\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ParentProvider\n  nameWithType: SiteMapProvider.ParentProvider\n  fullName: System.Web.SiteMapProvider.ParentProvider\n- uid: System.Web.SiteMapProvider.RemoveNode(System.Web.SiteMapNode)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RemoveNode(SiteMapNode)\n  nameWithType: SiteMapProvider.RemoveNode(SiteMapNode)\n  fullName: System.Web.SiteMapProvider.RemoveNode(SiteMapNode)\n- uid: System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ResolveSiteMapNode(HttpContext)\n  nameWithType: SiteMapProvider.ResolveSiteMapNode(HttpContext)\n  fullName: System.Web.SiteMapProvider.ResolveSiteMapNode(HttpContext)\n- uid: System.Web.SiteMapProvider.ResourceKey\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ResourceKey\n  nameWithType: SiteMapProvider.ResourceKey\n  fullName: System.Web.SiteMapProvider.ResourceKey\n- uid: System.Web.SiteMapProvider.RootNode\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RootNode\n  nameWithType: SiteMapProvider.RootNode\n  fullName: System.Web.SiteMapProvider.RootNode\n- uid: System.Web.SiteMapProvider.RootProvider\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RootProvider\n  nameWithType: SiteMapProvider.RootProvider\n  fullName: System.Web.SiteMapProvider.RootProvider\n- uid: System.Web.SiteMapProvider.SecurityTrimmingEnabled\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: SecurityTrimmingEnabled\n  nameWithType: SiteMapProvider.SecurityTrimmingEnabled\n  fullName: System.Web.SiteMapProvider.SecurityTrimmingEnabled\n- uid: System.Web.SiteMapProvider.SiteMapResolve\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: SiteMapResolve\n  nameWithType: SiteMapProvider.SiteMapResolve\n  fullName: System.Web.SiteMapProvider.SiteMapResolve\n- uid: System.Web.SiteMapResolveEventHandler\n  parent: System.Web\n  isExternal: false\n  name: SiteMapResolveEventHandler\n  nameWithType: SiteMapResolveEventHandler\n  fullName: System.Web.SiteMapResolveEventHandler\n- uid: System.Web.SiteMapProvider.#ctor*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: SiteMapProvider\n  nameWithType: SiteMapProvider.SiteMapProvider\n- uid: System.Web.SiteMapProvider.AddNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: AddNode\n  nameWithType: SiteMapProvider.AddNode\n- uid: System.Web.SiteMapProvider.CurrentNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: CurrentNode\n  nameWithType: SiteMapProvider.CurrentNode\n- uid: System.Web.SiteMapProvider.EnableLocalization*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: EnableLocalization\n  nameWithType: SiteMapProvider.EnableLocalization\n- uid: System.Web.SiteMapProvider.FindSiteMapNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: FindSiteMapNode\n  nameWithType: SiteMapProvider.FindSiteMapNode\n- uid: System.Web.SiteMapProvider.FindSiteMapNodeFromKey*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: FindSiteMapNodeFromKey\n  nameWithType: SiteMapProvider.FindSiteMapNodeFromKey\n- uid: System.Web.SiteMapProvider.GetChildNodes*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetChildNodes\n  nameWithType: SiteMapProvider.GetChildNodes\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetCurrentNodeAndHintAncestorNodes\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintAncestorNodes\n- uid: System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetCurrentNodeAndHintNeighborhoodNodes\n  nameWithType: SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes\n- uid: System.Web.SiteMapProvider.GetParentNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNode\n  nameWithType: SiteMapProvider.GetParentNode\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNodeRelativeToCurrentNodeAndHintDownFromParent\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent\n- uid: System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetParentNodeRelativeToNodeAndHintDownFromParent\n  nameWithType: SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent\n- uid: System.Web.SiteMapProvider.GetRootNodeCore*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetRootNodeCore\n  nameWithType: SiteMapProvider.GetRootNodeCore\n- uid: System.Web.SiteMapProvider.GetRootNodeCoreFromProvider*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: GetRootNodeCoreFromProvider\n  nameWithType: SiteMapProvider.GetRootNodeCoreFromProvider\n- uid: System.Web.SiteMapProvider.HintAncestorNodes*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: HintAncestorNodes\n  nameWithType: SiteMapProvider.HintAncestorNodes\n- uid: System.Web.SiteMapProvider.HintNeighborhoodNodes*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: HintNeighborhoodNodes\n  nameWithType: SiteMapProvider.HintNeighborhoodNodes\n- uid: System.Web.SiteMapProvider.Initialize*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: SiteMapProvider.Initialize\n- uid: System.Web.SiteMapProvider.IsAccessibleToUser*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: IsAccessibleToUser\n  nameWithType: SiteMapProvider.IsAccessibleToUser\n- uid: System.Web.SiteMapProvider.ParentProvider*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ParentProvider\n  nameWithType: SiteMapProvider.ParentProvider\n- uid: System.Web.SiteMapProvider.RemoveNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RemoveNode\n  nameWithType: SiteMapProvider.RemoveNode\n- uid: System.Web.SiteMapProvider.ResolveSiteMapNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ResolveSiteMapNode\n  nameWithType: SiteMapProvider.ResolveSiteMapNode\n- uid: System.Web.SiteMapProvider.ResourceKey*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: ResourceKey\n  nameWithType: SiteMapProvider.ResourceKey\n- uid: System.Web.SiteMapProvider.RootNode*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RootNode\n  nameWithType: SiteMapProvider.RootNode\n- uid: System.Web.SiteMapProvider.RootProvider*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: RootProvider\n  nameWithType: SiteMapProvider.RootProvider\n- uid: System.Web.SiteMapProvider.SecurityTrimmingEnabled*\n  parent: System.Web.SiteMapProvider\n  isExternal: false\n  name: SecurityTrimmingEnabled\n  nameWithType: SiteMapProvider.SecurityTrimmingEnabled\n"}