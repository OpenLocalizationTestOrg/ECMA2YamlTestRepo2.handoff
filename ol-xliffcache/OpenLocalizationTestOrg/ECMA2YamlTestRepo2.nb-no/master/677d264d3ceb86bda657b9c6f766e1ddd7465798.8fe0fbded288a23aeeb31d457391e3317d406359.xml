{"nodes":[{"pos":[536,658],"content":"Represents the base class for the Data Encryption Standard (DES) algorithm from which all DES implementations must derive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class for the Data Encryption Standard (DES) algorithm from which all DES implementations must derive.","pos":[0,122]}]},{"pos":[671,988],"content":"This algorithm supports a key length of 64 bits.      > [!NOTE] >  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the DES class. Use DES only for compatibility with legacy applications and data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[54,157],"source":"      > [!NOTE] >  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available."},{"content":"Consider using the &lt;xref:System.Security.Cryptography.Aes&gt; class instead of the DES class.","pos":[158,248],"source":" Consider using the <xref:System.Security.Cryptography.Aes> class instead of the DES class."},{"content":"Use DES only for compatibility with legacy applications and data.","pos":[249,314]}]},{"pos":[4337,4431],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DES\"></xref> class."},{"pos":[4444,5033],"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|","pos":[0,581],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code will create a new instance of a derived class.","pos":[52,115]},{"content":"This method initializes the protected fields of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; class to the default values shown in the following table.","pos":[122,286],"source":"       This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table."},{"content":"|Field|Default Value|   |-----------|-------------------|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&gt;|64|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;|64|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue&gt;|64|","pos":[292,581],"source":"      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|"}]}]},{"pos":[5505,5657],"content":"Creates an instance of a cryptographic object to perform the Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) algorithm.","needQuote":true,"needEscape":true,"source":"Creates an instance of a cryptographic object to perform the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."},{"pos":[5669,5795],"content":"Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Creates an instance of the &lt;xref:System.Security.Cryptography.DES&gt; object that can be used for encrypting and decrypting data.","pos":[0,126],"source":"Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data."}]},{"pos":[6933,6956],"content":"A cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cryptographic object.","pos":[0,23]}]},{"pos":[7416,7600],"content":"Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) algorithm.","needQuote":true,"needEscape":true,"source":"Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."},{"pos":[8786,8890],"content":"The name of the specific implementation of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use.","needQuote":true,"needEscape":true,"source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.DES\"></xref> to use."},{"pos":[8967,8990],"content":"A cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cryptographic object.","pos":[0,23]}]},{"pos":[9485,9535],"content":"Determines whether the specified key is semi-weak.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified key is semi-weak.","pos":[0,50]}]},{"pos":[9548,10209],"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.       Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.       Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.","pos":[0,659],"nodes":[{"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break.","pos":[0,79]},{"content":"If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.","pos":[80,220]},{"content":"There are six known semi-weak key pairs for the Data Encryption Standard (&lt;xref:System.Security.Cryptography.DES&gt;) algorithm; this method checks for those semi-weak keys.","pos":[221,391],"source":" There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys."},{"content":"Attempting to set a semi-weak key results in a &lt;xref:System.Security.Cryptography.CryptographicException&gt;.","pos":[398,504],"source":"       Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>."},{"content":"When &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt; is called to create a random key, a semi-weak key will never be returned.","pos":[505,659],"source":" When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned."}]}]},{"pos":[10362,10403],"content":"The secret key to test for semi-weakness.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to test for semi-weakness.","pos":[0,41]}]},{"pos":[10462,10622],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is semi-weak; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is semi-weak; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10845,10904],"content":"The size of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The size of the <code>rgbKey</code> parameter is not valid."},{"pos":[11309,11354],"content":"Determines whether the specified key is weak.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified key is weak.","pos":[0,45]}]},{"pos":[11367,11975],"content":"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.       Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.       Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.","pos":[0,606],"nodes":[{"content":"Weak keys are keys that result in ciphers that are easy to break.","pos":[0,65]},{"content":"If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.","pos":[66,191]},{"content":"There are four known weak keys for the Data Encryption Standard (&lt;xref:System.Security.Cryptography.DES&gt;) algorithm; this method checks for those weak keys.","pos":[192,348],"source":" There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys."},{"content":"Attempting to set a weak key results in a &lt;xref:System.Security.Cryptography.CryptographicException&gt;.","pos":[355,456],"source":"       Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>."},{"content":"When &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt; is called to create a random key, a weak key will never be returned.","pos":[457,606],"source":" When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned."}]}]},{"pos":[12124,12160],"content":"The secret key to test for weakness.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to test for weakness.","pos":[0,36]}]},{"pos":[12219,12374],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is weak; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is weak; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12593,12652],"content":"The size of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The size of the <code>rgbKey</code> parameter is not valid."},{"pos":[12975,13102],"content":"Gets or sets the secret key for the Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) algorithm.","needQuote":true,"needEscape":true,"source":"Gets or sets the secret key for the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."},{"pos":[13115,13443],"content":"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.       The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.       This algorithm supports a key length of 64 bits.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is <ph id=\"ph1\">`null`</ph> when it is used, &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt; is called to create a new random value.","pos":[0,153],"source":"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value."},{"content":"The length of the key must be equal to &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;.","pos":[160,269],"source":"       The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>."},{"content":"This algorithm supports a key length of 64 bits.","pos":[276,324]}]},{"pos":[13566,13653],"content":"The secret key for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"The secret key for the <xref href=\"System.Security.Cryptography.DES\"></xref> algorithm."},{"pos":[13820,13919],"content":"An attempt was made to set the key to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to set the key to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14014,14160],"content":"An attempt was made to set a key whose length is not equal to <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to set a key whose length is not equal to <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"></xref>."},{"pos":[14309,14484],"content":"An attempt was made to set a weak key (see &lt;xref:System.Security.Cryptography.DES.IsWeakKey<bpt id=\"p1\">*</bpt>&gt;) or a semi-weak key (see &lt;xref:System.Security.Cryptography.DES.IsSemiWeakKey<ept id=\"p1\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"An attempt was made to set a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey*>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey*>)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DES\n  id: DES\n  children:\n  - System.Security.Cryptography.DES.#ctor\n  - System.Security.Cryptography.DES.Create\n  - System.Security.Cryptography.DES.Create(System.String)\n  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.Key\n  langs:\n  - csharp\n  name: DES\n  nameWithType: DES\n  fullName: System.Security.Cryptography.DES\n  type: Class\n  summary: Represents the base class for the Data Encryption Standard (DES) algorithm from which all DES implementations must derive.\n  remarks: \"This algorithm supports a key length of 64 bits.  \\n  \\n> [!NOTE]\\n>  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the DES class. Use DES only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of DES) to encrypt a string to an in-memory buffer. It then decrypts and displays the round-tripped string.  \\n  \\n [!code-vb[TripleDESCryptoServiceProvider#1](~/add/codesnippet/visualbasic/t-system.security.crypto_29_1.vb)]\\n [!code-cs[TripleDESCryptoServiceProvider#1](~/add/codesnippet/csharp/t-system.security.crypto_29_1.cs)]  \\n  \\n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: DES()\n  nameWithType: DES.DES()\n  fullName: System.Security.Cryptography.DES.DES()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DES\"></xref> class.\n  remarks: \"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \\n  \\n This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.  \\n  \\n|Field|Default Value|  \\n|-----------|-------------------|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|\"\n  syntax:\n    content: protected DES ();\n    parameters: []\n  overload: System.Security.Cryptography.DES.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.Create\n  id: Create\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: DES.Create()\n  fullName: System.Security.Cryptography.DES.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.  \\n  \\n [!code-vb[Cryptography.DES.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_69_1.vb)]\\n [!code-cpp[Cryptography.DES.Create.File#1](~/add/codesnippet/cpp/m-system.security.crypto_69_1.cpp)]\\n [!code-cs[Cryptography.DES.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_69_1.cs)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cs[Cryptography.DES.Create.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_69_2.cs)]\\n [!code-cpp[Cryptography.DES.Create.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_69_2.cpp)]\\n [!code-vb[Cryptography.DES.Create.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_69_2.vb)]\"\n  syntax:\n    content: public static System.Security.Cryptography.DES Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.DES\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.DES.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: DES.Create(String)\n  fullName: System.Security.Cryptography.DES.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.  \\n  \\n [!code-cs[Cryptography.DES.Createstring.File#1](~/add/codesnippet/csharp/m-system.security.crypto_27_1.cs)]\\n [!code-vb[Cryptography.DES.Createstring.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_27_1.vb)]\\n [!code-cpp[Cryptography.DES.Createstring.File#1](~/add/codesnippet/cpp/m-system.security.crypto_27_1.cpp)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cs[Cryptography.DES.Createstring.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_27_2.cs)]\\n [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_27_2.cpp)]\\n [!code-vb[Cryptography.DES.Createstring.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_27_2.vb)]\"\n  syntax:\n    content: public static System.Security.Cryptography.DES Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.DES\"></xref> to use.\n    return:\n      type: System.Security.Cryptography.DES\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.DES.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  id: IsSemiWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: IsSemiWeakKey(Byte[])\n  nameWithType: DES.IsSemiWeakKey(Byte[])\n  fullName: System.Security.Cryptography.DES.IsSemiWeakKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Determines whether the specified key is semi-weak.\n  remarks: \"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.  \\n  \\n Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.\"\n  syntax:\n    content: public static bool IsSemiWeakKey (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to test for semi-weakness.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is semi-weak; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.DES.IsSemiWeakKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the <code>rgbKey</code> parameter is not valid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  id: IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: IsWeakKey(Byte[])\n  nameWithType: DES.IsWeakKey(Byte[])\n  fullName: System.Security.Cryptography.DES.IsWeakKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Determines whether the specified key is weak.\n  remarks: \"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.  \\n  \\n Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.\"\n  syntax:\n    content: public static bool IsWeakKey (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to test for weakness.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is weak; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.DES.IsWeakKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the <code>rgbKey</code> parameter is not valid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DES.Key\n  id: Key\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Key\n  nameWithType: DES.Key\n  fullName: System.Security.Cryptography.DES.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the secret key for the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: \"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.  \\n  \\n The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.  \\n  \\n This algorithm supports a key length of 64 bits.\"\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The secret key for the <xref href=\"System.Security.Cryptography.DES\"></xref> algorithm.\n  overload: System.Security.Cryptography.DES.Key*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt was made to set the key to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt was made to set a key whose length is not equal to <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: An attempt was made to set a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey*>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey*>).\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.DES.#ctor\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: DES()\n  nameWithType: DES.DES()\n  fullName: System.Security.Cryptography.DES.DES()\n- uid: System.Security.Cryptography.DES.Create\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create()\n  nameWithType: DES.Create()\n  fullName: System.Security.Cryptography.DES.Create()\n- uid: System.Security.Cryptography.DES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DES\n  nameWithType: DES\n  fullName: System.Security.Cryptography.DES\n- uid: System.Security.Cryptography.DES.Create(System.String)\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create(String)\n  nameWithType: DES.Create(String)\n  fullName: System.Security.Cryptography.DES.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsSemiWeakKey(Byte[])\n  nameWithType: DES.IsSemiWeakKey(Byte[])\n  fullName: System.Security.Cryptography.DES.IsSemiWeakKey(Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsWeakKey(Byte[])\n  nameWithType: DES.IsWeakKey(Byte[])\n  fullName: System.Security.Cryptography.DES.IsWeakKey(Byte[])\n- uid: System.Security.Cryptography.DES.Key\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Key\n  nameWithType: DES.Key\n  fullName: System.Security.Cryptography.DES.Key\n- uid: System.Security.Cryptography.DES.#ctor*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: DES\n  nameWithType: DES.DES\n- uid: System.Security.Cryptography.DES.Create*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create\n  nameWithType: DES.Create\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsSemiWeakKey\n  nameWithType: DES.IsSemiWeakKey\n- uid: System.Security.Cryptography.DES.IsWeakKey*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsWeakKey\n  nameWithType: DES.IsWeakKey\n- uid: System.Security.Cryptography.DES.Key*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Key\n  nameWithType: DES.Key\n"}