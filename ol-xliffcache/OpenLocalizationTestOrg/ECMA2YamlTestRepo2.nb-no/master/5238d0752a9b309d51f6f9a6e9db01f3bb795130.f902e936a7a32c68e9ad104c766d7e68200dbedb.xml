{"nodes":[{"pos":[470,574],"content":"Defines a control inside a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control as a postback control.","needQuote":true,"needEscape":true,"source":"Defines a control inside a <xref href=\"System.Web.UI.UpdatePanel\"></xref> control as a postback control."},{"pos":[587,1319],"content":"Use the PostBackTrigger control to enable controls inside an <xref:System.Web.UI.UpdatePanel> to cause a postback instead of performing an asynchronous postback.       Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control to programmatically register a postback control. You can then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the trigger control performs a postback.      > [!NOTE] >  Programmatically adding PostBackTrigger controls is not supported.       If a control is set as both a PostBackTrigger and <xref:System.Web.UI.AsyncPostBackTrigger> control, an exception is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the PostBackTrigger control to enable controls inside an &lt;xref:System.Web.UI.UpdatePanel&gt; to cause a postback instead of performing an asynchronous postback.","pos":[0,161],"source":"Use the PostBackTrigger control to enable controls inside an <xref:System.Web.UI.UpdatePanel> to cause a postback instead of performing an asynchronous postback."},{"content":"Use the &lt;xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A&gt; method of the &lt;xref:System.Web.UI.ScriptManager&gt; control to programmatically register a postback control.","pos":[168,343],"source":"       Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control to programmatically register a postback control."},{"content":"You can then call the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method of the &lt;xref:System.Web.UI.UpdatePanel&gt; control when the trigger control performs a postback.","pos":[344,509],"source":" You can then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the trigger control performs a postback."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Programmatically adding PostBackTrigger controls is not supported.","pos":[515,594],"source":"      > [!NOTE] >  Programmatically adding PostBackTrigger controls is not supported."},{"content":"If a control is set as both a PostBackTrigger and &lt;xref:System.Web.UI.AsyncPostBackTrigger&gt; control, an exception is thrown.","pos":[601,725],"source":"       If a control is set as both a PostBackTrigger and <xref:System.Web.UI.AsyncPostBackTrigger> control, an exception is thrown."}]},{"pos":[2897,2988],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.PostBackTrigger\"></xref> class."},{"pos":[3000,3320],"content":"To create a new <xref:System.Web.UI.PostBackTrigger> object, use the **UpdatePanelTrigger Collection Editor** dialog box in the designer or create a `<Triggers>` element declaratively in the <xref:System.Web.UI.UpdatePanel> control. Programmatically adding <xref:System.Web.UI.PostBackTrigger> controls is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To create a new &lt;xref:System.Web.UI.PostBackTrigger&gt; object, use the <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box in the designer or create a <ph id=\"ph1\">`&lt;Triggers&gt;`</ph> element declaratively in the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,232],"source":"To create a new <xref:System.Web.UI.PostBackTrigger> object, use the **UpdatePanelTrigger Collection Editor** dialog box in the designer or create a `<Triggers>` element declaratively in the <xref:System.Web.UI.UpdatePanel> control."},{"content":"Programmatically adding &lt;xref:System.Web.UI.PostBackTrigger&gt; controls is not supported.","pos":[233,320],"source":" Programmatically adding <xref:System.Web.UI.PostBackTrigger> controls is not supported."}]},{"pos":[3809,3978],"content":"Gets or sets the name of the control that is an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for an <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the control that is an <xref href=\"System.Web.UI.PostBackTrigger\"></xref> control for an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[4097,4142],"content":"A string that represents a server control ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents a server control ID.","pos":[0,45]}]},{"pos":[4585,4650],"content":"Returns a value that indicates whether the trigger was activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the trigger was activated.","pos":[0,65]}]},{"pos":[4662,5001],"content":"Control developers can override the HasTriggered property to provide custom logic for determining whether the trigger was activated. To see your custom trigger appear at design time in the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive on the page or in the  section of the Web.config file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Control developers can override the HasTriggered property to provide custom logic for determining whether the trigger was activated.","pos":[0,132]},{"content":"To see your custom trigger appear at design time in the <ph id=\"ph1\">`&lt;Triggers&gt;`</ph> element of the &lt;xref:System.Web.UI.UpdatePanel&gt; control, you can add an  directive on the page or in the  section of the Web.config file.","pos":[133,339],"source":" To see your custom trigger appear at design time in the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive on the page or in the  section of the Web.config file."}]},{"pos":[5143,5308],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the trigger was activated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the trigger was activated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5744,5818],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object."},{"pos":[6323,6426],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object."},{"pos":[6562,6657],"content":"A string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A string that represents the current <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.PostBackTrigger\n  id: PostBackTrigger\n  children:\n  - System.Web.UI.PostBackTrigger.#ctor\n  - System.Web.UI.PostBackTrigger.ControlID\n  - System.Web.UI.PostBackTrigger.HasTriggered\n  - System.Web.UI.PostBackTrigger.Initialize\n  - System.Web.UI.PostBackTrigger.ToString\n  langs:\n  - csharp\n  name: PostBackTrigger\n  nameWithType: PostBackTrigger\n  fullName: System.Web.UI.PostBackTrigger\n  type: Class\n  summary: Defines a control inside a <xref href=\"System.Web.UI.UpdatePanel\"></xref> control as a postback control.\n  remarks: \"Use the PostBackTrigger control to enable controls inside an <xref:System.Web.UI.UpdatePanel> to cause a postback instead of performing an asynchronous postback.  \\n  \\n Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control to programmatically register a postback control. You can then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the trigger control performs a postback.  \\n  \\n> [!NOTE]\\n>  Programmatically adding PostBackTrigger controls is not supported.  \\n  \\n If a control is set as both a PostBackTrigger and <xref:System.Web.UI.AsyncPostBackTrigger> control, an exception is thrown.\"\n  example:\n  - \"The following example shows how to declaratively define a PostBackTrigger control for an <xref:System.Web.UI.UpdatePanel> control. In the panel, a <xref:System.Web.UI.WebControls.FileUpload> control enables users to upload a file. Users must first check whether the file to upload exists. The <xref:System.Web.UI.WebControls.Button> control that calls the event handler to check the file name causes an asynchronous postback. However, the <xref:System.Web.UI.WebControls.Button> control that uploads the file is registered as a PostBackTrigger, because files cannot be uploaded asynchronously.  \\n  \\n [!code-vb[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.postback_1_1.aspx)]\\n [!code-cs[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.postback_1_1.aspx)]\"\n  syntax:\n    content: 'public class PostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'\n  inheritance:\n  - System.Object\n  - System.Web.UI.UpdatePanelTrigger\n  - System.Web.UI.UpdatePanelControlTrigger\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)\n  - System.Web.UI.UpdatePanelTrigger.Owner\n  platform:\n  - net462\n- uid: System.Web.UI.PostBackTrigger.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.PostBackTrigger\n  langs:\n  - csharp\n  name: PostBackTrigger()\n  nameWithType: PostBackTrigger.PostBackTrigger()\n  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.PostBackTrigger\"></xref> class.\n  remarks: To create a new <xref:System.Web.UI.PostBackTrigger> object, use the **UpdatePanelTrigger Collection Editor** dialog box in the designer or create a `<Triggers>` element declaratively in the <xref:System.Web.UI.UpdatePanel> control. Programmatically adding <xref:System.Web.UI.PostBackTrigger> controls is not supported.\n  syntax:\n    content: public PostBackTrigger ();\n    parameters: []\n  overload: System.Web.UI.PostBackTrigger.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PostBackTrigger.ControlID\n  id: ControlID\n  parent: System.Web.UI.PostBackTrigger\n  langs:\n  - csharp\n  name: ControlID\n  nameWithType: PostBackTrigger.ControlID\n  fullName: System.Web.UI.PostBackTrigger.ControlID\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the control that is an <xref href=\"System.Web.UI.PostBackTrigger\"></xref> control for an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  syntax:\n    content: public string ControlID { get; set; }\n    return:\n      type: System.String\n      description: A string that represents a server control ID.\n  overload: System.Web.UI.PostBackTrigger.ControlID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PostBackTrigger.HasTriggered\n  id: HasTriggered\n  parent: System.Web.UI.PostBackTrigger\n  langs:\n  - csharp\n  name: HasTriggered()\n  nameWithType: PostBackTrigger.HasTriggered()\n  fullName: System.Web.UI.PostBackTrigger.HasTriggered()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns a value that indicates whether the trigger was activated.\n  remarks: Control developers can override the HasTriggered property to provide custom logic for determining whether the trigger was activated. To see your custom trigger appear at design time in the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive on the page or in the  section of the Web.config file.\n  syntax:\n    content: protected override bool HasTriggered ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the trigger was activated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.PostBackTrigger.HasTriggered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PostBackTrigger.Initialize\n  id: Initialize\n  parent: System.Web.UI.PostBackTrigger\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: PostBackTrigger.Initialize()\n  fullName: System.Web.UI.PostBackTrigger.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes the <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object.\n  syntax:\n    content: protected override void Initialize ();\n    parameters: []\n  overload: System.Web.UI.PostBackTrigger.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.PostBackTrigger.ToString\n  id: ToString\n  parent: System.Web.UI.PostBackTrigger\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PostBackTrigger.ToString()\n  fullName: System.Web.UI.PostBackTrigger.ToString()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns a string that represents the current <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Web.UI.PostBackTrigger\"></xref> object.\n  overload: System.Web.UI.PostBackTrigger.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.UpdatePanelControlTrigger\n  isExternal: false\n  name: System.Web.UI.UpdatePanelControlTrigger\n- uid: System.Web.UI.PostBackTrigger.#ctor\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: PostBackTrigger()\n  nameWithType: PostBackTrigger.PostBackTrigger()\n  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()\n- uid: System.Web.UI.PostBackTrigger.ControlID\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: ControlID\n  nameWithType: PostBackTrigger.ControlID\n  fullName: System.Web.UI.PostBackTrigger.ControlID\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.PostBackTrigger.HasTriggered\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: HasTriggered()\n  nameWithType: PostBackTrigger.HasTriggered()\n  fullName: System.Web.UI.PostBackTrigger.HasTriggered()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.PostBackTrigger.Initialize\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: Initialize()\n  nameWithType: PostBackTrigger.Initialize()\n  fullName: System.Web.UI.PostBackTrigger.Initialize()\n- uid: System.Web.UI.PostBackTrigger.ToString\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: ToString()\n  nameWithType: PostBackTrigger.ToString()\n  fullName: System.Web.UI.PostBackTrigger.ToString()\n- uid: System.Web.UI.PostBackTrigger.#ctor*\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: PostBackTrigger\n  nameWithType: PostBackTrigger.PostBackTrigger\n- uid: System.Web.UI.PostBackTrigger.ControlID*\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: ControlID\n  nameWithType: PostBackTrigger.ControlID\n- uid: System.Web.UI.PostBackTrigger.HasTriggered*\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: HasTriggered\n  nameWithType: PostBackTrigger.HasTriggered\n- uid: System.Web.UI.PostBackTrigger.Initialize*\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: Initialize\n  nameWithType: PostBackTrigger.Initialize\n- uid: System.Web.UI.PostBackTrigger.ToString*\n  parent: System.Web.UI.PostBackTrigger\n  isExternal: false\n  name: ToString\n  nameWithType: PostBackTrigger.ToString\n"}