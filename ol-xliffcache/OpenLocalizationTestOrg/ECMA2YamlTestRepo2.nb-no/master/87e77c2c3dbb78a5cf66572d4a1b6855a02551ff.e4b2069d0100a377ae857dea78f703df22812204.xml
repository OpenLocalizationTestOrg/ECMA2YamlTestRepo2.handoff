{"nodes":[{"pos":[511,932],"content":"The ManagementEnumerator attribute marks a method that returns all the instances of a WMI class.       Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ManagementEnumerator attribute marks a method that returns all the instances of a WMI class.","pos":[0,96]},{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[103,296]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[297,419],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]},{"pos":[945,1133],"content":"The method must be static and public. It must return a collection of all instances of the WMI class. The collection can be of any type convertible to <xref:System.Collections.IEnumerable>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method must be static and public. It must return a collection of all instances of the WMI class. The collection can be of any type convertible to <xref:System.Collections.IEnumerable>.","pos":[0,188],"nodes":[{"content":"The method must be static and public.","pos":[0,37]},{"content":"It must return a collection of all instances of the WMI class.","pos":[38,100]},{"content":"The collection can be of any type convertible to &lt;xref:System.Collections.IEnumerable&gt;.","pos":[101,188],"source":" The collection can be of any type convertible to <xref:System.Collections.IEnumerable>."}]}]},{"pos":[2798,2893],"content":"Initializes a new instance of the <xref:System.Management.ManagementEnumeratorAttribute> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the &lt;xref:System.Management.ManagementEnumeratorAttribute&gt; class.","pos":[0,95],"source":"Initializes a new instance of the <xref:System.Management.ManagementEnumeratorAttribute> class."}]},{"pos":[3541,3677],"content":"Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.","pos":[0,136]}]},{"pos":[3689,3859],"content":"If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the returned type is &lt;xref:System.Object?displayProperty=fullName&gt;, then the output should be treated as a value of type &lt;xref:System.Object?displayProperty=fullName&gt;.","pos":[0,170],"source":"If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>."}]},{"pos":[3971,4148],"content":"A &lt;xref:System.Type&gt; value that indicates the type of output that the method marked with the <bpt id=\"p1\">[</bpt>ManagementEnumerator<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> attribute will output.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> value that indicates the type of output that the method marked with the [ManagementEnumerator](~/add/includes/ajax-current-ext-md.md) attribute will output."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  id: ManagementEnumeratorAttribute\n  children:\n  - System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor\n  - System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema\n  langs:\n  - csharp\n  name: ManagementEnumeratorAttribute\n  nameWithType: ManagementEnumeratorAttribute\n  fullName: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  type: Class\n  summary: \"The ManagementEnumerator attribute marks a method that returns all the instances of a WMI class.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  remarks: The method must be static and public. It must return a collection of all instances of the WMI class. The collection can be of any type convertible to <xref:System.Collections.IEnumerable>.\n  example:\n  - \"The following example shows how to use the Enumerator attribute to mark a method that is used to enumerate instances of a class. In this case, the Enumerate method uses the <xref:System.Diagnostics.Process> class to retrieve all of the processes running on the computer.  \\n  \\n [C#]  \\n  \\n```  \\n[ManagementEnumerator]  \\npublic static IEnumerable Enumerate()  \\n{  \\n   Process[] rgProcesses = Process.GetProcesses();  \\n   for (int i = 0; i < rgProcesses.Length; i++)  \\n   {  \\n      yield return new ProcessProvider(rgProcesses[i]);  \\n   }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)]\n\n      public sealed class ManagementEnumeratorAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute\n  inheritance:\n  - System.Attribute\n  - System.Management.Instrumentation.ManagementMemberAttribute\n  - System.Management.Instrumentation.ManagementNewInstanceAttribute\n  implements: []\n  inheritedMembers:\n  - System.Management.Instrumentation.ManagementMemberAttribute.Name\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor\n  id: '#ctor'\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  langs:\n  - csharp\n  name: ManagementEnumeratorAttribute()\n  nameWithType: ManagementEnumeratorAttribute.ManagementEnumeratorAttribute()\n  fullName: System.Management.Instrumentation.ManagementEnumeratorAttribute.ManagementEnumeratorAttribute()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref:System.Management.ManagementEnumeratorAttribute> class.\n  syntax:\n    content: public ManagementEnumeratorAttribute ();\n    parameters: []\n  overload: System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema\n  id: Schema\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  langs:\n  - csharp\n  name: Schema\n  nameWithType: ManagementEnumeratorAttribute.Schema\n  fullName: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.\n  remarks: If the returned type is <xref:System.Object?displayProperty=fullName>, then the output should be treated as a value of type <xref:System.Object?displayProperty=fullName>.\n  syntax:\n    content: public Type Schema { get; set; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> value that indicates the type of output that the method marked with the [ManagementEnumerator](~/add/includes/ajax-current-ext-md.md) attribute will output.\n  overload: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Management.Instrumentation.ManagementNewInstanceAttribute\n  isExternal: false\n  name: System.Management.Instrumentation.ManagementNewInstanceAttribute\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  isExternal: false\n  name: ManagementEnumeratorAttribute()\n  nameWithType: ManagementEnumeratorAttribute.ManagementEnumeratorAttribute()\n  fullName: System.Management.Instrumentation.ManagementEnumeratorAttribute.ManagementEnumeratorAttribute()\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  isExternal: false\n  name: Schema\n  nameWithType: ManagementEnumeratorAttribute.Schema\n  fullName: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor*\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  isExternal: false\n  name: ManagementEnumeratorAttribute\n  nameWithType: ManagementEnumeratorAttribute.ManagementEnumeratorAttribute\n- uid: System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema*\n  parent: System.Management.Instrumentation.ManagementEnumeratorAttribute\n  isExternal: false\n  name: Schema\n  nameWithType: ManagementEnumeratorAttribute.Schema\n"}