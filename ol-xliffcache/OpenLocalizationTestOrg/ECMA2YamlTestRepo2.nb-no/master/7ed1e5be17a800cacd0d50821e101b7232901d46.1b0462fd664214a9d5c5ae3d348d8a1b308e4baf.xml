{"nodes":[{"pos":[1172,1184],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2938,2950],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3852,3864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3922,3934],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4614,4626],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5542,5554],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6309,6321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7284,7296],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7358,7370],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8011,8023],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.AttachedProperty`1\n  id: AttachedProperty`1\n  children:\n  - System.Activities.Presentation.Model.AttachedProperty`1.#ctor\n  - System.Activities.Presentation.Model.AttachedProperty`1.Getter\n  - System.Activities.Presentation.Model.AttachedProperty`1.GetValue(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty`1.IsReadOnly\n  - System.Activities.Presentation.Model.AttachedProperty`1.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty`1.Setter\n  - System.Activities.Presentation.Model.AttachedProperty`1.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  - System.Activities.Presentation.Model.AttachedProperty`1.Type\n  langs:\n  - csharp\n  name: AttachedProperty<T>\n  nameWithType: AttachedProperty<T>\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>\n  type: Class\n  syntax:\n    content: 'public class AttachedProperty<T> : System.Activities.Presentation.Model.AttachedProperty'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.Model.AttachedProperty\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n  - System.Activities.Presentation.Model.AttachedProperty.Name\n  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty.OwnerType\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: AttachedProperty()\n  nameWithType: AttachedProperty<T>.AttachedProperty()\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.AttachedProperty()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public AttachedProperty ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Getter\n  id: Getter\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: Getter\n  nameWithType: AttachedProperty<T>.Getter\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Getter\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public Func<System.Activities.Presentation.Model.ModelItem,T> Getter { get; set; }\n    return:\n      type: System.Func{System.Activities.Presentation.Model.ModelItem,T}\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.Getter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.GetValue(System.Activities.Presentation.Model.ModelItem)\n  id: GetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: GetValue(ModelItem)\n  nameWithType: AttachedProperty<T>.GetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.GetValue(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public override object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: AttachedProperty<T>.IsReadOnly\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  id: ResetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: ResetValue(ModelItem)\n  nameWithType: AttachedProperty<T>.ResetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.ResetValue(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public override void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.ResetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Setter\n  id: Setter\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: Setter\n  nameWithType: AttachedProperty<T>.Setter\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Setter\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public Action<System.Activities.Presentation.Model.ModelItem,T> Setter { get; set; }\n    return:\n      type: System.Action{System.Activities.Presentation.Model.ModelItem,T}\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.Setter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: SetValue(ModelItem,Object)\n  nameWithType: AttachedProperty<T>.SetValue(ModelItem,Object)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.SetValue(ModelItem,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public override void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object Value);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: To be added.\n    - id: Value\n      type: System.Object\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Type\n  id: Type\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  langs:\n  - csharp\n  name: Type\n  nameWithType: AttachedProperty<T>.Type\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Type\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public override Type Type { get; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Activities.Presentation.Model.AttachedProperty`1.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: System.Activities.Presentation.Model.AttachedProperty\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.#ctor\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: AttachedProperty()\n  nameWithType: AttachedProperty<T>.AttachedProperty()\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.AttachedProperty()\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Getter\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Getter\n  nameWithType: AttachedProperty<T>.Getter\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Getter\n- uid: System.Func{System.Activities.Presentation.Model.ModelItem,T}\n  parent: System\n  isExternal: true\n  name: Func<ModelItem,T>\n  nameWithType: Func<ModelItem,T>\n  fullName: System.Func<System.Activities.Presentation.Model.ModelItem,T>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.Presentation.Model.ModelItem,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.GetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: GetValue(ModelItem)\n  nameWithType: AttachedProperty<T>.GetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.GetValue(ModelItem)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.Model.ModelItem\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: ModelItem\n  nameWithType: ModelItem\n  fullName: System.Activities.Presentation.Model.ModelItem\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.IsReadOnly\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: AttachedProperty<T>.IsReadOnly\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: ResetValue(ModelItem)\n  nameWithType: AttachedProperty<T>.ResetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.ResetValue(ModelItem)\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Setter\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Setter\n  nameWithType: AttachedProperty<T>.Setter\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Setter\n- uid: System.Action{System.Activities.Presentation.Model.ModelItem,T}\n  parent: System\n  isExternal: true\n  name: Action<ModelItem,T>\n  nameWithType: Action<ModelItem,T>\n  fullName: System.Action<System.Activities.Presentation.Model.ModelItem,T>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Activities.Presentation.Model.ModelItem,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: SetValue(ModelItem,Object)\n  nameWithType: AttachedProperty<T>.SetValue(ModelItem,Object)\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.SetValue(ModelItem,Object)\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Type\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Type\n  nameWithType: AttachedProperty<T>.Type\n  fullName: System.Activities.Presentation.Model.AttachedProperty<T>.Type\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.#ctor*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: AttachedProperty<T>\n  nameWithType: AttachedProperty<T>.AttachedProperty<T>\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Getter*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Getter\n  nameWithType: AttachedProperty<T>.Getter\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.GetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: GetValue\n  nameWithType: AttachedProperty<T>.GetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.IsReadOnly*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: AttachedProperty<T>.IsReadOnly\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.ResetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: ResetValue\n  nameWithType: AttachedProperty<T>.ResetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Setter*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Setter\n  nameWithType: AttachedProperty<T>.Setter\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.SetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: SetValue\n  nameWithType: AttachedProperty<T>.SetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty`1.Type*\n  parent: System.Activities.Presentation.Model.AttachedProperty`1\n  isExternal: false\n  name: Type\n  nameWithType: AttachedProperty<T>.Type\n"}