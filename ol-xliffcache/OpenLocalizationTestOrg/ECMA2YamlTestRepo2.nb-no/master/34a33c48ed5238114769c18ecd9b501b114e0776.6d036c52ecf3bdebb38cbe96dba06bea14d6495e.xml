{"nodes":[{"pos":[1171,1283],"content":"Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.","pos":[0,112]}]},{"pos":[1296,1728],"content":"You can access any of the properties and methods of the ControlCollection class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> property. Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.       For more information about collections, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can access any of the properties and methods of the ControlCollection class through the &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; property.","pos":[0,167],"source":"You can access any of the properties and methods of the ControlCollection class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> property."},{"content":"Since the &lt;xref:System.Web.UI.Control&gt; class is the base class for all ASP.NET server controls, all server controls inherit this property.","pos":[168,306],"source":" Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property."},{"content":"For more information about collections, see <bpt id=\"p1\">[</bpt>Collections and Data Structures<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[313,430],"source":"       For more information about collections, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3269,3402],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified parent server control.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.ControlCollection\"></xref> class for the specified parent server control."},{"pos":[4209,4279],"content":"The ASP.NET server control that the control collection is created for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ASP.NET server control that the control collection is created for.","pos":[0,70]}]},{"pos":[4447,4554],"content":"Occurs if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">owner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs if the <code>owner</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4946,5033],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the collection.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Web.UI.Control\"></xref> object to the collection."},{"pos":[5046,5365],"content":"The new control is added to the end of an ordinal index array. The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.       To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The new control is added to the end of an ordinal index array. The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.       To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.","pos":[0,317],"nodes":[{"content":"The new control is added to the end of an ordinal index array.","pos":[0,62]},{"content":"The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.","pos":[63,182]},{"content":"To add a control to the collection at a specific index location, use the &lt;xref:System.Web.UI.ControlCollection.AddAt%2A&gt; method.","pos":[189,317],"source":"       To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method."}]}]},{"pos":[5939,6011],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> to add to the collection."},{"pos":[6177,6247],"content":"Thrown if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not specify a control.","needQuote":true,"needEscape":true,"source":"Thrown if the <code>child</code> parameter does not specify a control."},{"pos":[6342,6422],"content":"Thrown if the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"Thrown if the <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only."},{"pos":[6868,6987],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the collection at the specified index location.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Web.UI.Control\"></xref> object to the collection at the specified index location."},{"pos":[6999,7124],"content":"The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.","pos":[0,125]}]},{"pos":[7798,7858],"content":"The location in the array at which to add the child control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location in the array at which to add the child control.","pos":[0,60]}]},{"pos":[7928,8000],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> to add to the collection."},{"pos":[8168,8228],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not specify a control.","needQuote":true,"needEscape":true,"source":"The <code>child</code> parameter does not specify a control."},{"pos":[8343,8502],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero or greater than the <ph id=\"ph2\">&amp;lt;</ph>xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> property.","needQuote":true,"needEscape":true,"source":"The <code>index</code> parameter is less than zero or greater than the &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt; property."},{"pos":[8597,8667],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only."},{"pos":[9002,9117],"content":"Removes all controls from the current server control's <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all controls from the current server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[9129,9453],"content":"Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> and <xref:System.Web.UI.Control.DataBind%2A> methods. Do this when you develop composite, templated controls or templated data-bound controls.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> and <xref:System.Web.UI.Control.DataBind%2A> methods. Do this when you develop composite, templated controls or templated data-bound controls.","pos":[0,324],"nodes":[{"content":"Use this method to empty a custom control's &lt;xref:System.Web.UI.ControlCollection&gt; when you override the &lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName&gt; and &lt;xref:System.Web.UI.Control.DataBind%2A&gt; methods.","pos":[0,235],"source":"Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> and <xref:System.Web.UI.Control.DataBind%2A> methods."},{"content":"Do this when you develop composite, templated controls or templated data-bound controls.","pos":[236,324]}]}]},{"pos":[10647,10789],"content":"Determines whether the specified server control is in the parent server control's <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified server control is in the parent server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[11220,11271],"content":"The server control to search for in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control to search for in the collection.","pos":[0,51]}]},{"pos":[11330,11523],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified server control exists in the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified server control exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12021,12286],"content":"Copies the child controls stored in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to an <ph id=\"ph1\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object, beginning at the specified index location in the <ph id=\"ph3\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"Copies the child controls stored in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object to an &lt;xref:System.Array?displayProperty=fullName&gt; object, beginning at the specified index location in the &lt;xref:System.Array?displayProperty=fullName&gt;."},{"pos":[12439,12524],"content":"The &lt;xref:System.Array?displayProperty=fullName&gt; to copy the child controls to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> to copy the child controls to.","pos":[0,85],"source":"The &lt;xref:System.Array?displayProperty=fullName&gt; to copy the child controls to."}]},{"pos":[12585,12647],"content":"The zero-based relative index in <ph id=\"ph1\">`array`</ph> where copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based relative index in `array` where copying begins."},{"pos":[12808,12919],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and not one-dimensional.","needQuote":true,"needEscape":true,"source":"<code>array</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and not one-dimensional."},{"pos":[13250,13393],"content":"Gets the number of server controls in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the specified ASP.NET server control.","needQuote":true,"needEscape":true,"source":"Gets the number of server controls in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object for the specified ASP.NET server control."},{"pos":[14178,14268],"content":"The number of server controls in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of server controls in the <xref href=\"System.Web.UI.ControlCollection\"></xref>."},{"pos":[14711,14824],"content":"Retrieves an enumerator that can iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves an enumerator that can iterate through the <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[16035,16084],"content":"The enumerator to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The enumerator to iterate through the collection.","pos":[0,49]}]},{"pos":[16572,16675],"content":"Retrieves the index of a specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the collection.","needQuote":true,"needEscape":true,"source":"Retrieves the index of a specified <xref href=\"System.Web.UI.Control\"></xref> object in the collection."},{"pos":[16687,16820],"content":"Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to determine the index location of the specified server control in the &lt;xref:System.Web.UI.ControlCollection&gt; object.","pos":[0,133],"source":"Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object."}]},{"pos":[17494,17573],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which the index is returned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> for which the index is returned."},{"pos":[17630,17754],"content":"The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.","pos":[0,124],"nodes":[{"content":"The index of the specified server control.","pos":[0,42]},{"content":"If the server control is not currently a member of the collection, it returns -1.","pos":[43,124]}]}]},{"pos":[18180,18289],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is read-only.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.ControlCollection\"></xref> object is read-only."},{"pos":[19390,19633],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,243],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[20082,20194],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is synchronized.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.ControlCollection\"></xref> object is synchronized."},{"pos":[21299,21386],"content":"This property is always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21838,21976],"content":"Gets a reference to the server control at the specified index location in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a reference to the server control at the specified index location in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[22632,22727],"content":"The location of the server control in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The location of the server control in the <xref href=\"System.Web.UI.ControlCollection\"></xref>."},{"pos":[22793,22822],"content":"The reference to the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reference to the control.","pos":[0,29]}]},{"pos":[23001,23159],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero or greater than or equal to <ph id=\"ph2\">&amp;lt;</ph>xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"The <code>index</code> parameter is less than zero or greater than or equal to &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;."},{"pos":[23490,23603],"content":"Gets the ASP.NET server control to which the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object belongs.","needQuote":true,"needEscape":true,"source":"Gets the ASP.NET server control to which the <xref href=\"System.Web.UI.ControlCollection\"></xref> object belongs."},{"pos":[24382,24503],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> belongs.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.Control\"></xref> to which the <xref href=\"System.Web.UI.ControlCollection\"></xref> belongs."},{"pos":[24978,25108],"content":"Removes the specified server control from the parent server control's <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified server control from the parent server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[25120,25230],"content":"To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To remove a control from an index location, use the &lt;xref:System.Web.UI.ControlCollection.RemoveAt%2A&gt; method.","pos":[0,110],"source":"To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method."}]},{"pos":[25993,26026],"content":"The server control to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server control to be removed.","pos":[0,33]}]},{"pos":[26488,26615],"content":"Removes a child control, at the specified index location, from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes a child control, at the specified index location, from the <xref href=\"System.Web.UI.ControlCollection\"></xref> object."},{"pos":[26627,26751],"content":"To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To remove a control from the collection based on its value, use the &lt;xref:System.Web.UI.ControlCollection.Remove%2A&gt; method.","pos":[0,124],"source":"To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method."}]},{"pos":[27543,27617],"content":"The ordinal index of the server control to be removed from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ordinal index of the server control to be removed from the collection.","pos":[0,74]}]},{"pos":[27780,27860],"content":"Thrown if the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"Thrown if the <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only."},{"pos":[28206,28290],"content":"Gets an object that can be used to synchronize access to the collection of controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection of controls.","pos":[0,84]}]},{"pos":[29390,29450],"content":"The <xref:System.Object> used to synchronize the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; used to synchronize the collection.","pos":[0,60],"source":"The <xref:System.Object> used to synchronize the collection."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ControlCollection\n  id: ControlCollection\n  children:\n  - System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.Add(System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.Clear\n  - System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)\n  - System.Web.UI.ControlCollection.Count\n  - System.Web.UI.ControlCollection.GetEnumerator\n  - System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.IsReadOnly\n  - System.Web.UI.ControlCollection.IsSynchronized\n  - System.Web.UI.ControlCollection.Item(System.Int32)\n  - System.Web.UI.ControlCollection.Owner\n  - System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)\n  - System.Web.UI.ControlCollection.RemoveAt(System.Int32)\n  - System.Web.UI.ControlCollection.SyncRoot\n  langs:\n  - csharp\n  name: ControlCollection\n  nameWithType: ControlCollection\n  fullName: System.Web.UI.ControlCollection\n  type: Class\n  summary: Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.\n  remarks: \"You can access any of the properties and methods of the ControlCollection class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> property. Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.  \\n  \\n For more information about collections, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`. When created, the two controls are added to the ControlCollection. The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>. The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.  \\n  \\n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_0_1.vb)]\\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_0_1.cs)]\"\n  syntax:\n    content: 'public class ControlCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)\n  id: '#ctor(System.Web.UI.Control)'\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: ControlCollection(Control)\n  nameWithType: ControlCollection.ControlCollection(Control)\n  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.ControlCollection\"></xref> class for the specified parent server control.\n  remarks: ''\n  example:\n  - \"The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \\n  \\n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_10_1.cs)]\\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_10_1.vb)]\"\n  syntax:\n    content: public ControlCollection (System.Web.UI.Control owner);\n    parameters:\n    - id: owner\n      type: System.Web.UI.Control\n      description: The ASP.NET server control that the control collection is created for.\n  overload: System.Web.UI.ControlCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs if the <code>owner</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)\n  id: Add(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Add(Control)\n  nameWithType: ControlCollection.Add(Control)\n  fullName: System.Web.UI.ControlCollection.Add(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Adds the specified <xref href=\"System.Web.UI.Control\"></xref> object to the collection.\n  remarks: \"The new control is added to the end of an ordinal index array. The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.  \\n  \\n To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.\"\n  example:\n  - \"The following code example uses the Add method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.  \\n  \\n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_5_1.cs)]\\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_5_1.vb)]\"\n  syntax:\n    content: public virtual void Add (System.Web.UI.Control child);\n    parameters:\n    - id: child\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> to add to the collection.\n  overload: System.Web.UI.ControlCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Thrown if the <code>child</code> parameter does not specify a control.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Thrown if the <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)\n  id: AddAt(System.Int32,System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: AddAt(Int32,Control)\n  nameWithType: ControlCollection.AddAt(Int32,Control)\n  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Adds the specified <xref href=\"System.Web.UI.Control\"></xref> object to the collection at the specified index location.\n  remarks: The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.\n  example:\n  - \"The following code example uses the AddAt method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_0_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_0_1.aspx)]\"\n  syntax:\n    content: public virtual void AddAt (int index, System.Web.UI.Control child);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The location in the array at which to add the child control.\n    - id: child\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> to add to the collection.\n  overload: System.Web.UI.ControlCollection.AddAt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>child</code> parameter does not specify a control.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> parameter is less than zero or greater than the &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt; property.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Clear\n  id: Clear\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ControlCollection.Clear()\n  fullName: System.Web.UI.ControlCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes all controls from the current server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> and <xref:System.Web.UI.Control.DataBind%2A> methods. Do this when you develop composite, templated controls or templated data-bound controls.\n  example:\n  - \"The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method, and using the Clear method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object. In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.  \\n  \\n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_6_1.cs)]\\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_6_1.vb)]\"\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Web.UI.ControlCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)\n  id: Contains(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Contains(Control)\n  nameWithType: ControlCollection.Contains(Control)\n  fullName: System.Web.UI.ControlCollection.Contains(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the specified server control is in the parent server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_3_1.aspx)]\n     [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_3_1.aspx)]\n  syntax:\n    content: public virtual bool Contains (System.Web.UI.Control c);\n    parameters:\n    - id: c\n      type: System.Web.UI.Control\n      description: The server control to search for in the collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified server control exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: ControlCollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Copies the child controls stored in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object to an &lt;xref:System.Array?displayProperty=fullName&gt; object, beginning at the specified index location in the &lt;xref:System.Array?displayProperty=fullName&gt;.\n  syntax:\n    content: public virtual void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The &lt;xref:System.Array?displayProperty=fullName&gt; to copy the child controls to.\n    - id: index\n      type: System.Int32\n      description: The zero-based relative index in `array` where copying begins.\n  overload: System.Web.UI.ControlCollection.CopyTo*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: <code>array</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and not one-dimensional.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Count\n  id: Count\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ControlCollection.Count\n  fullName: System.Web.UI.ControlCollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the number of server controls in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object for the specified ASP.NET server control.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the Count property to iterate through a control's <xref:System.Web.UI.ControlCollection> object. The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> property verifies that the control has child controls. If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> returns `false`, the remaining code does not run.  \\n  \\n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_1_1.vb)]\\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_1_1.cs)]\"\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of server controls in the <xref href=\"System.Web.UI.ControlCollection\"></xref>.\n  overload: System.Web.UI.ControlCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ControlCollection.GetEnumerator()\n  fullName: System.Web.UI.ControlCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Retrieves an enumerator that can iterate through the <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_1_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_1_1.aspx)]\"\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: The enumerator to iterate through the collection.\n  overload: System.Web.UI.ControlCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)\n  id: IndexOf(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: IndexOf(Control)\n  nameWithType: ControlCollection.IndexOf(Control)\n  fullName: System.Web.UI.ControlCollection.IndexOf(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Retrieves the index of a specified <xref href=\"System.Web.UI.Control\"></xref> object in the collection.\n  remarks: Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.\n  example:\n  - \"The following code example uses the IndexOf method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_4_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_4_1.aspx)]\"\n  syntax:\n    content: public virtual int IndexOf (System.Web.UI.Control value);\n    parameters:\n    - id: value\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> for which the index is returned.\n    return:\n      type: System.Int32\n      description: The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.\n  overload: System.Web.UI.ControlCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ControlCollection.IsReadOnly\n  fullName: System.Web.UI.ControlCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.ControlCollection\"></xref> object is read-only.\n  remarks: ''\n  example:\n  - \"The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the IsReadOnly property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_5_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_5_1.aspx)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCollection.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ControlCollection.IsSynchronized\n  fullName: System.Web.UI.ControlCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.ControlCollection\"></xref> object is synchronized.\n  remarks: ''\n  example:\n  - \"The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the IsSynchronized property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_6_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_6_1.aspx)]\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: This property is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ControlCollection.Item(Int32)\n  fullName: System.Web.UI.ControlCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a reference to the server control at the specified index location in the <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example uses the Item property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call. This is performed by the `myButton.Controls.Remove` syntax.  \\n  \\n [!code-vb[ControlCollection_ReSubmit_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_2_1.aspx)]\\n [!code-cs[ControlCollection_ReSubmit_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_2_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.Control this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The location of the server control in the <xref href=\"System.Web.UI.ControlCollection\"></xref>.\n    return:\n      type: System.Web.UI.Control\n      description: The reference to the control.\n  overload: System.Web.UI.ControlCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> parameter is less than zero or greater than or equal to &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Owner\n  id: Owner\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: ControlCollection.Owner\n  fullName: System.Web.UI.ControlCollection.Owner\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the ASP.NET server control to which the <xref href=\"System.Web.UI.ControlCollection\"></xref> object belongs.\n  remarks: ''\n  example:\n  - \"The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the Owner property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \\n  \\n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_4_1.cs)]\\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_4_1.vb)]\"\n  syntax:\n    content: protected System.Web.UI.Control Owner { get; }\n    return:\n      type: System.Web.UI.Control\n      description: The <xref href=\"System.Web.UI.Control\"></xref> to which the <xref href=\"System.Web.UI.ControlCollection\"></xref> belongs.\n  overload: System.Web.UI.ControlCollection.Owner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)\n  id: Remove(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: Remove(Control)\n  nameWithType: ControlCollection.Remove(Control)\n  fullName: System.Web.UI.ControlCollection.Remove(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes the specified server control from the parent server control's <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.\n  example:\n  - \"The following code example uses the Remove method to delete a child control from the `myButton` server control. First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_9_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/csharp/m-system.web.ui.controlc_9_1.aspx)]\"\n  syntax:\n    content: public virtual void Remove (System.Web.UI.Control value);\n    parameters:\n    - id: value\n      type: System.Web.UI.Control\n      description: The server control to be removed.\n  overload: System.Web.UI.ControlCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: ControlCollection.RemoveAt(Int32)\n  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes a child control, at the specified index location, from the <xref href=\"System.Web.UI.ControlCollection\"></xref> object.\n  remarks: To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.\n  example:\n  - \"The following code example uses the RemoveAt method to delete a child control from the `myButton` server control. The method call first specifies an index location of 1 from which the control is deleted. The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_7_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/csharp/m-system.web.ui.controlc_7_1.aspx)]\"\n  syntax:\n    content: public virtual void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The ordinal index of the server control to be removed from the collection.\n  overload: System.Web.UI.ControlCollection.RemoveAt*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Thrown if the <xref href=\"System.Web.UI.ControlCollection\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Web.UI.ControlCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ControlCollection.SyncRoot\n  fullName: System.Web.UI.ControlCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an object that can be used to synchronize access to the collection of controls.\n  remarks: ''\n  example:\n  - \"The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the SyncRoot property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \\n  \\n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_3_1.aspx)]\\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_3_1.aspx)]\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The <xref:System.Object> used to synchronize the collection.\n  overload: System.Web.UI.ControlCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: ControlCollection(Control)\n  nameWithType: ControlCollection.ControlCollection(Control)\n  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Add(Control)\n  nameWithType: ControlCollection.Add(Control)\n  fullName: System.Web.UI.ControlCollection.Add(Control)\n- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: AddAt(Int32,Control)\n  nameWithType: ControlCollection.AddAt(Int32,Control)\n  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.ControlCollection.Clear\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ControlCollection.Clear()\n  fullName: System.Web.UI.ControlCollection.Clear()\n- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Contains(Control)\n  nameWithType: ControlCollection.Contains(Control)\n  fullName: System.Web.UI.ControlCollection.Contains(Control)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: ControlCollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Web.UI.ControlCollection.Count\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Count\n  nameWithType: ControlCollection.Count\n  fullName: System.Web.UI.ControlCollection.Count\n- uid: System.Web.UI.ControlCollection.GetEnumerator\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ControlCollection.GetEnumerator()\n  fullName: System.Web.UI.ControlCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IndexOf(Control)\n  nameWithType: ControlCollection.IndexOf(Control)\n  fullName: System.Web.UI.ControlCollection.IndexOf(Control)\n- uid: System.Web.UI.ControlCollection.IsReadOnly\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ControlCollection.IsReadOnly\n  fullName: System.Web.UI.ControlCollection.IsReadOnly\n- uid: System.Web.UI.ControlCollection.IsSynchronized\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ControlCollection.IsSynchronized\n  fullName: System.Web.UI.ControlCollection.IsSynchronized\n- uid: System.Web.UI.ControlCollection.Item(System.Int32)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ControlCollection.Item(Int32)\n  fullName: System.Web.UI.ControlCollection.Item(Int32)\n- uid: System.Web.UI.ControlCollection.Owner\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Owner\n  nameWithType: ControlCollection.Owner\n  fullName: System.Web.UI.ControlCollection.Owner\n- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Remove(Control)\n  nameWithType: ControlCollection.Remove(Control)\n  fullName: System.Web.UI.ControlCollection.Remove(Control)\n- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: ControlCollection.RemoveAt(Int32)\n  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)\n- uid: System.Web.UI.ControlCollection.SyncRoot\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ControlCollection.SyncRoot\n  fullName: System.Web.UI.ControlCollection.SyncRoot\n- uid: System.Web.UI.ControlCollection.#ctor*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: ControlCollection\n  nameWithType: ControlCollection.ControlCollection\n- uid: System.Web.UI.ControlCollection.Add*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Add\n  nameWithType: ControlCollection.Add\n- uid: System.Web.UI.ControlCollection.AddAt*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: AddAt\n  nameWithType: ControlCollection.AddAt\n- uid: System.Web.UI.ControlCollection.Clear*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ControlCollection.Clear\n- uid: System.Web.UI.ControlCollection.Contains*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ControlCollection.Contains\n- uid: System.Web.UI.ControlCollection.CopyTo*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ControlCollection.CopyTo\n- uid: System.Web.UI.ControlCollection.Count*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Count\n  nameWithType: ControlCollection.Count\n- uid: System.Web.UI.ControlCollection.GetEnumerator*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ControlCollection.GetEnumerator\n- uid: System.Web.UI.ControlCollection.IndexOf*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ControlCollection.IndexOf\n- uid: System.Web.UI.ControlCollection.IsReadOnly*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ControlCollection.IsReadOnly\n- uid: System.Web.UI.ControlCollection.IsSynchronized*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ControlCollection.IsSynchronized\n- uid: System.Web.UI.ControlCollection.Item*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Item\n  nameWithType: ControlCollection.Item\n- uid: System.Web.UI.ControlCollection.Owner*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Owner\n  nameWithType: ControlCollection.Owner\n- uid: System.Web.UI.ControlCollection.Remove*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ControlCollection.Remove\n- uid: System.Web.UI.ControlCollection.RemoveAt*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: ControlCollection.RemoveAt\n- uid: System.Web.UI.ControlCollection.SyncRoot*\n  parent: System.Web.UI.ControlCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ControlCollection.SyncRoot\n"}