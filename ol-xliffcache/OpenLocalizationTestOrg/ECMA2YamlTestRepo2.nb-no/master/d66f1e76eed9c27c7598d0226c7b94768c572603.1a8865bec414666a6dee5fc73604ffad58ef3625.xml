{"nodes":[{"pos":[1583,1642],"content":"Specifies the local execution behavior of a service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the local execution behavior of a service method.","pos":[0,59]}]},{"pos":[1655,3506],"content":"Use the OperationBehaviorAttribute attribute to indicate what operation-specific execution behavior the operation has when executed. (To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)      > [!NOTE] >  You can also use OperationBehaviorAttribute to configure a callback contract operation in a duplex client application. When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime.       The OperationBehaviorAttribute attribute is a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model feature that enables common features that developers otherwise must implement themselves.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the OperationBehaviorAttribute attribute to indicate what operation-specific execution behavior the operation has when executed.","pos":[0,132]},{"content":"(To specify execution behavior at the service level, use the &lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt; attribute.)      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can also use OperationBehaviorAttribute to configure a callback contract operation in a duplex client application.","pos":[133,394],"source":" (To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)      > [!NOTE] >  You can also use OperationBehaviorAttribute to configure a callback contract operation in a duplex client application."},{"content":"When used on a callback operation, the &lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt; property must be &lt;xref:System.ServiceModel.ReleaseInstanceMode&gt; or an &lt;xref:System.InvalidOperationException&gt; exception is thrown at runtime.","pos":[395,652],"source":" When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime."},{"content":"The OperationBehaviorAttribute attribute is a <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> programming model feature that enables common features that developers otherwise must implement themselves.","pos":[659,871],"source":"       The OperationBehaviorAttribute attribute is a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model feature that enables common features that developers otherwise must implement themselves."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A&gt; property controls whether parameter objects passed to an operation are disposed when the operation completes.","pos":[877,1073],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt; property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.","pos":[1079,1300],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt; property specifies whether a method must execute within a transaction.","pos":[1306,1466],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt; property specifies whether the service operation can, must, or cannot impersonate the caller's identity.","pos":[1472,1655],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt; property specifies when service objects are recycled during the method invocation process.","pos":[1661,1836],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process."}]},{"pos":[5142,5250],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.OperationBehaviorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> class."},{"pos":[5263,5871],"content":"The default constructor creates an instance of the class with the following defaults:      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode>.      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default constructor creates an instance of the class with the following defaults:      -   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","pos":[0,199],"source":"The default constructor creates an instance of the class with the following defaults:      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt; property is <ph id=\"ph1\">`false`</ph>.","pos":[205,315],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt; property is &lt;xref:System.ServiceModel.ReleaseInstanceMode&gt;.","pos":[321,465],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode>."},{"content":"-   The &lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt; is &lt;xref:System.ServiceModel.ImpersonationOption&gt;.","pos":[471,600],"source":"      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption>."}]},{"pos":[6515,6580],"content":"Gets or sets whether parameters are to be automatically disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether parameters are to be automatically disposed.","pos":[0,65]}]},{"pos":[6593,7039],"content":"This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message. The default value is `true`. Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.       For example, if AutoDisposeParameters is `false`, then the sender is responsible for closing the stream on the sending side.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message.","pos":[0,165]},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[166,194],"source":" The default value is `true`."},{"content":"Set this property to <ph id=\"ph1\">`false`</ph> if you want to prevent the system from disposing of resources and cache them if required.","pos":[195,313],"source":" Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required."},{"content":"For example, if AutoDisposeParameters is <ph id=\"ph1\">`false`</ph>, then the sender is responsible for closing the stream on the sending side.","pos":[320,444],"source":"       For example, if AutoDisposeParameters is `false`, then the sender is responsible for closing the stream on the sending side."}]},{"pos":[7170,7356],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the parameters are to be automatically disposed; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parameters are to be automatically disposed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7895,7993],"content":"Gets or sets a value that indicates the level of caller impersonation that the operation supports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the level of caller impersonation that the operation supports.","pos":[0,98]}]},{"pos":[8006,9450],"content":"Use the Impersonation property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the Impersonation property set to <xref:System.ServiceModel.ImpersonationOption> or <xref:System.ServiceModel.ImpersonationOption>) to execute under the caller's identity. For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName> property, see [Delegation and Impersonation](~/add/includes/ajax-current-ext-md.md) and [How to: Impersonate a Client on a Service](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> object. Using a configuration file requires no extra step.       There may be specific scenarios when impersonation is not supported. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Unsupported Scenarios](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Impersonation property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the Impersonation property set to &lt;xref:System.ServiceModel.ImpersonationOption&gt; or &lt;xref:System.ServiceModel.ImpersonationOption&gt;) to execute under the caller's identity.","pos":[0,317],"source":"Use the Impersonation property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the Impersonation property set to <xref:System.ServiceModel.ImpersonationOption> or <xref:System.ServiceModel.ImpersonationOption>) to execute under the caller's identity."},{"content":"For details, including how impersonation is performed when using &lt;xref:System.ServiceModel.ImpersonationOption&gt; together with the &lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName&gt; property, see <bpt id=\"p1\">[</bpt>Delegation and Impersonation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Impersonate a Client on a Service<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[318,749],"source":" For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName> property, see [Delegation and Impersonation](~/add/includes/ajax-current-ext-md.md) and [How to: Impersonate a Client on a Service](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When programmatically adding a service endpoint that performs impersonation, you must either use one of the &lt;xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A&gt; methods or the &lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName&gt; method to properly load the contract into a new &lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt; object.","pos":[755,1189],"source":"      > [!NOTE] >  When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> object."},{"content":"Using a configuration file requires no extra step.","pos":[1190,1240]},{"content":"There may be specific scenarios when impersonation is not supported.","pos":[1247,1315]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>Unsupported Scenarios<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1316,1439],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Unsupported Scenarios](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[10643,10799],"content":"One of the <xref href=\"System.ServiceModel.ImpersonationOption\"></xref> values. The default is <xref href=\"System.ServiceModel.ImpersonationOption\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ImpersonationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,79],"source":"One of the <xref href=\"System.ServiceModel.ImpersonationOption\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ImpersonationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[80,156],"source":" The default is <xref href=\"System.ServiceModel.ImpersonationOption\"></xref>."}]},{"pos":[11360,11472],"content":"Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.","pos":[0,112]}]},{"pos":[14231,14387],"content":"One of the <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref> values. The default is <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ReleaseInstanceMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,79],"source":"One of the <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ReleaseInstanceMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[80,156],"source":" The default is <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref>."}]},{"pos":[14596,14692],"content":"The value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ReleaseInstanceMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value is not one of the <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref> values."},{"pos":[15801,15903],"content":"Implements the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the &lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*&gt; method.","pos":[0,102],"source":"Implements the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*> method."}]},{"pos":[16230,16355],"content":"The operation description modified to support <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.OperationBehaviorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> properties.","needQuote":true,"needEscape":true,"source":"The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties."},{"pos":[16464,16519],"content":"Binding parameters passed to support binding behaviors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Binding parameters passed to support binding behaviors.","pos":[0,55]}]},{"pos":[17721,17762],"content":"Implements the client operation behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the client operation behavior.","pos":[0,41]}]},{"pos":[18074,18199],"content":"The operation description modified to support <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.OperationBehaviorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> properties.","needQuote":true,"needEscape":true,"source":"The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties."},{"pos":[18294,18382],"content":"The extensibility access point to insert custom client modifications for this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extensibility access point to insert custom client modifications for this operation.","pos":[0,88]}]},{"pos":[19603,19645],"content":"Implements the service operation behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the service operation behavior.","pos":[0,42]}]},{"pos":[19964,20089],"content":"The operation description modified to support <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.OperationBehaviorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> properties.","needQuote":true,"needEscape":true,"source":"The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties."},{"pos":[20189,20271],"content":"The extensibility point to insert custom service modifications for this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extensibility point to insert custom service modifications for this operation.","pos":[0,82]}]},{"pos":[21277,21312],"content":"Implements the validation behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the validation behavior.","pos":[0,35]}]},{"pos":[21559,21597],"content":"The operation description to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation description to validate.","pos":[0,38]}]},{"pos":[22224,22357],"content":"Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.","pos":[0,133]}]},{"pos":[22370,22669],"content":"Set the TransactionAutoComplete property to `false` to complete or abort transactions directly in the code for the operation.       Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction. Only unhandled exceptions trigger an automatic abort.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set the TransactionAutoComplete property to <ph id=\"ph1\">`false`</ph> to complete or abort transactions directly in the code for the operation.","pos":[0,125],"source":"Set the TransactionAutoComplete property to `false` to complete or abort transactions directly in the code for the operation."},{"content":"Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction.","pos":[132,243]},{"content":"Only unhandled exceptions trigger an automatic abort.","pos":[244,297]}]},{"pos":[23581,23883],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to complete the transaction scope automatically on successful execution of the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to complete the transaction scope automatically on successful execution of the operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,225],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to complete the transaction scope automatically on successful execution of the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[226,302],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[24479,24581],"content":"Gets or sets a value that indicates whether the method requires a transaction scope for its execution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the method requires a transaction scope for its execution.","pos":[0,102]}]},{"pos":[24594,25658],"content":"Set the TransactionScopeRequired to `true` to require your operation to execute within a transaction scope. If a flowed transaction is available, the operation executes within that transaction. If one is not available, a new transaction is created and used for the operation execution. The binding specified in the endpoint controls whether flowed transactions are supported. Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the TransactionScopeRequired property. The following table shows the possible behavior.      |||||   |-|-|-|-|   |TransactionScopeRequired|Binding permits transaction flow|Caller flows transaction|Result|   |False|False|No|Method executes without a transaction.|   |True|False|No|Method creates and executes within a new transaction.|   |True or False|False|Yes|A SOAP fault is returned for the transaction header.|   |False|True|Yes|Method executes without a transaction.|   |True|True|Yes|Method executes under the flowed transaction.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set the TransactionScopeRequired to <ph id=\"ph1\">`true`</ph> to require your operation to execute within a transaction scope.","pos":[0,107],"source":"Set the TransactionScopeRequired to `true` to require your operation to execute within a transaction scope."},{"content":"If a flowed transaction is available, the operation executes within that transaction.","pos":[108,193]},{"content":"If one is not available, a new transaction is created and used for the operation execution.","pos":[194,285]},{"content":"The binding specified in the endpoint controls whether flowed transactions are supported.","pos":[286,375]},{"content":"Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the TransactionScopeRequired property.","pos":[376,556]},{"content":"The following table shows the possible behavior.","pos":[557,605]},{"content":"|||||   |-|-|-|-|   |TransactionScopeRequired|Binding permits transaction flow|Caller flows transaction|Result|   |False|False|No|Method executes without a transaction.|   |True|False|No|Method creates and executes within a new transaction.|   |True or False|False|Yes|A SOAP fault is returned for the transaction header.|   |False|True|Yes|Method executes without a transaction.|   |True|True|Yes|Method executes under the flowed transaction.|","pos":[611,1055]}]},{"pos":[26571,26840],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method requires a transaction scope to execute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method requires a transaction scope to execute; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,190],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method requires a transaction scope to execute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[191,269],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.OperationBehaviorAttribute\n  id: OperationBehaviorAttribute\n  children:\n  - System.ServiceModel.OperationBehaviorAttribute.#ctor\n  - System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters\n  - System.ServiceModel.OperationBehaviorAttribute.Impersonation\n  - System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode\n  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  - System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete\n  - System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired\n  langs:\n  - csharp\n  name: OperationBehaviorAttribute\n  nameWithType: OperationBehaviorAttribute\n  fullName: System.ServiceModel.OperationBehaviorAttribute\n  type: Class\n  summary: Specifies the local execution behavior of a service method.\n  remarks: \"Use the OperationBehaviorAttribute attribute to indicate what operation-specific execution behavior the operation has when executed. (To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)  \\n  \\n> [!NOTE]\\n>  You can also use OperationBehaviorAttribute to configure a callback contract operation in a duplex client application. When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \\n  \\n The OperationBehaviorAttribute attribute is a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model feature that enables common features that developers otherwise must implement themselves.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process.\"\n  example:\n  - \"The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically. If an unhandled exception does occur, the transaction is aborted.  \\n  \\n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method)]\n\n      public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior\n  inheritance:\n  - System.Attribute\n  implements:\n  - System.ServiceModel.Description.IOperationBehavior\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: OperationBehaviorAttribute()\n  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()\n  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> class.\n  remarks: \"The default constructor creates an instance of the class with the following defaults:  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode>.  \\n  \\n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption>.\"\n  syntax:\n    content: public OperationBehaviorAttribute ();\n    parameters: []\n  overload: System.ServiceModel.OperationBehaviorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters\n  id: AutoDisposeParameters\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: AutoDisposeParameters\n  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters\n  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets whether parameters are to be automatically disposed.\n  remarks: \"This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message. The default value is `true`. Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.  \\n  \\n For example, if AutoDisposeParameters is `false`, then the sender is responsible for closing the stream on the sending side.\"\n  syntax:\n    content: public bool AutoDisposeParameters { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parameters are to be automatically disposed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation\n  id: Impersonation\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: Impersonation\n  nameWithType: OperationBehaviorAttribute.Impersonation\n  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates the level of caller impersonation that the operation supports.\n  remarks: \"Use the Impersonation property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the Impersonation property set to <xref:System.ServiceModel.ImpersonationOption> or <xref:System.ServiceModel.ImpersonationOption>) to execute under the caller's identity. For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName> property, see [Delegation and Impersonation](~/add/includes/ajax-current-ext-md.md) and [How to: Impersonate a Client on a Service](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> object. Using a configuration file requires no extra step.  \\n  \\n There may be specific scenarios when impersonation is not supported. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Unsupported Scenarios](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following service code example requires impersonation by setting the Impersonation property to <xref:System.ServiceModel.ImpersonationOption>.  \\n  \\n [!code-cs[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/services.cs#1)]\\n [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/services.vb#1)]  \\n  \\n The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.  \\n  \\n [!code-cs[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/client.cs#3)]\\n [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/client.vb#3)]\"\n  syntax:\n    content: public System.ServiceModel.ImpersonationOption Impersonation { get; set; }\n    return:\n      type: System.ServiceModel.ImpersonationOption\n      description: One of the <xref href=\"System.ServiceModel.ImpersonationOption\"></xref> values. The default is <xref href=\"System.ServiceModel.ImpersonationOption\"></xref>.\n  overload: System.ServiceModel.OperationBehaviorAttribute.Impersonation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode\n  id: ReleaseInstanceMode\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: ReleaseInstanceMode\n  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode\n  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.\n  remarks: \"Use the ReleaseInstanceMode property to specify when [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] recycles a service object in the course of executing a method. The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value. Setting the ReleaseInstanceMode property changes that default behavior.  \\n  \\n The ReleaseInstanceMode makes no threading guarantees. If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode>.  \\n  \\n In transaction scenarios, the ReleaseInstanceMode property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call. You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.  \\n  \\n You can choose the following behaviors:  \\n  \\n-   Recycle a service object before an operation is called.  \\n  \\n-   Recycle a service object after an operation is called.  \\n  \\n-   Recycle a service object both before and after an operation is called.  \\n  \\n-   No recycling behavior.  \\n  \\n You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application. When used on a callback operation, the ReleaseInstanceMode property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \\n  \\n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\\\[\\\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode>.\"\n  example:\n  - \"The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.  \\n  \\n [!code-cs[OBA.ReleaseInstanceMode#1](~/add/codesnippet/csharp/oba.releaseinstancemode.client/services.cs#1)]\\n [!code-vb[OBA.ReleaseInstanceMode#1](~/add/codesnippet/visualbasic/oba.releaseinstancemode.client/services.vb#1)]\"\n  syntax:\n    content: public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }\n    return:\n      type: System.ServiceModel.ReleaseInstanceMode\n      description: One of the <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref> values. The default is <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref>.\n  overload: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is not one of the <xref href=\"System.ServiceModel.ReleaseInstanceMode\"></xref> values.\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  isEii: true\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Implements the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*> method.\n  syntax:\n    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties.\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: Binding parameters passed to support binding behaviors.\n  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  isEii: true\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Implements the client operation behavior.\n  syntax:\n    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties.\n    - id: proxy\n      type: System.ServiceModel.Dispatcher.ClientOperation\n      description: The extensibility access point to insert custom client modifications for this operation.\n  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  isEii: true\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Implements the service operation behavior.\n  syntax:\n    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation description modified to support <xref href=\"System.ServiceModel.OperationBehaviorAttribute\"></xref> properties.\n    - id: dispatch\n      type: System.ServiceModel.Dispatcher.DispatchOperation\n      description: The extensibility point to insert custom service modifications for this operation.\n  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  isEii: true\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Implements the validation behavior.\n  syntax:\n    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);\n    parameters:\n    - id: description\n      type: System.ServiceModel.Description.OperationDescription\n      description: The operation description to validate.\n  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete\n  id: TransactionAutoComplete\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: TransactionAutoComplete\n  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete\n  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.\n  remarks: \"Set the TransactionAutoComplete property to `false` to complete or abort transactions directly in the code for the operation.  \\n  \\n Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction. Only unhandled exceptions trigger an automatic abort.\"\n  example:\n  - \"The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the TransactionAutoComplete property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \\n  \\n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]\"\n  syntax:\n    content: public bool TransactionAutoComplete { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to complete the transaction scope automatically on successful execution of the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired\n  id: TransactionScopeRequired\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  langs:\n  - csharp\n  name: TransactionScopeRequired\n  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired\n  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether the method requires a transaction scope for its execution.\n  remarks: \"Set the TransactionScopeRequired to `true` to require your operation to execute within a transaction scope. If a flowed transaction is available, the operation executes within that transaction. If one is not available, a new transaction is created and used for the operation execution. The binding specified in the endpoint controls whether flowed transactions are supported. Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the TransactionScopeRequired property. The following table shows the possible behavior.  \\n  \\n|||||  \\n|-|-|-|-|  \\n|TransactionScopeRequired|Binding permits transaction flow|Caller flows transaction|Result|  \\n|False|False|No|Method executes without a transaction.|  \\n|True|False|No|Method creates and executes within a new transaction.|  \\n|True or False|False|Yes|A SOAP fault is returned for the transaction header.|  \\n|False|True|Yes|Method executes without a transaction.|  \\n|True|True|Yes|Method executes under the flowed transaction.|\"\n  example:\n  - \"The following code example shows an operation that executes within a mandatory distributed transaction. The TransactionScopeRequired property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \\n  \\n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]\"\n  syntax:\n    content: public bool TransactionScopeRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method requires a transaction scope to execute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: OperationBehaviorAttribute()\n  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()\n  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()\n- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: AutoDisposeParameters\n  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters\n  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: Impersonation\n  nameWithType: OperationBehaviorAttribute.Impersonation\n  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation\n- uid: System.ServiceModel.ImpersonationOption\n  parent: System.ServiceModel\n  isExternal: false\n  name: ImpersonationOption\n  nameWithType: ImpersonationOption\n  fullName: System.ServiceModel.ImpersonationOption\n- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: ReleaseInstanceMode\n  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode\n  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode\n- uid: System.ServiceModel.ReleaseInstanceMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: ReleaseInstanceMode\n  nameWithType: ReleaseInstanceMode\n  fullName: System.ServiceModel.ReleaseInstanceMode\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)\n- uid: System.ServiceModel.Description.OperationDescription\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: OperationDescription\n  nameWithType: OperationDescription\n  fullName: System.ServiceModel.Description.OperationDescription\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)\n- uid: System.ServiceModel.Dispatcher.ClientOperation\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: ClientOperation\n  nameWithType: ClientOperation\n  fullName: System.ServiceModel.Dispatcher.ClientOperation\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)\n- uid: System.ServiceModel.Dispatcher.DispatchOperation\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: DispatchOperation\n  nameWithType: DispatchOperation\n  fullName: System.ServiceModel.Dispatcher.DispatchOperation\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: TransactionAutoComplete\n  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete\n  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: TransactionScopeRequired\n  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired\n  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired\n- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: OperationBehaviorAttribute\n  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute\n- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: AutoDisposeParameters\n  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters\n- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: Impersonation\n  nameWithType: OperationBehaviorAttribute.Impersonation\n- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: ReleaseInstanceMode\n  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior\n- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: System.ServiceModel.Description.IOperationBehavior.Validate\n  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: TransactionAutoComplete\n  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete\n- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*\n  parent: System.ServiceModel.OperationBehaviorAttribute\n  isExternal: false\n  name: TransactionScopeRequired\n  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired\n"}