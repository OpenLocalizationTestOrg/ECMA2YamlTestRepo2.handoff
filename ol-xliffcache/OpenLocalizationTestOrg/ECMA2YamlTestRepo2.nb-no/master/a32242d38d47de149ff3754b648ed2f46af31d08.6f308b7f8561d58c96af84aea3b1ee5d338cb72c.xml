{"nodes":[{"pos":[2347,2466],"content":"Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.","pos":[0,119]}]},{"pos":[2479,5928],"content":"ContextMenu is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel). For more information, see the <xref:System.Windows.Controls.ItemsControl> class.       The properties of the ContextMenu class are used to define the position and behavior of the ContextMenu.       A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a ContextMenu.  If you assign a ContextMenu to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction. Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the ContextMenu when the user clicks the right mouse button over the control.       The following properties are defined by the ContextMenu and <xref:System.Windows.Controls.ContextMenuService> classes.  If any of these properties are set on both ContextMenu and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.      -   <xref:System.Windows.Controls.ContextMenu.Placement%2A>      -   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>      -   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>      -   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>      -   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>      -   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>       A ContextMenu is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control. This behavior cannot be changed.      ## Customizing the ContextMenu Control    To apply the same property settings to multiple ContextMenu controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  To see the parts and states that are specific to the ContextMenu, see [ContextMenu Styles and Templates](~/add/includes/ajax-current-ext-md.md).       Dependency properties for this control might be set by the control’s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).      > [!NOTE] >  Setting a visual property will only have an effect if that property is both present in ContextMenu control's default template and is set by using a . You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ContextMenu is an &lt;xref:System.Windows.Controls.ItemsControl&gt;, which means it can contain a collection of objects of any type (such as string, image, or panel).","pos":[0,160],"source":"ContextMenu is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel)."},{"content":"For more information, see the &lt;xref:System.Windows.Controls.ItemsControl&gt; class.","pos":[161,241],"source":" For more information, see the <xref:System.Windows.Controls.ItemsControl> class."},{"content":"The properties of the ContextMenu class are used to define the position and behavior of the ContextMenu.","pos":[248,352]},{"content":"A &lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt; can have a ContextMenu.","pos":[359,472],"source":"       A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a ContextMenu."},{"content":"If you assign a ContextMenu to the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName&gt; property, the &lt;xref:System.Windows.Controls.ContextMenuService&gt; class handles context menu operations in response to user interaction.","pos":[474,811],"source":"  If you assign a ContextMenu to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction."},{"content":"Part of the work the &lt;xref:System.Windows.Controls.ContextMenuService&gt; does is opening the ContextMenu when the user clicks the right mouse button over the control.","pos":[812,976],"source":" Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the ContextMenu when the user clicks the right mouse button over the control."},{"content":"The following properties are defined by the ContextMenu and &lt;xref:System.Windows.Controls.ContextMenuService&gt; classes.","pos":[983,1101],"source":"       The following properties are defined by the ContextMenu and <xref:System.Windows.Controls.ContextMenuService> classes."},{"content":"If any of these properties are set on both ContextMenu and the &lt;xref:System.Windows.Controls.ContextMenuService&gt;, the property value from the &lt;xref:System.Windows.Controls.ContextMenuService&gt; is used.","pos":[1103,1303],"source":"  If any of these properties are set on both ContextMenu and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used."},{"content":"-   &lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;      -   &lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;      -   &lt;xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty&gt;      -   &lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;      -   &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;      -   &lt;xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A&gt;       A ContextMenu is automatically placed inside a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control.","pos":[1309,1844],"source":"      -   <xref:System.Windows.Controls.ContextMenu.Placement%2A>      -   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>      -   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>      -   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>      -   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>      -   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>       A ContextMenu is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control."},{"content":"This behavior cannot be changed.","pos":[1845,1877]},{"content":"Customizing the ContextMenu Control    To apply the same property settings to multiple ContextMenu controls, use the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.","pos":[1886,2060],"source":"      ## Customizing the ContextMenu Control    To apply the same property settings to multiple ContextMenu controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property."},{"content":"You can modify the default &lt;xref:System.Windows.Controls.ControlTemplate&gt; to give the control a unique appearance.","pos":[2061,2175],"source":" You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance."},{"content":"For more information about creating a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2176,2387],"source":" For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md)."},{"content":"To see the parts and states that are specific to the ContextMenu, see <bpt id=\"p1\">[</bpt>ContextMenu Styles and Templates<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2389,2533],"source":"  To see the parts and states that are specific to the ContextMenu, see [ContextMenu Styles and Templates](~/add/includes/ajax-current-ext-md.md)."},{"content":"Dependency properties for this control might be set by the control’s default style.","pos":[2540,2623]},{"content":"If a property is set by a default style, the property might change from its default value when the control appears in the application.","pos":[2625,2759]},{"content":"The default style is determined by which desktop theme is used when the application is running.","pos":[2760,2855]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Default WPF Themes<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.","pos":[2857,2951],"source":"  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Setting a visual property will only have an effect if that property is both present in ContextMenu control's default template and is set by using a .","pos":[2957,3119],"source":"      > [!NOTE] >  Setting a visual property will only have an effect if that property is both present in ContextMenu control's default template and is set by using a ."},{"content":"You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.","pos":[3120,3419],"source":" You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)."}]},{"pos":[50444,50541],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> class."},{"pos":[51038,51141],"content":"Occurs when a particular instance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> closes.","needQuote":true,"needEscape":true,"source":"Occurs when a particular instance of a <xref href=\"System.Windows.Controls.ContextMenu\"></xref> closes."},{"pos":[51154,51408],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_Closed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.ClosedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_Closed\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[52147,52159],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52561,52653],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Closed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> routed event."},{"pos":[52810,52822],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53312,53447],"content":"Gets or sets a callback that indicates where a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should be placed on the screen.","needQuote":true,"needEscape":true,"source":"Gets or sets a callback that indicates where a <xref href=\"System.Windows.Controls.ContextMenu\"></xref> should be placed on the screen."},{"pos":[53460,54538],"content":"The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode> for the callback delegate to be used.       The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>. When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.       The behavior is the same as it is for the popup.  For more information, see [How to: Specify a Custom Popup Position](~/add/includes/ajax-current-ext-md.md) and [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032).      <a name=\"dependencyPropertyInfo_CustomPopupPlacementCallback\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt; property must be set to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt; for the callback delegate to be used.","pos":[0,177],"source":"The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode> for the callback delegate to be used."},{"content":"The &lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt; delegate returns an array of possible points that are defined with respect to the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;.","pos":[184,403],"source":"       The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>."},{"content":"When the context menu is displayed, a point is chosen that maximizes the amount of the &lt;xref:System.Windows.Controls.ToolTip&gt; window that is visible.","pos":[404,553],"source":" When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible."},{"content":"The behavior is the same as it is for the popup.","pos":[560,608]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Specify a Custom Popup Position<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Popup Placement Sample<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=160032)</ept>.","pos":[610,793],"source":"  For more information, see [How to: Specify a Custom Popup Position](~/add/includes/ajax-current-ext-md.md) and [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_CustomPopupPlacementCallback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[799,1064],"source":"<a name=\"dependencyPropertyInfo_CustomPopupPlacementCallback\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[54784,54887],"content":"A callback that specifies the location of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A callback that specifies the location of the <xref href=\"System.Windows.Controls.ContextMenu\"></xref>."},{"pos":[55492,55600],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*&gt; dependency property.","pos":[0,108],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*> dependency property."}]},{"pos":[55796,55808],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56238,56305],"content":"Gets a value that indicates whether the control supports scrolling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the control supports scrolling.","pos":[0,67]}]},{"pos":[56317,56521],"content":"If the control has a &lt;xref:System.Windows.Controls.ScrollViewer&gt; in its style and has a custom keyboard scrolling behavior, &lt;xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt; should return <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`."},{"pos":[56653,56721],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[57202,57293],"content":"Gets or sets a value that indicates whether the context menu appears with a dropped shadow.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the context menu appears with a dropped shadow.","pos":[0,91]}]},{"pos":[57306,57866],"content":"When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName>. Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property is `false`.      <a name=\"dependencyPropertyInfo_\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Windows.Controls.ContextMenu&gt; opens, the value is set to the value of &lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName&gt;.","pos":[0,170],"source":"When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName>."},{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> has no effect if the &lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName&gt; property is <ph id=\"ph2\">`false`</ph>.","pos":[171,322],"source":" Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property is `false`."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[328,550],"source":"<a name=\"dependencyPropertyInfo_\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[58200,58465],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context menu appears with a dropped shadow; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the context menu appears with a dropped shadow; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,186],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context menu appears with a dropped shadow; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,265],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[58980,59073],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.HasDropShadow*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.HasDropShadow*&gt; dependency property.","pos":[0,93],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.HasDropShadow*> dependency property."}]},{"pos":[59254,59266],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59696,59788],"content":"Get or sets the horizontal distance between the target origin and the popup alignment point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the horizontal distance between the target origin and the popup alignment point.","pos":[0,92]}]},{"pos":[59801,61833],"content":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=\"dependencyPropertyInfo_HorizontalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_HorizontalOffset\"></a>    ## XAML Attribute Usage      ```   <object HorizontalOffset=\"double\"/>   - or –   <object HorizontalOffset =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_HorizontalOffset\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For instance a value of `1` is acceptable.       The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.       *qualifiedDouble*    A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       **Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a &lt;xref:System.Windows.Controls.ContextMenu&gt; by setting the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;, HorizontalOffset, and &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt; properties.","pos":[0,362],"source":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties."},{"content":"These properties behave the same as they do for a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[364,462],"source":"  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](../Topic/Popup%20Placement%20Behavior.md)</ept>.","pos":[463,558],"source":" For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_HorizontalOffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|      <bpt id=\"p2\">&lt;a name=\"xamlAttributeUsage_HorizontalOffset\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object HorizontalOffset=\"double\"/&gt;   - or –   &lt;object HorizontalOffset =\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p3\">&lt;a name=\"xamlValues_HorizontalOffset\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p4\">*</bpt>double<ept id=\"p4\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value.","pos":[564,1161],"source":"<a name=\"dependencyPropertyInfo_HorizontalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_HorizontalOffset\"></a>    ## XAML Attribute Usage      ```   <object HorizontalOffset=\"double\"/>   - or –   <object HorizontalOffset =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_HorizontalOffset\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value."},{"content":"This is interpreted as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.","pos":[1162,1269],"source":" This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement."},{"content":"Strings need not explicitly include decimal points.","pos":[1270,1321]},{"content":"For instance a value of <ph id=\"ph1\">`1`</ph> is acceptable.","pos":[1322,1364],"source":" For instance a value of `1` is acceptable."},{"content":"The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.","pos":[1371,1469],"source":"       The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[1476,1616],"source":"*qualifiedDouble*    A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       <bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> In many cases a double may be set to Auto but a &lt;xref:System.Windows.Controls.ContextMenu&gt; will not appear if the offsets are set to Auto.","pos":[1623,1983],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       **Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto."}]},{"pos":[62293,62529],"content":"The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The horizontal distance between the target origin and the popup alignment point.","pos":[0,80]},{"content":"For information about the target origin and popup alignment point, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[81,218],"source":" For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"The default is 0.","pos":[219,236]}]},{"pos":[63062,63158],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset*&gt; dependency property.","pos":[0,96],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset*> dependency property."}]},{"pos":[63342,63354],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63734,63850],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is visible.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is visible."},{"pos":[63863,64284],"content":"When IsOpen is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.      <a name=\"dependencyPropertyInfo_IsOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When IsOpen is set to <ph id=\"ph1\">`true`</ph>, mouse capture is set to the &lt;xref:System.Windows.Controls.ContextMenu&gt; and its subtree.","pos":[0,117],"source":"When IsOpen is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsOpen\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.IsOpenProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|","pos":[123,411],"source":"<a name=\"dependencyPropertyInfo_IsOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|"}]},{"pos":[64763,65053],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is visible; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,211],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[212,290],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[65526,65612],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.IsOpen*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.IsOpen*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.IsOpen*> dependency property."}]},{"pos":[65786,65798],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66301,66394],"content":"Called when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Closed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurs.","needQuote":true,"needEscape":true,"source":"Called when the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> event occurs."},{"pos":[66576,66669],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Closed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> event."},{"pos":[67191,67365],"content":"Creates and returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a <xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.ContextMenu\"></xref>."},{"pos":[67591,67745],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.ContextMenu\"></xref>."},{"pos":[68525,68614],"content":"Reports that the <xref:System.Windows.UIElement.IsKeyboardFocusWithin*> property changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reports that the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt; property changed.","pos":[0,89],"source":"Reports that the <xref:System.Windows.UIElement.IsKeyboardFocusWithin*> property changed."}]},{"pos":[68857,68961],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.IsKeyboardFocusWithinChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.UIElement.IsKeyboardFocusWithinChanged\"></xref> event."},{"pos":[69546,69716],"content":"Called when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised by an object inside the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Called when a <xref href=\"System.Windows.ContentElement.KeyDown\"></xref> event is raised by an object inside the <xref href=\"System.Windows.Controls.ContextMenu\"></xref>."},{"pos":[69906,69989],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event."},{"pos":[70543,70622],"content":"Responds to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Responds to the <xref href=\"System.Windows.ContentElement.KeyUp\"></xref> event."},{"pos":[70810,70891],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> event."},{"pos":[71451,71544],"content":"Called when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Opened\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurs.","needQuote":true,"needEscape":true,"source":"Called when the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> event occurs."},{"pos":[71726,71819],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Opened\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> event."},{"pos":[72450,72501],"content":"Called when a context menu's visual parent changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when a context menu's visual parent changes.","pos":[0,51]}]},{"pos":[72715,72775],"content":"The object that the context menu was previously attached to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that the context menu was previously attached to.","pos":[0,60]}]},{"pos":[73223,73281],"content":"Occurs when a particular instance of a context menu opens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a particular instance of a context menu opens.","pos":[0,58]}]},{"pos":[73294,73548],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_Opened\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.OpenedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"routedEventInfo_Opened\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"},{"pos":[74287,74299],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74701,74793],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu.Opened\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> routed event."},{"pos":[74950,74962],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75357,75455],"content":"Gets or sets the Placement property of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the Placement property of a <xref href=\"System.Windows.Controls.ContextMenu\"></xref>."},{"pos":[75468,77288],"content":"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens. If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>.  If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>.  If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=fullName> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.       You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_Placement\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Windows.Controls.ContextMenu&gt; is assigned to the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName&gt; property, the &lt;xref:System.Windows.Controls.ContextMenuService&gt; changes this value of this property when the &lt;xref:System.Windows.Controls.ContextMenu&gt; opens.","pos":[0,397],"source":"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens."},{"content":"If the user opens the &lt;xref:System.Windows.Controls.ContextMenu&gt; by using the mouse, Placement is set to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt;.","pos":[398,559],"source":" If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>."},{"content":"If the user opens the &lt;xref:System.Windows.Controls.ContextMenu&gt; by using the keyboard, Placement is set to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt;.","pos":[561,725],"source":"  If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>."},{"content":"If you want to change the position of the &lt;xref:System.Windows.Controls.ContextMenu&gt;, set the &lt;xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=fullName&gt; property on the &lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt;.","pos":[727,1013],"source":"  If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=fullName> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>."},{"content":"You can position a &lt;xref:System.Windows.Controls.ContextMenu&gt; by setting the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;, Placement, &lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt; properties.","pos":[1020,1382],"source":"       You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties."},{"content":"These properties behave the same as they do for a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[1384,1482],"source":"  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1483,1575],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Placement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.PlacementProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1581,1808],"source":"<a name=\"dependencyPropertyInfo_Placement\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[77795,77974],"content":"One of the <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration. The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PlacementMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","pos":[0,93],"source":"One of the <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PlacementMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[94,179],"source":" The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>."}]},{"pos":[78465,78554],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.Placement*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.Placement*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.Placement*> dependency property."}]},{"pos":[78731,78743],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79183,79268],"content":"Gets or sets the area relative to which the context menu is positioned when it opens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the area relative to which the context menu is positioned when it opens.","pos":[0,85]}]},{"pos":[79281,80097],"content":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_PlacementRectangle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a &lt;xref:System.Windows.Controls.ContextMenu&gt; by setting the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;, PlacementRectangle, &lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt; properties.","pos":[0,362],"source":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties."},{"content":"These properties behave the same as they do for a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[364,462],"source":"  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[463,555],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PlacementRectangle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[561,806],"source":"<a name=\"dependencyPropertyInfo_PlacementRectangle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[80544,80672],"content":"The area that defines the rectangle that is used to position the context menu. The default is <xref:System.Windows.Rect.Empty*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The area that defines the rectangle that is used to position the context menu. The default is <xref:System.Windows.Rect.Empty*>.","pos":[0,128],"nodes":[{"content":"The area that defines the rectangle that is used to position the context menu.","pos":[0,78]},{"content":"The default is &lt;xref:System.Windows.Rect.Empty*&gt;.","pos":[79,128],"source":" The default is <xref:System.Windows.Rect.Empty*>."}]}]},{"pos":[81217,81315],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle*> dependency property."}]},{"pos":[81501,81513],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81938,82108],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> relative to which the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is positioned when it opens.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.UIElement\"></xref> relative to which the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is positioned when it opens."},{"pos":[82121,83039],"content":"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens. To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=fullName> property.      <a name=\"dependencyPropertyInfo_PlacementTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Windows.Controls.ContextMenu&gt; is assigned to the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName&gt; property, the &lt;xref:System.Windows.Controls.ContextMenuService&gt; changes this value of this property to the owning &lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt; when the &lt;xref:System.Windows.Controls.ContextMenu&gt; opens.","pos":[0,499],"source":"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens."},{"content":"To use a different &lt;xref:System.Windows.UIElement&gt;, set the &lt;xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=fullName&gt; property.","pos":[500,663],"source":" To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=fullName> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PlacementTarget\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[669,908],"source":"<a name=\"dependencyPropertyInfo_PlacementTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[84003,84199],"content":"The element relative to which the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is positioned when it opens. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element relative to which the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is positioned when it opens.","pos":[0,119],"source":"The element relative to which the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is positioned when it opens."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[120,196],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[84726,84821],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementTarget*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget*&gt; dependency property.","pos":[0,95],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementTarget*> dependency property."}]},{"pos":[85004,85016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85688,85749],"content":"Prepares the specified element to display the specified item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Prepares the specified element to display the specified item.","pos":[0,61]}]},{"pos":[85761,85840],"content":"Preparing the element may involve applying styles, setting bindings, and so on.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Preparing the element may involve applying styles, setting bindings, and so on.","pos":[0,79]}]},{"pos":[86073,86116],"content":"Element used to display the specified item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Element used to display the specified item.","pos":[0,43]}]},{"pos":[86177,86192],"content":"Specified item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specified item.","pos":[0,15]}]},{"pos":[86668,86800],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should close automatically.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> should close automatically."},{"pos":[86813,87048],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_StaysOpen\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.StaysOpenProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_StaysOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|   |Metadata properties set to `true`|None|"},{"pos":[87519,87907],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the menu should stay open until the <xref:System.Windows.Controls.ContextMenu.IsOpen*> property changes to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the menu should stay open until the &lt;xref:System.Windows.Controls.ContextMenu.IsOpen*&gt; property changes to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,309],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the menu should stay open until the <xref:System.Windows.Controls.ContextMenu.IsOpen*> property changes to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[310,388],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[88398,88487],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.StaysOpen*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.StaysOpen*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.StaysOpen*> dependency property."}]},{"pos":[88664,88676],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89096,89186],"content":"Get or sets the vertical distance between the target origin and the popup alignment point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the vertical distance between the target origin and the popup alignment point.","pos":[0,90]}]},{"pos":[89199,91263],"content":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=\"dependencyPropertyInfo_VerticalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_VerticalOffset\"></a>    ## XAML Attribute Usage      ```   <object VerticalOffset=\"double\"/>   - or –   <object VerticalOffset =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_VerticalOffset\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For instance, a value of `1` is acceptable. The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.       *qualifiedDouble*    A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      > [!NOTE] >  In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a &lt;xref:System.Windows.Controls.ContextMenu&gt; by setting the &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;, &lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt; properties.","pos":[0,408],"source":"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties."},{"content":"These properties behave the same as they do for a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[410,508],"source":"  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](../Topic/Popup%20Placement%20Behavior.md)</ept>.","pos":[509,604],"source":" For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_VerticalOffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|      <bpt id=\"p2\">&lt;a name=\"xamlAttributeUsage_VerticalOffset\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object VerticalOffset=\"double\"/&gt;   - or –   &lt;object VerticalOffset =\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p3\">&lt;a name=\"xamlValues_VerticalOffset\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p4\">*</bpt>double<ept id=\"p4\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value.","pos":[610,1195],"source":"<a name=\"dependencyPropertyInfo_VerticalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_VerticalOffset\"></a>    ## XAML Attribute Usage      ```   <object VerticalOffset=\"double\"/>   - or –   <object VerticalOffset =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_VerticalOffset\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value."},{"content":"This is interpreted as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.","pos":[1196,1303],"source":" This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement."},{"content":"Strings need not explicitly include decimal points.","pos":[1304,1355]},{"content":"For instance, a value of <ph id=\"ph1\">`1`</ph> is acceptable.","pos":[1356,1399],"source":" For instance, a value of `1` is acceptable."},{"content":"The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.","pos":[1400,1498],"source":" The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[1505,1645],"source":"*qualifiedDouble*    A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px      &gt; <ph id=\"ph6\">[!NOTE]</ph> &gt;  In many cases a double may be set to Auto, but a &lt;xref:System.Windows.Controls.ContextMenu&gt; does not appear if the offsets are set to Auto.","pos":[1652,2016],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      > [!NOTE] >  In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto."}]},{"pos":[91719,91953],"content":"The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vertical distance between the target origin and the popup alignment point.","pos":[0,78]},{"content":"For information about the target origin and popup alignment point, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[79,216],"source":" For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"The default is 0.","pos":[217,234]}]},{"pos":[92474,92568],"content":"Identifies the <xref:System.Windows.Controls.ContextMenu.VerticalOffset*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.ContextMenu.VerticalOffset*&gt; dependency property.","pos":[0,94],"source":"Identifies the <xref:System.Windows.Controls.ContextMenu.VerticalOffset*> dependency property."}]},{"pos":[92750,92762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.ContextMenu\n  id: ContextMenu\n  children:\n  - System.Windows.Controls.ContextMenu.#ctor\n  - System.Windows.Controls.ContextMenu.Closed\n  - System.Windows.Controls.ContextMenu.ClosedEvent\n  - System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback\n  - System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty\n  - System.Windows.Controls.ContextMenu.HandlesScrolling\n  - System.Windows.Controls.ContextMenu.HasDropShadow\n  - System.Windows.Controls.ContextMenu.HasDropShadowProperty\n  - System.Windows.Controls.ContextMenu.HorizontalOffset\n  - System.Windows.Controls.ContextMenu.HorizontalOffsetProperty\n  - System.Windows.Controls.ContextMenu.IsOpen\n  - System.Windows.Controls.ContextMenu.IsOpenProperty\n  - System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.ContextMenu.OnCreateAutomationPeer\n  - System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.Controls.ContextMenu.Opened\n  - System.Windows.Controls.ContextMenu.OpenedEvent\n  - System.Windows.Controls.ContextMenu.Placement\n  - System.Windows.Controls.ContextMenu.PlacementProperty\n  - System.Windows.Controls.ContextMenu.PlacementRectangle\n  - System.Windows.Controls.ContextMenu.PlacementRectangleProperty\n  - System.Windows.Controls.ContextMenu.PlacementTarget\n  - System.Windows.Controls.ContextMenu.PlacementTargetProperty\n  - System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)\n  - System.Windows.Controls.ContextMenu.StaysOpen\n  - System.Windows.Controls.ContextMenu.StaysOpenProperty\n  - System.Windows.Controls.ContextMenu.VerticalOffset\n  - System.Windows.Controls.ContextMenu.VerticalOffsetProperty\n  langs:\n  - csharp\n  name: ContextMenu\n  nameWithType: ContextMenu\n  fullName: System.Windows.Controls.ContextMenu\n  type: Class\n  summary: Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.\n  remarks: \"ContextMenu is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel). For more information, see the <xref:System.Windows.Controls.ItemsControl> class.  \\n  \\n The properties of the ContextMenu class are used to define the position and behavior of the ContextMenu.  \\n  \\n A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a ContextMenu.  If you assign a ContextMenu to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction. Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the ContextMenu when the user clicks the right mouse button over the control.  \\n  \\n The following properties are defined by the ContextMenu and <xref:System.Windows.Controls.ContextMenuService> classes.  If any of these properties are set on both ContextMenu and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  \\n  \\n-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  \\n  \\n A ContextMenu is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control. This behavior cannot be changed.  \\n  \\n## Customizing the ContextMenu Control  \\n To apply the same property settings to multiple ContextMenu controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  To see the parts and states that are specific to the ContextMenu, see [ContextMenu Styles and Templates](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Dependency properties for this control might be set by the control’s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  \\n  \\n> [!NOTE]\\n>  Setting a visual property will only have an effect if that property is both present in ContextMenu control's default template and is set by using a . You can find a list of visual properties in the \\\"Changing the Visual Structure of a Control\\\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md).\"\n  example:\n  - \"The following example creates a ContextMenu that manipulates the text of a <xref:System.Windows.Controls.TextBox>.  The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a ContextMenu.  \\n  \\n [!code-xml[ContextMenu#Events](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#events)]  \\n  \\n [!code-cs[MenuItemCommandsAndEvents#2](~/add/codesnippet/csharp/MenuItemCommandsAndEvents/Window1.xaml.cs#2)]\\n [!code-vb[MenuItemCommandsAndEvents#2](~/add/codesnippet/visualbasic/MenuItemCommandsAndEvents/Window1.xaml.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Opened\")]\n\n      public class ContextMenu : System.Windows.Controls.Primitives.MenuBase\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Control\n  - System.Windows.Controls.ItemsControl\n  - System.Windows.Controls.Primitives.MenuBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.Background\n  - System.Windows.Controls.Control.BackgroundProperty\n  - System.Windows.Controls.Control.BorderBrush\n  - System.Windows.Controls.Control.BorderBrushProperty\n  - System.Windows.Controls.Control.BorderThickness\n  - System.Windows.Controls.Control.BorderThicknessProperty\n  - System.Windows.Controls.Control.FontFamily\n  - System.Windows.Controls.Control.FontFamilyProperty\n  - System.Windows.Controls.Control.FontSize\n  - System.Windows.Controls.Control.FontSizeProperty\n  - System.Windows.Controls.Control.FontStretch\n  - System.Windows.Controls.Control.FontStretchProperty\n  - System.Windows.Controls.Control.FontStyle\n  - System.Windows.Controls.Control.FontStyleProperty\n  - System.Windows.Controls.Control.FontWeight\n  - System.Windows.Controls.Control.FontWeightProperty\n  - System.Windows.Controls.Control.Foreground\n  - System.Windows.Controls.Control.ForegroundProperty\n  - System.Windows.Controls.Control.HorizontalContentAlignment\n  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  - System.Windows.Controls.Control.IsTabStop\n  - System.Windows.Controls.Control.IsTabStopProperty\n  - System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.MouseDoubleClick\n  - System.Windows.Controls.Control.MouseDoubleClickEvent\n  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  - System.Windows.Controls.Control.Padding\n  - System.Windows.Controls.Control.PaddingProperty\n  - System.Windows.Controls.Control.PreviewMouseDoubleClick\n  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  - System.Windows.Controls.Control.TabIndex\n  - System.Windows.Controls.Control.TabIndexProperty\n  - System.Windows.Controls.Control.Template\n  - System.Windows.Controls.Control.TemplateProperty\n  - System.Windows.Controls.Control.VerticalContentAlignment\n  - System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  - System.Windows.Controls.ItemsControl.AddChild(System.Object)\n  - System.Windows.Controls.ItemsControl.AddText(System.String)\n  - System.Windows.Controls.ItemsControl.AlternationCount\n  - System.Windows.Controls.ItemsControl.AlternationCountProperty\n  - System.Windows.Controls.ItemsControl.AlternationIndexProperty\n  - System.Windows.Controls.ItemsControl.BeginInit\n  - System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)\n  - System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)\n  - System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)\n  - System.Windows.Controls.ItemsControl.DisplayMemberPath\n  - System.Windows.Controls.ItemsControl.DisplayMemberPathProperty\n  - System.Windows.Controls.ItemsControl.EndInit\n  - System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)\n  - System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)\n  - System.Windows.Controls.ItemsControl.GroupStyle\n  - System.Windows.Controls.ItemsControl.GroupStyleSelector\n  - System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty\n  - System.Windows.Controls.ItemsControl.HasItems\n  - System.Windows.Controls.ItemsControl.HasItemsProperty\n  - System.Windows.Controls.ItemsControl.IsGrouping\n  - System.Windows.Controls.ItemsControl.IsGroupingProperty\n  - System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)\n  - System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive\n  - System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty\n  - System.Windows.Controls.ItemsControl.IsTextSearchEnabled\n  - System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty\n  - System.Windows.Controls.ItemsControl.ItemBindingGroup\n  - System.Windows.Controls.ItemsControl.ItemBindingGroupProperty\n  - System.Windows.Controls.ItemsControl.ItemContainerGenerator\n  - System.Windows.Controls.ItemsControl.ItemContainerStyle\n  - System.Windows.Controls.ItemsControl.ItemContainerStyleProperty\n  - System.Windows.Controls.ItemsControl.ItemContainerStyleSelector\n  - System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty\n  - System.Windows.Controls.ItemsControl.Items\n  - System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)\n  - System.Windows.Controls.ItemsControl.ItemsPanel\n  - System.Windows.Controls.ItemsControl.ItemsPanelProperty\n  - System.Windows.Controls.ItemsControl.ItemsSource\n  - System.Windows.Controls.ItemsControl.ItemsSourceProperty\n  - System.Windows.Controls.ItemsControl.ItemStringFormat\n  - System.Windows.Controls.ItemsControl.ItemStringFormatProperty\n  - System.Windows.Controls.ItemsControl.ItemTemplate\n  - System.Windows.Controls.ItemsControl.ItemTemplateProperty\n  - System.Windows.Controls.ItemsControl.ItemTemplateSelector\n  - System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty\n  - System.Windows.Controls.ItemsControl.LogicalChildren\n  - System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)\n  - System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)\n  - System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)\n  - System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)\n  - System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)\n  - System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)\n  - System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)\n  - System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)\n  - System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)\n  - System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)\n  - System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)\n  - System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)\n  - System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle\n  - System.Windows.Controls.ItemsControl.ShouldSerializeItems\n  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear\n  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)\n  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)\n  - System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)\n  - System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.ItemsControl.ToString\n  - System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride\n  - System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)\n  - System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector\n  - System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty\n  - System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate\n  - System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: ContextMenu()\n  nameWithType: ContextMenu.ContextMenu()\n  fullName: System.Windows.Controls.ContextMenu.ContextMenu()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> class.\n  syntax:\n    content: public ContextMenu ();\n    parameters: []\n  overload: System.Windows.Controls.ContextMenu.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.Closed\n  id: Closed\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: Closed\n  nameWithType: ContextMenu.Closed\n  fullName: System.Windows.Controls.ContextMenu.Closed\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a particular instance of a <xref href=\"System.Windows.Controls.ContextMenu\"></xref> closes.\n  remarks: \"<a name=\\\"routedEventInfo_Closed\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and Closed.  \\n  \\n [!code-xml[ContextMenu#ContextMenuEvents](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuevents)]  \\n  \\n [!code-vb[ContextMenu#ContextMenuEventHandlers](~/add/codesnippet/visualbasic/ContextMenusVB/Pane1.xaml.vb#contextmenueventhandlers)]\\n [!code-cs[ContextMenu#ContextMenuEventHandlers](~/add/codesnippet/csharp/ContextMenu.ContextMenus/Pane1.xaml.cs#contextmenueventhandlers)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler Closed;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.ClosedEvent\n  id: ClosedEvent\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: ClosedEvent\n  nameWithType: ContextMenu.ClosedEvent\n  fullName: System.Windows.Controls.ContextMenu.ClosedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ClosedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback\n  id: CustomPopupPlacementCallback\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: CustomPopupPlacementCallback\n  nameWithType: ContextMenu.CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a callback that indicates where a <xref href=\"System.Windows.Controls.ContextMenu\"></xref> should be placed on the screen.\n  remarks: \"The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode> for the callback delegate to be used.  \\n  \\n The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>. When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.  \\n  \\n The behavior is the same as it is for the popup.  For more information, see [How to: Specify a Custom Popup Position](~/add/includes/ajax-current-ext-md.md) and [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032).  \\n  \\n<a name=\\\"dependencyPropertyInfo_CustomPopupPlacementCallback\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }\n    return:\n      type: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n      description: A callback that specifies the location of the <xref href=\"System.Windows.Controls.ContextMenu\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty\n  id: CustomPopupPlacementCallbackProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: CustomPopupPlacementCallbackProperty\n  nameWithType: ContextMenu.CustomPopupPlacementCallbackProperty\n  fullName: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.HandlesScrolling\n  id: HandlesScrolling\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: HandlesScrolling\n  nameWithType: ContextMenu.HandlesScrolling\n  fullName: System.Windows.Controls.ContextMenu.HandlesScrolling\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates whether the control supports scrolling.\n  remarks: If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.\n  syntax:\n    content: protected override bool HandlesScrolling { get; }\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.HandlesScrolling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.HasDropShadow\n  id: HasDropShadow\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: HasDropShadow\n  nameWithType: ContextMenu.HasDropShadow\n  fullName: System.Windows.Controls.ContextMenu.HasDropShadow\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether the context menu appears with a dropped shadow.\n  remarks: \"When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName>. Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property is `false`.  \\n  \\n<a name=\\\"dependencyPropertyInfo_\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to use the HasDropShadow property.  \\n  \\n [!code-xml[ContextMenu#ContextMenuProps](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuprops)]\"\n  syntax:\n    content: public bool HasDropShadow { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context menu appears with a dropped shadow; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.HasDropShadow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.HasDropShadowProperty\n  id: HasDropShadowProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: HasDropShadowProperty\n  nameWithType: ContextMenu.HasDropShadowProperty\n  fullName: System.Windows.Controls.ContextMenu.HasDropShadowProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.HasDropShadow*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty HasDropShadowProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.HorizontalOffset\n  id: HorizontalOffset\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: HorizontalOffset\n  nameWithType: ContextMenu.HorizontalOffset\n  fullName: System.Windows.Controls.ContextMenu.HorizontalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Get or sets the horizontal distance between the target origin and the popup alignment point.\n  remarks: \"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_HorizontalOffset\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n<a name=\\\"xamlAttributeUsage_HorizontalOffset\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object HorizontalOffset=\\\"double\\\"/>  \\n- or –  \\n<object HorizontalOffset =\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_HorizontalOffset\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For instance a value of `1` is acceptable.  \\n  \\n The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n **Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.\"\n  example:\n  - \"The following example shows how to use the HorizontalOffset property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.  \\n  \\n [!code-xml[ContextMenu#ContextMenuProps](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuprops)]\"\n  syntax:\n    content: public double HorizontalOffset { get; set; }\n    return:\n      type: System.Double\n      description: The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.\n  overload: System.Windows.Controls.ContextMenu.HorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.HorizontalOffsetProperty\n  id: HorizontalOffsetProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: HorizontalOffsetProperty\n  nameWithType: ContextMenu.HorizontalOffsetProperty\n  fullName: System.Windows.Controls.ContextMenu.HorizontalOffsetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.IsOpen\n  id: IsOpen\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: IsOpen\n  nameWithType: ContextMenu.IsOpen\n  fullName: System.Windows.Controls.ContextMenu.IsOpen\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is visible.\n  remarks: \"When IsOpen is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsOpen\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|\"\n  example:\n  - \"This example shows how to check to determine whether the IsOpen property is set to `true`.  \\n  \\n [!code-vb[ContextMenu#ContextMenuIsOpen](~/add/codesnippet/visualbasic/ContextMenusVB/Pane1.xaml.vb#contextmenuisopen)]\\n [!code-cs[ContextMenu#ContextMenuIsOpen](~/add/codesnippet/csharp/ContextMenu.ContextMenus/Pane1.xaml.cs#contextmenuisopen)]\"\n  syntax:\n    content: public bool IsOpen { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.IsOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.IsOpenProperty\n  id: IsOpenProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: IsOpenProperty\n  nameWithType: ContextMenu.IsOpenProperty\n  fullName: System.Windows.Controls.ContextMenu.IsOpenProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.IsOpen*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsOpenProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)\n  id: OnClosed(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnClosed(RoutedEventArgs)\n  nameWithType: ContextMenu.OnClosed(RoutedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnClosed(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> event occurs.\n  syntax:\n    content: protected virtual void OnClosed (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data for the <xref href=\"System.Windows.Controls.ContextMenu.Closed\"></xref> event.\n  overload: System.Windows.Controls.ContextMenu.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: ContextMenu.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates and returns a <xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.ContextMenu\"></xref>.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: A <xref href=\"System.Windows.Automation.Peers.ContextMenuAutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.ContextMenu\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContextMenu.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Reports that the <xref:System.Windows.UIElement.IsKeyboardFocusWithin*> property changed.\n  syntax:\n    content: protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The event data for the <xref href=\"System.Windows.UIElement.IsKeyboardFocusWithinChanged\"></xref> event.\n  overload: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ContextMenu.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when a <xref href=\"System.Windows.ContentElement.KeyDown\"></xref> event is raised by an object inside the <xref href=\"System.Windows.Controls.ContextMenu\"></xref>.\n  syntax:\n    content: protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The event data for the <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event.\n  overload: System.Windows.Controls.ContextMenu.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ContextMenu.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Responds to the <xref href=\"System.Windows.ContentElement.KeyUp\"></xref> event.\n  syntax:\n    content: protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The event data for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> event.\n  overload: System.Windows.Controls.ContextMenu.OnKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)\n  id: OnOpened(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnOpened(RoutedEventArgs)\n  nameWithType: ContextMenu.OnOpened(RoutedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnOpened(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> event occurs.\n  syntax:\n    content: protected virtual void OnOpened (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data for the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> event.\n  overload: System.Windows.Controls.ContextMenu.OnOpened*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)\n  id: OnVisualParentChanged(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OnVisualParentChanged(DependencyObject)\n  nameWithType: ContextMenu.OnVisualParentChanged(DependencyObject)\n  fullName: System.Windows.Controls.ContextMenu.OnVisualParentChanged(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when a context menu's visual parent changes.\n  syntax:\n    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);\n    parameters:\n    - id: oldParent\n      type: System.Windows.DependencyObject\n      description: The object that the context menu was previously attached to.\n  overload: System.Windows.Controls.ContextMenu.OnVisualParentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.Opened\n  id: Opened\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: Opened\n  nameWithType: ContextMenu.Opened\n  fullName: System.Windows.Controls.ContextMenu.Opened\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a particular instance of a context menu opens.\n  remarks: \"<a name=\\\"routedEventInfo_Opened\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: Opened and <xref:System.Windows.Controls.ContextMenu.Closed>.  \\n  \\n [!code-xml[ContextMenu#ContextMenuEvents](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuevents)]  \\n  \\n [!code-vb[ContextMenu#ContextMenuEventHandlers](~/add/codesnippet/visualbasic/ContextMenusVB/Pane1.xaml.vb#contextmenueventhandlers)]\\n [!code-cs[ContextMenu#ContextMenuEventHandlers](~/add/codesnippet/csharp/ContextMenu.ContextMenus/Pane1.xaml.cs#contextmenueventhandlers)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler Opened;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.OpenedEvent\n  id: OpenedEvent\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: OpenedEvent\n  nameWithType: ContextMenu.OpenedEvent\n  fullName: System.Windows.Controls.ContextMenu.OpenedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.ContextMenu.Opened\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent OpenedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.Placement\n  id: Placement\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: Placement\n  nameWithType: ContextMenu.Placement\n  fullName: System.Windows.Controls.ContextMenu.Placement\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the Placement property of a <xref href=\"System.Windows.Controls.ContextMenu\"></xref>.\n  remarks: \"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens. If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>.  If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, Placement is set to <xref:System.Windows.Controls.Primitives.PlacementMode>.  If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=fullName> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.  \\n  \\n You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_Placement\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to use the Placement property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.  \\n  \\n [!code-xml[ContextMenu#ContextMenuPlacement](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuplacement)]\"\n  syntax:\n    content: public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }\n    return:\n      type: System.Windows.Controls.Primitives.PlacementMode\n      description: One of the <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration. The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.Placement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PlacementProperty\n  id: PlacementProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PlacementProperty\n  nameWithType: ContextMenu.PlacementProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.Placement*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PlacementRectangle\n  id: PlacementRectangle\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PlacementRectangle\n  nameWithType: ContextMenu.PlacementRectangle\n  fullName: System.Windows.Controls.ContextMenu.PlacementRectangle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the area relative to which the context menu is positioned when it opens.\n  remarks: \"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_PlacementRectangle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to use the PlacementRectangle property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.  \\n  \\n [!code-xml[ContextMenu#ContextMenuPlacement](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuplacement)]\"\n  syntax:\n    content: public System.Windows.Rect PlacementRectangle { get; set; }\n    return:\n      type: System.Windows.Rect\n      description: The area that defines the rectangle that is used to position the context menu. The default is <xref:System.Windows.Rect.Empty*>.\n  overload: System.Windows.Controls.ContextMenu.PlacementRectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PlacementRectangleProperty\n  id: PlacementRectangleProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PlacementRectangleProperty\n  nameWithType: ContextMenu.PlacementRectangleProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementRectangleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PlacementTarget\n  id: PlacementTarget\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PlacementTarget\n  nameWithType: ContextMenu.PlacementTarget\n  fullName: System.Windows.Controls.ContextMenu.PlacementTarget\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.UIElement\"></xref> relative to which the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is positioned when it opens.\n  remarks: \"When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=fullName> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens. To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=fullName> property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_PlacementTarget\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The target of a <xref:System.Windows.Controls.ContextMenu> is its parent. The following examples show how to use the PlacementTarget property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.  \\n  \\n [!code-cs[TabControlwithContextMenu#3](~/add/codesnippet/csharp/TabControlwithContextMenu.TabControlEx/Pane1.xaml.cs#3)]\\n [!code-vb[TabControlwithContextMenu#3](~/add/codesnippet/visualbasic/TabControlwithContextMenu.tabcontrolex/pane1.xaml.vb#3)]  \\n  \\n [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/add/codesnippet/visualbasic/TabControlContextMenu_snip.tabcontrolex/pane1.xaml.vb#fromitemcontainer)]\\n [!code-cs[TabControlContextMenu_snip#FromItemContainer](~/add/codesnippet/csharp/TabControlContextMenu_snip.TabControlEx/Pane1.xaml.cs#fromitemcontainer)]\"\n  syntax:\n    content: public System.Windows.UIElement PlacementTarget { get; set; }\n    return:\n      type: System.Windows.UIElement\n      description: The element relative to which the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> is positioned when it opens. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.PlacementTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PlacementTargetProperty\n  id: PlacementTargetProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PlacementTargetProperty\n  nameWithType: ContextMenu.PlacementTargetProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementTargetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.PlacementTarget*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementTargetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)\n  id: PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: PrepareContainerForItemOverride(DependencyObject,Object)\n  nameWithType: ContextMenu.PrepareContainerForItemOverride(DependencyObject,Object)\n  fullName: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(DependencyObject,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Prepares the specified element to display the specified item.\n  remarks: Preparing the element may involve applying styles, setting bindings, and so on.\n  syntax:\n    content: protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: Element used to display the specified item.\n    - id: item\n      type: System.Object\n      description: Specified item.\n  overload: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.StaysOpen\n  id: StaysOpen\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: StaysOpen\n  nameWithType: ContextMenu.StaysOpen\n  fullName: System.Windows.Controls.ContextMenu.StaysOpen\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.ContextMenu\"></xref> should close automatically.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_StaysOpen\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example uses the StaysOpen property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.  \\n  \\n [!code-xml[ContextMenu#ContextMenuEvents](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuevents)]\"\n  syntax:\n    content: public bool StaysOpen { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the menu should stay open until the <xref:System.Windows.Controls.ContextMenu.IsOpen*> property changes to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ContextMenu.StaysOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.StaysOpenProperty\n  id: StaysOpenProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: StaysOpenProperty\n  nameWithType: ContextMenu.StaysOpenProperty\n  fullName: System.Windows.Controls.ContextMenu.StaysOpenProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.StaysOpen*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StaysOpenProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.VerticalOffset\n  id: VerticalOffset\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: VerticalOffset\n  nameWithType: ContextMenu.VerticalOffset\n  fullName: System.Windows.Controls.ContextMenu.VerticalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Get or sets the vertical distance between the target origin and the popup alignment point.\n  remarks: \"You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.  These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_VerticalOffset\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n<a name=\\\"xamlAttributeUsage_VerticalOffset\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object VerticalOffset=\\\"double\\\"/>  \\n- or –  \\n<object VerticalOffset =\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_VerticalOffset\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For instance, a value of `1` is acceptable. The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n> [!NOTE]\\n>  In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.\"\n  example:\n  - \"The following example shows how to use the VerticalOffset property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.  \\n  \\n [!code-xml[ContextMenu#ContextMenuProps](~/add/codesnippet/xaml/ContextMenu.ContextMenus/Pane1.xaml#contextmenuprops)]\"\n  syntax:\n    content: public double VerticalOffset { get; set; }\n    return:\n      type: System.Double\n      description: The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.\n  overload: System.Windows.Controls.ContextMenu.VerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ContextMenu.VerticalOffsetProperty\n  id: VerticalOffsetProperty\n  parent: System.Windows.Controls.ContextMenu\n  langs:\n  - csharp\n  name: VerticalOffsetProperty\n  nameWithType: ContextMenu.VerticalOffsetProperty\n  fullName: System.Windows.Controls.ContextMenu.VerticalOffsetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.ContextMenu.VerticalOffset*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.Primitives.MenuBase\n  isExternal: false\n  name: System.Windows.Controls.Primitives.MenuBase\n- uid: System.Windows.Controls.ContextMenu.#ctor\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: ContextMenu()\n  nameWithType: ContextMenu.ContextMenu()\n  fullName: System.Windows.Controls.ContextMenu.ContextMenu()\n- uid: System.Windows.Controls.ContextMenu.Closed\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: Closed\n  nameWithType: ContextMenu.Closed\n  fullName: System.Windows.Controls.ContextMenu.Closed\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.Controls.ContextMenu.ClosedEvent\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: ContextMenu.ClosedEvent\n  fullName: System.Windows.Controls.ContextMenu.ClosedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: ContextMenu.CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: CustomPopupPlacementCallbackProperty\n  nameWithType: ContextMenu.CustomPopupPlacementCallbackProperty\n  fullName: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.ContextMenu.HandlesScrolling\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HandlesScrolling\n  nameWithType: ContextMenu.HandlesScrolling\n  fullName: System.Windows.Controls.ContextMenu.HandlesScrolling\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.ContextMenu.HasDropShadow\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HasDropShadow\n  nameWithType: ContextMenu.HasDropShadow\n  fullName: System.Windows.Controls.ContextMenu.HasDropShadow\n- uid: System.Windows.Controls.ContextMenu.HasDropShadowProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HasDropShadowProperty\n  nameWithType: ContextMenu.HasDropShadowProperty\n  fullName: System.Windows.Controls.ContextMenu.HasDropShadowProperty\n- uid: System.Windows.Controls.ContextMenu.HorizontalOffset\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: ContextMenu.HorizontalOffset\n  fullName: System.Windows.Controls.ContextMenu.HorizontalOffset\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.ContextMenu.HorizontalOffsetProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HorizontalOffsetProperty\n  nameWithType: ContextMenu.HorizontalOffsetProperty\n  fullName: System.Windows.Controls.ContextMenu.HorizontalOffsetProperty\n- uid: System.Windows.Controls.ContextMenu.IsOpen\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: IsOpen\n  nameWithType: ContextMenu.IsOpen\n  fullName: System.Windows.Controls.ContextMenu.IsOpen\n- uid: System.Windows.Controls.ContextMenu.IsOpenProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: IsOpenProperty\n  nameWithType: ContextMenu.IsOpenProperty\n  fullName: System.Windows.Controls.ContextMenu.IsOpenProperty\n- uid: System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnClosed(RoutedEventArgs)\n  nameWithType: ContextMenu.OnClosed(RoutedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnClosed(RoutedEventArgs)\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: ContextMenu.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContextMenu.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ContextMenu.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Input.KeyEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Input.KeyEventArgs\n- uid: System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ContextMenu.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnOpened(RoutedEventArgs)\n  nameWithType: ContextMenu.OnOpened(RoutedEventArgs)\n  fullName: System.Windows.Controls.ContextMenu.OnOpened(RoutedEventArgs)\n- uid: System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnVisualParentChanged(DependencyObject)\n  nameWithType: ContextMenu.OnVisualParentChanged(DependencyObject)\n  fullName: System.Windows.Controls.ContextMenu.OnVisualParentChanged(DependencyObject)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Controls.ContextMenu.Opened\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: Opened\n  nameWithType: ContextMenu.Opened\n  fullName: System.Windows.Controls.ContextMenu.Opened\n- uid: System.Windows.Controls.ContextMenu.OpenedEvent\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OpenedEvent\n  nameWithType: ContextMenu.OpenedEvent\n  fullName: System.Windows.Controls.ContextMenu.OpenedEvent\n- uid: System.Windows.Controls.ContextMenu.Placement\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: Placement\n  nameWithType: ContextMenu.Placement\n  fullName: System.Windows.Controls.ContextMenu.Placement\n- uid: System.Windows.Controls.Primitives.PlacementMode\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: PlacementMode\n  nameWithType: PlacementMode\n  fullName: System.Windows.Controls.Primitives.PlacementMode\n- uid: System.Windows.Controls.ContextMenu.PlacementProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementProperty\n  nameWithType: ContextMenu.PlacementProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementProperty\n- uid: System.Windows.Controls.ContextMenu.PlacementRectangle\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementRectangle\n  nameWithType: ContextMenu.PlacementRectangle\n  fullName: System.Windows.Controls.ContextMenu.PlacementRectangle\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Controls.ContextMenu.PlacementRectangleProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementRectangleProperty\n  nameWithType: ContextMenu.PlacementRectangleProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementRectangleProperty\n- uid: System.Windows.Controls.ContextMenu.PlacementTarget\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementTarget\n  nameWithType: ContextMenu.PlacementTarget\n  fullName: System.Windows.Controls.ContextMenu.PlacementTarget\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Controls.ContextMenu.PlacementTargetProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementTargetProperty\n  nameWithType: ContextMenu.PlacementTargetProperty\n  fullName: System.Windows.Controls.ContextMenu.PlacementTargetProperty\n- uid: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PrepareContainerForItemOverride(DependencyObject,Object)\n  nameWithType: ContextMenu.PrepareContainerForItemOverride(DependencyObject,Object)\n  fullName: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(DependencyObject,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.ContextMenu.StaysOpen\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: StaysOpen\n  nameWithType: ContextMenu.StaysOpen\n  fullName: System.Windows.Controls.ContextMenu.StaysOpen\n- uid: System.Windows.Controls.ContextMenu.StaysOpenProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: StaysOpenProperty\n  nameWithType: ContextMenu.StaysOpenProperty\n  fullName: System.Windows.Controls.ContextMenu.StaysOpenProperty\n- uid: System.Windows.Controls.ContextMenu.VerticalOffset\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: ContextMenu.VerticalOffset\n  fullName: System.Windows.Controls.ContextMenu.VerticalOffset\n- uid: System.Windows.Controls.ContextMenu.VerticalOffsetProperty\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: VerticalOffsetProperty\n  nameWithType: ContextMenu.VerticalOffsetProperty\n  fullName: System.Windows.Controls.ContextMenu.VerticalOffsetProperty\n- uid: System.Windows.Controls.ContextMenu.#ctor*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: ContextMenu\n  nameWithType: ContextMenu.ContextMenu\n- uid: System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: ContextMenu.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.ContextMenu.HandlesScrolling*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HandlesScrolling\n  nameWithType: ContextMenu.HandlesScrolling\n- uid: System.Windows.Controls.ContextMenu.HasDropShadow*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HasDropShadow\n  nameWithType: ContextMenu.HasDropShadow\n- uid: System.Windows.Controls.ContextMenu.HorizontalOffset*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: ContextMenu.HorizontalOffset\n- uid: System.Windows.Controls.ContextMenu.IsOpen*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: IsOpen\n  nameWithType: ContextMenu.IsOpen\n- uid: System.Windows.Controls.ContextMenu.OnClosed*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnClosed\n  nameWithType: ContextMenu.OnClosed\n- uid: System.Windows.Controls.ContextMenu.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: ContextMenu.OnCreateAutomationPeer\n- uid: System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnIsKeyboardFocusWithinChanged\n  nameWithType: ContextMenu.OnIsKeyboardFocusWithinChanged\n- uid: System.Windows.Controls.ContextMenu.OnKeyDown*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: ContextMenu.OnKeyDown\n- uid: System.Windows.Controls.ContextMenu.OnKeyUp*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: ContextMenu.OnKeyUp\n- uid: System.Windows.Controls.ContextMenu.OnOpened*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnOpened\n  nameWithType: ContextMenu.OnOpened\n- uid: System.Windows.Controls.ContextMenu.OnVisualParentChanged*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: OnVisualParentChanged\n  nameWithType: ContextMenu.OnVisualParentChanged\n- uid: System.Windows.Controls.ContextMenu.Placement*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: Placement\n  nameWithType: ContextMenu.Placement\n- uid: System.Windows.Controls.ContextMenu.PlacementRectangle*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementRectangle\n  nameWithType: ContextMenu.PlacementRectangle\n- uid: System.Windows.Controls.ContextMenu.PlacementTarget*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PlacementTarget\n  nameWithType: ContextMenu.PlacementTarget\n- uid: System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: PrepareContainerForItemOverride\n  nameWithType: ContextMenu.PrepareContainerForItemOverride\n- uid: System.Windows.Controls.ContextMenu.StaysOpen*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: StaysOpen\n  nameWithType: ContextMenu.StaysOpen\n- uid: System.Windows.Controls.ContextMenu.VerticalOffset*\n  parent: System.Windows.Controls.ContextMenu\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: ContextMenu.VerticalOffset\n"}