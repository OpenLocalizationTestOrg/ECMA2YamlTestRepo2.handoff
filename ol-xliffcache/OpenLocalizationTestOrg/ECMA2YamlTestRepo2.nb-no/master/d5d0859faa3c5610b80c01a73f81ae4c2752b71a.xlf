<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5d0859faa3c5610b80c01a73f81ae4c2752b71a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.Compiler.CodeDomProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b44a1744e5a517e8a89e616debfde5ed79716f55</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1266f9254481fb65fe6dbb278edc959c58293ed3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for CodeDomProvider implementations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is abstract.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Compiles an assembly based on the <bpt id="p1">&lt;xref href="System.CodeDom"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> trees contained in the specified array of <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects, using the specified compiler settings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the settings for the compilation.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the code to compile.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerResults"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the results of the compilation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the settings for the compilation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An array of the names of the files to compile.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerResults"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the results of compilation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the compiler settings for this compilation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An array of source code strings to compile.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerResults"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that indicates the results of compilation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler*&gt; method is overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new code compiler.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended alternative is to call the &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; methods that are directly available in the code provider.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.ICodeCompiler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used for compilation of <bpt id="p2">&lt;xref href="System.CodeDom"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> based source code representations.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates an escaped identifier for the specified value.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>CreateEscapedIdentifier tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is referred to an escaped identifier.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The escaped identifier contains the same <ph id="ph1">`value`</ph> but has escape-code formatting added to differentiate the identifier from the keyword.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two implementation examples are preceding the <ph id="ph1">`value`</ph> with "@" or bracketing the <ph id="ph2">`value`</ph> with "[" and "]".</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The string for which to create an escaped identifier.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The escaped identifier for the value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*&gt; method is overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new code generator.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended alternative is to call the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; methods that are directly available in the &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.ICodeGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to generate <bpt id="p2">&lt;xref href="System.CodeDom"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> based source code representations.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new code generator using the specified &lt;xref:System.IO.TextWriter&gt; for output.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the specified &lt;xref:System.IO.TextWriter&gt; for output.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports more optimized code generation that incrementally updates the source code.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The base class implementation calls the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph> and results in a &lt;xref:System.NotSupportedException&gt; if an &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; object is not returned.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; to use to output.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.ICodeGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to generate <bpt id="p2">&lt;xref href="System.CodeDom"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> based source code representations.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new code generator using the specified file name for output.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the specified file name for output.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The base class implementation calls the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph> and results in a &lt;xref:System.NotSupportedException&gt; if an &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; object is not returned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The file name to output to.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.ICodeGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to generate <bpt id="p2">&lt;xref href="System.CodeDom"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> based source code representations.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new code parser.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.ICodeParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to parse source code.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The base implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the specified language.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The language name.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A CodeDOM provider that is implemented for the specified language name.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">language</ph><ept id="p1">&lt;/code&gt;</ept> does not have a configured provider on this computer.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">language</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the specified language and provider options.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>CreateProvider enables you to specify at run time the version of the code provider you want to instantiate.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the CreateProvider method.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use CreateProvider when you want to dynamically find a configured provider implementation for a specific language and options.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Language names are case-insensitive.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about supported provider options, see the specific CodeDOM provider documentation.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The language name.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A collection of provider options from the configuration file.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A CodeDOM provider that is implemented for the specified language name and options.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Creates a valid identifier for the specified value.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The string for which to generate a valid identifier.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A valid identifier for the specified value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Neither this method nor the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator*&gt; method is overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the default file name extension to use for source code files in the current language.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A file name extension corresponding to the extension of the source files of the current language.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The base implementation always returns &lt;xref:System.String&gt;.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, this method is provided by the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation that is returned by the &lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt; method of the provider.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the code provider does not override this method, the &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; implementation is called by the base class.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>