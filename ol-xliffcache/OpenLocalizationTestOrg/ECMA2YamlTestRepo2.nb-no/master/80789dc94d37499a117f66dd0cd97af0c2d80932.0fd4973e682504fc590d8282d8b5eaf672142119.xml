{"nodes":[{"pos":[831,884],"content":"Associates a class with a column in a database table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Associates a class with a column in a database table.","pos":[0,53]}]},{"pos":[897,1334],"content":"Use this attribute to designate a member of an entity class to represent a column in a database table. You can apply this attribute to any field or property that is `public`, `private`, or `internal`.       Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] saves changes to the database.       Use commas to separate multiple properties on the attribute.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this attribute to designate a member of an entity class to represent a column in a database table.","pos":[0,102]},{"content":"You can apply this attribute to any field or property that is <ph id=\"ph1\">`public`</ph>, <ph id=\"ph2\">`private`</ph>, or <ph id=\"ph3\">`internal`</ph>.","pos":[103,200],"source":" You can apply this attribute to any field or property that is `public`, `private`, or `internal`."},{"content":"Only those entity class members identified as columns are persisted when <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> saves changes to the database.","pos":[207,366],"source":"       Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] saves changes to the database."},{"content":"Use commas to separate multiple properties on the attribute.","pos":[373,433]}]},{"pos":[3509,3611],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.ColumnAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.ColumnAttribute\"></xref> class."},{"pos":[4145,4229],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.AutoSync\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration."},{"pos":[4673,4738],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.AutoSync\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> value."},{"pos":[5211,5265],"content":"Gets or sets whether a column can contain null values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether a column can contain null values.","pos":[0,54]}]},{"pos":[5278,5819],"content":"If you set this value to `false`, the data in the corresponding column is assumed to be non-null.      > [!NOTE] >  This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience. The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property. For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you set this value to <ph id=\"ph1\">`false`</ph>, the data in the corresponding column is assumed to be non-null.","pos":[0,97],"source":"If you set this value to `false`, the data in the corresponding column is assumed to be non-null."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property is duplicated from the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt; property for convenience.","pos":[103,236],"source":"      > [!NOTE] >  This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience."},{"content":"The &lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt; method uses only the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt; property.","pos":[237,383],"source":" The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property."},{"content":"For this reason, you must specify whether a column can contain null values in the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt; property also.","pos":[384,538],"source":" For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also."}]},{"pos":[6203,6274],"content":"Default = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default = <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[6733,6778],"content":"Gets or sets the type of the database column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of the database column.","pos":[0,45]}]},{"pos":[6791,7199],"content":"Use this property to specify the exact text that defines the column in a Transact-SQL table declaration. Specify the DbType property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.       The default value of DbType is inferred from the member type. For more information, see [SQL-CLR Type Mapping](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.","pos":[0,104]},{"content":"Specify the DbType property only if you plan to use &lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt; to create an instance of the database.","pos":[105,249],"source":" Specify the DbType property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database."},{"content":"The default value of DbType is inferred from the member type.","pos":[256,317]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SQL-CLR Type Mapping<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[318,406],"source":" For more information, see [SQL-CLR Type Mapping](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[7581,7593],"content":"See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"See Remarks.","pos":[0,12]}]},{"pos":[8069,8134],"content":"Gets or sets whether a column is a computed column in a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether a column is a computed column in a database.","pos":[0,65]}]},{"pos":[8147,8594],"content":"Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.       For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `\"UnitPrice * UnitsInStock\"`.      > [!NOTE] >  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property when you use &lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt; to define a column as containing computed values.","pos":[0,134],"source":"Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values."},{"content":"For example, if you want to create a column defined in SQL as <ph id=\"ph1\">`InventoryVal AS UnitPrice * UnitsInStock`</ph>, use the following <bpt id=\"p1\">*</bpt>expression<ept id=\"p1\">*</ept> string: <ph id=\"ph2\">`\"UnitPrice * UnitsInStock\"`</ph>.","pos":[141,315],"source":"       For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `\"UnitPrice * UnitsInStock\"`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> does not support computed columns as primary keys.","pos":[321,440],"source":"      > [!NOTE] >  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys."}]},{"pos":[8980,8996],"content":"Default = empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"Default = empty.","pos":[0,16]}]},{"pos":[9491,9570],"content":"Gets or sets whether a column contains values that the database auto-generates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether a column contains values that the database auto-generates.","pos":[0,79]}]},{"pos":[9583,9999],"content":"IsDbGenerated members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.      > [!NOTE] >  If the column holds primary key values and you designate IsDbGenerated as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"IsDbGenerated members are synchronized immediately after the row of data is inserted, and the members are available after &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; is completed.","pos":[0,188],"source":"IsDbGenerated members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the column holds primary key values and you designate IsDbGenerated as <ph id=\"ph2\">`true`</ph>, you should also add the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt; property by using the <ph id=\"ph3\">`IDENTITY`</ph> modifier.","pos":[194,413],"source":"      > [!NOTE] >  If the column holds primary key values and you designate IsDbGenerated as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier."}]},{"pos":[10387,10460],"content":"Default = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10968,11113],"content":"Gets or sets whether a column contains a discriminator value for a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> inheritance hierarchy.","needQuote":true,"needEscape":true,"source":"Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] inheritance hierarchy."},{"pos":[11126,11382],"content":"When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.       You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When <ph id=\"ph1\">`true`</ph>, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.","pos":[0,119],"source":"When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy."},{"content":"You can set this property to <ph id=\"ph1\">`true`</ph> for no more than one member, which must belong to the topmost mapped class in the hierarchy.","pos":[126,254],"source":"       You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy."}]},{"pos":[11772,11845],"content":"Default = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12340,12451],"content":"Gets or sets whether this class member represents a column that is part or all of the primary key of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether this class member represents a column that is part or all of the primary key of the table.","pos":[0,111]}]},{"pos":[12464,13083],"content":"Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view. Failure to do this prompts [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.       If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.      > [!NOTE] >  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.","pos":[0,176]},{"content":"Failure to do this prompts <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> to consider instances of the class as read-only for submitting changes to the database.","pos":[177,347],"source":" Failure to do this prompts [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database."},{"content":"If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.","pos":[354,489]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> does not support computed columns as primary keys.","pos":[495,614],"source":"      > [!NOTE] >  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys."}]},{"pos":[13470,13543],"content":"Default = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14020,14113],"content":"Gets or sets whether the column type of the member is a database timestamp or version number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether the column type of the member is a database timestamp or version number.","pos":[0,93]}]},{"pos":[14126,15133],"content":"Version numbers are incremented and timestamp columns are updated every time that the associated row is updated. (This property tells [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)       Note the following when `IsVersion` is true:      -   Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column. If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] infers the correct modifiers.       Version numbers are incremented and timestamp columns are updated every time that the associated row is updated. Members with `IsVersion=true` are synchronized immediately after the data row is updated. The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.","pos":[0,112]},{"content":"(This property tells <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)       Note the following when <ph id=\"ph2\">`IsVersion`</ph> is true:      -   Use &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt; to specify the correct modifiers to designate a version number or timestamp column.","pos":[113,529],"source":" (This property tells [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)       Note the following when `IsVersion` is true:      -   Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column."},{"content":"If you do not specify &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;, <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> infers the correct modifiers.","pos":[530,696],"source":" If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] infers the correct modifiers."},{"content":"Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.","pos":[703,815]},{"content":"Members with <ph id=\"ph1\">`IsVersion=true`</ph> are synchronized immediately after the data row is updated.","pos":[816,905],"source":" Members with `IsVersion=true` are synchronized immediately after the data row is updated."},{"content":"The new values are visible after &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; finishes.","pos":[906,1001],"source":" The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes."}]},{"pos":[15517,15596],"content":"Default value = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default value = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16080,16214],"content":"Gets or sets how <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> approaches the detection of optimistic concurrency conflicts.","needQuote":true,"needEscape":true,"source":"Gets or sets how [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts."},{"pos":[16227,16780],"content":"When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] detects concurrency conflicts.       If no member is designed as `IsVersion=true`, original member values are compared with the current database state.       The following enums are available:      -   `Always` Always use this column for conflict detection.      -   `Never` Never use this column for conflict detection.      -   `WhenChanged` Use this column only when the member has been changed by the application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this property is used with one of three enums, it determines how <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> detects concurrency conflicts.","pos":[0,156],"source":"When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] detects concurrency conflicts."},{"content":"If no member is designed as <ph id=\"ph1\">`IsVersion=true`</ph>, original member values are compared with the current database state.","pos":[163,277],"source":"       If no member is designed as `IsVersion=true`, original member values are compared with the current database state."},{"content":"The following enums are available:      -   <ph id=\"ph1\">`Always`</ph> Always use this column for conflict detection.","pos":[284,383],"source":"       The following enums are available:      -   `Always` Always use this column for conflict detection."},{"content":"-   <ph id=\"ph1\">`Never`</ph> Never use this column for conflict detection.","pos":[389,446],"source":"      -   `Never` Never use this column for conflict detection."},{"content":"-   <ph id=\"ph1\">`WhenChanged`</ph> Use this column only when the member has been changed by the application.","pos":[452,543],"source":"      -   `WhenChanged` Use this column only when the member has been changed by the application."}]},{"pos":[17225,17595],"content":"Default = <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>, unless <xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for a member.       Other values are <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> and <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Default = <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, unless &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*&gt; is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for a member.","pos":[0,212],"source":"Default = <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>, unless <xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for a member."},{"content":"Other values are <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[219,356],"source":"       Other values are <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> and <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.ColumnAttribute\n  id: ColumnAttribute\n  children:\n  - System.Data.Linq.Mapping.ColumnAttribute.#ctor\n  - System.Data.Linq.Mapping.ColumnAttribute.AutoSync\n  - System.Data.Linq.Mapping.ColumnAttribute.CanBeNull\n  - System.Data.Linq.Mapping.ColumnAttribute.DbType\n  - System.Data.Linq.Mapping.ColumnAttribute.Expression\n  - System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated\n  - System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator\n  - System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey\n  - System.Data.Linq.Mapping.ColumnAttribute.IsVersion\n  - System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck\n  langs:\n  - csharp\n  name: ColumnAttribute\n  nameWithType: ColumnAttribute\n  fullName: System.Data.Linq.Mapping.ColumnAttribute\n  type: Class\n  summary: Associates a class with a column in a database table.\n  remarks: \"Use this attribute to designate a member of an entity class to represent a column in a database table. You can apply this attribute to any field or property that is `public`, `private`, or `internal`.  \\n  \\n Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] saves changes to the database.  \\n  \\n Use commas to separate multiple properties on the attribute.\"\n  example:\n  - \"```vb#  \\n<Table(Name:=\\\"Employees\\\")>  _  \\nPublic Class Employees  \\n    Private _LastName As String  \\n    ' …  \\n    <Column(Storage:=\\\"_LastName\\\", DbType:=\\\"NVarChar(20) NOT NULL\\\", _  \\n        CanBeNull:=false)> _  \\n    Public Property LastName() As String  \\n        Get  \\n            Return Me._LastName  \\n        End Get  \\n        Set  \\n            If ((Me._LastName = value) _  \\n                = false) Then  \\n                Me.OnPropertyChanging(\\\"LastName\\\")  \\n                Me._LastName = value  \\n                Me.OnPropertyChanged(\\\"LastName\\\")  \\n            End If  \\n        End Set  \\n    End Property  \\nEnd Class  \\n```  \\n  \\n```c#  \\n[Table(Name=\\\"Employees\\\")]  \\npublic class Employees  \\n{  \\n    private string _LastName;      \\n    // …  \\n    [Column(Storage=\\\"_LastName\\\", DbType=\\\"NVarChar(20) NOT NULL\\\",   \\n        CanBeNull=false)]  \\n    public string LastName  \\n    {  \\n        get  \\n        {  \\n            return this._LastName;  \\n        }  \\n        set  \\n        {  \\n            if ((this._LastName != value))  \\n            {  \\n                this.OnPropertyChanging(\\\"LastName\\\");  \\n                this._LastName = value;  \\n                this.OnPropertyChanged(\\\"LastName\\\");  \\n            }  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]\n\n      public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute\n  inheritance:\n  - System.Attribute\n  - System.Data.Linq.Mapping.DataAttribute\n  implements: []\n  inheritedMembers:\n  - System.Data.Linq.Mapping.DataAttribute.Name\n  - System.Data.Linq.Mapping.DataAttribute.Storage\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: ColumnAttribute()\n  nameWithType: ColumnAttribute.ColumnAttribute()\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.ColumnAttribute\"></xref> class.\n  syntax:\n    content: public ColumnAttribute ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.ColumnAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync\n  id: AutoSync\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: AutoSync\n  nameWithType: ColumnAttribute.AutoSync\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets the <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#1)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#1)]\n  syntax:\n    content: public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }\n    return:\n      type: System.Data.Linq.Mapping.AutoSync\n      description: The <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> value.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull\n  id: CanBeNull\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: CanBeNull\n  nameWithType: ColumnAttribute.CanBeNull\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether a column can contain null values.\n  remarks: \"If you set this value to `false`, the data in the corresponding column is assumed to be non-null.  \\n  \\n> [!NOTE]\\n>  This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience. The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property. For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#2)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#2)]\n  syntax:\n    content: public bool CanBeNull { get; set; }\n    return:\n      type: System.Boolean\n      description: Default = <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType\n  id: DbType\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: ColumnAttribute.DbType\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets the type of the database column.\n  remarks: \"Use this property to specify the exact text that defines the column in a Transact-SQL table declaration. Specify the DbType property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.  \\n  \\n The default value of DbType is inferred from the member type. For more information, see [SQL-CLR Type Mapping](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#4)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#4)]\n  syntax:\n    content: public string DbType { get; set; }\n    return:\n      type: System.String\n      description: See Remarks.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.DbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression\n  id: Expression\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: ColumnAttribute.Expression\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether a column is a computed column in a database.\n  remarks: \"Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.  \\n  \\n For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `\\\"UnitPrice * UnitsInStock\\\"`.  \\n  \\n> [!NOTE]\\n>  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#5)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#5)]\n  syntax:\n    content: public string Expression { get; set; }\n    return:\n      type: System.String\n      description: Default = empty.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.Expression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated\n  id: IsDbGenerated\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: IsDbGenerated\n  nameWithType: ColumnAttribute.IsDbGenerated\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether a column contains values that the database auto-generates.\n  remarks: \"IsDbGenerated members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.  \\n  \\n> [!NOTE]\\n>  If the column holds primary key values and you designate IsDbGenerated as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#6)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#6)]\n  syntax:\n    content: public bool IsDbGenerated { get; set; }\n    return:\n      type: System.Boolean\n      description: Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator\n  id: IsDiscriminator\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: IsDiscriminator\n  nameWithType: ColumnAttribute.IsDiscriminator\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] inheritance hierarchy.\n  remarks: \"When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.  \\n  \\n You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#7)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#7)]\n  syntax:\n    content: public bool IsDiscriminator { get; set; }\n    return:\n      type: System.Boolean\n      description: Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey\n  id: IsPrimaryKey\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: IsPrimaryKey\n  nameWithType: ColumnAttribute.IsPrimaryKey\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether this class member represents a column that is part or all of the primary key of the table.\n  remarks: \"Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view. Failure to do this prompts [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.  \\n  \\n If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.  \\n  \\n> [!NOTE]\\n>  [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#8)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#8)]\n  syntax:\n    content: public bool IsPrimaryKey { get; set; }\n    return:\n      type: System.Boolean\n      description: Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion\n  id: IsVersion\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: IsVersion\n  nameWithType: ColumnAttribute.IsVersion\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether the column type of the member is a database timestamp or version number.\n  remarks: \"Version numbers are incremented and timestamp columns are updated every time that the associated row is updated. (This property tells [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)  \\n  \\n Note the following when `IsVersion` is true:  \\n  \\n-   Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column. If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] infers the correct modifiers.  \\n  \\n Version numbers are incremented and timestamp columns are updated every time that the associated row is updated. Members with `IsVersion=true` are synchronized immediately after the data row is updated. The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#9)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#9)]\n  syntax:\n    content: public bool IsVersion { get; set; }\n    return:\n      type: System.Boolean\n      description: Default value = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck\n  id: UpdateCheck\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  langs:\n  - csharp\n  name: UpdateCheck\n  nameWithType: ColumnAttribute.UpdateCheck\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets how [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.\n  remarks: \"When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] detects concurrency conflicts.  \\n  \\n If no member is designed as `IsVersion=true`, original member values are compared with the current database state.  \\n  \\n The following enums are available:  \\n  \\n-   `Always` Always use this column for conflict detection.  \\n  \\n-   `Never` Never use this column for conflict detection.  \\n  \\n-   `WhenChanged` Use this column only when the member has been changed by the application.\"\n  example:\n  - >-\n    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#10)]\n     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#10)]\n  syntax:\n    content: public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }\n    return:\n      type: System.Data.Linq.Mapping.UpdateCheck\n      description: \"Default = <xref href=\\\"System.Data.Linq.Mapping.UpdateCheck\\\"></xref>, unless <xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> for a member.  \\n  \\n Other values are <xref href=\\\"System.Data.Linq.Mapping.UpdateCheck\\\"></xref> and <xref href=\\\"System.Data.Linq.Mapping.UpdateCheck\\\"></xref>.\"\n  overload: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Linq.Mapping.DataAttribute\n  isExternal: false\n  name: System.Data.Linq.Mapping.DataAttribute\n- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: ColumnAttribute()\n  nameWithType: ColumnAttribute.ColumnAttribute()\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()\n- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: AutoSync\n  nameWithType: ColumnAttribute.AutoSync\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync\n- uid: System.Data.Linq.Mapping.AutoSync\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: AutoSync\n  nameWithType: AutoSync\n  fullName: System.Data.Linq.Mapping.AutoSync\n- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: CanBeNull\n  nameWithType: ColumnAttribute.CanBeNull\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: DbType\n  nameWithType: ColumnAttribute.DbType\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: Expression\n  nameWithType: ColumnAttribute.Expression\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: ColumnAttribute.IsDbGenerated\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: ColumnAttribute.IsDiscriminator\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: ColumnAttribute.IsPrimaryKey\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsVersion\n  nameWithType: ColumnAttribute.IsVersion\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion\n- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: ColumnAttribute.UpdateCheck\n  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck\n- uid: System.Data.Linq.Mapping.UpdateCheck\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: UpdateCheck\n  fullName: System.Data.Linq.Mapping.UpdateCheck\n- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: ColumnAttribute\n  nameWithType: ColumnAttribute.ColumnAttribute\n- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: AutoSync\n  nameWithType: ColumnAttribute.AutoSync\n- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: CanBeNull\n  nameWithType: ColumnAttribute.CanBeNull\n- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: DbType\n  nameWithType: ColumnAttribute.DbType\n- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: Expression\n  nameWithType: ColumnAttribute.Expression\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: ColumnAttribute.IsDbGenerated\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: ColumnAttribute.IsDiscriminator\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: ColumnAttribute.IsPrimaryKey\n- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: IsVersion\n  nameWithType: ColumnAttribute.IsVersion\n- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*\n  parent: System.Data.Linq.Mapping.ColumnAttribute\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: ColumnAttribute.UpdateCheck\n"}