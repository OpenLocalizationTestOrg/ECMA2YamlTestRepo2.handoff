{"nodes":[{"pos":[833,955],"content":"Represents the exception that is thrown when the view state cannot be loaded or validated. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the exception that is thrown when the view state cannot be loaded or validated. This class cannot be inherited.","pos":[0,122],"nodes":[{"content":"Represents the exception that is thrown when the view state cannot be loaded or validated.","pos":[0,90]},{"content":"This class cannot be inherited.","pos":[91,122]}]}]},{"pos":[968,2852],"content":"If an exception occurs when the page loads the view-state information, the page creates a ViewStateException object and passes it as an inner exception within an <xref:System.Web.HttpException> exception. The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.       The ViewStateException class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property. If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.       A view-state exception can be the result of a Message Authentication Codes (MAC) validation error. If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier. When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user. If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the ViewStateException object as an inner exception.       For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received. Within a Web farm, the machine key on each server should be set to a common key.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an exception occurs when the page loads the view-state information, the page creates a ViewStateException object and passes it as an inner exception within an &lt;xref:System.Web.HttpException&gt; exception.","pos":[0,204],"source":"If an exception occurs when the page loads the view-state information, the page creates a ViewStateException object and passes it as an inner exception within an <xref:System.Web.HttpException> exception."},{"content":"The &lt;xref:System.Web.HttpException&gt; exception is re-thrown to be handled by the application.","pos":[205,297],"source":" The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application."},{"content":"The ViewStateException class stores information about the exception in the &lt;xref:System.Web.UI.ViewStateException.Message%2A&gt; property.","pos":[304,439],"source":"       The ViewStateException class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property."},{"content":"If the request has permission to access the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property, then the &lt;xref:System.Web.UI.ViewStateException.Message%2A&gt; property contains the values returned from the &lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;, and &lt;xref:System.Web.UI.ViewStateException.Path%2A&gt; properties; otherwise, the &lt;xref:System.Web.UI.ViewStateException.Message%2A&gt; property contains a generic view-state error message.","pos":[440,1111],"source":" If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message."},{"content":"A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.","pos":[1118,1216]},{"content":"If the page attribute <ph id=\"ph1\">`enableViewStateMac`</ph> is set to <ph id=\"ph2\">`true`</ph>, view-state information is encoded with a MAC identifier.","pos":[1217,1334],"source":" If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier."},{"content":"When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.","pos":[1335,1479]},{"content":"If the page cannot validate the MAC encoding on the view-state information, it will throw an &lt;xref:System.Web.HttpException&gt; exception with the ViewStateException object as an inner exception.","pos":[1480,1672],"source":" If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the ViewStateException object as an inner exception."},{"content":"For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.","pos":[1679,1797]},{"content":"Within a Web farm, the machine key on each server should be set to a common key.","pos":[1798,1878]}]},{"pos":[4159,4253],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.ViewStateException\"></xref> class."},{"pos":[5063,5178],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with serialized data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.ViewStateException\"></xref> class with serialized data."},{"pos":[5456,5505],"content":"The object that holds the serialized object data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]},{"pos":[5601,5660],"content":"The contextual information about the source or destination.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]},{"pos":[6102,6182],"content":"Gets a value indicating whether the client is currently connected to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the client is currently connected to the server.","pos":[0,80]}]},{"pos":[6194,6307],"content":"This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the same value as calling the &lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt; property.","pos":[0,113],"source":"This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property."}]},{"pos":[7233,7416],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the client is still connected to the server; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client is still connected to the server; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7836,7926],"content":"Gets debugging information about the HTTP request that resulted in a view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets debugging information about the HTTP request that resulted in a view-state exception.","pos":[0,90]}]},{"pos":[7938,8537],"content":"If the request does not have permission to access the server variables, then this property returns a generic view-state error message. If the request does have permission to access server variables, the Message property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the request does not have permission to access the server variables, then this property returns a generic view-state error message. If the request does have permission to access server variables, the Message property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.","pos":[0,599],"nodes":[{"content":"If the request does not have permission to access the server variables, then this property returns a generic view-state error message.","pos":[0,134]},{"content":"If the request does have permission to access server variables, the Message property contains the values returned from the &lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;, &lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;, and &lt;xref:System.Web.UI.ViewStateException.Path%2A&gt; properties.","pos":[135,599],"source":" If the request does have permission to access server variables, the Message property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties."}]}]},{"pos":[8658,8751],"content":"A <xref:System.String> containing the formatted message with information about the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the formatted message with information about the exception.","pos":[0,93],"source":"A <xref:System.String> containing the formatted message with information about the exception."}]},{"pos":[9152,9226],"content":"Gets the path of the HTTP request that resulted in a view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path of the HTTP request that resulted in a view-state exception.","pos":[0,74]}]},{"pos":[9238,9526],"content":"This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property. It returns the portion of the path after the host name. For example, in the URL http://www.contoso.com/virdir/page.html, Path would return /virdir/page.html.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the same value as the <ph id=\"ph1\">`PATH_INFO`</ph> variable in the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property.","pos":[0,130],"source":"This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property."},{"content":"It returns the portion of the path after the host name.","pos":[131,186]},{"content":"For example, in the URL http://www.contoso.com/virdir/page.html, Path would return /virdir/page.html.","pos":[187,288]}]},{"pos":[10446,10506],"content":"A <xref:System.String> containing the path from the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the path from the request.","pos":[0,60],"source":"A <xref:System.String> containing the path from the request."}]},{"pos":[10954,11046],"content":"Gets the contents of the view-state string that, when read, caused the view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the contents of the view-state string that, when read, caused the view-state exception.","pos":[0,92]}]},{"pos":[11165,11258],"content":"A <xref:System.String> containing the view-state values that caused the view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the view-state values that caused the view-state exception.","pos":[0,93],"source":"A <xref:System.String> containing the view-state values that caused the view-state exception."}]},{"pos":[11681,11770],"content":"Gets the URL of the page that linked to the page where the view-state exception occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the URL of the page that linked to the page where the view-state exception occurred.","pos":[0,89]}]},{"pos":[11782,11992],"content":"This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property. The value is an empty string (\"\") if no previous request linked to the page.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the same value as the <ph id=\"ph1\">`HTTP_REFERER`</ph> variable in the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property.","pos":[0,133],"source":"This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property."},{"content":"The value is an empty string (\"\") if no previous request linked to the page.","pos":[134,210]}]},{"pos":[12915,12967],"content":"A <xref:System.String> containing the HTTP referrer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the HTTP referrer.","pos":[0,52],"source":"A <xref:System.String> containing the HTTP referrer."}]},{"pos":[13413,13493],"content":"Gets the IP address of the HTTP request that resulted in a view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the IP address of the HTTP request that resulted in a view-state exception.","pos":[0,80]}]},{"pos":[13505,13637],"content":"This property returns the same value as the <ph id=\"ph1\">`REMOTE_ADDR`</ph> variable in the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property."},{"pos":[13755,13825],"content":"A <xref:System.String> containing the remote IP address of the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the remote IP address of the client.","pos":[0,70],"source":"A <xref:System.String> containing the remote IP address of the client."}]},{"pos":[14262,14343],"content":"Gets the port number of the HTTP request that resulted in a view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the port number of the HTTP request that resulted in a view-state exception.","pos":[0,81]}]},{"pos":[14355,14487],"content":"This property returns the same value as the <ph id=\"ph1\">`REMOTE_PORT`</ph> variable in the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property."},{"pos":[14602,14659],"content":"A <xref:System.String> containing the remote port number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the remote port number.","pos":[0,57],"source":"A <xref:System.String> containing the remote port number."}]},{"pos":[15088,15170],"content":"Gets the browser type of the HTTP request that resulted in a view-state exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the browser type of the HTTP request that resulted in a view-state exception.","pos":[0,82]}]},{"pos":[15182,15318],"content":"This property returns the same value as the <ph id=\"ph1\">`HTTP_USER_AGENT`</ph> variable in the &lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property."},{"pos":[16243,16329],"content":"A <xref:System.String> containing the user agent, which is typically the browser type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the user agent, which is typically the browser type.","pos":[0,86],"source":"A <xref:System.String> containing the user agent, which is typically the browser type."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ViewStateException\n  id: ViewStateException\n  children:\n  - System.Web.UI.ViewStateException.#ctor\n  - System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Web.UI.ViewStateException.IsConnected\n  - System.Web.UI.ViewStateException.Message\n  - System.Web.UI.ViewStateException.Path\n  - System.Web.UI.ViewStateException.PersistedState\n  - System.Web.UI.ViewStateException.Referer\n  - System.Web.UI.ViewStateException.RemoteAddress\n  - System.Web.UI.ViewStateException.RemotePort\n  - System.Web.UI.ViewStateException.UserAgent\n  langs:\n  - csharp\n  name: ViewStateException\n  nameWithType: ViewStateException\n  fullName: System.Web.UI.ViewStateException\n  type: Class\n  summary: Represents the exception that is thrown when the view state cannot be loaded or validated. This class cannot be inherited.\n  remarks: \"If an exception occurs when the page loads the view-state information, the page creates a ViewStateException object and passes it as an inner exception within an <xref:System.Web.HttpException> exception. The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.  \\n  \\n The ViewStateException class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property. If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.  \\n  \\n A view-state exception can be the result of a Message Authentication Codes (MAC) validation error. If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier. When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user. If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the ViewStateException object as an inner exception.  \\n  \\n For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received. Within a Web farm, the machine key on each server should be set to a common key.\"\n  example:\n  - \"The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a ViewStateException object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the ViewStateException object.  \\n  \\n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/t-system.web.ui.viewstat_0_1.cs)]\\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/t-system.web.ui.viewstat_0_1.vb)]\"\n  syntax:\n    content: 'public sealed class ViewStateException : Exception'\n  inheritance:\n  - System.Exception\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: ViewStateException()\n  nameWithType: ViewStateException.ViewStateException()\n  fullName: System.Web.UI.ViewStateException.ViewStateException()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.ViewStateException\"></xref> class.\n  syntax:\n    content: public ViewStateException ();\n    parameters: []\n  overload: System.Web.UI.ViewStateException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.ViewStateException\"></xref> class with serialized data.\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.Web.UI.ViewStateException.GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.IsConnected\n  id: IsConnected\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: IsConnected\n  nameWithType: ViewStateException.IsConnected\n  fullName: System.Web.UI.ViewStateException.IsConnected\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the client is currently connected to the server.\n  remarks: This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.\n  example:\n  - \"The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \\n  \\n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_0_1.cs)]\\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_0_1.vb)]\"\n  syntax:\n    content: public bool IsConnected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client is still connected to the server; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ViewStateException.IsConnected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.Message\n  id: Message\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: ViewStateException.Message\n  fullName: System.Web.UI.ViewStateException.Message\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets debugging information about the HTTP request that resulted in a view-state exception.\n  remarks: If the request does not have permission to access the server variables, then this property returns a generic view-state error message. If the request does have permission to access server variables, the Message property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the formatted message with information about the exception.\n  overload: System.Web.UI.ViewStateException.Message*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.Path\n  id: Path\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: Path\n  nameWithType: ViewStateException.Path\n  fullName: System.Web.UI.ViewStateException.Path\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the path of the HTTP request that resulted in a view-state exception.\n  remarks: This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property. It returns the portion of the path after the host name. For example, in the URL http://www.contoso.com/virdir/page.html, Path would return /virdir/page.html.\n  example:\n  - \"The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \\n  \\n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_2_1.cs)]\\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_2_1.vb)]\"\n  syntax:\n    content: public string Path { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the path from the request.\n  overload: System.Web.UI.ViewStateException.Path*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.PersistedState\n  id: PersistedState\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: PersistedState\n  nameWithType: ViewStateException.PersistedState\n  fullName: System.Web.UI.ViewStateException.PersistedState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the contents of the view-state string that, when read, caused the view-state exception.\n  syntax:\n    content: public string PersistedState { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the view-state values that caused the view-state exception.\n  overload: System.Web.UI.ViewStateException.PersistedState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.Referer\n  id: Referer\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: Referer\n  nameWithType: ViewStateException.Referer\n  fullName: System.Web.UI.ViewStateException.Referer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the URL of the page that linked to the page where the view-state exception occurred.\n  remarks: This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property. The value is an empty string (\"\") if no previous request linked to the page.\n  example:\n  - \"The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \\n  \\n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_3_1.cs)]\\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_3_1.vb)]\"\n  syntax:\n    content: public string Referer { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the HTTP referrer.\n  overload: System.Web.UI.ViewStateException.Referer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.RemoteAddress\n  id: RemoteAddress\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: RemoteAddress\n  nameWithType: ViewStateException.RemoteAddress\n  fullName: System.Web.UI.ViewStateException.RemoteAddress\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the IP address of the HTTP request that resulted in a view-state exception.\n  remarks: This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.\n  syntax:\n    content: public string RemoteAddress { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the remote IP address of the client.\n  overload: System.Web.UI.ViewStateException.RemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.RemotePort\n  id: RemotePort\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: RemotePort\n  nameWithType: ViewStateException.RemotePort\n  fullName: System.Web.UI.ViewStateException.RemotePort\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the port number of the HTTP request that resulted in a view-state exception.\n  remarks: This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.\n  syntax:\n    content: public string RemotePort { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the remote port number.\n  overload: System.Web.UI.ViewStateException.RemotePort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ViewStateException.UserAgent\n  id: UserAgent\n  parent: System.Web.UI.ViewStateException\n  langs:\n  - csharp\n  name: UserAgent\n  nameWithType: ViewStateException.UserAgent\n  fullName: System.Web.UI.ViewStateException.UserAgent\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the browser type of the HTTP request that resulted in a view-state exception.\n  remarks: This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.\n  example:\n  - \"The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \\n  \\n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_1_1.cs)]\\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_1_1.vb)]\"\n  syntax:\n    content: public string UserAgent { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the user agent, which is typically the browser type.\n  overload: System.Web.UI.ViewStateException.UserAgent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Exception\n  isExternal: false\n  name: System.Exception\n- uid: System.Web.UI.ViewStateException.#ctor\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: ViewStateException()\n  nameWithType: ViewStateException.ViewStateException()\n  fullName: System.Web.UI.ViewStateException.ViewStateException()\n- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Web.UI.ViewStateException.IsConnected\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: IsConnected\n  nameWithType: ViewStateException.IsConnected\n  fullName: System.Web.UI.ViewStateException.IsConnected\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.ViewStateException.Message\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Message\n  nameWithType: ViewStateException.Message\n  fullName: System.Web.UI.ViewStateException.Message\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ViewStateException.Path\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Path\n  nameWithType: ViewStateException.Path\n  fullName: System.Web.UI.ViewStateException.Path\n- uid: System.Web.UI.ViewStateException.PersistedState\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: PersistedState\n  nameWithType: ViewStateException.PersistedState\n  fullName: System.Web.UI.ViewStateException.PersistedState\n- uid: System.Web.UI.ViewStateException.Referer\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Referer\n  nameWithType: ViewStateException.Referer\n  fullName: System.Web.UI.ViewStateException.Referer\n- uid: System.Web.UI.ViewStateException.RemoteAddress\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: RemoteAddress\n  nameWithType: ViewStateException.RemoteAddress\n  fullName: System.Web.UI.ViewStateException.RemoteAddress\n- uid: System.Web.UI.ViewStateException.RemotePort\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: RemotePort\n  nameWithType: ViewStateException.RemotePort\n  fullName: System.Web.UI.ViewStateException.RemotePort\n- uid: System.Web.UI.ViewStateException.UserAgent\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: UserAgent\n  nameWithType: ViewStateException.UserAgent\n  fullName: System.Web.UI.ViewStateException.UserAgent\n- uid: System.Web.UI.ViewStateException.#ctor*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: ViewStateException\n  nameWithType: ViewStateException.ViewStateException\n- uid: System.Web.UI.ViewStateException.GetObjectData*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: ViewStateException.GetObjectData\n- uid: System.Web.UI.ViewStateException.IsConnected*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: IsConnected\n  nameWithType: ViewStateException.IsConnected\n- uid: System.Web.UI.ViewStateException.Message*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Message\n  nameWithType: ViewStateException.Message\n- uid: System.Web.UI.ViewStateException.Path*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Path\n  nameWithType: ViewStateException.Path\n- uid: System.Web.UI.ViewStateException.PersistedState*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: PersistedState\n  nameWithType: ViewStateException.PersistedState\n- uid: System.Web.UI.ViewStateException.Referer*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: Referer\n  nameWithType: ViewStateException.Referer\n- uid: System.Web.UI.ViewStateException.RemoteAddress*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: RemoteAddress\n  nameWithType: ViewStateException.RemoteAddress\n- uid: System.Web.UI.ViewStateException.RemotePort*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: RemotePort\n  nameWithType: ViewStateException.RemotePort\n- uid: System.Web.UI.ViewStateException.UserAgent*\n  parent: System.Web.UI.ViewStateException\n  isExternal: false\n  name: UserAgent\n  nameWithType: ViewStateException.UserAgent\n"}