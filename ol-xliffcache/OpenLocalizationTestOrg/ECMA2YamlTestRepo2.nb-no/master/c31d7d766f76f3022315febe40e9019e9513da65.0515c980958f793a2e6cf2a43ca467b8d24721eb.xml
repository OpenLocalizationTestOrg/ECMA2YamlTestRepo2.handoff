{"nodes":[{"pos":[566,661],"content":"Represents pivot information used by a manipulation processor for single-manipulator rotations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents pivot information used by a manipulation processor for single-manipulator rotations.","pos":[0,95]}]},{"pos":[674,2671],"content":"When a ManipulationPivot2D object is assigned to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property of a <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object, it affects how the manipulation processor calculates rotational changes to an element when the element is being manipulated by a single manipulator. If more than one manipulator is being applied to the element during manipulation, the Pivot property is ignored.       In a single-manipulator scenario, an element can rotate as it is being dragged. The <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object determine what position the element rotates around, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property is used by the manipulation processor to calculate the amount of rotational change.       For instance, if the single manipulator is near the outer edge of the pivot point, the rotational change to the element as it is being dragged will be fairly large (depending upon the size of the element). If the manipulator is close to the center of the pivot point, very little (if any) rotation will occur.       Typically, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties represent the center of the element that is being manipulated, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property represents the distance from the center of the element to its farthest edge.       As the element moves, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object need to be updated so that rotation will continue to occur around the proper point.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a ManipulationPivot2D object is assigned to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property of a <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object, it affects how the manipulation processor calculates rotational changes to an element when the element is being manipulated by a single manipulator. If more than one manipulator is being applied to the element during manipulation, the Pivot property is ignored.       In a single-manipulator scenario, an element can rotate as it is being dragged. The <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object determine what position the element rotates around, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property is used by the manipulation processor to calculate the amount of rotational change.       For instance, if the single manipulator is near the outer edge of the pivot point, the rotational change to the element as it is being dragged will be fairly large (depending upon the size of the element). If the manipulator is close to the center of the pivot point, very little (if any) rotation will occur.       Typically, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties represent the center of the element that is being manipulated, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property represents the distance from the center of the element to its farthest edge.       As the element moves, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object need to be updated so that rotation will continue to occur around the proper point.","pos":[0,1989],"nodes":[{"content":"When a ManipulationPivot2D object is assigned to the &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A&gt; property of a &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D&gt; object, it affects how the manipulation processor calculates rotational changes to an element when the element is being manipulated by a single manipulator.","pos":[0,364],"source":"When a ManipulationPivot2D object is assigned to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property of a <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object, it affects how the manipulation processor calculates rotational changes to an element when the element is being manipulated by a single manipulator."},{"content":"If more than one manipulator is being applied to the element during manipulation, the Pivot property is ignored.","pos":[365,477]},{"content":"In a single-manipulator scenario, an element can rotate as it is being dragged.","pos":[484,563]},{"content":"The &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A&gt; and &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A&gt; properties of the ManipulationPivot2D object determine what position the element rotates around, and the &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A&gt; property is used by the manipulation processor to calculate the amount of rotational change.","pos":[564,975],"source":" The <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object determine what position the element rotates around, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property is used by the manipulation processor to calculate the amount of rotational change."},{"content":"For instance, if the single manipulator is near the outer edge of the pivot point, the rotational change to the element as it is being dragged will be fairly large (depending upon the size of the element).","pos":[982,1187]},{"content":"If the manipulator is close to the center of the pivot point, very little (if any) rotation will occur.","pos":[1188,1291]},{"content":"Typically, the &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A&gt; and &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A&gt; properties represent the center of the element that is being manipulated, and the &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A&gt; property represents the distance from the center of the element to its farthest edge.","pos":[1298,1690],"source":"       Typically, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties represent the center of the element that is being manipulated, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property represents the distance from the center of the element to its farthest edge."},{"content":"As the element moves, the &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A&gt; and &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A&gt; properties of the ManipulationPivot2D object need to be updated so that rotation will continue to occur around the proper point.","pos":[1697,1989],"source":"       As the element moves, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object need to be updated so that rotation will continue to occur around the proper point."}]}]},{"pos":[3912,4028],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Manipulations.ManipulationPivot2D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.Manipulations.ManipulationPivot2D\"></xref> class."},{"pos":[4644,4731],"content":"Gets or sets the distance from the pivot point to the edge of the manipulatable region.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the distance from the pivot point to the edge of the manipulatable region.","pos":[0,87]}]},{"pos":[4744,5261],"content":"The Radius property must be a positive, finite value that is greater than or equal to 1.0, or `NaN`. `NaN` indicates that there is no limit. The default value is `NaN`.       In practice, the pivot point is typically the center of the object that is being manipulated, and the Radius value is the distance from the pivot point to the farthest edge of the object. Any pivoting that occurs within the Radius distance is dampened. See <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> for more information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Radius property must be a positive, finite value that is greater than or equal to 1.0, or <ph id=\"ph1\">`NaN`</ph>.","pos":[0,100],"source":"The Radius property must be a positive, finite value that is greater than or equal to 1.0, or `NaN`."},{"content":"<ph id=\"ph1\">`NaN`</ph> indicates that there is no limit.","pos":[101,140],"source":"`NaN` indicates that there is no limit."},{"content":"The default value is <ph id=\"ph1\">`NaN`</ph>.","pos":[141,168],"source":" The default value is `NaN`."},{"content":"In practice, the pivot point is typically the center of the object that is being manipulated, and the Radius value is the distance from the pivot point to the farthest edge of the object.","pos":[175,362]},{"content":"Any pivoting that occurs within the Radius distance is dampened.","pos":[363,427]},{"content":"See &lt;xref:System.Windows.Input.Manipulations.ManipulationPivot2D&gt; for more information.","pos":[428,515],"source":" See <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> for more information."}]},{"pos":[5377,5451],"content":"The distance from the pivot point to the edge of the manipulatable region.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance from the pivot point to the edge of the manipulatable region.","pos":[0,74]}]},{"pos":[5970,6011],"content":"Gets or sets the X position of the pivot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the X position of the pivot.","pos":[0,41]}]},{"pos":[6023,6070],"content":"The X property must be a finite value or <ph id=\"ph1\">`NaN`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The X property must be a finite value or `NaN`."},{"pos":[6180,6208],"content":"The X position of the pivot.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X position of the pivot.","pos":[0,28]}]},{"pos":[6722,6763],"content":"Gets or sets the Y position of the pivot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Y position of the pivot.","pos":[0,41]}]},{"pos":[6775,6822],"content":"The Y property must be a finite value or <ph id=\"ph1\">`NaN`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The Y property must be a finite value or `NaN`."},{"pos":[6932,6960],"content":"The Y position of the pivot.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y position of the pivot.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D\n  id: ManipulationPivot2D\n  children:\n  - System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor\n  - System.Windows.Input.Manipulations.ManipulationPivot2D.Radius\n  - System.Windows.Input.Manipulations.ManipulationPivot2D.X\n  - System.Windows.Input.Manipulations.ManipulationPivot2D.Y\n  langs:\n  - csharp\n  name: ManipulationPivot2D\n  nameWithType: ManipulationPivot2D\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D\n  type: Class\n  summary: Represents pivot information used by a manipulation processor for single-manipulator rotations.\n  remarks: \"When a ManipulationPivot2D object is assigned to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property of a <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object, it affects how the manipulation processor calculates rotational changes to an element when the element is being manipulated by a single manipulator. If more than one manipulator is being applied to the element during manipulation, the Pivot property is ignored.  \\n  \\n In a single-manipulator scenario, an element can rotate as it is being dragged. The <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object determine what position the element rotates around, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property is used by the manipulation processor to calculate the amount of rotational change.  \\n  \\n For instance, if the single manipulator is near the outer edge of the pivot point, the rotational change to the element as it is being dragged will be fairly large (depending upon the size of the element). If the manipulator is close to the center of the pivot point, very little (if any) rotation will occur.  \\n  \\n Typically, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties represent the center of the element that is being manipulated, and the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> property represents the distance from the center of the element to its farthest edge.  \\n  \\n As the element moves, the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties of the ManipulationPivot2D object need to be updated so that rotation will continue to occur around the proper point.\"\n  example:\n  - \"The following code example shows how the <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> and <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> properties for a pivot point are updated to match the center of the element that is being manipulated.  \\n  \\n [!code-cs[ManipulationAPI#_ManipulationItem_ManipulationProcessor2D](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_manipulationprocessor2d)]\"\n  syntax:\n    content: 'public sealed class ManipulationPivot2D : System.Windows.Input.Manipulations.ManipulationParameters2D'\n  inheritance:\n  - System.Object\n  - System.Windows.Input.Manipulations.ManipulationParameters2D\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  langs:\n  - csharp\n  name: ManipulationPivot2D()\n  nameWithType: ManipulationPivot2D.ManipulationPivot2D()\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.ManipulationPivot2D()\n  type: Constructor\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.Manipulations.ManipulationPivot2D\"></xref> class.\n  syntax:\n    content: public ManipulationPivot2D ();\n    parameters: []\n  overload: System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius\n  id: Radius\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  langs:\n  - csharp\n  name: Radius\n  nameWithType: ManipulationPivot2D.Radius\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the distance from the pivot point to the edge of the manipulatable region.\n  remarks: \"The Radius property must be a positive, finite value that is greater than or equal to 1.0, or `NaN`. `NaN` indicates that there is no limit. The default value is `NaN`.  \\n  \\n In practice, the pivot point is typically the center of the object that is being manipulated, and the Radius value is the distance from the pivot point to the farthest edge of the object. Any pivoting that occurs within the Radius distance is dampened. See <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> for more information.\"\n  syntax:\n    content: public float Radius { get; set; }\n    return:\n      type: System.Single\n      description: The distance from the pivot point to the edge of the manipulatable region.\n  overload: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.X\n  id: X\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  langs:\n  - csharp\n  name: X\n  nameWithType: ManipulationPivot2D.X\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.X\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the X position of the pivot.\n  remarks: The X property must be a finite value or `NaN`.\n  syntax:\n    content: public float X { get; set; }\n    return:\n      type: System.Single\n      description: The X position of the pivot.\n  overload: System.Windows.Input.Manipulations.ManipulationPivot2D.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Y\n  id: Y\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  langs:\n  - csharp\n  name: Y\n  nameWithType: ManipulationPivot2D.Y\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.Y\n  type: Property\n  assemblies:\n  - System.Windows.Input.Manipulations\n  namespace: System.Windows.Input.Manipulations\n  summary: Gets or sets the Y position of the pivot.\n  remarks: The Y property must be a finite value or `NaN`.\n  syntax:\n    content: public float Y { get; set; }\n    return:\n      type: System.Single\n      description: The Y position of the pivot.\n  overload: System.Windows.Input.Manipulations.ManipulationPivot2D.Y*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.Manipulations.ManipulationParameters2D\n  isExternal: false\n  name: System.Windows.Input.Manipulations.ManipulationParameters2D\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: ManipulationPivot2D()\n  nameWithType: ManipulationPivot2D.ManipulationPivot2D()\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.ManipulationPivot2D()\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: Radius\n  nameWithType: ManipulationPivot2D.Radius\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.X\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: X\n  nameWithType: ManipulationPivot2D.X\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.X\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Y\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: Y\n  nameWithType: ManipulationPivot2D.Y\n  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D.Y\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor*\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: ManipulationPivot2D\n  nameWithType: ManipulationPivot2D.ManipulationPivot2D\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Radius*\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: Radius\n  nameWithType: ManipulationPivot2D.Radius\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.X*\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: X\n  nameWithType: ManipulationPivot2D.X\n- uid: System.Windows.Input.Manipulations.ManipulationPivot2D.Y*\n  parent: System.Windows.Input.Manipulations.ManipulationPivot2D\n  isExternal: false\n  name: Y\n  nameWithType: ManipulationPivot2D.Y\n"}