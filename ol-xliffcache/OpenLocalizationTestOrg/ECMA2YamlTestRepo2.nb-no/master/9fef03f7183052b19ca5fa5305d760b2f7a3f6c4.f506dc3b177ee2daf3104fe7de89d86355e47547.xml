{"nodes":[{"pos":[682,769],"content":"Provides information about an unhandled exception that occurred in a workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about an unhandled exception that occurred in a workflow instance.","pos":[0,87]}]},{"pos":[781,1229],"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[0,448],"nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.","pos":[0,118]},{"content":"If an &lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt; handler is present, it can override this default behavior.","pos":[119,252],"source":" If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior."},{"content":"This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[253,448]}]}]},{"pos":[2621,2685],"content":"Gets the activity that is the source of the unhandled exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the activity that is the source of the unhandled exception.","pos":[0,64]}]},{"pos":[2697,3145],"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[0,448],"nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.","pos":[0,118]},{"content":"If an &lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt; handler is present, it can override this default behavior.","pos":[119,252],"source":" If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior."},{"content":"This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[253,448]}]}]},{"pos":[3797,3809],"content":"An activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"An activity.","pos":[0,12]}]},{"pos":[4490,4588],"content":"Gets the unique identifier of the activity instance that is the source of the unhandled exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier of the activity instance that is the source of the unhandled exception.","pos":[0,98]}]},{"pos":[4600,5048],"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[0,448],"nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.","pos":[0,118]},{"content":"If an &lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt; handler is present, it can override this default behavior.","pos":[119,252],"source":" If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior."},{"content":"This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[253,448]}]}]},{"pos":[5677,5762],"content":"An identifier of the activity instance that is the source of the unhandled exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier of the activity instance that is the source of the unhandled exception.","pos":[0,85]}]},{"pos":[6418,6495],"content":"Gets the <xref:System.Exception> that was unhandled by the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Exception&gt; that was unhandled by the workflow instance.","pos":[0,77],"source":"Gets the <xref:System.Exception> that was unhandled by the workflow instance."}]},{"pos":[6507,6955],"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[0,448],"nodes":[{"content":"If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.","pos":[0,118]},{"content":"If an &lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt; handler is present, it can override this default behavior.","pos":[119,252],"source":" If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior."},{"content":"This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.","pos":[253,448]}]}]},{"pos":[7583,7655],"content":"The <xref:System.Exception> that was unhandled by the workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Exception&gt; that was unhandled by the workflow instance.","pos":[0,72],"source":"The <xref:System.Exception> that was unhandled by the workflow instance."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  id: WorkflowApplicationUnhandledExceptionEventArgs\n  children:\n  - System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  - System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  - System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  langs:\n  - csharp\n  name: WorkflowApplicationUnhandledExceptionEventArgs\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  type: Class\n  summary: Provides information about an unhandled exception that occurred in a workflow instance.\n  remarks: If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The WorkflowApplicationUnhandledExceptionEventArgs are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/t-system.activities.work_0_1.cs)]\"\n  syntax:\n    content: 'public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Activities.WorkflowApplicationEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1\n  - System.Activities.WorkflowApplicationEventArgs.InstanceId\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  id: ExceptionSource\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  langs:\n  - csharp\n  name: ExceptionSource\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity that is the source of the unhandled exception.\n  remarks: If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/eda69030-f6e5-45e1-954d-_1.cs)]\"\n  syntax:\n    content: public System.Activities.Activity ExceptionSource { get; }\n    return:\n      type: System.Activities.Activity\n      description: An activity.\n  overload: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  id: ExceptionSourceInstanceId\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  langs:\n  - csharp\n  name: ExceptionSourceInstanceId\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the unique identifier of the activity instance that is the source of the unhandled exception.\n  remarks: If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/28b0f72c-0ddb-46ea-94fd-_1.cs)]\"\n  syntax:\n    content: public string ExceptionSourceInstanceId { get; }\n    return:\n      type: System.String\n      description: An identifier of the activity instance that is the source of the unhandled exception.\n  overload: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  id: UnhandledException\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  langs:\n  - csharp\n  name: UnhandledException\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the <xref:System.Exception> that was unhandled by the workflow instance.\n  remarks: If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance. If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior. This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-cs[CFX_WorkflowApplicationExample#1](~/add/codesnippet/csharp/6087d33d-eea3-44f0-8b12-_1.cs)]\"\n  syntax:\n    content: public Exception UnhandledException { get; }\n    return:\n      type: System.Exception\n      description: The <xref:System.Exception> that was unhandled by the workflow instance.\n  overload: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.WorkflowApplicationEventArgs\n  isExternal: false\n  name: System.Activities.WorkflowApplicationEventArgs\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: ExceptionSource\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: ExceptionSourceInstanceId\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: UnhandledException\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n  fullName: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource*\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: ExceptionSource\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId*\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: ExceptionSourceInstanceId\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId\n- uid: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException*\n  parent: System.Activities.WorkflowApplicationUnhandledExceptionEventArgs\n  isExternal: false\n  name: UnhandledException\n  nameWithType: WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException\n"}