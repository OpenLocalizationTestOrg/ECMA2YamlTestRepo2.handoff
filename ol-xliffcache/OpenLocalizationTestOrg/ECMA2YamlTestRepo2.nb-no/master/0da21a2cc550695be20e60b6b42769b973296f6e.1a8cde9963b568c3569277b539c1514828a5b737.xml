{"nodes":[{"pos":[702,790],"content":"Defines the interface that must be implemented by a channel listener to accept channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface that must be implemented by a channel listener to accept channels.","pos":[0,88]}]},{"pos":[803,1244],"content":"The IChannelListener interface represents the base interface for channel listeners.       Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IChannelListener interface represents the base interface for channel listeners.       Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","pos":[0,439],"nodes":[{"content":"The IChannelListener interface represents the base interface for channel listeners.","pos":[0,83]},{"content":"Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.","pos":[90,218]},{"content":"Channel factories that implement the &lt;xref:System.ServiceModel.Channels.IChannelFactory&gt; interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","pos":[219,439],"source":" Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated."}]}]},{"pos":[2067,2191],"content":"Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.","pos":[0,124]}]},{"pos":[2394,2512],"content":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the wait for a channel operation has to complete before timing out.","pos":[0,118],"source":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."}]},{"pos":[2584,2723],"content":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","pos":[0,139],"source":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation."}]},{"pos":[2785,2920],"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","pos":[0,135]}]},{"pos":[2984,3077],"content":"The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous wait for a channel operation.","pos":[0,93],"source":"The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation."}]},{"pos":[3711,3778],"content":"Completes an asynchronous operation to wait for channels to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to wait for channels to arrive.","pos":[0,67]}]},{"pos":[3939,4021],"content":"The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by a call to the EndWaitForChannel method.","pos":[0,82],"source":"The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method."}]},{"pos":[4080,4236],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a message arrived; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a message arrived; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4888,4900],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5377,5454],"content":"Gets the URI on which the listeners that are generated by the factory listen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the URI on which the listeners that are generated by the factory listen.","pos":[0,77]}]},{"pos":[5466,5600],"content":"This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This URI represents the transport address on which the &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; is listening for messages.","pos":[0,134],"source":"This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages."}]},{"pos":[5702,5788],"content":"The <xref:System.Uri> on which the listeners that are generated by the factory listen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; on which the listeners that are generated by the factory listen.","pos":[0,86],"source":"The <xref:System.Uri> on which the listeners that are generated by the factory listen."}]},{"pos":[6371,6401],"content":"Waits for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Waits for a channel to arrive.","pos":[0,30]}]},{"pos":[6553,6671],"content":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the wait for a channel operation has to complete before timing out.","pos":[0,118],"source":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."}]},{"pos":[6730,6952],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a channel arrived before the interval of time specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelListener\n  id: IChannelListener\n  children:\n  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  - System.ServiceModel.Channels.IChannelListener.Uri\n  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  langs:\n  - csharp\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n  type: Interface\n  summary: Defines the interface that must be implemented by a channel listener to accept channels.\n  remarks: \"The IChannelListener interface represents the base interface for channel listeners.  \\n  \\n Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.\"\n  syntax:\n    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'\n  implements:\n  - System.ServiceModel.ICommunicationObject\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.\n  syntax:\n    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation.\n  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  id: EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Completes an asynchronous operation to wait for channels to arrive.\n  syntax:\n    content: public bool EndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a message arrived; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: GetProperty()\n  nameWithType: IChannelListener.GetProperty()\n  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public T GetProperty<T> () where T : class;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener.Uri\n  id: Uri\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: IChannelListener.Uri\n  fullName: System.ServiceModel.Channels.IChannelListener.Uri\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the URI on which the listeners that are generated by the factory listen.\n  remarks: This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.\n  syntax:\n    content: public Uri Uri { get; }\n    return:\n      type: System.Uri\n      description: The <xref:System.Uri> on which the listeners that are generated by the factory listen.\n  overload: System.ServiceModel.Channels.IChannelListener.Uri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  id: WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: WaitForChannel(TimeSpan)\n  nameWithType: IChannelListener.WaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Waits for a channel to arrive.\n  syntax:\n    content: public bool WaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: GetProperty()\n  nameWithType: IChannelListener.GetProperty()\n  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.IChannelListener.Uri\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: Uri\n  nameWithType: IChannelListener.Uri\n  fullName: System.ServiceModel.Channels.IChannelListener.Uri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: WaitForChannel(TimeSpan)\n  nameWithType: IChannelListener.WaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: BeginWaitForChannel\n  nameWithType: IChannelListener.BeginWaitForChannel\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: EndWaitForChannel\n  nameWithType: IChannelListener.EndWaitForChannel\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: IChannelListener.GetProperty<T>\n- uid: System.ServiceModel.Channels.IChannelListener.Uri*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: Uri\n  nameWithType: IChannelListener.Uri\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: WaitForChannel\n  nameWithType: IChannelListener.WaitForChannel\n"}