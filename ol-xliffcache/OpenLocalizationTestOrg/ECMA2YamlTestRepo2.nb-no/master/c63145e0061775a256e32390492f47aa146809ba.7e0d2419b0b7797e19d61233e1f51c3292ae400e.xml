{"nodes":[{"pos":[3315,3327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5215,5227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6348,6360],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7156,7168],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7876,7888],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8621,8633],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9630,9642],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9701,9713],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10761,10773],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10832,10844],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12599,12611],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12717,12729],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13890,13902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14010,14022],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15239,15251],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15310,15322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15430,15442],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16454,16466],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16525,16537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17608,17620],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17679,17691],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18531,18543],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19706,19718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19826,19838],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21055,21067],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21126,21138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21246,21258],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22282,22294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22353,22365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23450,23462],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23521,23533],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24655,24667],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24719,24731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25876,25888],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25940,25952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27318,27330],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  id: ReverseBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ReverseBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator()\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  id: base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: base()\n  nameWithType: ReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.base()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> base ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator()\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: base()\n  nameWithType: ReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.base()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: base\n  nameWithType: ReverseBidirectionalIterator<TValue>.base\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ReverseBidirectionalIterator<TValue>.Clone\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ReverseBidirectionalIterator<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ReverseBidirectionalIterator<TValue>.next\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ReverseBidirectionalIterator<TValue>.prev\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ReverseBidirectionalIterator<TValue>.valid\n"}