{"nodes":[{"pos":[1010,1052],"content":"Specifies options for update map metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies options for update map metadata.","pos":[0,42]}]},{"pos":[1065,2737],"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.       [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].       [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.       [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.       [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint.       [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.       [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.","pos":[0,99]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> workflow versioning, workflow identity, and dynamic update, see the following topics.","pos":[100,244],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics."},{"content":"<bpt id=\"p1\">[</bpt>Workflow Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=271561)</ept>    Describes the workflow versioning functionality introduced in <ph id=\"ph1\">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[251,444],"source":"[Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]."},{"content":"<bpt id=\"p1\">[</bpt>Dynamic Update<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271563)</ept>    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.","pos":[451,623],"source":"[Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update."},{"content":"<bpt id=\"p1\">[</bpt>Using WorkflowApplication Identity and Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271564)</ept>    Describes how to use &lt;xref:System.Activities.WorkflowIdentity&gt; to host multiple versions of a workflow side-by-side.","pos":[630,848],"source":"[Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side."},{"content":"<bpt id=\"p1\">[</bpt>Side by Side Versioning in WorkflowServiceHost<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271565)</ept>    Describes how to host multiple versions of a workflow on a single endpoint.","pos":[855,1029],"source":"[Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint."},{"content":"<bpt id=\"p1\">[</bpt>How to: Host Multiple Versions of a Workflow Side-by-Side<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271566)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.","pos":[1036,1359],"source":"[How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time."},{"content":"<bpt id=\"p1\">[</bpt>How to: Update the Definition of a Running Workflow Instance<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271567)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating persisted workflow instances to use a new workflow definition.","pos":[1366,1654],"source":"[How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."}]},{"pos":[3455,3564],"content":"Adds a match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified child.","needQuote":true,"needEscape":true,"source":"Adds a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified child."},{"pos":[3791,3809],"content":"The updated child.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated child.","pos":[0,18]}]},{"pos":[3892,3911],"content":"The original child.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original child.","pos":[0,19]}]},{"pos":[4590,4702],"content":"Adds a match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified variable.","needQuote":true,"needEscape":true,"source":"Adds a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified variable."},{"pos":[4938,4959],"content":"The updated variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated variable.","pos":[0,21]}]},{"pos":[5045,5067],"content":"The original variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original variable.","pos":[0,22]}]},{"pos":[5690,5750],"content":"Allows updating of map metadata within the current activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows updating of map metadata within the current activity.","pos":[0,60]}]},{"pos":[6545,6608],"content":"Disallows updating of map metadata within the current activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disallows updating of map metadata within the current activity.","pos":[0,63]}]},{"pos":[6772,6798],"content":"The reason of disallowing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reason of disallowing.","pos":[0,26]}]},{"pos":[7420,7529],"content":"Gets a match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified child.","needQuote":true,"needEscape":true,"source":"Gets a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified child."},{"pos":[7736,7754],"content":"The updated child.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated child.","pos":[0,18]}]},{"pos":[7825,7910],"content":"The match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref>."},{"pos":[8508,8620],"content":"Gets a match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified variable.","needQuote":true,"needEscape":true,"source":"Gets a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified variable."},{"pos":[8833,8854],"content":"The updated variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated variable.","pos":[0,21]}]},{"pos":[8925,9010],"content":"The match for <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref>."},{"pos":[9698,9824],"content":"Indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a reference to imported child.","needQuote":true,"needEscape":true,"source":"Indicates whether the <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> is a reference to imported child."},{"pos":[10029,10048],"content":"The child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child activity.","pos":[0,19]}]},{"pos":[10107,10354],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a reference to imported child; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> is a reference to imported child; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  id: UpdateMapMetadata\n  children:\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)\n  langs:\n  - csharp\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n  type: Class\n  summary: Specifies options for update map metadata.\n  remarks: \"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.  \\n  \\n [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \\n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \\n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.  \\n  \\n [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \\n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.  \\n  \\n [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \\n Describes how to host multiple versions of a workflow on a single endpoint.  \\n  \\n [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.  \\n  \\n [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.\"\n  syntax:\n    content: public class UpdateMapMetadata\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)\n  id: AddMatch(System.Activities.Activity,System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: AddMatch(Activity,Activity)\n  nameWithType: UpdateMapMetadata.AddMatch(Activity,Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Activity,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Adds a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified child.\n  syntax:\n    content: public void AddMatch (System.Activities.Activity updatedChild, System.Activities.Activity originalChild);\n    parameters:\n    - id: updatedChild\n      type: System.Activities.Activity\n      description: The updated child.\n    - id: originalChild\n      type: System.Activities.Activity\n      description: The original child.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)\n  id: AddMatch(System.Activities.Variable,System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: AddMatch(Variable,Variable)\n  nameWithType: UpdateMapMetadata.AddMatch(Variable,Variable)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Variable,Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Adds a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified variable.\n  syntax:\n    content: public void AddMatch (System.Activities.Variable updatedVariable, System.Activities.Variable originalVariable);\n    parameters:\n    - id: updatedVariable\n      type: System.Activities.Variable\n      description: The updated variable.\n    - id: originalVariable\n      type: System.Activities.Variable\n      description: The original variable.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity\n  id: AllowUpdateInsideThisActivity\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: AllowUpdateInsideThisActivity()\n  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity()\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Allows updating of map metadata within the current activity.\n  syntax:\n    content: public void AllowUpdateInsideThisActivity ();\n    parameters: []\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)\n  id: DisallowUpdateInsideThisActivity(System.String)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: DisallowUpdateInsideThisActivity(String)\n  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Disallows updating of map metadata within the current activity.\n  syntax:\n    content: public void DisallowUpdateInsideThisActivity (string reason);\n    parameters:\n    - id: reason\n      type: System.String\n      description: The reason of disallowing.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)\n  id: GetMatch(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: GetMatch(Activity)\n  nameWithType: UpdateMapMetadata.GetMatch(Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Gets a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified child.\n  syntax:\n    content: public System.Activities.Activity GetMatch (System.Activities.Activity updatedChild);\n    parameters:\n    - id: updatedChild\n      type: System.Activities.Activity\n      description: The updated child.\n    return:\n      type: System.Activities.Activity\n      description: The match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref>.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)\n  id: GetMatch(System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: GetMatch(Variable)\n  nameWithType: UpdateMapMetadata.GetMatch(Variable)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Gets a match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> with specified variable.\n  syntax:\n    content: public System.Activities.Variable GetMatch (System.Activities.Variable updatedVariable);\n    parameters:\n    - id: updatedVariable\n      type: System.Activities.Variable\n      description: The updated variable.\n    return:\n      type: System.Activities.Variable\n      description: The match for <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref>.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)\n  id: IsReferenceToImportedChild(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  langs:\n  - csharp\n  name: IsReferenceToImportedChild(Activity)\n  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Indicates whether the <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> is a reference to imported child.\n  syntax:\n    content: public bool IsReferenceToImportedChild (System.Activities.Activity childActivity);\n    parameters:\n    - id: childActivity\n      type: System.Activities.Activity\n      description: The child activity.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Activities.DynamicUpdate.UpdateMapMetadata\"></xref> is a reference to imported child; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AddMatch(Activity,Activity)\n  nameWithType: UpdateMapMetadata.AddMatch(Activity,Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Activity,Activity)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AddMatch(Variable,Variable)\n  nameWithType: UpdateMapMetadata.AddMatch(Variable,Variable)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Variable,Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AllowUpdateInsideThisActivity()\n  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity()\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity()\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: DisallowUpdateInsideThisActivity(String)\n  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: GetMatch(Activity)\n  nameWithType: UpdateMapMetadata.GetMatch(Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: GetMatch(Variable)\n  nameWithType: UpdateMapMetadata.GetMatch(Variable)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Variable)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: IsReferenceToImportedChild(Activity)\n  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AddMatch\n  nameWithType: UpdateMapMetadata.AddMatch\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity*\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AllowUpdateInsideThisActivity\n  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity*\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: DisallowUpdateInsideThisActivity\n  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: GetMatch\n  nameWithType: UpdateMapMetadata.GetMatch\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild*\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: IsReferenceToImportedChild\n  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild\n"}