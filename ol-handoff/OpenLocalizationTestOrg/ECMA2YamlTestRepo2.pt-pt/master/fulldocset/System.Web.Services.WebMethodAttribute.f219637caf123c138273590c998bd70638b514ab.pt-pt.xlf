<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd78700964b30c161c3661ea23859a1f3dbebda7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.WebMethodAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e1dcc20d8fc17b312fa4f66973370d7531b75da</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66ba20ab297ae711a6f77c8fe0334f12467aa95e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding this attribute to a method within an XML Web service created using ASP.NET makes the method callable from remote Web clients.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods within a class that have this attribute set are called XML Web service methods.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method and class must be public and running inside an ASP.NET Web application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.WebMethodAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.WebMethodAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes whether session state is enabled for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.WebMethodAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A web service call can only be the root of a transaction, due to the stateless nature of the HTTP protocol.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the following two settings are equivalent, with each call creating a new transaction:      <ph id="ph1">```   [WebMethod(TransactionOption = TransactionOption.Required)]   [WebMethod(TransactionOption = TransactionOption.RequiresNew)]   ```</ph>       It also means that all the following settings are equivalent; meaning no transaction support:      <ph id="ph2">```   [WebMethod] // TransactionOption.Disabled is the default   [WebMethod(TransactionOption = TransactionOption.Disabled)]   [WebMethod(TransactionOption = Transaction.NotSupported)]   [WebMethod(TransactionOption = Transaction.Supported)]   ```</ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes whether session state is enabled for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes the transaction support of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.WebMethodAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A web service call can only be the root of a transaction, due to the stateless nature of the HTTP protocol.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the following two settings are equivalent, with each call creating a new transaction:      <ph id="ph1">```   [WebMethod(TransactionOption = TransactionOption.Required)]   [WebMethod(TransactionOption = TransactionOption.RequiresNew)]   ```</ph>       It also means that all the following settings are equivalent; meaning no transaction support:      <ph id="ph2">```   [WebMethod] // TransactionOption.Disabled is the default   [WebMethod(TransactionOption = TransactionOption.Disabled)]   [WebMethod(TransactionOption = Transaction.NotSupported)]   [WebMethod(TransactionOption = Transaction.Supported)]   ```</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes whether session state is enabled for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes the transaction support of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes the number of seconds the response is cached.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.WebMethodAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A web service call can only be the root of a transaction, due to the stateless nature of the HTTP protocol.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the following two settings are equivalent, with each call creating a new transaction:      <ph id="ph1">```   [WebMethod(TransactionOption = TransactionOption.Required)]   [WebMethod(TransactionOption = TransactionOption.RequiresNew)]   ```</ph>       It also means that all the following settings are equivalent; meaning no transaction support:      <ph id="ph2">```   [WebMethod] // TransactionOption.Disabled is the default   [WebMethod(TransactionOption = TransactionOption.Disabled)]   [WebMethod(TransactionOption = Transaction.NotSupported)]   [WebMethod(TransactionOption = Transaction.Supported)]   ```</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes whether session state is enabled for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes the transaction support of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes the number of seconds the response is cached.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes whether the response for this request is buffered.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the response for this request is buffered.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting BufferResponse to <ph id="ph1">`true`</ph>, serializes the response of the XML Web service method into a memory buffer until either the response is completely serialized or the buffer is full.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the response is buffered, it is returned to the XML Web service client over the network.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When BufferResponse is <ph id="ph1">`false`</ph>, the response to the XML Web service method is sent back to the client as it is serialized.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, you only want to set BufferResponse to <ph id="ph1">`false`</ph>, if it is known that an XML Web service method returns large amounts of data to the client.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For smaller amounts of data, XML Web service performance is better with BufferResponse to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When BufferResponse is <ph id="ph1">`false`</ph>, SOAP extensions are disabled for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the response for this request is buffered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of seconds the response should be held in the cache.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When caching is enabled requests and responses are held in memory on the server for at least the cache duration so caution must be used if you expect requests or responses to be very large or you expect requests to vary widely.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two issues that can affect output caching in an ASP.NET 2.0 Web service application.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>In ASP.NET 2.0 the HTTP method of the test page has changed from GET to POST.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, POSTs are not normally cached.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the test page in an ASP.NET 2.0 Web service application to use GET, caching works properly.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, HTTP indicates that a user agent (the browser or calling application) should be able to override server caching by setting the "Cache-Control" to "no-cache".</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET applications, therefore, ignore cached results when they find a "no-cache" header.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The number of seconds the response should be held in the cache.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is 0, which means the response is not cached.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A descriptive message describing the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The descriptive message is displayed to prospective consumers of the XML Web service when description documents for the XML Web service are generated, such as the Service Description and the Service help page.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A descriptive message describing the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Indicates whether session state is enabled for an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to store session state in the ASP.NET &lt;xref:System.Web.SessionState.HttpSessionState&gt; object, the XML Web service must inherit from &lt;xref:System.Web.Services.WebService&gt; and a &lt;xref:System.Web.Services.WebMethodAttribute&gt; applied to the XML Web service method, setting the EnableSession property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If session state is not needed for an XML Web service method, then disabling it may improve performance.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>An XML Web service client is uniquely identified by an HTTP cookie returned by an XML Web service.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for an XML Web service to maintain session state for a client, the client must persist the cookie.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients can receive the HTTP cookie by creating a new instance of &lt;xref:System.Net.CookieContainer&gt; and assigning that to the &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A&gt; property of the proxy class before calling the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must persist the HTTP cookie between calls to the XML Web service.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a Web Forms client can persist the HTTP cookie by saving the &lt;xref:System.Net.CookieContainer&gt; in its own session state.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because not all XML Web services use session state and thus clients are not always required to use the &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A&gt; property of a client proxy, the documentation for the XML Web service should state whether session state is used.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if session state is enabled for an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name used for the XML Web service method in the data passed to and returned from an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MessageName property can be used to alias method or property names.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common use of the MessageName property will be to uniquely identify polymorphic methods.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, MessageName is set to the name of the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if an XML Web service contains two or more XML Web service methods with the same name, you can uniquely identify the individual XML Web service methods by setting the MessageName to a name unique within the XML Web service, without changing the name of the actual method name in code.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When data is passed to an XML Web service it is sent in a request and when it is returned it is sent in a response.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within the request and response, the name used for the XML Web service method is its MessageName property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message name associated with an XML Web service method must be unique within the XML Web service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new XML Web serivce method with the same name but different parameters is added after clients are calling the original method, a different message name should be specified for the new method but the original message name should be left as is to ensure compatability with existing clients.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name used for the XML Web service method in the data passed to and from an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is the name of the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates the transaction support of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML Web service methods can only participate as the root object in a transaction, due to the stateless nature of the HTTP protocol.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML Web service methods can invoke COM objects that participate in the same transaction as the XML Web service method, if the COM object is marked to run within a transaction in the Component Services administrative tool.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an XML Web service method with a TransactionOption property of <ph id="ph1">`Required`</ph> or <ph id="ph2">`RequiresNew`</ph> invokes another XML Web service method with a TransactionOption property of <ph id="ph3">`Required`</ph> or <ph id="ph4">`RequiresNew`</ph>, each XML Web service method participates in its own transaction, because an XML Web service method can only act as the root object in a transaction.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Item|Description|   |----------|-----------------|   |Disabled|Indicates that the XML Web service method does not run within the scope of a transaction.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a request is processed, the XML Web service method is executed without a transaction.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>[WebMethod(TransactionOption= <ph id="ph1">`TransactionOption.Disabled`</ph>)]|   |NotSupported|Indicates that the XML Web service method does not run within the scope of a transaction.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a request is processed, the XML Web service method is executed without a transaction.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>[WebMethod(TransactionOption= <ph id="ph1">`TransactionOption.NotSupported`</ph>)]|   |Supported|Indicates that the XML Web service method does not run within the scope of transactions.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a request is processed, the XML Web service is created without a transaction.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>[WebMethod(TransactionOption= <ph id="ph1">`TransactionOption.Supported`</ph>)]|   |Required|Indicates that the XML Web service method requires a transaction.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since XML Web service methods can only participate as the root object in a transaction, a new transaction will be created for the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>[WebMethod(TransactionOption= <ph id="ph1">`TransactionOption.Required`</ph>)]|   |RequiresNew|Indicates that the XML Web service method requires a new transaction.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a request is processed, the XML Web service is created within a new transaction.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>[WebMethod(TransactionOption= <ph id="ph1">`TransactionOption.RequiresNew`</ph>)]|       If an exception is thrown from or not caught by an XML Web service method, the transaction is automatically aborted.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no exceptions occur the transaction is automatically committed unless the method explicitly calls <ph id="ph1">`SetAbort`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The transaction support of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.EnterpriseServices.TransactionOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>