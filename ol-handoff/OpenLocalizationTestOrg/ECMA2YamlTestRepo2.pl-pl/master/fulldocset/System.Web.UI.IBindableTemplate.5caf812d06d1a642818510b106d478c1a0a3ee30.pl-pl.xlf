<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bf3761e152c39eb5d7db3938c4aac180e425225</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.IBindableTemplate.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eae60a6bc4090ec5ee5aaeca04f02214535f1690</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0b9af5bc8479a041778b3b8bf76cbb2eb46400c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way for ASP.NET data-bound controls, such as <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, to automatically bind to an ASP.NET data source control within templated content sections.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface provides a way for ASP.NET data-bound controls, such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, &lt;xref:System.Web.UI.WebControls.GridView&gt;, and &lt;xref:System.Web.UI.WebControls.FormView&gt;, to bind to data supplied by an ASP.NET data source control, such as &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; or &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;, when the data-bound control includes templated content.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Page developers do not implement the IBindableTemplate interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers creating custom data-bound controls might manipulate IBindableTemplate objects in implementations of the &lt;xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A&gt; and &lt;xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A&gt; methods, but do not implement their own IBindableTemplate objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-bound controls such as &lt;xref:System.Web.UI.WebControls.GridView&gt; typically are aware of their child control trees, and can therefore bind values to them, extract values from them, and pass these values between the data-bound control and a data source control whenever data binding occurs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when a page developer defines templated content for a data-bound control, the child controls within the template are not visible to the parent data-bound control: the parent can render the child content (because controls effectively render themselves), but it cannot extract the values of these child controls to pass to an associated data source control's update, insert, or delete operation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In data-binding scenarios, templated content is opaque to a parent data-bound control.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Bind`</ph> syntax makes it possible for the data-bound control to extract the values from a control data-bound inside an IBindableTemplate instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data binding can be one-way or two-way.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>(These binding directions are defined by the &lt;xref:System.ComponentModel.BindingDirection&gt; enumeration.) One-way data binding is any data binding performed in an outbound direction, from data source control to data-bound control; for example, any data-reading scenario involves one-way data binding.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For one-way data binding, you can use one-way data binding syntax (<ph id="ph1">`&lt;%# Eval("fieldname") %&gt;`</ph>) inside templated content, and do not need to use two-way ASP.NET data-binding syntax.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two-way data-binding describes data-binding in the inbound direction, from the data-bound control to the data source control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Automatic edit, insert, and delete scenarios using ASP.NET data-bound and data source controls are two-way data-binding scenarios.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>These scenarios use two-way data-binding expressions (<ph id="ph1">`&lt;%# Bind("fieldname") %&gt;`</ph>).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface and the ASP.NET infrastructure support automatic, declarative, two-way data binding between ASP.NET data source controls and templated content.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ASP.NET data-binding expressions and syntax, see <bpt id="p1">[</bpt>Binding to Databases<ept id="p1">](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)</ept> and <bpt id="p2">[</bpt>Data-Binding Expressions Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Templated content for data-bound controls is most often defined declaratively.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the processes most commonly used to bind templated data to data-bound controls.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Data-bound control|Process|   |-------------------------|-------------|   |&lt;xref:System.Web.UI.WebControls.DetailsView&gt;|The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;, &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt; property.|   |&lt;xref:System.Web.UI.WebControls.GridView&gt;|The data-bound control is bound to data using the <ph id="ph2">`DataSourceID`</ph> property of the data source control, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.GridView&gt; control does not support an insert operation.|   |&lt;xref:System.Web.UI.WebControls.FormView&gt;|The data-bound control is bound to data using the <ph id="ph1">`DataSourceID`</ph> property, and the templated content is defined in an &lt;xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A&gt;, &lt;xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A&gt;, or &lt;xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A&gt; property, or in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.|       The &lt;xref:System.Web.UI.WebControls.DataList&gt; and &lt;xref:System.Web.UI.WebControls.Repeater&gt; controls do not support automatic two-way data-binding scenarios.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET implicitly creates an IBindableTemplate object when templated content that binds to an ASP.NET data source control within the template is parsed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the ASP.NET parser creates an instance of the &lt;xref:System.Web.UI.CompiledBindableTemplateBuilder&gt; class when it parses templated content that uses ASP.NET data-binding syntax and contains ASP.NET Web server controls that support data binding.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>These ASP.NET sever controls are marked by the &lt;xref:System.ComponentModel.BindableAttribute&gt; attribute.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IBindableTemplate interface defines one method, &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is defined for two-way data binding, so that a data-bound control can automatically extract name/value pairs from templated content and pass the pairs to a data source control at run time.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For automatic data binding to succeed, the field names extracted from the templated content by the &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt; method must match parameter names in an associated data source control.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control developers call the &lt;xref:System.Web.UI.IBindableTemplate.ExtractValues%2A&gt; method explicitly only within their implementations of &lt;xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A&gt; or some other similar method of a custom data-bound control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When implemented by a class, retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of name/value pairs.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name represents the name of a control within templated content, and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>