<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a3434d4e6039d4e1ede618eef497aa18bd63bf8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Animation.KeySpline.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8675120f478af159e7d2d824277ff656deeded01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c88a4d6e0a9f6f03a2500dd0aae8b09dc1abd86</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This class is used by a spline key frame to define animation progress.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To understand how a KeySpline works, it is helpful to understand cubic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cubic Bezier curve is defined by a start point, an end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two coordinates in the KeySpline defines those two control points.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When describing key splines, the start point of the Bezier curve is always 0, and the end point is always 1, which is why you define only the two control points.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting curve specifies how an animation is interpolated during a time segment; that is, the curve represents the rate of change in the animation's target attribute over the time segment.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To better see the relationship between animation progress and a Bezier curve, see <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_KeySpline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="cp1X,cp1Y cp2X,cp2Y"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_KeySpline"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>cp1X<ept id="p3">*</ept>    &lt;xref:System.Windows.Point.X%2A&gt; component of the curve's first control point.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be between 0 and 1.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>cp1Y<ept id="p1">*</ept>    &lt;xref:System.Windows.Point.Y%2A&gt; component of the curve's first control point.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be between 0 and 1.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>cp2X<ept id="p1">*</ept>    &lt;xref:System.Windows.Point.X%2A&gt; component of the curve's second control point.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be between 0 and 1.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>cp2Y<ept id="p1">*</ept>    &lt;xref:System.Windows.Point.Y%2A&gt; component of the curve's second control point.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be between 0 and 1.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The separator between values may be either comma or one or more spaces.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The convention shown here of commas between components of a point and space between points is a recommended convention.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use a comma as the decimal point within the values of point components, even if that is the norm in your culture.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML values are treated as en-us in all type conversion cases, and the comma is thus interpreted as the separator and not as the intended decimal point.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default values for &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint1%2A&gt; and &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint2%2A&gt; are (0,0) and (1,1) respectively, which has no effect on the progress of an animation or key frame.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified control points.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The control point for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint1*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The control point for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint2*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified coordinates for the control points.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The x-coordinate for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint1*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The y-coordinate for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint1*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The x-coordinate for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint2*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The y-coordinate for the &lt;xref:System.Windows.Media.Animation.KeySpline.ControlPoint2*&gt; of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Makes this instance a deep copy of the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.Clone%2A&gt; instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Makes this instance a modifiable deep copy of the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using current property values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Resource references, data bindings, and animations are not copied, but their current values are.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first control point used to define a Bezier curve that describes a <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To understand how a &lt;xref:System.Windows.Media.Animation.KeySpline&gt; works, it is helpful to understand cubic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cubic Bezier curve is defined by a start point, an end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two coordinates in the &lt;xref:System.Windows.Media.Animation.KeySpline&gt; defines those two control points.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When describing key splines, the start point of the Bezier curve is always 0, and the end point is always 1, which is why you define only the two control points.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting curve specifies how an animation is interpolated during a time segment; that is, the curve represents the rate of change in the animation's target attribute over the time segment.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To better see the relationship between animation progress and a Bezier curve, see <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The Bezier curve's first control point.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The point's &lt;xref:System.Windows.Point.X<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id="p1">*</ept>&gt; values must each be between 0 and 1, inclusive.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default value is (0,0).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second control point used to define a Bezier curve that describes a <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To understand how a &lt;xref:System.Windows.Media.Animation.KeySpline&gt; works, it is helpful to understand cubic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cubic Bezier curve is defined by a start point, an end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two coordinates in the &lt;xref:System.Windows.Media.Animation.KeySpline&gt; defines those two control points.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When describing key splines, the start point of the Bezier curve is always 0, and the end point is always 1, which is why you define only the two control points.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting curve specifies how an animation is interpolated during a time segment; that is, the curve represents the rate of change in the animation's target attribute over the time segment.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>To better see the relationship between animation progress and a Bezier curve, see <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Bezier curve's second control point.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The point's &lt;xref:System.Windows.Point.X<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id="p1">*</ept>&gt; values must each be between 0 and 1, inclusive.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default value is (1,1).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Creates a new instance of <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A new instance of <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Makes this instance a clone of the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if these properties contain resource references or data bindings, &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; will fail when trying to freeze the object and will throw an &lt;xref:System.InvalidOperationException&gt;.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to clone.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Makes this instance a frozen clone of the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Resource references, data bindings, and animations are not copied, but their current values are.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to copy and freeze.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Calculates spline progress from a supplied linear progress.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>To understand how a &lt;xref:System.Windows.Media.Animation.KeySpline&gt; works, it is helpful to understand cubic Bezier curves.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cubic Bezier curve is defined by a start point, an end point, and two control points.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two coordinates in the &lt;xref:System.Windows.Media.Animation.KeySpline&gt; defines those two control points.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When describing key splines, the start point of the Bezier curve is always 0, and the end point is always 1, which is why you define only the two control points.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting curve specifies how an animation is interpolated during a time segment; that is, the curve represents the rate of change in the animation's target attribute over the time segment.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To better see the relationship between animation progress and a Bezier curve, see <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The linear progress to evaluate.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The calculated spline progress.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Called when the current <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is modified.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Formats the value of the current instance using the specified format.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The format to use.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the default format defined for the type of the &lt;xref:System.IFormattable&gt; implementation.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The provider to use to format the value.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the current instance in the specified format.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Creates a string representation of this instance of <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> based on the current culture.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A string representation of this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Creates a string representation of this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> based on the supplied &lt;xref:System.IFormatProvider&gt;.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The format provider to use.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If provider is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the current culture is used.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A string representation of this instance of <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.KeySpline"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>