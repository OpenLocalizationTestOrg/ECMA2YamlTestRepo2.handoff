<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3a2be6130883ab8d8f9a71d95ec4c997435d394</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.TextFormatting.TextSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cbc24ba265432f58d7aa7d8338f489857c93fca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f425f02849050fd02b4c5c7f5dd1df063c05bdc9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract class for specifying character data and formatting properties to be used by the <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>All access to the text in the TextSource object is through the &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A&gt;, which is designed to allow the text layout client to virtualize text in any way it chooses.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; is the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> text engine that provides services for formatting text and breaking text lines.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; can handle different text character formats and paragraph styles, and includes support for international text layout.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike a traditional text <ph id="ph1">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph>, the &lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; interacts with a text layout client through a set of callback methods.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It requires the client to provide these methods in an implementation of the TextSource class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following list describes the three members you must override:      -   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A&gt;: Retrieves a &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; starting at a specified TextSource position.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A&gt;: Retrieves the text span immediately before the specified TextSource position.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A&gt;: Retrieves a value that maps a TextSource character index to a &lt;xref:System.Windows.Media.TextEffect&gt; character index.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For a complete code sample that shows how to implement a derived TextSource class, see <bpt id="p1">[</bpt>Advanced Text Formatting Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159965)</ept> .</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Retrieves the text span immediately before the specified <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> position.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetPrecedingText method returns an empty &lt;xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; if the text span immediately before <ph id="ph1">`textSourceCharacterIndexLimit`</ph> does not contain any text, such as inline object or a hidden run.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a zero-length text span if there are no values preceding <ph id="ph1">`textSourceCharacterIndexLimit`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the character index position where text retrieval stops.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the text span immediately before <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">textSourceCharacterIndexLimit</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Retrieves a value that maps a <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> character index to a <bpt id="p2">&lt;xref href="System.Windows.Media.TextEffect"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> character index.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> character index to map.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that represents the <bpt id="p1">&lt;xref href="System.Windows.Media.TextEffect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> character index.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Retrieves a <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextRun"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> starting at a specified <bpt id="p2">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> position.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A text run is a sequence of characters sharing a single property set.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; class is the root of a type hierarchy representing several types of text content processed by &lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt;.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each class that is derived from &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; represents a distinct type of text content.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Class|Description|   |-----------|-----------------|   |&lt;xref:System.Windows.Media.TextFormatting.TextRun&gt;|Root of the hierarchy.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defines a group of characters that share the same set of character properties.|   |&lt;xref:System.Windows.Media.TextFormatting.TextCharacters&gt;|Defines a collection of character glyphs from a distinct physical typeface.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEmbeddedObject&gt;|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this type of content is a button in the middle of the line of text.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfLine&gt;|Defines a line-break character code.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfParagraph&gt;|Defines a paragraph-break character code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derives from &lt;xref:System.Windows.Media.TextFormatting.TextEndOfLine&gt;.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfSegment&gt;|Defines a segment break marker.|   |&lt;xref:System.Windows.Media.TextFormatting.TextHidden&gt;|Defines a range of non-visible characters.|   |&lt;xref:System.Windows.Media.TextFormatting.TextModifier&gt;|Defines the beginning of a modification scope.|</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifies the character index position in the <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> where the <bpt id="p2">&lt;xref href="System.Windows.Media.TextFormatting.TextRun"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is retrieved.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A value that represents a <bpt id="p1">&lt;xref href="System.Windows.Media.TextFormatting.TextRun"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or an object derived from <bpt id="p2">&lt;xref href="System.Windows.Media.TextFormatting.TextRun"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get or sets the PixelsPerDip at which the text should be rendered.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that extends &lt;xref:System.Windows.Media.TextFormatting.TextSource&gt; should update         PixelsPerDip whenever the DPI changes for a Per Monitor DPI Aware application.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The current PixelsPerDip value.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>