<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e28d1f2eec56694e24a3db09a245be4ebad21e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Hosting.HostSecurityPolicyResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dccdbc38b9d6b08985ed28c3c1e5875110695025</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48b5d19e1ddb402573120a03b4a545384b067b37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By extending the HostSecurityPolicyResolver type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configuring a HostSecurityPolicyResolver Class    In the configuration files, you can configure a custom HostSecurityPolicyResolver instance by adding the &lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt; attribute to the  element.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt; attribute can be set to the name of the custom HostSecurityPolicyResolver type that will be loaded by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The attribute value contains the fully qualified name of the derived type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> does not set this attribute.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following syntax shows how to configure the attribute:      <ph id="ph1">```   &lt;trust      Level = "[Full|High|Medium|Low|Minimal]"     permissionSetName = "name of the permission set"     hostSecurityPolicyResolverType = "security policy resolution type"   /&gt;   ```</ph>       The &lt;xref:System.Web.Configuration.TrustSection.PermissionSetName%2A&gt; attribute in the <ph id="ph2">`trust`</ph> element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, ASP.NET 4 sets this attribute to "ASP.Net".</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt; attribute in the <ph id="ph1">`trust`</ph> element indicates the custom HostSecurityPolicyResolver object that will be loaded by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is set to an empty string, the application uses the ASP.NET default logic for determining the permissions for the assembly.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostSecurityPolicyResolver type attribute cannot be set to a null value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The assembly that contains a derived HostSecurityPolicyResolver type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you implement this class, you must override the &lt;xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the &lt;xref:System.Security.Policy.Evidence&gt; instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of available security policies is determined by the &lt;xref:System.Web.Hosting.HostSecurityPolicyResults&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostSecurityPolicyResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the security policy that should be applied to an assembly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you inherit from the &lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt; class, you must implement the ResolvePolicy method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on the information that is provided in the <ph id="ph1">`evidence`</ph> parameter, the method should return one of the security policies that are defined in the &lt;xref:System.Web.Hosting.HostSecurityPolicyResults&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A collection of evidence about an assembly and a host, which is used as an input to security policy.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A value that indicates the type of security permissions should be applied to an assembly.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>