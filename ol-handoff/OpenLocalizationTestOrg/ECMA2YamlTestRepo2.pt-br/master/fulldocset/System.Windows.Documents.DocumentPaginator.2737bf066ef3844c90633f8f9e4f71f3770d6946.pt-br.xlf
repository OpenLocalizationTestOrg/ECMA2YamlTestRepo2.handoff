<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52b599976ab568285804cb814495b13081c7b5ca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Documents.DocumentPaginator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b01f3ba4989d7d94999097beaa952dd6422715fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">708c69d54a5ad00a3815164763336638dd4d6f88</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class that supports creation of multiple-page elements from a single document.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need automatic background repagination in response to events such as changing the page size of a &lt;xref:System.Windows.Documents.FlowDocument&gt;, then use &lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt; as your base class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Cancels a previous &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*&gt; or <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> operation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`userState`</ph> is <ph id="ph2">`null`</ph>, then all asynchronous tasks are cancelled.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The original <ph id="ph1">`userState`</ph> passed to &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync<bpt id="p1">*</bpt>&gt;, <ph id="ph2">&amp;lt;</ph>xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>, or &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync<ept id="p1">*</ept>&gt; that identifies the asynchronous task to cancel.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id="p1">*</bpt>&gt; with the new total, and sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id="p1">*</ept>&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; will be <ph id="ph1">`true`</ph> immediately after this is called.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If content is modified or &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt; is changed after this method is called, &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; will likely revert to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Asynchronously, forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id="p1">*</bpt>&gt; with the new total, and sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id="p1">*</ept>&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast this with the other overload of this method: &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Asynchronously, forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id="p1">*</bpt>&gt; with the new total, sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id="p1">*</ept>&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified ID is assigned to the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A unique identifier for the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Occurs when a &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*&gt; operation has finished.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified page number.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If pages prior to <ph id="ph1">`pageNumber`</ph> have not been formatted, they will be paginated synchronously prior to returning the requested page.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt; provides similar functionality as GetPage, but for asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The zero-based page number of the document page that is needed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">pageNumber</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the page does not exist.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Asynchronously returns (through the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator.GetPageCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event) the <bpt id="p2">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> for the specified page number.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast this with the other overload of this method: &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Documents.DocumentPage&gt; is passed to the event as one of the event arguments.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt; for how to use this method to get the page.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The zero-based page number of the document page that is needed.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Asynchronously returns (through the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator.GetPageCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event) the <bpt id="p2">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> for the specified page number and assigns the specified ID to the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; event.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Documents.DocumentPage&gt; is passed to the event as one of the event arguments.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following steps illustrate how to retrieve a &lt;xref:System.Windows.Documents.DocumentPage&gt; asynchronously:      1.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a &lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt; delegate and add it to be notified of &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; events.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call GetPageAsync specifying the <ph id="ph1">`pageNumber`</ph> desired and a unique <ph id="ph2">`userState`</ph>, which will be used to identify the completion of the asynchronous event.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event occurs and the delegate is called, compare the event's &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt; property with the original GetPageAsync <ph id="ph1">`userState`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt; property will also match the <ph id="ph1">`pageNumber`</ph> specified in the GetPageAsync call.)      4.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt; property matches the original GetPageAsync <ph id="ph1">`userState`</ph>, the operation is complete and the page is ready.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt; to retrieve the formatted &lt;xref:System.Windows.Documents.DocumentPage&gt;.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The zero-based page number of the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to get.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A unique identifier for the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Occurs when &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*&gt; has completed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount*&gt; is the total number of pages.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if pagination is complete and &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id="p2">*</bpt>&gt; is the total number of pages; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, if pagination is in process and &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<ept id="p2">*</ept>&gt; is the number of pages currently formatted (not the total).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This value may revert to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, after being <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize*&gt; or content changes; because those events would force a repagination.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator.GetPageCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Documents.GetPageCompletedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Documents.DocumentPaginator.PagesChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Documents.PagesChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a count of the number of pages currently formatted</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; is <ph id="ph1">`true`</ph>, pagination is complete and PageCount is the total number of pages in the document.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; is <ph id="ph1">`false`</ph>, pagination is in process and PageCount is the number of pages currently formatted (not the total).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value may change if &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt; or content changes, because those events would force a repagination.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A count of the number of pages that have been formatted.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Occurs when the document content is changed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the suggested width and height of each page.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Documents.DocumentPaginator&gt; may override the value of this property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users should check &lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the width and height of each page.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the element being paginated.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned has this &lt;xref:System.Windows.Documents.DocumentPaginator&gt; as the value of its &lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is guaranteed to have such a property because it implements &lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Documents.IDocumentPaginatorSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the element being paginated.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>