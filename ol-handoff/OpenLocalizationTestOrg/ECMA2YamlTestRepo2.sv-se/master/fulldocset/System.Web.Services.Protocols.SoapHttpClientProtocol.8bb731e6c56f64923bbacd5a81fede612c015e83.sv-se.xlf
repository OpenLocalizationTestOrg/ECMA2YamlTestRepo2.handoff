<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a311318563ae7911a01b48ef53acf92cf9e9ccdb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.Protocols.SoapHttpClientProtocol.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38c85ed26ef39af274b4696678fe541ffacbbaa4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8bc895695e22f10437368ef9180f5ba50e103ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; must be created for the XML Web service.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from SoapHttpClientProtocol, which derives from &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;, in turn, derives from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; for the XML Web service you want to call.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt; method, whereas asynchronous calls are made using the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; method and the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you would not call the BeginInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy class calls the BeginInvoke method to start an asynchronous invocation call to the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the BeginInvoke method and the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information about the derived method that is required for the SOAP protocol.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the &lt;xref:System.IAsyncResult&gt; that is returned from the BeginInvoke method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method in the derived class that is invoking the BeginInvoke method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`callback`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the delegate is not called.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Extra information supplied by the caller.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that is passed to the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt; method to obtain the return values from the remote method call.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Dynamically binds to an XML Web service described in the discovery document at &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the Discover method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property refers to the base address of the XML Web service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, before invoking the Discover method, set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to a URL of a discovery document.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Discover method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applied to each proxy class is a &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt; that defines the name of the binding and its namespace.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The discovery document you set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The proxy class does not have a binding defined.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you would not call the EndInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy class calls the EndInvoke method to complete an asynchronous invocation call to the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the EndInvoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt; method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any by-reference or <bpt id="p1">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is not the return value from the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamReader&gt; used by the &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creates a &lt;xref:System.Net.WebRequest&gt; for the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden to customize the &lt;xref:System.Net.WebRequest&gt; before the XML Web service request is made.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could add a custom header to the request.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; to use when creating the &lt;xref:System.Net.WebRequest&gt;.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.WebRequest&gt; for the specified URI.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamWriter&gt; used by the &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not call the Invoke method directly, unless you are building your own proxy class for an XML Web service.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy class calls the Invoke method to invoke an XML Web service method call.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the Invoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information on the derived method which is required for the SOAP protocol.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any <bpt id="p1">&lt;xref uid="langword_csharp_reference" name="reference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An object used to pass state information into the <ph id="ph1">`callback`</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SoapVersion property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; and &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;, respectively.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>