<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31d6a85e910bfb879441f1850215dab74a90e06a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Caching.HostFileChangeMonitor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23e9c782485a419637791218564f0deaa1a59533</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b551c988db502d8e7cda68d33dc604b2c452575</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Monitors directories and file paths and notifies the cache of changes to the monitored items.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The HostFileChangeMonitor class is a concrete implementation of the &lt;xref:System.Runtime.Caching.FileChangeMonitor&gt; type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class is sealed, therefore it cannot be extended.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This class is useful if you want to use an existing cache implementation and to monitor files and directories for changes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For each specified file or directory path, the HostFileChangeMonitor class triggers a change notification if any of the following changes occur:      -   The name of the monitored file or directory changes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   The specified file or directory did not exist at the time the monitor was created, but was created later.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In other words, a file or directory was created in the scope of the monitored items.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   The size of a monitored file changed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   The contents of a monitored file changed, or the contents of a monitored directory changed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   The access control list (ACL) of the file or directory was changed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   The monitored file or directory was deleted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If too many changes occur for the monitored file or directory at the same time, the HostFileChangeMonitor instance can lose track of specific changes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this scenario, the HostFileChangeMonitor class triggers a change notification.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This scenario is more likely to occur when the HostFileChangeMonitor instance monitors a directory, and many changes occur in the scope of the directory structure in a short period of time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the purpose of the HostFileChangeMonitor class is only to signal that something has changed among the set of monitored files and directories, it is not considered important that details about a specific change are not captured.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The purpose of the HostFileChangeMonitor class is to provide notification that state changed so that a cache entry (or entries) can be evicted.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Because the HostFileChangeMonitor class does not indicate exactly what changed, internal-change tracking overflow is irrelevant.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you supply paths to a HostFileChangeMonitor instance, the directory and file paths must be full paths to the directory or file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Relative paths and wildcard characters in paths are not allowed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the HostFileChangeMonitor class is used in an ASP.NET application, the Windows identity that is used for access to monitored items is the application identity for the ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In other words, the application identity will be one of the following:      -   The process identity.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-   The configured application identity.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-   The UNC credential if the application is running from a UNC share.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the HostFileChangeMonitor class is used in a non-ASP.NET application, the &lt;xref:System.IO.FileSystemWatcher&gt; class is used internally to monitor files.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>As a result, whatever access control list (ACL) applies to a monitored file or directory is applied to the Windows identity of the current thread.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Callers must have the appropriate level of code access security (CAS) permissions and must have NTFS permissions to all monitored directories and paths.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Caching.HostFileChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Calls to the HostFileChangeMonitor constructor must provide a non-null value for the <ph id="ph1">`filePaths`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>At a minimum, the constructor validates the collection of paths that is passed into it and then initializes monitoring for those paths.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The constructor performs only string validation of the path name.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It does not canonicalize paths or validate that the paths exist.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A list that contains one or more directory paths or file paths to monitor.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePaths&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePaths&lt;/code&gt;</ph> contains zero items.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-or-       A path in the <ph id="ph1">&lt;code&gt;filePaths&lt;/code&gt;</ph> list is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the collection of directories and file paths that was passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A collection of directories and file paths.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a read-only value that indicates the last write time of a monitored file or path.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If a file-change monitor is monitoring multiple files or paths, this property returns the most recent write time in the set of all files and paths.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The last write time of a monitored file or path.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets an identifier for the <bpt id="p1">&lt;xref href="System.Runtime.Caching.HostFileChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that is based on the set of monitored directories and file paths.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The string that makes up the UniqueId property value is constructed from the following parts:      -   A file or directory path.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-   The most recent write time in UTC time, measured as ticks but represented as a hexadecimal string.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   The file size, represented as a hexadecimal string.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If a file change monitor is monitoring multiple paths, the information returned by this property is concatenated into a single string for all the monitored directories and file paths.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An identifier for the change monitor.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>