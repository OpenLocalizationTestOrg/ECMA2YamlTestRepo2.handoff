<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e97dda1567d763147cc96270e3921fa361e22243</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Animation.ClockController.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">305a68cff8c27e5d5febf64392b5f1446d2ece7d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83e495237cdd6fd74466d4c1eafd22b76ffd6d34</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interactively controls a <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use a ClockController to interactively begin, pause, resume, seek, skip, stop, and remove a &lt;xref:System.Windows.Media.Animation.Clock&gt;.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can only interactively control root-level clocks.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sets the target &lt;xref:System.Windows.Media.Animation.ClockController.Clock*&gt; to begin at the next tick.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method causes the target &lt;xref:System.Windows.Media.Animation.Clock&gt; to behave as though its &lt;xref:System.Windows.Media.Animation.Timeline&gt; object's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; were set to the time of the next tick.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The timeline's actual &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; setting is ignored (but not changed).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This method changes the target clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; to &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Begin method does not resume a paused clock.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As a side-effect, the appropriate events will also not be raised until then.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Calling this method triggers the &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; and &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; events.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> controlled by this <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> controlled by this <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Stops the target <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from progressing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can pause a &lt;xref:System.Windows.Media.Animation.Clock&gt; regardless of its current state, and pausing a clock does not change its current state.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A clock can be paused while &lt;xref:System.Windows.Media.Animation.ClockState&gt;, &lt;xref:System.Windows.Media.Animation.ClockState&gt;, or &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The only way to unpause a clock is by using the &lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Pausing a clock implicitly pauses its children.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Calling this method when the target clock is already paused has no effect.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Pausing a clock triggers the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; event.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Removes the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> from the properties it animates.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The clock and its child clocks will no longer affect these properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method triggers the &lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt; event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Enables a <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was previously paused to resume progressing.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can pause or resume a &lt;xref:System.Windows.Media.Animation.Clock&gt; regardless of its current state, and pausing or resuming a clock does not change its current state.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A clock can be paused while &lt;xref:System.Windows.Media.Animation.ClockState&gt;, &lt;xref:System.Windows.Media.Animation.ClockState&gt;, or &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The only way to resume a paused clock is by using the Resume method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Resuming a clock implicitly resumes its children.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Calling this method on a clock that is not paused has no effect.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Resuming a paused clock triggers the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; event.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Seeks the target &lt;xref:System.Windows.Media.Animation.ClockController.Clock*&gt; by the specified amount when the next tick occurs.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the target clock is stopped, seeking makes it active again.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Seek operations do not take the &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt; or &lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt; settings of this clock's timeline into account: the clock is treated as though its timeline has a &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt; of 1 and no &lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method changes the clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; to &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Seeking a storyboard triggers the &lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt; and &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; events.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the target clock has children, their current time is updated accordingly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The seek offset, measured in the target clock's time.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This offset is relative to the clock's <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, depending on the value of <ph id="ph1">`origin`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the specified offset is relative to the target clock's <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Seeks the target <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by the specified amount immediately.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the target clock is stopped, seeking makes it active again.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Seek operations do not take the &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt; or &lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt; settings of this clock's timeline into account: the clock is treated as though its timeline has a &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt; of 1 and no &lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>SeekAlignedToLastTick aligns the seeked time of the clock with the last clock tick.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Values are immediately updated to reflect the changes due to SeekAlignedToLastTick, even though the screen will not reflect these changes until the screen updates.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the target clock has children, their current time is updated accordingly.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method changes the clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; to &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Seeking a storyboard triggers the &lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt; and &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; events.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The seek offset, measured in the target clock's time.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This offset is relative to the clock's <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, depending on the value of <ph id="ph1">`origin`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the specified offset is relative to the target clock's <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Advances the current time of the target <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the end of its active period.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the &lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt; setting of its &lt;xref:System.Windows.Media.Animation.Timeline&gt;.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the timeline's &lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt; property is set to &lt;xref:System.Windows.Media.Animation.FillBehavior&gt;, the clock fills; if the property is set to &lt;xref:System.Windows.Media.Animation.FillBehavior&gt;, the clock stops.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This method has an effect only if the target clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; is &lt;xref:System.Windows.Media.Animation.ClockState&gt;.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Advancing a storyboard to its fill period triggers the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; and &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; events.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the interactive speed of the target <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Setting this property has no effect until the next tick.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you set this property and then get its value before the next tick occurs, you'll get the old value.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This property will return the new value after the next tick.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Setting this property does not change the value of the underlying timeline's &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Setting this property triggers the target clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt; event.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A finite value greater than zero that describes the interactive speed of the target clock.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This value is multiplied against the value of the &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio<bpt id="p1">*</bpt>&gt; of the clock's <bpt id="p2">&lt;xref href="System.Windows.Media.Animation.Timeline"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>. For example, if the timeline's &lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio<ept id="p1">*</ept>&gt; is 0.5 and the <bpt id="p3">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object's SpeedRatio is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0).</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default value is 1.0.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Stops the target <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method changes the target clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; to &lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt; clock can be restarted by using the &lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;, &lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;, or &lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Stopping a clock triggers the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; and &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; events, but not the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>