<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db59589a9649cbb3311644562225a8f1b0e47703</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.PageStatePersister.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d120ad4095013a7eb1e75aa0426145b480e48f4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e03efa1c8c4e1efee68d70f704c0deaaa0733f13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base functionality for ASP.NET view state persistence mechanisms.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The HTTP requests and responses are inherently stateless.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To maintain state information between HTTP requests, ASP.NET server pages can store &lt;xref:System.Web.UI.Page&gt; state.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Several mechanisms exist to store view state between successive requests to the same page.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The abstract PageStatePersister class represents the base class for these state information storage mechanisms.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the <ph id="ph1">`type`</ph> attribute set to <ph id="ph2">`"hidden"`</ph>) on the page.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An ASP.NET page uses a &lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt; object to perform this work, using an &lt;xref:System.Web.UI.IStateFormatter&gt; instance to serialize and deserialize object state information.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Alternately, you can store the view state for your pages in the &lt;xref:System.Web.HttpContext.Session%2A&gt; object on the server using the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class for mobile clients with limited bandwidth and resources.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In some cases, you might disable view state persistence altogether.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about page state management and view state, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you are writing controls, you can store state information for the controls in the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; dictionary, which is a &lt;xref:System.Web.UI.StateBag&gt; object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A developer would retrieve the control state through the &lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You assign keys and values to the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property, and the &lt;xref:System.Web.UI.Page&gt; object serializes the state information between requests.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To perform custom state handling in your control, override the &lt;xref:System.Web.UI.Control.LoadViewState%2A&gt; and &lt;xref:System.Web.UI.Control.SaveViewState%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The control state object is not affected when view state is disabled by a page developer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Storing state information in the control state object requires that the control override the &lt;xref:System.Web.UI.Control.LoadControlState%2A&gt; and &lt;xref:System.Web.UI.Control.SaveControlState%2A&gt; methods and that the control be registered to store state information in control state every time the control is initialized.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can register a control to use control state by overriding the &lt;xref:System.Web.UI.Control.OnInit%2A&gt; method and calling the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about using the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the PageStatePersister class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Classes that derive from the PageStatePersister class must override the abstract &lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt; method to store view state and control state in the persistence medium, and override the &lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt; method to extract it.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you need to serialize view state and control state to a string, you can use the &lt;xref:System.Web.UI.IStateFormatter&gt; object that is accessed using the &lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It efficiently serializes and deserializes object state information to a Base64-encoded string.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also override the &lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt; property to supply your own object state serialization mechanism.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageStatePersister"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that the view state persistence mechanism is created for.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">page</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that represents the data that controls contained by the current <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object use to persist across HTTP requests to the Web server.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Control state data is not affected when view state is disabled at the &lt;xref:System.Web.UI.Page&gt; level, but requires extra implementation steps to use.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on using the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An object that contains view state data.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Overridden by derived classes to deserialize and load persisted state information when a <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object initializes its control hierarchy.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Web.UI.PageStatePersister&gt; class implement the Load method to initialize the &lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt; and &lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt; properties from some persisted format.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that the view state persistence mechanism is created for.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can use the Page property to access the current &lt;xref:System.Web.HttpContext&gt; object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that the <bpt id="p2">&lt;xref href="System.Web.UI.PageStatePersister"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Overridden by derived classes to serialize persisted state information when a <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is unloaded from memory.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Web.UI.PageStatePersister&gt; class implement the Save method to persist the contents of the &lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt; and &lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt; properties to a persistence medium.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Web.UI.IStateFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is used to serialize and deserialize the state information contained in the &lt;xref:System.Web.UI.PageStatePersister.ViewState<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.UI.PageStatePersister.ControlState<ept id="p2">*</ept>&gt; properties during calls to the &lt;xref:System.Web.UI.PageStatePersister.Save<bpt id="p3">*</bpt>&gt; and &lt;xref:System.Web.UI.PageStatePersister.Load<ept id="p3">*</ept>&gt; methods.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can override the StateFormatter property to provide your own view state formatter.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;xref href="System.Web.UI.IStateFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to serialize and deserialize object state.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that represents the data that controls contained by the current <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object use to persist across HTTP requests to the Web server.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>View state is a dictionary of state data that Web server controls need to function and render themselves.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Control developers typically access the view state object using the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>View state is affected when view state is disabled at the &lt;xref:System.Web.UI.Page&gt; level, and as a result controls might not behave correctly in these scenarios.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information on using &lt;xref:System.Web.UI.Control.ViewState%2A&gt; and control state when developing controls, see <bpt id="p1">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object that contains view state data.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>