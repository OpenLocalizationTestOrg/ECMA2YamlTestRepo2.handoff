<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fab1a70ad0ef377f5931a74b2d6e4f69ea85ef79</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.DateAndTime.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45036d50edec07a8bb95f8f4bfa230b279c32160</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab66bea26d85a678f9e3c70aa5526a635c510982</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DateAndTime" name="DateAndTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains the procedures and properties used in date and time operations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a date and time value to which a specified time interval has been added.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DateAdd`</ph> function to add or subtract a specified time interval from a date.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can calculate a date 30 days from today or a time 45 minutes before now.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add days to <ph id="ph1">`DateValue`</ph>, you can use <ph id="ph2">`DateInterval.Day`</ph>, <ph id="ph3">`DateInterval.DayOfYear`</ph>, or <ph id="ph4">`DateInterval.Weekday`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are treated as equivalent because <ph id="ph1">`DayOfYear`</ph> and <ph id="ph2">`Weekday`</ph> are not meaningful time intervals.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DateAdd`</ph> function never returns an invalid date.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example adds one month to January 31:      <ph id="ph1">```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ```</ph>       In this example, <ph id="ph2">`DateAdd`</ph> returns <ph id="ph3">`#2/28/1995#`</ph>, not <ph id="ph4">`#2/31/1995#`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`DateValue`</ph> is <ph id="ph2">`#1/31/1996#`</ph>, it returns <ph id="ph3">`#2/29/1996#`</ph> because 1996 is a leap year.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`DateAdd`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in adding time intervals.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can add a fractional number of days, rounded to the nearest millisecond, to a <ph id="ph1">`Date`</ph> variable as follows:      <ph id="ph2">```vb#   Dim NextTime As Date = Now        ' Current date and time.   NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.   ```</ph>       The <ph id="ph3">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String|Unit of time interval to add|   |-----------------------|------------|----------------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|d|Day; truncated to integral value|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|y|Day; truncated to integral value|   |<ph id="ph3">`DateInterval.Hour`</ph>|h|Hour; rounded to nearest millisecond|   |<ph id="ph4">`DateInterval.Minute`</ph>|n|Minute; rounded to nearest millisecond|   |<ph id="ph5">`DateInterval.Month`</ph>|m|Month; truncated to integral value|   |<ph id="ph6">`DateInterval.Quarter`</ph>|q|Quarter; truncated to integral value|   |<ph id="ph7">`DateInterval.Second`</ph>|s|Second; rounded to nearest millisecond|   |<ph id="ph8">`DateInterval.Weekday`</ph>|w|Day; truncated to integral value|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|ww|Week; truncated to integral value|   |<ph id="ph10">`DateInterval.Year`</ph>|yyyy|Year; truncated to integral value|</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the time interval you want to add.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Floating-point expression representing the number of intervals you want to add.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Number`</ph> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It can contain a fractional part when <ph id="ph1">`Interval`</ph> specifies hours, minutes, or seconds.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For other values of <ph id="ph1">`Interval`</ph>, any fractional part of <ph id="ph2">`Number`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An expression representing the date and time to which the interval is to be added.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DateValue`</ph> itself is not changed in the calling program.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a date and time value to which a specified time interval has been added.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;DateValue&lt;/code&gt;</ph> is not coercible to <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Interval&lt;/code&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a date and time value to which a specified time interval has been added.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DateAdd`</ph> function to add or subtract a specified time interval from a date.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can calculate a date 30 days from today or a time 45 minutes before now.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add days to <ph id="ph1">`DateValue`</ph>, you can use <ph id="ph2">`DateInterval.Day`</ph>, <ph id="ph3">`DateInterval.DayOfYear`</ph>, or <ph id="ph4">`DateInterval.Weekday`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are treated as equivalent because <ph id="ph1">`DayOfYear`</ph> and <ph id="ph2">`Weekday`</ph> are not meaningful time intervals.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DateAdd`</ph> function never returns an invalid date.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example adds one month to January 31:      <ph id="ph1">```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ```</ph>       In this example, <ph id="ph2">`DateAdd`</ph> returns <ph id="ph3">`#2/28/1995#`</ph>, not <ph id="ph4">`#2/31/1995#`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`DateValue`</ph> is <ph id="ph2">`#1/31/1996#`</ph>, it returns <ph id="ph3">`#2/29/1996#`</ph> because 1996 is a leap year.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`DateAdd`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in adding time intervals.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can add a fractional number of days, rounded to the nearest millisecond, to a <ph id="ph1">`Date`</ph> variable as follows:      <ph id="ph2">```vb#   Dim NextTime As Date = Now        ' Current date and time.   NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.   ```</ph>       The <ph id="ph3">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String|Unit of time interval to add|   |-----------------------|------------|----------------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|d|Day; truncated to integral value|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|y|Day; truncated to integral value|   |<ph id="ph3">`DateInterval.Hour`</ph>|h|Hour; rounded to nearest millisecond|   |<ph id="ph4">`DateInterval.Minute`</ph>|n|Minute; rounded to nearest millisecond|   |<ph id="ph5">`DateInterval.Month`</ph>|m|Month; truncated to integral value|   |<ph id="ph6">`DateInterval.Quarter`</ph>|q|Quarter; truncated to integral value|   |<ph id="ph7">`DateInterval.Second`</ph>|s|Second; rounded to nearest millisecond|   |<ph id="ph8">`DateInterval.Weekday`</ph>|w|Day; truncated to integral value|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|ww|Week; truncated to integral value|   |<ph id="ph10">`DateInterval.Year`</ph>|yyyy|Year; truncated to integral value|</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the time interval you want to add.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Floating-point expression representing the number of intervals you want to add.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Number`</ph> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It can contain a fractional part when <ph id="ph1">`Interval`</ph> specifies hours, minutes, or seconds.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For other values of <ph id="ph1">`Interval`</ph>, any fractional part of <ph id="ph2">`Number`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An expression representing the date and time to which the interval is to be added.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DateValue`</ph> itself is not changed in the calling program.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a date and time value to which a specified time interval has been added.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;DateValue&lt;/code&gt;</ph> is not coercible to <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Interval&lt;/code&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying the number of time intervals between two <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DateDiff`</ph> function to determine how many specified time intervals exist between two date/time values.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might use <ph id="ph1">`DateDiff`</ph> to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Behavior      -   <bpt id="p1">**</bpt>Treatment of Parameters.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateDiff`</ph> subtracts the value of <ph id="ph2">`Date1`</ph> from the value of <ph id="ph3">`Date2`</ph> to produce the difference.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither value is changed in the calling program.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Return Values.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">`Date1`</ph> and <ph id="ph2">`Date2`</ph> are of the <ph id="ph3">`Date`</ph> data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">`DateDiff`</ph> always returns the number of time intervals as a <ph id="ph2">`Long`</ph> value.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Date1`</ph> represents a later date and time than <ph id="ph2">`Date2`</ph>, <ph id="ph3">`DateDiff`</ph> returns a negative number.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Day Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.DayOfYear`</ph>, it is treated the same as <ph id="ph3">`DateInterval.Day`</ph>, because <ph id="ph4">`DayOfYear`</ph> is not a meaningful unit for a time interval.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Week Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.WeekOfYear`</ph>, the return value represents the number of weeks between the first day of the week containing <ph id="ph3">`Date1`</ph> and the first day of the week containing <ph id="ph4">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how this produces different results from <ph id="ph1">`DateInterval.Weekday`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions#60<ept id="p2">](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb)</ept><ept id="p1">]</ept>           In the preceding example, <ph id="ph1">`DateDiff`</ph> returns 0 to <ph id="ph2">`wD`</ph> because the difference between the two dates is less than seven days, but it returns 1 to <ph id="ph3">`wY`</ph> because there is a seven-day difference between the first days of the respective calendar weeks.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Larger Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.Year`</ph>, the return value is calculated purely from the year parts of <ph id="ph3">`Date1`</ph> and <ph id="ph4">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the return value for <ph id="ph1">`DateInterval.Month`</ph> is calculated purely from the year and month parts of the arguments, and for <ph id="ph2">`DateInterval.Quarter`</ph> from the quarters containing the two dates.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when comparing December 31 to January 1 of the following year, <ph id="ph1">`DateDiff`</ph> returns 1 for <ph id="ph2">`DateInterval.Year`</ph>, <ph id="ph3">`DateInterval.Quarter`</ph>, or <ph id="ph4">`DateInterval.Month`</ph>, even though at most only one day has elapsed.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures such as Japanese that have multiple eras, the <ph id="ph1">`DateDiff`</ph> method does not return a difference in years if the difference spans two or more eras.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can calculate the difference in values returned by the &lt;xref:System.DateTime.Year%2A&gt; property, as shown in the following example: <ph id="ph1">`date2.Year - date1.Year`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Other Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in finding time intervals.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">`Subtract`</ph> method in either of its overloaded forms: &lt;xref:System.DateTime.Subtract%2A?displayProperty=fullName&gt; subtracts a &lt;xref:System.TimeSpan&gt; from a <ph id="ph2">`Date`</ph> variable to return another <ph id="ph3">`Date`</ph> value, and &lt;xref:System.DateTime.Subtract%2A?displayProperty=fullName&gt; subtracts a <ph id="ph4">`Date`</ph> value to return a &lt;xref:System.TimeSpan&gt;.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can time a process to find out how many milliseconds it takes, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions#61<ept id="p2">](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb)</ept><ept id="p1">]</ept>       The <ph id="ph1">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String value|Unit of time difference|   |-----------------------|------------------|-----------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|"d"|Day|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|"y"|Day|   |<ph id="ph3">`DateInterval.Hour`</ph>|"h"|Hour|   |<ph id="ph4">`DateInterval.Minute`</ph>|"n"|Minute|   |<ph id="ph5">`DateInterval.Month`</ph>|"m"|Month|   |<ph id="ph6">`DateInterval.Quarter`</ph>|"q"|Quarter|   |<ph id="ph7">`DateInterval.Second`</ph>|"s"|Second|   |<ph id="ph8">`DateInterval.Weekday`</ph>|"w"|Week|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|"ww"|Calendar week|   |<ph id="ph10">`DateInterval.Year`</ph>|"yyyy"|Year|       The <ph id="ph11">`DayOfWeek`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday (default)|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|       The <ph id="ph9">`WeekOfYear`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstWeekOfYear.System`</ph>|0|First week of year specified in system settings|   |<ph id="ph2">`FirstWeekOfYear.Jan1`</ph>|1|Week in which January 1 occurs (default)|   |<ph id="ph3">`FirstWeekOfYear.FirstFourDays`</ph>|2|Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstWeekOfYear.FirstFullWeek`</ph>|3|First full week in the new year|</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the time interval you want to use as the unit of difference between <ph id="ph1">`Date1`</ph> and <ph id="ph2">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The first date/time value you want to use in the calculation.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The second date/time value you want to use in the calculation.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.Sunday" name="FirstDayOfWeek.Sunday" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear" name="FirstWeekOfYear" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first week of the year.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear.Jan1" name="FirstWeekOfYear.Jan1" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying the number of time intervals between two <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Date1&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;Date2&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;DayofWeek&lt;/code&gt;</ph> is out of range.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Date1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;Date2&lt;/code&gt;</ph> is of an invalid type.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying the number of time intervals between two <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DateDiff`</ph> function to determine how many specified time intervals exist between two date/time values.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might use <ph id="ph1">`DateDiff`</ph> to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Behavior      -   <bpt id="p1">**</bpt>Treatment of Parameters.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateDiff`</ph> subtracts the value of <ph id="ph2">`Date1`</ph> from the value of <ph id="ph3">`Date2`</ph> to produce the difference.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither value is changed in the calling program.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Return Values.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">`Date1`</ph> and <ph id="ph2">`Date2`</ph> are of the <ph id="ph3">`Date`</ph> data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">`DateDiff`</ph> always returns the number of time intervals as a <ph id="ph2">`Long`</ph> value.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Date1`</ph> represents a later date and time than <ph id="ph2">`Date2`</ph>, <ph id="ph3">`DateDiff`</ph> returns a negative number.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Day Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.DayOfYear`</ph>, it is treated the same as <ph id="ph3">`DateInterval.Day`</ph>, because <ph id="ph4">`DayOfYear`</ph> is not a meaningful unit for a time interval.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Week Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.WeekOfYear`</ph>, the return value represents the number of weeks between the first day of the week containing <ph id="ph3">`Date1`</ph> and the first day of the week containing <ph id="ph4">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how this produces different results from <ph id="ph1">`DateInterval.Weekday`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions#60<ept id="p2">](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb)</ept><ept id="p1">]</ept>           In the preceding example, <ph id="ph1">`DateDiff`</ph> returns 0 to <ph id="ph2">`wD`</ph> because the difference between the two dates is less than seven days, but it returns 1 to <ph id="ph3">`wY`</ph> because there is a seven-day difference between the first days of the respective calendar weeks.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Larger Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is set to <ph id="ph2">`DateInterval.Year`</ph>, the return value is calculated purely from the year parts of <ph id="ph3">`Date1`</ph> and <ph id="ph4">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the return value for <ph id="ph1">`DateInterval.Month`</ph> is calculated purely from the year and month parts of the arguments, and for <ph id="ph2">`DateInterval.Quarter`</ph> from the quarters containing the two dates.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when comparing December 31 to January 1 of the following year, <ph id="ph1">`DateDiff`</ph> returns 1 for <ph id="ph2">`DateInterval.Year`</ph>, <ph id="ph3">`DateInterval.Quarter`</ph>, or <ph id="ph4">`DateInterval.Month`</ph>, even though at most only one day has elapsed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures such as Japanese that have multiple eras, the <ph id="ph1">`DateDiff`</ph> method does not return a difference in years if the difference spans two or more eras.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can calculate the difference in values returned by the &lt;xref:System.DateTime.Year%2A&gt; property, as shown in the following example: <ph id="ph1">`date2.Year - date1.Year`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Other Intervals.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in finding time intervals.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">`Subtract`</ph> method in either of its overloaded forms: &lt;xref:System.DateTime.Subtract%2A?displayProperty=fullName&gt; subtracts a &lt;xref:System.TimeSpan&gt; from a <ph id="ph2">`Date`</ph> variable to return another <ph id="ph3">`Date`</ph> value, and &lt;xref:System.DateTime.Subtract%2A?displayProperty=fullName&gt; subtracts a <ph id="ph4">`Date`</ph> value to return a &lt;xref:System.TimeSpan&gt;.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can time a process to find out how many milliseconds it takes, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions#61<ept id="p2">](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb)</ept><ept id="p1">]</ept>       The <ph id="ph1">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String value|Unit of time difference|   |-----------------------|------------------|-----------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|"d"|Day|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|"y"|Day|   |<ph id="ph3">`DateInterval.Hour`</ph>|"h"|Hour|   |<ph id="ph4">`DateInterval.Minute`</ph>|"n"|Minute|   |<ph id="ph5">`DateInterval.Month`</ph>|"m"|Month|   |<ph id="ph6">`DateInterval.Quarter`</ph>|"q"|Quarter|   |<ph id="ph7">`DateInterval.Second`</ph>|"s"|Second|   |<ph id="ph8">`DateInterval.Weekday`</ph>|"w"|Week|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|"ww"|Calendar week|   |<ph id="ph10">`DateInterval.Year`</ph>|"yyyy"|Year|       The <ph id="ph11">`DayOfWeek`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday (default)|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|       The <ph id="ph9">`WeekOfYear`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstWeekOfYear.System`</ph>|0|First week of year specified in system settings|   |<ph id="ph2">`FirstWeekOfYear.Jan1`</ph>|1|Week in which January 1 occurs (default)|   |<ph id="ph3">`FirstWeekOfYear.FirstFourDays`</ph>|2|Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstWeekOfYear.FirstFullWeek`</ph>|3|First full week in the new year|</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the time interval you want to use as the unit of difference between <ph id="ph1">`Date1`</ph> and <ph id="ph2">`Date2`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The first date/time value you want to use in the calculation.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The second date/time value you want to use in the calculation.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.Sunday" name="FirstDayOfWeek.Sunday" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear" name="FirstWeekOfYear" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first week of the year.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear.Jan1" name="FirstWeekOfYear.Jan1" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying the number of time intervals between two <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Date1&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;Date2&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;DayofWeek&lt;/code&gt;</ph> is out of range.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Date1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;Date2&lt;/code&gt;</ph> is of an invalid type.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the specified component of a given <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DatePart`</ph> function to evaluate a date/time value and return a specific component.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might use <ph id="ph1">`DatePart`</ph> to calculate the day of the week or the current hour.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose <ph id="ph1">`DateInterval.Weekday`</ph> for the <ph id="ph2">`Interval`</ph> argument, the returned value is consistent with the values of the <ph id="ph3">`FirstDayOfWeek`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose <ph id="ph1">`DateInterval.WeekOfYear`</ph>, <ph id="ph2">`DatePart`</ph> uses the &lt;xref:System.Globalization.Calendar&gt; and &lt;xref:System.Globalization.CultureInfo&gt; classes of the &lt;xref:System.Globalization&gt; namespace to determine your current settings.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeekValue`</ph> argument affects calculations that use the <ph id="ph2">`DateInterval.Weekday`</ph> and <ph id="ph3">`DateInterval.WeekOfYear`</ph> <ph id="ph4">`Interval`</ph> settings.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYearValue`</ph> argument affects calculations that specify <ph id="ph2">`DateInterval.WeekOfYear`</ph> for <ph id="ph3">`Interval`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in retrieving date/time parts.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can obtain the entire date value of a <ph id="ph1">`Date`</ph> variable, with the time value set to midnight, as follows:      <ph id="ph2">```vb#   Dim CurrDatTim As Date = Now   ' Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.   ```</ph>       The <ph id="ph3">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String|Part of date/time value to return|   |-----------------------|------------|----------------------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|d|Day of month (1 through 31)|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|y|Day of year (1 through 366)|   |<ph id="ph3">`DateInterval.Hour`</ph>|h|Hour|   |<ph id="ph4">`DateInterval.Minute`</ph>|n|Minute|   |<ph id="ph5">`DateInterval.Month`</ph>|m|Month|   |<ph id="ph6">`DateInterval.Quarter`</ph>|q|Quarter|   |<ph id="ph7">`DateInterval.Second`</ph>|s|Second|   |<ph id="ph8">`DateInterval.Weekday`</ph>|w|Day of week (1 through 7)|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|ww|Week of year (1 through 53)|   |<ph id="ph10">`DateInterval.Year`</ph>|yyyy|Year|       The <ph id="ph11">`FirstDayOfWeekValue`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday (default)|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|       The <ph id="ph9">`FirstWeekOfYearValue`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstWeekOfYear.System`</ph>|0|First week of year specified in system settings|   |<ph id="ph2">`FirstWeekOfYear.Jan1`</ph>|1|Week in which January 1 occurs (default)|   |<ph id="ph3">`FirstWeekOfYear.FirstFourDays`</ph>|2|Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstWeekOfYear.FirstFullWeek`</ph>|3|First full week in new year|</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the part of the date/time value you want to return.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that you want to evaluate.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.Sunday" name="FirstDayOfWeek.Sunday" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear" name="FirstWeekOfYear" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first week of the year.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear.Jan1" name="FirstWeekOfYear.Jan1" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the specified component of a given <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Interval&lt;/code&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;DateValue&lt;/code&gt;</ph> is not coercible to <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the specified component of a given <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`DatePart`</ph> function to evaluate a date/time value and return a specific component.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might use <ph id="ph1">`DatePart`</ph> to calculate the day of the week or the current hour.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose <ph id="ph1">`DateInterval.Weekday`</ph> for the <ph id="ph2">`Interval`</ph> argument, the returned value is consistent with the values of the <ph id="ph3">`FirstDayOfWeek`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose <ph id="ph1">`DateInterval.WeekOfYear`</ph>, <ph id="ph2">`DatePart`</ph> uses the &lt;xref:System.Globalization.Calendar&gt; and &lt;xref:System.Globalization.CultureInfo&gt; classes of the &lt;xref:System.Globalization&gt; namespace to determine your current settings.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeekValue`</ph> argument affects calculations that use the <ph id="ph2">`DateInterval.Weekday`</ph> and <ph id="ph3">`DateInterval.WeekOfYear`</ph> <ph id="ph4">`Interval`</ph> settings.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYearValue`</ph> argument affects calculations that specify <ph id="ph2">`DateInterval.WeekOfYear`</ph> for <ph id="ph3">`Interval`</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in retrieving date/time parts.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can obtain the entire date value of a <ph id="ph1">`Date`</ph> variable, with the time value set to midnight, as follows:      <ph id="ph2">```vb#   Dim CurrDatTim As Date = Now   ' Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.   ```</ph>       The <ph id="ph3">`Interval`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|String|Part of date/time value to return|   |-----------------------|------------|----------------------------------------|   |<ph id="ph1">`DateInterval.Day`</ph>|d|Day of month (1 through 31)|   |<ph id="ph2">`DateInterval.DayOfYear`</ph>|y|Day of year (1 through 366)|   |<ph id="ph3">`DateInterval.Hour`</ph>|h|Hour|   |<ph id="ph4">`DateInterval.Minute`</ph>|n|Minute|   |<ph id="ph5">`DateInterval.Month`</ph>|m|Month|   |<ph id="ph6">`DateInterval.Quarter`</ph>|q|Quarter|   |<ph id="ph7">`DateInterval.Second`</ph>|s|Second|   |<ph id="ph8">`DateInterval.Weekday`</ph>|w|Day of week (1 through 7)|   |<ph id="ph9">`DateInterval.WeekOfYear`</ph>|ww|Week of year (1 through 53)|   |<ph id="ph10">`DateInterval.Year`</ph>|yyyy|Year|       The <ph id="ph11">`FirstDayOfWeekValue`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday (default)|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|       The <ph id="ph9">`FirstWeekOfYearValue`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstWeekOfYear.System`</ph>|0|First week of year specified in system settings|   |<ph id="ph2">`FirstWeekOfYear.Jan1`</ph>|1|Week in which January 1 occurs (default)|   |<ph id="ph3">`FirstWeekOfYear.FirstFourDays`</ph>|2|Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstWeekOfYear.FirstFullWeek`</ph>|3|First full week in new year|</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_DateInterval" name="DateInterval" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression representing the part of the date/time value you want to return.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that you want to evaluate.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.Sunday" name="FirstDayOfWeek.Sunday" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear" name="FirstWeekOfYear" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first week of the year.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstWeekOfYear.Jan1" name="FirstWeekOfYear.Jan1" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the specified component of a given <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Interval&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;DateValue&lt;/code&gt;</ph> is not coercible to <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under Windows 98 or Windows 2000, two-digit years for the <ph id="ph1">`Year`</ph> argument are interpreted based on user-defined computer settings.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default settings are that values from 0 through 29 are interpreted as the years 2000–2029, and values from 30 through 99 are interpreted as the years 1930–1999.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other <ph id="ph1">`Year`</ph> arguments, use a four-digit year; for example, 1924.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Earlier versions of Windows interpret two-digit years based on the defaults described previously.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be sure the function returns the proper value, use a four-digit <ph id="ph1">`Year`</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example demonstrates negative, zero, and positive argument values.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here, the <ph id="ph1">`DateSerial`</ph> function returns a <ph id="ph2">`Date`</ph> representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```</ph>       If either <ph id="ph2">`Month`</ph> or <ph id="ph3">`Day`</ph> exceeds its normal range, it is applied to the next larger unit as appropriate.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of <ph id="ph1">`Month`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Year`</ph> is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an &lt;xref:System.ArgumentOutOfRangeException&gt; error occurs.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Date`</ph> data type includes time components.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateSerial`</ph> sets all of these to 0, so the returned value represents the beginning of the calculated day.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime&gt; structure, its methods give you additional options in assembling a <ph id="ph2">`Date`</ph> value.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use one of the overloaded &lt;xref:System.DateTime.%23ctor%2A&gt; constructors to populate a <ph id="ph1">`Date`</ph> variable using the desired combination of components.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets <ph id="ph1">`NewDateTime`</ph> to May 6, 1978 at one tenth of a second before 8:30 in the morning:      <ph id="ph2">```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```</ph></source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 1 through 9999.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>However, values below this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Year`</ph> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Year`</ph> is less than 1, it is subtracted from the current year.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 1 through 12.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>However, values outside this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`Month`</ph> is offset by 1 and applied to January of the calculated year.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>In other words, (<ph id="ph1">`Month`</ph> - 1) is added to January.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The year is recalculated if necessary.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The following results illustrate this effect:       If <ph id="ph1">`Month`</ph> is 1, the result is January of the calculated year.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Month`</ph> is 0, the result is December of the previous year.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Month`</ph> is -1, the result is November of the previous year.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Month`</ph> is 13, the result is January of the following year.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 1 through 31.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>However, values outside this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`Day`</ph> is offset by 1 and applied to the first day of the calculated month.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>In other words, (<ph id="ph1">`Day`</ph> - 1) is added to the first of the month.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The month and year are recalculated if necessary.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The following results illustrate this effect:       If <ph id="ph1">`Day`</ph> is 1, the result is the first day of the calculated month.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Day`</ph> is 0, the result is the last day of the previous month.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Day`</ph> is -1, the result is the penultimate day of the previous month.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Day`</ph> is past the end of the current month, the result is the appropriate day of the following month.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>For example, if <ph id="ph1">`Month`</ph> is 4 and <ph id="ph2">`Day`</ph> is 31, the result is May 1.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the current date according to your system.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateString`</ph> returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true for all system locales except those that use a double-byte character set (DBCS).</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system locale uses a double-byte character set, <ph id="ph1">`DateString`</ph> returns the system date in the yyyy-MM-dd format.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system locale is set by using the <bpt id="p1">**</bpt>Clock, Language, and Region<ept id="p1">**</ept> item in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">`DateString`</ph> property returns the system date only in the yyyy-MM-dd format for the <ph id="ph2">`zh`</ph> (Chinese simplified), <ph id="ph3">`ko`</ph> (Korean), and <ph id="ph4">`ja`</ph> (Japanese) system locales if you are running Visual Basic within Silverlight.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the current system time as a <ph id="ph1">`String`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the current system date or time in the format of your locale, or in a custom format, supply the &lt;xref:Microsoft.VisualBasic.DateAndTime.Now%2A&gt; property to the &lt;xref:Microsoft.VisualBasic.Strings.Format%2A&gt; function, specifying either a predefined or user-defined date/time format.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example demonstrates this.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   MsgBox("The formatted date is " &amp; Format(Now, "dddd, d MMM yyyy"))   ```</ph>       To access the current system date as a <ph id="ph2">`Date`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.Today%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the current date according to your system.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Invalid format used to set the value of <bpt id="p1">&lt;xref uid="langword_csharp_DateString" name="DateString" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`StringDate`</ph> includes only numbers from 1 through 12 separated by valid date separators, <ph id="ph2">`DateValue`</ph> recognizes the order for month, day, and year according to the Short Date format specified for your system.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateValue`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the Short Date format by setting the &lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A&gt; property of the &lt;xref:System.Globalization.DateTimeFormatInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateValue`</ph> recognizes month names in long, abbreviated, and numeric form.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in addition to recognizing 12/30/1991 and 12/30/91, <ph id="ph1">`DateValue`</ph> also recognizes December 30, 1991 and Dec 30, 1991.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the year part of <ph id="ph1">`StringDate`</ph> is omitted, <ph id="ph2">`DateValue`</ph> uses the current year from your computer's system date.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`StringDate`</ph> argument includes time information, <ph id="ph2">`DateValue`</ph> does not include it in the returned value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if <ph id="ph1">`StringDate`</ph> includes invalid time information, such as "89:98", an &lt;xref:System.InvalidCastException&gt; error occurs.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;StringDate&lt;/code&gt;</ph> includes invalid time information.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 31 representing the day of the month.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">`Day`</ph> function, you might have to qualify it with the <ph id="ph2">`Microsoft.VisualBasic`</ph> namespace, because the &lt;xref:System.Windows.Forms&gt; namespace defines &lt;xref:System.Windows.Forms.Day&gt; as an enumeration.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how qualifying <ph id="ph1">`Day`</ph> resolves this ambiguity:      <ph id="ph2">```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ```</ph>       You can also obtain the day of the month by calling <ph id="ph3">`DatePart`</ph> and specifying <ph id="ph4">`DateInterval.Day`</ph> for the <bpt id="p1">*</bpt>Interval<ept id="p1">*</ept> argument.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the day.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 31 representing the day of the month.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 23 representing the hour of the day.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also obtain the hour of the day by calling <ph id="ph1">`DatePart`</ph> and specifying <ph id="ph2">`DateInterval.Hour`</ph> for the <ph id="ph3">`Interval`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the hour.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 23 representing the hour of the day.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 59 representing the minute of the hour.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also obtain the minute of the hour by calling <ph id="ph1">`DatePart`</ph> and specifying <ph id="ph2">`DateInterval.Minute`</ph> for the <ph id="ph3">`Interval`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the minute.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 59 representing the minute of the hour.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 12 representing the month of the year.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also obtain the month of the year by calling <ph id="ph1">`DatePart`</ph> and specifying <ph id="ph2">`DateInterval.Month`</ph> for the <ph id="ph3">`Interval`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the month.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 12 representing the month of the year.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the name of the specified month.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by <ph id="ph1">`MonthName`</ph> depends not only on the input arguments, but also on the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> settings specified in the Windows <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`MonthName`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>You can use the value 13 with a 13-month calendar.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>If your system is using a 12-month calendar and <ph id="ph1">`Month`</ph> is 13, <bpt id="p1">&lt;xref uid="langword_csharp_MonthName" name="MonthName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns an empty string.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that indicates if the month name is to be abbreviated.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If omitted, the default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which means the month name is not abbreviated.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the name of the specified month.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Month&lt;/code&gt;</ph> is less than 1 or greater than 13.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current date and time according to your system.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the system date, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.Today%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the system time, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current date and time according to your system.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 59 representing the second of the minute.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also obtain the second of the minute by calling <ph id="ph1">`DatePart`</ph> and specifying <ph id="ph2">`DateInterval.Second`</ph> for the <ph id="ph3">`Interval`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the second.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 0 through 59 representing the second of the minute.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current time of day according to your system.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Date`</ph> data type includes date components.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>When returning the system time, <ph id="ph1">`TimeOfDay`</ph> sets these all to 1, so the returned value represents the first day of the year 1.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the system time, <ph id="ph1">`TimeOfDay`</ph> ignores the date components.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the current system time as a <ph id="ph1">`String`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the current system date, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.Today%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current time of day according to your system.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the number of seconds elapsed since midnight.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Timer`</ph> property returns both the seconds and the milliseconds since the most recent midnight.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the number of seconds elapsed since midnight.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example demonstrates negative, zero, and positive argument values.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`TimeSerial`</ph> function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```</ph>       If either <ph id="ph2">`Minute`</ph> or <ph id="ph3">`Second`</ph> exceeds its normal range, it is applied to the next larger unit as appropriate.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`TimeSerial`</ph> reduces the total seconds modulo 86,400, which is the number of seconds in a day.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the returned time is always between 00:00:00 and 23:59:59.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Date`</ph> data type includes date components.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`TimeSerial`</ph> sets all of these to 1, so the returned value represents the first day of the year 1.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following example, the values of <ph id="ph1">`Hour`</ph> and <ph id="ph2">`Minute`</ph> result in a combined time of more than 24 hours.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```vb#   MsgBox(TimeSerial(23, 75, 0))    ' The preceding statement displays "1/2/0001 12:15:00 AM".   ```</ph>       If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the calculated time is less than negative 24 hours, an &lt;xref:System.ArgumentOutOfRangeException&gt; error occurs.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since every <ph id="ph1">`Date`</ph> value is supported by a &lt;xref:System.DateTime?displayProperty=fullName&gt; structure, its methods give you additional options in assembling a <ph id="ph2">`Date`</ph> value.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can employ one of the overloaded &lt;xref:System.DateTime.%23ctor%2A&gt; constructors to populate a <ph id="ph1">`Date`</ph> variable using the desired combination of components.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets <ph id="ph1">`newDateTime`</ph> to May 6, 1978 at one tenth of a second before 8:30 in the morning:      <ph id="ph2">```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```</ph></source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 0 through 23.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>However, values outside this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 0 through 59.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>However, values outside this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`Minute`</ph> is added to the calculated hour, so a negative value specifies minutes before that hour.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from 0 through 59.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>However, values outside this range are also accepted.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`Second`</ph> is added to the calculated minute, so a negative value specifies seconds before that minute.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>An argument is outside the range -2,147,483,648 through 2,147,483,647</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Calculated time is less than negative 24 hours.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the current time of day according to your system.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`TimeString`</ph> always returns the system time as "HH:mm:ss", which is a 24-hour format.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This format is culture-invariant, which means it does not change even if you change the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the current system date as a <ph id="ph1">`String`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.DateString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the current system date or time in the format of your locale, or in a custom format, supply the &lt;xref:Microsoft.VisualBasic.DateAndTime.Now%2A&gt; property to the &lt;xref:Microsoft.VisualBasic.Strings.Format%2A&gt; function, specifying either a predefined or user-defined date/time format.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example demonstrates this.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   MsgBox("The formatted time is " &amp; Format(Now, "hh.mm.ss.fff tt"))   ```</ph>       To access the current system time as a <ph id="ph2">`Date`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the current time of day according to your system.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Invalid format used to set the value of <bpt id="p1">&lt;xref uid="langword_csharp_TimeString" name="TimeString" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can enter valid times using a 12-hour or 24-hour clock.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`"2:24 P.M."`</ph> and <ph id="ph2">`"14:24"`</ph> are both valid <ph id="ph3">`StringTime`</ph> arguments.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`StringTime`</ph> argument includes date information, <ph id="ph2">`TimeValue`</ph> does not include it in the returned value.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if <ph id="ph1">`StringTime`</ph> includes invalid date information, for example "January 32," an &lt;xref:System.InvalidCastException&gt; error occurs.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;StringTime&lt;/code&gt;</ph> includes invalid date information.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current date according to your system.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Date`</ph> data type includes time components.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>When returning the system date, <ph id="ph1">`Today`</ph> sets all of these to 0, so the returned value represents midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the system date, <ph id="ph1">`Today`</ph> ignores the time components.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the current system date as a <ph id="ph1">`String`</ph>, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.DateString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the current system time, use the &lt;xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Returns or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the current date according to your system.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a number representing the day of the week.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by the <ph id="ph1">`Weekday`</ph> function corresponds to the values of the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`Weekday`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday (default)|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for which you want to determine the day of the week.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.Sunday" name="FirstDayOfWeek.Sunday" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing a number representing the day of the week.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;DayOfWeek&lt;/code&gt;</ph> is less than 0 or more than 7.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the name of the specified weekday.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by <ph id="ph1">`WeekdayName`</ph> depends not only on the input arguments, but also on the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> settings specified in the Windows <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`WeekdayName`</ph> uses the current calendar setting from the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; property of the &lt;xref:System.Globalization.CultureInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; values are determined by <bpt id="p1">**</bpt>Control Panel<ept id="p1">**</ept> settings.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeekValue`</ph> argument can have one of the following settings.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enumeration value|Value|Description|   |-----------------------|-----------|-----------------|   |<ph id="ph1">`FirstDayOfWeek.System`</ph>|0|First day of week specified in system settings (default)|   |<ph id="ph2">`FirstDayOfWeek.Sunday`</ph>|1|Sunday|   |<ph id="ph3">`FirstDayOfWeek.Monday`</ph>|2|Monday (complies with ISO standard 8601, section 3.17)|   |<ph id="ph4">`FirstDayOfWeek.Tuesday`</ph>|3|Tuesday|   |<ph id="ph5">`FirstDayOfWeek.Wednesday`</ph>|4|Wednesday|   |<ph id="ph6">`FirstDayOfWeek.Thursday`</ph>|5|Thursday|   |<ph id="ph7">`FirstDayOfWeek.Friday`</ph>|6|Friday|   |<ph id="ph8">`FirstDayOfWeek.Saturday`</ph>|7|Saturday|</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The identities of the first and last days depend on the setting of <ph id="ph1">`FirstDayOfWeekValue`</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that indicates if the weekday name is to be abbreviated.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>If omitted, the default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which means the weekday name is not abbreviated.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek" name="FirstDayOfWeek" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that specifies the first day of the week.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>If not specified, <bpt id="p1">&lt;xref uid="langword_csharp_FirstDayOfWeek.System" name="FirstDayOfWeek.System" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the name of the specified weekday.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Weekday&lt;/code&gt;</ph> is less than 1 or greater than 7, or <ph id="ph2">&lt;code&gt;FirstDayOfWeekValue&lt;/code&gt;</ph> is less than 0 or greater than 7.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 9999 representing the year.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also obtain the year by calling <ph id="ph1">`DatePart`</ph> and specifying <ph id="ph2">`DateInterval.Year`</ph> for the <ph id="ph3">`Interval`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from which you want to extract the year.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value from 1 through 9999 representing the year.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>