<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8587b867412130462138fc39d7ea04e5f0266c36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.Extensions.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">381e8fffc72332b0ca88fa33621c8f84acd885ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa9d1ac2eea6242fed2c6897c26667c9ba560a1b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This class contains the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)]</ph> extension methods for XSD validation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class also contains methods to get the post-schema-validation infoset (PSVI) of a validated XML node.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you validate an &lt;xref:System.Xml.Linq.XDocument&gt;, &lt;xref:System.Xml.Linq.XElement&gt;, or &lt;xref:System.Xml.Linq.XAttribute&gt;, you can also optionally populate the XML tree with the post-schema-validation infoset.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PSVI information is added as an annotation of type &lt;xref:System.Xml.Schema.XmlSchemaInfo?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated attribute.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt; returned by this method to determine certain characteristics of a validated attribute.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, you can determine if the attribute came from a default attribute value in an XSD.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You use the &lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute%2A&gt; property to get a partial validation type (&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use it to revalidate an attribute without validating an entire document.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For an example of this property, see &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Linq.XAttribute&gt; that has been previously validated.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the post-schema-validation infoset for an &lt;xref:System.Xml.Linq.XAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated element.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt; returned by this method to determine certain characteristics of a validated element.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you can determine the dynamic schema type of the element.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You use the &lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaElement%2A&gt; property to get a partial validation type (&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use it to revalidate a sub-tree with an element at its root without validating an entire document.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For an example of this property, see &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Linq.XElement&gt; that has been previously validated.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the post-schema-validation infoset (PSVI) for an &lt;xref:System.Xml.Linq.XElement&gt;.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This method validates that an &lt;xref:System.Xml.Linq.XDocument&gt; conforms to an XSD in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This extension method validates that the &lt;xref:System.Xml.Linq.XDocument&gt; conforms to the schema content model in &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XDocument&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method validates that an &lt;xref:System.Xml.Linq.XAttribute&gt; conforms to a specified <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use this method to validate that an &lt;xref:System.Xml.Linq.XAttribute&gt; conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You typically use this method when you have modified an attribute, and you want to make sure that it still conforms to its schema.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You could validate the entire document, but it takes less processing time to validate just the attribute.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, this method raises an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Validation warnings will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To validate an attribute, you use an instance of &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can obtain this instance in various ways.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An easy way is as follows:      1.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Validate that a document conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add the post-schema-validation infoset (PSVI) by calling the &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt; extension method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; extension method to retrieve an object that implements &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>From the retrieved object, you can get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XElement&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XAttribute&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>After you have an instance of an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;, you can use this method to validate an attribute.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XAttribute&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the sub-tree to validate.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Validates that an &lt;xref:System.Xml.Linq.XDocument&gt; conforms to an XSD in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This extension method validates that the &lt;xref:System.Xml.Linq.XDocument&gt; conforms to the schema content model in &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, this method populates the XML tree with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There are two steps to populating the XML tree with the PSVI.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>1.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>First, an annotation is added to all nodes in the tree to enable you to call &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=fullName&gt; or &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=fullName&gt; on an element or attribute in the tree.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Second, default elements and attributes defined in the XSD are added to the XML tree.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; methods, you can determine if a specific element or attribute was added from the XSD as a default element or attribute.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XDocument&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; indicating whether to populate the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This method validates that an &lt;xref:System.Xml.Linq.XElement&gt; sub-tree conforms to a specified <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can use this method to validate that a sub-tree (with an &lt;xref:System.Xml.Linq.XElement&gt; at its root) conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You typically use this method when you have modified a sub-tree, and you want to make sure that it still conforms to its schema.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You could validate the entire document, but it takes less processing time to validate a just a sub-tree.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Validation warnings will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To validate a sub-tree, you use an instance of &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can obtain this instance in various ways.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An easy way is as follows:      1.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Validate that a document conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Add the post-schema-validation infoset (PSVI) by calling the &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt; extension method.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; extension method to retrieve an object that implements &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>From the retrieved object, you can get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XElement&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XAttribute&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>After you have an instance of an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;, you can use this method to validate an sub-tree.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XElement&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the sub-tree to validate.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Validates that an &lt;xref:System.Xml.Linq.XAttribute&gt; conforms to a specified <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can use this method to validate that an &lt;xref:System.Xml.Linq.XAttribute&gt; conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You typically use this method when you have modified an attribute, and you want to make sure that it still conforms to its schema.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You could validate the entire document, but it takes less processing time to validate just the attribute.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, this method populates the attribute with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>After you have populated the XML tree with the PSVI, you can call &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=fullName&gt; on the validated attribute.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This is useful if you are writing code that relies on data returned by &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Validation warnings will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To validate an attribute, you use an instance of &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can obtain this instance in various ways.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An easy way is as follows:      1.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Validate that a document conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add the post-schema-validation infoset (PSVI) by calling the &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt; extension method.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; extension method to retrieve an object that implements &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>From the retrieved object, you can get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XElement&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XAttribute&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After you have an instance of an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;, you can use this method to validate an attribute.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XAttribute&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the sub-tree to validate.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; indicating whether to populate the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Validates that an &lt;xref:System.Xml.Linq.XElement&gt; sub-tree conforms to a specified <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can use this method to validate that a sub-tree (with an &lt;xref:System.Xml.Linq.XElement&gt; at the root of the sub-tree) conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You typically use this method when you have modified a sub-tree, and you want to make sure that it still conforms to its schema.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>You could validate the entire document, but it takes less processing time to validate a just a sub-tree.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, then this method populates the XML tree with the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>There are two aspects of populating the XML tree with the PSVI.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>First, an annotation is added to all nodes in the tree such that you can now call &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; on an element or attribute in the tree.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Second, default elements and attributes defined in the XSD are added to the XML tree.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; methods, you can determine if a specific element or attribute was added from the XSD as a default element or attribute.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Validation warnings will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To validate a sub-tree, you use an instance of &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You can obtain this instance in various ways.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An easy way is as follows:      1.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Validate that a document conforms to a schema.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Add the post-schema-validation infoset (PSVI) by calling the &lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt; extension method.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt; extension method to retrieve an object that implements &lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>From the retrieved object, you can get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XElement&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>-   If you get an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; for an &lt;xref:System.Xml.Linq.XAttribute&gt;, the type will be &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>After you have an instance of an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt;, you can use this method to validate a sub-tree..</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XElement&gt; to validate.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the sub-tree to validate.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate against.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an event that occurs when the reader encounters validation errors.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, throws an exception upon validation errors.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; indicating whether to populate the post-schema-validation infoset (PSVI).</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>