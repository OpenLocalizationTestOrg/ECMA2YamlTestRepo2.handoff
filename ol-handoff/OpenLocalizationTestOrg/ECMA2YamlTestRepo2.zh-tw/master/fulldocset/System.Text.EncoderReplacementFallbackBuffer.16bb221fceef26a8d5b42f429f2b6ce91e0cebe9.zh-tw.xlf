<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd13a9c552462dafadaae75c14f519105b879e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.EncoderReplacementFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04052b79a58eafff77cae7bfe940aae270e5fdcc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f78b9f9cac8ea96d0d6de0470a26f60989f0ed33</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a substitute input string that is used when the original input character cannot be encoded.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It might not be possible to convert a character to an equivalent encoded byte sequence if no suitable encoding exists.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A common reason for an encoding to fail is if the conversion operation uses a code page that cannot represent the character to encode.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If the input character cannot be converted to an output byte sequence, a &lt;xref:System.Text.EncoderReplacementFallback?displayProperty=fullName&gt; object provides a replacement string that is substituted for the original input character.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The replacement string initializes the value of the &lt;xref:System.Text.EncoderReplacementFallback&gt; object, and the value of the &lt;xref:System.Text.EncoderReplacementFallback&gt; object initializes the value of an EncoderReplacementFallbackBuffer object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The value of an EncoderReplacementFallbackBuffer object is called the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The conversion operation encodes the replacement fallback buffer instead of the original input character, then continues to process the remainder of the input.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.EncoderReplacementFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the value of a &lt;xref:System.Text.EncoderReplacementFallback&gt; object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Text.EncoderReplacementFallback&gt; object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prepares the replacement fallback buffer to use the current replacement string.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown character in their input.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the return value of Fallback is <ph id="ph1">`true`</ph>, the calling method can invoke the &lt;xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A&gt; method to obtain each character in the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An input character.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This parameter is ignored in this operation unless an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The index position of the character in the input buffer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This parameter is ignored in this operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the replacement string is not empty; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the replacement string is empty.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This method is called again before the &lt;xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*&gt; method has read all the characters in the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates whether a replacement string can be used when an input surrogate pair cannot be encoded, or whether the surrogate pair can be ignored.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Parameters specify the surrogate pair and the index position of the pair in the input.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown character in their input.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the return value of Fallback is <ph id="ph1">`true`</ph>, the calling method can invoke the &lt;xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A&gt; method to obtain each character in the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The high surrogate of the input pair.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The low surrogate of the input pair.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The index position of the surrogate pair in the input buffer.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the replacement string is not empty; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the replacement string is empty.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method is called again before the &lt;xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*&gt; method has read all the replacement string characters.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> is less than U+D800 or greater than U+D8FF.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-or-       The value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownLow</ph><ept id="p1">&lt;/code&gt;</ept> is less than U+DC00 or greater than U+DFFF.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call &lt;xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A&gt; if they encounter an unknown surrogate pair or character in their input.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the return value of &lt;xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A&gt; is <ph id="ph1">`true`</ph>, the calling method can invoke GetNextChar to obtain each character in the replacement fallback buffer.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The next Unicode character in the replacement fallback buffer that the application can encode.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*&gt; method to access the character position in the replacement fallback buffer prior to the current character position.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the MovePrevious operation was successful; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the replacement fallback buffer that remain to be processed.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A&gt; method returns <ph id="ph1">`true`</ph> if the Remaining property is nonzero.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of characters in the replacement fallback buffer that have not yet been processed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes all internal state information and data in this instance of <bpt id="p1">&lt;xref href="System.Text.EncoderReplacementFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Reset method discards any persisted state information and data that govern emitting a replacement string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Unpredictable results occur if the encoding operation continues after the Reset method is invoked.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>