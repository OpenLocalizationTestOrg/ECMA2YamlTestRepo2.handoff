<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a38df838726c1803f30d1526e370c8e3d9f664b5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Principal.WindowsIdentity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe6ef09f2e9c1ba452562063c638e2fe10bc1e0e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06cc171de3de0aae0c122d51e479270b4a9706ed</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Windows user.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt; method to create a WindowsIdentity object that represents the current user.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;|<ph id="ph1">`Negotiate`</ph>|   |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph2">`Normal`</ph>|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph3">`false`</ph>|      &gt; <ph id="ph4">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph5">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph6">`LogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object from which to construct the new instance of <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified User Principal Name (UPN).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A UPN has the format <bpt id="p1">*</bpt>username<ept id="p1">*</ept><ph id="ph1">@</ph><bpt id="p2">*</bpt>domainname<ept id="p2">*</ept>.com, in other words, an email address.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn that token is used to identify the user.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown for earlier domain types.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The UPN for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token and the specified authentication type.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph1">`Normal`</ph>|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph2">`false`</ph>|       The value of the <ph id="ph3">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security system does not use this value; it is for informational use only.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph2">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph3">`LogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by information in a <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The object containing the account information for the user.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An object that indicates the stream characteristics.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be serialized across processes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security system does not use this value; it is for informational use only.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn that token is used to identify the user.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown for earlier domain types.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The UPN for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial Value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph1">`false`</ph>|       The value of the <ph id="ph2">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security system does not use this value; it is for informational use only.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph2">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph3">`LogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security system does not use this value; it is for informational use only.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the user is authenticated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets this <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is informational; it is not used by the security system.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows Vista and later versions of the Windows operating system, the default value for this property is <ph id="ph1">`Negotiate`</ph>, which chooses the best security support provider (SSP) based on customer-configured security policy.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default property value for earlier versions of the Windows operating system is <ph id="ph1">`Kerberos`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of authentication used to identify the user.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets all claims for the user represented by this Windows identity.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A collection of claims for this <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Creates a new  object that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Identifies the name of the default <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> issuer.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A collection of claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.Security.Principal.WindowsIdentity&gt; in an unusable state.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Security.Principal.WindowsIdentity&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Principal.WindowsIdentity&gt; was occupying.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Principal.WindowsIdentity&gt; references.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that you can use as a sentinel value in your code to represent an anonymous user.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The property value does not represent the built-in anonymous identity used by the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns an empty &lt;xref:System.Security.Principal.WindowsIdentity&gt; object that enables you to treat operations as anonymous.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, note that the identity returned by this property is not static; each call to GetAnonymous returns a different anonymous identity.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; property to detect the return value from GetAnonymous.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; detects both the Windows anonymous identity and the anonymous identity returned by this method.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the latter identity, cache the GetAnonymous return value instead of relying on the &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An object that represents an anonymous user.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the current Windows user.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An object that represents the current user.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the Windows identity for either the thread or the process, depending on the value of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">ifImpersonating</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`true`</ph> and the thread is not impersonating, the returned &lt;xref:System.Security.Principal.WindowsIdentity&gt; object has no value.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is impersonating, the &lt;xref:System.Security.Principal.WindowsIdentity&gt; for the thread is returned.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is not impersonating, the &lt;xref:System.Security.Principal.WindowsIdentity&gt; for the process is returned.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return the <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> only if the thread is currently impersonating; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to return the <bpt id="p4">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> of the thread if it is impersonating or the <bpt id="p5">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> of the process if the thread is not currently impersonating.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An object that represents a Windows user.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the current Windows user, using the specified desired token access level.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`desiredAccess`</ph> parameter specifies an access mask that identifies the requested types of access to the access token.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An object that represents the current user.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets the groups the current Windows user belongs to.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>An object representing the groups the current Windows user belongs to.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An anonymous identity attempted to perform an impersonation.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A Win32 error occurred.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the specified user token.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Calling the Impersonate method with a <ph id="ph2">`userToken`</ph> value of &lt;xref:System.IntPtr&gt; is equivalent to calling the Win32 <ph id="ph3">`RevertToSelf`</ph> function.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If another user is currently being impersonated, control reverts to the original user.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about calls to unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <bpt id="p1">&lt;xref uid="langword_csharp_LogonUser" name="LogonUser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Gets the impersonation level for the user.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Describes the impersonation level to be used to connect to WMI.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the impersonation level.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsAnonymous property detects both the Windows anonymous identity and the anonymous identity that is returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is an anonymous account; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user has been authenticated by Windows.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user was authenticated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user account is identified as a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> account by the system.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is a <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> account; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user account is identified as a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> account by the system.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is a <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> account; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets the user's Windows logon name.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The logon name is in the form DOMAIN\USERNAME.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The Windows logon name of the user on whose behalf the code is being run.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets the security identifier (SID) for the token owner.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned SID identifies the default owner SID that will be applied to newly created objects.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An object for the token owner.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Runs the specified action as the impersonated Windows identity.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Instead of using an impersonated method call and running your function in <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsImpersonationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you can use RunImpersonated and provide your function directly as a parameter.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The SafeAccessTokenHandle of the impersonated Windows identity.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The System.Action to run.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the logical context information needed to recreate an instance of this execution context.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; with the logical call context information.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the execution context object is reconstituted from the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; transmitted over the stream.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An object containing the information required to serialize the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>An object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets the Windows account token for the user.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not explicitly release the account token that is returned by the Token property.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The token is released by the &lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt; method, which you can call in code.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt; is also automatically called by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The account token that is returned by the Token property is a duplicate of the Windows token that is used to create the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object and is automatically released by the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is different from the account token (the <ph id="ph1">`userToken`</ph> parameter for the constructor), which is used to create the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`userToken`</ph> is a Windows account token that is created by a call to <ph id="ph2">`LogonUser`</ph> and must be closed to avoid a memory leak.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The handle of the access token associated with the current execution thread.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Gets the security identifier (SID) for the user.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Security.Principal.WindowsIdentity&gt; object returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method is not the same as the Windows anonymous user.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets <ph id="ph1">`null`</ph> for an anonymous user represented by the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method; it does not get the SID representing an anonymous Windows user.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>An object for the user.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Gets claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A collection of claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>