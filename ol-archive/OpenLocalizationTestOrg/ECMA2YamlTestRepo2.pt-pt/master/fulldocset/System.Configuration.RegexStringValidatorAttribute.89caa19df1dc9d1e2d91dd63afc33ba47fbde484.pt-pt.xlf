<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6760da53021a7ad342652451442f451445c223fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.RegexStringValidatorAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcf46c9a9f3a80dffe519798b3674f6794d9ef73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d91dc2b33724f8ad8c530fee3da2a51d7cd6278f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the &lt;xref:System.Configuration.RegexStringValidator&gt; and pass to it the value of the decorating parameters.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may apply RegexStringValidatorAttribute objects to property types only.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Configuration.RegexStringValidatorAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`regex`</ph> parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The string to use for regular expression validation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the string used to perform regular-expression validation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets an instance of the <bpt id="p1">&lt;xref href="System.Configuration.RegexStringValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the ValidatorInstance property to perform string validation by calling its &lt;xref:System.Configuration.StringValidator.Validate%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationValidatorBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> validator instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>