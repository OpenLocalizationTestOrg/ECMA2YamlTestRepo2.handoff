<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65be87275760fc46f65923cf2adcb45c7e434a37</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.Control.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ca37253b11aa7a2ffa695db345e378103faf93e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cdf82290cdd626c0aa1a78c87d075b8272a2ff1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the properties, methods, and events that are shared by all ASP.NET server controls.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the primary class that you derive from when you develop custom ASP.NET server controls.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control does not have any user interface (UI) specific features.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are authoring a control that does not have a UI, or combines other controls that render their own UI, derive from Control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are authoring a control that does have a UI, derive from &lt;xref:System.Web.UI.WebControls.WebControl&gt; or any control in the &lt;xref:System.Web.UI.WebControls&gt; namespace that provides an appropriate starting point for your custom control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Control class is the base class for all ASP.NET server controls, including custom controls, user controls, and pages.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET pages are instances of the &lt;xref:System.Web.UI.Page&gt; class, which inherits from the Control class, and that handle requests for files that have an .aspx extension.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Control class can directly or indirectly be used as part of the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For general information on these topics, see <bpt id="p1">[</bpt>Overview of Web Application Security Threats<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p2">[</bpt>NIB: Security Policy Best Practices<ept id="p2">](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)</ept>, and <bpt id="p3">[</bpt>Key Security Concepts<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more specific information, see <bpt id="p1">[</bpt>Securing Standard Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p2">[</bpt>How to: Display Safe Error Messages<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p3">[</bpt>How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p4">[</bpt>Introduction to the Validation Controls<ept id="p4">](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the browser-specific adapter for the control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET Web pages are usable across a wide range of devices and browsers that can request information from the Web.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Adapter property returns the &lt;xref:System.Web.UI.Adapters.ControlAdapter&gt; object that renders the control on the requesting device or browser's screen.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about adapters, see <bpt id="p1">[</bpt>Architectural Overview of Adaptive Control Behavior<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the target browser does not require an adapter, returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Called after a child control is added to the &lt;xref:System.Web.UI.Control.Controls*&gt; collection of the <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddedControl method is called immediately after a control is added to the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has been added.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The index of the control in the &lt;xref:System.Web.UI.Control.Controls*&gt; collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Substitution"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <bpt id="p1">&lt;xref href="System.Web.UI.ControlCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you override it, this method automatically adds &lt;xref:System.Web.UI.LiteralControl&gt; objects to the server control's &lt;xref:System.Web.UI.ControlCollection&gt; object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection is accessible through &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the parsed element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Applies the style properties defined in the page style sheet to the control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplyStyleSheetSkin method sets style properties on the control based on skin properties defined in a theme directory.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The skin applied is either the default skin for the control or the skin specified in the &lt;xref:System.Web.UI.Control.SkinID%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplyStyleSheetSkin method is called by ASP.NET for declarative controls placed on a page.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the ApplyStyleSheetSkin method on any controls created programmatically at run time for style sheet skins to apply to the control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Theme skins are applied automatically.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the difference between themes and cascading style sheets, see <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The style sheet is already applied.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the application-relative virtual directory of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Web.UI.UserControl"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object that contains this control.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AppRelativeTemplateSourceDirectory property contains the application-relative path to the page or user control that contains the current control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the Web page resides at http://www.contoso.com/application/subdirectory, the AppRelativeTemplateSourceDirectory property returns "~/subdirectory".</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the virtual path ("application/subdirectory"), use the &lt;xref:System.Web.UI.Control.TemplateSourceDirectory%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The application-relative virtual directory of the page or user control that contains this control.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Begins design-time tracing of rendering data.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The object that writes trace data.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The trace object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the control that contains this control's data binding.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindingContainer property contains a reference to the &lt;xref:System.Web.UI.Control&gt; object that contains the data-binding information for the current control.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindingContainer property is the same as the &lt;xref:System.Web.UI.Control.NamingContainer%2A&gt; property, except when the control is part of a template.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the BindingContainer property is set to the &lt;xref:System.Web.UI.Control&gt; that defines the template.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains this control's data binding.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gathers information about the server control and delivers it to the &lt;xref:System.Web.UI.Page.Trace*&gt; property to be displayed when tracing is enabled for the page.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gathers the information necessary about a page's UI hierarchy and passes it to the page's <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;trace<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](../Topic/%3Ctrace%3E%20Element.md)</ept> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you enable tracing, either for a page or for your application, this information is displayed in the <ph id="ph1">`Control Tree`</ph> section of the trace output.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace output for a page is appended to the end of the page; while trace output for an application can be viewed from the trace viewer (trace.axd file) which is stored in the application's root directory.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about tracing, see <bpt id="p1">[</bpt>ASP.NET Tracing Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The identifier of the control's parent.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A Boolean that indicates whether the view-state size is calculated.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the server control's child controls have been created.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if child controls have been created; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Sets the cached &lt;xref:System.Web.UI.Control.ClientID*&gt; value to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Deletes the control-state information for the server control's child controls.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClearChildControlState method is used when child control-state information written to the parent control's control state is overridden as new child controls are created, such as when data-binding child controls in a templated data-bound server control.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the ClearChildControlState method to empty child controls before calling the &lt;xref:System.Web.UI.Control.SaveControlState%2A&gt; method reduces the size of the control-state information that must be stored or transmitted.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>When recreating child controls of a &lt;xref:System.Web.UI.Control&gt; object, use the ClearChildControlState method to clear child control state so that it does not get applied to the new controls inadvertently.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear both the child control state and view state, use the &lt;xref:System.Web.UI.Control.ClearChildState%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Deletes the view-state and control-state information for all the server control's child controls.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClearChildState method clears all view-state and control-state information for child controls.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling both the &lt;xref:System.Web.UI.Control.ClearChildViewState%2A&gt; method and the &lt;xref:System.Web.UI.Control.ClearChildControlState%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When recreating child controls of a &lt;xref:System.Web.UI.Control&gt; object, use the ClearChildState method to clear child state so that it does not get applied to the new controls inadvertently.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Deletes the view-state information for all the server control's child controls.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is commonly used when you override the &lt;xref:System.Web.UI.Control.DataBind%2A&gt; method when developing templated data-bound server controls.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not call this method, child control view–state information can be written to a parent server control, only to be overridden when the data is bound.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>When recreating child controls of a &lt;xref:System.Web.UI.Control&gt;, use the ClearChildViewState method to clear child view state so that it does not get applied to the new controls inadvertently.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using this method, see <bpt id="p1">[</bpt>How to: Create Templated ASP.NET User Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Web.UI.Control.ClientIDMode*&gt; property of the current control instance and of any child controls to <bpt id="p1">&lt;xref href="System.Web.UI.ClientIDMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the control ID for HTML markup that is generated by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a Web server control is rendered as an HTML element, the <ph id="ph1">`id`</ph> attribute of the HTML element is set to the value of the ClientID property.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClientID value is often used to access the HTML element in client script by using the <ph id="ph1">`document.getElementById`</ph> method.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ID is also often used in CSS rules to specify elements to style.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following CSS style rule selects all <ph id="ph1">`span`</ph> elements that have the <ph id="ph2">`id`</ph> attribute value of <ph id="ph3">`ProductIDLabel`</ph> and sets their <ph id="ph4">`background-color`</ph> attribute to <ph id="ph5">`white`</ph>:      <ph id="ph6">```   span#ProductIDLabel { background-color: white; }   ```</ph>       ASP.NET provides multiple algorithms for how to generate the ClientID property value.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>You select which algorithm to use for a control by setting its &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The algorithms are identified by the &lt;xref:System.Web.UI.ClientIDMode&gt; enumeration values that are listed in the following table.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Value|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The ClientID value is generated by concatenating the &lt;xref:System.Web.UI.Control.ID%2A&gt; values of each parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control's &lt;xref:System.Web.UI.Control.ID%2A&gt; value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each segment is separated by an underscore character (<bpt id="p1">_</bpt>). This algorithm was used in versions of ASP.NET earlier than ASP.NET 4.|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The ClientID value is set to the value of the &lt;xref:System.Web.UI.Control.ID%2A&gt; property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|This algorithm is used for controls that are in data-bound controls. The ClientID value is generated by concatenating the ClientID value of the parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is added at the end. For the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, multiple data fields can be specified. If the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is blank, a sequential number is added at the end instead of a data-field value. Each segment is separated by an underscore character (<ept id="p1">_</ept>).|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The control inherits the &lt;xref:System.Web.UI.ClientIDMode&gt; setting of its &lt;xref:System.Web.UI.Control.NamingContainer%2A&gt; control.|       The default value of &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; for a page is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; for a control is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the default for controls is &lt;xref:System.Web.UI.ClientIDMode&gt;, the default generation mode is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>(However, if you use Visual Studio to convert a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the site default to &lt;xref:System.Web.UI.ClientIDMode&gt; in the Web.config file.)       For more information, see <bpt id="p1">[</bpt>ASP.NET Web Server Control Identification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The control ID for HTML markup that is generated by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the algorithm that is used to generate the value of the &lt;xref:System.Web.UI.Control.ClientID*&gt; property.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET provides multiple algorithms for how to generate the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; property value.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>You select which algorithm to use for a control by setting its ClientIDMode property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The algorithms are identified by the &lt;xref:System.Web.UI.ClientIDMode&gt; enumeration values that are listed in the following table.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Value|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by concatenating the &lt;xref:System.Web.UI.Control.ID%2A&gt; values of each parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control's &lt;xref:System.Web.UI.Control.ID%2A&gt; value.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each segment is separated by an underscore character (<bpt id="p1">_</bpt>). This algorithm was used in versions of ASP.NET earlier than ASP.NET 4.|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is set to the value of the &lt;xref:System.Web.UI.Control.ID%2A&gt; property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|This algorithm is used for controls that are in data-bound controls. The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by concatenating the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value of the parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is added at the end. For the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, multiple data fields can be specified. If the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is blank, a sequential number is added at the end instead of a data-field value. This number begins at zero and is incremented by 1 for each row. Each segment is separated by an underscore character (<ept id="p1">_</ept>).|   |&lt;xref:System.Web.UI.ClientIDMode&gt;|The control inherits the &lt;xref:System.Web.UI.ClientIDMode&gt; setting of its &lt;xref:System.Web.UI.Control.NamingContainer%2A&gt; control.|       The default value of ClientIDMode for a page is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of ClientIDMode for a control is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the default for controls is &lt;xref:System.Web.UI.ClientIDMode&gt;, the default generation mode is &lt;xref:System.Web.UI.ClientIDMode&gt;.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>(However, if you use Visual Studio to convert a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the site default to &lt;xref:System.Web.UI.ClientIDMode&gt; in the Web.config file.)       For more information, see <bpt id="p1">[</bpt>ASP.NET Web Server Control Identification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A value that indicates how the &lt;xref:System.Web.UI.Control.ClientID*&gt; property is generated.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.UI.ClientIDMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets a character value representing the separator character used in the &lt;xref:System.Web.UI.Control.ClientID*&gt; property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by concatenating the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control and the &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; value of its parent control.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each part of the generated &lt;xref:System.Web.UI.Control.ID%2A&gt; property is separated by the ClientIDSeparator property value.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value always returns an underscore (_).</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Always returns the underscore character (_).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the server control for the current Web request.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gives you access to the &lt;xref:System.Web.HttpContext&gt; object for the current Web request.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object provides properties that access the &lt;xref:System.Web.HttpContext.Application%2A&gt;, &lt;xref:System.Web.HttpContext.Session%2A&gt;, &lt;xref:System.Web.HttpContext.Request%2A&gt;, &lt;xref:System.Web.HttpContext.Response%2A&gt; and other objects that contain information about the current HTTP request.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also provides methods that allow you to obtain configuration information and set or clear errors for the request.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the current request.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Web.UI.ControlCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the child controls for a specified server control in the UI hierarchy.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>On an ASP.NET page, when controls are added declaratively between the opening and closing tags of a server control, ASP.NET automatically adds the controls to the containing server control's &lt;xref:System.Web.UI.ControlCollection&gt;.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any HTML tags or text strings that are not processed on the server are treated as &lt;xref:System.Web.UI.LiteralControl&gt; objects.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are added to the collection like other server controls.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Controls property allows you programmatic access to the instance of the &lt;xref:System.Web.UI.ControlCollection&gt; class for any server control.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add controls to the collection, remove controls from the collection, or iterate through the server controls in the collection.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The collection of child controls for the specified server control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you develop a composite or templated server control, you must override this method.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that override the CreateChildControls method should implement the &lt;xref:System.Web.UI.INamingContainer&gt; interface to avoid naming conflicts.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Web Server Controls Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Developing Custom ASP.NET Server Controls<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Web.UI.ControlCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to hold the child controls (both literal and server) of the server control.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method in a custom server control if you have created a collection object that is derived from the &lt;xref:System.Web.UI.ControlCollection&gt; class.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then instantiate that collection class in the override of this method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ControlCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to contain the current server control's child server controls.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Binds a data source to the invoked server control and all its child controls.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to bind data from a source to a server control.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is commonly used after retrieving a dataset through a database query.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most controls perform data binding automatically, which means that you typically do not need to call this method explicitly.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is commonly overridden when you create a custom templated data-bound control.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Templated ASP.NET User Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Developing Custom Data-Bound Web Server Controls<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>When called on a server control, this method resolves all data-binding expressions in the server control and in any of its child controls.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Binds a data source to the invoked server control and all its child controls with an option to raise the <bpt id="p1">&lt;xref href="System.Web.UI.Control.DataBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the DataBind method in a scenario when your custom control overrides the &lt;xref:System.Web.UI.Control.DataBind%2A&gt; method and implements the &lt;xref:System.Web.UI.IDataItemContainer&gt; interface.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the custom control calls the DataBind method with <ph id="ph1">`raiseOnDataBinding`</ph> set to <ph id="ph2">`false`</ph> to ensure that the base class's &lt;xref:System.Web.UI.Control.DataBind%2A&gt; method gets called.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Control.DataBind?displayProperty=fullName&gt; method invokes the DataBind method with <ph id="ph1">`raiseOnDataBinding`</ph> set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Calling the DataBind method with <ph id="ph2">`raiseOnDataBinding`</ph> set to <ph id="ph3">`false`</ph> causes any child controls to be data bound with the &lt;xref:System.Web.UI.Control.DataBind?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.Control.DataBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event is raised; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Binds a data source to the server control's child controls.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the DataBindChildren method to bind a data source to the child controls of a server control.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When called on a server control, this method does not bind data to the control.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>To bind a server control and all its child controls, call the &lt;xref:System.Web.UI.Control.DataBind%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Occurs when the server control binds to a data source.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event notifies the server control to perform any data-binding logic that has been written for it.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets a reference to the naming container if the naming container implements <bpt id="p1">&lt;xref href="System.Web.UI.IDataItemContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The naming container.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In a hierarchy of naming containers that implement <bpt id="p1">&lt;xref href="System.Web.UI.IDataItemContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this property returns the naming container at the top of the hierarchy, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the current <bpt id="p3">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object is not in a naming container that implements <bpt id="p4">&lt;xref href="System.Web.UI.IDataItemContainer"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets a reference to the naming container if the naming container implements <bpt id="p1">&lt;xref href="System.Web.UI.IDataKeysControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The naming container.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In a hierarchy of naming containers that implement <bpt id="p1">&lt;xref href="System.Web.UI.IDataKeysControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the property returns the naming container at the top of the hierarchy, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the current <bpt id="p3">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object is not in a naming container that implements <bpt id="p4">&lt;xref href="System.Web.UI.IDataKeysControl"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a control is being used on a design surface.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignMode property returns <ph id="ph1">`true`</ph> to indicate that the control is being used in the context of a designer.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your custom controls can use this property when design-time behavior is different than run-time behavior.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control is being used in a designer; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Enables a server control to perform final clean up before it is released from memory.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.Web.UI.Control&gt;.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.Web.UI.Control&gt; in an unusable state.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, you must release all references to the control so the memory it was occupying can be reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources that require significant processor time, such as database connections, should be released with this event.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether themes apply to this control.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnableTheming property indicates whether themes are enabled for a specified control.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the EnableTheming property is <ph id="ph1">`true`</ph>, the application's theme directory is searched for control skins to apply.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no skin for the particular control exists in the theme directory, skins are not applied.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the EnableTheming property is <ph id="ph1">`false`</ph>, the theme directory is not searched and the content of the &lt;xref:System.Web.UI.Control.SkinID%2A&gt; property is not used.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Themes can be enabled at the page, container, or control level.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control can override the EnableTheming value set by its parent control, or by the containing page.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use themes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>View state enables a server control to maintain its state across HTTP requests.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>View state for a control is enabled if all of the following conditions are met:      -   The EnableViewState property for the page is set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The EnableViewState property for the control is set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Web.UI.Control.ViewStateMode%2A&gt; property for the control is set to &lt;xref:System.Web.UI.ViewStateMode&gt; or inherits the &lt;xref:System.Web.UI.ViewStateMode&gt; setting.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.UI.Control.ViewStateMode%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>A server control's view state is the accumulation of all its property values.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to preserve these values across HTTP requests, ASP.NET uses an instance of the &lt;xref:System.Web.UI.StateBag&gt; class to store the property values.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values are then passed as a variable to a hidden field when subsequent requests are processed.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about view state, see <bpt id="p1">[</bpt>ASP.NET View State Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are times when it is appropriate to disable view state, particularly to improve application performance.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you are loading a database request into a server control, set this property to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not, processor time will be wasted loading view state into the server control that will only be overridden by the database query.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If EnableViewState is <ph id="ph1">`false`</ph>, you can use the control state to persist property information that is specific to a control and cannot be turned off like the view state property.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the difference between control state and view state, see <bpt id="p1">[</bpt>Control State vs. View State Example<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to enable or disable view state declaratively for an ASP.NET page, see .</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the server control maintains its view state; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Ends design-time tracing of rendering data.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The object that writes trace data.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The trace object.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Determines whether the server control contains child controls.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If it does not, it creates child controls.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method first checks the current value of the &lt;xref:System.Web.UI.Control.ChildControlsCreated%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this value is <ph id="ph1">`false`</ph>, the &lt;xref:System.Web.UI.Control.CreateChildControls%2A&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnsureChildControls method is typically used in composite controls, which are controls that use child controls for some or all their functionality.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnsureChildControls method is called in order to make sure that child controls have been created and are ready to process input, to perform data binding, or to perform other tasks.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.GridView&gt; control is an example of a composite control.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>It creates child controls such as &lt;xref:System.Web.UI.WebControls.Table&gt;, &lt;xref:System.Web.UI.WebControls.TableRow&gt;, &lt;xref:System.Web.UI.WebControls.TableCell&gt;, &lt;xref:System.Web.UI.WebControls.Label&gt;, and &lt;xref:System.Web.UI.WebControls.TextBox&gt; controls, which are used to render the HTML table that the &lt;xref:System.Web.UI.WebControls.GridView&gt; generates.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, custom server control developers do not have to override this method.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do override this method, use it in a way similar to the default behavior.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Creates an identifier for controls that do not have an identifier assigned.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnsureID method generates an identifier for controls that are contained in another control.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifiers are generated only for controls that do not have a value assigned to the &lt;xref:System.Web.UI.Control.ID%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets a list of event handler delegates for the control.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is of type &lt;xref:System.ComponentModel.EventHandlerList&gt;, which uses a linear search algorithm to find entries in the list of delegates.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>A linear search algorithm is inefficient when working with a large number of entries.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, when you have a large list, finding entries with this property will be slow.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The list of event handler delegates.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Searches the current naming container for a server control with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use FindControl to access a control from a function in a code-behind page, to access a control that is inside another container, or in other circumstances where the target control is not directly accessible to the caller.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will find a control only if the control is directly contained by the specified container; that is, the method does not search throughout a hierarchy of controls within controls.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to find a control when you do not know its immediate container, see <bpt id="p1">[</bpt>How to: Access Server Controls by ID<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The identifier for the control to be found.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The specified control, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified control does not exist.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Searches the current naming container for a server control with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">id</ph><ept id="p1">&lt;/code&gt;</ept> and an integer, specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">pathOffset</ph><ept id="p2">&lt;/code&gt;</ept> parameter, which aids in the search.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>You should not override this version of the &lt;xref:System.Web.UI.Control.FindControl*&gt; method.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The identifier for the control to be found.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The number of controls up the page control hierarchy needed to reach a naming container.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The specified control, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified control does not exist.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Sets input focus to a control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Focus method to set the initial focus of the Web page to the control.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The page will be opened in the browser with the control selected.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Focus method causes a call to the page focus script to be emitted on the rendered page.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the page does not contain a control with an HTML <ph id="ph1">`ID`</ph> attribute that matches the control that the Focus method was invoked on, then page focus will not be set.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example where this can occur is when you set the focus on a user control instead of setting the focus on a child control of the user control.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, you can use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method to find the child control of the user control and invoke its Focus method.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Gets design-time data for a control.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetDesignModeState method returns design-time data for a control.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing the design-time data for the control.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets the URL that corresponds to a set of route parameters.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeParameters`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The route parameters.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The URL that corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets the URL that corresponds to a set of route parameters.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The route parameters.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The URL that corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the URL that corresponds to a set of route parameters and a route name.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeParameters`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The route parameters.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The URL that corresponds to the specified route parameters and route name.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Gets the URL that corresponds to a set of route parameters and a route name.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The route parameters.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The URL that corresponds to the specified route parameters and route name.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Returns the prefixed portion of the &lt;xref:System.Web.UI.Control.UniqueID*&gt; property of the specified control.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; property of a control is generated by adding a prefix to the control's &lt;xref:System.Web.UI.Control.ID%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prefix is composed of the &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; property of the control's naming container concatenated with a separator character.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the naming container is the page, there is no prefix.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the prefix string.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no prefix string, it returns the &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; value of the control.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A control that is within a naming container.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The prefixed portion of the &lt;xref:System.Web.UI.Control.UniqueID*&gt; property of the specified control.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Control.NamingContainer*&gt; property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">control</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current server control's child controls have any saved view-state settings.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can avoid unnecessary calls to the &lt;xref:System.Web.UI.Control.ClearChildViewState%2A&gt; method by using this property to verify that any child controls of the server control are storing view-state information.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if any child controls have saved view state information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Determines if the server control contains any child controls.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since this method simply determines if any child controls exist, it can enhance performance by allowing you to avoid an unnecessary &lt;xref:System.Web.UI.ControlCollection.Count%2A&gt; property call.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this property require a &lt;xref:System.Web.UI.ControlCollection&gt; object to be instantiated.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no children, this object creation wastes server resources.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control contains other controls; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether events are registered for the control or any child controls.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if events are registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets or sets the programmatic identifier assigned to the server control.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property on a server control provides you with programmatic access to the server control's properties, events, and methods.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be set by Web developers by declaring an ID attribute in the opening tag of an ASP.NET server control.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is not specified for a server control, either declaratively or programmatically, you can obtain a reference to the control through its parent control's &lt;xref:System.Web.UI.Control.Controls%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Only combinations of alphanumeric characters and the underscore character ( _ ) are valid values for this property.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Including spaces or other invalid characters will cause an ASP.NET page parser error.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The programmatic identifier assigned to the control.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets the character used to separate control identifiers.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character contained in the IdSeparator property is used to separate the control identifiers for child controls.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ID separator character is appended to the &lt;xref:System.Web.UI.Control.ID%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The separator character.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The default is "$".</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Occurs when the server control is initialized, which is the first step in its lifecycle.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server controls should perform any initialization steps that are required to create and set up an instance.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use view-state information within this event; it is not populated yet.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not access another server control during this event, regardless of whether it is a child or parent to this control.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other server controls are not certain to be created and ready for access.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on server control events, see <bpt id="p1">[</bpt>ASP.NET Web Forms Server Control Event Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether controls contained within this control have control state.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if children of this control do not use control state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Determines if the server control holds only literal content.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method returns <ph id="ph1">`true`</ph>, the server control's collection holds a single literal control.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the server control contains solely literal content; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the server control is saving changes to its view state.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a sample custom server control that uses this property, see <bpt id="p1">[</bpt>Templated Server Control Example<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control is marked to save its state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether view state is enabled for this control.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>View state can be enabled at the page, container, or control level.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>When view state is disabled at the page or container level, view state is disabled for all controls contained by the page or container.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsViewStateEnabled property indicates whether view state is enabled by pages, containers, or controls.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible for the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property and the IsViewStateEnabled property to be different.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Web.UI.Page&gt; containing the control has view state disabled, the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property can be <ph id="ph1">`true`</ph> while the IsViewStateEnabled property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if view state is enabled for the control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Occurs when the server control is loaded into the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notifies the server control to perform any processing steps that are set to occur on each page request.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access view state information and Web form POST data from this event.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also access other server controls within the page's control hierarchy.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you set a custom template in a control during the <ph id="ph2">`Page_Load`</ph> event, the text values of child controls in the custom template will be lost.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs because the form values have already been loaded.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Restores control-state information from a previous page request that was saved by the &lt;xref:System.Web.UI.Control.SaveControlState*&gt; method.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method when you need to specify how a custom server control restores its control state.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the control state to be restored.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Restores view-state information from a previous page request that was saved by the &lt;xref:System.Web.UI.Control.SaveViewState*&gt; method.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, control developers can override this method to specify how a custom server control restores its view state.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the control state to be restored.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the control participates in loading its view state by &lt;xref:System.Web.UI.Control.ID*&gt; instead of index.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, when a parent control loads view state into child controls it creates, it does this by the position of each child control in the parent control's &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>When view state is initially applied, all child controls might not have been created.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the view state for controls not yet created is saved, and applied when the child controls are created later.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a parent control to apply view state to its child controls, two conditions must be met:      -   On postback, the parent control must create the child controls in exactly the same order as the previous request so that the order of the controls remains consistent.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   After postback, any child controls created must be added to the end of the parent control's &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>If these two conditions cannot be met, as in the case of the delayed creation of a child control, the parent control can load view state by using &lt;xref:System.Web.UI.Control.ID%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the LoadViewStateByID property to <ph id="ph1">`true`</ph>, use the &lt;xref:System.Web.UI.ViewStateModeByIdAttribute&gt; metadata attribute for the parent control.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control loads its view state by &lt;xref:System.Web.UI.Control.ID*&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Retrieves the physical path that a virtual path, either absolute or relative, maps to.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can only be used by server controls that have permissions to read files and which are part of fully trusted .dll files, such as System.Web.dll.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps prevent security breaches.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>A relative or root relative URL.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The physical path to the requested file.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string ("").</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.Control.ID%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each page in an ASP.NET Web application contains a hierarchy of controls.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>This hierarchy is not dependent on whether a control generates UI visible to the user.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>The naming container for a given control is the parent control above it in the hierarchy that implements the &lt;xref:System.Web.UI.INamingContainer&gt; interface.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>A server control that implements this interface creates a unique namespace for the &lt;xref:System.Web.UI.Control.ID%2A&gt; property values of its child server controls.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the NamingContainer property of a naming container's child control to get a reference to its parent container.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a unique namespace for server controls is particularly important when you bind Web server controls to data, such as the &lt;xref:System.Web.UI.WebControls.Repeater&gt; and &lt;xref:System.Web.UI.WebControls.DataList&gt; server controls.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple entries in the data source create multiple instances of a server control that is a child of the repeating control, the naming container ensures that each instance of these child controls have &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; property values that do not conflict.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default naming container for a page is the instance of the &lt;xref:System.Web.UI.Page&gt; class that is generated when that page is requested.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; property contains the value that is rendered as the element's <ph id="ph1">`id`</ph> attribute in the HTML markup.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the value that you assign to the &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; property, the value that is generated for the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; property might include the ID of the NamingContainer object.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; to &lt;xref:System.Web.UI.ClientIDMode&gt;, the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value does not include the ID of the NamingContainer object.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; to either &lt;xref:System.Web.UI.ClientIDMode&gt; or &lt;xref:System.Web.UI.ClientIDMode&gt;, the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value will include the ID from the NamingContainer object.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Server Control Identification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The server control's naming container.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET server controls such as the &lt;xref:System.Web.UI.WebControls.Repeater&gt;, &lt;xref:System.Web.UI.WebControls.DataList&gt; and &lt;xref:System.Web.UI.WebControls.GridView&gt; Web controls can contain child controls that raise events.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, each row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control can contain one or more buttons created dynamically by templates.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than each button raising an event individually, events from the nested controls are "bubbled"—that is, they are sent to the naming container.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>The naming container in turn raises a generic event called &lt;xref:System.Web.UI.WebControls.GridView.RowCommand&gt; with parameter values.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values allow you to determine which individual control that raised the original event.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>By responding to this single event, you can avoid having to write individual event-handling methods for child controls.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The source of the event.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the event has been canceled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.DataBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method notifies a server control to perform any logic for binding data that is associated with it.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to handle the &lt;xref:System.Web.UI.Control.DataBinding&gt; event, you should override this event-handling method.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures that all delegates attached to the &lt;xref:System.Web.UI.Control.DataBinding&gt; event are invoked.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Init"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET calls this method to raise the &lt;xref:System.Web.UI.Control.Init&gt; event.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are developing a custom control, you can override this method in order to provide additional processing.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you override this method, call the base control's OnInit method to notify subscribers to the event.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Load"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET calls this method to raise the &lt;xref:System.Web.UI.Control.Load&gt; event.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are developing a custom control, you can override this method in order to provide additional processing.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you override this method, call the base control's OnLoad method to notify subscribers to the event.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.PreRender"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET calls this method to raise the &lt;xref:System.Web.UI.Control.PreRender&gt; event.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are developing a custom control, you can override this method in order to provide additional processing.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you override this method, call the base control's OnPreRender method to notify subscribers to the event.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Unload"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET calls this method to raise the &lt;xref:System.Web.UI.Control.Unload&gt; event.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are developing a custom control, you can override this method in order to provide additional processing.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you override this method, call the base control's OnUnload method to notify subscribers to the event.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains event data.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.IO.Stream&gt; used to read a file.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The path to the desired file.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that references the desired file.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Access to the specified file was denied.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Gets a reference to the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that contains the server control.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property's value reflects the name of the .aspx file that contains the server control.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that contains the server control.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The control is a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Substitution"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Gets a reference to the server control's parent control in the page control hierarchy.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever a page is requested, a hierarchy of server controls on that page is built.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows you to determine the parent control of the current server control in that hierarchy, and to program against it.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A reference to the server control's parent control.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Occurs after the <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is loaded but prior to rendering.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to perform any updates before the server control is rendered to the page.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes in the view state of the server control can be saved during this event.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such changes made in the rendering phase will not be saved.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Assigns any sources of the event and its information to the control's parent.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET server controls such as the &lt;xref:System.Web.UI.WebControls.Repeater&gt;, &lt;xref:System.Web.UI.WebControls.DataList&gt; and &lt;xref:System.Web.UI.WebControls.GridView&gt; Web controls can contain child controls that raise events.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, each row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control can contain one or more buttons created dynamically by templates.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than each button raising an event individually, events from the nested controls are "bubbled"—that is, they are sent to the control's parent.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent in turn raises a generic event called &lt;xref:System.Web.UI.WebControls.GridView.RowCommand&gt; with parameter values.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values allow you to determine which individual control that raised the original event.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>By responding to this single event, you can avoid having to write individual event-handling methods for child controls.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>While you cannot override this method, controls you author can handle or raise bubbled events by overriding the &lt;xref:System.Web.UI.Control.OnBubbleEvent%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The source of the event.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Called after a child control is removed from the &lt;xref:System.Web.UI.Control.Controls*&gt; collection of the <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemovedControl method is called immediately after a control is removed from the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has been removed.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The control is a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Substitution"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Sends server control content to a provided <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which writes the content to be rendered on the client.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>When developing custom server controls, you can override this method to generate content for an ASP.NET page.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that receives the server control content.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Outputs the content of a server control's children to a provided <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which writes the content to be rendered on the client.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method notifies ASP.NET to render any Active Server Pages (ASP) code on the page.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no ASP code exists on the page, this method renders any child controls for the server control.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Web.UI.Control.Render%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that receives the rendered content.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Outputs server control content to a provided <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and stores tracing information about the control if tracing is enabled.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a server control's &lt;xref:System.Web.UI.Control.Visible%2A&gt; property is set to <ph id="ph1">`true`</ph>, this method determines whether tracing is enabled for the page.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, it stores trace information associated with the control, and renders the server control content to the page.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is automatically called by the page during the rendering, but can be overridden by custom control developers.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that receives the control content.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Outputs server control content to a provided <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a provided <bpt id="p2">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET Web pages are usable across a wide range of devices and browsers that can request information from the Web.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Control.Adapter%2A&gt; property returns the &lt;xref:System.Web.UI.Adapters.ControlAdapter&gt; object that renders the control on the requesting device or browser's screen.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about adapters, see <bpt id="p1">[</bpt>Architectural Overview of Adaptive Control Behavior<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a server control's &lt;xref:System.Web.UI.Control.Visible%2A&gt; property is set to <ph id="ph1">`true`</ph> and tracing is enabled for the page, then trace information associated with the control is captured.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that receives the control content.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the rendering.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET sets this property to the value of the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute of the <ph id="ph2">`pages`</ph> element in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute is not set in the Web.config file, the default value is the current version of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  There is a public set accessor for this property, but the set accessor supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this value in your code, the effect is unpredictable.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each release of ASP.NET might render HTML differently from earlier releases.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in ASP.NET 3.5, if the &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A&gt; property of a &lt;xref:System.Web.UI.WebControls.Label&gt; control is <ph id="ph1">`false`</ph>, by default, ASP.NET renders a <ph id="ph2">`span`</ph> element whose <ph id="ph3">`disabled`</ph> attribute is set to "disabled".</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>In ASP.NET 4, by default, the <ph id="ph1">`span`</ph> element is rendered with a cascading style sheet (CSS) <ph id="ph2">`class`</ph> attribute instead of the <ph id="ph3">`disabled`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>This lets you specify the disabled appearance of the control and avoids rendering invalid HTML.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>(In HTML 4.0 and XHTML 1.1, the <ph id="ph1">`span`</ph> element does not support the <ph id="ph2">`disabled`</ph> attribute.)       A Web application might include code that would not function correctly if HTML rendering changes.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this problem, you can set the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute of the <ph id="ph2">`pages`</ph> element in the Web.config file to indicate which earlier version you want to maintain compatibility with.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the RenderingCompatibility property to <ph id="ph1">`3.5`</ph>, a disabled &lt;xref:System.Web.UI.WebControls.Label&gt; control will render a <ph id="ph2">`disabled`</ph> attribute and not a CSS class.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The earliest version that you can set this property to is <ph id="ph2">`3.5`</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain backward compatibility, when you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute in the Web.config file to <ph id="ph2">`3.5`</ph>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want an upgraded Web site to render HTML using the algorithm that was introduced in ASP.NET 4, you can change or remove the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most of the time, the behavior controlled by this property is automatic and you do not have to check the RenderingCompatibility property in your code.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are programming a custom control, you might have to include code that alters the control's behavior based on the setting of this property.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a custom control for ASP.NET 4 might be composed of &lt;xref:System.Web.UI.WebControls.Label&gt; controls, and the custom control might specify the disabled appearance of the control by generating JavaScript code that alters the <ph id="ph1">`aspNetDisabled`</ph> class.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will work as expected if RenderingCompatibility is <ph id="ph1">`4.0`</ph> or later.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>But to get the same effect when RenderingCompatibility is <ph id="ph1">`3.5`</ph>, the custom control's code must set the control's <ph id="ph2">`CssClass`</ph> property to "aspNetDisabled" when the &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A&gt; property is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The ASP.NET version that rendered HTML will be compatible with.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Gets the control adapter responsible for rendering the specified control.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET Web pages are viewable across a wide range of devices that are capable of requesting pages from the Web.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ResolveAdapter method returns the control adapter responsible for rendering the control on the specific browser or device that requested the ASP.NET page.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific adapter type returned depends on the descendent type of the &lt;xref:System.Web.UI.Control&gt; class that is being rendered.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about adapters, see <bpt id="p1">[</bpt>Architectural Overview of Adaptive Control Behavior<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will render the control.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Gets a URL that can be used by the browser.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ResolveClientUrl method to return a URL string suitable for use by the client to access resources on the Web server, such as image files, links to additional pages, and so on.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The URL returned by this method is relative to the folder containing the source file in which the control is instantiated.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that inherit this property, such as &lt;xref:System.Web.UI.UserControl&gt; and &lt;xref:System.Web.UI.MasterPage&gt;, will return a fully qualified URL relative to the control.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>A URL relative to the current page.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>A fully qualified URL to the specified resource suitable for use on the browser.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeUrl&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Converts a URL into one that is usable on the requesting client.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`relativeUrl`</ph> parameter contains an absolute URL, the URL is returned unchanged.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`relativeUrl`</ph> parameter contains a relative URL, that URL is changed to a relative URL that is correct for the current request path, so that the browser can resolve the URL.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider the following scenario:      -   A client has requested an ASP.NET page that contains a user control that has an image associated with it.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The ASP.NET page is located at /Store/page1.aspx.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The user control is located at /Store/UserControls/UC1.ascx.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The image file is located at /UserControls/Images/Image1.jpg.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user control passes the relative path to the image (that is, /Store/UserControls/Images/Image1.jpg) to the ResolveUrl method, the method will return the value /Images/Image1.jpg.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the &lt;xref:System.Web.UI.Control.TemplateSourceDirectory%2A&gt; property to resolve to the absolute URL.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned URL is for client use.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on resource paths in a Web site, see <bpt id="p1">[</bpt>ASP.NET Web Project Paths<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For mobile Web pages only, if your application relies on cookieless sessions or might receive requests from mobile browsers that require cookieless sessions, using a tilde ("~") in a path can result in inadvertently creating a new session and potentially losing session data.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a property with a path such as "~/<bpt id="p1">*</bpt>path"<ept id="p1">*</ept>, resolve the path by calling the &lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt; with an argument such as "~/<bpt id="p2">*</bpt>path"<ept id="p2">*</ept> before assigning it to the property.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The URL associated with the &lt;xref:System.Web.UI.Control.TemplateSourceDirectory*&gt; property.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>The converted URL.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Occurs if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relativeUrl</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Saves any server control state changes that have occurred since the time the page was posted back to the server.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SaveControlState method to save state information required for the operation of a specific control.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This control-state data is stored separately from the control's view-state data.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom controls using control state must call the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; method on the &lt;xref:System.Web.UI.Control.Page%2A&gt; before saving control state.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Returns the server control's current state.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>If there is no state associated with the control, this method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>View state is the accumulation of the values of a server control's properties.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values are automatically placed in the server control's &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property's value is then persisted to a string object after the save state stage of the server control life cycle.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Page Life Cycle Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>When view state is saved, this string object is returned to the client as a variable that is stored in an HTML <ph id="ph1">`HIDDEN`</ph> element.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you author a custom server control with a custom view state, the view state can be managed explicitly with the SaveViewState and &lt;xref:System.Web.UI.Control.LoadViewState%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on implementing a custom session-state provider, see <bpt id="p1">[</bpt>Implementing a Session-State Store Provider<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Returns the server control's current view state.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>If there is no view state associated with the control, this method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Sets design-time data for a control.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetDesignModeState method saves design-time data for a control.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing the design-time data for the control.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Assigns an event handler delegate to render the server control and its content into its parent control.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supplied for implementation purposes only; you should never call it directly.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The information necessary to pass to the delegate so that it can render the server control.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Sets trace data for design-time tracing of rendering data, using the trace data key and the trace data value.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The trace data key.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The trace data value.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Sets trace data for design-time tracing of rendering data, using the traced object, the trace data key, and the trace data value.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The traced object.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The trace data key.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The trace data value.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Gets information about the container that hosts the current control when rendered on a design surface.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>A site binds a &lt;xref:System.ComponentModel.Component&gt; object to a &lt;xref:System.ComponentModel.Container&gt; object and enables communication between the two.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also provides a way for the container to manage its components.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the container that the control is hosted in.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>The control is a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Substitution"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Gets or sets the skin to apply to the control.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Skins available to a control are contained in one or more skin files in a theme directory.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SkinID property specifies which of these skins to apply to the control.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>A skin is specific to a particular control; you cannot share skin settings between controls of different types.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the SkinID property, a control uses the default skin if one is defined.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a skin without an ID is defined for an &lt;xref:System.Web.UI.WebControls.Image&gt; control, then that skin applies to all &lt;xref:System.Web.UI.WebControls.Image&gt; controls that do not explicitly reference a skin by ID and that are not set to disable themes.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a skin with an ID is defined for an &lt;xref:System.Web.UI.WebControls.Image&gt; control, then that skin applies only to &lt;xref:System.Web.UI.WebControls.Image&gt; controls whose SkinID property is set to that ID.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the skin files in a theme directory do not contain a skin with the specified SkinID property, an &lt;xref:System.ArgumentException&gt; exception is thrown at run time.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The name of the skin to apply to the control.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.String&gt;.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IControlBuilderAccessor.ControlBuilder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IControlBuilderAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.ControlBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that built the control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no builder was used.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IControlDesignerAccessor.GetDesignModeState%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IControlDesignerAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; of the control state.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IControlDesignerAccessor.SetDesignModeState%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IControlDesignerAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing the design-time data for the control.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IControlDesignerAccessor.SetOwnerControl%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IControlDesignerAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.IControlDesignerAccessor&gt; interface is used by a control designer to perform design-time actions on the control.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The owner of the control.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;owner&lt;/code&gt;</ph> is set to the current control.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IControlDesignerAccessor.UserData%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IControlDesignerAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing information about the control.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IDataBindingsAccessor.DataBindings%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IDataBindingsAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The collection of data bindings.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IDataBindingsAccessor.HasDataBindings%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IDataBindingsAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control contains data-binding logic; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IExpressionsAccessor.Expressions%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IExpressionsAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.ExpressionBindingCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing <bpt id="p2">&lt;xref href="System.Web.UI.ExpressionBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects that represent the properties and expressions for a control.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IExpressionsAccessor.HasExpressions%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IExpressionsAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control has properties set through expressions; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.Control&gt; instance is cast to an &lt;xref:System.Web.UI.IParserAccessor&gt; interface.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The object to add.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to the template that contains this control.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Web.UI.Control&gt; instance is part of a control template, the TemplateControl property contains a reference to the containing control.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.UI.TemplateControl?displayProperty=fullName&gt; documentation.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.TemplateControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that contains this control.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Gets the virtual directory of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Web.UI.UserControl"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that contains the current server control.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TemplateSourceDirectory property specifies the path to the page or user control that contains the current control.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the Web page resides at http://www.contoso.com/application/subdirectory, the TemplateSourceDirectory property returns "application/subdirectory".</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the application-relative virtual path ("~/subdirectory"), use the &lt;xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The virtual directory of the page or user control that contains the server control.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Causes tracking of view-state changes to the server control so they can be stored in the server control's <bpt id="p1">&lt;xref href="System.Web.UI.StateBag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>This object is accessible through the <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called automatically at the end of the &lt;xref:System.Web.UI.Control.Init&gt; event in the server control's lifecycle.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke this method when you develop templated data-bound controls.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method alerts ASP.NET to monitor changes to a server control's view state, which is required when you override the &lt;xref:System.Web.UI.Control.DataBind%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Gets the unique, hierarchically qualified identifier for the server control.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property differs from the &lt;xref:System.Web.UI.Control.ID%2A&gt; property, in that the UniqueID property includes the identifier for the server control's naming container.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>This identifier is generated automatically when a page request is processed.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is particularly important in differentiating server controls contained within a data-binding server control that repeats.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>The repeating control, which are &lt;xref:System.Web.UI.WebControls.Repeater&gt;, &lt;xref:System.Web.UI.WebControls.DataList&gt;, &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, &lt;xref:System.Web.UI.WebControls.FormView&gt;, and &lt;xref:System.Web.UI.WebControls.GridView&gt; Web server controls (or any custom server controls that you create that include repeating functionality when data bound), serves as the naming container for its child controls.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that it creates a unique namespace for its child controls so that their &lt;xref:System.Web.UI.Control.ID%2A&gt; property values do not conflict.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you include an ASP.NET &lt;xref:System.Web.UI.WebControls.Label&gt; Web server control in a &lt;xref:System.Web.UI.WebControls.Repeater&gt; server control, and assign the &lt;xref:System.Web.UI.WebControls.Label&gt; control an &lt;xref:System.Web.UI.Control.ID%2A&gt; property value of <ph id="ph1">`MyLabel`</ph>, and the &lt;xref:System.Web.UI.WebControls.Repeater&gt; an &lt;xref:System.Web.UI.Control.ID%2A&gt; of <ph id="ph2">`MyRepeater`</ph>.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you bind data to the &lt;xref:System.Web.UI.WebControls.Repeater&gt; to an &lt;xref:System.Collections.ArrayList&gt; object with three entries, the resulting UniqueID properties for each instance of the &lt;xref:System.Web.UI.WebControls.Label&gt; server controls are <ph id="ph1">`MyRepeater$ctl00$MyLabel`</ph>, <ph id="ph2">`MyRepeater$ctl01$MyLabel`</ph>, and <ph id="ph3">`MyRepeater$ctl02$MyLabel`</ph>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The fully qualified identifier for the server control.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Occurs when the server control is unloaded from memory.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server controls must perform any final clean-up, such as closing files, database connections and discarding objects, during this stage of the control lifecycle before the instance is unloaded.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the control checks client input from the browser for potentially dangerous values.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about request validation, see &lt;xref:System.Web.UnvalidatedRequestValues&gt;.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>A value that determines whether the control checks client input.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Values can include <bpt id="p1">&lt;xref href="System.Web.UI.ValidateRequestMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Web.UI.ValidateRequestMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref href="System.Web.UI.ValidateRequestMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.UI.ValidateRequestMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which means that the control gets the value from its parent.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>A server control's view state is the accumulation of all its property values.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class, to store the property values.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about saving server control view state, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>View state is enabled for all server controls by default, but there are circumstances in which you will want to disable it.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Performance Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about dictionaries and how to use them, see <bpt id="p1">[</bpt>Collections and Data Structures<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Web.UI.StateBag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains the server control's view-state information.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.StateBag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you create a custom server control that saves its view state without taking case into account.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you do so multiple objects with the same key, but with different casing, can be stored in the &lt;xref:System.Web.UI.StateBag&gt; associated with the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.StateBag"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is case-insensitive; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Gets or sets the view-state mode of this control.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the ViewStateMode property to enable view state for an individual control even if view state is disabled for the page.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about view state and control state, see the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable view state for a page and to enable it for a specific control on the page, set the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property of the page and the control to <ph id="ph1">`true`</ph>, set the ViewStateMode property of the page to &lt;xref:System.Web.UI.ViewStateMode&gt;, and set the ViewStateMode property of the control to &lt;xref:System.Web.UI.ViewStateMode&gt;.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of the ViewStateMode property for a page is &lt;xref:System.Web.UI.ViewStateMode&gt;.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of the ViewStateMode property for a Web server control in a page is &lt;xref:System.Web.UI.ViewStateMode&gt;.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, if you do not set this property at either the page or the control level, the value of the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property determines view-state behavior.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ViewStateMode property of a page or a control has an effect only if the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property is set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.Control.EnableViewState%2A&gt; property is set to <ph id="ph1">`false`</ph>, view state will be turned off even if the ViewStateMode property is set to &lt;xref:System.Web.UI.ViewStateMode&gt;.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>The view-state mode of this control.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>An attempt was made to set this property to a value that is not in the <bpt id="p1">&lt;xref href="System.Web.UI.ViewStateMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a server control is rendered as UI on the page.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, the server control is not rendered.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should take this into account when organizing the layout of your page.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a container control is not rendered, any controls that it contains will not be rendered even if you set the Visible property of an individual control to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the individual control returns <ph id="ph1">`false`</ph> for the Visible property even if you have explicitly set it to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>(That is, if the <ph id="ph1">`Visible`</ph> property of the parent control is set to <ph id="ph2">`false`</ph>, the child control inherits that setting and the setting takes precedence over any local setting.)</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control is visible on the page; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>