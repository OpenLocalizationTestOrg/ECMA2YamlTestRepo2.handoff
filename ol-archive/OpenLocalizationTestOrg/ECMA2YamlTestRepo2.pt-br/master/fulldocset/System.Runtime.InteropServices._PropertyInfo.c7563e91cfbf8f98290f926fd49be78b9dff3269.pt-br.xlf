<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8a3ea9bdf538d3ace1045b173033513a8ad6f53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._PropertyInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f203743d96d87a8ffdc26e3b3357e38f9bf3f988</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85fe6fc90bd4d5b9890bee112cd611515c03e2c7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.Attributes*&gt; property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.Attributes%2A&gt; property gets the attributes of this property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The attributes of this property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanRead*&gt; property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.CanRead%2A&gt; property gets a value indicating whether the property can be read.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property can be read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanWrite*&gt; property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.CanWrite%2A&gt; property gets a value indicating whether the property can be written to.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property can be written to; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the class that declares this member.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, and other accessors of the property reflected by the current instance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MethodInfo&gt; objects that reflect the public <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public and, if specified, non-public <ph id="ph1">`get`</ph>, <ph id="ph2">`set`</ph>, and other accessors of the property reflected by the current instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include non-public methods in the returned <bpt id="p2">&lt;xref uid="langword_csharp_MethodInfo" name="MethodInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> array; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MethodInfo&gt; objects whose elements reflect the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this array contains public and non-public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and other accessors.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this array contains only public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and other accessors.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public <ph id="ph1">`get`</ph> accessor for this property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the public <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor for this property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public or does not exist.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public or non-public <ph id="ph1">`get`</ph> accessor for this property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return a non-public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor for this property, if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the <bpt id="p4">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> accessor is non-public, or if <bpt id="p5">&lt;code&gt;</bpt><ph id="ph2">nonPublic</ph><ept id="p5">&lt;/code&gt;</ept> is <bpt id="p6">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> but no <bpt id="p7">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept> accessors exist.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An array of names to be mapped.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The count of the names to be mapped.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters*&gt; method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt; method returns an array of all the index parameters for the property</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing the parameters for the indexes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the public <ph id="ph1">`set`</ph> accessor for this property.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for this property if the <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor is public, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the <bpt id="p4">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> accessor is not public.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the <ph id="ph1">`set`</ph> accessor for this property.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return a non-public accessor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id="p1">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for this property.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor is public.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but the property is read-only.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">nonPublic</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor is non-public.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-or-       There is no <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A pointer to the requested type information object.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns a literal value associated with the property by a compiler.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The property value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns the value of a property having the specified binding, index, and &lt;xref:System.Globalization.CultureInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The invocation attribute.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This must be a bit flag from <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A suitable invocation attribute must be specified.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If a static member will be invoked, the <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag of <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> must be set.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <bpt id="p1">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects through reflection.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the default binder is used.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the culture for which the resource will be localized.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Note that if the resource is not localized for this culture, the <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method will be called successively in search of a match.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is obtained from the <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The property value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An identifier of a member.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A pointer to the location where the result will be stored.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A pointer to a structure that contains exception information.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instance of the <ph id="ph1">`attributeType`</ph> parameter is applied to this member.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object to which the custom attributes are applied.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>true to search this member's inheritance chain to find the attributes; otherwise false.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instances of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> parameter are applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.IsSpecialName*&gt; property.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt; property sets a value indicating whether the property is the special name.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this property is the special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.MemberType*&gt; property.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is a property.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating that this member is a property.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object containing the name of this member.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.PropertyType*&gt; property.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.PropertyType%2A&gt; property gets the type of this property.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The type of this property.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this &lt;xref:System.Reflection.MemberInfo&gt; object.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt; method.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt; method sets the value of the property with optional index values for index properties.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The object whose property value will be set.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The new value for this property.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValue*&gt; method.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt; method sets the property value for the given object to the given value.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The object whose property value will be returned.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The new value for this property.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The invocation attribute.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This must be a bit flag from <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref uid="langword_csharp_InvokeMethod" name="InvokeMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_CreateInstance" name="CreateInstance" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref uid="langword_csharp_GetField" name="GetField" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, <bpt id="p6">&lt;xref uid="langword_csharp_SetField" name="SetField" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, <bpt id="p7">&lt;xref uid="langword_csharp_GetProperty" name="GetProperty" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>, or <bpt id="p8">&lt;xref uid="langword_csharp_SetProperty" name="SetProperty" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A suitable invocation attribute must be specified.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If a static member will be invoked, the <bpt id="p1">&lt;xref uid="langword_csharp_Static" name="Static" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag of <bpt id="p2">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> must be set.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of &lt;xref:System.Reflection.MemberInfo&gt; objects through reflection.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the default binder is used.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Optional index values for indexed properties.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This value should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-indexed properties.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Globalization.CultureInfo&gt; object that represents the culture for which the resource will be localized.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Note that if the resource is not localized for this culture, the <bpt id="p1">&lt;xref uid="langword_csharp_CultureInfo.Parent" name="CultureInfo.Parent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method will be called successively in search of a match.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_CultureInfo" name="CultureInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is obtained from the <bpt id="p3">&lt;xref uid="langword_csharp_CultureInfo.CurrentUICulture" name="CultureInfo.CurrentUICulture" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>