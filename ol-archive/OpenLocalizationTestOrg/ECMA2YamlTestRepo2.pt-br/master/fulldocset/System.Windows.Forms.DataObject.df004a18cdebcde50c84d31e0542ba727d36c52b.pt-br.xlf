<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d68bb3e9ff92de1344598b3c5a467d9c7b01d7e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.DataObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f467c5b21e9c1469085d0cad80431510a0eed63f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8af5b5199a36ed13873377ff3c233cbcb22a965</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a basic data transfer mechanism.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>DataObject implements the &lt;xref:System.Windows.Forms.IDataObject&gt; interface, whose methods provide a format-independent mechanism for data transfer.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DataObject is typically used with the &lt;xref:System.Windows.Forms.Clipboard&gt; and in drag-and-drop operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataObject class provides the recommended implementation of the &lt;xref:System.Windows.Forms.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is suggested that you use the DataObject class rather than implementing &lt;xref:System.Windows.Forms.IDataObject&gt; yourself.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple pieces of data in different formats can be stored in a DataObject.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data is retrieved from a DataObject by its associated format.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the target application might not be known, you can increase the likelihood that the data will be in the appropriate format for an application by placing the data in a DataObject in multiple formats.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Forms.DataFormats&gt; for the predefined formats.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement your own format by creating an instance of the &lt;xref:System.Windows.Forms.DataFormats.Format&gt; class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To store data in a DataObject, pass the data to the constructor or call &lt;xref:System.Windows.Forms.DataObject.SetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add data in multiple formats to the same DataObject.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the data you add to be retrieved in its native format only, call &lt;xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29&gt; with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data can be retrieved from a DataObject in any format which is compatible with &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, text can be converted to Unicode.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve data in the format in which it was stored, call &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt; with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine what formats the data is stored in, call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine if a format is available, call &lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A&gt; with the desired format.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>, the DataObject class provides additional methods that make it easier to work with data in common formats.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add data of a particular format to the DataObject, use the appropriate <ph id="ph1">`Set`</ph><bpt id="p1">*</bpt>Format<ept id="p1">*</ept> method, such as &lt;xref:System.Windows.Forms.DataObject.SetText%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve data of a particular format from the DataObject, first call the appropriate <ph id="ph1">`Contains`</ph><bpt id="p1">*</bpt>Format<ept id="p1">*</ept> method (such as &lt;xref:System.Windows.Forms.DataObject.ContainsText%2A&gt;) to determine whether the DataObject contains data in that format, then call the appropriate <ph id="ph2">`Get`</ph><bpt id="p2">*</bpt>Format<ept id="p2">*</ept> method (such as &lt;xref:System.Windows.Forms.DataObject.GetText%2A&gt;) to retrieve the data if the DataObject contains it.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Special considerations may be necessary when using the metafile format with the Clipboard.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Due to a limitation in the current implementation of the DataObject class, the metafile format used by the .NET Framework may not be recognized by applications that use an older metafile format.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you must interoperate with the Win32 Clipboard application programming interfaces (APIs).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article 323530, "Metafiles on Clipboard Are Not Visible to All Applications," in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  An object must be serializable for it to be put on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Runtime.Serialization&gt; for more information on serialization.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your target application requires a very specific data format, the headers added to the data in the serialization process may prevent the application from recognizing your data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>To preserve your data format, add your data as a &lt;xref:System.Byte&gt; array to a &lt;xref:System.IO.MemoryStream&gt; and pass the &lt;xref:System.IO.MemoryStream&gt; to the &lt;xref:System.Windows.Forms.DataObject.SetData%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and adds the specified object to it.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add data in any format to the &lt;xref:System.Windows.Forms.DataObject&gt; when you use this constructor, or you can add data as an &lt;xref:System.Windows.Forms.IDataObject&gt; to provide multiple formats at once.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are familiar with COM programming, you can also add a data object that implements the COM <ph id="ph1">`IDataObject`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">`IDataObject`</ph> in the MSDN library at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and adds the specified object in the specified format.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The format of the specified data.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates whether the data object contains data in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.WaveAudio"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether the data object contains audio data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetAudioStream%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object contains audio data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates whether the data object contains data that is in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.FileDrop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format or can be converted to that format.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A file drop list is a collection of strings containing path information for files.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether the data object contains a file drop list before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetFileDropList%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object contains a file drop list; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Indicates whether the data object contains data that is in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format or can be converted to that format.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether the data object contains image data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetImage%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object contains image data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Indicates whether the data object contains data in the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether the data object contains text data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetText%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object contains text data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Indicates whether the data object contains text data in the format indicated by the specified <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether the data object contains text data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetText%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object contains text data in the specified format; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves an audio stream from the data object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.ContainsAudio%2A&gt; method to determine whether the data object contains audio data before retrieving it with this method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.SetAudio%2A&gt; method to add audio data to the data object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; containing audio data or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data object does not contain any data in the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataFormats.WaveAudio"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the data associated with the specified data format.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to <ph id="ph1">`false`</ph>, this method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call &lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A&gt; before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for a list of valid formats for the data stored in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  When <ph id="ph1">`format`</ph> is &lt;xref:System.Windows.Forms.DataFormats.Html&gt;, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the data associated with the specified class type format.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to <ph id="ph1">`false`</ph>, this method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call &lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A&gt; before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for a list of valid formats for the data stored in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; representing the format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns the data associated with the specified data format, using an automated conversion parameter to determine whether to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the automatic conversion set to <ph id="ph1">`false`</ph>, this method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether data is associated with, or can be converted to, a format, call &lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A&gt; before calling GetData.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for a list of valid formats for the data stored in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  When <ph id="ph1">`format`</ph> is &lt;xref:System.Windows.Forms.DataFormats.Html&gt;, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The format of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the convert data to the specified format; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The data associated with the specified format, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Determines whether data stored in this <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is associated with, or can be converted to, the specified format.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for the formats that are available in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If no data can be retrieved, no exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">`false`</ph> will be returned.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The format to check for.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data stored in this <bpt id="p2">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with, or can be converted to, the specified format; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Determines whether data stored in this <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is associated with, or can be converted to, the specified format.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for the formats that are available in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If no data can be retrieved, no exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">`false`</ph> will be returned.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; representing the format to check for.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data stored in this <bpt id="p2">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with, or can be converted to, the specified format; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Determines whether this <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains data in the specified format or, optionally, contains data that can be converted to the specified format.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to determine whether a format exists before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.Windows.Forms.DataObject.GetFormats%2A&gt; for the formats that are available in this &lt;xref:System.Windows.Forms.DataObject&gt;.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> when:      -   The <ph id="ph2">`autoConvert`</ph> parameter is <ph id="ph3">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`false`</ph> when:      -   The <ph id="ph2">`autoConvert`</ph> parameter is <ph id="ph3">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with automatic conversion set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and data does not exist in this &lt;xref:System.Windows.Forms.DataObject&gt; in the specified format.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If no data can be retrieved, no exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">`false`</ph> will be returned.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The format to check for.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to determine whether data stored in this <bpt id="p2">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can be converted to the specified format; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to check whether the data is in the specified format.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data is in, or can be converted to, the specified format; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of file names from the data object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>A file drop list is a collection of strings containing path information for files.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>A file drop list is stored in a data object as a &lt;xref:System.String&gt; array.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts this array to a &lt;xref:System.Collections.Specialized.StringCollection&gt; and returns the collection.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A&gt; method to determine whether the data object contains a file drop list before retrieving it with this method.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.SetFileDropList%2A&gt; method to add a file drop list to the data object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing file names or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the data object does not contain any data that is in the <bpt id="p3">&lt;xref href="System.Windows.Forms.DataFormats.FileDrop"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> format or can be converted to that format.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Returns a list of all formats that data stored in this <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is associated with or can be converted to.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to get the supported data formats before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Forms.DataFormats&gt; for the predefined formats.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt;, containing a list of all formats that are supported by the data stored in this object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns a list of all formats that data stored in this <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is associated with or can be converted to, using an automatic conversion parameter to determine whether to retrieve only native data formats or all formats that the data can be converted to.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to get the supported data formats before calling &lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Forms.DataFormats&gt; for the predefined formats.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, data stored as Unicode can be converted to text.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to retrieve all formats that data stored in this <bpt id="p2">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with, or can be converted to; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to retrieve only native data formats.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt;, containing a list of all formats that are supported by the data stored in this object.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Retrieves an image from the data object.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.ContainsImage%2A&gt; method to determine whether the data object contains image data before retrieving it with this method.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.SetImage%2A&gt; method to add image data to the data object.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the image data in the data object or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the data object does not contain any data that is in the <bpt id="p3">&lt;xref href="System.Windows.Forms.DataFormats.Bitmap"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> format or can be converted to that format.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Retrieves text data from the data object in the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.ContainsText%2A&gt; method to determine whether the data object contains text data before retrieving it with this method.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.SetText%2A&gt; method to add text data to the data object.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The text data in the data object or <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> if the data object does not contain data in the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Retrieves text data from the data object in the format indicated by the specified <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.ContainsText%2A&gt; method to determine whether the data object contains text data before retrieving it with this method.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.DataObject.SetText%2A&gt; method to add text data to the data object.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The text data in the data object or <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> if the data object does not contain data in the specified format.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Adds a &lt;xref:System.Byte&gt; array to the data object in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.WaveAudio"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format after converting it to a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve audio data from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsAudio%2A&gt; method to determine whether the data object contains audio data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetAudioStream%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array containing the audio data.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;audioBytes&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Adds a &lt;xref:System.IO.Stream&gt; to the data object in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.WaveAudio"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve audio data from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsAudio%2A&gt; method to determine whether the data object contains audio data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetAudioStream%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; containing the audio data.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;audioStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Adds the specified object to the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the object type as the data format.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetData overload stores the <ph id="ph1">`data`</ph> value in a format that it determines by calling the &lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`data`</ph> implements the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface, this overload also stores the value in the &lt;xref:System.Windows.DataFormats.Serializable&gt; format.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Adds the specified object to the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified format.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The format associated with the data.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Adds the specified object to the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified type as the format.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; representing the format associated with the data.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Adds the specified object to the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified format and indicating whether the data can be converted to another format.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The format associated with the data.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for predefined formats.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to allow the data to be converted to another format; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The data to store.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Adds a collection of file names to the data object in the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataFormats.FileDrop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>A file drop list is a collection of strings containing path information for files.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>A file drop list is stored in a data object as a &lt;xref:System.String&gt; array.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts <ph id="ph1">`filePaths`</ph> to a &lt;xref:System.String&gt; array before adding it to the data object.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve a file drop list from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A&gt; method to determine whether the data object contains data in that format before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetFileDropList%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the file names.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePaths&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Adds an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the data object in the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataFormats.Bitmap"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve image data from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsImage%2A&gt; method to determine whether the data object contains image data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetImage%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add to the data object.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;image&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Adds text data to the data object in the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> format.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve text data from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsText%2A&gt; method to determine whether the data object contains image data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetText%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The text to add to the data object.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Adds text data to the data object in the format indicated by the specified <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve text data from the data object, first use the &lt;xref:System.Windows.Forms.DataObject.ContainsText%2A&gt; method to determine whether the data object contains image data before retrieving it with the &lt;xref:System.Windows.Forms.DataObject.GetText%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The text to add to the data object.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.Windows.Forms.TextDataFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Creates a connection between a data object and an advisory sink.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Runtime.InteropServices.ComTypes.ADVF&gt; values that specifies a group of flags for controlling the advisory connection.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A pointer to the &lt;xref:System.Runtime.InteropServices.ComTypes.IAdviseSink&gt; interface on the advisory sink that will receive the change notification.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a DWORD token that identifies this connection.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You can use this token later to delete the advisory connection by passing it to &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise*&gt;.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If this value is zero, the connection was not established.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The advisory connection was created.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>E_NOTIMPL</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This method is not implemented on the data object.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>DV_E_LINDEX</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>There is an invalid value for &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&gt;; currently, only -1 is supported.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>DV_E_FORMATETC</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>There is an invalid value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pFormatetc</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>OLE_E_ADVISENOTSUPPORTED</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The data object does not support change notification.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Destroys a notification connection that had been previously established.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>A DWORD token that specifies the connection to remove.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Use the value returned by &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise*&gt; when the connection was originally established.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Creates an object that can be used to enumerate the current advisory connections.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>When this method returns, contains an <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that receives the interface pointer to the new enumerator object.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If the implementation sets <ph id="ph1">`enumAdvise`</ph> to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, there are no connections to advisory sinks at this time.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>This method supports the standard return value E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The enumerator object is successfully instantiated or there are no connections.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>OLE_E_ADVISENOTSUPPORTED</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This object does not support advisory notifications.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Creates an object for enumerating the &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structures for a data object.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>These structures are used in calls to &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.SetData<ept id="p1">*</ept>&gt;.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Runtime.InteropServices.ComTypes.DATADIR&gt; values that specifies the direction of the data.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The enumerator object was successfully created.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>E_NOTIMPL</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The direction specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">direction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not supported.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>OLE_S_USEREG</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Requests that OLE enumerate the formats from the registry.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Provides a standard &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure that is logically equivalent to a more complex structure.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Use this method to determine whether two different &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structures would return the same data, removing the need for duplicate rendering.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A pointer to a &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt;.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt; member is not significant in this case and should be ignored.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <ph id="ph1">`formatetIn`</ph>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The caller must allocate this structure and the &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc<bpt id="p1">*</bpt>&gt; method must fill in the data. To retrieve data in a subsequent call such as &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData<ept id="p1">*</ept>&gt;, the caller uses the supplied value of <ph id="ph1">`formatOut`</ph>, unless the value supplied is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>This value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method returns <bpt id="p2">&lt;xref uid="langword_csharp_DATA_S_SAMEFORMATETC" name="DATA_S_SAMEFORMATETC" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt; member is not significant in this case and should be ignored.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure is different from the one that was passed.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>DATA_S_SAMEFORMATETC</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structures are the same and <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">formatOut</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>DV_E_LINDEX</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>There is an invalid value for &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&gt;; currently, only -1 is supported.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>DV_E_FORMATETC</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>There is an invalid value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pFormatetc</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>OLE_E_NOTRUNNING</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The application is not running.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Obtains data from a source data object.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt; method, which is called by a data consumer, renders the data described in the specified &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure and transfers it through the specified &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; structure.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The caller then assumes responsibility for releasing the &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; structure.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A pointer to a &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to the &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; structure that indicates the storage medium containing the returned data through its &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; member, and the responsibility for releasing the medium through the value of its &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; member.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the receiver of the medium is responsible for releasing it; otherwise, &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; points to the <bpt id="p2">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface on the appropriate object so its <bpt id="p3">&lt;xref uid="langword_csharp_Release" name="Release" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> method can be called.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The medium must be allocated and filled in by &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt;.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>There is not enough memory to perform this operation.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Obtains data from a source data object.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>This method, which is called by a data consumer, differs from the &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt; method in that the caller must allocate and free the specified storage medium.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>A pointer to a &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Only one medium can be specified in &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt;, and only the following &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt; values are valid: &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt;, &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt;, &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt;, or &lt;xref:System.Runtime.InteropServices.ComTypes.TYMED&gt;.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt;, passed by reference, that defines the storage medium containing the data being transferred.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The medium must be allocated by the caller and filled in by &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere*&gt;.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The caller must also free the medium.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The implementation of this method must always supply a value of <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease&gt; member of the &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; structure that this parameter points to.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Determines whether the data object is capable of rendering the data described in the &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Objects attempting a paste or drop operation can call this method before calling &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt; to get an indication of whether the operation may be successful.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>A pointer to a &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format, medium, and target device to use for the query.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A subsequent call to &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*&gt; would probably be successful.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>DV_E_LINDEX</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>An invalid value for &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex&gt;; currently, only -1 is supported.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>DV_E_FORMATETC</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>An invalid value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pFormatetc</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>DV_E_TYMED</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>An invalid &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed&gt; value.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>DV_E_DVASPECT</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>An invalid &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect&gt; value.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>OLE_E_NOTRUNNING</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The application is not running.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Transfers data to the object that implements this method.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>This method is called by an object that contains a data source.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Forms.DataObject&gt; is cast to an &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.InteropServices.ComTypes.FORMATETC&gt; structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM&gt; structure, passed by reference, that defines the storage medium in which the data is being passed.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to specify that the data object called, which implements &lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject.SetData*&gt;, owns the storage medium after the call returns.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>This means that the data object must free the medium after it has been used by calling the <bpt id="p1">&lt;xref uid="langword_csharp_ReleaseStgMedium" name="ReleaseStgMedium" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>This method does not support the type of the underlying data object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>