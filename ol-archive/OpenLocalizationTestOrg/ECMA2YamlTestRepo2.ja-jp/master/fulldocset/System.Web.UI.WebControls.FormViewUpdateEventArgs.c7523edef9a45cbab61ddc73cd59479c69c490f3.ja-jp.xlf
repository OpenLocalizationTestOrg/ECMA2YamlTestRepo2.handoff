<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">579f8d0d383c6fe5033c32c8584009df97af3590</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.FormViewUpdateEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af6ebbaf725232e5274dcf21144e2044ff9f7dd9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bacfe214758dd8c40d1fb289d374ff2307523738</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.FormView.ItemUpdating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.FormView&gt; control raises the &lt;xref:System.Web.UI.WebControls.FormView.ItemUpdating&gt; event when an Update button (a button with its <ph id="ph1">`CommandName`</ph> property set to "Update") within the control is clicked, but before the &lt;xref:System.Web.UI.WebControls.FormView&gt; control updates the record.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A FormViewUpdateEventArgs object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the &lt;xref:System.Web.UI.WebControls.FormView&gt; control and to indicate whether the update operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To determine the value of the command argument, use the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To cancel the update operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you need to access the original key field values for the record being updated, use the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The original non-key field values can be accessed by using the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For a list of initial property values for an instance of the FormViewUpdateEventArgs class, see the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A&gt; constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.FormViewUpdateEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt; class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following table shows the initial property value for an instance of the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt; class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>|Property|Initial Value|   |--------------|-------------------|   |&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A&gt;|The value of the <ph id="ph1">`commandArgument`</ph> parameter.|      &gt; <ph id="ph2">[!NOTE]</ph> &gt;  This constructor is used primarily by control developers when raising events.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An optional command argument passed to the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the command argument for the update operation passed to the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you create an Update button for one of the templates in a &lt;xref:System.Web.UI.WebControls.FormView&gt; control, you can optionally specify a command argument for the button by using the &lt;xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName&gt; property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A&gt; property is provided as a convenient way to determine the value of the Update button's command argument.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The command argument for the update operation passed to the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.FormView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the original key field name/value pairs for the record to update.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The Keys property contains the original values of the key fields listed in the &lt;xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A&gt; property of a &lt;xref:System.Web.UI.WebControls.FormView&gt; control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the Keys property to access the original values of the key fields for the record to update.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you allow the user to update the values of the key fields, the Keys property contains the original key field values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The updated values are stored in the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Keys property returns an &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt; interface.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object contains &lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To access the field names, use the &lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt; property of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Similarly, you can access the field values by using the &lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Data source controls that rely on the field order (such as &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;) can access field values only by index.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of the original key field name/value pairs for the record to update.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the new field name/value pairs for the record to update.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use the NewValues property to access the new field values for the record to update.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you allow the user to update the values of the key fields, the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt; property contains the original key field values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The updated values are stored in the NewValues property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The NewValues property returns an &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt; interface.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object contains &lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To access the field names, use the &lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt; property of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Similarly, you can access the field values by using the &lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Data source controls that rely on the field order (such as &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;) can access field values only by index.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of the new field name/value pairs for the record to update.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the original non-key field name/value pairs for the record to update.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Use the OldValues property to access the original non-key field values for the updated record.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Some data source controls, such as the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; controls, support conflict detection (optimistic concurrency checking).</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt; property of one of these controls is set to <ph id="ph1">`ConflictOptions.CompareAllValues`</ph>, the original values of the record are compared against the values in the data source before an update operation is performed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If a record has been modified by another user concurrently, the record is not updated.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The OldValues property does not contain key fields.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you allow the user to update the values of the key fields, the original key field values are stored in the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The updated values are stored in the &lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A&gt; property returns an &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt; interface.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object contains &lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To access the field names, use the &lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt; property of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Similarly, you can access the field values by using the &lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Data source controls that rely on the field order (such as &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;) can access field values only by index.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of the original non-key field name/value pairs for the record to update.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>