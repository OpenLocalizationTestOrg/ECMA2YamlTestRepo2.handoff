<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">614f7b15487bc1abcfb2b9bfee3dd6c5669b23e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Hosting.AddInEnvironment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c32fda7794a43219a4c14df0dee3d05f2b585991</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95eb826e68cb9323eefeec7d9938727031c1a490</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to the application domain and process of an add-in.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use this class to load add-ins into a desired environment, which can be one of the following:      -   An existing application domain for which you have the &lt;xref:System.AppDomain&gt; object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>-   An application domain that was automatically generated to activate an add-in.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   An existing external process.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To obtain the AddInEnvironment object for an add-in, pass the add-in's application domain to the AddInEnvironment class constructor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt; property of the &lt;xref:System.AddIn.Hosting.AddInController&gt; class to obtain the add-in's AddInEnvironment object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After you obtain the AddInEnvironment object, you can do the following:      -   Pass that AddInEnvironment object to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The add-in will be activated in the application domain and process that is represented by the AddInEnvironment object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   Use the &lt;xref:System.AddIn.Hosting.AddInEnvironment.Process%2A&gt; property to obtain an &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Then pass that object to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The add-in will be activated in the process that is represented by the &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object but in a new application domain.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AddIn.Hosting.AddInEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise, you can use the &lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt; property of the &lt;xref:System.AddIn.Hosting.AddInController&gt; class to obtain the &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The application domain that contains the add-in.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;appDomain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Full-trust permission is demanded.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A caller in the call chain does not have sufficient permission.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.AddIn.Hosting.AddInProcess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the process in which the add-in is running.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use this property to activate multiple add-ins in the same process but in different domains.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Pass the &lt;xref:System.AddIn.Hosting.AddInProcess&gt; object obtained with this property to the appropriate &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method overload.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you want to activate them in the same domain in an external process you should pass the &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object directly to the &lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName&gt; method overload.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The process in which the add-in is running.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>