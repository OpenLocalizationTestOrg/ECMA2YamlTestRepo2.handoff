<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72658bf2c16c545341dc3ab447e5f77f12a9ef75</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Devices.Keyboard.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d324d555e53c7dc0a3ec00ab83993915227eef1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c6ef3847ea33e1a04011b3a899ccecc9ec0b18a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard`</ph> object provides an interface to the computer's keyboard.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The properties of the <ph id="ph1">`My.Computer.Keyboard`</ph> provide information about the state of several special keys.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method lets you send keys to the active window as if they have been typed at the keyboard.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Tasks    The following table lists an example of a task involving the <ph id="ph1">`My.Computer.Keyboard`</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |To|See|   |Send keystrokes to an application|<bpt id="p1">[</bpt>How to: Start an Application and Send it Keystrokes (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Console Application|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Windows Control Library|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p6">**</bpt>Yes<ept id="p6">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Devices.Keyboard"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if the ALT key is down.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.AltKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the ALT key is down; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if CAPS LOCK is turned on.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only the state of CAPS LOCK is returned.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if CAPS LOCK is turned on; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if a CTRL key is down.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.CtrlKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a CTRL key is down; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if the NUM LOCK key is on.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Only the state of the NUM LOCK key is returned.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if NUM LOCK is on; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating whether the SCROLL LOCK key is on.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Only the state of the SCROLL LOCK key is returned.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if SCROLL LOCK is on; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Sends one or more keystrokes to the active window, as if typed on the keyboard.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wait`</ph> argument is useful if the other application must finish before your application can continue.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Calling Windows APIs<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters, such as <ph id="ph1">`a`</ph> for the character "a", or <ph id="ph2">`{ENTER}`</ph> for the ENTER key.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To combine a key with SHIFT, precede the key code with <ph id="ph1">`+`</ph> (plus sign).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To combine a key with CTRL, precede the key code with <ph id="ph1">`^`</ph> (caret).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To combine a key with ALT, precede the key code with <ph id="ph1">`%`</ph> (percent sign).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>key number<ept id="p1">*</ept><ph id="ph2">`}`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You must put a space between <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>number<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`{LEFT 42}`</ph> means "press the LEFT ARROW key 42 times"; <ph id="ph2">`{h 10}`</ph> means "press 'h' 10 times."</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the keys to send.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A partial-trust situation exists in which the user lacks necessary permissions.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sends one or more keystrokes to the active window, as if typed on the keyboard.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wait`</ph> argument is useful if the other application must finish before your application can continue.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Calling Windows APIs<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters, such as <ph id="ph1">`a`</ph> for the character "a", or <ph id="ph2">`{ENTER}`</ph> for the ENTER key.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To combine a key with SHIFT, precede the key code with <ph id="ph1">`+`</ph> (plus sign).</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To combine a key with CTRL, precede the key code with <ph id="ph1">`^`</ph> (caret).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To combine a key with ALT, precede the key code with <ph id="ph1">`%`</ph> (percent sign).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>key number<ept id="p1">*</ept><ph id="ph2">`}`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You must put a space between <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>number<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`{LEFT 42}`</ph> means "press the LEFT ARROW key 42 times"; <ph id="ph2">`{h 10}`</ph> means "press 'h' 10 times."</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the keys to send.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies whether or not to wait for keystrokes to get processed before the application continues.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by default.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A partial-trust situation exists in which the user lacks necessary permissions.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if a SHIFT key is down.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.ShiftKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a SHIFT key is down; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>