<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1de68d54f496c5247c15cb046f8da4f71e412ec0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Configuration.HttpListenerElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0837e8679eca0098dd19df6b2509380d67b8f7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59edbbb1e332212a1ef8b10439ccbd713e604ef6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the HttpListener element in the configuration file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the default timeout elements used for an <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerTimeoutsElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The timeout elements used for an <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates if <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses the raw unescaped URI instead of the converted URI.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnescapeRequestUrl property indicates if &lt;xref:System.Net.HttpListener&gt; uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Net.HttpListener&gt; instance receives a request through the <ph id="ph1">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id="ph2">`http.sys`</ph>, and exposes it as the &lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName&gt; property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service exposes two request URI strings:      -   Raw URI      -   Converted URI       The raw URI is the &lt;xref:System.Uri?displayProperty=fullName&gt; provided in the request line of a HTTP request:       <ph id="ph2">`GET /path/`</ph>       <ph id="ph3">`Host: www.contoso.com`</ph>       The raw URI provided by <ph id="ph4">`http.sys`</ph> for the request mentioned above, is "/path/".</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This represents the string following the HTTP verb as it was sent over the network.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is done by comparing the information from the request with a set of registered URI prefixes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HTTP Server SDK documentation refers to this converted URI as the <bpt id="p1">[</bpt>HTTP_COOKED_URL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=166108)</ept> structure.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the sample above the converted URI would be as follows:       <ph id="ph1">`http://www.contoso.com/path/`</ph>       The <ph id="ph2">`http.sys`</ph> service combines the &lt;xref:System.Uri.Host%2A?displayProperty=fullName&gt; property value and the string in the request line to create a converted URI.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, <ph id="ph1">`http.sys`</ph> and the &lt;xref:System.Uri?displayProperty=fullName&gt; class also do the following:      -   Un-escapes all percent encoded values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Executes other normalization steps, like path compression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore <ph id="ph1">`http.sys`</ph> provides two registry keys for modifying the process:      |Registry Key|Default Value|Description|   |------------------|-------------------|-----------------|   |EnableNonUTF8|1|If zero, <ph id="ph2">`http.sys`</ph> accepts only UTF-8-encoded URLs.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.|   |FavorUTF8|1|If non-zero, <ph id="ph2">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If zero (and EnableNonUTF8 is non-zero), <ph id="ph1">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|       When &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the converted URI from <ph id="ph2">`http.sys`</ph> as input to the &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a need for supporting characters besides characters and numbers in URIs.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is the following URI, which is used to retrieve customer information for customer number "1/3812":       <ph id="ph1">`http://www.contoso.com/Customer('1%2F3812')/`</ph>       Note the percent-encoded slash in the Uri (%2F).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary, since in this case the slash character represents data and not a path delimiter.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing the string to Uri constructor will lead to the following URI:       <ph id="ph1">`http://www.contoso.com/Customer('1/3812')/`</ph>       Splitting the path into its segments would result in the following elements:       <ph id="ph2">`Customer('1`</ph>       <ph id="ph3">`3812')`</ph>       This is not the intent of the sender of the request.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the UnescapeRequestUrl property is set to false, then when the &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the raw URI instead of the converted URI from <ph id="ph1">`http.sys`</ph> as input to the &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates if <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses the raw unescaped URI, rather than the converted URI.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>