<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd80760ffc9824e4265132af33368a07bbde0f68</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.ScrollableControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18b79ca0c2e8d263b8c387ec1906d8ea7b184f5a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fe0398c16ed729543aff0bad0fda5cba5362082</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a base class for controls that support auto-scrolling behavior.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not typically use the ScrollableControl class directly.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.ContainerControl&gt; and &lt;xref:System.Windows.Forms.Panel&gt; classes inherit from this class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollableControl class acts as a base class for controls that require the ability to scroll.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable a control to display scroll bars as needed, set the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property to <ph id="ph1">`true`</ph> and set the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollMinSize%2A&gt; property to the desired size.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the control is sized smaller than the specified minimum size, or a child control is located outside the bounds of the control, the appropriate scroll bars are displayed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To manually override which scroll bars are visible, set the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either property is set to <ph id="ph1">`false`</ph>, the corresponding scroll bar is not visible, even if the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt; event to know when the user or code scrolls the client area.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding controls programmatically to a form, use the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt; property to position the control either inside or outside of the current viewable scroll area.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default ScrollableControl constructor performs the following actions:      -   Marks the current instance as a container control by calling the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method to set the &lt;xref:System.Windows.Forms.ControlStyles&gt; style to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Enables background erasing by setting the &lt;xref:System.Windows.Forms.ControlStyles&gt; to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Disables auto-scrolling by calling the &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; method to set the &lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling&gt; bit to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When required, the AdjustFormScrollbars method lays out the client area, including resizing the display area as required to accommodate the scroll bars.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to show the scroll bars; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph>, this property enables the container to have a virtual size that is larger than its visible boundaries.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is currently a limitation in Windows Forms that prevents all classes derived from &lt;xref:System.Windows.Forms.ScrollableControl&gt; from acting properly when both &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; is enabled and AutoScroll is set to &lt;xref:System.Windows.Forms.RightToLeft&gt;.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, let's say that you place a control such as &lt;xref:System.Windows.Forms.Panel&gt;—or a container class derived from &lt;xref:System.Windows.Forms.Panel&gt; (such as &lt;xref:System.Windows.Forms.FlowLayoutPanel&gt; or &lt;xref:System.Windows.Forms.TableLayoutPanel&gt;)—on your form.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set AutoScroll on the container to &lt;xref:System.Windows.Forms.RightToLeft&gt; and then set the &lt;xref:System.Windows.Forms.Control.Anchor%2A&gt; property on one or more of the controls inside of the container to &lt;xref:System.Windows.Forms.AnchorStyles&gt;, then no scrollbar ever appears.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class derived from &lt;xref:System.Windows.Forms.ScrollableControl&gt; acts as if AutoScroll were set to &lt;xref:System.Windows.Forms.RightToLeft&gt;.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currently, the only workaround is to nest the &lt;xref:System.Windows.Forms.ScrollableControl&gt; inside another &lt;xref:System.Windows.Forms.ScrollableControl&gt;.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if you need &lt;xref:System.Windows.Forms.TableLayoutPanel&gt; to work in this situation, you can place it inside of a &lt;xref:System.Windows.Forms.Panel&gt; control and set AutoScroll on the &lt;xref:System.Windows.Forms.Panel&gt; to &lt;xref:System.Windows.Forms.RightToLeft&gt;.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  AutoScroll maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; or &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; property to <ph id="ph1">`true`</ph> has no effect when AutoScroll is enabled.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the container enables auto-scrolling; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the size of the auto-scroll margin.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The auto-scroll margin is the distance between any child controls and the edges of the scrollable parent control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AutoScrollMargin size is added to the size of any child controls contained in the scrollable control to determine whether or not scroll bars are needed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AutoScrollMargin property is evaluated when the parent scrollable control is resized or the individual child controls are brought into view, and is used to determine if scroll bars must be displayed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Docked controls are excluded from the calculations that determine if scroll bars must be displayed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a docked control's &lt;xref:System.Windows.Forms.Control.Dock%2A&gt; property is set to &lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;, the control fills the parent scrollable control and the docked control is ignored when using the AutoScrollMargin to determine whether scroll bars are needed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the distance from the edge of a child control to the parent scrollable control is less than the value assigned to the AutoScrollMargin property and the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property is set to <ph id="ph1">`true`</ph>, the appropriate scroll bar is displayed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  We recommend, when docking controls within a scrollable control, that you add a child scrollable control, such as a &lt;xref:System.Windows.Forms.Panel&gt;, to contain any other controls that might require scrolling.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should add the child &lt;xref:System.Windows.Forms.Panel&gt; control to the scrollable control and its &lt;xref:System.Windows.Forms.Control.Dock%2A&gt; property set to &lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt; and its &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property of the parent scrollable control to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the height and width of the auto-scroll margin in pixels.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Drawing.Size.Height<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Drawing.Size.Width<ept id="p1">*</ept>&gt; value assigned is less than 0.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum size of the auto-scroll.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AutoScrollMinSize property is used to manage the screen size allocated to the automatic scroll bars.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that determines the minimum size of the virtual area through which the user can scroll.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the auto-scroll position.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AutoScrollPosition property represents the location of the visible portion of a scrollable control.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the portion of the control that is displayed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding controls programmatically to a form, use the AutoScrollPosition property to position the control either inside or outside of the current viewable scroll area.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; coordinate values retrieved are negative if the control has scrolled away from its starting position (0,0).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property, you must always assign positive &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; values to set the scroll position relative to the starting position.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have a horizontal scroll bar and you set x and y to 200, you move the scroll 200 pixels to the right; if you then set x and y to 100, the scroll appears to jump the left by 100 pixels, because you are setting it 100 pixels away from the starting position.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the first case, AutoScrollPosition returns {-200, 0}; in the second case, it returns {-100,0}.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To detect when AutoScrollPosition changes, create an event handler for the &lt;xref:System.Windows.Forms.Control.Paint&gt; event, save the old position value in a private variable, and compare the new value to the old value on subsequent &lt;xref:System.Windows.Forms.Control.Paint&gt; events.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the auto-scroll position in pixels.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the required creation parameters when the handle to the control is created.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the rectangle that represents the virtual display area of the control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property is set to <ph id="ph1">`true`</ph>, the DisplayRectangle property is the virtual size and position of the &lt;xref:System.Windows.Forms.ScrollableControl&gt; control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the width and height of the &lt;xref:System.Windows.Forms.ScrollableControl&gt; are both 100 pixels and the control contains controls that extend beyond its boundaries, DisplayRectangle represents the size the &lt;xref:System.Windows.Forms.ScrollableControl&gt; needs to be to include the contained controls.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the &lt;xref:System.Drawing.Rectangle.X%2A&gt; and &lt;xref:System.Drawing.Rectangle.Y%2A&gt; properties of DisplayRectangle are relevant to the scroll position of the &lt;xref:System.Windows.Forms.ScrollableControl&gt;.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the display area of the control.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the dock padding settings for all edges of the control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property controls the border inside of this control for docked components.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Forms.ScrollableControl.DockPaddingEdges&gt; that represents the padding for all the edges of a docked control.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Determines whether the specified flag has been set.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the flags the &lt;xref:System.Windows.Forms.ScrollableControl&gt; control uses.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Value|Description|   |-----------|-----------------|   |&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling&gt;|A mask used to retrieve whether the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property is set to <ph id="ph1">`true`</ph>.|   |&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible&gt;|A mask used to retrieve whether the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; property is set to <ph id="ph2">`true`</ph>.|   |&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible&gt;|A mask used to retrieve whether the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; property is set to <ph id="ph3">`true`</ph>.|   |&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled&gt;|A mask used to retrieve whether the user has made the &lt;xref:System.Windows.Forms.ScrollableControl&gt; scroll.|   |&lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateFullDrag&gt;|A mask used to retrieve whether the user has enabled the full window drag-and-drop operation.|</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The flag to check.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified flag has been set; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the characteristics associated with the horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.HScrollProperties&gt; class contains information about the scroll bar and its operation, such as whether it is enabled and visible, the scroll page size, orientation, display position, and so on.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.HScrollProperties"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the horizontal scroll bar is visible.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality of the HScroll property can also be accomplished through calls to the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods using &lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible&gt; as the parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the HScroll or &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; properties to <ph id="ph1">`true`</ph> have no effect when &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; is enabled.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the horizontal scroll bar is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Control.MouseWheel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the vertical scroll bar is visible, which means that the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; property is set to <ph id="ph1">`true`</ph>, the mouse wheel scrolls through the &lt;xref:System.Windows.Forms.ScrollableControl&gt; control vertically.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if only the horizontal scroll bar is visible, which means that the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; is set to <ph id="ph1">`false`</ph> and the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; property to set to <ph id="ph2">`true,`</ph> the mouse wheel scrolls horizontally.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnMouseWheel method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Control.PaddingChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPaddingChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Paints the background of the control.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPaintBackground method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Control.RightToLeftChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollableControl.Scroll"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnScroll method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Control.VisibleChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Scales a control's location, size, padding and margin.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The factor by which the height and width of the control will be scaled.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.BoundsSpecified"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the bounds of the control to use when defining its size and position.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This method is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The horizontal scaling factor.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The vertical scaling factor.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Occurs when the user or code scrolls through the client area.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Scroll event occurs when the user scrolls through the client area by interacting with the scroll bars, or when the user navigates between controls and the active control scrolls into view.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Scroll event also occurs when you write code, such as setting the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScrollPosition%2A&gt; property, that scrolls through the client area.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Forms.ScrollEventArgs.ScrollOrientation%2A&gt; property in your event handler to determine the scroll bar orientation for the Scroll event.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Scrolls the specified child control into view on an auto-scroll enabled control.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property must be set to <ph id="ph1">`true`</ph>, and at least one of the scroll bars, horizontal or vertical, must also be visible, for the ScrollControlIntoView method to have an effect.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make the horizontal and vertical scroll bars visible, the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; properties, respectively, must be set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`activeControl`</ph> parameter is not a child control, no action takes place.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may raise the &lt;xref:System.Windows.Forms.ScrollableControl.Scroll&gt; event.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The child control to scroll into view.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Determines the value of the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll*&gt; property.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollStateAutoScrolling field is a mask.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use it with the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods to get and set the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Determines whether the user has enabled full window drag.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollStateFullDrag field is a mask.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods to get and set whether the user has enabled full window drag.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>When full window drag is enabled, the contents of windows are displayed when the user moves and sizes the windows.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Determines whether the value of the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollStateHScrollVisible field is a mask.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods to get and set the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Determines whether the user had scrolled through the <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollStateUserHasScrolled field is a mask.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; method to get whether the user had scrolled through the &lt;xref:System.Windows.Forms.ScrollableControl&gt;.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Determines whether the value of the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ScrollStateVScrollVisible field is a mask.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it with the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods to get and set the &lt;xref:System.Windows.Forms.ScrollableControl.VScroll%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Calculates the scroll offset to the specified child control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView%2A&gt; method uses the ScrollToControl method to calculate how far it must scroll to display the specified control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.Control.AutoScrollOffset%2A&gt; property of the child control is used to adjust the scrolled position.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>ScrollToControl does not cause scrolling; the &lt;xref:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation%2A&gt; method is typically used to subsequently scroll to the calculated position.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The child control to scroll into view.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The upper-left hand <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the display area relative to the client area required to scroll the control into view.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Sets the size of the auto-scroll margins.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The margin sets the width and height of the border around each control.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This margin is used to determine when scroll bars are needed on the container and where to scroll to when a control is selected.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a negative number is passed in as the <ph id="ph2">`x`</ph> or <ph id="ph3">`y`</ph> values, the value will be reset to 0.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Drawing.Size.Width*&gt; value.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Drawing.Size.Height*&gt; value.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Positions the display window to the specified value.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; property is set to <ph id="ph1">`true`</ph>, the &lt;xref:System.Windows.Forms.ScrollableControl.DisplayRectangle%2A&gt; property is the virtual size and position displayed client area of the &lt;xref:System.Windows.Forms.ScrollableControl&gt;.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the SetDisplayRectLocation method to scroll through the &lt;xref:System.Windows.Forms.ScrollableControl&gt; to the specified position.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The horizontal offset at which to position the <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The vertical offset at which to position the <bpt id="p1">&lt;xref href="System.Windows.Forms.ScrollableControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Sets the specified scroll state flag.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the bit parameter is set to one of the fields of the &lt;xref:System.Windows.Forms.ScrollableControl&gt; class, the SetScrollState method updates the state of the control to the <ph id="ph1">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the valid parameters and their values, see the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The scroll state flag to set.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The value to set the flag.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets the characteristics associated with the vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.VScrollProperties&gt; class contains information about the scroll bar and its operation, such as whether it is enabled and visible, the scroll page size, orientation, display position, and so on.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.VScrollProperties"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the vertical scroll bar is visible.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality of the VScroll property can also be accomplished through calls to the &lt;xref:System.Windows.Forms.ScrollableControl.GetScrollState%2A&gt; and &lt;xref:System.Windows.Forms.ScrollableControl.SetScrollState%2A&gt; methods using &lt;xref:System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible&gt; as the parameter.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; maintains the visibility of the scrollbars automatically.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, setting the &lt;xref:System.Windows.Forms.ScrollableControl.HScroll%2A&gt; or VScroll properties to <ph id="ph1">`true`</ph> have no effect when &lt;xref:System.Windows.Forms.ScrollableControl.AutoScroll%2A&gt; is enabled.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the vertical scroll bar is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The Windows <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>