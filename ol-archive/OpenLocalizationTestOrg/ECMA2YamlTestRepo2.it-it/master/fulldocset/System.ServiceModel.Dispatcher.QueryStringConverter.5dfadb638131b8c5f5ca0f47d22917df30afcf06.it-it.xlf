<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85258bc99773f880fcfe1a81fb0fd16cfcd5a582</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.QueryStringConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">309e0af260ebe96ead79fe9db3a1a74ee59cd405</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85d96c773104b256e9b64ae72a79599d6fb37502</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This class converts a parameter in a query string to an object of the appropriate type.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>It can also convert a parameter from an object to its query string representation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters can be specified in a query string within a URL.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class takes those parameters specified in a string and converts them into objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following contract is defined.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   [ServiceContract]   interface Calculator   {      [WebGet(UriTemplate="Add?n1={n1}&amp;n2={n2}")]      [OperationContract]      long Add(long n1, long n2);   }   ```</ph>       A <ph id="ph2">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service implements this interface and exposes it on an endpoint with the &lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt; at http://localhost:8000/MyCalcService.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Add`</ph> service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&amp;n2=5.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The QueryStringConverter receives this URL and converts the two parameters (n1 and n2) specified in the URL into two <ph id="ph1">`long`</ph> objects with the appropriate values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can derive a class from QueryStringConverter to control how query string parameters are mapped into a service operation's parameters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The QueryStringConverter supports the following types by default:      -   &lt;xref:System.Byte&gt;      -   &lt;xref:System.SByte&gt;      -   &lt;xref:System.Int16&gt;      -   &lt;xref:System.Int32&gt;      -   &lt;xref:System.Int64&gt;      -   &lt;xref:System.UInt16&gt;      -   &lt;xref:System.UInt32&gt;      -   &lt;xref:System.UInt64&gt;      -   &lt;xref:System.Single&gt;      -   &lt;xref:System.Double&gt;      -   &lt;xref:System.Char&gt;      -   &lt;xref:System.Decimal&gt;      -   &lt;xref:System.Boolean&gt;      -   &lt;xref:System.String&gt;      -   &lt;xref:System.DateTime&gt;      -   &lt;xref:System.TimeSpan&gt;      -   &lt;xref:System.Guid&gt;      -   &lt;xref:System.Byte&gt; array      -   &lt;xref:System.Uri&gt;      -   &lt;xref:System.Object&gt;      -   &lt;xref:System.DateTimeOffset&gt;      -   Enums      -   Types that have a <ph id="ph1">`TypeConverterAttribute`</ph> that can convert the type to and from a string representation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Dispatcher.QueryStringConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Determines whether the specified type can be converted to and from a string representation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to convert.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A value that specifies whether the type can be converted.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Converts a query string parameter to the specified type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`parameterType`</ph> is a value type and the parameter is <ph id="ph2">`null`</ph>, then the default value of the <ph id="ph3">`parameterType`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The string form of the parameter and value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to convert the parameter to.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The converted parameter.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The provided string does not have the correct format.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Converts a parameter to a query string representation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The parameter to convert.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the parameter to convert.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parameter name and value.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>