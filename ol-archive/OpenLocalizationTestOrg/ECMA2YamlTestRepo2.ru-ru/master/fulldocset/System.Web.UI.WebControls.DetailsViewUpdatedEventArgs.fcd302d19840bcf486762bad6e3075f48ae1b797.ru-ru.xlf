<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74afc315ff7432168659b64263696f056da5311a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02a343bbe3f2ed86e2ac13ab499c4935aab14756</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dd8e8c08889368b317b5f15419a9fc06d779f09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsView.ItemUpdated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control raises the &lt;xref:System.Web.UI.WebControls.DetailsView.ItemUpdated&gt; event when an Update button (a button with its <ph id="ph1">`CommandName`</ph> property set to "Update") within the control is clicked, but after the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control updates the record.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DetailsViewUpdatedEventArgs object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of records affected by the update operation, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt; property to determine whether any exceptions occurred.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also indicate whether the exception was handled in the event handler by setting the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to access the key field values for the updated record, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original and updated non-key field values can be accessed using the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A&gt; and &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A&gt; properties, respectively.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control returns to the mode specified by the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property after an update operation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To keep the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control in edit mode, set the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of the DetailsViewUpdatedEventArgs class, see the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A&gt; constructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&gt; class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&gt; class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A&gt;|The value of the <ph id="ph1">`affectedRows`</ph> parameter.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt;|The &lt;xref:System.Exception?displayProperty=fullName&gt; object contained in the <ph id="ph2">`e`</ph> parameter.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt;|Initialized to <ph id="ph3">`false`</ph>.|   |&lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A&gt;|Initialized to <ph id="ph4">`false`</ph>.|      &gt; <ph id="ph5">[!NOTE]</ph> &gt;  This constructor is used primarily by control developers when raising events.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the update operation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that represents the exception raised when the update operation was performed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If no exception is raised, use <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the number of rows affected by the update operation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AffectedRows property to determine the number of rows affected by the update operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is commonly used to verify that the appropriate number of rows was updated.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the update operation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the exception (if any) that was raised during the update operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Exception property to determine the exception (if any) that was raised during the update operation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no exceptions were raised, this property returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an exception was raised and you decide to handle the exception in the event handler, be sure to set the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A&gt; property to <ph id="ph2">`true`</ph>; otherwise, the exception is passed to the next method on the call stack for handling.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that represents the exception that was raised during the update operation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an exception is raised during the update operation, use the ExceptionHandled property to indicate whether the exception was handled in the event handler.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the exception is considered handled and is not passed further up the call stack.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`false`</ph>, the exception is passed to the next method on the call stack for handling.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which exception was raised, use the &lt;xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the exception was handled in the event handler; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DetailsView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control should remain in edit mode after an update operation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control returns to the mode specified by the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property after an update operation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the KeepInEditMode property to specify whether the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control should remain in edit mode.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To keep the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control in edit mode, set this property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property should be used if you want to override the default mode at a specific occasion.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control needs to remain in edit mode by default, set the &lt;xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A&gt; property instead.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remain in edit mode after an update operation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the key field name/value pairs for the updated record.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Keys property to access the values of the key field for an updated record.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Keys property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of key field name/value pairs for the updated record.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the new field name/value pairs for the updated record.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the NewValues property to access the new field values for the updated record.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The NewValues property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of the new field name/value pairs for the updated record.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the original field name/value pairs for the updated record.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the OldValues property to access the original field values for the updated record.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use these values to keep a log of updated records.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OldValues property returns an object that implements the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; interface.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object contains &lt;xref:System.Collections.DictionaryEntry&gt; objects that represent the fields of the updated record.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  As a shortcut, you can also use the indexer of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; object to access the field values directly.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a dictionary of the original field name/value pairs for the updated record.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>