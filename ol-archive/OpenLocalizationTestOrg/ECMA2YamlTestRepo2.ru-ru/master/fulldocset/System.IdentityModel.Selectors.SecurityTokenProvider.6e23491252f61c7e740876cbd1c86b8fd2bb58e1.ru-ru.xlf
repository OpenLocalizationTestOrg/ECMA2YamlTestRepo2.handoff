<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd84abc70fea4edbbdace6d74eb3dd7160477374</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Selectors.SecurityTokenProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8c099ca40ff1ad2ef8c20e833301d9b14a82b23</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a64aeac31f5a188a3732ea566a84f19052e2b052</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a security token provider that handles security tokens for a SOAP message sender.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SecurityTokenProvider class when custom security tokens are required.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The role of a security token provider is to get a security token when a SOAP message is sent by a client and a security token is used to authenticate the client or to protect the SOAP message.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method is called to get a security token.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security token provider can also be called to cancel and renew a security using the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt; class implement the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A&gt; method to determine which security token provider is required for a given security token.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager&gt; and &lt;xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&gt; classes provide the default implementations for built-in security token types.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom security token scenarios, you must derive a class from one of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt;, &lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager&gt;, or &lt;xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&gt; classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> creating a custom token, see <bpt id="p1">[</bpt>How to: Create a Custom Token<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to cancel a security token.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cancel.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to cancel a security token.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cancel.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to get a security token.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginGetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to get a security token.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you are not required to override the BeginGetTokenCore method, unless you must provide your own asynchronous implementation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A&gt; method calls the BeginGetTokenCore method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation that renews a security token.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginRenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to renew.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation that renews a security token.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you are not required to override the BeginRenewTokenCore method, unless you must provide your own asynchronous implementation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A&gt; method calls the BeginRenewTokenCore method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to renew.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Cancels a security token.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CancelToken method calls &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cancel.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Cancels a security token.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A&gt; method calls CancelTokenCore method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to cancel.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to cancel a security token.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EndCancelToken method calls &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*&gt; method.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to cancel a security token.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you are not required to override the EndCancelTokenCore method, unless you must provide your own asynchronous implementation.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A&gt; method calls EndCancelTokenCore method.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*&gt; method.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to get a security token.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EndGetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*&gt; method.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to get a security token.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you are not required to override the EndGetTokenCore method, unless you must provide your own asynchronous implementation.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A&gt; method calls the EndGetTokenCore method.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*&gt; method.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to renew a security token.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EndRenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*&gt; method.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token that is renewed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to renew the security token.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you are not required to override the EndRenewTokenCore method, unless you must provide your own asynchronous implementation.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A&gt; method calls the EndRenewTokenCore method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*&gt; method.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token that is renewed.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets a security token.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetToken method is called by the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class when a client sends a SOAP message and a security token is required.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases the <ph id="ph1">`timeout`</ph> parameter is not used by derived classes of &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; such as &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider&gt;.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, sometimes retrieving a security token involves distributed messaging.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is &lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider&gt; used in a federated service.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases the <ph id="ph1">`timeout`</ph> parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token to get.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets a security token.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method is called by the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class when a client sends a SOAP message and a security token is required.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method calls the GetTokenCore method.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token to get.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Renews a security token.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to renew.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token that is renewed.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Renews a security token.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A&gt; method calls the RenewTokenCore method.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to renew.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token that is renewed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the security token can be cancelled.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the security token can be cancelled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the security token is renewable.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the security token can be renewed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>