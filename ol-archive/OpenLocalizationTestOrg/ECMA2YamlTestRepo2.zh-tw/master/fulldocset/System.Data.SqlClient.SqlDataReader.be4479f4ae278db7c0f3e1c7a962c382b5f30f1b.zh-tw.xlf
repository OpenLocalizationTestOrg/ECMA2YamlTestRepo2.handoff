<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6394e0e2cf45005e24a4b98b9053f525e3f3a5cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlDataReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">197d9bbadb53bfa2c8bfa8ea6ad238254d3750b8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fddeea18fe35a9ebb34e4e88e62c4655e77c2473</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way of reading a forward-only stream of rows from a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To create a SqlDataReader, you must call the &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt; method of the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object, instead of directly using a constructor.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>While the SqlDataReader is being used, the associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; is busy serving the SqlDataReader, and no other operations can be performed on the &lt;xref:System.Data.SqlClient.SqlConnection&gt; other than closing it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is the case until the &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt; method of the SqlDataReader is called.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, you cannot retrieve output parameters until after you call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Changes made to a result set by another process or thread while data is being read may be visible to the user of the <ph id="ph1">`SqlDataReader`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, the precise behavior is timing dependent.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt; and &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the SqlDataReader is closed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Although the &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; property may be accessed while the SqlDataReader exists, always call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt; before returning the value of &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; to guarantee an accurate return value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When using sequential access (&lt;xref:System.Data.CommandBehavior?displayProperty=fullName&gt;), an &lt;xref:System.InvalidOperationException&gt; will be raised if the SqlDataReader position is advanced and another read operation is attempted on the previous column.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For optimal performance, SqlDataReader avoids creating unnecessary objects or making unnecessary copies of data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Therefore, multiple calls to methods such as &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt; return a reference to the same object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use caution if you are modifying the underlying value of the objects returned by methods such as &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Closes the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must explicitly call the Close method when you are through using the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; to use the associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; for any other purpose.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Close`</ph> method fills in the values for output parameters, return values and <ph id="ph2">`RecordsAffected`</ph>, increasing the time that it takes to close a <ph id="ph3">`SqlDataReader`</ph> that was used to process a large or complex query.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the return values and the number of records affected by a query are not significant, the time that it takes to close the <ph id="ph1">`SqlDataReader`</ph> can be reduced by calling the &lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt; method of the associated &lt;xref:System.Data.SqlClient.SqlCommand&gt; object before calling the <ph id="ph2">`Close`</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Do not call <ph id="ph2">`Close`</ph> or <ph id="ph3">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id="ph4">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the depth of nesting for the current row.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The outermost table has a depth of zero.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The depth of nesting for the current row.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the number of columns in the current row.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Executing a query that, by its nature, does not return rows (such as a DELETE query), sets FieldCount to 0.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>this should not be confused with a query that returns 0 rows (such as SELECT <ph id="ph1">\*</ph> FROM <bpt id="p1">*</bpt>table<ept id="p1">*</ept> WHERE 1 = 2) in which case FieldCount returns the number of columns in the table, including hidden fields.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A&gt; to exclude hidden fields.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is -1.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There is no current connection to an instance of SQL Server.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a Boolean.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value of the column.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a byte.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a byte.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a byte.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>GetBytes returns the number of available bytes in the field.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Most of the time this is the exact length of the field.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is reading a large data structure into a buffer.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, GetBytes returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a byte array.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The index within the field from which to begin the read operation.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The index within the <ph id="ph1">`buffer`</ph> where the write operation is to start.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The maximum length to copy into the buffer.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The actual number of bytes read.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a single character.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Not supported for &lt;xref:System.Data.SqlClient&gt;.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>GetChars returns the number of available characters in the field.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Frequently this is the exact length of the field.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is reading a large data structure into a buffer.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The actual number of characters read can be less than the requested length, if the end of the field is reached.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, GetChars returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>the data retrieved must already be a character array.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The GetChars method returns 0 when <ph id="ph2">`dataIndex`</ph> is negative.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The index within the field from which to begin the read operation.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The index within the <ph id="ph1">`buffer`</ph> where the write operation is to start.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The maximum length to copy into the buffer.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The actual number of characters read.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets a string representing the data type of the specified column.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns the name of the back-end data type.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`numeric`</ph> is a synonym in SQL Server for the <ph id="ph2">`decimal`</ph> data type.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetDataTypeName`</ph> will return "decimal" for a column defined as either decimal or numeric.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The zero-based ordinal position of the column to find.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The string representing the data type of the specified column.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a &lt;xref:System.DateTime&gt; object.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.DateTime&gt; object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified column as a &lt;xref:System.DateTimeOffset&gt; object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.DateTimeOffset&gt; object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a &lt;xref:System.Decimal&gt; object.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.Decimal&gt; object.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a double-precision floating point number.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>No conversions are performed.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Therefore, the data retrieved must already be a double-precision floating point number.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Although you can use this method to retrieve an explicit enumerator, in languages that support a <ph id="ph1">`foreach`</ph> construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; that is the data type of the object.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that is the data type of the object.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, <bpt id="p1">**</bpt>GetFieldType<ept id="p1">**</ept> returns null.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a single-precision floating point number.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>No conversions are performed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Therefore, the data retrieved must already be a single-precision floating point number.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a globally unique identifier (GUID).</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a GUID.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 32-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 64-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified column.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The name of the specified column.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets the column ordinal, given the name of the column.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetOrdinal`</ph> performs a case-sensitive lookup first.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Unexpected results can occur when comparisons are affected by culture-specific casing rules.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The method throws an <ph id="ph1">`IndexOutOfRange`</ph> exception if the zero-based column ordinal is not found.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetOrdinal`</ph> is kana-width insensitive.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id="ph1">`GetOrdinal`</ph> within a loop.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Save time by calling <ph id="ph1">`GetOrdinal`</ph> once and assigning the results to an integer variable for use within the loop.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The name specified is not a valid column name.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider-specific field type.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; representing the column ordinal.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Object&gt; that is a representation of the underlying provider-specific field type.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider specific value.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; representing the column ordinal.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a representation of the underlying provider specific value.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Gets an array of objects that are a representation of the underlying provider specific values.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the column values.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The array of objects that are a representation of the underlying provider specific values.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For the GetSchemaTable method returns metadata about each column in the following order:      |DataReader column|Description|   |-----------------------|-----------------|   |AllowDBNull|Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Otherwise, not set.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A column may contain null values, even if it cannot be set to a null value.|   |BaseCatalogName|The name of the catalog in the data store that contains the column.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NULL if the base catalog name cannot be determined.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseColumnName|The name of the column in the data store.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This might be different than the column name returned in the ColumnName column if an alias was used.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseSchemaName|The name of the schema in the data store that contains the column.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A null value if the base schema name cannot be determined.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseServerName|The name of the instance of Microsoft SQL Server used by the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.|   |BaseTableName|The name of the table or view in the data store that contains the column.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A null value if the base table name cannot be determined.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |ColumnName|The name of the column; this might not be unique.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If this cannot be determined, a null value is returned.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This name always reflects the most recent renaming of the column in the current view or command text.|   |ColumnOrdinal|The zero-based ordinal of the column.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This column cannot contain a null value.|   |ColumnSize|The maximum possible length of a value in the column.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For columns that use a fixed-length data type, this is the size of the data type.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`nvarchar(MAX)`</ph>, <ph id="ph2">`varchar(MAX)`</ph>, and <ph id="ph3">`varbinary(MAX)`</ph> columns stored in a SQL Server database, the maximum size is 2GB.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This value changes when using the <ph id="ph1">`Type System Version`</ph> keyword in the connection string.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For new types they are represented as downlevel types.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The MAX data types return the normal 4k for <ph id="ph1">`nvarchar`</ph> and 8000 for <ph id="ph2">`varchar`</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information, see the Transact-SQL reference in SQL Server Books Online.|   |DataTypeName|Returns a string representing the data type of the specified column.|   |IsAliased|<ph id="ph1">`true`</ph>: The column name is an alias.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column name is not an alias.|   |IsAutoIncrement|<ph id="ph2">`true`</ph>: The column assigns values to new rows in fixed increments.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not assign values to new rows in fixed increments.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default of this column is <ph id="ph1">`false`</ph>.|   |IsColumnSet|<ph id="ph2">`true`</ph>: The column is a sparse column that is a member of a column set.|   |IsExpression|<ph id="ph3">`true`</ph>: The column is an expression.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not an expression.|   |IsHidden|<ph id="ph2">`true`</ph>: The column is hidden.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not hidden.|   |IsIdentity|<ph id="ph2">`true`</ph>: The column is an identity column.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not an identity column.|   |IsKey|<ph id="ph2">`true`</ph>: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The set of columns with <ph id="ph1">`IsKey`</ph> set to <ph id="ph2">`true`</ph> must uniquely identify a row in the rowset.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>There is no requirement that this set of columns is a minimal set of columns.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not required to uniquely identify the row.|   |IsLong|<ph id="ph2">`true`</ph>: The column contains a Binary Long Object (BLOB) that contains very long data.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The definition of very long data is provider-specific.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not contain a Binary Long Object (BLOB) that contains very long data.|   |IsReadOnly|<ph id="ph2">`true`</ph>: The column cannot be modified.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column can be modified.|   |IsRowVersion|<ph id="ph2">`true`</ph>: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|   |IsUnique|<ph id="ph2">`true`</ph>: Column is of type <ph id="ph3">`timestamp`</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: Column is not of type <ph id="ph2">`timestamp`</ph>.|   |NonVersionedProviderType|The type of the column irrespective of the current <ph id="ph3">`Type System Version`</ph> specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The returned value is from the &lt;xref:System.Data.SqlDbType&gt; enumeration.|   |NumericPrecision|If <ph id="ph1">`ProviderType`</ph> is a numeric data type, this is the maximum precision of the column.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The precision depends on the definition of the column.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ProviderType`</ph> is not a numeric data type, this is 255.|   |NumericScale|If <ph id="ph2">`ProviderType`</ph> is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Otherwise, this is 255.|   |ProviderSpecificDataType|Returns the provider-specific data type of the column based on the <ph id="ph1">`Type System Version`</ph> keyword in the connection string.|   |ProviderType|The indicator of the column's data type.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>If the data type of the column varies from row to row, this must be Object.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This column cannot contain a null value.|   |UdtAssemblyQualifiedName|If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per &lt;xref:System.Type.AssemblyQualifiedName%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>If the column is not a UDT, this is null.|   |XmlSchemaCollectionDatabase|The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>It is also null if there is no schema collection, in which case the <ph id="ph1">`XmlSchemaCollectionName`</ph> and <ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.|   |XmlSchemaCollectionName|The name of the schema collection for this XML instance, if the row contains information about an XML column.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there is no associated schema collection.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If the value is null, the <ph id="ph1">`XmlSchemaCollectionDatabase`</ph> and <ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.|   |XmlSchemaCollectionOwningSchema|The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>It is also null if there is no schema collection, in which case the <ph id="ph1">`XmlSchemaCollectionDatabase`</ph> and <ph id="ph2">`XmlSchemaCollectionName`</ph> columns are also null.|      &gt; <ph id="ph3">[!NOTE]</ph> &gt;  To make sure that metadata columns return the correct information, you must call &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt; with the <ph id="ph4">`behavior`</ph> parameter set to <ph id="ph5">`KeyInfo`</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The value of the column.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Returns the data value in the specified column as a SQL Server type.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>GetSqlValue returns data using the native SQL Server types.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To retrieve data using the .NET Framework types, see &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlDbType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Fills an array of &lt;xref:System.Object&gt; that contains the values for all the columns in the record, expressed as SQL Server types.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The length of the &lt;xref:System.Object&gt; array does not need to match the number of columns in the record.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the record.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array, starting at the column with ordinal 0.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Any remaining columns are untouched.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the values.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The column values are expressed as SQL Server types.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of columns copied.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an XML value.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be an XML value.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that contains the XML stored within the corresponding field.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>An attempt was made to read or access columns in a closed <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The retrieved data is not compatible with the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Retrieves binary, image, varbinary, UDT, and variant data types as a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream.ReadTimeout%2A&gt; defaults to the value of &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;; but you can modify &lt;xref:System.IO.Stream.ReadTimeout%2A&gt; via GetStream.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Null values will be returned as an empty (zero bytes) &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetStream when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.IO.Stream&gt; are thrown as &lt;xref:System.IO.IOException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The following &lt;xref:System.IO.Stream&gt; members are not available for objects returned by GetStream:      -   BeginWrite      -   EndWrite      -   Length      -   Position      -   Seek      -   SetLength      -   Write      -   WriteByte      -   WriteTimeout       When the connection property <ph id="ph1">`ContextConnection=true`</ph>, GetStream only supports synchronous data retrieval for both sequential (&lt;xref:System.Data.CommandBehavior&gt;) and non-sequential (&lt;xref:System.Data.CommandBehavior&gt;) access.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A stream object.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The returned type was not one of the types below:      -   binary      -   image      -   varbinary      -   udt</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a string.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a string.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a &lt;xref:System.IO.TextReader&gt;.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.IO.TextReader&gt; are thrown as &lt;xref:System.IO.IOException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Null values will be returned as an empty (zero bytes) &lt;xref:System.IO.TextReader&gt;.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetTextReader when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>When the connection property <ph id="ph1">`ContextConnection=true`</ph>, GetTextReader only supports synchronous data retrieval for both sequential (&lt;xref:System.Data.CommandBehavior&gt;) and non-sequential (&lt;xref:System.Data.CommandBehavior&gt;) access.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The column to be retrieved.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The returned object.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The returned type was not one of the types below:      -   char      -   nchar      -   ntext      -   nvarchar      -   text      -   varchar</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified column as a &lt;xref:System.TimeSpan&gt; object.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.TimeSpan&gt; object.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>GetValue returns data using the .NET Framework types.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for null database columns.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Populates an array of objects with the column values of the current row.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the resulting row.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the attribute columns.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Retrieves data of type XML as an &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; object returned by GetXmlReader does not support asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>If you require asynchronous operations on an &lt;xref:System.Xml.XmlReader&gt;, cast the XML column to an NVARCHAR(MAX) on the server and use &lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt; with &lt;xref:System.Xml.XmlReader.Create%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.Xml.XmlReader&gt; are thrown as &lt;xref:System.Xml.XmlException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetXmlReader when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The returned object.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The returned type was not xml.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains one or more rows.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains one or more rows; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean value that indicates whether the specified <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance has been closed.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>It is not possible to read from a &lt;xref:System.Data.SqlClient.SqlDataReader&gt; instance that is closed.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is closed; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> matches that of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> .</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is true, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> otherwise.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the column contains non-existent or missing values.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Call this method to check for null column values before calling the typed get methods (for example, &lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;, and so on) to avoid raising an error.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SqlDataReader_IsDbNull#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>SqlDataReader_IsDbNull#1<ept id="p4">](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;, which gets a value that indicates whether the column contains non-existent or missing values.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The zero-based column to be retrieved.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The cancellation instruction, which propagates a notification that operations should be canceled.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>This does not guarantee the cancellation.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A setting of <bpt id="p1">&lt;xref uid="langword_csharp_CancellationToken.None" name="CancellationToken.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> makes this method equivalent to &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The returned task must be marked as cancelled.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id="p2">&lt;xref uid="langword_csharp_DBNull" name="DBNull" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column ordinal.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column name.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>A case-sensitive lookup is performed first.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Unexpected results can occur when comparisons are affected by culture-specific casing rules.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>This method is kana-width insensitive.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The column name.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>No column with the specified name was found.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>By default, the data reader is positioned on the first result.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more result sets; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.NextResult*&gt;, which advances the data reader to the next result, when reading the results of batch <ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph> statements.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Calling NextResultAsync more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Advances the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next record.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The default position of the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is before the first record.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Therefore, you must call Read to begin accessing any data.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Only one <ph id="ph1">`SqlDataReader`</ph> per associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; may be open at a time, and any attempt to open another will fail until the first one is closed.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Similarly, while the <ph id="ph1">`SqlDataReader`</ph> is being used, the associated <ph id="ph2">`SqlConnection`</ph> is busy serving it until you call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more rows; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.Read*&gt;, which advances the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next record.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`behavior`</ph> parameter of &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A&gt; is set to <ph id="ph2">`Default`</ph>, ReadAsync reads the entire row before returning the Task.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>For more information, including code samples, about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Calling ReadAsync more than once for the same instance before task completion.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The RecordsAffected property is not set until all rows are read and you close the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The value of this property is cumulative.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>For example, if two records are inserted in batch mode, the value of <ph id="ph1">`RecordsAffected`</ph> will be two.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt; and RecordsAffected are the only properties that you can call after the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is closed.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified column ordinal.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; instance is cast to an &lt;xref:System.IDataRecord&gt; interface.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>A column ordinal.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the specified column ordinal.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets the number of fields in the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that are not hidden.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>This value is used to determine how many fields in the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; are visible.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The hidden fields are always appended behind the visible fields.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The number of fields that are not hidden.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>