<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0aea1bc2d96181707a418cd8c8ee4844b5adf515</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Xsl.XslTransform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08b121400609411ad1b9aa8b1608436ed0ac34bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d956c49777dcccc1b389173263022113c31e762</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The XslTransform class is obsolete in the Microsoft .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XslTransform supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must use the namespace <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Additional arguments can also be added to the style sheet using the &lt;xref:System.Xml.Xsl.XsltArgumentList&gt; class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To transform XML data:      1.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create an XslTransform object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method to load the style sheet for the transformation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method has several overloads and can load a style sheet using an &lt;xref:System.Xml.XmlReader&gt;, &lt;xref:System.Xml.XPath.XPathNavigator&gt;, &lt;xref:System.Xml.XPath.IXPathNavigable&gt;, or a URL with the location of the file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method to transform the XML data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method has several overloads and can handle different types of input and output.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also specify an &lt;xref:System.Xml.Xsl.XsltArgumentList&gt; containing additional arguments to use as input during the transformation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Considerations<ept id="p1">**</ept>       When creating an application that uses the XslTransform class, you should be aware of the following items and their implications:      -   Extension objects are enabled by default.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Xml.Xsl.XsltArgumentList&gt; object containing extension objects is passed to the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method, they are utilized.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   XSLT style sheets can include references to other files and embedded script blocks.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method and executes the transformation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These security issues can be mitigated by not accepting XslTransform objects, XSLT style sheets, or XML source data from untrusted sources.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Scripting Support<ept id="p1">**</ept>       This class supports embedded scripting using the <ph id="ph1">`msxsl:script`</ph> element.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-   If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This evidence includes the URI along with its site and zone.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   If the style sheet was loaded using another source, you can provide evidence by passing a &lt;xref:System.Security.Policy.Evidence?displayProperty=fullName&gt; object to the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Otherwise, the script assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Semi-trusted callers: <ph id="ph1">`UnmanagedCode`</ph> permission is required to compile the embedded script.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ControlEvidence`</ph> permission is required to provide &lt;xref:System.Security.Policy.Evidence&gt; to the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown if the caller does not have the necessary permissions.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`msxsl:script`</ph> element has the following requirements:      -   The <ph id="ph2">`msxsl:script`</ph> element belongs to the <ph id="ph3">`urn:schemas-microsoft-com:xslt`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The style sheet must include the namespace declaration <ph id="ph1">`xmlns:msxsl=urn:schemas-microsoft-com:xslt`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`msxsl:script`</ph> element can include a <ph id="ph2">`language`</ph> attribute that specifies the scripting language to use.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`language`</ph> attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because the language name is not case-sensitive, JavaScript and javascript are both valid.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`language`</ph> attribute is not specified, it defaults to JScript.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`msxsl:script`</ph> element must include an <ph id="ph2">`implements-prefix`</ph> attribute that contains the prefix representing the namespace associated with the script block.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This namespace must be defined within the style sheet.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A style sheet can include multiple script blocks which are grouped by namespace.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You cannot have script blocks with multiple languages within the same namespace.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the <ph id="ph1">`language`</ph> attribute).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you had a C# script block, comments would be prefixed by the <ph id="ph1">`//`</ph> characters.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The comments must be valid XML content.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Note`</ph> It is recommended that you wrap script blocks in a CDATA section.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;msxsl:script implements-prefix='xy' language='C#'&gt;     &lt;![CDATA[     // Add code here.     ]]&gt;   &lt;/msxsl:script&gt;   ```</ph>       Functions can be declared within the <ph id="ph2">`msxsl:script`</ph> element.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following table shows the namespaces that are supported by default.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>|Supported Namespaces|Description|   |--------------------------|-----------------|   |<ph id="ph1">`System`</ph>|System classes.|   |<ph id="ph2">`System.Collection`</ph>|Collection classes.|   |<ph id="ph3">`System.Text`</ph>|Text handling classes.|   |<ph id="ph4">`System.Xml`</ph>|Core XML classes.|   |<ph id="ph5">`System.Xml.Xsl`</ph>|XSLT classes.|   |<ph id="ph6">`System.Xml.XPath`</ph>|XML Path Language (XPath) classes.|       The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>|W3C Type|Equivalent .NET class|   |--------------|---------------------------|   |String (XPath)|<ph id="ph1">`System.String`</ph>|   |Boolean (XPath)|<ph id="ph2">`System.Boolean`</ph>|   |Number (XPath)|<ph id="ph3">`System.Double`</ph>|   |Result Tree Fragment (XSLT)|<ph id="ph4">`System.Xml.XPath.XPathNavigator`</ph>|   |Node Set (XPath)|<ph id="ph5">`System.Xml.XPath.XPathNodeIterator`</ph>|       If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`msxsl:script`</ph> and <ph id="ph4">`msxsl:node-list`</ph> are the only functions from the <ph id="ph5">`urn:schemas-microsoft-com:xslt`</ph> namespace that are supported by the XslTransform class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>XslTransform has the ability to utilize common language runtime (CLR) code as an extension mechanism.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is accomplished by passing an instance of a class to the XslTransform class and calling its public methods within an XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Methods that are defined with the <ph id="ph1">`params`</ph> keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>params<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>XSLT Transformations with the XslTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Xsl.XslTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet specified by a URL.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>External resources are resolved using an &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an &lt;xref:System.Xml.XmlResolver&gt; as one of its arguments and specify an &lt;xref:System.Xml.XmlResolver&gt; with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The URI of the style sheet is used to create evidence, which is applied to the assembly.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The URL that specifies the XSLT style sheet to load.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The loaded resource is not a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded script, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>External resources are resolved using an &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an &lt;xref:System.Xml.XmlResolver&gt; as one of its arguments and specify an &lt;xref:System.Xml.XmlResolver&gt; with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The style sheet loads from the current node of the &lt;xref:System.Xml.XmlReader&gt; through all its children.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This enables you to use a portion of a document as the style sheet.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>After the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method returns, the &lt;xref:System.Xml.XmlReader&gt; is positioned on the next node after the end of the style sheet.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the end of the document is reached, the &lt;xref:System.Xml.XmlReader&gt; is positioned at the end of file (EOF).</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If the style sheet contains entities, you should specify an &lt;xref:System.Xml.XmlReader&gt; that can resolve entities (&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName&gt; returns <ph id="ph1">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In this case, an &lt;xref:System.Xml.XmlValidatingReader&gt; can be used.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; object that contains the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>External resources are resolved using an &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an &lt;xref:System.Xml.XmlResolver&gt; as one of its arguments and specify an &lt;xref:System.Xml.XmlResolver&gt; with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The loaded resource is not a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>External resources are resolved using an &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an &lt;xref:System.Xml.XmlResolver&gt; as one of its arguments and specify an &lt;xref:System.Xml.XmlResolver&gt; with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The style sheet is loaded from the current position of the &lt;xref:System.Xml.XPath.XPathNavigator&gt;.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>After the Load method returns, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; is positioned at the beginning of the style sheet (on the <ph id="ph1">`xsl:style sheet`</ph> node).</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet specified by a URL.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The URI of the style sheet is used to create evidence, which is applied to the assembly.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The URL that specifies the XSLT style sheet to load.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use to load the style sheet and any style sheet(s) referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, a default <bpt id="p2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> with no user credentials is used to open the style sheet.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The default <bpt id="p1">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not used to resolve any external resources in the style sheet, so <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements are not resolved.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Load method completes.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The loaded resource is not a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded script, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The style sheet loads from the current node of the &lt;xref:System.Xml.XmlReader&gt; through all its children.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This enables you to use a portion of a document as the style sheet.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>After the Load method returns, the &lt;xref:System.Xml.XmlReader&gt; is positioned on the next node after the end of the style sheet.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If the end of the document is reached, the &lt;xref:System.Xml.XmlReader&gt; is positioned at the end of file (EOF).</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If the style sheet contains entities, you should specify an &lt;xref:System.Xml.XmlReader&gt; that can resolve entities (&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName&gt; returns <ph id="ph1">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In this case, an &lt;xref:System.Xml.XmlValidatingReader&gt; can be used.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; object that contains the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Load method completes.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; method.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Load*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The loaded resource is not a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The style sheet is loaded from the current position of the &lt;xref:System.Xml.XPath.XPathNavigator&gt;.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>After the Load method returns, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; is positioned at the beginning of the style sheet (on the <ph id="ph1">`xsl:style sheet`</ph> node).</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If the style sheet contains embedded scripting, the script is compiled to an assembly.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The assembly has full trust.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The recommended practice is to provide evidence using the &lt;xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the caller does not have <ph id="ph2">`UnmanagedCode`</ph> permission, the embedded script is not compiled and a &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Permissions.SecurityPermission&gt; and &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; for more information.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Load*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The style sheet contains embedded scripts, and the caller does not have <bpt id="p1">&lt;xref uid="langword_csharp_UnmanagedCode" name="UnmanagedCode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This method allows you to limit the permissions of the style sheet by specifying evidence.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This method loads the XSLT style sheet, including any style sheets referenced in <ph id="ph1">`xsl:include`</ph> and <ph id="ph2">`xsl:import`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The style sheet loads from the current node of the &lt;xref:System.Xml.XmlReader&gt; through all its children.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This enables you to use a portion of a document as the style sheet.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>After the Load method returns, the &lt;xref:System.Xml.XmlReader&gt; is positioned on the next node after the end of the style sheet.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If the end of the document is reached, the &lt;xref:System.Xml.XmlReader&gt; is positioned at the end of file (EOF).</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If the style sheet contains entities, you should specify an &lt;xref:System.Xml.XmlReader&gt; that can resolve entities (&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName&gt; returns <ph id="ph1">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>In this case, an &lt;xref:System.Xml.XmlValidatingReader&gt; can be used.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>There are different ways to provide evidence.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The following table describes what type of evidence to provide for common user scenarios.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; object containing the style sheet to load.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Load*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.Evidence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> set on the assembly generated for the script block in the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, script blocks are not processed, the XSLT <ph id="ph1">`document()`</ph> function is not supported, and privileged extension objects are disallowed.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The caller must have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission in order to supply evidence for the script assembly.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Semi-trusted callers can set this parameter to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The referenced style sheet requires functionality that is not allowed by the evidence provided.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The caller tries to supply evidence and does not have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This method allows you to limit the permissions of the style sheet by specifying evidence.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>There are different ways to provide evidence.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following table describes what type of evidence to provide for common user scenarios.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Load*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.Evidence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> set on the assembly generated for the script block in the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, script blocks are not processed, the XSLT <ph id="ph1">`document()`</ph> function is not supported, and privileged extension objects are disallowed.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The caller must have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission in order to supply evidence for the script assembly.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Semi-trusted callers can set this parameter to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The loaded resource is not a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The referenced style sheet requires functionality that is not allowed by the evidence provided.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The caller tries to supply evidence and does not have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Loads the XSLT style sheet contained in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This method allows you to limit the permissions of the style sheet by specifying evidence.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The style sheet is loaded from the current position of the &lt;xref:System.Xml.XPath.XPathNavigator&gt;.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>After the Load method returns, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; is positioned at the beginning of the style sheet (on the <ph id="ph1">`xsl:style sheet`</ph> node).</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>For issues with the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>There are different ways to provide evidence.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The following table describes what type of evidence to provide for common user scenarios.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the style sheet to load.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to load any style sheets referenced in <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Load*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.Evidence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> set on the assembly generated for the script block in the XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, script blocks are not processed, the XSLT <ph id="ph1">`document()`</ph> function is not supported, and privileged extension objects are disallowed.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The caller must have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission in order to supply evidence for the script assembly.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Semi-trusted callers can set this parameter to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The current node does not conform to a valid style sheet.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The referenced style sheet requires functionality that is not allowed by the evidence provided.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The caller tries to supply evidence and does not have <bpt id="p1">&lt;xref uid="langword_csharp_ControlEvidence" name="ControlEvidence" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the input file and outputs the result to an output file.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is obsolete in version 1.1 of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The URL of the source document to be transformed.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The URL of the output file.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlReader&gt; (the <ph id="ph2">`xsl:output`</ph> element is ignored).</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This method enables you to do an asynchronous transformation of the source document.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; containing the results of the transformation.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>After the transformation has been performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Xml.XmlReader&gt; provides read-only output, the <ph id="ph1">`xsl:output`</ph> element is ignored.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>This method enables you to do an asynchronous transformation of the source document.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is obsolete.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT document() function is resolved.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; containing the results of the transformation.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the input file and outputs the result to an output file.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The URL of the source document to be transformed.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The URL of the output file.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Transform*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The encoding attribute on an <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment, and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlReader&gt; (the <ph id="ph2">`xsl:output`</ph> element is ignored).</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>This method enables you to do an asynchronous transformation of the source document.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment, and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out, null);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; containing the results of the transformation.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlWriter&gt; (<ph id="ph2">`xsl:output`</ph> is ignored).</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;     &lt;template match="/"&gt;     Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>After the transformation has been performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>After the transformation is performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The encoding attribute on an <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>After the transformation has been performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Xml.XmlReader&gt; provides read-only output, the <ph id="ph1">`xsl:output`</ph> element is ignored.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>This method enables you to do an asynchronous transformation of the source document.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; containing the results of the transformation.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified args and outputs the result to an &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>After the transformation is performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>This means that the node, that is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlWriter&gt; (<ph id="ph2">`xsl:output`</ph> is ignored).</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is now obsolete.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The setting of the &lt;xref:System.Xml.Xsl.XslTransform.XmlResolver%2A&gt; property determines how the XSLT <ph id="ph1">`document()`</ph> function is resolved.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The recommended practice is to use the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method which takes an &lt;xref:System.Xml.XmlResolver&gt; object as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out, null);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Transform*&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>The encoding attribute on an <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out, null);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;      &lt;template match="/"&gt;        Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to an &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlWriter&gt; (<ph id="ph2">`xsl:output`</ph> is ignored).</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>To transform a node fragment, you must create an &lt;xref:System.Xml.XmlDocument&gt; containing just the node fragment and pass that &lt;xref:System.Xml.XmlDocument&gt; to the Transform method.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The following example performs a transformation on a node fragment.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   XslTransform xslt = new XslTransform();        xslt.Load("print_root.xsl");   XmlDocument doc = new XmlDocument();   doc.Load("library.xml");   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");   xslt.Transform(tmpDoc, null, Console.Out, null);   ```</ph>       The example uses the <ph id="ph2">`library.xml`</ph> and <ph id="ph3">`print_root.xsl`</ph> files as input and outputs the following to the console.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Passing &lt;book genre="novel" ISBN="1-861001-57-5"&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl    Root node is book.   ```</ph>       <ph id="ph2">`library.xml`</ph>      <ph id="ph3">```   &lt;library&gt;     &lt;book genre='novel' ISBN='1-861001-57-5'&gt;        &lt;title&gt;Pride And Prejudice&lt;/title&gt;     &lt;/book&gt;     &lt;book genre='novel' ISBN='1-81920-21-2'&gt;        &lt;title&gt;Hook&lt;/title&gt;     &lt;/book&gt;   &lt;/library&gt;   ```</ph>       <ph id="ph4">`print_root.xsl`</ph>      <ph id="ph5">```   &lt;style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" &gt;     &lt;output method="text" /&gt;     &lt;template match="/"&gt;     Root node is  &lt;value-of select="local-name(//*[position() = 1])" /&gt;      &lt;/template&gt;   &lt;/style sheet&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, this can be either an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (typically an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or an <bpt id="p3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.Stream&gt;.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>After the transformation has been performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p2">&lt;/code&gt;</ept> and outputs the result to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>After the transformation is performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The encoding attribute on an <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to a &lt;xref:System.IO.TextWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for specifics on which <ph id="ph1">`xsl:output`</ph> attributes are supported.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Transforms the XML data in the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified args and outputs the result to an &lt;xref:System.Xml.XmlWriter&gt;.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Xsl.XslTransform&gt; supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>The XSLT style sheet must include the namespace declaration <ph id="ph1">`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`</ph>.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> are matched with the <ph id="ph2">`xsl:param`</ph> elements defined in the style sheet.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>The transformation selections apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>After the transformation is performed, the &lt;xref:System.Xml.XPath.XPathNavigator&gt; remains in its original state.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>This means that the node, that is current before the transformation process, remains the current node after the Transform method has been called.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsl:output`</ph> element is not supported when outputting to an &lt;xref:System.Xml.XmlWriter&gt; (<ph id="ph2">`xsl:output`</ph> is ignored).</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Outputs from an XslTransform<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the namespace-qualified arguments used as input to the transformation.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to which you want to output.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve the XSLT <ph id="ph1">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not cached after the Transform method completes.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>There was an error processing the XSLT transformation.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Note: This is a change in behavior from earlier versions.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Xsl.XsltException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve external resources when the &lt;xref:System.Xml.Xsl.XslTransform.Transform*&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The &lt;xref:System.Xml.Xsl.XslTransform&gt; class is obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Xsl.XslCompiledTransform&gt; class is the new XSLT processor.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:       <ph id="ph1">`Fully trusted code:`</ph> A default &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials is used to resolve the <ph id="ph2">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>If authentication is required to access the external resource, use this property to specify an &lt;xref:System.Xml.XmlResolver&gt; with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Semi-trusted code:`</ph> The property is set to <ph id="ph2">`null`</ph>, which means the <ph id="ph3">`document()`</ph> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Because full trust is required to specify an &lt;xref:System.Xml.XmlResolver&gt;, this property also cannot be set.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>This resolver is used when the XSLT <ph id="ph1">`document()`</ph> function is invoked.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>It is not used to resolve <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements referenced in the style sheet.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>To specify an &lt;xref:System.Xml.XmlResolver&gt; to use to resolve <ph id="ph1">`xsl:import`</ph> and <ph id="ph2">`xsl:include`</ph> elements referenced in the style sheet, use the &lt;xref:System.Xml.Xsl.XslTransform.Load%2A&gt; overload, which takes an &lt;xref:System.Xml.XmlResolver&gt; as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property is obsolete in version 1.1 of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Specifying an &lt;xref:System.Xml.XmlResolver&gt; using the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method is the recommended practice.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Xml.XmlResolver&gt; is not cached after the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method completes.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use during transformation.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>If set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the XSLT <ph id="ph1">`document()`</ph> function is not resolved.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>