<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d6230c4c4bd3993630473972903ec36866d0ed6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.MultiBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">962412977320d8e40ff188e288c45d219633897d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffaad4f35a9becd850c33b058248a75bf8415add</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes a collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects attached to a single binding target property.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify multiple bindings in a MultiBinding object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the MultiBinding object with a converter, it produces a final value for the binding target based on the values of those bindings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, color might be computed from red, blue, and green values, which can be values from the same or different binding source objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a value moves from the target to the sources, the target property value is translated to a set of values that are fed back into the bindings.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; and &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt; properties determine the functionality of the MultiBinding and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; property on the MultiBinding object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; value on one of the bindings explicitly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>MultiBinding currently supports only objects of type &lt;xref:System.Windows.Data.Binding&gt; and not MultiBinding or &lt;xref:System.Windows.Data.PriorityBinding&gt;.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects within this <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the syntax that is shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property used to access the collection object is read-only, whereas the collection itself is read/write.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Bindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     oneOrMoreBindings   &lt;/object&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Bindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Data.Binding&gt; objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> currently supports only objects of type <bpt id="p2">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and not <bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adding a <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> child to a <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object implicitly adds the child to the <bpt id="p3">&lt;xref href="System.Windows.Data.BindingBase"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> collection for the <bpt id="p4">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the converter to use to convert the source values to or from the target value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Individual bindings in the collection can have their own value &lt;xref:System.Windows.Data.Binding.Converter%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Data.IValueConverter&gt;.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;objectÂ Converter="myConverter"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>    A resource reference to a class that implements the &lt;xref:System.Windows.Data.IMultiValueConverter&gt; interface, which includes implementations of the &lt;xref:System.Windows.Data.IMultiValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Data.IMultiValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the converter to use.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Globalization.CultureInfo&gt; object that applies to any converter assigned to bindings wrapped by the <bpt id="p1">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or on the <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> itself.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ConverterCulture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;objectÂ ConverterCulture="ietfLanguageTag"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ConverterCulture"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>ietfLanguageTag<ept id="p3">*</ept>    A string used to set the &lt;xref:System.Globalization.CultureInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This string is used to internally call.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on the string format, see &lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A valid &lt;xref:System.Globalization.CultureInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets an optional parameter to pass to a converter as additional information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ConverterParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ConverterParameter&gt;       converterParameter     &lt;/object.ConverterParameter&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlAttributeUsage_ConverterParameter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph2">```   &lt;objectÂ property="converterParameter" /&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_ConverterParameter"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>converterParameter<ept id="p4">*</ept>    A value of the type expected by the converter, which might be an object element or a string depending on the definition and XAML capabilities both of the property type being used and of the implementation of the converter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The converter takes in that type through the <ph id="ph1">`parameter`</ph> parameter as defined by its &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; implementations.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A parameter to pass to a converter.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the direction of the data flow of this binding.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the Mode and &lt;xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A&gt; properties determine the functionality of the &lt;xref:System.Windows.Data.MultiBinding&gt; and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the Mode property on the &lt;xref:System.Windows.Data.MultiBinding&gt; object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different Mode value on one of the bindings explicitly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default binding mode value of the target dependency property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, the default value varies for each dependency property.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In general, user-editable control properties, such as <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p1">*</bpt>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault<ept id="p1">*</ept>&gt; property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event when a value is transferred from the binding target to the binding source.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.SourceUpdated"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event will be raised when the binding source value is updated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event when a value is transferred from the binding source to the binding target.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.TargetUpdated"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event will be raised when the binding target value is updated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event on the bound element.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event will be raised on the bound element when there is a validation error during source updates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.MultiBinding.Bindings*&gt; property should be persisted.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.MultiBinding.Bindings%2A&gt; property does not have a simple default value.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.MultiBinding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules*&gt; property should be persisted.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property does not have a simple default value.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.MultiBinding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds a child object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The child object to add.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Adds the text content of a node to the object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The text to add to the object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is only applicable if you have associated the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with your <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class represents a built-in validation rule that checks for exceptions that are thrown during the update of the binding source properties.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have associated the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; object with your &lt;xref:System.Windows.Data.MultiBinding&gt; object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; and UpdateSourceTrigger properties determine the functionality of the &lt;xref:System.Windows.Data.MultiBinding&gt; and are used as the default values for all the bindings in the collection unless an individual binding overrides these properties.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; property on the &lt;xref:System.Windows.Data.MultiBinding&gt; object is set to &lt;xref:System.Windows.Data.BindingMode&gt;, then all the bindings in the collection are considered &lt;xref:System.Windows.Data.BindingMode&gt; unless you set a different &lt;xref:System.Windows.Data.MultiBinding.Mode%2A&gt; value on one of the bindings explicitly.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName&gt; properties.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value of the target dependency property.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>However, the default value for most dependency properties is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, while the &lt;xref:System.Windows.Controls.TextBox.Text<bpt id="p2">*</bpt>&gt; property has a default value of <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.       A programmatic way to determine the default &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger<ept id="p2">*</ept>&gt; value of a dependency property is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p4">*</bpt>&gt; and then check the value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger<ept id="p4">*</ept>&gt; property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; element explicitly.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; is a built-in validation rule that checks for errors that are raised by the &lt;xref:System.ComponentModel.IDataErrorInfo&gt; implementation of the source object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error is raised, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; element explicitly.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process for &lt;xref:System.Windows.Data.MultiBinding&gt; objects, see the &lt;xref:System.Windows.Data.MultiBinding.ValidationRules%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnExceptions is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>When ValidatesOnNotifyDataErrors is <ph id="ph1">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets the collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects for this instance of <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set validation rules on both the &lt;xref:System.Windows.Data.MultiBinding&gt; object and the individual &lt;xref:System.Windows.Data.Binding&gt; objects in the &lt;xref:System.Windows.Data.MultiBinding&gt; object.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding engine evaluates the ValidationRules on the &lt;xref:System.Windows.Data.MultiBinding&gt; object when a value moves from the binding target property to the &lt;xref:System.Windows.Data.IMultiValueConverter&gt; object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>After that, when a value moves from the converter to the binding source property of an individual binding, the binding engine evaluates the &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; on that &lt;xref:System.Windows.Data.Binding&gt; object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the validation process and how to provide visual feedback upon invalidation, see "Data Validation" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property used to access the collection object is read-only, whereas the collection itself is read-write.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Controls.ValidationRule&gt; objects.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class or create your custom rules by subclassing the &lt;xref:System.Windows.Controls.ValidationRule&gt; class.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects for this instance of <bpt id="p2">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>