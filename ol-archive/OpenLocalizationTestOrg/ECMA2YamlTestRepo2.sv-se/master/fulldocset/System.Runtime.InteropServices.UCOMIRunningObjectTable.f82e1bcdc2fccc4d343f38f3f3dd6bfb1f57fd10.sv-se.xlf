<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">262a681c9723fd64e221c3f0c09b549b769e0c94</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.UCOMIRunningObjectTable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0595efa5ec8e1db4c2521b943d80d8c4a3e07c11</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23048945ec256ecd9357f9b48a7d1bb0adc74cad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.InteropServices.ComTypes.IRunningObjectTable?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable`</ph> in the com subfolder of the MSDN library.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enumerates the objects currently registered as running.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::EnumRunning`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>On successful return, the new enumerator for the ROT.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns the registered object if the supplied object name is registered as running.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::GetObject`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Reference to the moniker to search for in the ROT.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>On successful return, contains the requested running object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Searches for this moniker in the ROT and reports the recorded time of change, if present.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::GetTimeOfLastChange`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reference to the moniker to search for in the ROT.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On successful return, contains the objects last change time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Determines if the specified moniker is currently registered in the Running Object Table.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::IsRunning`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Reference to the moniker to search for in the Running Object Table.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Makes a note of the time that a particular object has changed so <bpt id="p1">&lt;xref uid="langword_csharp_IMoniker::GetTimeOfLastChange" name="IMoniker::GetTimeOfLastChange" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can report an appropriate change time.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::NoteChangeTime`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ROT entry of the changed object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reference to the object's last change time.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Registers that the supplied object has entered the running state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::Register`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specifies whether the Running Object Table's (ROT) reference to <ph id="ph1">`punkObject`</ph> is weak or strong, and controls access to the object through its entry in the ROT.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Reference to the object being registered as running.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Reference to the moniker that identifies <ph id="ph1">`punkObject`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to &lt;xref:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime<ept id="p1">*</ept>&gt;.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Unregisters the specified object from the ROT.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, please see the existing documentation for <ph id="ph1">`IRunningObjectTable::Revoke`</ph> in the MSDN library.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The ROT entry to revoke.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>