<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ad8edce4d94157fda2057cf709dfbb3426bd2be</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f867523beafabbf48f41c9ccea457d230bfbea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3383aa117017c3e5bdedb0ed2a60399948f1b4fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base definitions for classes that consume XAML input and produce XAML node streams.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XamlReader is an abstract class and does not provide implementations or definitions that have a working result for all members.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Members that do have an implementation in XamlReader are noted in the remarks for that member.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifically, XamlReader has several abstract members that must be implemented, and several virtual members.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Of the virtual members, &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; and &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; each provide a default implementation that is appropriate for most cases.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, the &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; and &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the &lt;xref:System.Xaml.XamlReader.Read%2A&gt; override.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt; is also a virtual member that has a working default implementation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:      -   &lt;xref:System.Xaml.XamlObjectReader&gt;, which reads an object graph, such as the active object graph of an application at run time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlXmlReader&gt;, which reads XAML in the form of a XML text file by using a general &lt;xref:System.Xml.XmlReader&gt; that loads the file as an intermediary helper class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Other XAML readers from other frameworks include &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt; and &lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XamlReader differs from <ph id="ph1">[!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)]</ph> and &lt;xref:System.Xml.XmlReader&gt; design principles because XamlReader does not have a <ph id="ph2">`Create`</ph> method to return underlying default XAML reader implementations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Subtree Readers    For the most part, you call XamlReader API in the context of specific XAML reader classes that derive from XamlReader.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, in one particular case, you access XamlReader API on a practical XAML reader instance that is not public and not derived from &lt;xref:System.Xaml.XamlObjectReader&gt; or &lt;xref:System.Xaml.XamlXmlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This case is when you call &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;, which returns a XamlReader instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the default implementation, the XamlReader that is returned by this API is an internal class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The XamlReader obtained for subtree reading has valid actions for APIs such as &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;, and those actions are based on the parent reader class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This design enables the internal class to track the frame level where the subtree was entered.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The acting subtree XamlReader makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or <ph id="ph1">`null`</ph> at the current node.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Notes about subtree reader usage are included on certain XamlReader APIs.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Closes the XAML node stream.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the base implementation, calling Close calls &lt;xref:System.Xaml.XamlReader.Dispose%2A&gt; with the <ph id="ph1">`isDisposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and optionally, releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You must call the base class to get &lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt; = <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release the managed resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets whether &lt;xref:System.Xaml.XamlReader.Dispose*&gt; has been called.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.Xaml.XamlReader.Dispose*&gt; has been called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Subtree readers can call IsEof, with behavior that correctly reflects the bounds of the entered subtree.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Member, with behavior restrictions.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The current member; or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the reader position is not on a member.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the XAML namespace information from the current node.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The intended design of this API is to return a non-null result only if the &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; of the current node is &lt;xref:System.Xaml.XamlNodeType&gt;.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt; for notes on the reference implementation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The XAML namespace information, if it is available; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the type of the current node.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Subtree readers can call NodeType, with behavior restrictions.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, provides the next XAML node from the source, if a node is available.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Read, with behavior restrictions.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a node is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on the current <bpt id="p2">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, where the returned <bpt id="p3">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is used to iterate through a subtree of the XAML node structure.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method has a default implementation and returns a valid &lt;xref:System.Xaml.XamlReader&gt;.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Xaml.XamlReader&gt; is an internal class that restricts certain &lt;xref:System.Xaml.XamlReader&gt; actions.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or <ph id="ph1">`null`</ph> at the current node when the subtree is exited.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Generally, you should check the current node from the initial &lt;xref:System.Xaml.XamlReader.Read%2A&gt; to determine whether you need a subtree reader.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In addition, avoid invoking a subtree reader for certain node cases (for example, for &lt;xref:System.Xaml.XamlNodeType&gt;) that cannot contain a subtree of nodes.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>After you obtain a subtree reader, you must call &lt;xref:System.Xaml.XamlReader.Read%2A&gt; on it to obtain a current node (or call &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; to obtain a next node).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You do not automatically obtain an initial node position from the subtree reader when you create it.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The reader you obtain by calling ReadSubtree from this default implementation is an internal class.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The internal class bases its behavior on the &lt;xref:System.Xaml.XamlReader&gt; implementation that is being used when ReadSubtree is called.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The purpose of the internal class is to wrap the &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and general traversal behavior.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The traversal stays within the intended subtree by keeping track of &lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt; pairs or &lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt; pairs.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It also correctly returns <ph id="ph1">`false`</ph> for &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and <ph id="ph2">`true`</ph> for &lt;xref:System.Xaml.XamlReader.IsEof%2A&gt; when the reader is at the end of the subtree, as defined by its entry point.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In general, you assume that any &lt;xref:System.Xaml.XamlReader&gt; API you call from a subtree reader has the same implementation as the overall &lt;xref:System.Xaml.XamlReader&gt; except for the traversal bounding behavior.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>However, ReadSubtree is virtual.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Therefore, a specific &lt;xref:System.Xaml.XamlReader&gt; implementation can provide behavior that differs from the &lt;xref:System.Xaml.XamlReader&gt; internal wrapper behavior; and a &lt;xref:System.Xaml.XamlReader&gt; implementation can even disable subtree reader functionality by returning &lt;xref:System.NotImplementedException&gt; or other exceptions.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A new XAML reader instance for the subtree.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An object that provides XAML schema context information for the information set.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Skips the current node and advances the reader position to the next node.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once skipped, &lt;xref:System.Xaml.XamlReader.Read%2A&gt; is called by the default Skip implementation.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You typically do not call Skip and &lt;xref:System.Xaml.XamlReader.Read%2A&gt; in sequence.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the default Skip implementation, different actions are taken depending on which &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; the reader position is currently on.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the reader position is currently on a &lt;xref:System.Xaml.XamlNodeType&gt; or &lt;xref:System.Xaml.XamlNodeType&gt;, that member or object is skipped.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For other &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; values, no action is taken other than calling &lt;xref:System.Xaml.XamlReader.Read%2A&gt; from the current position.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Skip, with behavior restrictions.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The node tree behavior of Skip is based on the XML equivalent &lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Based on the &lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt; behavior equivalence, Skip skips the node and its subtree, not just the single entry node.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the current node.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Type, with behavior restrictions.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the current node; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if the current reader position is not on an object.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the value of the current node.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value of the current node; or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the current reader position is not on a <bpt id="p2">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> node type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>