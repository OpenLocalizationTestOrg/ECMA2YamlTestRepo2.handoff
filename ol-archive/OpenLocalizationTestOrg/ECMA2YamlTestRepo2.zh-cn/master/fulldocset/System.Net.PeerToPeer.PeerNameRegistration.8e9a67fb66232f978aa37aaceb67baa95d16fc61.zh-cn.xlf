<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61d3ae07b17761b12df927bbda4e860477179372</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.PeerToPeer.PeerNameRegistration.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94118320634a6fed31a43330f8d55895b71da71e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">deb5699149fd186fd480bc18118a283e99b88300</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Registers a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; in a <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or set of clouds.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Registration creates (or updates) all the information that is associated with a &lt;xref:System.Net.PeerToPeer.PeerName&gt; in a peer cloud or clouds.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is possible to have multiple PeerNameRegistration objects for the same peer name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In such a case, if the peer name is secured, each instance represents PeerNameRegistration in a different cloud.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new default instance of the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Returns a new default instance of type &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It does not perform peer name registration during construction.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt; or &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name and port number.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the object is constructed successfully, the specified &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt; and &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt; are populated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the peer name is secured and was previously registered in a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt; the peer is currently participating in, an &lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt; is thrown.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This constructor only creates a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt; instance; it does not perform the registration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt; to perform the actual registration.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to register.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Integer value that specifies the port number to register.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The specified port number is less than zero.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-</ph>   The <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified has already been registered from this host.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   The remote peer does not own the &lt;xref:System.Net.PeerToPeer.PeerName.Authority*&gt; for the supplied <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new serializable <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Context that provides the means for deserializing the data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Also referred to as the source of the serialized data.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified peer name, port number, and <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the object is constructed successfully, the properties are populated with the specified &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;, &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt; and &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the &lt;xref:System.Net.PeerToPeer.Cloud.Available&gt; shortcut, which initializes default values for the &lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;, &lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;, and &lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After instantiation, the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt; method must be called to register the &lt;xref:System.Net.PeerToPeer.PeerName&gt;.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to register.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Integer value that specifies the port number to register.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which to register the peer name.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The specified port number is less than zero.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-</ph>   The <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified has already been registered from this host.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-   The remote peer does not own the &lt;xref:System.Net.PeerToPeer.PeerName.Authority*&gt; for the supplied <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets information in a Cloud into which this &lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*&gt; object will be registered.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object of type <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the peer cloud for which this registration is defined.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by default.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets additional information about the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that will be registered with the <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comment that contains additional information about the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to associate with the <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by default.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The specified string value is greater than 39 Unicode characters.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets application-defined binary data for the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The maximum amount of Data that can be supplied is 4,096 bytes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by default.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The specified Data is greater than 4096 bytes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the &lt;xref:System.Net&gt; namespace, an &lt;xref:System.Net.IPEndPoint&gt; represents a network endpoint as an IP address and a port number.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The maximum number of endpoints that can be provided is ten.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>That is, the EndPointCollection property will not be updated to reflect the addresses selected.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When a peer name is registered for more than one node, each &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt; is distinct and the EndPointCollection property defined on each registration instance will be different.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Also, when a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt; is registered into more than one &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*&gt; object that contains the network endpoints for which the associated peer name is registered.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for all properties is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for reference types.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Holds the serialized data associated with the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Contains destination for the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; property is registered with a specific <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on a host.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the peer name is registered with a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud<bpt id="p2">*</bpt>&gt; for the peer host. If <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, then the registration process can be started with &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start<ept id="p2">*</ept>&gt;.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An object that has been disposed already cannot be registered.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A peer name can be registered for more than one node; each &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt; instance is distinct.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt; property associated with each corresponding &lt;xref:System.Net.PeerToPeer.PeerName&gt; instance is different.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The peer name's &lt;xref:System.Net.IPEndPointCollection&gt; will be different in each of these instances.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An object of type <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains values associated with this <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for all properties is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for reference types.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default port is used by the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt; method only when no endpoints are specified.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An integer value indicating the TCP port number of the &lt;xref:System.Net.IPEndPoint&gt;.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The specified port value is less than zero.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Registers the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName<bpt id="p1">*</bpt>&gt; into the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud<ept id="p1">*</ept>&gt;.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If no &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection<bpt id="p1">*</bpt>&gt; is specified, automatic address selection is used with the port value specified by the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port<ept id="p1">*</ept>&gt; property.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The method registers the peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt; property with all source addresses and the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt; specified in the constructor.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default port is used by this method only when no endpoints are specified.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt; property is <ph id="ph1">`null`</ph>, this method registers the peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt; property using the &lt;xref:System.Net.PeerToPeer.Cloud.Available&gt; field, which initializes default values for the &lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;, &lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;, and &lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>After a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt; object has been started, the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt; method is used to stop it.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To update a registration, the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt; method must be used.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This object had Dispose() called on it previously.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-</ph>   The <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified has already been registered.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update<bpt id="p1">*</bpt>&gt; method must be used to update a registration.      -   The remote peer does not own the &lt;xref:System.Net.PeerToPeer.PeerName.Authority<ept id="p1">*</ept>&gt; for the <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> specified.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-   Either the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or the &lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data<bpt id="p2">*</bpt>&gt; is not specified; at least one needs to be provided.      -   The message or data elements are invalid. Or, &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection<ept id="p2">*</ept>&gt; is not set and no data blob or &lt;xref:System.Net.IPEndPoint&gt; is specified.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Unregisters the peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; property from all the clouds in which it was registered.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In this state, all of its properties are assumed to have no value.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt; method may be used to restart it.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If this instance is already stopped, calling this method has no effect.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName<bpt id="p1">*</bpt>&gt; property has not yet been registered. This occurs when a <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is constructed using the empty constructor. The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName<ept id="p1">*</ept>&gt; property must be populated in this instance prior to calling &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start*&gt;.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This object had Dispose() called on it previously.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Holds the serialized data associated with the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Contains the destination for the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Updates the <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a node registered with a specific <bpt id="p2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Update is performed using the information specified in the properties.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>All information registered in cloud(s) for this &lt;xref:System.Net.PeerToPeer.PeerName&gt; prior to the call is completely discarded.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The new data is not combined with the existing registration.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To update a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;, first update the properties on this instance and then call this method.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>After a &lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt; is registered, the &lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt; property cannot be updated.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>All other fields in the record may be updated.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-</ph>   The &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName<bpt id="p1">*</bpt>&gt; property has not yet been registered. The Update method cannot be called until the peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName<ept id="p1">*</ept>&gt; property is registered in one or more clouds.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-   The peer name specified in the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*&gt; property has changed since the corresponding <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was registered.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An object that has been disposed cannot be registered.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*&gt;.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a &lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the port is not specified, auto selection chooses zero as the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the &lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt; property).</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No endpoints are associated with the name.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the &lt;xref:System.Net.PeerToPeer.PeerName&gt; object was registered.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>That is, the &lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt; property will not be updated to reflect the addresses selected.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Updating this property after peer name registration has started has no effect.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic endpoint selection is to be used; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if some other method will be used to determine an endpoint.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>