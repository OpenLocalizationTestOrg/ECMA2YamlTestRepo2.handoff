<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c1e3392fda5d57083464154efb0c888f2b2ff87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.RijndaelManagedTransform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f46d31e65df09a67e1d54decd2428c825350eaaf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52cea208a59628bcceb08353e1b87bfd029f6500</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performs a cryptographic transformation of data using the Rijndael algorithm.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  Using this class is not recommended.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A better practice is to use &lt;xref:System.Security.Cryptography.RijndaelManaged&gt; with a &lt;xref:System.Security.Cryptography.CryptoStream&gt; object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.CryptoStream&gt; object handles the padding issues that can occur when using RijndaelManagedTransform directly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an example, see the &lt;xref:System.Security.Cryptography.RijndaelManaged&gt; class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Both the &lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt; and &lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt; methods return an instance of the RijndaelManagedTransform class that is initialized with the key information of the current &lt;xref:System.Security.Cryptography.RijndaelManaged&gt; object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To encrypt or decrypt data using the Rijndael algorithm, pass the RijndaelManagedTransform object returned by these methods to a &lt;xref:System.Security.Cryptography.CryptoStream&gt; object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the block size.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The size of the data blocks in bytes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether multiple blocks can be transformed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if multiple blocks can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RijndaelManagedTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method is a simple call to &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt; to be reallocated for other purposes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RijndaelManagedTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt; in an unusable state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt; was occupying.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the input block size.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The size of the input data blocks in bytes.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the output block size.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The size of the output data blocks in bytes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Resets the internal state of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RijndaelManagedTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> so it can be used again to do a different encryption or decryption.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Reset method is called automatically when you call &lt;xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Reset method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this case, an exception is thrown and Reset is not called.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can choose to manually call the Reset method in this case.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The input to perform the operation on.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array to begin using data from.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The output to write the data to.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array to begin writing data from.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">outputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The length of the input buffer is less than the sum of the input offset and the input count.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-       The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-       The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inputBuffer</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not evenly devisable by input block size.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Computes the transformation for the specified region of the specified byte array.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The input to perform the operation on.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The offset into the byte array to begin using data from.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The computed transformation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-       The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is grater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inputBuffer</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not evenly devisable by input block size.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>